<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626991-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626991</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13174639</doc-number>
<date>20110630</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>132</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>11</class>
<subclass>C</subclass>
<main-group>16</main-group>
<subgroup>10</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>12</main-group>
<subgroup>02</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>711103</main-classification>
<further-classification>711154</further-classification>
<further-classification>711E12008</further-classification>
<further-classification>711E12009</further-classification>
<further-classification>707693</further-classification>
</classification-national>
<invention-title id="d2e53">Multi-LUN SSD optimization system and method</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6850443</doc-number>
<kind>B2</kind>
<name>Lofgren et al.</name>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>365218</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7188228</doc-number>
<kind>B1</kind>
<name>Chang et al.</name>
<date>20070300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711202</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7552272</doc-number>
<kind>B2</kind>
<name>Gonzalez et al.</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2003/0172149</doc-number>
<kind>A1</kind>
<name>Edsall et al.</name>
<date>20030900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709224</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2004/0083335</doc-number>
<kind>A1</kind>
<name>Gonzalez et al.</name>
<date>20040400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2005/0281095</doc-number>
<kind>A1</kind>
<name>Eilert et al.</name>
<date>20051200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>36518912</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2006/0106972</doc-number>
<kind>A1</kind>
<name>Gorobets et al.</name>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2006/0161725</doc-number>
<kind>A1</kind>
<name>Lee et al.</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2007/0233931</doc-number>
<kind>A1</kind>
<name>Tanaka et al.</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711  5</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2008/0147964</doc-number>
<kind>A1</kind>
<name>Chow et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2008/0155183</doc-number>
<kind>A1</kind>
<name>Zhuang et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2008/0297199</doc-number>
<kind>A1</kind>
<name>Grunzke</name>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>36518911</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2009/0168525</doc-number>
<kind>A1</kind>
<name>Olbrich et al.</name>
<date>20090700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>365191</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2009/0172257</doc-number>
<kind>A1</kind>
<name>Prins et al.</name>
<date>20090700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2009/0259797</doc-number>
<kind>A1</kind>
<name>Meir</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2010/0153620</doc-number>
<kind>A1</kind>
<name>McKean et al.</name>
<date>20100600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2011/0078496</doc-number>
<kind>A1</kind>
<name>Jeddeloh</name>
<date>20110300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714  624</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2011/0161553</doc-number>
<kind>A1</kind>
<name>Saxena et al.</name>
<date>20110600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2011/0299317</doc-number>
<kind>A1</kind>
<name>Shaeffer et al.</name>
<date>20111200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>365106</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2012/0284587</doc-number>
<kind>A1</kind>
<name>Yu et al.</name>
<date>20121100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711103</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00021">
<othercit>KingMax. &#x201c;SuperStick (USB 2.0) Specification.&#x201d; Version 1.0. Sep. 23, 2008.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00022">
<othercit>Werner, Jeremy. &#x201c;A Look Under the Hood at Some Unique SSD Features.&#x201d; Flash Memory Summit 2010. Santa Clara, Calif. Aug. 2010. Retrieved Jul. 8, 2011. &#x3c;http://www.bswd.com/FMS10/FMS10-Werner.pdf&#x3e;.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00023">
<othercit>Feng Chen et al. &#x201c;Essential roles of exploiting internal parallelism of flash memory based solid state drives in high-speed data processing.&#x201d; IEEE 17th International Symposium on High Performance Computer Architecture (HPCA 2011), Feb. 12, 2011, pp. 266-277.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00024">
<othercit>Park et al. (&#x201c;CFLRU: A Replacement Algorithm for Flash Memory.&#x201d; CASES '06: Proceedings of the 2006 international conference on Compilers, Architecture and Synthesis for Embedded Systems. ACM, Oct. 2006.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00025">
<othercit>&#x201c;USB Flash Wear-Leveling and Life Span: Frequently Asked Questions.&#x201d; Corsair, Jun. 2007.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00026">
<othercit>Perdue, Ken. &#x201c;Application Note: Wear Leveling,&#x201d; Rev. 01. Spansion, Apr. 30, 2008.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00027">
<othercit>&#x201c;Wear Leveling: Extended Product Lifespan.&#x201d; Apacer Technology, Inc., 2010. Retrieved Apr. 26, 2011. &#x3c;http://web.archive.org/web/20110426211246/http://us.apacer=.com/business/technology/wear-leveling&#x3e;.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
</us-references-cited>
<number-of-claims>18</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>5</number-of-drawing-sheets>
<number-of-figures>5</number-of-figures>
</figures>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Beauchamp</last-name>
<first-name>Robert W.</first-name>
<address>
<city>Littleton</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Beauchamp</last-name>
<first-name>Robert W.</first-name>
<address>
<city>Littleton</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Colandreo</last-name>
<first-name>Brian J.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>Whittenberger</last-name>
<first-name>Mark H.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="03" rep-type="attorney">
<addressbook>
<orgname>Holland &#x26; Knight LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>EMC Corporation</orgname>
<role>02</role>
<address>
<city>Hopkinton</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Bradley</last-name>
<first-name>Matthew</first-name>
<department>2182</department>
</primary-examiner>
<assistant-examiner>
<last-name>Bernard</last-name>
<first-name>Daniel</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method, computer program product, and computing system for dividing a physical memory device into at least a first logical memory device and a second logical memory device. The physical memory device includes a plurality of physical memory elements. A first portion of the plurality of physical memory elements is assigned to the first logical memory device. A second portion of the plurality of physical memory elements is assigned to the second logical memory device.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="111.84mm" wi="239.35mm" file="US08626991-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="198.97mm" wi="177.63mm" orientation="landscape" file="US08626991-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="160.10mm" wi="201.68mm" orientation="landscape" file="US08626991-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="187.11mm" wi="179.24mm" orientation="landscape" file="US08626991-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="191.43mm" wi="160.78mm" orientation="landscape" file="US08626991-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="240.88mm" wi="160.78mm" orientation="landscape" file="US08626991-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">TECHNICAL FIELD</heading>
<p id="p-0002" num="0001">This disclosure relates to solid-state storage devices and, more particularly, to wear-leveling solid-state storage devices.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">Solid-state storage devices (such as flash memory devices) have a downside in that the storage device is degraded each time that data is written to it. Specifically, each storage cell within the solid-state storage device can typically only be written to approximately 10,000 times and then it may no longer work.</p>
<p id="p-0004" num="0003">Accordingly, wear-leveling methodologies are often employed to move data around to wear out the entire storage device simultaneously. These devices usually utilize extra &#x201c;hidden&#x201d; storage capacity (i.e. over-provisioning space) so that data may be swapped into these &#x201c;hidden&#x201d; areas to increase the likelihood of more uniform wear and to also allow the solid-state storage device to maintain its rated capacity even after the individual storage cells begin to fail. Typically the extra &#x201c;hidden&#x201d; storage capacity (i.e. the over-provisioning space) is a fairly significant amount (e.g., 40% to the total capacity). Accordingly, a 500 gigabyte drive may have approximately 200 gigabytes of extra &#x201c;hidden&#x201d; storage capacity available for swapping.</p>
<p id="p-0005" num="0004">Often, solid-state storage technology is used in memory vaulting applications. As is known in the art, memory vaulting is the process of storing a &#x201c;snapshot&#x201d; of the content of volatile memory at the time of a power/system failure. Accordingly, once the power/system is restored, the volatile memory may be repopulated with the data included within the snapshot and the system associated with the volatile memory may resume functioning as it had just prior to the power/system failure. Accordingly, through the memory vaulting process, the impact associated with a power/system failure may be reduced, as the impacted system may quickly return to functionality once the power/system failure is rectified.</p>
<p id="p-0006" num="0005">As memory vaulting only occurs during a power/system failure event, the individual storage cells included within the solid-state storage device used for memory vaulting are essentially only written to and read from once for each power/system failure event. Accordingly and due to such a low quantity of write operations, such memory vaulting systems exhibit disproportionately little wear when compared to other portions of the solid-state storage device that may be perform tasks that exhibit much greater wear (e.g., cache storage).</p>
<heading id="h-0003" level="1">SUMMARY OF DISCLOSURE</heading>
<p id="p-0007" num="0006">In a first implementation, a computer-implemented method includes dividing a physical memory device into at least a first logical memory device and a second logical memory device. The physical memory device includes a plurality of physical memory elements. A first portion of the plurality of physical memory elements is assigned to the first logical memory device. A second portion of the plurality of physical memory elements is assigned to the second logical memory device.</p>
<p id="p-0008" num="0007">One or more of the following features may be included. A first physical memory element included within the first portion of the plurality of physical memory elements may be traded with a second physical memory element included within the second portion of the plurality of physical memory elements to promote wear leveling across the physical memory device. One or more of the first physical memory element and/or the second physical memory element may be chosen from the group consisting of: a high-wear functioning physical memory element, a low-wear functioning physical memory element, and a failed physical memory element. Dividing the physical memory device into at least a first logical memory device and a second logical memory device may include dividing the physical memory device into at least one additional logical memory device; and assigning an additional portion of the plurality of physical memory elements to the at least one additional logical memory device. The physical memory device may be a flash memory device. The physical memory element may be a physical erase-block. The physical erase-block may include a plurality of physical memory pages.</p>
<p id="p-0009" num="0008">In another implementation, a computer program product resides on a computer readable medium and has a plurality of instructions stored on it. When executed by a processor, the instructions cause the processor to perform operations including dividing a physical memory device into at least a first logical memory device and a second logical memory device. The physical memory device includes a plurality of physical memory elements. A first portion of the plurality of physical memory elements is assigned to the first logical memory device. A second portion of the plurality of physical memory elements is assigned to the second logical memory device.</p>
<p id="p-0010" num="0009">One or more of the following features may be included. A first physical memory element included within the first portion of the plurality of physical memory elements may be traded with a second physical memory element included within the second portion of the plurality of physical memory elements to promote wear leveling across the physical memory device. One or more of the first physical memory element and/or the second physical memory element may be chosen from the group consisting of: a high-wear functioning physical memory element, a low-wear functioning physical memory element, and a failed physical memory element. Dividing the physical memory device into at least a first logical memory device and a second logical memory device may include dividing the physical memory device into at least one additional logical memory device; and assigning an additional portion of the plurality of physical memory elements to the at least one additional logical memory device. The physical memory device may be a flash memory device. The physical memory element may be a physical erase-block. The erase-block may include a plurality of physical memory pages.</p>
<p id="p-0011" num="0010">In another implementation, a computing system includes at least one processor and at least one memory architecture coupled with the at least one processor. A first software module is executed on the at least one processor and the at least one memory architecture. The first software module is configured to perform operations including dividing a physical memory device into at least a first logical memory device and a second logical memory device. The physical memory device includes a plurality of physical memory elements. A second software module is executed on the at least one processor and the at least one memory architecture. The second software module is configured to perform operations including assigning a first portion of the plurality of physical memory elements to the first logical memory device. A third software module is executed on the at least one processor and the at least one memory architecture. The third software module is configured to perform operations including assigning a second portion of the plurality of physical memory elements to the second logical memory device.</p>
<p id="p-0012" num="0011">One or more of the following features may be included. A first physical memory element included within the first portion of the plurality of physical memory elements may be traded with a second physical memory element included within the second portion of the plurality of physical memory elements to promote wear leveling across the physical memory device. One or more of the first physical memory element and/or the second physical memory element may be chosen from the group consisting of: a high-wear functioning physical memory element, a low-wear functioning physical memory element, and a failed physical memory element. Dividing the physical memory device into at least a first logical memory device and a second logical memory device may include dividing the physical memory device into at least one additional logical memory device; and assigning an additional portion of the plurality of physical memory elements to the at least one additional logical memory device. The physical memory device may be a flash memory device. The physical memory element may be a physical erase-block. The physical erase-block may include a plurality of physical memory pages.</p>
<p id="p-0013" num="0012">The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features and advantages will become apparent from the description, the drawings, and the claims.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 1</figref> is a diagrammatic view of a computing device and a wear-leveling process;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 2</figref> is a flowchart of the wear-leveling process of <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 3</figref> is a diagrammatic view of a physical memory device that executes the wear-leveling process of <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 4</figref> is a diagrammatic view of a portion of the physical memory device of <figref idref="DRAWINGS">FIG. 3</figref>; and</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 5</figref> is a diagrammatic view of a portion of the physical memory device of <figref idref="DRAWINGS">FIG. 3</figref>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<p id="p-0019" num="0018">Like reference symbols in the various drawings indicate like elements.</p>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
<heading id="h-0006" level="1">System Overview</heading>
<p id="p-0020" num="0019">As will be appreciated by one skilled in the art, the present disclosure may be embodied as a method, system, or computer program product. Accordingly, the present disclosure may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a &#x201c;circuit,&#x201d; &#x201c;module&#x201d; or &#x201c;system.&#x201d; Furthermore, the present disclosure may take the form of a computer program product on a computer-usable storage medium having computer-usable program code embodied in the medium.</p>
<p id="p-0021" num="0020">Any suitable computer usable or computer readable medium may be utilized. The computer-usable or computer-readable medium may be, for example but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, device, or propagation medium. More specific examples (a non-exhaustive list) of the computer-readable medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a transmission media such as those supporting the Internet or an intranet, or a magnetic storage device. Note that the computer-usable or computer-readable medium could even be paper or another suitable medium upon which the program is printed, as the program can be electronically captured, via, for instance, optical scanning of the paper or other medium, then compiled, interpreted, or otherwise processed in a suitable manner, if necessary, and then stored in a computer memory. In the context of this document, a computer-usable or computer-readable medium may be any medium that can contain, store, communicate, propagate, or transport the program for use by or in connection with the instruction execution system, apparatus, or device. The computer-usable medium may include a propagated data signal with the computer-usable program code embodied therewith, either in baseband or as part of a carrier wave. The computer usable program code may be transmitted using any appropriate medium, including but not limited to the Internet, wireline, optical fiber cable, RF, etc.</p>
<p id="p-0022" num="0021">Computer program code for carrying out operations of the present disclosure may be written in an object oriented programming language such as Java, Smalltalk, C++ or the like. However, the computer program code for carrying out operations of the present disclosure may also be written in conventional procedural programming languages, such as the &#x201c;C&#x201d; programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).</p>
<p id="p-0023" num="0022">The present disclosure is described below with reference to flowchart illustrations and/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the disclosure. It will be understood that each block of the flowchart illustrations and/or block diagrams, and combinations of blocks in the flowchart illustrations and/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks.</p>
<p id="p-0024" num="0023">These computer program instructions may also be stored in a computer-readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the computer-readable memory produce an article of manufacture including instruction means which implement the function/act specified in the flowchart and/or block diagram block or blocks.</p>
<p id="p-0025" num="0024">The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks.</p>
<p id="p-0026" num="0025">Referring to <figref idref="DRAWINGS">FIG. 1</figref>, there is shown wear-leveling process <b>10</b> that may reside on and may be executed by all or a portion of computing device <b>12</b>, which may be connected to network <b>14</b> (e.g., the Internet or a local area network). Examples of computing device <b>12</b> may include, but are not limited to: a personal computer, a laptop computer, a personal digital assistant, a data-enabled cellular telephone, a notebook computer, a server computer, a series of server computers, a mini computer, a mainframe computer, a dedicated network device, a Network Attached Storage (NAS) system, and a Storage Area Network (SAN).</p>
<p id="p-0027" num="0026">As is known in the art, a SAN may include one or more of a personal computer, a server computer, a series of server computers, a mini computer, a mainframe computer, a RAID array and an NAS. Computing device <b>12</b> may execute one or more operating systems (which may be stored on storage device <b>16</b>), examples of which may include but are not limited to: Microsoft Windows&#x2122;; Redhat Linux&#x2122;, Unix, or a custom operating system, for example. Storage device <b>16</b> may include but is not limited to: a hard disk drive; a tape drive; an optical drive; a RAID array; a random access memory (RAM); a read-only memory (ROM); and flash memory.</p>
<p id="p-0028" num="0027">Referring also to <figref idref="DRAWINGS">FIGS. 2 &#x26; 3</figref> and as will be discussed below in greater detail, wear-leveling process <b>10</b> may divide <b>100</b> a physical memory device (e.g., physical memory device <b>200</b>) into at least a first logical memory device (e.g., LUN <b>202</b>) and a second logical memory device (e.g., LUN <b>204</b>). Physical memory device <b>200</b> may include a plurality of physical memory elements. A first portion of the plurality of physical memory elements may be assigned to the first logical memory device (e.g., LUN <b>202</b>). A second portion of the plurality of physical memory elements may be assigned to the second logical memory device (e.g., LUN <b>204</b>).</p>
<p id="p-0029" num="0028">The instruction sets and subroutines of wear-leveling process <b>10</b>, which may be stored within physical memory device <b>200</b>, may be executed by one or more processors (not shown) and one or more memory architectures (not shown) included within physical memory device <b>200</b>.</p>
<p id="h-0007" num="0000">The Wear-Leveling Process:</p>
<p id="p-0030" num="0029">During operation of computing device <b>12</b>, one or more data portions (e.g. data portion <b>18</b>) may be processed by computing device <b>12</b>. For example, data portion <b>18</b> may be received from network <b>14</b> by computing device <b>12</b> for processing. Or data portion <b>18</b> may be transmitted from computing device <b>12</b> to network <b>14</b>. Alternatively, data portion <b>18</b> may be generated and stored within computing device <b>12</b>. Accordingly, data portion <b>18</b> may be stored upon and retrieved from physical memory device <b>200</b>.</p>
<p id="p-0031" num="0030">As discussed above, wear-leveling process <b>10</b> may divide <b>100</b> physical memory device <b>200</b> into at least two logical memory devices (e.g., LUN <b>202</b> &#x26; LUN <b>204</b>). As is known in the art, a LUN (Logical Unit Number) is a logical storage device that may be defined as a portion of one or more physical memory devices. One example of physical memory device <b>200</b> may include but is not limited to a flash memory device (such as a flash disk drive).</p>
<p id="p-0032" num="0031">As is known in the art, memory devices (e.g., physical memory device <b>200</b>) may be physically organized in a two-level hierarchy that includes &#x201c;physical memory pages&#x201d; at the lower level, and &#x201c;physical erase-blocks&#x201d; at the higher level. While the sizes of these two entities vary across generations of storage devices, a typical nominal value is approximately 4 KB for a physical memory page, with 256 physical memory pages included within each physical erase-block.</p>
<p id="p-0033" num="0032">With respect to flash memory devices, flash memory devices may provide the ability to randomly read any physical memory page included within the device. While flash memory devices may also be written in pages, there are some limitations. For example, the physical memory page to be written to within the flash memory device must be in an erased state. And the erasing process can only be performed on an entire physical erase-block. Additionally, the physical memory pages within a physical erase-block may only be written to in sequential order. And as discussed above, the number of erase operations that a physical erase-block may endure without failing is limited and must therefore be managed to approximately even the wear across all physical erase-blocks to enhance the lifespan of the flash memory device.</p>
<p id="p-0034" num="0033">Accordingly, physical memory device <b>200</b> may include a plurality of physical memory elements. One example of such a physical memory element may include but is not limited to physical erase-block <b>206</b>. And as discussed above, physical erase-block <b>206</b> may include a plurality of physical memory pages (e.g., physical memory page <b>208</b>).</p>
<p id="p-0035" num="0034">While the system is described above as having wear-leveling process <b>10</b> divide <b>100</b> physical memory device <b>200</b> into two logical memory devices (e.g. LUN <b>202</b> and LUN <b>204</b>), this is for illustrative purposes only and is not intended to be a limitation of this disclosure. For example, wear-leveling process <b>10</b> may divide <b>100</b> physical memory device <b>200</b> into one or more additional logical memory devices (e.g., LUN <b>210</b>) and an additional portion of the plurality of physical memory elements included within physical memory device <b>200</b> may be assigned <b>106</b> to the additional logical memory device(s).</p>
<p id="p-0036" num="0035">Referring also to <figref idref="DRAWINGS">FIG. 4</figref> and as is known in the art, memory devices (e.g., physical memory device <b>200</b>) may &#x201c;virtualize&#x201d; physical memory pages (e.g., physical memory pages <b>400</b>, <b>402</b>, <b>404</b>) into a smaller number of virtual memory pages (e.g., virtual page <b>406</b>) in order to provide higher-performance write capabilities. For example, a mapping layer may be used to allow random virtual page writes to be written to sequential physical memory pages. During such operations, the previous physical location of the virtual page is marked as garbage (i.e., unneeded/disposable data). After operating in this fashion across the entire virtual page space for a sufficient period of time, the virtual pages are typically distributed across all of the physical erase-blocks and the average percent of valid space within a physical erase-block may be e.g., the ratio of the virtual page space capacity to the total physical page space capacity of the memory device.</p>
<p id="p-0037" num="0036">Referring also to <figref idref="DRAWINGS">FIG. 5</figref>, the use of physical memory space may be conceptualized as a write log. New data may be written to head <b>500</b> of log <b>502</b> and, therefore, written erase-blocks (e.g., erase-block <b>504</b>) at head <b>500</b> may tend to be fully utilized (i.e., the physical pages will contain currently valid virtual pages). As erase-blocks are examined closer and closer to tail <b>506</b> of log <b>502</b>, these erase-blocks may tend to be less utilized (since the virtual pages that were originally mapped to these older erase-blocks are more likely to have been re-written).</p>
<p id="p-0038" num="0037">As discussed above, a physical memory page to be written to must be in an erased state, and erasing can only be performed on an entire physical erase-block. Accordingly. in order to provide an erased physical erase-block when required for head <b>500</b>, a background task (commonly referred to as garbage collector process <b>508</b>) may select a candidate erase-block (e.g., erase block <b>510</b>), read any valid pages it contains (e.g., physical pages <b>512</b>, <b>514</b>), re-write those pages elsewhere (e.g., to erase-block <b>516</b>), and finally erase the block (e.g., to produce erased erase-block <b>518</b>).</p>
<p id="p-0039" num="0038">When deciding which of the available erase-blocks to process, garbage collection process <b>508</b> may consider various objectives, such as: 1) choosing the least utilized erase-block, 2) choosing the least worn erase-block, and 3) minimizing the amount of computation to make the choice. Traditionally, garbage collection process <b>508</b> may have an empty block available when needed, and may only generate empty blocks as fast as they are consumed.</p>
<p id="p-0040" num="0039">Often when a physical memory device is deployed, there will be a need to divide the capacity of e.g., physical memory device <b>200</b> into multiple subset capacities that e.g., may be used by independent applications. Accordingly and as discussed above, wear-leveling process <b>10</b> may divide <b>100</b> physical memory device <b>200</b> into at least two logical memory devices (e.g., LUN <b>202</b> &#x26; LUN <b>204</b>). Further, wear-leveling process <b>10</b> may assign <b>102</b> a first portion of the plurality of physical memory elements included within physical memory device <b>200</b> to a first logical memory device (e.g., LUN <b>202</b>). Additionally, wear-leveling process <b>10</b> may assign <b>104</b> a second portion of the plurality of physical memory elements included within physical memory device <b>200</b> to the second logical memory device (e.g., LUN <b>204</b>). Accordingly, when dividing 100 the logical page space of physical memory device <b>200</b> to construct e.g., LUN <b>202</b> &#x26; LUN <b>204</b>, wear-leveling process <b>10</b> may assign <b>102</b>, <b>104</b> the physical erase-block space in accordance with the division of the logical page space.</p>
<p id="p-0041" num="0040">When associating logical storage space within a LUN to physical page space within physical memory device <b>200</b>, the ratio of logical storage space to physical page space need not be one-to-one. For example, a quantity of logical storage space within the LUN may be associated with a larger quantity of physical page space within physical memory device <b>200</b>. Such an over-ratio situation may be desirable for various reasons, such as write amplification and over-provisioning.</p>
<p id="p-0042" num="0041">Conversely, a quantity of logical storage space within a LUN may be associated with a smaller quantity of physical page space within physical memory device <b>200</b>. Such an under-ratio situation may be desirable when e.g., the logical storage space in sparely populated (such as when the logical storage space is used as a hash table).</p>
<p id="p-0043" num="0042">An additional benefit of the above-stated configuration is the ability of a given LUN to ensure its physical capacity may be in a pre-erased state independent of the activity and state of the other LUNs. Specifically, since physical memory device <b>200</b> is divided 100 to construct the logical page space of e.g., LUN <b>202</b> &#x26; LUN <b>204</b>, the physical page space is not shared. Accordingly, each LUN is free to manipulate (e.g., pre-erase) its assigned physical page space as the LUN deems appropriate.</p>
<p id="p-0044" num="0043">To effectuate wear leveling, wear-leveling process <b>10</b> may trade <b>108</b> specific erase-blocks between the various sub-device erase-block pools. However, the number of erase-blocks included within each sub-device erase-block pool will be preserved by wear-leveling process <b>10</b>.</p>
<p id="p-0045" num="0044">Specifically, wear-leveling process <b>10</b> may trade <b>106</b> a first physical memory element included within the first portion of the plurality of physical memory elements with a second physical memory element included within the second portion of the plurality of physical memory elements.</p>
<p id="p-0046" num="0045">For example, assume for illustrative purposes that LUN <b>202</b> is used as a cache memory device and LUN <b>204</b> is used as a vaulting device. Accordingly, the erase-blocks included within LUN <b>202</b> would wear at a rate much greater than the erase-blocks included within LUN <b>204</b>. Accordingly, as individual erase-blocks included within LUN <b>202</b> start to wear, wear-leveling process <b>10</b> may trade <b>106</b> these worn erase-blocks included within LUN <b>202</b> for less worn erase-blocks included within LUN <b>204</b>. However and as stated above, wear-leveling process <b>10</b> will maintain the original quantities of erase-blocks included within each of the LUNs. Accordingly, by effectuating such trades, wear leveling process <b>10</b> may effectuate a more even wearing of the erase-blocks included in all of the LUNs included within physical memory device <b>200</b>.</p>
<p id="p-0047" num="0046">Further, in the event of a failure of an erase-block, wear-leveling process <b>10</b> may remove the failed erase-block from the operational pool of the appropriate LUN. However, in a fashion similar to wear-leveling of the individual erase-blocks, wear-leveling process <b>10</b> may trade failed erase-blocks included within a first LUN (e.g. LUN <b>202</b>) for a functioning erase-block included within a second LUN (e.g. LUN <b>204</b>). Accordingly, wear-leveling process <b>10</b> may allow for the equitable distribution of failed erase-blocks amongst the various LUNs included within physical memory device <b>200</b>.</p>
<p id="p-0048" num="0047">As will be appreciated by one skilled in the art, the present disclosure may be embodied as a method, system, or computer program product. Accordingly, the present disclosure may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a &#x201c;circuit,&#x201d; &#x201c;module&#x201d; or &#x201c;system.&#x201d; Furthermore, the present disclosure may take the form of a computer program product on a computer-usable storage medium having computer-usable program code embodied in the medium.</p>
<p id="p-0049" num="0048">The flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present disclosure. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and/or flowchart illustration, and combinations of blocks in the block diagrams and/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.</p>
<p id="p-0050" num="0049">The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the disclosure. As used herein, the singular forms &#x201c;a&#x201d;, &#x201c;an&#x201d; and &#x201c;the&#x201d; are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms &#x201c;comprises&#x201d; and/or &#x201c;comprising,&#x201d; when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and/or groups thereof.</p>
<p id="p-0051" num="0050">The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present disclosure has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the disclosure in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the disclosure. The embodiment was chosen and described in order to best explain the principles of the disclosure and the practical application, and to enable others of ordinary skill in the art to understand the disclosure for various embodiments with various modifications as are suited to the particular use contemplated.</p>
<p id="p-0052" num="0051">Having thus described the disclosure of the present application in detail and by reference to embodiments thereof, it will be apparent that modifications and variations are possible without departing from the scope of the disclosure defined in the appended claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer-implemented method comprising:
<claim-text>dividing a physical memory device into at least a first logical memory device and a second logical memory device, wherein the physical memory device includes a plurality of physical memory elements;</claim-text>
<claim-text>assigning a first portion of the plurality of physical memory elements to the first logical memory device;</claim-text>
<claim-text>assigning a second portion of the plurality of physical memory elements to the second logical memory device; and</claim-text>
<claim-text>trading a first physical memory element included within the first portion of the plurality of physical memory elements with a second physical memory element included within the second portion of the plurality of physical memory elements to promote wear leveling across the physical memory device;</claim-text>
<claim-text>wherein the plurality of physical memory elements is a plurality of physical erase-blocks, wherein the first logical memory device pre-erases physical erase-blocks as needed independent of a number of pre-erased physical erase-blocks within the second logical memory device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein:
<claim-text>one or more of the first physical memory element and the second physical memory element are chosen from the group consisting of: a high-wear functioning physical memory element, a low-wear functioning physical memory element, and a failed physical memory element.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein dividing the physical memory device further includes:
<claim-text>dividing the physical memory device into at least a third logical memory device; and</claim-text>
<claim-text>assigning an additional portion of the plurality of physical memory elements to at least the third logical memory device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein:
<claim-text>the physical memory device is a flash memory device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein:
<claim-text>the physical erase-block includes a plurality of physical memory pages.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein:
<claim-text>trading a first physical memory element included within the first portion of the plurality of physical memory elements with a second physical memory element included within the second portion of the plurality of physical memory elements further comprises maintaining an original quantity of physical memory elements within each of the logical memory devices.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A computer program product residing on a non-transitory computer readable medium having a plurality of instructions stored thereon which, when executed by a processor, cause the processor to perform operations comprising:
<claim-text>dividing a physical memory device into at least a first logical memory device and a second logical memory device, wherein the physical memory device includes a plurality of physical memory elements;</claim-text>
<claim-text>assigning a first portion of the plurality of physical memory elements to the first logical memory device;</claim-text>
<claim-text>assigning a second portion of the plurality of physical memory elements to the second logical memory device; and</claim-text>
<claim-text>trading a first physical memory element included within the first portion of the plurality of physical memory elements with a second physical memory element included within the second portion of the plurality of physical memory elements to promote wear leveling across the physical memory device;</claim-text>
<claim-text>wherein the plurality of physical memory elements is a plurality of physical erase-blocks, wherein the first logical memory device pre-erases physical erase-blocks as needed independent of a number of pre-erased physical erase-blocks within the second logical memory device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The computer program product of <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein:
<claim-text>one or more of the first physical memory element and the second physical memory element are chosen from the group consisting of: a high-wear functioning physical memory element, a low-wear functioning physical memory element, and a failed physical memory element.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The computer program product of <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein the instructions for dividing the physical memory device further include:
<claim-text>dividing the physical memory device into at least a third logical memory device; and</claim-text>
<claim-text>assigning an additional portion of the plurality of physical memory elements to at least the third logical memory device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The computer program product of <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein:
<claim-text>the physical memory device is a flash memory device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The computer program product of <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein:
<claim-text>the physical erase-block includes a plurality of physical memory pages.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The computer program product of <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein:
<claim-text>trading a first physical memory element included within the first portion of the plurality of physical memory elements with a second physical memory element included within the second portion of the plurality of physical memory elements further comprises maintaining an original quantity of physical memory elements within each of the logical memory devices.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A computing system comprising:
<claim-text>at least one processor;</claim-text>
<claim-text>at least one memory architecture coupled with the at least one processor; and</claim-text>
<claim-text>one or more software modules executed by the at least one processor, wherein the one or more software modules are configured to perform operations including:</claim-text>
<claim-text>dividing a physical memory device into at least a first logical memory device and a second logical memory device, wherein the physical memory device includes a plurality of physical memory elements;</claim-text>
<claim-text>assigning a first portion of the plurality of physical memory elements to the first logical memory device;</claim-text>
<claim-text>assigning a second portion of the plurality of physical memory elements to the second logical memory device; and</claim-text>
<claim-text>trading a first physical memory element included within the first portion of the plurality of physical memory elements with a second physical memory element included within the second portion of the plurality of physical memory elements to promote wear leveling across the physical memory device;</claim-text>
<claim-text>wherein the plurality of physical memory elements is a plurality of physical erase-blocks, wherein the first logical memory device pre-erases physical erase-blocks as needed independent of a number of pre-erased physical erase-blocks within the second logical memory device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The computing system of <claim-ref idref="CLM-00013">claim 13</claim-ref> wherein:
<claim-text>one or more of the first physical memory element and the second physical memory element are chosen from the group consisting of: a high-wear functioning physical memory element, a low-wear functioning physical memory element, and a failed physical memory element.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The computing system of <claim-ref idref="CLM-00013">claim 13</claim-ref> wherein dividing the physical memory device further includes:
<claim-text>dividing the physical memory device into at least a third logical memory device; and</claim-text>
<claim-text>assigning an additional portion of the plurality of physical memory elements to at least the third logical memory device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The computing system of <claim-ref idref="CLM-00013">claim 13</claim-ref> wherein:
<claim-text>the physical memory device is a flash memory device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The computing system of <claim-ref idref="CLM-00013">claim 13</claim-ref> wherein:
<claim-text>the physical erase-block includes a plurality of physical memory pages.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The computing system of <claim-ref idref="CLM-00013">claim 13</claim-ref> wherein:
<claim-text>trading a first physical memory element included within the first portion of the plurality of physical memory elements with a second physical memory element included within the second portion of the plurality of physical memory elements further comprises maintaining an original quantity of physical memory elements within each of the logical memory devices. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
