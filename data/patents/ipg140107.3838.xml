<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08624905-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08624905</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13476805</doc-number>
<date>20120521</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>KR</country>
<doc-number>10-2008-0003169</doc-number>
<date>20080110</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>16</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>T</subclass>
<main-group>1</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>345502</main-classification>
<further-classification>345501</further-classification>
</classification-national>
<invention-title id="d2e69">Data processing unit with multi-graphic controller and method for processing data using the same</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6760031</doc-number>
<kind>B1</kind>
<name>Langendorf et al.</name>
<date>20040700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6850240</doc-number>
<kind>B1</kind>
<name>Jones, Jr.</name>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7075541</doc-number>
<kind>B2</kind>
<name>Diard</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7466316</doc-number>
<kind>B1</kind>
<name>Alben et al.</name>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>7721118</doc-number>
<kind>B1</kind>
<name>Tamasi et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2007/0195099</doc-number>
<kind>A1</kind>
<name>Diard et al.</name>
<date>20070800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2007/0283175</doc-number>
<kind>A1</kind>
<name>Marinkovic et al.</name>
<date>20071200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2007/0285428</doc-number>
<kind>A1</kind>
<name>Foster et al.</name>
<date>20071200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2008/0034238</doc-number>
<kind>A1</kind>
<name>Hendry et al.</name>
<date>20080200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2008/0117222</doc-number>
<kind>A1</kind>
<name>Leroy et al.</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2008/0204460</doc-number>
<kind>A1</kind>
<name>Marinkovic et al.</name>
<date>20080800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2009/0096797</doc-number>
<kind>A1</kind>
<name>Du et al.</name>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>CN</country>
<doc-number>1828479</doc-number>
<kind>A</kind>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>WO</country>
<doc-number>WO 2007/140404</doc-number>
<kind>A2</kind>
<date>20071200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>11</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>345502</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345519</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345501</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>7</number-of-drawing-sheets>
<number-of-figures>7</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>13277001</doc-number>
<date>20111019</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>8199159</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13476805</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>12142504</doc-number>
<date>20080619</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>8072459</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13277001</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120229479</doc-number>
<kind>A1</kind>
<date>20120913</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Lee</last-name>
<first-name>Jin-suk</first-name>
<address>
<city>Seoul-si</city>
<country>KR</country>
</address>
</addressbook>
<residence>
<country>KR</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Kim</last-name>
<first-name>Yang-gi</first-name>
<address>
<city>Seoul-si</city>
<country>KR</country>
</address>
</addressbook>
<residence>
<country>KR</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Lee</last-name>
<first-name>Jin-suk</first-name>
<address>
<city>Seoul-si</city>
<country>KR</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Kim</last-name>
<first-name>Yang-gi</first-name>
<address>
<city>Seoul-si</city>
<country>KR</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Birch, Stewart, Kolasch &#x26; Birch, LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>LG Electronics Inc.</orgname>
<role>03</role>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Crawford</last-name>
<first-name>Jacinta M</first-name>
<department>2677</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A portable terminal that includes a first processing core configured to process data; a second processing core, which is faster than the first processing core, configured to process the data; and a storage unit configured to store multimedia data. The first and second processing cores are integrated into a single chipset, and are configured to be individually enabled or disabled based on a workload. The portable terminal is configured to be operated in one of a standby state and an operating state, to play back the multimedia data stored in the storage unit, and for Internet access.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="170.01mm" wi="150.54mm" file="US08624905-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="118.53mm" wi="153.16mm" file="US08624905-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="190.08mm" wi="157.99mm" file="US08624905-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="132.59mm" wi="135.89mm" file="US08624905-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="139.53mm" wi="174.67mm" file="US08624905-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="134.37mm" wi="163.15mm" file="US08624905-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="163.24mm" wi="176.61mm" file="US08624905-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="115.15mm" wi="160.61mm" file="US08624905-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is a Continuation of application Ser. No. 13/277,001 filed on Oct. 19, 2011 now U.S. Pat. No. 8,199,159, which is a Continuation of application Ser. No. 12/142,504 filed on Jun. 19, 2008 (now U.S. Pat. No. 8,072,459), which claims priority to Application No. 10-2008-0003169 filed in the Republic of Korea on Jan. 10, 2008. The entire contents of all of the above applications are hereby incorporated by reference.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">1. Field of the Invention</p>
<p id="p-0004" num="0003">The present invention relates to a data processing apparatus and method, and more specifically, to a data processing apparatus provided with a multi-graphic controller and a method of distributing data for processing data using the data processing apparatus.</p>
<p id="p-0005" num="0004">2. Description of the Related Art</p>
<p id="p-0006" num="0005">Recently, as computers and various terminals having a multimedia player function provide a function of displaying high-volume high-quality images, it is general that the computers and various terminals are provided with a plurality of graphic controllers to improve display quality and processing speed.</p>
<p id="p-0007" num="0006">Particularly, in most cases, computers are provided with an internal graphic controller basically provided within a memory control hub (MCH), together with an external graphic controller separately provided outside of the MCH. In addition, graphic controllers having a multi-core are used in some cases.</p>
<p id="p-0008" num="0007">When a plurality of graphic controllers are used as described above, the graphic controllers are selectively used in the prior art. However, since speed of processing image data may be increased by simultaneously operating a plurality of graphic controllers, it is further preferable to distribute image data among the plurality of graphic controllers and to simultaneously use the graphic controllers.</p>
<p id="p-0009" num="0008">That is, the prior art is disadvantageous in that although a plurality of graphic controllers is provided, the graphic controllers are selectively used, and thus, the provided graphic controllers are not sufficiently utilized.</p>
<p id="p-0010" num="0009">Furthermore, when a plurality of graphic controllers are simultaneously used, for all that speed of processing image data may be further increased only one graphic controller is selectively used. Thus, there is a problem in that the speed of processing image data is limited.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0011" num="0010">Accordingly, the present invention is conceived to solve the aforementioned problems in the prior art. An object of the present invention is to provide a data processing apparatus and method, wherein a plurality of graphic controllers can be simultaneously used.</p>
<p id="p-0012" num="0011">Another object of the present invention is to provide a data processing apparatus and method, in which the efficiency of data processing can be enhanced by simultaneously using a plurality of graphic controllers and appropriately distributing image data.</p>
<p id="p-0013" num="0012">A further object of the present invention is to provide a data processing apparatus and method, wherein the number and type of graphic controllers being operated are adaptively changed depending on a system state and the processing amount of data, thereby achieving the efficiency of data processing and prevention of power consumption.</p>
<p id="p-0014" num="0013">According to an aspect of the present invention for achieving the objects, there is provided a data processing apparatus, which comprises a first graphic controller and a second graphic controller for processing and displaying inputted image data; and a control unit for distributing the image data in consideration of data processing capabilities of the first and second graphic controllers.</p>
<p id="p-0015" num="0014">In addition, the first graphic controller may comprise a first memory unit for storing image data to be processed by the first graphic controller, and the second graphic controller may comprise a second memory unit for storing image data to be processed by the second graphic controller.</p>
<p id="p-0016" num="0015">At this time, the control unit may transmit image data other than moving image data to the first graphic controller, and the moving image data may be transmitted to the second graphic controller.</p>
<p id="p-0017" num="0016">Further, the control unit may transmit image data other than 3D data to the first graphic controller, and the 3D data may be transmitted to the second graphic controller.</p>
<p id="p-0018" num="0017">Furthermore, the control unit may transmit image data created by the same application to the same graphic controller.</p>
<p id="p-0019" num="0018">In addition, the control unit may transmit image data created by executing an application to a graphic controller predetermined among the first and second graphic controllers depending on a type of the application.</p>
<p id="p-0020" num="0019">Further, the control unit may calculate speed of processing image data required in average when each application is executed, set a graphic controller, to which image data created by the corresponding application are to be transmitted, as the first graphic controller if the processing speed required in average is lower than a reference value, and set a graphic controller, to which image data created by the corresponding application are to be transmitted, as the second graphic controller if the processing speed required in average is higher than the reference value.</p>
<p id="p-0021" num="0020">In addition, the control unit may distribute image data depending on the amount of data loaded on the first and second memory units.</p>
<p id="p-0022" num="0021">Further, the control unit may distribute image data so that execution units of an application creating the image data processed by the first graphic controller do not exceed a predetermined number.</p>
<p id="p-0023" num="0022">At this time, the control unit may differently count the execution unit depending on a type of an application in consideration of the required data processing amount of the application.</p>
<p id="p-0024" num="0023">In addition, the control unit may adaptively change the number and type of graphic controllers being operated in consideration of at least one of the amount of image data to be processed and an operation state of a system.</p>
<p id="p-0025" num="0024">In the meantime, according to the present invention, there is provided a data processing method in a data processing apparatus provided with a plurality of graphic controllers including a first graphic controller and a second graphic controller. The method comprises the steps of (A) generating a command for processing image data; (B) classifying the image data considering data processing capability of each graphic controller; and (C) transmitting the image data to each graphic controller as classified in step (B).</p>
<p id="p-0026" num="0025">At this time, step (B) may comprise the steps of (B1) determining whether the image data correspond to moving image data; and (B2) classifying the image data as data to be transmitted to the first graphic controller if the image data are not moving image data and as data to be transmitted to the second graphic controller if the image data are moving image data.</p>
<p id="p-0027" num="0026">Also, step (B) may comprise the steps of (B3) determining whether the image data correspond to 3D data; and (B4) classifying the image data as data to be transmitted to the first graphic controller if the image data are not 3D data and as data to be transmitted to the second graphic controller if the image data are 3D data.</p>
<p id="p-0028" num="0027">Step (B) may comprise the steps of (B5) determining an application generating the image data; (B6) confirming a graphic controller previously determined to process the image data generated by the determined application; and (B7) transmitting the image data to the previously determined graphic controller.</p>
<p id="p-0029" num="0028">Here, the method may further comprise the steps of (I) calculating an average image data processing speed when each application is executed; and (II) setting a graphic controller, to which the image data generated by the corresponding application are to be transmitted, as the first graphic controller if the processing speed of the application calculated in step (I) is lower than a reference value, and setting a graphic controller, to which the image data generated by the corresponding application are to be transmitted, as the second graphic controller if the processing speed of the application is higher than the reference value.</p>
<p id="p-0030" num="0029">Also, step (B) may comprise the steps of (B8) confirming the amount of image data loaded on memory units, the memory units being provided in the plurality of graphic controllers and storing data to be processed by the graphic controllers, respectively; and (B9) classifying the image data depending on the amount of the image data loaded on the memory units, the amount of the image data being confirmed in step (B8).</p>
<p id="p-0031" num="0030">In step (B), image data generated by the same application may be classified to be transmitted to the same graphic controller.</p>
<p id="p-0032" num="0031">Also, step (B) may comprise the steps of (B10) calculating execution units of an application generating image data being processed for each graphic controller; and (B11) classifying the image data so that the execution units of the application in each graphic controller calculated in step (B10) does not exceed a number previously set for each graphic controller.</p>
<p id="p-0033" num="0032">Here, the execution units may be counted depending on the number and type of applications being executed.</p>
<p id="p-0034" num="0033">At this time, the method may further comprise the step of (D) adaptively changing the number or type of graphic controllers being operated considering at least one of the amount of image data to be processed and an operating state of a system.</p>
<p id="p-0035" num="0034">In addition, when a graphic controller having been operated is changed into a non-operation state to adaptively change the number or type of graphic controllers being operated, the step (D) may comprise the steps of (D1) transmitting image data having been transmitted to the graphic controller having been operated to another graphic controller; and (D2) reducing or blocking power supplied to the graphic controller having been operated after completely processing image data temporarily stored in a memory unit that stores image data to be processed by the graphic controller having been operated.</p>
<p id="p-0036" num="0035">According to a data processing apparatus of a computer and a data processing method using the same according to the present invention as described above in detail, the following effects can be expected.</p>
<p id="p-0037" num="0036">That is, there is provided a data processing apparatus and method, in which a plurality of graphic controllers can be simultaneously used, so that there is an advantage in that data processing speed can be improved.</p>
<p id="p-0038" num="0037">Furthermore, according to a data processing apparatus of a computer and a data processing method using the same of the present invention, since a plurality of graphic controllers are simultaneously used and image data are appropriately distributed, there is an advantage in that the efficiency of data processing can be enhanced.</p>
<p id="p-0039" num="0038">In addition, according to a data processing apparatus of a computer and a data processing method using the same of the present invention, since the number and type of graphic controllers being operated are adaptively changed depending on a system state and the processing amount of data, there is an advantage in that the efficiency of data processing and prevention of power consumption can be achieved at the same time.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram showing the configuration of a data processing apparatus according to a specific embodiment of the present invention.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 2</figref> is a flowchart illustrating an adaptive graphic data processing method using the data processing apparatus provided with a plurality of graphic controllers.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 3</figref> is a flowchart stepwise illustrating a data processing method according to the specific embodiment of the present invention.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 4</figref> is a flowchart stepwise illustrating a data processing method according to a first embodiment of the present invention in steps.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart stepwise illustrating a data processing method according to a second embodiment of the present invention in steps.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 6</figref> is a flowchart stepwise illustrating a data processing method according to a third embodiment of the present invention in steps.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 7</figref> is a block diagram showing the configuration of a data processing apparatus according to a specific embodiment of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
<p id="p-0047" num="0046">Hereinafter, embodiments of a data processing apparatus and method according to the present invention will be described in detail with reference to the accompanying drawings.</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram showing the configuration of a data processing apparatus according to a specific embodiment of the present invention.</p>
<p id="p-0049" num="0048">At this time, the data processing apparatus includes a variety of terminals provided with a processing unit for processing data, as well as computers.</p>
<p id="p-0050" num="0049">As shown in <figref idref="DRAWINGS">FIG. 1</figref>, the data processing apparatus according to the specific embodiment of the present invention may be provided with a memory control hub (MCH) <b>10</b>. The MCH <b>10</b>, which is a chipset generally provided in a computer, functions as a passageway of data and connects various memories and graphic devices to control them.</p>
<p id="p-0051" num="0050">The MCH <b>10</b> generally includes an internal graphic controller <b>10</b><i>a </i>(hereinafter, referred to as a first graphic controller).</p>
<p id="p-0052" num="0051">The first graphic controller <b>10</b><i>a </i>processes image data and displays the image data on an image display apparatus such as a monitor.</p>
<p id="p-0053" num="0052">At this time, although the first graphic controller <b>10</b><i>a </i>may be provided within the MCH <b>10</b> as shown in the figure, it can be provided as a configuration separated from the MCH <b>10</b>. When the MCH <b>10</b> is not provided, the first graphic controller may be provided as an independent single chipset.</p>
<p id="p-0054" num="0053">Further, in the present invention, an external graphic controller <b>20</b> (hereinafter, referred to as a second graphic controller) is provided in addition to the first graphic controller <b>10</b><i>a. </i></p>
<p id="p-0055" num="0054">The second graphic controller <b>20</b> is connected to the MCH <b>10</b> and receives data and control through the MCH. The second graphic controller <b>20</b> processes received image data to display them on an image display apparatus such as a monitor.</p>
<p id="p-0056" num="0055">Although the configuration provided with the two graphic controllers including the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> is shown in <figref idref="DRAWINGS">FIG. 1</figref>, a plurality of graphic controllers more than those may be configured in the data processing apparatus.</p>
<p id="p-0057" num="0056">Alternatively, even in a case where only a single graphic controller is configured, it may be configured as a multi-core graphic controller. In this case, as seen in <figref idref="DRAWINGS">FIG. 7</figref>, the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b>, which will be described later, are designated as cores integrated in the multi-core graphic controller along with a controller <b>90</b> that processes data other than graphics.</p>
<p id="p-0058" num="0057">In the meantime, the data processing apparatus may be provided with a system memory <b>30</b>. The system memory <b>30</b> is the main memory of the data processing apparatus and generally comprises a random access memory (RAM).</p>
<p id="p-0059" num="0058">In addition, a video memory <b>30</b><i>a </i>(hereinafter, referred to as a first memory unit) for storing data, which includes image data to be processed by the first graphic controller <b>10</b><i>a</i>, may be provided at a portion of a storage area of the system memory <b>30</b>.</p>
<p id="p-0060" num="0059">At this time, the first memory unit <b>30</b><i>a </i>may be provided in the system memory <b>30</b> as described above or provided as a separate storage device.</p>
<p id="p-0061" num="0060">In addition, a video memory <b>40</b> (hereinafter, referred to as a second memory unit) may be also provided in the second graphic controller <b>20</b>.</p>
<p id="p-0062" num="0061">The second memory unit <b>40</b> stores data including image data to be processed by the second graphic controller <b>20</b>. At this time, the second memory unit <b>40</b> may be provided as a variety of storage devices, and particularly, comprises a RAM.</p>
<p id="p-0063" num="0062">In the meantime, the data processing apparatus according to the specific embodiment of the present invention is provided with a central processing unit (CPU) <b>50</b>. The CPU <b>50</b> is a core device, which controls the operation of the overall system of the data processing apparatus and executes operation of a program, and may comprise a control device and an arithmetic device.</p>
<p id="p-0064" num="0063">Image data generated by a variety of programs and applications executed by the CPU <b>50</b> are transmitted to and processed by the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b>.</p>
<p id="p-0065" num="0064">The data processing apparatus may be provided with an input/output control hub (ICH) <b>60</b>. The ICH <b>60</b> is connected with a hard disk drive (HDD) <b>70</b> and a flash memory for storing a variety of data and various hardware units, and controls them.</p>
<p id="p-0066" num="0065">Here, the HDD <b>70</b> stores various kinds of programs and applications executed by the CPU <b>50</b>, as well as a variety of documents, multimedia data, and the like created, updated, displayed, or played back by the programs or applications.</p>
<p id="p-0067" num="0066">Then, the CPU <b>50</b> loads such data from the HDD <b>70</b> onto the RAM <b>30</b> and processes the loaded data, creates image data to be displayed to users as a result of the process, and transmits the image data to the first or second graphic controller <b>10</b><i>a </i>or <b>20</b>.</p>
<p id="p-0068" num="0067">At this time, the image data transmitted to the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> may be respectively stored in the first and second memory units <b>30</b><i>a </i>and <b>40</b>.</p>
<p id="p-0069" num="0068">Here, the CPU <b>50</b> or the MCH <b>10</b> may adaptively control the number or type of controllers being operated among the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> in consideration of a system state and the amount of image data to be processed.</p>
<p id="p-0070" num="0069">Generally, the first graphic controller <b>10</b><i>a </i>basically configured within the system may be less capable in processing data than the second graphic controller <b>20</b> configured as a separated module outside of the system.</p>
<p id="p-0071" num="0070">Accordingly, the CPU <b>50</b> or the MCH <b>10</b> may operate only the first graphic controller <b>10</b><i>a </i>when the amount of image data to be processed is small, and change the data processing means to the second graphic controller <b>20</b> when the processing amount of image data increases.</p>
<p id="p-0072" num="0071">In addition, when the processing amount of image data is too large to be processed only by the second graphic controller <b>20</b>, the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> may be simultaneously operated to enhance system performance, and thus, the speed of processing image data can be improved.</p>
<p id="p-0073" num="0072">Then, when adaptively changing the number and type of graphic controllers being operated as described above, the CPU <b>50</b> or the MCH <b>10</b> may prevent power consumption by blocking or reducing the power supplied to a graphic controller that is not operating.</p>
<p id="p-0074" num="0073">At this time, the aforementioned descriptions are merely an example, and when adaptively changing the number and type of graphic controllers being operated, the CPU <b>50</b> or the MCH <b>10</b> may diversely change the number or type of the graphic controllers being operated in consideration of the data processing capability of each graphic controller.</p>
<p id="p-0075" num="0074">A separate program or the operating system including a variety of settings and logics needed for the CPU <b>50</b> or the MCH <b>10</b> to change the number and type of graphic controllers being operated may be stored in a memory device or storage device such as the system memory <b>30</b>, the HDD <b>70</b>, or the like of the data processing apparatus.</p>
<p id="p-0076" num="0075">The criteria for changing the number and type of graphic controllers by the CPU <b>50</b> or the MCH <b>10</b> may be a system state or the amount of image data to be processed as described above.</p>
<p id="p-0077" num="0076">At this time, the system state may be whether the remaining amount of a battery is decreased below a predetermined amount, whether AC power is supplied, or the like when the data processing apparatus is a portable apparatus. Here, if the remaining amount of a battery is decreased below a predetermined amount, it may be controlled to operate only the graphic controller that has consumed the least power in order to prevent power consumption of the battery.</p>
<p id="p-0078" num="0077">In addition, the amount of image data to be processed may be calculated by measuring the number of bits or the like of the data or may be known by required speed of processing the image data, the amount of image data stored in the first or second memory unit <b>30</b><i>a </i>or <b>40</b>, or the like.</p>
<p id="p-0079" num="0078">Further, the amount of image data to be processed may not be specifically calculated as described above, but may be determined by the number and type of applications being executed.</p>
<p id="p-0080" num="0079">That is, there may be an embodiment, in which if the number of applications being executed is larger than a predetermined number or the application being executed is a moving picture playback program, the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> are simultaneously operated.</p>
<p id="p-0081" num="0080">However, such an embodiment is merely one of various embodiments, and the number and type of a plurality of graphic controllers may be adaptively changed based on a variety of criteria to thereby process the image data.</p>
<p id="p-0082" num="0081">In the meantime, when the system state is changed from a state of operating only the first graphic controller <b>10</b><i>a </i>to a state of operating only the second graphic controller <b>20</b>, the CPU <b>50</b> or the MCH <b>10</b> transmits image data having been transmitted to the first graphic controller <b>10</b><i>a </i>to the second graphic controller <b>20</b>.</p>
<p id="p-0083" num="0082">At this time, the CPU <b>50</b> or the MCH <b>10</b> does not block or reduce driving power having been supplied to the first graphic controller <b>10</b><i>a </i>until the data stored in the first memory unit <b>30</b><i>a</i>, which is waiting to be processed by the first graphic controller <b>10</b><i>a</i>, is completely processed by the first graphic controller <b>10</b><i>a. </i></p>
<p id="p-0084" num="0083">Then, before the CPU <b>50</b> or the MCH <b>10</b> transmits image data to the second graphic controller <b>20</b>, the image data transmitted to and stored in the first memory unit <b>30</b><i>a </i>is completely processed by the first graphic controller <b>10</b><i>a</i>, and then, the CPU <b>50</b> or the MCH <b>10</b> blocks or reduces the power supplied to the first graphic controller <b>10</b><i>a. </i></p>
<p id="p-0085" num="0084">In addition, when the use amount of the second memory unit <b>40</b> increases more than a predetermined amount or the instantaneous variation amount of data stored in the second memory unit <b>40</b> is more than a predetermined amount while only the second graphic controller <b>20</b> is operating and thus the system state should be changed to a mode for simultaneously driving the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> (dual mode), the CPU <b>50</b> or the MCH <b>10</b> resumes supplying the driving power to the first graphic controller <b>10</b><i>a. </i></p>
<p id="p-0086" num="0085">Therefore, the operation of the first graphic controller <b>10</b><i>a </i>is resumed, and image data are appropriately distributed and transmitted to the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b>. Accordingly, the image data to be processed are divided and processed by the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b>.</p>
<p id="p-0087" num="0086">In addition, when the amount of data to be processed in the dual mode decreases and thus the system state is changed to drive only the second graphic controller <b>20</b>, the image data that have been divided and transmitted to the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> are transmitted only to the second graphic controller <b>20</b>.</p>
<p id="p-0088" num="0087">Then, if the first graphic controller <b>10</b><i>a </i>completely processes the image data stored in the first memory unit <b>30</b><i>a</i>, the driving power having been supplied to the first graphic controller <b>10</b><i>a </i>is then reduced to put the first graphic controller into a standby state or blocked to put the system into a state in which only the second graphic controller <b>20</b> processes data.</p>
<p id="p-0089" num="0088">In addition, when the use amount of the second memory unit <b>40</b> decreases less than a predetermined amount or the data processing amount required per unit time decreases less than a predetermined amount while only the second graphic controller <b>20</b> is operating and thus the system state is changed to a state of operating only the first graphic controller <b>10</b><i>a</i>, the CPU <b>50</b> or the MCH <b>10</b> blocks or reduces the power having been supplied to the second graphic controller <b>20</b> only after the data stored in the second memory unit <b>40</b> is completely processed by the second graphic controller <b>20</b>.</p>
<p id="p-0090" num="0089">At this time, the control of the power supplied to the first or second graphic controller <b>10</b><i>a </i>or <b>20</b> may be effected by an interface through which the first or second graphic controller <b>10</b><i>a </i>or <b>20</b> is connected to the MCH <b>10</b>.</p>
<p id="p-0091" num="0090">Generally, the interface may be PCI-Express (hereinafter, referred to as PCI-E). The PCI-E defines Link power management states.</p>
<p id="p-0092" num="0091">The Link power management states are based on Active State Power Management (ASPM), which is a power management standard for a Link between a chipset and a device connected through the PCI-E interface.</p>
<p id="p-0093" num="0092">According to the ASPM, power management states may be divided into L0 L0s, L1, L2, and L3 states, and a system may enter L0, L0s, and L1 states while operating.</p>
<p id="p-0094" num="0093">Briefly describing the states, first, the L0 state represents a normal operation state. Transmission and reception of all kinds of signals and other operations are allowed.</p>
<p id="p-0095" num="0094">The L0s state is a low resume latency, energy saving standby state. In the L0s state, the main power supply, and the reference clock and internal phase lock loop (PLL) of components are all activated at all times.</p>
<p id="p-0096" num="0095">In addition, the physical layer of the PCI-E provides a mechanism for rapidly entering the L0 state from the L0s state.</p>
<p id="p-0097" num="0096">In the meantime, the L1 state is a Higher latency, lower power standby state. In the L1 state, all platform provided main power supplies and component reference clocks must remain active at all times. However, the internal PLL of the components are blocked in the L1 state. Accordingly, a further greater power saving effect is obtained.</p>
<p id="p-0098" num="0097">In addition, it usually takes some micro seconds to return to the L0 state from the L1 state.</p>
<p id="p-0099" num="0098">Meanwhile, the L2 state is an Auxiliary powered Link deep energy saving state. In the L2 state, the main power and reference clock supplied to the components are blocked. The logic for reactivating the Link depends on the auxiliary power supply in the L2 state.</p>
<p id="p-0100" num="0099">Finally, the L3 state is a Link Off state, and at this time, the supply of all power is blocked.</p>
<p id="p-0101" num="0100">Accordingly, when the first or second graphic controller <b>10</b><i>a </i>or <b>20</b> is connected to the MCH <b>10</b> or other control devices through the PCI-E, the Link power management state is controlled to be in the L0 state in order to normally operate the first or second graphic controller <b>10</b><i>a </i>or <b>20</b>.</p>
<p id="p-0102" num="0101">When any one of the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> is operated, the other Link is controlled to be in any one of the states L0s, L1, L2, and L3. However, since it should be easy to return to the L0 state in order to easily control adaptive operation of the graphic controllers, it is desirable to transit the Link power management state to the L0s or L1 state.</p>
<p id="p-0103" num="0102">Meanwhile, in a state where both of the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> operate (in a dual mode), image data created by applications and programs executed by the CPU <b>50</b> are appropriately distributed among the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> and thus are simultaneously processed in the two graphic controllers.</p>
<p id="p-0104" num="0103">At this time, the distribution of image data as described above may be performed by the CPU <b>50</b> or the MCH <b>10</b>. Also, an additional controller may be separately provided to thereby distribute image data among the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b>.</p>
<p id="p-0105" num="0104">Hereinafter, it will be described below that only the CPU <b>50</b> performs such a function.</p>
<p id="p-0106" num="0105">In distributing created image data, the CPU <b>50</b> classifies the image data based on a variety of criteria and transmits the image data to the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b>. The criteria are determined considering difference in performance between the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b>.</p>
<p id="p-0107" num="0106">That is, as already described above, a separately provided external graphic controller is generally superior in performance to that of an internal graphic controller basically configured within a chipset of a computer, and a plurality of graphic controllers may be different in data processing capability. Accordingly, considering the difference, a variety of criteria are proposed to transmit further more data to a graphic controller having superior performance.</p>
<p id="p-0108" num="0107">First, the CPU <b>50</b> classifies the image data into moving image data and other data and transmits the moving image data to one having the better data processing capability among the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b>.</p>
<p id="p-0109" num="0108">At this time, assuming that the second graphic controller <b>20</b> processes data faster than the first graphic controller <b>10</b><i>a</i>, the embodiments will be described. However, it can be changed depending on the type, usage, and design of the data processing apparatus, and the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> may be configured to have the same capability.</p>
<p id="p-0110" num="0109">Here, the moving image data will be processed by the second graphic controller <b>20</b>, and the other data except the moving image data will be processed by the first graphic controller <b>10</b><i>a. </i></p>
<p id="p-0111" num="0110">In the meantime, the CPU <b>50</b> classifies the image data into 3-dimensional (3D) data and the other data and then transmits the 3D data to the second graphic controller <b>20</b> and the other data except the 3D data to the first graphic controller <b>10</b><i>a. </i></p>
<p id="p-0112" num="0111">In addition, as another criterion, when image data created by an application is transmitted to the same graphic controller, it is previously determined which of the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> each application transmits image data to, and image data can be classified and transmitted depending on the previous determination.</p>
<p id="p-0113" num="0112">For example, which of the graphic controllers the image data will be processed through can be previously set for every application so that an application related to documentation transmits the image data to the first graphic controller <b>10</b><i>a </i>and an application related to playback of moving pictures transmits the image data to the second graphic controller <b>20</b>.</p>
<p id="p-0114" num="0113">Alternatively, an average speed of processing image data is calculated when every application is executed in the CPU <b>50</b> of the data processing apparatus, so that the image data created by an application whose processing speed is higher than a reference value may be automatically set to be transmitted to the second graphic controller <b>20</b> and the image data created by an application whose processing speed is lower than the reference value may be automatically set to be transmitted to the first graphic controller <b>10</b><i>a. </i></p>
<p id="p-0115" num="0114">That is, when executing each application, the CPU <b>50</b> calculates and stores the data processing amount per unit time by dividing the data processing amount of all driven graphic controllers for image data created by the execution of the corresponding application by the entire execution time of the corresponding application.</p>
<p id="p-0116" num="0115">Then, the data processing amount per unit time is accumulated and averaged whenever the corresponding application is executed, thereby obtaining information on an average image data processing speed for every application when the application is executed.</p>
<p id="p-0117" num="0116">Then, using such information, the average image data processing speed of a specific application is compared with the reference value and which of the graphic controllers will process image data is determined.</p>
<p id="p-0118" num="0117">In addition, the CPU <b>50</b> or the MCH <b>10</b> may classify image data by limiting the number of applications that create the image data processed by the first or second graphic controller <b>10</b><i>a </i>or <b>20</b>.</p>
<p id="p-0119" num="0118">For example, the first graphic controller <b>10</b><i>a </i>may be set to simultaneously process image data for only five applications. In this case, image data created by applications other than the five applications may be transmitted to the second graphic controller <b>20</b>.</p>
<p id="p-0120" num="0119">As an example, when the operating system executes two identical documentation programs, three Internet browsers, and one moving picture playback program through windows, the image data created by the two documentation programs and three Internet browsers are transmitted to the first graphic controller <b>10</b><i>a</i>, and the image data created by the moving picture playback program is transmitted to the second graphic controller <b>20</b>, so that the number of applications creating the image data processed by the first graphic controller <b>10</b><i>a </i>can be limited.</p>
<p id="p-0121" num="0120">At this time, since the amount of image data to be processed by each application is different from others, execution units of each application may be re-set.</p>
<p id="p-0122" num="0121">For example, if one documentation program is executed, it is considered as one execution unit. At this time, since an Internet browser processes more image data compared with a documentation program, one Internet browser may be considered as two execution units. On the same account, a moving picture playback program may be previously set as four execution units.</p>
<p id="p-0123" num="0122">In this case, in the example described above, two execution units of the documentation program, six execution units of the Internet browser, and four execution units of the moving picture playback program are simultaneously executed.</p>
<p id="p-0124" num="0123">At this time, if the number of application execution units that can be simultaneously processed by the first graphic controller <b>10</b><i>a </i>is set to five, the CPU <b>50</b> or the MCH <b>10</b> may distribute image data to the first graphic controller <b>10</b><i>a </i>by combining one execution unit of the documentation program with four execution units of the Internet browser, one execution unit of the documentation program with four execution units of the moving picture playback program, or the like based on the setting.</p>
<p id="p-0125" num="0124">When three or more graphic controllers are provided unlike the example described above, execution units of an application that can be simultaneously processed by each graphic controller may be previously set to distribute image data based the setting.</p>
<p id="p-0126" num="0125">In addition, the CPU <b>50</b> or the MCH <b>10</b> may detect the amount of image data loaded on the first or second memory unit <b>30</b><i>a </i>or <b>40</b> and distribute the image data based on the amount of the loaded image data.</p>
<p id="p-0127" num="0126">The first and second memory units <b>30</b><i>a </i>and <b>40</b> store the image data to be processed by the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b>, respectively. The image data stored in the first and second memory units <b>30</b><i>a </i>and <b>40</b> are processed by the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b>, respectively, and deleted after being processed. The image data distributed by the CPU <b>50</b> or the MCH <b>10</b> are stored again in the first and second memory units <b>30</b><i>a </i>and <b>40</b>, and these processes are repeated.</p>
<p id="p-0128" num="0127">Accordingly, the CPU <b>50</b> or the MCH <b>10</b> may detect the amount of the image data respectively stored in the first and second memory units <b>30</b><i>a </i>and <b>40</b> and distribute the image data to a memory unit loaded with a smaller amount of image data.</p>
<p id="p-0129" num="0128">Other than these, the CPU <b>50</b> or the MCH <b>10</b> appropriately distributes image data among a plurality of graphic controllers considering characteristics and processing capabilities of graphic controllers and characteristics of image data or applications.</p>
<p id="p-0130" num="0129">In addition, when a plurality of applications are executed in the data processing apparatus, the CPU <b>50</b> or the MCH <b>10</b> calculates the amount of image data created by each application per unit time. The image data created by an application that creates a large amount image data are transmitted to the second graphic controller <b>20</b>, while the image data created by an application that creates a relatively small amount of image data to the first graphic controller <b>10</b><i>a</i>. At this time, a large or small amount of image data created per unit time may be determined relatively or based on a predetermined value.</p>
<p id="p-0131" num="0130">Also, the image data distributed to the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> as described above are respectively processed by the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> and outputted on the display <b>80</b>.</p>
<p id="p-0132" num="0131">Hereinafter, a data processing method according to the specific embodiment of the present invention will be described in detail with reference to <figref idref="DRAWINGS">FIGS. 2 to 6</figref>.</p>
<p id="p-0133" num="0132"><figref idref="DRAWINGS">FIG. 2</figref> is a flowchart illustrating an adaptive graphic data processing method using the data processing apparatus provided with a plurality of graphic controllers. <figref idref="DRAWINGS">FIG. 3</figref> is a flowchart stepwise illustrating a data processing method according to the specific embodiment of the present invention. <figref idref="DRAWINGS">FIG. 4</figref> is a flowchart stepwise illustrating a data processing method according to a first embodiment of the present invention in steps. <figref idref="DRAWINGS">FIG. 5</figref> is a flowchart stepwise illustrating a data processing method according to a second embodiment of the present invention in steps. <figref idref="DRAWINGS">FIG. 6</figref> is a flowchart stepwise illustrating a data processing method according to a third embodiment of the present invention in steps.</p>
<p id="p-0134" num="0133">Prior to the description of the data processing method according to the specific embodiment of the present invention, a method of adaptively changing the number and type of graphic controllers being operated in consideration of a system state and the processing amount of image data in a terminal provided with a plurality of graphic controllers such as the data processing apparatus according to the present invention will be described first.</p>
<p id="p-0135" num="0134">As shown in <figref idref="DRAWINGS">FIG. 2</figref>, in the data processing apparatus provided with a plurality of graphic controllers, the first graphic controller <b>10</b><i>a </i>preferentially processes image data (step S<b>10</b>).</p>
<p id="p-0136" num="0135">However, if the amount of the image data processed by the first graphic controller <b>10</b><i>a </i>per unit time is larger than a predetermined value (step S<b>20</b>), the image data are transmitted to be processed by the second graphic controller <b>20</b> (step S<b>30</b>).</p>
<p id="p-0137" num="0136">If the amount of the image data processed by the first graphic controller <b>10</b><i>a </i>is smaller than a predetermined value, the image data are processed by the first graphic controller <b>10</b><i>a. </i></p>
<p id="p-0138" num="0137">In the meantime, even while the image data are processed by the second graphic controller in step S<b>30</b>, it is continuously monitored whether the amount of the image data processed by the second graphic controller per unit time is larger than a predetermined value (step S<b>40</b>).</p>
<p id="p-0139" num="0138">At this time, the predetermined value in step S<b>40</b> is larger than the predetermined value in step S<b>20</b>. However, it is assumed that the performance of the second graphic controller <b>20</b> is higher than that of the first graphic controller <b>10</b><i>a. </i></p>
<p id="p-0140" num="0139">In the meantime, if the amount of the image data processed by the second graphic controller per unit time is larger than the predetermined value in step S<b>40</b>, both of the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> are used in processing the image data (step S<b>50</b>).</p>
<p id="p-0141" num="0140">Then, through the operation of continuously monitoring the amount of the image data processed by the graphic controllers being operated per unit time, the amount of the image data processed per unit time is compared with a predetermined value and the number and type of graphic controllers being operated is changed repeatedly.</p>
<p id="p-0142" num="0141">At this time, a case where both the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> are simultaneously operated in step S<b>50</b> will be described as a dual mode hereinafter.</p>
<p id="p-0143" num="0142">As shown in <figref idref="DRAWINGS">FIG. 3</figref>, the data processing method according to the specific embodiment of the present invention starts from the step of entering the dual mode in which the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> simultaneously operate (step S<b>100</b>).</p>
<p id="p-0144" num="0143">Then, if entering the dual mode in step S<b>100</b>, the step of classifying image data into image data for the first graphic controller <b>10</b> and image data for the second graphic controller <b>20</b> and transmitting the classified image data is performed (step S<b>200</b>).</p>
<p id="p-0145" num="0144">At this time, although a variety of criteria may be applied to classify the image data, considering data processing capabilities of the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> preferentially, the image data may be classified so that a large amount of image data is distributed to a graphic controller having further superior data processing capability.</p>
<p id="p-0146" num="0145">Detailed criteria for classifying image data will be described later with reference to <figref idref="DRAWINGS">FIGS. 4 to 6</figref>.</p>
<p id="p-0147" num="0146">Then, the first and second graphic controllers <b>10</b><i>a </i>and <b>20</b> receiving the image data classified and transmitted in step S<b>200</b> respectively process the image data (step S<b>300</b>) and output processing results on the display <b>80</b>.</p>
<p id="p-0148" num="0147">In the meantime, step S<b>200</b> of the data processing method may be accomplished in a variety of ways.</p>
<p id="p-0149" num="0148">As shown in <figref idref="DRAWINGS">FIG. 4</figref>, step S<b>200</b> first starts from the step of determining the type of image data by the CPU <b>50</b> or the MCH <b>10</b> (step S<b>210</b>).</p>
<p id="p-0150" num="0149">If the image data is determined to be moving image data in step S<b>210</b> (step S<b>212</b>), the image data are transmitted to the second graphic controller <b>20</b> (step S<b>216</b>).</p>
<p id="p-0151" num="0150">However, if the image data is determined not to be moving image data as a result of the determination in step S<b>210</b>, the CPU <b>50</b> or the MCH <b>10</b> transmits the image data to the first graphic controller <b>10</b><i>a </i>(step S<b>214</b>).</p>
<p id="p-0152" num="0151">Then, as shown in <figref idref="DRAWINGS">FIG. 5</figref>, step S<b>200</b> starts from the step of determining the type of image data by the CPU <b>50</b> or the MCH <b>10</b> (step S<b>230</b>).</p>
<p id="p-0153" num="0152">If the image data is determined to be 3D data in step S<b>230</b> (step S<b>232</b>), the CPU <b>50</b> or the MCH <b>10</b> transmits the image data to the second graphic controller <b>20</b> (step S<b>236</b>).</p>
<p id="p-0154" num="0153">However, if the image data is determined not to be 3D data in step S<b>230</b> (step S<b>232</b>), the CPU <b>50</b> or the MCH <b>10</b> transmits the image data to the first graphic controller <b>10</b><i>a </i>(step S<b>234</b>).</p>
<p id="p-0155" num="0154">In addition, as shown in <figref idref="DRAWINGS">FIG. 6</figref>, step S<b>200</b> of the data processing method according to the specific embodiment of the present invention starts from the step of determining the type of an application that creates image data by the CPU <b>50</b> or the MCH <b>10</b> (step S<b>250</b>).</p>
<p id="p-0156" num="0155">Then, the step of confirming a graphic controller that is previously set to process the image data created by the application determined in step S<b>250</b> is performed (step S<b>252</b>).</p>
<p id="p-0157" num="0156">If the graphic controller previously set to process the image data of the corresponding application is the first graphic controller as a result of the confirmation in step S<b>252</b> (step S<b>254</b>), the CPU <b>50</b> or the MCH <b>10</b> transmits the image data to the first graphic controller <b>10</b><i>a </i>(step S<b>256</b>).</p>
<p id="p-0158" num="0157">On the other hand, if the graphic controller previously set to process the image data of a corresponding application is not the first graphic controller (step S<b>254</b>), the CPU <b>50</b> or the MCH <b>10</b> transmits the image data to the second graphic controller <b>20</b> (step S<b>258</b>).</p>
<p id="p-0159" num="0158">For example, when the image data is created by a documentation program, the image data is determined to have been created by the documentation program in step S<b>250</b>, and it is confirmed that the data created by the documentation program is set to be processed by the first graphic controller <b>10</b><i>a </i>in step S<b>252</b>. Then, step S<b>200</b> is completed by transmitting the image data to the first graphic controller <b>10</b><i>a. </i></p>
<p id="p-0160" num="0159">Other than these, as described above, step S<b>200</b> of the data processing method may be configured so that after detecting the amount of image data loaded at least one of the first and second memory units <b>30</b><i>a </i>and <b>40</b>, the image data are not transmitted to a graphic controller in which the amount of the image data is larger than a reference value, so that after calculating ratios of the amounts of currently loaded image data to storage capacities of the first and second memory units <b>30</b><i>a </i>and <b>40</b>, the image data are transmitted to a graphic controller in which the ratio is lower.</p>
<p id="p-0161" num="0160">The scope of the present invention is not limited to the embodiments described above but is defined by the appended claims. It will be apparent that those skilled in the art can make various modifications and changes thereto within the scope of the invention defined by the claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A portable terminal, comprising:
<claim-text>a controller;</claim-text>
<claim-text>a first graphical processing core configured to process data;</claim-text>
<claim-text>a second graphical processing core, which is faster than the first graphical processing core, configured to process the data,</claim-text>
<claim-text>wherein the first and second graphical processing cores are integrated into a single chipset,</claim-text>
<claim-text>wherein the portable terminal is configured to be operated in a standby state or an operating state, and</claim-text>
<claim-text>wherein the first and second graphical processing cores are configured to be individually enabled or disabled based on a workload in the operating state; and</claim-text>
<claim-text>a storage unit configured to store multimedia data,</claim-text>
<claim-text>wherein the portable terminal is configured to play back the multimedia data stored in the storage unit,</claim-text>
<claim-text>wherein the portable terminal is configured for Internet access,</claim-text>
<claim-text>wherein the controller is configured to:
<claim-text>calculate an average speed for processing an executable application program,</claim-text>
<claim-text>assign image data generated by the executable application program to the first graphical processing core if the average speed is lower than a first reference value, and</claim-text>
<claim-text>assign the image data generated by the executable application program to the second graphical processing core if the average speed is above the first reference value; and</claim-text>
</claim-text>
<claim-text>wherein the controller is further configured to:
<claim-text>calculate an amount of the image data generated by the executable application program,</claim-text>
<claim-text>assign the image data to the first graphical processing core if the amount of image data is lower than a second reference value, and</claim-text>
</claim-text>
<claim-text>assign the image data to the second graphical processing core if the amount of image data is above the second reference value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The portable terminal of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the data includes first and second images.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The portable terminal of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the first and second images are the same image.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The portable terminal of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the first and second images are not the same image.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The portable terminal of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>a battery configured to supply power to the first and second graphical processing cores.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The portable terminal of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>a first memory associated with the first graphical processing core; and</claim-text>
<claim-text>a second memory associated with the second graphical processing core,</claim-text>
<claim-text>wherein the first memory and the second memory are configured to exchange data if a mode of the portable terminal is changed.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The portable terminal of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein in the standby state, power is not supplied to at least one of the first and second graphical processing cores.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A single chipset for a portable terminal, the single chipset comprising:
<claim-text>a controller;</claim-text>
<claim-text>a first graphical processing core configured to process data; and</claim-text>
<claim-text>a second graphical processing core, which is faster than the first graphical processing core, configured to process the data,</claim-text>
<claim-text>wherein the first and second graphical processing cores are integrated into the single chipset,</claim-text>
<claim-text>wherein the portable terminal is configured to be operated in a standby state or an operating state,</claim-text>
<claim-text>wherein the first and second graphical processing cores are configured to be individually enabled or disabled based on a workload in the operating state,</claim-text>
<claim-text>wherein the single chipset is configured to enable the portable terminal to play back multimedia data and to perform Internet access,</claim-text>
<claim-text>wherein the controller is configured to:
<claim-text>calculate an average speed for processing an executable application program,</claim-text>
<claim-text>assign image data generated by the executable application program to the first graphical processing core if the average speed is lower than a first reference value, and</claim-text>
<claim-text>assign the image data generated by the executable application program to the second graphical processing core if the average speed is above the first reference value, and</claim-text>
</claim-text>
<claim-text>wherein the controller is further configured to:
<claim-text>calculate an amount of the image data generated by the executable application program,</claim-text>
<claim-text>assign the image data to the first graphical processing core if the amount of data is lower than a second reference value, and</claim-text>
<claim-text>assign the image data to the second graphical processing core if the amount of data is above the second reference value.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The single chipset of <claim-ref idref="CLM-00008">claim 8</claim-ref>,
<claim-text>wherein the data includes first and second images, and</claim-text>
<claim-text>wherein the first and second images are not the same image.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The single chipset of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:
<claim-text>a third graphical processing core configured to process a still image.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The single chipset of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the single chipset is configured to receive power from a battery.</claim-text>
</claim>
</claims>
</us-patent-grant>
