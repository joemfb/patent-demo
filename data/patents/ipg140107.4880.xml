<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625974-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625974</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13113431</doc-number>
<date>20110523</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>234</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>N</subclass>
<main-group>5</main-group>
<subgroup>783</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>386350</main-classification>
<further-classification>725 36</further-classification>
</classification-national>
<invention-title id="d2e53">Obscuring advertisements during trick mode operation</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>7043746</doc-number>
<kind>B2</kind>
<name>Ma</name>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>725 22</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7716700</doc-number>
<kind>B2</kind>
<name>Carlucci et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>725 32</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7877766</doc-number>
<kind>B1</kind>
<name>Wu et al.</name>
<date>20110100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>725 22</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7962942</doc-number>
<kind>B1</kind>
<name>Craner</name>
<date>20110600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>725 88</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>8055781</doc-number>
<kind>B2</kind>
<name>Fernandez</name>
<date>20111100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709229</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>8355506</doc-number>
<kind>B2</kind>
<name>Smith</name>
<date>20130100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>380210</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2003/0149975</doc-number>
<kind>A1</kind>
<name>Eldering et al.</name>
<date>20030800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>725 34</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2003/0188317</doc-number>
<kind>A1</kind>
<name>Liew et al.</name>
<date>20031000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>725 88</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2004/0073947</doc-number>
<kind>A1</kind>
<name>Gupta</name>
<date>20040400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>725134</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2009/0172723</doc-number>
<kind>A1</kind>
<name>Shkedi et al.</name>
<date>20090700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>725 32</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2010/0218208</doc-number>
<kind>A1</kind>
<name>Holden</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>725 32</main-classification></classification-national>
</us-citation>
</us-references-cited>
<number-of-claims>19</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>386343</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>386350</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>725 32</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>725 36</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>8</number-of-drawing-sheets>
<number-of-figures>10</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61347387</doc-number>
<date>20100522</date>
</document-id>
</us-provisional-application>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Pinson</last-name>
<first-name>George Scott</first-name>
<address>
<city>Portland</city>
<state>OR</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Pinson</last-name>
<first-name>George Scott</first-name>
<address>
<city>Portland</city>
<state>OR</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Van Aacken</last-name>
<first-name>Troy A.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>ARRIS Enterprises, Inc.</orgname>
<role>02</role>
<address>
<city>Suwanee</city>
<state>GA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Harvey</last-name>
<first-name>David</first-name>
<department>2481</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Various methods, systems, and apparatuses can be used to obscure advertisements during trick mode operations. In some implementations, the trick mode stream can be selected so as to not include advertisement frames within the trick mode stream. Upon resuming normal operation, the advertisements can be included within the normal playback stream.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="240.37mm" wi="142.07mm" file="US08625974-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="238.59mm" wi="172.80mm" orientation="landscape" file="US08625974-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="244.26mm" wi="199.73mm" file="US08625974-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="254.93mm" wi="189.15mm" file="US08625974-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="211.58mm" wi="188.30mm" file="US08625974-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="193.21mm" wi="132.76mm" file="US08625974-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="234.02mm" wi="149.10mm" file="US08625974-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="259.42mm" wi="148.67mm" file="US08625974-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="163.83mm" wi="187.11mm" file="US08625974-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is a non-provisional application claiming the benefit of co-pending U.S. Provisional Application Ser. No. 61/347,387, entitled &#x201c;Obscuring Advertisements During Trick Mode Operation,&#x201d; filed May 22, 2010, which is hereby incorporated by reference in its entirety.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">TECHNICAL FIELD</heading>
<p id="p-0003" num="0002">This disclosure relates to feedback information provided to users during trick mode operations.</p>
<heading id="h-0003" level="1">BACKGROUND</heading>
<p id="p-0004" num="0003">In addition to transporting data traffic, as well as television content signals over a CATV network, multiple services operators (MSO) also use their CATV network infrastructure for carrying voice, video on demand (VoD) and video conferencing traffic signals, among other types. Digital video recorders (DVRs) and personal video recorders (PVRs) have allowed users to record programs for later viewing, thereby time-shifting their television viewing. Moreover, video services over internet protocol (IP) have become increasingly available from a multitude of content providers and/or distributors, including, for example, YouTube, Hulu, Netflix, ESPN, etc.</p>
<p id="p-0005" num="0004">Traditional distribution models typically derive revenue from advertising. However, traditional distribution models do not take into account various trick mode features such as forward search (e.g., fast forward) and reverse search (e.g., rewind). These features can allow users to skip over advertisements thereby reducing the value of the advertising spot for the provider's advertisers. Some content providers have attempted to combat this problem by disabling trick mode functions altogether or only during advertisements. Other content providers have attempted to avoid the problem by returning to normal mode during an advertisement. However, viewers can become confused when these methods are employed.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram illustrating an exemplary network environment operable to provide obscured advertisements during trick mode operation.</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram illustrating an example flow for a program in normal playback mode with advertisements inserted at various intervals.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram illustrating an example flow for a program in trick mode having advertisements obscured.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIGS. 4A-B</figref> are block diagrams illustrating example flows for a program when the trick mode has overrun a scheduled advertisement slot.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 5</figref> is a block diagram illustrating an example digital video recorder/video on demand system providing obscured advertisements during trick mode operation.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIGS. 6-8</figref> are flowcharts illustrating various example processes to provide obscured advertisements during trick mode operation.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 9</figref> is a component diagram of an example video presentation system operable to obscure advertisements during trick mode operations.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<p id="p-0013" num="0012">Like reference numbers and designations in the various drawings indicate like elements.</p>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0014" num="0013">In many systems, trick mode (such as, e.g., forward search, reverse search, skip ahead, skip back, etc.) is enabled during playback of available content. Available content can include video on demand content retrieved from a remote server or content retrieved from a local store (e.g., from a DVR, PVR, or other end-user content access device). However, because advertisers pay for these slots, they would like users to view the advertisements. Sometimes, advertisers require that MSOs disable trick mode functionality during playback of advertisements. However, this can be intrusive to viewers, and can be especially disruptive for viewers who are merely trying to locate a scene rather than intending to bypass advertisements.</p>
<p id="p-0015" num="0014">Thus, in some implementations of this disclosure, systems and methods can operate to obscure advertisements during trick mode operations. For example, when a user enters trick mode, the content can appear continuous, as if there were no advertisements within the content. In some implementations, when a user returns to normal playback, and is determined to have skipped an advertisement break, the skipped advertisement break can be queued up to be presented prior to resumption of the content playback. In other implementations, when a user returns to normal playback, the content is restarted immediately, ignoring any skipped advertisement breaks. However, because the advertisements are not shown in trick mode, the user does not know when the advertisement break has been passed or not. While many of the implementations disclosed herein are described in terms of forward search and reverse search, it should be understood that similar techniques can be applied to skip forward and skip backward functionality to reduce the efficacy of those functions in skipping advertisements, as well.</p>
<p id="p-0016" num="0015">In further implementations, a device can infer the intent of the user based upon context associated with user inputs. Such inferred intent can be used to determine whether to queue the advertisements for presentation on exit from trick mode. Thus, for example, if a user enters trick mode during an advertising break, it can be inferred that the user is attempting to skip advertisements, and the advertisements can be queued for presentation upon exit of trick mode. Alternatively, if the user skips over a substantial portion of content in trick mode, it can be inferred that the user is searching for a scene rather than attempting to skip advertisements, and any skipped advertisements are not shown upon return to normal playback. In still further alternative examples, if the user returns to normal playback within a specified period of time after an advertisement break, it can be inferred that the user intended to skip the advertisement break, and the advertisements for the break can be queued for presentation to the user upon return to normal playback. In some implementations, if the user skips multiple advertising breaks, the playback device might avoid displaying advertisements, or might only provide a portion of the skipped advertisements, rather than queuing all of the skipped advertisements.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram illustrating an exemplary network environment <b>100</b> operable to obscure advertisements during trick play operation. In some implementations, a headend <b>110</b> can provide video, data and/or voice service(s) to one or more subscribers <b>120</b><i>a</i>-<i>d </i>(e.g., cable modem(s) and/or set-top box(es)). The headend <b>110</b> can include devices such as an edge quadrature amplitude modulation (EQAM) device <b>130</b> and a cable modem termination system (CMTS) <b>140</b>. Video streams can be received from a video source (or sources) <b>150</b> through a source headend <b>160</b> via a network(s) <b>170</b> (e.g., including an IP network). In some implementations, these video streams can enter the system as raw moving picture experts group (MPEG) streams, or any other streaming video protocol supported by the headend <b>110</b> and/or EQAM device <b>130</b>.</p>
<p id="p-0018" num="0017">In other implementations, video streams can be received by the CMTS <b>140</b> from a video on demand (VOD) server <b>145</b>. The VOD server can receive requests for video service via the CMTS, and provide the requested video to the CMTS. The CMTS can address the video to one or more subscribers <b>120</b><i>a</i>-<i>d </i>and forward the addressed video to the QAM for modulation onto a carrier signal.</p>
<p id="p-0019" num="0018">Data services can be handled by the headend <b>110</b> through a CMTS <b>140</b>. The CMTS <b>140</b> can receive data signals from subscribers <b>120</b><i>a</i>-<i>d </i>and server(s) <b>180</b> through an external network(s) <b>190</b> (e.g., including the Internet). The network(s) <b>190</b>, for example, can operate using Internet protocol (IP), sending data packets to and receiving data packets from the headend <b>110</b>. In some examples, the CMTS <b>140</b> can be paired with a SIP proxy server (not shown) operable to provide voice over internet protocol (VoIP) services with connectivity to the public switched telephone network (PSTN). In still further examples, one or more video sources <b>150</b> may provide streaming data through the network(s) <b>190</b> to the CMTS <b>140</b>.</p>
<p id="p-0020" num="0019">In some implementations, the CMTS <b>140</b> can forward received packets to the EQAM device <b>130</b> used to modulate the signal onto a carrier waveform. The carrier waveform can include both data and video streams, in both multicast and unicast (e.g., point-to-point) formats for transmission to a combiner, which can combine multiple signals onto a single fiber for transmission to one or more service groups <b>120</b><i>a</i>-<i>d </i>via a hybrid fiber-coax (HFC) network <b>195</b>. In other implementations, the CMTS <b>140</b> can modulate a baseband signal to a carrier wave and transmit the signal to a combiner for upconversion to a transmission frequency.</p>
<p id="p-0021" num="0020">In some implementations, edge termination devices (e.g., including CMTS, EQAM systems, wireless access points, and wireless base stations, among others) can include a combiner operable to multiplex multiple baseband signals into multiple RF channels for output to one or more ports. The edge termination devices can further include a switching module operable to provide switching to configure which RF channels are connected to each output port. In some implementations, the switching module can configure a number of RF channels connected to each output port. Thus, for example, where a particular service group consumes a large amount of bandwidth, the switching module can connect more RF channels to that service group. In another example, where a particular service group does not consume a large amount of bandwidth, the switching module might provide no more than the number of channels indicated by the bandwidth consumption.</p>
<p id="p-0022" num="0021">When a device, such as, e.g., CPE device <b>120</b><i>a</i>-<i>d </i>initially attempts connect to the headend <b>110</b>, the device <b>120</b><i>a</i>-<i>d </i>can go through a registration process with the headend <b>110</b>. The registration process typically includes retrieval of a configuration filename from a dynamic host control protocol (DHCP) server through an internal or external network. Upon receipt of the configuration filename, the CPE device <b>120</b><i>a</i>-<i>d </i>identifies a trivial file transfer protocol (TFTP) server where the configuration file is stored. The CPE device <b>120</b><i>a</i>-<i>d </i>then requests the configuration file from the TFTP server using the filename provided by the DHCP server. Upon receiving the configuration file, the CPE device <b>120</b><i>a</i>-<i>d </i>registers with the CMTS <b>140</b>.</p>
<p id="p-0023" num="0022">In some implementations, one or more of the VOD server <b>145</b>, the subscriber device(s) <b>120</b><i>a</i>-<i>d</i>, the streaming source(s) <b>150</b>, <b>180</b>, or any of the device(s) that reside at the headend can be operable to obscure advertisements during trick mode operation.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram illustrating an example flow for a program in normal playback mode with advertisements inserted at various intervals. The status bar <b>200</b> can indicate a user's progress through a program. A first segment <b>210</b><i>a </i>of the status bar <b>200</b> can correspond to a first portion of the content <b>210</b><i>b</i>. A second segment <b>220</b><i>a </i>of the status <b>200</b> bar can correspond to a first advertising break comprising advertisements <b>220</b><i>b</i>. Next a third segment <b>230</b><i>a </i>of the status bar <b>200</b> can correspond to a second portion of the content <b>230</b><i>b</i>, and a fourth segment <b>240</b><i>a </i>of the status bar <b>200</b> can correspond to a second advertising break comprising advertisements <b>240</b><i>b. </i></p>
<p id="p-0025" num="0024">Thus, in normal playback, during the first segment <b>210</b><i>a </i>of the status bar, a first portion of the content <b>210</b><i>b </i>will be displayed and during the third segment <b>230</b><i>a </i>of the status bar <b>200</b>, a second segment of the content <b>230</b><i>b </i>will be displayed. The first portion of the content <b>210</b><i>b </i>can comprise various digital video formats (e.g., including any motion picture experts group (MPEG) video standard, video compression 1 (VC1) standards, audio video interleave, etc.), as well as analog video. In some implementations, the content <b>210</b><i>b </i>can include a frame-based construction, whereby frames (e.g., including intra-coded frames (i-frames), predictive coded frames (p-frames), and/or bidirectional coded frames (b-frames) of the video are communicated to the display device.</p>
<p id="p-0026" num="0025">Upon completion of the first portion of content <b>210</b><i>b </i>or a second portion of content <b>230</b><i>b</i>, the display device can display a first set of advertisements <b>220</b><i>b </i>or a second set of advertisements <b>240</b><i>b</i>, respectively. The advertisements <b>220</b><i>b</i>, <b>240</b><i>b </i>can include content in various digital or analog video formats. In some implementations, the advertisements <b>220</b><i>b</i>, <b>240</b><i>b </i>can be woven into the content <b>210</b><i>b</i>, <b>230</b><i>b </i>at a headend device. In such implementations, the advertisements <b>220</b><i>b</i>, <b>240</b><i>b </i>can be delineated from the content using tags within the content. In other implementations, the advertisements can be inserted into the content at the set top. In such implementations, the content can include tags notifying the set top box when to retrieve advertisements and where to insert the advertisements into the content. In still further implementations, the presence of an advertisement can be inferred in non-tagged content based upon elapsed time within a program, abrupt picture or volume changes within the stream, or the presence or absence of a watermark within the streaming content.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram illustrating an example flow for a program in trick mode having advertisements obscured. When the user enters trick mode, the status bar <b>300</b> shows that the advertisements have been removed from the flow of the program stream. It should be understood that the status bar displayed to the user need not physically shrink, but rather the status bar <b>300</b> in the figures is shown smaller for purposes of clarity in explanation. However, in some implementations, the status bar <b>300</b> displayed to the user can be reduced to provide better context of where the currently displayed frame resides within the content.</p>
<p id="p-0028" num="0027">In some implementations, when the user enters trick mode, the advertisements <b>320</b><i>b</i>, <b>340</b><i>b </i>can be obscured for the duration of the trick mode operation. Thus, the user would only see trick mode frames selected from the content frames <b>310</b><i>b</i>, <b>330</b><i>b </i>for the duration of time the user remains in trick mode. For example, while the status bar is in a first segment <b>310</b><i>a</i>, trick mode frames for the trick mode operations can be selected from the first portion of content <b>310</b><i>b</i>, and while the status bar is in the second segment <b>330</b><i>a</i>, trick mode frames for the trick mode operations can be selected from the second portion of content <b>330</b><i>b. </i></p>
<p id="p-0029" num="0028">In some implementations, the point of separation between the first content frames <b>310</b><i>b </i>and the second content frames <b>330</b><i>b </i>can be obscured so as to prevent the user from knowing exactly where in the content the advertisement breaks reside. Thus, the user cannot use the context provided by the display to determine whether an advertising break is over. Without this context, the user is just guessing as to where to resume normal playback. For example, a user might fast forward past an advertising break, but miss a portion of the content that follows the advertising break. Upon realizing that he/she has missed a portion of the content that follows the advertising break, he/she might decide to rewind. Because the contextual frames and/or status bar location of the advertisements are missing, he/she might reverse too far and end up prior to the advertising break. Thus, obscuring the advertisements can reduce the utility of the forward and reverse search functions in skipping advertisements.</p>
<p id="p-0030" num="0029">In some implementations, a control device (not shown) for the video presentation system can keep track of whether or not a user has overrun a scheduled advertising. In such implementations, when a user returns to normal playback, the device can determine whether to replay a skipped advertisement. In further implementations, a control device can keep track of how many advertisements have been skipped and can replay only a subset of those advertisements upon return to normal playback mode.</p>
<p id="p-0031" num="0030">In additional implementations, a determination can be inferred from the user's actions about whether the user entered trick mode with the purpose of skipping advertisements. For example, if the advertisement is a small portion of the time the user remains in trick mode, it might be assumed that the user is searching for a scene rather than skipping advertisements. In another example, if the user enters trick mode within a certain period of time (e.g., 5-10 seconds) before the advertisement and/or exits trick mode within a certain period (e.g., 5-10 seconds) of time after the advertisement would have concluded, it can be assumed that the user is attempting to skip advertisements. In those implementations where the skipped advertisement(s) can be queued for after the user returns from trick mode operation, the skipped advertisement(s) can be displayed to the user prior to resuming play on the content.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIGS. 4A-B</figref> are block diagrams illustrating example flows for a program when the trick mode has overrun a scheduled advertisement slot. <figref idref="DRAWINGS">FIG. 4A</figref> illustrates a situation where an advertisement <b>420</b><i>b </i>is reinserted into the video stream after the user has skipped over an advertisement in trick mode (e.g., intentionally or unintentionally). Thus, for example, at some point prior to the display of the advertisement <b>420</b><i>b</i>, the user entered a forward search mode and continued in trick mode past the end of the first portion of content <b>410</b><i>b </i>represented on the status bar as segment <b>410</b><i>a</i>. Because the user continued in trick mode past the end of the first portion of content <b>410</b><i>b</i>, the user continued into a portion <b>430</b><i>a</i>(<b>1</b>) of the second portion of content <b>430</b><i>b</i>(<b>1</b>), <b>430</b><i>b</i>(<b>2</b>).</p>
<p id="p-0033" num="0032">In some implementations, upon receiving a request from the user to exit trick mode and resume normal playback, the video presentation system can determine to insert advertisement(s) <b>420</b><i>b </i>into an ad break segment <b>420</b><i>a </i>of the status bar <b>400</b> prior to resumption of the second portion of the second content <b>430</b><i>b</i>(<b>2</b>). In some implementations, the advertisements <b>420</b><i>b </i>inserted into the ad break segment <b>420</b><i>a </i>are the same as the advertisements that were skipped. In other implementations, the advertisements <b>420</b><i>b </i>inserted into the ad break segment <b>420</b><i>a </i>are different than the advertisements that were skipped. For example, the advertisements might be refreshed by the video presentation system. Upon completion of the advertisement content <b>420</b><i>b</i>, the second portion of the content <b>430</b><i>b</i>(<b>2</b>) can be displayed, followed by display of the second advertisement(s) <b>440</b><i>b</i>, assuming the system continues in normal playback mode through until the second advertisement(s) <b>440</b><i>b </i>are accessed.</p>
<p id="p-0034" num="0033">In such implementations as those described in <figref idref="DRAWINGS">FIG. 4A</figref>, the user is provided no benefit from skipping over advertisements, because the advertisement is queued up for playback upon resumption of normal playback mode. Thus, the video presentation system can facilitate forward and reverse search modes for searching content, but reduces the efficacy of using forward and reverse search modes for skipping advertisements.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 4B</figref> illustrates one or more alternative implementations where advertisements which are skipped during trick mode are not reinserted into the video stream after the user has skipped over an advertisement in trick mode (e.g., intentionally or unintentionally). In some implementations, when the user is in a first segment <b>460</b><i>a </i>of the status bar <b>400</b><i>b </i>and selects a trick mode function, the video presentation system (e.g., VOD server or DVR), can begin selecting trick mode frames from the content at an increased presentation rate (e.g., in a normal playback mode, the video presentation system might present each of frames 0-100, while in a forward search trick mode, the system might present only frames 0, 20, 40, 60, 80 and 100, for example, thereby appearing to increase the presentation rate of the stream).</p>
<p id="p-0036" num="0035">In some implementations, the frames selected for presentation during trick mode functionality do not include any advertisement frames. Upon resumption of normal playback, the video presentation system can resume normal playback at whatever point within the content that the user requested to resume normal playback. Thus, instead of queuing the advertisement for later playback, the context for the user to recognize when the advertisement would have been displayed is obscured such that the user does not know where within the content the advertisement resides. Thus, if the user is intending to skip commercials, the user will likely also end up skipping over content. For example, a user might be in normal playback mode when a commercial starts and requests forward search trick mode. As soon as the video presentation system enters trick mode, the advertisement is removed from the stream, and the user is fast forwarding past content. Then, when the user emerges from trick mode, the user has bypassed some of the content as well as the advertisement. Moreover, if the user decides to reverse back to the beginning of the second content <b>480</b><i>b</i>(<b>1</b>), the user is likely to end up back in the first content <b>460</b><i>b</i>. Thus, it can be appreciated that the utility of the trick mode for skipping over advertisements is reduced.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 5</figref> is a block diagram illustrating an example digital video recorder/video on demand system providing obscured advertisements during trick mode operation. In some implementations, a video presentation system <b>500</b> can include a control module <b>510</b> (e.g., a processor), an ad obscurement module <b>515</b>, a pointer data store <b>520</b>, a decoder <b>525</b>, a control signal interface <b>530</b>, and an ad retrieval/refresh interface <b>535</b>. In some implementations, the video presentation system <b>500</b> can also include a content data store <b>540</b> and/or an advertisement data store <b>545</b>. In alternative implementations, a content data store <b>540</b> and/or an advertisement data store <b>545</b> can reside at a headend and can be communicated to the video presentation system through an HFC network <b>550</b>.</p>
<p id="p-0038" num="0037">In some implementations, the control module can retrieve content and/or advertisement data from the content data store <b>540</b> and the advertisement data store <b>545</b>, respectively. In those implementations where the content data store <b>540</b> is part of the video presentation system <b>500</b>, the content can be communicated to the control module via a bus interface. In those implementations where the ad data store <b>545</b> is part of the video presentation system <b>500</b>, the advertisements can be communicated to the control module via a bus interface. Alternatively, the content and/or advertisements can be communicated to the control module through an HFC network <b>550</b>.</p>
<p id="p-0039" num="0038">In some implementations, the control module can specify which frames to retrieve from the data stores <b>540</b>, <b>545</b>. For example, while in trick mode, the control module may only request a subset of frames based upon the requested trick mode functionality. Upon receiving the content and/or advertisement data, the control module <b>510</b> can forward the content and/or advertisement data to a decoder <b>525</b>.</p>
<p id="p-0040" num="0039">In some implementations, the decoder <b>525</b> can operate to decode the content and/or advertisement frame data. The content and/or advertisement frame data can be encoded in a variety of different formats, compressed or uncompressed. The decoded content and/or advertisement frame data information can be communicated to a display device <b>555</b>.</p>
<p id="p-0041" num="0040">In some implementations, control signals can be communicated from a remote control device <b>560</b> to a control signal interface <b>530</b>. While the link in <figref idref="DRAWINGS">FIG. 5</figref> is shown as a direct link from the remote control to the video presentation system <b>500</b>, it should be understood that the link may include intermediate devices (such as, e.g., a set top box, a gateway device, one or more network nodes, repeaters, and other network elements). The control signals can operate to provide requests to the control device <b>510</b>. The control device can act based upon the requests received through the control signal interface <b>530</b>.</p>
<p id="p-0042" num="0041">In some implementations, when a control module <b>510</b> receives a request to enter trick mode, the control module can store a pointer to the entry point in a pointer data store <b>520</b>. In such implementations, upon storing the pointer into the pointer data store <b>520</b>, the control module <b>510</b> can send the video stream to an ad obscurement module <b>515</b> to obscure the advertisements from the user while the device is in trick mode.</p>
<p id="p-0043" num="0042">In some implementations, while obscuring the advertisements, the ad obscurement module <b>515</b> can store a pointer to the start of an advertisement and/or the end of an advertisement in the pointer data store <b>520</b>. Upon receipt of a request to resume normal playback, the control module can compare the pointer at which the trick mode operation started, and the point at which the trick mode operation ended, and determine whether any start advertisement or end advertisement pointers occurred between the start and end of the trick mode operation.</p>
<p id="p-0044" num="0043">In some implementations, when an advertisement end occurs between a trick mode start pointer and a trick mode end pointer, the video presentation system <b>500</b> can determine whether to replay at least a portion of the skipped advertisement break. In additional implementations, a determination can be inferred from whether the user intended to skip advertisements or search through content based upon various inferences that can be made from the timing of the trick mode start request and trick mode end request and their relationship to advertisement pointers. In alternative additional implementations, advertisements can be inserted regardless of the user's intent. In other alternative implementations, advertisements are not inserted regardless of the user's intent. Each of these options can operate lowers the value of using trick mode functionality to skip commercials.</p>
<p id="p-0045" num="0044">In some implementations, the ad retrieval/refresh module <b>535</b> can operate to request third party advertisements <b>570</b> (e.g., fresh advertisements) from a third party ad server <b>565</b>. In some examples, the advertisements queued on an ad store <b>545</b> may become stale. In such examples, if the control device identifies a stale advertisement, a fresh third party advertisement <b>570</b>, for example, can be requested from the third party advertising server <b>565</b>. The fresh third party advertisement <b>570</b> can then be inserted into the stream in replacement of the stale advertisement.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIGS. 6-8</figref> are flowcharts illustrating various example processes to provide obscured advertisements during trick mode operation. More specifically, <figref idref="DRAWINGS">FIG. 6</figref> is a flowchart illustrating an example process <b>600</b> to obscure advertisements during trick mode operations without inserting advertisements when an at least a portion of an ad break is skipped. This example process <b>600</b> begins at stage <b>610</b>, where a determination is made whether a search request has been received. The determination can be made, for example, by a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with a control signal interface (e.g., control signal interface <b>530</b> of <figref idref="DRAWINGS">FIG. 5</figref>). In various implementations, the search request can include: forward search, reverse search, skip ahead, and skip back functionalities, among others.</p>
<p id="p-0047" num="0046">At stage <b>620</b>, trick mode is entered based upon receipt of the search request. Trick mode operation can be started, for example, by a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with a content and/or advertisement store (e.g., content store <b>540</b> and/or ad store <b>545</b> of <figref idref="DRAWINGS">FIG. 5</figref>). In some implementations, trick mode is started by selecting a subset of the content frames from a content data store.</p>
<p id="p-0048" num="0047">At stage <b>630</b>, advertisements in trick mode can be obscured. The advertisements can be obscured, for example, by an ad obscurement module (e.g., ad obscurement module <b>515</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>). In some implementations, the ad obscurement module can interact with the controller to identify the start points and end points for advertisement breaks and enable the controller to skip over advertisement breaks in selection of the subset of content frames from the content data store (e.g., when the advertisements have been previously inserted into the content). In implementations where the advertisements are stored separately and inserted at the time of presentation, the controller can merely select frames from the content data store exclusively during trick mode operations (e.g., avoid selecting frames from the advertisement data store).</p>
<p id="p-0049" num="0048">At stage <b>640</b>, a determination is made whether the user has requested to resume normal playback. The determination can be identified, for example, by a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with a control signals interface (e.g., control signals interface <b>530</b> of <figref idref="DRAWINGS">FIG. 5</figref>). In some implementations, the request for normal mode can be initiated by a remote control (e.g., remote control <b>560</b> of <figref idref="DRAWINGS">FIG. 5</figref>) as a result of a user pressing buttons on the remote control. In additional implementations, the control signals can pass through a number of intermediate devices, for example, including one or more of a set top box, a gateway device, a network node, a repeater, or a CMTS device, among many others.</p>
<p id="p-0050" num="0049">If the determination is made that the presentation system is to stay in trick mode, the process <b>600</b> returns to stage <b>630</b>. However, if the determination is made to return to normal playback, at stage <b>650</b>, the advertisements are unobscured. The advertisements can be unobscured, for example, by a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with a content and advertisement store (e.g., content data store <b>540</b> and ad data store <b>545</b> of <figref idref="DRAWINGS">FIG. 5</figref>). The process <b>600</b> ends at stage <b>660</b>.</p>
<p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. 7</figref> is a flowchart illustrating an example process <b>700</b> to obscure advertisements during trick mode operations and re-inserting advertisements when an at least a portion of an ad break is skipped. This example process <b>700</b> begins at stage <b>710</b>, where a determination is made whether a search request has been received. The determination can be made, for example, by a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with a control signal interface (e.g., control signal interface <b>530</b> of <figref idref="DRAWINGS">FIG. 5</figref>). In various implementations, the search request can include: forward search, reverse search, skip ahead, and skip back functionalities, among others.</p>
<p id="p-0052" num="0051">At stage <b>720</b>, trick mode is entered based upon receipt of the search request. Trick mode operation can be started, for example, by a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with a content and/or advertisement store (e.g., content store <b>540</b> and/or ad store <b>545</b> of <figref idref="DRAWINGS">FIG. 5</figref>). In some implementations, trick mode is started by selecting a subset of the content frames from a content data store.</p>
<p id="p-0053" num="0052">At stage <b>730</b>, advertisements in trick mode can be obscured. The advertisements can be obscured, for example, by an ad obscurement module (e.g., ad obscurement module <b>515</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>). In some implementations, the ad obscurement module can interact with the controller to identify the start points and end points for advertisement breaks and enable the controller to skip over advertisement breaks in selection of the subset of content frames from the content data store (e.g., when the advertisements have been previously inserted into the content). In implementations where the advertisements are stored separately and inserted at the time of presentation, the controller can merely select frames from the content data store exclusively during trick mode operations (e.g., avoid selecting frames from the advertisement data store).</p>
<p id="p-0054" num="0053">At stage <b>740</b>, a determination is made whether the user has requested to resume normal playback. The determination can be identified, for example, by a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with a control signals interface (e.g., control signals interface <b>530</b> of <figref idref="DRAWINGS">FIG. 5</figref>). In some implementations, the request for normal mode can be initiated by a remote control (e.g., remote control <b>560</b> of <figref idref="DRAWINGS">FIG. 5</figref>) as a result of a user pressing buttons on the remote control. In additional implementations, the control signals can pass through a number of intermediate devices, for example, including one or more of a set top box, a gateway device, a network node, a repeater, or a CMTS device, among many others.</p>
<p id="p-0055" num="0054">If the determination is made that the presentation system is to stay in trick mode, the process <b>700</b> returns to stage <b>730</b>. However, if the determination is made to return to normal playback, at stage <b>750</b>, a determination is made whether an ad break has been passed. The determination of whether an ad break has been passed can be made, for example, by a controller (e.g., control device <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with an ad obscurement module (e.g., ad obscurement module <b>515</b> of <figref idref="DRAWINGS">FIG. 5</figref>) and a pointer store (e.g., pointer data store <b>520</b> of <figref idref="DRAWINGS">FIG. 5</figref>). In some implementations, a pointer to the start of trick mode operations can be stored in the pointer data store. Pointers to the start of trick mode operations and end of trick mode operations can be compared to determine whether an ad start and/or an ad end occurred during trick mode operations. Thus, if any portion of an ad break is passed, that portion can be re-inserted or a new advertisement can be retrieved.</p>
<p id="p-0056" num="0055">If no portion of the ad break has been skipped, the process can proceed to stage <b>760</b> where the future advertisements are unobscured. The future advertisements can be unobscured, for example, by a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with a content and advertisement store (e.g., content data store <b>540</b> and ad data store <b>545</b> of <figref idref="DRAWINGS">FIG. 5</figref>). The process <b>700</b> ends at stage <b>770</b>.</p>
<p id="p-0057" num="0056">However, if a portion of the ad break has been skipped, the process can proceed to stage <b>780</b>, where ad(s) are presented in response to one or more skipped ad breaks. The ad(s) can be presented, for example, by a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with an ad server (e.g., ad data store <b>545</b> or third party ad retrieval/refresh module <b>535</b> of <figref idref="DRAWINGS">FIG. 5</figref>) and a decoder (e.g., decoder <b>525</b> of <figref idref="DRAWINGS">FIG. 5</figref>). The process <b>700</b> can then proceed to stage <b>760</b> where the future advertisements are unobscured. The future advertisements can be unobscured, for example, by a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with a content and advertisement store (e.g., content data store <b>540</b> and ad data store <b>545</b> of <figref idref="DRAWINGS">FIG. 5</figref>). The process <b>700</b> ends at stage <b>770</b>.</p>
<p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. 8</figref> is a flowchart illustrating another example process <b>800</b> to obscure advertisements during trick mode operations and re-inserting advertisements when an at least a portion of an ad break is skipped. This example process <b>800</b> begins at stage <b>810</b>, where a determination is made whether a search request has been received. The determination can be made, for example, by a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with a control signal interface (e.g., control signal interface <b>530</b> of <figref idref="DRAWINGS">FIG. 5</figref>). In various implementations, the search request can include: forward search, reverse search, skip ahead, and skip back functionalities, among others.</p>
<p id="p-0059" num="0058">At stage <b>820</b>, trick mode is entered based upon receipt of the search request. Trick mode operation can be started, for example, by a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with a content and/or advertisement store (e.g., content store <b>540</b> and/or ad store <b>545</b> of <figref idref="DRAWINGS">FIG. 5</figref>). In some implementations, trick mode is started by selecting a subset of the content frames from a content data store.</p>
<p id="p-0060" num="0059">At stage <b>830</b>, advertisements in trick mode can be obscured. The advertisements can be obscured, for example, by an ad obscurement module (e.g., ad obscurement module <b>515</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>). In some implementations, the ad obscurement module can interact with the controller to identify the start points and end points for advertisement breaks and enable the controller to skip over advertisement breaks in selection of the subset of content frames from the content data store (e.g., when the advertisements have been previously inserted into the content). In implementations where the advertisements are stored separately and inserted at the time of presentation, the controller can merely select frames from the content data store exclusively during trick mode operations (e.g., avoid selecting frames from the advertisement data store).</p>
<p id="p-0061" num="0060">At stage <b>840</b>, a determination is made whether the user has requested to resume normal playback. The determination can be identified, for example, by a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with a control signals interface (e.g., control signals interface <b>530</b> of <figref idref="DRAWINGS">FIG. 5</figref>). In some implementations, the request for normal mode can be initiated by a remote control (e.g., remote control <b>560</b> of <figref idref="DRAWINGS">FIG. 5</figref>) as a result of a user pressing buttons on the remote control. In additional implementations, the control signals can pass through a number of intermediate devices, for example, including one or more of a set top box, a gateway device, a network node, a repeater, or a CMTS device, among many others.</p>
<p id="p-0062" num="0061">If the determination is made that the presentation system is to stay in trick mode, the process <b>800</b> returns to stage <b>830</b>. However, if the determination is made to return to normal playback, at stage <b>850</b>, a determination is made whether an ad break has been passed. The determination of whether an ad break has been passed can be made, for example, by a controller (e.g., control device <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with an ad obscurement module (e.g., ad obscurement module <b>515</b> of <figref idref="DRAWINGS">FIG. 5</figref>) and a pointer store (e.g., pointer data store <b>520</b> of <figref idref="DRAWINGS">FIG. 5</figref>). In some implementations, a pointer to the start of trick mode operations can be stored in the pointer data store. Pointers to the start of trick mode operations and end of trick mode operations can be compared to determine whether an ad start and/or an ad end occurred during trick mode operations. Thus, if any portion of an ad break is passed, that portion can be re-inserted or a new advertisement can be retrieved.</p>
<p id="p-0063" num="0062">If no portion of the ad break has been skipped, the process can proceed to stage <b>860</b> where the future advertisements are unobscured. The future advertisements can be unobscured, for example, by a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with a content and advertisement store (e.g., content data store <b>540</b> and ad data store <b>545</b> of <figref idref="DRAWINGS">FIG. 5</figref>). The process <b>800</b> ends at stage <b>870</b>.</p>
<p id="p-0064" num="0063">However, if a portion of the ad break has been skipped, the process can proceed to stage <b>880</b>, where a determination is made whether the user intended to use the trick mode operation to skip at least a portion of the advertisement break. The determination can be made, for example, by a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with a pointer store (e.g., pointer data store <b>520</b> of <figref idref="DRAWINGS">FIG. 5</figref>). In some implementations, the determination can be made based upon the timing of the request to enter trick mode in comparison to the starting point and/or ending point of an advertisement, or the total elapsed time spent in trick mode.</p>
<p id="p-0065" num="0064">If the trick mode operation is determined not to have been intended to skip an ad break, the process <b>800</b> can proceed to stage <b>860</b>. However, if the trick mode operation was determined to be intended to skip advertisements, the process <b>800</b> can proceed to stage <b>890</b> where ad(s) are presented in response to one or more skipped ad breaks. The ad(s) can be presented, for example, by a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with an ad server (e.g., ad data store <b>545</b> or third party ad retrieval/refresh module <b>535</b> of <figref idref="DRAWINGS">FIG. 5</figref>) and a decoder (e.g., decoder <b>525</b> of <figref idref="DRAWINGS">FIG. 5</figref>). The process <b>800</b> can then proceed to stage <b>860</b> where the future advertisements are unobscured. The future advertisements can be unobscured, for example, by a controller (e.g., control module <b>510</b> of <figref idref="DRAWINGS">FIG. 5</figref>) in conjunction with a content and advertisement store (e.g., content data store <b>540</b> and ad data store <b>545</b> of <figref idref="DRAWINGS">FIG. 5</figref>). The process <b>800</b> ends at stage <b>870</b>.</p>
<p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. 9</figref> is a component diagram of an example video presentation system <b>900</b> operable to obscure advertisements during trick mode operations. The improved video presentation system <b>900</b> can include a processor <b>910</b>, a memory <b>920</b>, a storage device <b>930</b>, and an input/output device <b>940</b>. Each of the components <b>910</b>, <b>920</b>, <b>930</b>, and <b>940</b> can be interconnected, for example, using a system bus <b>950</b>. The processor <b>910</b> is capable of processing instructions for execution within the system <b>900</b>. In one implementation, the processor <b>910</b> is a single-threaded processor. In another implementation, the processor <b>910</b> is a multi-threaded processor. The processor <b>910</b> is capable of processing instructions stored in the memory <b>920</b> or on the storage device <b>930</b>.</p>
<p id="p-0067" num="0066">The memory <b>920</b> stores information within the device <b>900</b>. In one implementation, the memory <b>920</b> is a computer-readable medium. In one implementation, the memory <b>920</b> is a volatile memory unit. In another implementation, the memory <b>920</b> is a non-volatile memory unit.</p>
<p id="p-0068" num="0067">In some implementations, the storage device <b>930</b> is capable of providing mass storage for the device <b>900</b>. In one implementation, the storage device <b>930</b> is a computer-readable medium. In various different implementations, the storage device <b>930</b> can include, for example, a hard disk device, an optical disk device, flash memory or some other large capacity storage device.</p>
<p id="p-0069" num="0068">The input/output device <b>940</b> provides input/output operations for the device <b>900</b>. In one implementation, the input/output device <b>940</b> can interface to a content delivery network <b>960</b> or a content source network <b>970</b>. In addition, such input/output device <b>940</b> can communicate with other external devices through various interfaces such as, for example, an IP network interface device, e.g., an Ethernet card, a cellular network interface, a serial communication device, e.g., and RS-232 port, and/or a wireless interface device, e.g., and 802.11 card. In another implementation, the input/output device can include driver devices configured to receive input data and send output data to other input/output devices (e.g., a content delivery network <b>960</b> and/or content source network <b>970</b>), as well as sending communications to, and receiving communications from various networks (not shown).</p>
<p id="p-0070" num="0069">The video presentation system of this disclosure, and components thereof, can be realized by instructions that upon execution cause one or more processing devices to carry out the processes and functions described above. Such instructions can, for example, comprise interpreted instructions, such as script instructions, e.g., JavaScript or ECMAScript instructions, or executable code, or other instructions stored in a computer readable medium.</p>
<p id="p-0071" num="0070">Implementations of the subject matter and the functional operations described in this specification can be provided in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer program products, i.e., one or more modules of computer program instructions encoded on a tangible program carrier for execution by, or to control the operation of, data processing apparatus. The tangible program carrier can be a propagated signal or a computer readable medium. The propagated signal is an artificially generated signal, e.g., a machine generated electrical, optical, or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a computer. The computer readable medium can be a machine readable storage device, a machine readable storage substrate, a memory device, a composition of matter effecting a machine readable propagated signal, or a combination of one or more of them.</p>
<p id="p-0072" num="0071">The term &#x201c;system processor&#x201d; encompasses all apparatus, devices, and machines for processing data, including by way of example a programmable processor, a digital signal processor, a computer, or multiple processors or computers. The system processor can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.</p>
<p id="p-0073" num="0072">A computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.</p>
<p id="p-0074" num="0073">The processes and logic flows described in this specification are performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output thereby tying the process to a particular machine (e.g., a machine programmed to perform the processes described herein). The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).</p>
<p id="p-0075" num="0074">Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read only memory or a random access memory or both. The elements of a computer typically include a processor for performing instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks. However, a computer need not have such devices. Moreover, a computer can be embedded in another device, e.g., a mobile communications device, a telephone, a cable modem, a set-top box, a mobile audio or video player, or a game console, to name just a few.</p>
<p id="p-0076" num="0075">Computer readable media suitable for storing computer program instructions and data include all forms of non volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.</p>
<p id="p-0077" num="0076">To provide for interaction with a user, embodiments of the subject matter described in this specification can be operable to interface with a computing device having a display, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.</p>
<p id="p-0078" num="0077">While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any invention or of what may be claimed, but rather as descriptions of features that may be specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.</p>
<p id="p-0079" num="0078">Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.</p>
<p id="p-0080" num="0079">Particular embodiments of the subject matter described in this specification have been described. Other embodiments are within the scope of the following claims. For example, the actions recited in the claims can be performed in a different order and still achieve desirable results, unless expressly noted otherwise. As one example, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In some implementations, multitasking and parallel processing may be advantageous.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer-implemented method, comprising:
<claim-text>providing a video stream to a user device;</claim-text>
<claim-text>receiving a search request related to the video stream, the search request initiating a trick mode with respect to the video stream;</claim-text>
<claim-text>generating a trick mode video stream, the trick mode video stream excluding advertisements from the frames presented within trick mode video stream;</claim-text>
<claim-text>providing the trick mode video stream to the user device;</claim-text>
<claim-text>determining that the user intended to skip an advertisement break;</claim-text>
<claim-text>receiving a request to exit trick mode; and</claim-text>
<claim-text>providing one or more advertisements to the user device responsive to the determination that the user intended to skip the advertising break and the request to exit trick mode.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>receiving a request for a normal mode video stream; and</claim-text>
<claim-text>providing the normal mode video stream to the user device, wherein the normal mode video stream includes advertisements.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the video stream comprises a digital video stream.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The computer-implemented method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the trick mode stream comprises a subset of i-frames selected from the digital video stream.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>determining that a broadcast advertisement has been skipped while in trick mode;</claim-text>
<claim-text>receiving a request to exit the trick mode; and</claim-text>
<claim-text>providing a narrowcast advertisement to the user device prior to resuming normal mode for the video stream.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The computer-implemented method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising:
<claim-text>storing the broadcast advertisement that was skipped in trick mode and providing the broadcast advertisement as a narrowcast advertisement when normal mode is resumed.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The computer-implemented method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising:
<claim-text>retrieving a replacement advertisement responsive to determining that the broadcast advertisement has been skipped;</claim-text>
<claim-text>providing the replacement advertisement to the user device for presentation to the user.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>determining that a broadcast advertisement has been skipped while in trick mode;</claim-text>
<claim-text>storing the broadcast advertisement;</claim-text>
<claim-text>receiving a request to exit the trick mode; and</claim-text>
<claim-text>providing the broadcast advertisement to the user device prior to resuming normal mode for the video stream.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the method is performed by a digital video recorder.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the method is performed by a video on demand server.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. One or more non-transitory computer-readable media operable to be executed by a computer processor, the computer-readable media, upon execution by a computer processor being operable to cause the computer processor to:
<claim-text>provide a digital video stream to a user;</claim-text>
<claim-text>receive a search request related to the digital video stream from the user, the search request initiating a trick mode with respect to the digital video stream;</claim-text>
<claim-text>generate a trick mode video stream, the trick mode video stream excluding advertisements from the frames presented within trick mode video stream; and</claim-text>
<claim-text>provide the trick mode video stream to the user;</claim-text>
<claim-text>determine that the user intended to skip an advertisement break;</claim-text>
<claim-text>receive a request to exit trick mode; and</claim-text>
<claim-text>provide one or more advertisements to the user device responsive to the determination that the user intended to skip the advertising break and the request to exit trick mode.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The one or more computer-readable media of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further operable to cause the processor to:
<claim-text>receive a request for a normal mode video stream from the user; and</claim-text>
<claim-text>provide the normal mode video stream to the user, wherein the normal mode video stream includes advertisements.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The one or more computer-readable media of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the trick mode stream comprises a subset of i-frames selected from a digital video stream.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The one or more computer-readable media of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further operable to cause the processor to:
<claim-text>determine that a broadcast advertisement has been skipped while in trick mode; and</claim-text>
<claim-text>provide a narrowcast advertisement to the user prior to resuming normal mode for the digital video stream.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The one or more computer-readable media of <claim-ref idref="CLM-00014">claim 14</claim-ref>, further operable to cause the processor to:
<claim-text>store the broadcast advertisement that was skipped in trick mode and provide the broadcast advertisement as a narrowcast advertisement when normal mode is resumed.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The one or more computer-readable media of <claim-ref idref="CLM-00014">claim 14</claim-ref>, further operable to cause the processor to:
<claim-text>retrieve a replacement advertisement responsive to determining that the broadcast advertisement has been skipped;</claim-text>
<claim-text>provide the replacement advertisement to the user for presentation to the user.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The one or more computer-readable media of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further operable to cause the processor to:
<claim-text>determine that a broadcast advertisement has been skipped while in trick mode;</claim-text>
<claim-text>store the broadcast advertisement; and</claim-text>
<claim-text>provide the broadcast advertisement to the user prior to resuming normal mode for the digital video stream.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The one or more computer-readable media of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the processor and at least a portion of the computer-readable media resides on a digital video recorder.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The one or more computer-readable media of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the processor and at least a portion of the computer-readable media resides on a video on demand server. </claim-text>
</claim>
</claims>
</us-patent-grant>
