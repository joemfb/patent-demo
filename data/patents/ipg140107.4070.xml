<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625139-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625139</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13198004</doc-number>
<date>20110804</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2010-189473</doc-number>
<date>20100826</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>202</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>358  115</main-classification>
</classification-national>
<invention-title id="d2e71">Image forming apparatus, service cooperation method, and storage medium</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>2013/0050735</doc-number>
<kind>A1</kind>
<name>Nuggehalli et al.</name>
<date>20130200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  113</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>JP</country>
<doc-number>2010-56770</doc-number>
<kind>A</kind>
<date>20100300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>8</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>358  113</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>358  115</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>15</number-of-drawing-sheets>
<number-of-figures>15</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120050797</doc-number>
<kind>A1</kind>
<date>20120301</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Tamura</last-name>
<first-name>Makiya</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Tamura</last-name>
<first-name>Makiya</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Canon USA, Inc., IP Division</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Canon Kabushiki Kaisha</orgname>
<role>03</role>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Dehkordy</last-name>
<first-name>Saeid Ebrahimi</first-name>
<department>2673</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">An image forming apparatus includes a plurality of individual processing units respectively corresponding to a plurality of services that cooperate with the image forming apparatus via a network and configured to communicate with the services and perform individual processing corresponding to the services, a specifying unit configured to specify an individual processing unit corresponding to the service selected out of the plurality of services in response to a user operation from the plurality of individual processing units, and a generation unit serving as a module commonly used among the plurality of individual processing units and configured to generate screen information corresponding to the individual processing unit specified by the specifying unit based on the information managed by the individual processing unit.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="112.35mm" wi="182.96mm" file="US08625139-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="201.17mm" wi="134.54mm" orientation="landscape" file="US08625139-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="201.85mm" wi="152.91mm" orientation="landscape" file="US08625139-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="212.09mm" wi="172.64mm" orientation="landscape" file="US08625139-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="220.22mm" wi="152.23mm" file="US08625139-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="155.79mm" wi="175.51mm" file="US08625139-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="141.56mm" wi="145.63mm" file="US08625139-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="253.49mm" wi="184.15mm" orientation="landscape" file="US08625139-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="156.29mm" wi="179.41mm" file="US08625139-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="209.30mm" wi="150.20mm" orientation="landscape" file="US08625139-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="194.39mm" wi="146.13mm" orientation="landscape" file="US08625139-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="246.72mm" wi="156.97mm" file="US08625139-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="162.48mm" wi="140.04mm" file="US08625139-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="197.10mm" wi="140.04mm" file="US08625139-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="193.72mm" wi="113.54mm" file="US08625139-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="245.36mm" wi="174.67mm" file="US08625139-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0002" num="0001">1. Field of the Invention</p>
<p id="p-0003" num="0002">The present invention relates to an image forming apparatus, a service cooperation method, and a storage medium.</p>
<p id="p-0004" num="0003">2. Description of the Related Art</p>
<p id="p-0005" num="0004">In recent years, in an image processing apparatus, on a real time operating system (a real time OS), an execution environment directed toward another built-in system (an execution environment such as Java&#xae;) has been constructed. Owing to the execution environment directed toward the built-in system, an application for controlling the image processing apparatus can be installed from the exterior and loaded. The execution environment directed toward the built-in system enables a developer to develop the application for the image processing apparatus in a common development language and a common development environment. Further, the image processing apparatus has been made highly-functional and multifunctional and a wide variety of image processing apparatuses have also been developed for a scanning function and a printing function. In recent years, an image processing apparatus, which is loaded with not only basic functions such as computerization and printing of a paper document such as a scanning function and a printing function but also a network interface (network I/F), has been developed. An image processing apparatus, which is loaded with the network I/F, cooperates with an external system and an external service connected via a network, to provide various solutions. Japanese Patent Application Laid-Open No. 2010-56770 discusses an image processing apparatus that cooperates with a document management system and can upload only scan data that matches a document management policy.</p>
<p id="p-0006" num="0005">On the other hand, a use format of a computer based on the Internet, for example, a cloud computing environment has been paid attention to in recent years with respect to a network environment surrounding the image processing apparatus. In the cloud computing environment, a user uses computer processing as a service via a network. Particularly, various services are provided from a service providing apparatus, and the user can select the service according to his/her own use format such as utility form.</p>
<p id="p-0007" num="0006">Therefore, even in the image processing apparatus, it is important to provide a solution for improving efficiency of user's work in cooperation with various services.</p>
<p id="p-0008" num="0007">In the cloud computing environment, a provider of the providing apparatus that provides the services and a provider of the image processing apparatus are not necessarily associating in a cooperative framework. Accordingly, in the service providing apparatus, an interface for inquiring whether the image processing apparatus can use the services is not necessarily prepared. More specifically, in the conventional image processing apparatus, a user interface (UI), scan processing, and print processing are required to be mounted according to the services. If the number of services that cooperate with the image processing apparatus is increased, therefore, mounted codes become huger.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0009" num="0008">One aspect of the present invention is directed to appropriately dealing with an increase in the number of services that cooperate with an image forming apparatus.</p>
<p id="p-0010" num="0009">According to another aspect of the present invention, an image forming apparatus includes a plurality of individual processing units respectively corresponding to a plurality of services that cooperate with the image forming apparatus via a network and configured to communicate with the services and perform individual processing corresponding to the services, a specifying unit configured to specify an individual processing unit corresponding to the service selected out of the plurality of services in response to a user operation, from the plurality of individual processing units, and a generation unit serving as a module commonly used among the plurality of individual processing units and configured to generate screen information corresponding to the individual processing unit specified by the specifying unit based on the information managed by the individual processing unit.</p>
<p id="p-0011" num="0010">Further features and aspects of the present invention will become apparent from the following detailed description of exemplary embodiments with reference to the attached drawings.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0012" num="0011">The accompanying drawings, which are incorporated in and constitute a part of the specification, illustrate exemplary embodiments, features, and aspects of the invention and, together with the description, serve to explain the principles of the invention.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an example of a basic software configuration of an image processing apparatus.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 2</figref> illustrates an example of a functional configuration of an application.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an example of a functional configuration of an application.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 4</figref> illustrates an example of a configuration of an image processing system.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an example of a hardware configuration of an image processing apparatus.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an example of a hardware configuration of an external server.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 7</figref> illustrates an example of a functional configuration of an application.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 8</figref> illustrates an example of an initial screen.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 9</figref> illustrates an example of a scan setting screen.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 10</figref> illustrates an example of a configuration of a scan/print setting database DB.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 11</figref> illustrates an example of a flowchart relating to main processing.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 12</figref> illustrates an example of a flowchart relating to initial screen display processing.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 13</figref> illustrates an example of a flowchart relating to scan processing.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 14</figref> illustrates an example of a flowchart relating to print processing.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 15</figref> illustrates an example of a flowchart relating to print processing.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DESCRIPTION OF THE EMBODIMENTS</heading>
<p id="p-0028" num="0027">Various exemplary embodiments, features, and aspects of the invention will be described in detail below with reference to the drawings.</p>
<p id="p-0029" num="0028">The exemplary embodiments do not limit the present invention. All components described in the exemplary embodiments are not necessarily essential as means for solving the issue of the present invention.</p>
<p id="p-0030" num="0029">A first exemplary embodiment will be described below. <figref idref="DRAWINGS">FIG. 1</figref> illustrates an example of a basic software configuration of an image processing apparatus <b>10</b>. An operating system (OS) <b>101</b> is an example of a first execution environment, and controls the whole image processing apparatus <b>10</b>. The OS <b>101</b> includes a library group for instructing modules (or a central processing unit (CPU)) in a real time OS for respectively controlling various functions of the image processing apparatus <b>10</b> in real time so that the library group controls various functions including an option device and an expansion card connected to the image processing apparatus <b>10</b>. The OS <b>101</b> further includes a module group for providing an interface command to applications that operate in an order higher than the OS <b>101</b>.</p>
<p id="p-0031" num="0030">A controller control unit <b>102</b> operates on the OS <b>101</b>, and includes modules for controlling a scanner <b>521</b>, a printer <b>520</b>, and so on, described below. An application programming interface (API) <b>103</b> is responsive to a sequence of instructions input from the applications, to access the controller control unit <b>102</b>. The API <b>103</b> sends a control command to devices connected to a network via a network interface (I/F) <b>518</b>, described below. An application <b>104</b> operates on the OS <b>101</b>, and requests various types of processing from the controller control unit <b>102</b> via the API <b>103</b>.</p>
<p id="p-0032" num="0031">A virtual machine <b>105</b> is a second execution environment most suitable for executing specific applications, and is implemented by a virtual machine such as Java (registered trademark), for example. A virtual machine API <b>106</b> accesses the controller control unit <b>102</b> that operates on the OS <b>101</b> by the applications on the virtual machine <b>105</b>, and has a function of a conversion module for calling the API <b>103</b> in the present exemplary embodiment.</p>
<p id="p-0033" num="0032">A framework <b>107</b> is a module having a function of integrally controlling the applications on the virtual machine <b>105</b>. An application management application <b>108</b> manages other applications on the virtual machine <b>105</b>, cooperates with the framework <b>107</b>, and downloads, uploads, deletes, and invalidates applications <b>109</b> and <b>110</b>. The applications <b>109</b> and <b>110</b> operate on the virtual machine <b>105</b>, and request various types of processing from the controller control unit <b>102</b> via the virtual machine API <b>106</b>.</p>
<p id="p-0034" num="0033">A resource management unit <b>111</b> manages resources used by the virtual machine <b>105</b>, and operates on the OS <b>101</b>. The resource management unit <b>111</b> sets a limit so that resources such as a memory more than previously determined cannot be used when the virtual machine <b>105</b>, the virtual machine API <b>106</b>, the framework <b>107</b>, or all the applications on the OS <b>101</b> use the resources. For example, the resource management unit <b>111</b> performs control so that the application that displays a user interface (UI) cannot display the UIs if more than the predetermined maximum number of the UIs are displayed.</p>
<p id="p-0035" num="0034">While the application is assumed to be the one (e.g., the application <b>109</b>) that operates in the second execution environment, it may be an application (e.g., the application <b>104</b>) that operates in the first execution environment.</p>
<p id="p-0036" num="0035">A service cooperation method in which an image processing apparatus cooperates with various services (e.g., services for retaining data scanned by the image processing apparatus), to improve the efficiency of user's work in a cloud computing environment will be described.</p>
<p id="p-0037" num="0036">Conventionally, when an image processing apparatus sends data representing a scanned document to an external service, data having any data format (hereinafter referred to as a file format or a data format, as needed) that can be generated by the image processing apparatus has been sent to the external service. Generally, under a network environment such as a local area network (LAN), an external server, which provides a service and is a sending destination can nearly always receive all data having a data format sent from the image processing apparatus. Since the external server is a general-purpose server that can receive binary data regardless of its data format, for example, a file transfer protocol (FTP) server, a server message block (SMB) server, and a web data valid (DAV) server, the image processing apparatus may nearly always send data having any data format.</p>
<p id="p-0038" num="0037">If there exists a data format that cannot be received by the external server as the sending destination, the data format that cannot be received by the image processing apparatus is inquired for so that the type of data that can be sent from the image processing apparatus is controlled (see, e.g., Japanese Patent Application Laid-Open No. 2010-56770).</p>
<p id="p-0039" num="0038">On the other hand, under the cloud computing environment in which various services are provided, a data format that can be received (stored) differs for each service. A data format that is stored differs for each service. When the image processing apparatus downloads and prints data, therefore, the data may not be printable depending on the type of data.</p>
<p id="p-0040" num="0039">When data is sent from the image processing apparatus to the service in the cloud computing environment, or data is downloaded from the service and printed, the image processing apparatus is required to inquire an appropriate data format of the external server. More specifically, the image processing apparatus is required to inquire of the external server what a receivable data format is or whether data having a printable data format is retained, and to perform processing according to an inquiry result.</p>
<p id="p-0041" num="0040">However, in the cloud computing environment, a provider of the external server and a provider of the image processing apparatus are not necessarily in a cooperative framework. Accordingly, an interface for the image processing apparatus to inquire of the external server is not necessarily prepared.</p>
<p id="p-0042" num="0041">For such reasons, in order to enjoy the services in the cloud computing environment, a user interface, scan processing, and print processing are required to be mounted, respectively, according to the services in the image processing apparatus. Therefore, as the number of services that cooperate with the image processing apparatus increases, mounted codes become huger.</p>
<p id="p-0043" num="0042">The above-mentioned will be described below more specifically with reference to <figref idref="DRAWINGS">FIGS. 2 and 3</figref>. <figref idref="DRAWINGS">FIG. 2</figref> illustrates an example of a functional configuration of an application <b>200</b> in an image processing apparatus <b>20</b> that sends and receives data to and from the general-purpose server under the network environment such as the LAN. The server can receive data having any data format. Therefore, the application <b>200</b> is mounted in consideration of only data that can be processed by the image processing apparatus <b>20</b>.</p>
<p id="p-0044" num="0043">More specifically, a scan setting UI <b>202</b> in a UI <b>201</b> displays a UI for performing setting for data that can be generated by the image processing apparatus <b>20</b>. A print setting UI <b>203</b> in the UI <b>201</b> displays a UI for performing setting for acquisition of data that can be printed by the image processing apparatus <b>20</b>. A scan processing control unit <b>204</b> performs processing only considering whether a setting content is consistent with a processing capability of the image processing apparatus <b>20</b> according to a setting content (setting value) in the scan setting UI <b>202</b>. A print processing control unit <b>205</b> performs processing only considering whether a setting content is consistent with the processing capability of the image processing apparatus <b>20</b> according to a setting content (setting value) in the print setting UI <b>203</b>. A service communication unit <b>206</b> sends and receives a file (a document) according to an FTP, an SMB, a web DAV, or the like.</p>
<p id="p-0045" num="0044">An example of an image processing apparatus (an image processing apparatus <b>30</b>) that sends and receives data to and from various services under the cloud computing environment will be described below. <figref idref="DRAWINGS">FIG. 3</figref> illustrates an example of a functional configuration of an application <b>300</b> in the image processing apparatus <b>30</b>. The application <b>300</b> needs to be mounted also in consideration of data that can be processed by a service (external server). A user interface, scan processing, and print processing are mounted for each service. The application <b>300</b> assumes that it sends and receives data to and from two services, i.e., a service A and a service B. In a UI <b>301</b>, a scan setting UI <b>311</b> for a service A (service A scan setting UI) is data that can be generated by the image processing apparatus <b>30</b>, and displays a UI for making setting for data that can be received in the service A. Similarly, a print setting UI <b>312</b> for a service A (service A print setting UI) is data that can be stored in the service A, and displays a UI for making setting for acquisition of data that can be printed by the image processing apparatus <b>30</b>.</p>
<p id="p-0046" num="0045">A scan processing control unit <b>313</b> for a service A (service A scan processing control unit) performs processing considering whether a setting content is consistent with not only a processing capability of the image processing apparatus <b>30</b> but also a data storage capability in the service A according to a setting content in the service A scan setting UI <b>311</b>. A print processing control unit <b>314</b> for a service A (service A print processing control unit) performs processing considering whether a setting content is consistent with not only the processing capability of the image processing apparatus <b>30</b> but also a data storage capability in the service A according to a setting content in the service A scan setting UI <b>312</b>. A service communication unit for a service A (service A service communication unit) <b>315</b> sends and receives a file according to a communication protocol and a communication interface that are provided by the service A.</p>
<p id="p-0047" num="0046">Similarly, a scan setting UI <b>321</b> for a service B (service B scan setting UI), a print setting UI <b>322</b> for a service B (service B print setting UI), a scan processing control unit <b>323</b> for a service B (service B scan processing control unit), a print processing control unit <b>324</b> for a service B (service B print processing control unit), and a service communication unit <b>325</b> for a service B (service B service communication unit) are required to be mounted in consideration of data that can be processed by the service B.</p>
<p id="p-0048" num="0047">Therefore, as the number of services for sending and receiving data to and from the image processing apparatus <b>30</b> increases, a mounting code becomes huger.</p>
<p id="p-0049" num="0048">An image processing apparatus, which differs from the image processing apparatus <b>30</b> and is capable of performing display of a UI, scan processing, and print processing according to the services, will be described below.</p>
<p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. 4</figref> illustrates an example of a configuration of an image processing system according to the present exemplary embodiment. The image processing apparatus <b>100</b> which is an example of a computer is an image forming apparatus such as a printer or a multifunction peripheral (MFP), and is connected to the Internet <b>410</b> via a LAN <b>400</b>. An external server <b>420</b> is an example of a computer, is connected to the Internet <b>410</b> via a LAN <b>421</b>, and provides a service in the cloud computing environment. Accordingly, the image processing apparatus <b>100</b> can communicate with the external server <b>420</b>, and can cooperate with a service (e.g., a file management service) provided by the external server <b>420</b>.</p>
<p id="p-0051" num="0050">While the external server <b>420</b> includes one external server, and the one external server provides the file management service in the present embodiment, the external server <b>420</b> may include a plurality of servers as its other format, and the plurality of servers may start a plurality of virtual machines to perform distributed processing. In this case, a technique referred to as a &#x201c;scale out&#x201d; (a cloud computing technique) for increasing the number of virtual machines according to a predetermined condition is used.</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an example of a hardware configuration of the image processing apparatus <b>100</b>. A control unit <b>510</b> controls an overall operation of the image processing apparatus <b>100</b>. A CPU <b>511</b> reads out a control program stored in a read-only memory (ROM) <b>512</b>, to perform various types of control such as reading control and sending control. The control program is executed so that functions of the controller control unit <b>102</b> or the like are implemented. A random access memory (RAM) <b>513</b> is used as a temporary storage area such as a main memory or a work area in the CPU <b>511</b>.</p>
<p id="p-0053" num="0052">A hard disk drive (HDD) <b>514</b> stores image data, various programs, and various tables. An operation unit I/F <b>515</b> connects an operation unit <b>519</b> and the control unit <b>510</b>. The operation unit <b>519</b> includes a liquid crystal display unit having a touch panel function, a keyboard, and so on. An application in the image processing apparatus <b>100</b> calls the virtual machine API <b>106</b> (or the API <b>103</b>) according to processing, and requests the controller control unit <b>102</b> to execute processing for displaying various screens on the liquid crystal display unit in the operation unit <b>519</b>.</p>
<p id="p-0054" num="0053">A printer I/F <b>516</b> connects the printer <b>520</b> and the control unit <b>510</b>. Data (e.g., image data) to be printed by the printer <b>520</b> is transferred from the control unit <b>510</b> via the printer I/F <b>516</b>, and is printed on a recording medium in the printer <b>520</b>. The application in the image processing apparatus <b>100</b> calls the virtual machine API <b>106</b> (or the API <b>103</b>) according to processing, and requests the controller control unit <b>102</b> to execute print processing.</p>
<p id="p-0055" num="0054">A scanner I/F <b>517</b> connects the scanner <b>521</b> and the control unit <b>510</b>. The scanner <b>521</b> reads a document to generate image data, and inputs the image data to the control unit <b>510</b> via the scanner I/F <b>517</b>. The application in the image processing apparatus <b>100</b> calls the virtual machine API <b>106</b> (or the API <b>103</b>) according to processing. The application in the image processing apparatus <b>100</b> requests the controller control unit <b>102</b> to execute scan processing, and sends image data (scan data, described below) to the external server <b>420</b>.</p>
<p id="p-0056" num="0055">The network I/F <b>518</b> connects the control unit <b>510</b> (the image processing apparatus <b>100</b>) to the LAN <b>400</b>. The network I/F <b>518</b> sends various types of information to the external server <b>420</b> connected via the LAN <b>400</b>, and receives the various types of information from the external server <b>420</b> connected via the LAN <b>400</b>.</p>
<p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an example of a hardware configuration of the external server <b>420</b>. A control unit <b>610</b> controls an overall operation of the external server <b>420</b>. A CPU <b>611</b> reads out a control program stored in a ROM <b>612</b>, to perform various types of control processing. A RAM <b>613</b> is used as a temporary storage area such as a main memory or a work area in the CPU <b>611</b>. A HDD <b>614</b> stores image data, various types of programs, and various types of information. A network I/F <b>615</b> connects the control unit <b>610</b> (the external server <b>420</b>) to the LAN <b>421</b>. The network I/F <b>615</b> sends and receives various types of information to and from another apparatus connected via the LAN <b>421</b>.</p>
<p id="p-0058" num="0057">In the present exemplary embodiment, the CPU <b>611</b> performs processing according to a procedure for the control program stored in the ROM <b>612</b>, to implement functions in the external server <b>420</b> and various types of processing, described below.</p>
<p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. 7</figref> illustrates an example of a functional configuration of an application <b>700</b>. Functional units illustrated in <figref idref="DRAWINGS">FIG. 7</figref> are implemented when the CPU <b>511</b> in the image processing apparatus <b>100</b> executes a control program. Similar constituent elements to those illustrated in <figref idref="DRAWINGS">FIG. 1</figref> are assigned the same reference numerals, and hence the description thereof is not repeated.</p>
<p id="p-0060" num="0059">In the present exemplary embodiment, it is assumed that the application <b>700</b> operates on the virtual machine <b>105</b>, similarly to the applications <b>109</b> and <b>110</b>. The application <b>700</b> may operate on the OS <b>101</b>, similarly to the application <b>104</b>.</p>
<p id="p-0061" num="0060">A startup processing unit <b>701</b> for a service A (service A startup processing unit) performs initialization processing for performing processing for a service A by an instruction from the virtual machine <b>105</b>. The service A startup processing unit <b>701</b> sends to a service communication router <b>708</b> a specifying request to specify a service communication unit for a service A (service A service communication unit <b>709</b>) as the initialization processing. The service A startup processing unit <b>701</b> requests the service A service communication unit <b>709</b> specified by the service communication router <b>708</b> to acquire screen generation information (e.g., initial screen display data) from the service A. The service A startup processing unit <b>701</b> includes the initial screen display data in a request to display an initial screen when it ends the initialization processing, and sends the initial screen display request to a UI control unit <b>703</b>. A startup processing unit <b>702</b> for a service B (service B startup processing unit) performs initialization processing for performing processing for a service B, similarly to the service A startup processing unit <b>701</b>. While the image processing apparatus <b>100</b> acquires screen generation information from the service to display a screen, and generates a screen (i.e., screen information provided to generate the screen) based on the acquired screen generation information in the present embodiment, the present invention is not limited to this. The image processing apparatus <b>100</b> may generate a screen based on the screen generation information in the image processing apparatus <b>100</b> without acquiring the screen generation information from the service, and may display another screen generated based on the screen generation information in the image processing apparatus <b>100</b> as an initial screen.</p>
<p id="p-0062" num="0061">The UI control unit <b>703</b> includes a scan setting UI <b>704</b> and a print setting UI <b>705</b>. The UI control unit <b>703</b> performs processing for displaying a UI on the operation unit <b>519</b>. More specifically, the UI control unit <b>703</b> receives the initial screen display request from the service A startup processing unit <b>701</b> or the service B startup processing unit <b>702</b>, and displays an initial screen illustrated in <figref idref="DRAWINGS">FIG. 8</figref>, for example. The UI control unit <b>703</b> sends to the service communication router <b>708</b> an acquisition request to acquire scan setting information relating to scanning, and sends to the scan setting UI <b>704</b> the scan setting information received from the service communication router <b>708</b>. Similarly, the UI control unit <b>703</b> sends to the service communication router <b>708</b> an acquisition request to acquire print setting information relating to printing, and sends to the print setting UI <b>705</b> the print setting information received from the service communication router <b>708</b>. The scan setting UI <b>704</b> generates screen information relating to a scan setting screen illustrated in <figref idref="DRAWINGS">FIG. 9</figref>, for example, according to the scan setting information received from the UI control unit <b>703</b>, to display the scan setting screen on the operation unit <b>519</b>. The scan setting unit UI <b>704</b> sends to a scan processing control unit <b>706</b> an input value input by the user in timing at which a scan start button for the scan setting screen is pressed.</p>
<p id="p-0063" num="0062">The print setting UI <b>705</b> generates screen information relating to an initial screen <b>800</b> illustrated in <figref idref="DRAWINGS">FIG. 8</figref>, for example, according to the print setting information received from the UI control unit <b>703</b>, displays the initial screen <b>800</b> on the operation unit <b>519</b>, and controls an operation in the initial screen <b>800</b>. The print setting UI <b>705</b> performs control so that the user cannot give an instruction to print a file that cannot be printed in a list of file names/folder names (file name/folder name list) <b>801</b>.</p>
<p id="p-0064" num="0063">More specifically, when the file that cannot be printed is selected in the list <b>801</b> according to a user's operation, a print button <b>803</b> is brought into a disable state so that it cannot be pressed. On the other hand, when the print button <b>803</b> is pressed, the print setting UI <b>705</b> sends to a print processing control unit <b>707</b> a file name of the file (which may be a file identifier) selected in the list <b>801</b> and a request to print the file.</p>
<p id="p-0065" num="0064">The scan processing control unit <b>706</b> receives a value input on a scan setting screen and sent from the scan setting UI <b>704</b>, to execute scan processing, and acquires image data from a scan processing result. The scan processing control unit <b>706</b> converts image data into scan data having a file format that can be processed by the service A according to the input value, and sends to the service communication router <b>708</b> the scan data and a request to send the scan data to the service A.</p>
<p id="p-0066" num="0065">The print processing control unit <b>707</b> receives the file name and the printing request, which are sent from the print setting UI <b>705</b>, to send the file name and a request to acquire the file to the service communication router <b>708</b>. The print processing control unit <b>707</b> receives a response to the file acquisition request from the service communication router <b>708</b> and a file acquisition result, to execute print processing.</p>
<p id="p-0067" num="0066">The service communication router <b>708</b> specifies, when it receives a service communication unit specifying request from the service A startup processing unit <b>701</b> or the service B startup processing unit <b>702</b>, a service communication unit suitable for communication with each of the services. The service communication router <b>708</b> is responsive to an acquisition request from the UI control unit <b>703</b>, to acquire scan setting information or print setting information via the specified service communication unit and send the acquired setting information to the UI control unit <b>703</b>.</p>
<p id="p-0068" num="0067">The service communication router <b>708</b> sends, when it receives the scan data and the scan data sending request from the scan processing control unit <b>706</b>, the scan data and the scan data sending request to the specified service communication unit. The service communication router <b>708</b> sends, when it receives the file name and the printing request from the print processing control unit <b>707</b>, the file name and the printing request to the specified service communication unit.</p>
<p id="p-0069" num="0068">The service A service communication unit <b>709</b> mainly performs processing for communication with the service A. The service A service communication unit <b>709</b> acquires scan setting information or print setting information from a scan/print setting database (scan/print setting DB) <b>711</b> in response to the acquisition request from the service communication router <b>708</b>, and sends the acquired setting information to the service communication router <b>708</b>. The service A service communication unit <b>709</b> sends, based on the scan data and the scan data sending request, which have been received from the service communication router <b>708</b>, the received scan data to the service A. The service A service communication unit <b>709</b> calls the printing file acquisition unit <b>710</b> based on the file name and the printing request, which have been received from the service communication router <b>708</b>. In other words, the service communication unit is an example of an individual processing unit, and communicates with each of the services while performing individual processing for the service.</p>
<p id="p-0070" num="0069">It is assumed that the service A service communication unit <b>709</b> controls communication processing in an application layer that differs for each service. For example, it is assumed that the service A service communication unit <b>709</b> performs communication with a service by a web service such as Single Object Access Protocol (SOAP) or REpresentational State Transfer (REST) implemented by using a HyperText Transfer Protocol (HTTP) which is a communication protocol.</p>
<p id="p-0071" num="0070">A printing file acquisition unit <b>710</b> acquires a printing file from the service A based on the file name in response to a call from the service A service communication unit <b>709</b>. At this time, the printing file acquisition unit <b>710</b> determines whether the image processing apparatus <b>100</b> can perform printing depending on the file name. If it is determined that even a file having an unprintable file format can be converted into a file having a printable file format in the service A, the service A service communication unit <b>709</b> requests the service A to convert the file into a printable file. In this case, the printing file acquisition unit <b>710</b> acquires the file after the conversion from the service A.</p>
<p id="p-0072" num="0071">The scan/print setting DB <b>711</b> manages information such as a file format of scan data that can be sent to the service A, an item in which setting relating to scan processing can be made, and a file, which can be printed by the image processing apparatus <b>100</b>, acquired from the service A (data to be printed).</p>
<p id="p-0073" num="0072">A service communication unit <b>712</b> for a service B (service B service communication unit) basically performs processing similarly to the service A service communication unit <b>709</b>. A communication partner with which the service B service communication unit <b>712</b> communicates is the service B. A printing file acquisition unit <b>713</b> and a scan/print setting DB <b>714</b> are also basically similar to the printing file acquisition unit <b>710</b> and the scan/print setting DB <b>711</b>. However, a service to be processed by the printing file acquisition unit <b>713</b> and the scan/print setting DB <b>714</b> is the service B.</p>
<p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. 8</figref> illustrates an example of an initial screen obtained when the service A is accessed. The initial screen is displayed on the operation unit <b>519</b> when the CPU <b>511</b> in the image processing apparatus <b>100</b> executes a control program. While an example of the initial screen obtained when the service A is accessed is illustrated in <figref idref="DRAWINGS">FIG. 8</figref>, an initial screen obtained when the service B is accessed is a similar screen.</p>
<p id="p-0075" num="0074">The initial screen <b>800</b> is an example of an initial screen obtained when the service A is accessed, and is displayed by the UI control unit <b>703</b> after the service A startup processing unit <b>701</b> in the application <b>700</b> ends initialization processing. The file name/folder name list <b>801</b> represents names of files and names of folders, which are stored (managed) in the service A. <figref idref="DRAWINGS">FIG. 8</figref> illustrates a state where the UI control unit <b>703</b> displays the initial screen display data acquired by the service A startup processing unit <b>701</b> on the operation unit <b>519</b>.</p>
<p id="p-0076" num="0075">If the user desires to send scanned image data to the service A, the user operates the liquid crystal display unit having a touch panel function (performs a user operation), to designate any folder in the file name/folder name list <b>801</b>, and presses a sending button <b>802</b>. When the user operation for pressing the sending button <b>802</b> is performed, a scan setting screen <b>900</b> illustrated in <figref idref="DRAWINGS">FIG. 9</figref>, for example, is displayed on the operation unit <b>519</b>.</p>
<p id="p-0077" num="0076">When the user desires to print files stored in the service A, the user designates any of the files in the file name/folder name list <b>801</b>, and presses the print button <b>803</b>. When the user presses the print button <b>803</b>, the application <b>700</b> acquires the designated file from the service A and prints the acquired file.</p>
<p id="p-0078" num="0077">When the user presses a cancel button <b>804</b>, the image processing apparatus <b>100</b> displays a menu screen of the image processing apparatus <b>100</b> on the operation unit <b>519</b>. On the menu screen, the user can designate, out of basic functions of the image processing apparatus <b>100</b> such as copying and scanning and functions such as access to the service A and access to the service B, the function that the user desires to use.</p>
<p id="p-0079" num="0078"><figref idref="DRAWINGS">FIG. 9</figref> illustrates an example of a scan setting screen <b>900</b> obtained when the service A is accessed. The scan setting screen <b>900</b> is displayed on the operation unit <b>519</b> when the CPU <b>511</b> in the image processing apparatus <b>100</b> executes a control program. While an example of the scan setting screen <b>900</b> obtained when the service A is accessed is illustrated in <figref idref="DRAWINGS">FIG. 9</figref>, a screen obtained when the service B is accessed is similar thereto. However, in the service B, all selection items illustrated in <figref idref="DRAWINGS">FIG. 9</figref> are not necessarily displayed. In the service B, data having a data format different from that in the service A may be processed.</p>
<p id="p-0080" num="0079">The scan setting screen <b>900</b> receives a designation of a file format of a file into which image data generated by scanning a document is converted. When the user operation for pressing the sending button <b>802</b> on the initial screen <b>800</b> is performed, the application <b>700</b> displays the screen <b>900</b> on the operation unit <b>519</b>.</p>
<p id="p-0081" num="0080">A file format selection setting <b>901</b> switches display of a detailed setting <b>903</b> in response to pressing of a file format button (e.g., a Portable Document Format (PDF) button <b>902</b>) for selecting a file format displayed at the left thereof. <figref idref="DRAWINGS">FIG. 9</figref> illustrates a state where the PDF file format button <b>902</b> is pressed.</p>
<p id="p-0082" num="0081">The detailed setting <b>903</b> includes setting items that can be set for scan processing for each file format selected by pressing the file format button. In the present exemplary embodiment, the setting items in the detailed setting <b>903</b> in a state where the PDF file format button <b>902</b> is selected are illustrated. A high-compression specifying button <b>904</b> is a bottom for designating whether a PDF file having a high-compression format is generated when the PDF file is generated. <figref idref="DRAWINGS">FIG. 9</figref> illustrates a state where the high-compression specifying button <b>904</b> is pressed, to make a setting, &#x201c;Generate a PDF file having a high-compression format&#x201d;.</p>
<p id="p-0083" num="0082">A reader extensions specifying button <b>905</b> is a button for designating whether a PDF file having a reader extension format is generated when the PDF file is generated. An optical character recognition (OCR) specifying button <b>906</b> is a button for executing OCR processing for image data obtained by scanning a document and designating whether an execution result is embedded in the PDF file.</p>
<p id="p-0084" num="0083">A PDF file encryption specifying button <b>907</b> is a button for specifying, when the PDF file is generated, whether to prevent opening of the PDF file unless a password is entered when opened. A password entry area <b>908</b> is an entry area for entering the password when the PDF file is opened. The password entry area <b>908</b> allows entry of the password only when the PDF file encryption specifying button <b>907</b> is pressed.</p>
<p id="p-0085" num="0084">When a user operation for selecting a file format on the scan setting screen <b>900</b> is performed, and a user operation for pressing a scan start button <b>909</b> is performed, the application <b>700</b> executes scan processing. When a user operation for pressing a cancel button <b>910</b> is performed, the application <b>700</b> makes a screen transition from the scan setting screen <b>900</b> to the initial screen <b>800</b>.</p>
<p id="p-0086" num="0085"><figref idref="DRAWINGS">FIG. 10</figref> illustrates an example of a configuration of the scan/print setting DB <b>711</b>. The scan/print setting DB <b>711</b> is stored in a storage device such as the ROM <b>512</b>, the RAM <b>513</b>, or the HDD <b>514</b> in the image processing apparatus <b>100</b>.</p>
<p id="p-0087" num="0086">Scan/print setting information <b>1000</b> is an example of information stored in the scan/print setting DB <b>711</b>, and includes a category <b>1001</b>, a setting item <b>1002</b>, and a settable value <b>1003</b>. The category <b>1001</b> represents the type of setting relating to processing (e.g., setting relating to scanning and setting relating to printing). The setting item <b>1002</b> includes items such as a file format (e.g., a file format in which data can be sent and a file format in which data can be printed), service conversion, and preview display. While in the present exemplary embodiment, the setting items include a file format in which data can be sent and a file format in which data can be printed, the present exemplary embodiment can also handle other setting items. The information relates to data that can be processed by a service to be used. The settable value <b>1003</b> represents a value used in the setting item <b>1002</b>.</p>
<p id="p-0088" num="0087"><figref idref="DRAWINGS">FIG. 11</figref> illustrates a flowchart relating to main processing in the application <b>700</b>. Operations (steps) illustrated in the flowchart of <figref idref="DRAWINGS">FIG. 11</figref> are implemented when the CPU <b>511</b> in the image processing apparatus <b>100</b> executes a control program stored in the HDD <b>514</b>. The main processing is started when the image processing apparatus <b>100</b> (the virtual machine <b>105</b>) executes startup processing in response to a user operation (inputting of a value) for designating a service on a menu screen of the image processing apparatus <b>100</b>.</p>
<p id="p-0089" num="0088">While the service A startup processing unit <b>701</b> is executed as an example, the service B startup processing unit <b>702</b> different from the service A startup processing unit <b>701</b> may be executed depending on the input value on the menu screen.</p>
<p id="p-0090" num="0089">In step S<b>1101</b>, the CPU <b>511</b> causes the service A startup processing unit <b>701</b> to first send a specifying request to specify a service communication unit to the service communication router <b>708</b>. The service communication router <b>708</b>, which has received the service communication unit specifying request, specifies the service communication unit corresponding to the service A startup processing unit <b>701</b>, which has sent the service communication unit specifying request. The service communication router <b>708</b> specifies the service A service communication unit <b>709</b> provided as the service communication unit corresponding to the service A startup communication unit <b>701</b>.</p>
<p id="p-0091" num="0090">In step S<b>1102</b>, the CPU <b>511</b> causes the service communication router <b>708</b> to check whether the service A service communication unit <b>709</b> exists. If the service communication router <b>708</b> determines that the service A service communication unit <b>709</b> does not exist as a result of the check (NO in step S<b>1102</b>), the processing proceeds to step S<b>1103</b>. On the other hand, if the service communication router <b>708</b> determines that the service A service communication unit <b>709</b> exists (YES in step S<b>1102</b>), the processing proceeds to step S<b>1104</b>. The service communication router <b>708</b> can check the presence or absence of the service communication unit <b>709</b> using an appropriate method. For example, the service communication router <b>708</b> refers to a file, in which a service communication unit is described, provided in the image processing apparatus <b>100</b>, to check the presence or absence of the service communication unit.</p>
<p id="p-0092" num="0091">In step S<b>1103</b>, the CPU <b>511</b> causes the service communication router <b>708</b> to return a message that the service A service communication unit <b>709</b> does not exist as a response to a specifying request (a specifying request response) to the service A startup processing unit <b>701</b>. The service A startup processing unit <b>701</b>, which has received the specifying request response, sends a display request to display an error message that a designated service cannot be accessed, to the UI control unit <b>703</b>, and ends the processing.</p>
<p id="p-0093" num="0092">In step S<b>1104</b>, the CPU <b>511</b> causes the service communication router <b>708</b> to load the service A service communication unit <b>709</b> and to bring the service A service communication unit <b>709</b> into a call ready state. The service communication router <b>708</b> returns a message that preparation of communication with the service A is completed as a response to a specifying request (a specifying request response), to the service A startup processing unit <b>701</b>.</p>
<p id="p-0094" num="0093">In step S<b>1105</b>, the CPU <b>511</b> causes the application <b>700</b> to perform initial screen display processing, to display the initial screen <b>800</b>, for example, on the operation unit <b>519</b>. Details of the initial screen display processing will be described with reference to <figref idref="DRAWINGS">FIG. 12</figref>.</p>
<p id="p-0095" num="0094">In step S<b>1106</b>, the CPU <b>511</b> causes the print setting UI <b>705</b> to receive a user operation (user instruction) on the initial screen <b>800</b>, for example, displayed on the operation unit <b>519</b>. When the user desires to send scanned image data, the user designates a folder of a storage destination from the file name/folder name list <b>801</b> and presses the sending button <b>802</b>. When the user desires to print files stored in the service A, the user designates the file to be printed from the file name/folder name list <b>801</b> and presses the print button <b>803</b>.</p>
<p id="p-0096" num="0095">In step S<b>1107</b>, the UI control unit <b>703</b> determines whether the user operation received in step S<b>1106</b> is a scan instruction or a print instruction. The UI control unit <b>703</b> determines, if the pressed button is the sending button <b>802</b> on the initial screen <b>800</b>, for example, that the user operation is the scan instruction. The UI control unit <b>703</b> determines, if the pressed button is the print button <b>803</b> on the initial screen <b>800</b>, for example, that the user operation is the print instruction. If it is determined that the user operation is the scan instruction, the processing proceeds to step S<b>1108</b>. If it is determined that the user operation is the print instruction, the processing proceeds to step S<b>1109</b>.</p>
<p id="p-0097" num="0096">In step S<b>1108</b>, the CPU <b>511</b> causes the application <b>700</b> to perform scan processing. Details of the scan processing will be described with reference to <figref idref="DRAWINGS">FIG. 13</figref>. In step S<b>1109</b>, the CPU <b>511</b> causes the application <b>700</b> to perform print processing. Details of the print processing will be described with reference to <figref idref="DRAWINGS">FIG. 14</figref>.</p>
<p id="p-0098" num="0097"><figref idref="DRAWINGS">FIG. 12</figref> illustrates an example of a flowchart relating to the initial screen display processing. Each of operations (steps) illustrated in the flowchart of <figref idref="DRAWINGS">FIG. 12</figref> is implemented when the CPU <b>511</b> in the image processing apparatus <b>100</b> executes the control program stored in the HDD <b>514</b>.</p>
<p id="p-0099" num="0098">In step S<b>1201</b>, the CPU <b>511</b> causes the service A startup processing unit <b>701</b> to send a request to acquire print setting information to the service communication router <b>708</b>. The service communication router <b>708</b> sends the received acquisition request to the service A service communication unit <b>709</b>. The service A service communication unit <b>709</b> acquires the print setting information from the scan/print setting DB <b>711</b> according to the received acquisition request. The service A service communication unit <b>709</b> returns the print setting information to the service communication router <b>708</b> as a response to the acquisition request. The service communication router <b>708</b> returns the print setting information to the service A startup processing unit <b>701</b> as a response to the acquisition request.</p>
<p id="p-0100" num="0099">In step S<b>1202</b>, the service A startup processing unit <b>701</b> sends a request to acquire initial screen display data to the service communication router <b>708</b>. The service communication router <b>708</b> sends the received acquisition request to the service A service communication unit <b>709</b>. The service A service communication unit <b>709</b> communicates with the service A according to the received acquisition request, to acquire the initial screen display data. The service A service communication unit <b>709</b> returns the initial screen display data as a response to the acquisition request to the service communication router <b>708</b>. The service communication router <b>708</b> returns the initial screen display data as a response to the acquisition request to the service A startup processing unit <b>701</b>. The initial screen display data includes information relating to a file and information relating to a folder, which are managed in the service A.</p>
<p id="p-0101" num="0100">In step S<b>1203</b>, the CPU <b>511</b> causes the service A startup processing unit <b>701</b>, which has received the initial screen display data and the print setting information, to send a request to display an initial screen, together with the initial screen display data and the print setting information, to the UI control unit <b>703</b>. The UI control unit <b>703</b> requests the print setting UI <b>705</b> to generate and display a UI when it receives the display request. The print setting UI <b>705</b> refers to the initial screen display data included in the display request, to generate the UI and display the initial screen <b>800</b>, for example, on the operation unit <b>519</b>, and ends the processing.</p>
<p id="p-0102" num="0101">The print setting UI <b>705</b> performs control so that the print button <b>803</b> cannot be depressed when a user designates a file having a file format other than a printable file format on the file name/folder name list <b>801</b>. More specifically, the print setting UI <b>705</b> specifies the printable file format from the print setting information included in the initial screen display request. More specifically, the print setting UI <b>705</b> generates information representing a screen on which the printable data out of the data that is managed in the service can be selected as a printing object. The print setting UI <b>705</b> performs control to bring the print button <b>803</b> into a disable state when the file having a file format other than the printable file format is selected on the file name/folder name list <b>801</b>.</p>
<p id="p-0103" num="0102"><figref idref="DRAWINGS">FIG. 13</figref> illustrates an example of a flowchart relating to scan processing. Operations (steps) in the flowchart illustrated in <figref idref="DRAWINGS">FIG. 13</figref> are implemented when the CPU <b>511</b> in the image processing apparatus <b>100</b> executes the control program stored in the HDD <b>514</b>.</p>
<p id="p-0104" num="0103">In step S<b>1301</b>, the CPU <b>511</b> causes the UI control unit <b>703</b> to send a request to acquire scan setting information to the service communication router <b>708</b>. The service communication router <b>708</b> sends the received acquisition request to the service A service communication unit <b>709</b>. The service A service communication unit <b>709</b> acquires scan setting information from the scan/print setting DB <b>711</b> according to the received acquisition request. The service A service communication unit <b>709</b> returns the scan setting information as a response to the acquisition request to the service communication router <b>708</b>. The service communication router <b>708</b> returns the scan setting information as a response to the acquisition request to the UI control unit <b>703</b>.</p>
<p id="p-0105" num="0104">In step S<b>1302</b>, the CPU <b>511</b> causes the UI control unit <b>703</b> to request the scan setting UI <b>704</b> to generate and display a UI. The scan setting UI <b>704</b> displays the scan setting screen <b>900</b>, for example, on the operation unit <b>519</b>. In the case, the scan setting UI <b>704</b> refers to the scan setting information, to switch a setting item or the like. If settable values corresponding to a setting item &#x201c;file format&#x201d; include &#x201c;PDF&#x201d; and &#x201c;Tag Image File Format (TIFF)&#x201d;, for example, the scan setting UI <b>704</b> performs control so that buttons displayed as the file format button at the left of the file format selection setting <b>901</b> include only &#x201c;PDF&#x201d; and &#x201c;TIFF&#x201d;. More specifically, the scan setting UI <b>704</b> generates, from information representing a data format that can be processed by a service, information representing a screen on which the data format that can be processed by the service can be selected. If settable values corresponding to a setting item &#x201c;PDF&#x201d; include &#x201c;high-compression&#x201d;, &#x201c;OCR&#x201d;, and so on, as illustrated in the scan/print setting DB <b>711</b>, control is performed to display the high-compression specifying button <b>904</b> and the OCR specifying button <b>906</b> in the detailed setting <b>903</b>.</p>
<p id="p-0106" num="0105">In step S<b>1303</b>, the CPU <b>511</b> causes the scan setting UI <b>704</b> to include an input value (set value) set on the scan setting screen <b>900</b> in a request to execute scan processing, and to send the input value to the scan processing control unit <b>706</b> when a user operation for pressing the scan start button <b>909</b> is performed. The scan processing control unit <b>706</b> executes scan processing based on the received execution request.</p>
<p id="p-0107" num="0106">In step S<b>1304</b>, the CPU <b>511</b> causes the scan processing control unit <b>706</b> to convert image data obtained from a scan processing execution result into a designated file format, for example, according to the input value set via the scan setting screen <b>900</b>. In step S<b>1305</b>, the CPU <b>511</b> causes the scan processing control unit <b>706</b> to then send a scan data sending request including scan data having the file format obtained by the conversion, to the service communication router <b>708</b>, and ends the processing. The service communication router <b>708</b> sends the received sending request to the service A service communication unit <b>709</b>. The service A service communication unit <b>709</b> sends the scan data to the service A according to the received sending request.</p>
<p id="p-0108" num="0107"><figref idref="DRAWINGS">FIG. 14</figref> illustrates an example of a flowchart relating to print processing. Operations (steps) illustrated in the flowchart of <figref idref="DRAWINGS">FIG. 14</figref> are implemented when the CPU <b>511</b> in the image processing apparatus <b>100</b> executes the control program stored in the HDD <b>514</b>.</p>
<p id="p-0109" num="0108">In step S<b>1401</b>, the CPU <b>511</b> causes the UI control unit <b>703</b> to send a file name of a file selected by a user operation and a printing request to print the file, to the print setting UI <b>705</b>. The print setting UI <b>705</b>, which has received the file name and the printing request, sends the file name and a request to acquire the file having the file name to the service communication router <b>708</b>. The service communication router <b>708</b> sends the file name and the acquisition request to the service A service communication unit <b>709</b>.</p>
<p id="p-0110" num="0109">In step S<b>1402</b>, the CPU <b>511</b> causes the service A service communication unit <b>709</b> to call the printing file acquisition unit <b>710</b>, and causes the printing file acquisition unit <b>710</b> to determine whether the file format of the file selected by the user operation needs to be converted (can be converted in the service A). In other words, the printing file acquisition unit <b>710</b> refers to the scan/print setting information <b>1000</b> which is an example of identification information, to identify data representing a file having a file format required to be converted in the service A. For example, the printing file acquisition unit <b>710</b> refers to the scan setting/print setting DB <b>711</b>, to determine that the conversion in the service A is required when it is determined that a settable value &#x201c;xx document&#x201d; corresponding to a setting item &#x201c;service conversion&#x201d; and a file name match each other. If the printing file acquisition unit <b>710</b> determines that the conversion is required, the processing proceeds to step S<b>1403</b>. On the other hand, if the printing file acquisition unit <b>710</b> determines that the conversion is not required, the processing proceeds to step S<b>1404</b>.</p>
<p id="p-0111" num="0110">In step S<b>1403</b>, the CPU <b>511</b> causes the printing file acquisition unit <b>710</b> to send a file conversion request to the service A to convert the file format of the file, which matches the settable value &#x201c;xx document&#x201d;, selected by the user operation, into a printable file format (a PDF format in this example). The service A converts, when it receives the conversion request, the file that matches the settable value &#x201c;xx document&#x201d; selected by the user operation, into the file having the PDF format.</p>
<p id="p-0112" num="0111">In step S<b>1404</b>, the CPU <b>511</b> causes the printing file acquisition unit <b>710</b> to send a file acquisition request to the service A to acquire a file itself having a file name or a file conversion result in step S<b>1403</b>. By the service A that has received the acquisition request, file data having the designated file name is acquired and returned as a response to the printing file acquisition unit <b>710</b>. Therefore, the printing file acquisition unit <b>710</b> acquires file data included in a response to the acquisition request, from the service A.</p>
<p id="p-0113" num="0112">The printing file acquisition unit <b>710</b> sends the acquired file data to the service A service communication unit <b>709</b>, and the service A service communication unit <b>709</b> returns the file data as a response to a printing request to the service communication router <b>708</b>. The service communication router <b>708</b> that has received the file data returns the file data to the print setting UI <b>705</b> as the response to the printing request. The print setting UI <b>705</b> that has received the file data sends the received file data to the print processing control unit <b>707</b>.</p>
<p id="p-0114" num="0113">In step S<b>1405</b>, the CPU <b>511</b> causes the print processing control unit <b>707</b> that has received the file data to perform print processing for the received file data, and ends the processing.</p>
<p id="p-0115" num="0114">As described above, according to the present exemplary embodiment, in the image processing apparatus that cooperates with external services connected via a network, the increase in the number of external services, which send and receive data to and from the image processing apparatus, can be dealt with by adding mounting codes for only processing units dependent on the external services. More specifically, the image processing apparatus can realize a new external service by adding mounting codes for the service A startup processing unit <b>701</b> and the service A service communication unit <b>709</b> respectively corresponding to external services to be added. The processing units dependent on the external services commonly use a processing unit (a module) on which a commonly usable function is mounted. According to this configuration, the mounting code can be prevented from becoming huger due to the increase in the number of external services, for example.</p>
<p id="p-0116" num="0115">According to the present exemplary embodiment, the functions of the image processing apparatus can be limited according to an external service (cloud service) provided by the external server serving as a communication partner. According to the present exemplary embodiment, the image processing apparatus can realize the new cloud service without correcting the mounting codes corresponding to the basic functions of the image processing apparatus.</p>
<p id="p-0117" num="0116">In the first exemplary embodiment, a user designates a file desired to be printed from the file name/folder name list <b>801</b> to perform printing. When printing is performed, however, the user may confirm a content of a file that will be printed, to check whether the file is to be printed. The user can avoid a situation in which an erroneous file is printed by checking whether the file is to be printed.</p>
<p id="p-0118" num="0117">On the other hand, when a file to be printed is acquired from a service connected via a network and printed, a content of the file to be printed may not be confirmed unless the file is acquired. In a configuration in which the file to be printed is acquired, if the file size of the file to be printed is large, a time is required to acquire the file, which is not convenient for the user.</p>
<p id="p-0119" num="0118">In the second exemplary embodiment, a configuration is adopted in which a preview thumbnail (a thumbnail image) for confirming a content of a file is acquired and displayed in processing dependent on a service.</p>
<p id="p-0120" num="0119"><figref idref="DRAWINGS">FIG. 15</figref> illustrates an example of a flowchart relating to print processing according to the present exemplary embodiment. Operations (steps) illustrated in the flowchart of <figref idref="DRAWINGS">FIG. 15</figref> are implemented when a CPU <b>511</b> in an image processing apparatus <b>100</b> executes a control program stored in a HDD <b>514</b>. <figref idref="DRAWINGS">FIG. 15</figref> illustrates an example of the processing in step S<b>1109</b> illustrated in <figref idref="DRAWINGS">FIG. 11</figref> in the first exemplary embodiment. Steps S<b>1401</b> to S<b>1405</b> illustrated in <figref idref="DRAWINGS">FIG. 15</figref> are similar to those illustrated in <figref idref="DRAWINGS">FIG. 14</figref>, and hence the description thereof is not repeated.</p>
<p id="p-0121" num="0120">In step S<b>1501</b>, the CPU <b>511</b> causes a UI control unit <b>703</b> to display a configuration screen for confirming whether a print preview is to be displayed. More specifically, the UI control unit <b>703</b> displays on an operation unit <b>519</b> a screen on which a message &#x201c;Is a preview displayed?&#x201d; and a confirmation button (a &#x201c;YES&#x201d; button and &#x201c;NO&#x201d; button) are displayed. In other words, the UI control unit <b>703</b> generates, when data is selected on a screen on which printable data can be selected (e.g., an initial screen <b>800</b>), screen information representing a screen on which an instruction to preview the selected data (data to be printed) can be given.</p>
<p id="p-0122" num="0121">In step S<b>1502</b>, the UI control unit <b>703</b> determines that a preview display instruction is given when the user presses the &#x201c;YES&#x201d; button on the confirmation screen, and determines that a print instruction is given when the &#x201c;NO&#x201d; button is pressed. If the UI control unit <b>703</b> determines that the preview display instruction is given, the processing proceeds to step S<b>1503</b>. On the other hand, if the print instruction is given, the processing proceeds to step S<b>1401</b>.</p>
<p id="p-0123" num="0122">In step S<b>1503</b>, the CPU <b>511</b> causes the UI control unit <b>703</b> to send a file name and a request to acquire a thumbnail image to a service communication router <b>708</b>. The service communication router <b>708</b> sends the file name and the acquisition request to a service A service communication unit <b>709</b>. The service A service communication unit <b>709</b> refers to the file name, to determine whether a thumbnail image can be acquired in a service A. For example, the service A service communication unit <b>709</b> refers to a scan setting/print setting DB <b>711</b>. The service A service communication unit <b>709</b> determines that the service A can acquire the thumbnail image when it is determined that a settable value &#x201c;xx document&#x201d; corresponding to a setting item &#x201c;preview display&#x201d; and the file name match each other.</p>
<p id="p-0124" num="0123">At this time, if it is determined that the thumbnail image can be acquired (YES in step S<b>1503</b>), the processing proceeds to step S<b>1505</b>. On the other hand, if it is determined that the thumbnail image cannot be acquired (NO in step S<b>1503</b>), the processing proceeds to step S<b>1504</b>.</p>
<p id="p-0125" num="0124">In step S<b>1504</b>, the CPU <b>511</b> causes the service A service communication unit <b>709</b> to return a message that the thumbnail image cannot be acquired as a response to the acquisition request to the service communication router <b>708</b>. The service communication router <b>708</b> returns the message that the thumbnail image cannot be acquired as the response to the acquisition request, to the UI control unit <b>703</b>. The UI control unit <b>703</b>, which has received the response to the acquisition request, displays the message that the thumbnail image cannot be acquired on the operation unit <b>519</b>, to make a screen transition to an initial screen in response to a user operation.</p>
<p id="p-0126" num="0125">In step S<b>1505</b>, the CPU <b>511</b> causes the service A service communication unit <b>709</b> to send to the service A a file conversion request indicating that a file having a file name is converted into a file having a preview display format such as a Joint Photographic Expert Group (JPEG) (a thumbnail image). The service A converts, when it receives the conversion request, a file having a file name designated by the user operation into the file having the preview display format.</p>
<p id="p-0127" num="0126">In step S<b>1506</b>, the CPU <b>511</b> causes the service A service communication unit <b>709</b> to then send to the service A a request to acquire a file indicating that a file conversion result in step S<b>1505</b> is acquired. The service A that has received the acquisition request acquires file data after the conversion, and returns the acquired file data as a response to the service A service communication unit <b>709</b>. Therefore, the service A service communication unit <b>709</b> acquires the file data included in the response to the acquisition request, from the service A.</p>
<p id="p-0128" num="0127">In step S<b>1507</b>, the CPU <b>511</b> causes the service A service communication unit <b>709</b> to return the file data acquired as the response to the request to acquire the thumbnail image to the service communication router <b>708</b>. The service communication router <b>708</b>, which has received the file data, returns the file data acquired as the response to the acquisition request to a print setting UI <b>705</b>. The print setting UI <b>705</b> displays the received file data on the operation unit <b>519</b>.</p>
<p id="p-0129" num="0128">When the preview has been displayed by the user operation, the UI control unit <b>703</b> displays the initial screen. The above-mentioned configuration enables the user to confirm the file data from the preview, and then to perform a user operation for giving a printing instruction to print desired file data.</p>
<p id="p-0130" num="0129">As described above, according to the present exemplary embodiment, the processing can be switched depending on an output destination (a recording medium or a liquid crystal display unit) in the processing dependent on the external services. Thus, each of the external services can be dealt with by changing a mounting code according to the external service in the processing dependent on the external service while an increase in the number of mounting codes in the whole image processing apparatus <b>100</b> can also be suppressed.</p>
<p id="p-0131" num="0130">The present invention has also been implemented by executing processes, described below. More specifically, software (a program) for implementing functions in the above-mentioned exemplary embodiments is supplied to a system or an apparatus via a network or various types of recording media, and a computer (e.g., a CPU or a micro processing unit (MPF)) in the system or the apparatus reads out the program and executes the program.</p>
<p id="p-0132" num="0131">The configuration according to the above-mentioned exemplary embodiment can deal with an increase in the number of cooperating services more appropriately.</p>
<p id="h-0005" num="0000">Other Embodiments</p>
<p id="p-0133" num="0132">Aspects of the present invention can also be realized by a computer of a system or apparatus (or devices such as a CPU or MPU) that reads out and executes a program recorded on a memory device to perform the functions of the above-described embodiment (s), and by a method, the steps of which are performed by a computer of a system or apparatus by, for example, reading out and executing a program recorded on a memory device to perform the functions of the above-described embodiment (s). For this purpose, the program is provided to the computer for example via a network or from a recording medium of various types serving as the memory device (e.g., computer-readable medium).</p>
<p id="p-0134" num="0133">While the present invention has been described with reference to exemplary embodiments, it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all modifications, equivalent structures, and functions.</p>
<p id="p-0135" num="0134">This application claims priority from Japanese Patent Application No. 2010-189473 filed Aug. 26, 2010, which is hereby incorporated by reference herein in its entirety.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An image forming apparatus comprising:
<claim-text>a plurality of individual processing units respectively corresponding to a plurality of services that cooperate with the image forming apparatus via a network and configured to communicate with the services and perform individual processing corresponding to the services;</claim-text>
<claim-text>a specifying unit configured to specify an individual processing unit corresponding to the service selected out of the plurality of services in response to a user operation, from the plurality of individual processing units; and</claim-text>
<claim-text>a generation unit serving as a module commonly used among the plurality of individual processing units and configured to generate screen information corresponding to the individual processing unit specified by the specifying unit based on the information managed by the individual processing unit,</claim-text>
<claim-text>wherein the information managed by the individual processing unit further includes identification information for identifying data having a data format required to be converted, and</claim-text>
<claim-text>wherein the individual processing unit requests the service to convert the data format of the data to be printed and acquires data after the conversion from the service when it determines that the data to be printed is the data having a data format required to be converted based on the information representing the data managed in the service and the identification information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The image forming apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,
<claim-text>wherein the individual processing unit specified by the specifying unit acquires from the service corresponding to the individual processing unit information representing data managed in the service, and
<claim-text>wherein the generation unit generates screen information representing the data managed in the service based on the information representing the data managed in the service, which has been acquired by the individual processing unit.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The image forming apparatus according to <claim-ref idref="CLM-00002">claim 2</claim-ref>,
<claim-text>wherein the information managed by the individual processing unit includes information representing printable data,
<claim-text>wherein the generation unit generates, based on the information representing the data managed in the service and the information representing the printable data, information representing a screen on which the printable data can be selected as a printing object out of the data managed in the service, and</claim-text>
<claim-text>wherein the individual processing unit acquires the data to be printed, which has been selected via the screen represented by the screen information, from the service.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The image forming apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,
<claim-text>wherein the information managed by the individual processing unit further includes preview information indicating whether preview data used for previewing the data to be printed can be acquired from the service,</claim-text>
<claim-text>wherein the generation unit generates information representing a screen on which an instruction to preview the data to be printed can be given, and</claim-text>
<claim-text>wherein the individual processing unit acquires the preview data from the service, when it determines that the preview data corresponding to the data to be printed can be acquired from the service based on the information representing the data managed in the service and the preview information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The image forming apparatus according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising
<claim-text>a conversion unit configured to convert a data format of image data obtained by scanning a document,</claim-text>
<claim-text>wherein the information managed by the individual processing unit specified by the specifying unit includes information representing a data format that can be processed by the service corresponding to the individual processing unit,</claim-text>
<claim-text>wherein the generation unit generates, based on the information representing the data format that can be processed by the service, information representing a screen on which the data format that can be processed by the service can be selected,</claim-text>
<claim-text>wherein the conversion unit converts the image data into a data format selected via the screen represented by the screen information, and</claim-text>
<claim-text>wherein the individual processing unit sends data after the conversion by the conversion unit to the service.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The image forming apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the information managed by the plurality of individual processing units each includes at least one of information representing scan setting and information representing print setting, and is stored in a storage device corresponding to the plurality of services.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A service cooperation method in an image forming apparatus, the service cooperation method comprising:
<claim-text>specifying, from a plurality of individual processing units respectively corresponding to a plurality of services that cooperate with the image forming apparatus via a network and configured to communicate with the services and perform individual processing corresponding to the services, the individual processing unit corresponding to a service selected out of the plurality of services in response to a user operation; and</claim-text>
<claim-text>generating, as a process of a module commonly used among the plurality of individual processing units, screen information corresponding to the individual processing unit specified by the specifying based on the information managed by the individual processing unit,</claim-text>
<claim-text>wherein the information managed by the individual processing unit further includes identification information for identifying data having a data format required to be converted, and</claim-text>
<claim-text>wherein the individual processing unit requests the service to convert the data format of the data to be printed and acquires data after the conversion from the service when it determines that the data to be printed is the data having a data format required to be converted based on the information representing the data managed in the service and the identification information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A non-transitory storage medium storing a program for causing an image forming apparatus to function as:
<claim-text>a plurality of individual processing units respectively corresponding to a plurality of services that cooperate with the image forming apparatus via a network and configured to communicate with the services and perform individual processing corresponding to the services;</claim-text>
<claim-text>a specifying unit configured to specify an individual processing unit corresponding to the service selected out of the plurality of services in response to a user operation, from the plurality of individual processing units; and</claim-text>
<claim-text>a generation unit serving as a module commonly used among the plurality of individual processing units and configured to generate screen information corresponding to the individual processing unit specified by the specifying unit based on the information managed by the individual processing unit,</claim-text>
<claim-text>wherein the information managed by the individual processing unit further includes identification information for identifying data having a data format required to be converted, and</claim-text>
<claim-text>wherein the individual processing unit requests the service to convert the data format of the data to be printed and acquires data after the conversion from the service when it determines that the data to be printed is the data having a data format required to be converted based on the information representing the data managed in the service and the identification information.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
