<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626565-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626565</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12164740</doc-number>
<date>20080630</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>1030</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20120101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>Q</subclass>
<main-group>10</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20120101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>Q</subclass>
<main-group>30</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>705  735</main-classification>
<further-classification>705  11</further-classification>
</classification-national>
<invention-title id="d2e53">Vehicle dispatching method and system</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6308107</doc-number>
<kind>B1</kind>
<name>Conboy et al.</name>
<date>20011000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6351697</doc-number>
<kind>B1</kind>
<name>Baker</name>
<date>20020200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6741921</doc-number>
<kind>B2</kind>
<name>Cohen et al.</name>
<date>20040500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7050905</doc-number>
<kind>B2</kind>
<name>Nemeth</name>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2005/0197876</doc-number>
<kind>A1</kind>
<name>Benda et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705  7</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2006/0155664</doc-number>
<kind>A1</kind>
<name>Morikawa et al.</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>706 47</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2009/0177335</doc-number>
<kind>A1</kind>
<name>Young et al.</name>
<date>20090700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>701  1</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00008">
<othercit>Philipp Friese and Jorg Rambau, &#x201c;Online-optimization of multi-elevator transport system with reoptimization algorithms based on set-partitioning models&#x201d;, ZIP-Report, Jan. 2005.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00009">
<othercit>Alarie, S. and Gamache, M. Overview of Solution Strategies Used in Truck Dispatching Systems for Open Pit Mines. Intl. J. Surface Mining, Reclamation and Environment, 16, 1 (2002), 59-76.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>Ataeepour, N. and Baafi E. Arena simulation model for truck-shovel operation in dispatching and non-dispatching modes. Intl. J. Surface Mining, Reclamation and Environment, 13, 3 (1999), 125-129.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00011">
<othercit>Aydin, M. and Ozternel, E. Dynamic job-shop scheduling using reinforcement learning agents. Robotics and Autonomous Systems, 33 (2000), 169-178.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00012">
<othercit>Bailey, W. and Clark T. Taxi Management and Route Control: A Systems Study and Simulation Experiment. In Proceedings of the 1992 Winter Simulation Conference, 1992.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00013">
<othercit>Cetin, N. Open-Pit Truck/Shovel Haulage System Simulation. 2004. http://etd.lib.metu.edu.tr/upload/12605499/index.pdf. Aug. 2006.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00014">
<othercit>Czech, Z. and Czarnas, P. Parallel Simulated Annealing for the Vehicle Routing Problem with Time Windows. In Proceedings of the 10th Euromicro Workshop on Parallel, Distributed and Network-based Processing, 2002.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00015">
<othercit>Dahl, T., Mataric, M., and Sukhatme, G. Multi-Robot Task-Allocation Through Vacancy Chains. In Proceedings of the 2003 IEEE Int. Conf. on Robotics and Automation, 2003.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00016">
<othercit>Deloura, M. Game Programming Gems. Charles River Media, Inc., 2000, Section 3.9, A Neural-Net Primer, pp. 330-350.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00017">
<othercit>Elbrond, J. and Soumis, F. Towards Integrated Production Planning and Truck Dispatching in Open Pit Mines. Intl. J. Surface Mining, Reclamation and Environment, 1 (1987), 1-6.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00018">
<othercit>Filipec, M., Skrlec, D., and Krajcar, S. Darwin Meets Computers: New Approach to Multiple Depot Capacitated Vehicle Routing Problem. In Proceedings of International conference on Systems, Man, and Cybernetics, 1997.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00019">
<othercit>Geiger, C., Uzsoy, R., and Aytug, H. Rapid Modeling and Discovery of Priority Dispatching Rules: An Autonomous Learning Approach. J. Scheduling, 9,1, (2006), 7-34.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00020">
<othercit>Ghavamzadeh, M. and Mahadevan, S. A Multiagent Reinforcement Learning Algorithm by Dynamically Merging Markov Decision Processes. In Proceedings of 1st International Joint Conference on Autonomous Agents and Multiagent Systems, 2002.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00021">
<othercit>Gomes, L. and Zuben, F. A Heuristic Method Based on Unsupervised Learning and Fuzzy Interference for the Vehicle Routing Problem. In Proceedings of 7th Brazilian Symposium on Neural Networks, 2002.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00022">
<othercit>Gomes, L. and Zuben, F. A Neuro-Fuzzy Approach to the Capacitated Vehicle Routing Problem. In Proceedings of International Joint Conference on Neural Networks, 2002.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00023">
<othercit>Gonzalez, R. and Woods, R. Digital Image Processing, 2nd ed. Prentice-Hall, 2002, Section 9.3.3, Neural Networks, pp. 595-619.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00024">
<othercit>Gudaitis, M., Lamont, G., and Terzuoli A. Multicriteria Vehicle Route-Planning Using Parallel A *search. In Proceedings of 1995 ACM Symposium on Applied Computing, 1995.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00025">
<othercit>Guestrin, C., Lagoudakis, M., and Parr, R. Coordinated Reinforcement Learning. In Proceedings 19th Int. Conf. on Machine Learning, 2002.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00026">
<othercit>Hauck, R. Computer-Controlled Truck Dispatching in Open-Pit Mines. In Computer Methods for the 80's in the Mineral Industry, A. Weiss, Ed. Society of Mining Engineers, 1979, 735-742.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00027">
<othercit>Kim, Y. and Ibarra, M. Truck Dispatching by Computer Simulation. Bulk Solids Handling, 1, 1 (1981), 137-147.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00028">
<othercit>Kim, S., Wilson-Remmer, K., Kun, A., and Miller III, W. Remote Fleet Management for Police Cruisers. In Proceedings of IEEE Intelligent Vehicles Symposium, 2005.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00029">
<othercit>Kolonja, B. Analysis of Truck Dispatching Strategies for surface Mining Operations Using SIMAN. Society for Mining and Exploration, 1992, Transactions vol. 296, pp. 1845-1850.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00030">
<othercit>Kopfer, H. and Shonberger, J. Interactive Solving of Vehicle Routing and Scheduling Problems: Basic Concepts and Qualification of Tabu Search Approaches. In Proceedings of the 35th Hawaii International Conference on System Sciences, 2002.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00031">
<othercit>Kuo, R., Chiu, C., and Lin, Y. Integration of Fuzzy Theory and Ant Algorithm for Vehicle Routing Problem with Time Window. In proceedings of IEEE Annual Meeting of North American Fuzzy Information Processing Society, 2004.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00032">
<othercit>Laporte, G., Louveauz, F., and Hamme, L. An Integer L-shaped Algorithm for the Capacitated Vehicle Routing Problem with Stochastic Demands. Operations Research, 50, 3 (2002), 415-423.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00033">
<othercit>Le-Anh, T. and Koster, D. Online Dispatching Rules for Vehicle-Based Internal Transport Systems. Erasmus Research Institute of Management, 2004.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00034">
<othercit>Lewis, M., Werner, J., and Sambirsky, B. Capturing Unrealized Capacity. CIM Bulletin, 1076, (2004), 57-62.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00035">
<othercit>Li, Z. A methodology for the optimum control of shovel and truck operations in open-pit mining. Mining Science and Technology, 10 (1990), 337-340.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00036">
<othercit>Liao, Z. Real-Time Taxi Dispatching Using Global Positioning Systems. Commun. of the ACM, 46, 5 (2003), 81-83.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00037">
<othercit>Liao, Z. Taxi Dispatching via Global Positioning Systems. IEEE Trans. on Engineering Management, 48, 3 (2001), 342-347.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00038">
<othercit>Lim, A. and Wang, F. Multi-Depot Vehicle Routing Problem: A One-Stage Approach. IEEE Trans. on Automation Science and Engineering, 2, 4 (2005), 397-402.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00039">
<othercit>Liu, Y., Huang, H., and Lin, Y. Attribute Selection for the Scheduling of Flexible Manufacturing Systems Based on Fuzzy Set-Theoretic Approach and Genetic Algorithm. J. Chinese Institute of Industrial Engineers, 22, 1 (2005), 46-55.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00040">
<othercit>Lou, S. and Shi, Z. An Effective Tabu Search Algorithm for Large-Scale and Real-Time Vehicle Dispatching Problems. In Proceedings of the International Conference on Maching Learning and Cybernetics, 2005.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00041">
<othercit>Maeda, O., Nakamura, M., Ombuki, B., and Onaga, K. A Genetic Algorithm Approach to Vehicle Routing Problem with Time Deadlines in Geographical Information Systems. In Proceedings of the International Conference on Systems, Man and Cybernetics, 1999.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00042">
<othercit>Mayhew, J. Realising Capacity. Technical Paper, World Coal, Aug. 2004.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00043">
<othercit>Munirathinam, M. and Yingling, J. A review of computer-based truck dispatching strategies for surface mining operations. Intl. J. Surface Mining Reclamation and Environment, 8, (1994), 1-15.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00044">
<othercit>Murano, H., Tohmata, K., Konishi, M., and Kitamura, S. Pheromone Based Transportation Scheduling System for the Multi-Vehicle Routing Problem. In Proceedings of the International Conference on Systems, Man and Cybernetics, 1999.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00045">
<othercit>Pedroso, J. Niche Search: An Application in Vehicle Routing. IEEE World Congress on Computational Intelligence, (1998), 1-6.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00046">
<othercit>Proper, S., Tadepalli, P., Tang, H., and Logendran, R. 2003. A Reinforcement Learning Approach for Product Delivery by Multiple Vehicles. http://web.engr.oregonstate.edu/&#x2dc;proper/ProductDeliver.pdf. Aug. 2006.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00047">
<othercit>Rabin, S. Al Game Programming Wisdom. Charles River Media, Inc., 2002, Sections 11.8 &#x26; 11.10, pp. 624-628 and 640-651.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00048">
<othercit>Rabin, S. Al Game Programming Wisdom 2. Charles River Media, Inc. 2002, Sections 7.7 &#x26; 11.1, pp. 439-446 and 615-625.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00049">
<othercit>Rhoulac, T. Automated vehicle Location for School Buses: Can the Benefits Influence Choice of Mode or School Trips? TR News, 237, Mar.-Apr. 2005, 17-21.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00050">
<othercit>Russell, S. and Norvig, P., Artificial Intelligence: A Modern Approach, 2nd ed. Pearson Education, 2003, Section 20.5, pp. 736-748.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00051">
<othercit>Seifert, R. and Kay, M., Evaluation of AGV Routing Strategies Using Hierarchical Simulation. In Proceedings of the 1995 Winter Simulation Conference, 1995.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00052">
<othercit>Shen, Y., Potvin, J., and Rousseau, J., Neural Networks for Automated Vehicle Dispatching. Computers and Operations Res., 19, 3-4, (1992), 267-276.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00053">
<othercit>Soumis, F., Ethier, J., and Elbrond, J., Evaluation of the New Truck Dispatching in the Mount Wright Mine. In 21st Application of Computers and Operations Research in the Mine Industry Proceedings, 1990, ch. 63, pp. 674-682.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00054">
<othercit>Soumis, F., Ethier, J., and Elbrond, J., Truck dispatching in an open-pit mine. Intl, J. Surface Mining, 3 (1989), 115-119.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00055">
<othercit>Subramanian, R., Scheff, R., Quillinan, J., Wiper, D., and Marsten, R., Coldstart: Fleet assignment at Delta Air Lines, Institute for Operations Res. and Manage. Sciences, Jan. 24-Feb. 1994, 104-120.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00056">
<othercit>Sutton, S. and Barton, A. Reinforcement learning: An Introduction. MIT Press, A Bradford Books, 1998.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00057">
<othercit>TA, C., Kresta, J., Forbes, J., and Marquez, H., A Stochastic Optimization Approach to Mine Truck Allocation. Intl. J. Surface Mining, Reclamation and Environment, 19, 3 (2005), 162-175.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00058">
<othercit>Tarasewich, P. and McMullen, P., Swarm Intelligence: Power in Numbers. Commun. of the ACM, 45, 8 (2002), 62-67.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00059">
<othercit>Tesauro, G., Temporal Difference Learning and TD-Gammon. Commun. of the ACM, 38, 3 (1995), 58-68.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00060">
<othercit>Temeng, V., Otuonye, F., and Frendewey, J., Real-time truck dispatching using a transportation algorithm. Intl. J. Surface Mining, Reclamation and Environment, 11, 4, (1997), 203-207.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00061">
<othercit>Temeng, V., Otuonye, F., and Frendewey, J. A Nonpreemptive Goal Programming Approach to Truck Dispatching in Open Pit Mines. Mineral Resources Engineering, 7, 2, (1998), 59-67.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00062">
<othercit>Thangiah, S. and Nygard, K., Dynamic Trajectory Routing Using an Adaptive Search Method. In Proceedings of the 1993 ACM/SIGAPP Symposium on Applied Computing, 1993.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00063">
<othercit>Thangiah, S., Shmygelska, O., and Mennell, W. An Agent Architecture for Vehicle Routing Problems. In Proceedings of ACM Symposium on Applied Computing, 2001.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00064">
<othercit>Topaloglu, H. and Powell, W., Sensitivity Analysis of a Dynamic Fleet Management Model Using Approximate Dynamic Programming. 2005. http://legacy.orie.cornell.edu/&#x2dc;huseyin/publications/gradient.pdf. Aug. 2006.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00065">
<othercit>Torquati, F., Paltinieri, M., and Momigliano, A., A Constraint Satisfaction Approach to Operative Management of Aircraft Routing. In Proceedings of the 3rd International Conference on Industrial and Engineering Applications of Artificial Intelligence and Expert Systems, 1990.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00066">
<othercit>TU, H. and Hucka, V., Analysis of open pit truck haulage system by use of a computer model. CIM Bulletin, 78, 879 (1985), 53-60.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00067">
<othercit>Vakhutinsky, A. and Golden, B., Solving Vehicle Routing Problems Using Elastic Nets. In Proceedings of the IEEE Int. Conf. on Neural Networks, 1994.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00068">
<othercit>Waters, C., Expert Systems for Vehicle Scheduling. J. Operational Research Society, 41, 6 (1990), 505-515.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00069">
<othercit>Wenco International Mining, [Email, May, 2006], Dispatch Desc.doc.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00070">
<othercit>White, J. and Zoschke, L., Automation of open pit mine operation is long overdue. In World Mining Equipment, (Jul.-Aug. 1994), 15-20.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00071">
<othercit>Wilke, F. and Heck, K., Simulation Studies on Truck Dispatching. In 17th Application of Computers and Operations Research in the Mine Industry, 1982.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00072">
<othercit>XI, Y. and Yegulalp, T., Optimum Dispatching Algorithms for Anshan Open-Pit Mine. In 24th Application of Computers and Operations Research in the Mine Industry Proceedings, 1993.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00073">
<othercit>Xu, Y., Lim, M., and Er, M., Investigation on Genetic Representations for Vehicle Routing Problem. In Proceedings of the International Conference on Systems, Man, and Cybernetics, 2005.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00074">
<othercit>Cross, Barton K. And Williamson, Gary B., Digital Simulation of an Open-Pit Truck Haulage System, 1969.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00075">
<othercit>Tan, S. and Ramani, R.V., Evaluation of computer truck-dispatching criteria, Society for Mining, Metallurgy and Exploration, Inc. (1993), Transactions vol. 292, 1953-1961.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>5</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>705  11</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>705  711-  742</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>705  5</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>705330-342</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>705400-418</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>4</number-of-drawing-sheets>
<number-of-figures>4</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20090327011</doc-number>
<kind>A1</kind>
<date>20091231</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Petroff</last-name>
<first-name>Thomas M.</first-name>
<address>
<city>Petersboro</city>
<state>UT</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Petroff</last-name>
<first-name>Thomas M.</first-name>
<address>
<city>Petersboro</city>
<state>UT</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Fennemore Craig, P.C.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Autonomous Solutions, Inc.</orgname>
<role>02</role>
<address>
<city>Petersboro</city>
<state>UT</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Chen</last-name>
<first-name>George</first-name>
<department>3628</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A system and method for dispatching a plurality of vehicles operating in a work area among a plurality of destination locations and a plurality of source locations includes implementing linear programming that takes in an optimization function and constraints to generate an optimum schedule for optimum production, utilizing a reinforcement learning algorithm that takes in the schedule as input and cycles through possible environmental states that could occur within the schedule by choosing one possible action for each possible environmental state and by observing the reward obtained by taking the action at each possible environmental state, developing a policy for each possible environmental state, and providing instructions to follow an action associated with the policy.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="199.56mm" wi="127.51mm" file="US08626565-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="181.53mm" wi="132.59mm" orientation="landscape" file="US08626565-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="152.15mm" wi="104.56mm" file="US08626565-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="210.06mm" wi="142.83mm" file="US08626565-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="232.33mm" wi="141.05mm" file="US08626565-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0002" num="0001">1. Field of the Invention</p>
<p id="p-0003" num="0002">The present invention relates to a vehicle dispatching method and system. Specifically, the present invention is for dispatching multiple vehicles operating in a work area.</p>
<p id="p-0004" num="0003">2. Background Information</p>
<p id="p-0005" num="0004">In many different industries, such as warehousing, shipping or mining, and for different applications (e.g. material handling, fleet management, delivery, police and emergency vehicles, military, etc.), a plurality of vehicles must travel to and from multiple destination points. Due to vehicle limitations, such as cargo capacity or speed, vehicles must make many trips over a given period of time to accomplish a given objective, such as continuously transporting goods or materials to the desired destination on time. Dispatching often aids in efficiency. Vehicles and events in a work area are monitored so that vehicles can be dispatched when an event occurs that affects efficiency. For example, the object may be to maximize the amount of material hauled while minimizing operational costs. In another example, the object may be to maximize the number of deliveries over a period of time. Achieving these objectives (and therefore efficiency) becomes increasingly difficult as the number of vehicles and the number of destinations increase.</p>
<p id="p-0006" num="0005">Vehicle dispatch systems dealing with multiple vehicles have been implemented in the past with limited success due to poor selection of routes or vehicles or solutions based on localized parameters, thereby limiting their applicability as generalized solutions, for example.</p>
<p id="p-0007" num="0006">Linear programming methods have been used to establish a schedule for vehicles to follow, but the schedules have not been adapted to address the constantly-changing environment in real time. Other commonly-used vehicle dispatching systems use a &#x201c;greedy&#x201d; local search method to select a vehicle for the next task by implementing heuristic rules that select vehicles on a &#x201c;first come first served&#x201d; or &#x201c;minimize wait time&#x201d; basis. Even under this system, the set schedule must be maintained, again failing to take account of uncertain and constantly changing environments.</p>
<p id="p-0008" num="0007">Thus, there exists a need for an efficient vehicle dispatching method and system that can be used to advantage in uncertain environments. This invention addresses this need in the art as well as other needs, which will become apparent to those skilled in the art from this disclosure.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0009" num="0008">One embodiment of a vehicle dispatch system according to the present invention may comprise an interface communication unit, an upper stage unit, and a lower stage unit. The interface communication unit is operable to receive and transmit communications from vehicles. The upper stage unit is communicatively connected to the interface communication unit and configured to generate a schedule for the vehicles. The lower stage unit is communicatively connected to the upper stage unit and the interface communication unit, and has a control unit that receives the schedule as a state representation, a first storage unit for storing a plurality of states that are possible in the state representation, and a second storage unit. Each possible state has a plurality of possible actions. The control unit is configured to simulate the states during an episode by selecting an action of the state and determining a reward value for the selected action. The second storage unit stores the reward value for each action and has a policy linked to one of the possible actions for each state. The interface communications unit is configured to access the policy and the action linked to the policy and communicate the action to one or more of the vehicles.</p>
<p id="p-0010" num="0009">A method of optimizing vehicle dispatching resulting from a linear program may comprise: inputting a vehicle dispatching schedule as a state representation into a reinforcement learning algorithm, the state representation having a plurality of states with each state having a plurality of possible actions; running a simulation of the states by selecting one of the possible actions within each state, one running of the simulation being an episode and producing a result; assigning a reward value based on the result; for each action in each state within the episode, determining a policy value based on at least one of the reward value, a subsequent state, a subsequent action, elapsed time in the episode at the state and elapsed time in the episode at the subsequent state; developing a policy for each state in which the action in each state that produces the maximum policy value is a preferred action; dispatching the preferred action to a vehicle in a work area.</p>
<p id="p-0011" num="0010">A method for dispatching a plurality of vehicles operating in a work area among a plurality of destination locations and a plurality of source locations may comprise: implementing linear programming that takes in an optimization function and constraints to generate an optimum schedule for optimum production, the optimum schedule defining the number of trips taken along paths between the destination locations and the source locations to achieve the optimum production; utilizing a reinforcement learning algorithm that takes in the optimum schedule as input and cycles through possible environmental states that could occur within the optimum schedule by choosing one possible action for each possible environmental state and by assigning a reward value obtained by taking the action at each possible environmental state; developing a policy for each possible environmental state based on at least the reward value and time; associating a state in the work area with one of the possible environmental states and accessing the preferred action associated with the policy for the associated possible environmental state; and providing instructions to follow the preferred action.</p>
<p id="p-0012" num="0011">These and other objects, features, aspects and advantages of the present invention will become apparent to those skilled in the art from the following detailed description, which, taken in conjunction with the annexed drawings, discloses a preferred embodiment of the present invention.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0013" num="0012">Referring now to the attached drawings which form a part of this original disclosure:</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 1</figref> is a schematic diagram of a vehicle dispatch system or method according to one embodiment of the present invention; and</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 2</figref> is a diagram of a work area in which vehicles are dispatched.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 3</figref> illustrates a method of vehicle dispatching according to the present invention; and</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 4</figref> illustrates the reinforcement learning step of the method of vehicle dispatching.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0018" num="0017">A vehicle dispatch system <b>1</b> and method <b>30</b> according to embodiments of the present invention will now be explained with reference to the drawings. It will be apparent to those skilled in the art from this disclosure that the following descriptions of the embodiments of the present invention are provided for illustration only and not for the purpose of limiting the invention as defined by the appended claims and their equivalents.</p>
<p id="p-0019" num="0018">The vehicle dispatch system <b>1</b> or method <b>30</b> comprises a combination of linear programming and reinforcement learning to provide dynamic vehicle dispatching solutions. The reinforcement learning aspect of the invention &#x201c;learns&#x201d; from the consequences of actions taken within an environment (such as work area <b>8</b>, for example), thereby permitting the best action to be &#x201c;learned&#x201d; over the course of thousands of simulations. Generally, the reinforcement learning of the present invention includes a decisionmaking agent interacting with the environment in order to maximize a reward. The reinforcement learning, via the decisionmaking agent, identifies characteristics of the environment's state and selects actions, preferring actions that in the past have been effective in maximizing the reward. The present invention includes a value function that is used to construct better decisionmaking policies based on a value of the rewards accumulated over time. In vehicle dispatching, continuous decisionmaking produces a sequence of decisions in which each decision defines options available when making future decisions. The present invention provides a vehicle dispatch method <b>30</b> and system <b>1</b> that can cycle through multiple sequences of decisions via simulation to learn or discover the best decisions for producing the right rewards (i.e. optimum results in vehicle dispatching). The simulation of the present invention can include both trial and error learning and/or deliberate planning as well as elements of randomness to learn or discover the best decisions to maximize rewards and longterm value leading to the optimum results in vehicle dispatching. One advantage the present invention may have over conventional dispatching is that it allows reinforcement learning to be applied to continuous actions taking place over time where time may be considered to be infinite for all practical purposes. In the past, reinforcement learning could not be applied to uncertain environments having continuous actions over a time continuum without fixed intervals. Often, the conventional means would be limited to a mere sampling of the actions at fixed time intervals. The inventor has identified this problem and has fashioned a novel solution in which a time continuum is a factor, but where nonetheless reinforced decisions can be made automatically whenever a dispatch is needed, as explained below.</p>
<p id="p-0020" num="0019">While the present invention in its various embodiments may be described as vehicle dispatch system <b>1</b> and vehicle dispatch method <b>30</b>, the detailed description of the invention will begin with a general description of vehicle dispatch system <b>1</b>. Referring initially to <figref idref="DRAWINGS">FIG. 1</figref>, vehicle dispatch system <b>1</b> may comprise an interface communication unit <b>2</b> and a multistage unit <b>4</b> for communicating with and controlling vehicles <b>6</b> that may be autonomous or substantially autonomous, such that at least a portion of the vehicle's <b>6</b> functions may operate under the control of a computer, processor and/or control unit.</p>
<p id="p-0021" num="0020">The interface communication unit <b>2</b> includes communication equipment to receive information from and transmit information to multiple vehicles <b>6</b> operating within work area <b>8</b>. The vehicles <b>6</b> are preferably equipped with communication equipment (not shown) to receive and transmit information. Interface communication unit <b>2</b> monitors and controls vehicle <b>6</b> operating in the work area <b>8</b>. Where the vehicles <b>6</b> are autonomous or substantially autonomous, the interface communication unit <b>2</b> controls and monitors the multiple autonomous vehicles <b>6</b>, preferably in wireless communication with vehicle <b>6</b>, but this is not required. The interface communication unit <b>2</b> may be maintained at a location separate and remote from the vehicles <b>6</b>, where interface communication unit <b>2</b> provides a control center for a user to monitor and control multiple vehicles <b>6</b>.</p>
<p id="p-0022" num="0021">Interface communication unit <b>2</b> comprises user interface <b>2</b><i>a </i>that may be used to configure, for example, a mission of the vehicles <b>6</b>, a path to be taken by the vehicles <b>6</b>, or individual tasks of the vehicles <b>6</b>. Preferably, the interface communication unit <b>2</b> wirelessly communicates with the vehicles <b>6</b> via a receiver <b>2</b><i>b </i>and transmitter <b>2</b><i>c</i>, for example, from the location remote from the work area <b>8</b> in which the vehicles <b>6</b> operate. The interface communication unit <b>2</b> can be operated via a control unit (not shown), which can run software such as the Mobius&#x2122; control software from Autonomous Solutions, Inc.&#x2122;, for example. Such software allows the user to configure missions or paths for autonomous vehicles <b>6</b>, for example. The software of the interface communication unit <b>2</b> further allows the user to select vehicle <b>6</b> from among many and impart instructions to the selected vehicle <b>6</b> to perform various tasks desired by the user. The software and hardware of the interface communication unit <b>2</b> are used to send instructions to the vehicles <b>6</b>. In a mining application, for example, the user can safely operate large vehicles <b>6</b>, for example, at the location remote from the dangerous or dynamic work area <b>8</b>. The interface communication unit <b>2</b> provides for improved monitoring and control of vehicles <b>6</b> because the interface communication unit <b>2</b> allows relatively few users to monitor and control many vehicles <b>6</b>.</p>
<p id="p-0023" num="0022">As stated above, work area <b>8</b> may present a dynamic environment due to the presence of multiple vehicles <b>6</b> with different sources, destinations and paths. Thus, in the embodiment shown in <figref idref="DRAWINGS">FIGS. 1 and 2</figref>, the work area <b>8</b> comprises a plurality of source locations S<b>1</b>, S<b>2</b> and a plurality of destination locations D<b>1</b>, D<b>2</b> along paths, routes or legs of a round trip. The vehicles <b>6</b> travel to and from the source locations S<b>1</b>, S<b>2</b> and the destination locations D<b>1</b>, D<b>2</b>.</p>
<p id="p-0024" num="0023">Given the attributes of work area <b>8</b>, the user interface <b>2</b><i>a </i>of the interface communication unit <b>2</b> may be configured to provide general operational requirements to the multistage unit <b>4</b>. The general operational requirements may comprise constraints in the work area <b>8</b>, such as material blending requirements, and minimum and maximum capacities of source locations S<b>1</b>, S<b>2</b> and destination locations D<b>1</b>, D<b>2</b>. The general operational requirements may also comprise vehicular constraints, such as maximum and minimum loads and maximum and minimum velocities.</p>
<p id="p-0025" num="0024">Now, multistage unit <b>4</b> of vehicle dispatch system <b>1</b> will be discussed. The multistage unit <b>4</b> creates a schedule and optimizes the schedule as will be described in more detail below. The multistage unit <b>4</b> of the vehicle dispatch system <b>1</b> comprises an upper stage unit <b>10</b> and a lower stage unit <b>12</b>. The upper stage unit <b>10</b> comprises a processor <b>10</b><i>a </i>that receives data from the user interface <b>2</b><i>a </i>of the interface communication unit <b>2</b>. The user at the interface communication unit <b>2</b> may use the user interface <b>2</b><i>a </i>to input various constraints, including the general operational requirements, and optimization requests into the processor <b>10</b><i>a </i>of the upper stage unit <b>10</b>. The upper stage unit <b>10</b> and the lower stage unit <b>12</b> are communicatively connected to each other and to the interface communication unit <b>2</b>. For example, in an embodiment described herein, the upper stage unit <b>10</b>, the lower stage unit <b>12</b> and the interface communication unit <b>2</b> are wirelessly connected to each other and are in separate locations remote from one another. It will be apparent to one of ordinary skill in the art from this disclosure that, the upper stage unit <b>10</b> and the lower stage unit <b>12</b> may form an integral multistage unit <b>4</b> in which all of the functions, characteristics, identities, etc., described herein for the upper stage unit <b>10</b> and the lower stage unit <b>12</b> are performed by a single unit. Consequently, the configuration of the multistage unit <b>4</b> should not be regarded as limited to the particular configuration shown and described herein. In another embodiment, the multistage unit <b>4</b> forms a section of the interface communication unit <b>2</b> to form an integral control system. In one embodiment, the upper stage unit <b>10</b> with the processor <b>10</b><i>a </i>utilizes programming (i.e., linear programming) to develop the schedule for the vehicles <b>6</b> to operate among and between the source locations S<b>1</b>, S<b>2</b> and destination locations D<b>1</b>, D<b>2</b>.</p>
<p id="p-0026" num="0025">Having briefly described the vehicle dispatch system <b>1</b>, the vehicle dispatch method <b>30</b> will now be described. The present invention advantageously provides vehicle dispatch method <b>30</b> to communicate with many vehicles <b>6</b> operating among and between the source locations S<b>1</b>, S<b>2</b> and destination locations D<b>1</b>, D<b>2</b> to achieve one or more goals or objectives, e.g., maximizing the amount of material hauled, minimizing delivery time, etc. Thus, method <b>30</b> schematically illustrated in <figref idref="DRAWINGS">FIG. 3</figref> comprises setting <b>31</b> the goal using <b>32</b> linear programming to generate the schedule, the schedule being used for a state representation; using <b>33</b> reinforcement learning to develop an appropriate action for a given state within the state representation in the work area <b>8</b>; and dispatching the vehicle <b>6</b> to take the appropriate action towards meeting the schedule and achieving the goal. A significant advantage of the present invention is that the schedule, which is developed to achieve the goal(s), may be continually optimized by simulating possible actions taken during the course of implementing the schedule through reinforcement learning. Recognizing that the method <b>30</b> is dynamic and iterative, the steps of the method <b>30</b> should not be viewed as being limited to being performed in any particular order.</p>
<p id="p-0027" num="0026">As stated above, method <b>30</b> may comprise setting <b>31</b> the goal. One goal may be to haul as much material to the destination locations D<b>1</b>, D<b>2</b> as possible. However, achieving this goal may be constrained by the fact that, often, not all source and destination locations S<b>1</b>, S<b>2</b>, D<b>1</b>, D<b>2</b> have the same type of material. In addition, percentage constraints may also be a factor since a certain percentage of each material type must be carried to the destination locations D<b>1</b>, D<b>2</b> over a specified time period.</p>
<p id="p-0028" num="0027">After setting <b>31</b> the goal, the next step of the method <b>30</b> may comprise using <b>32</b> linear programming to generate the schedule to achieve the goal(s). The linear programming's schedule can take a number of different forms. For example, the schedule can assign the number of loads that should be picked up at each source location S<b>1</b>, S<b>2</b> and dropped off at each destination location D<b>1</b>, D<b>2</b> or can assign the number of trips that should be taken along each path, e.g., the path from S<b>2</b> to D<b>1</b>. However, the method <b>30</b> does not stop there because using linear programming does not work well for dynamic environments, even when the linear program is rerun. Recognizing the limitations of using linear programming, as explained in more detail below, the method <b>30</b> of the present invention uses dynamic methods to allow the vehicles <b>6</b> to be dispatched to meet the schedule developed by the linear programming.</p>
<p id="p-0029" num="0028">While linear programming can generate the schedule, that schedule does not take into account the changes that are constantly occurring in the work area <b>8</b> that will determine whether the vehicles <b>6</b> will be able to keep to the schedule. In dynamic work area <b>8</b>, such as a mining pit, the environment changes frequently and often dramatically. For example, roads change: Roads can be closed due to obstacles and stalled vehicles; roads are reopened as disruptions are resolved; and roads can be rerouted due to movement of material during the course of mining. Also, the number and identity of available vehicles <b>6</b> change, too, due to vehicle <b>6</b> breakdowns and required maintenance. Moreover, source locations, S<b>1</b>, S<b>2</b> and/or destination locations D<b>1</b>, D<b>2</b> may become unavailable, etc. Linear programming cannot account for these problems in real time; nor do greedy local search methods that rely on a heuristic and therefore do not explore other options or possible actions obviating a global optimum solution.</p>
<p id="p-0030" num="0029">However, by using reinforcement learning in combination with linear programming in a novel way, the method <b>30</b> of the present invention provides a way to anticipate these situations and set a policy that can be followed when such situations arise. Simulation through reinforcement learning is used to develop the policy for the given situation and then to associate an appropriate action with the policy to lead to optimal results. The appropriate action may be one that is the most efficient or otherwise preferred or it may just be considered appropriate under the circumstances. Thus, a globally optimal policy can be determined so that the schedule can be met. Implementing multiple policies pertaining to actions in accordance with the method <b>30</b> of the present invention causes the optimal schedule to be very close to the schedule generated when using <b>32</b> linear programming.</p>
<p id="p-0031" num="0030">The schedule generated by using <b>32</b> linear programming is used in the reinforcement learning step, which in one embodiment, may comprise a reinforcement learning algorithm. The schedule is input into the reinforcement learning algorithm as the state representation, S, as is described in more detail below. Thus, reinforcement learning may be used to operationalize the schedule through intensive simulation and thereby create policies for the vehicles <b>6</b> to follow, such as by developing the appropriate action for the state s within the state representation S in the work area <b>8</b>. Through simulation, the reinforcement learning algorithm creates and improves policies for possible environmental states that could occur in the work area <b>8</b>.</p>
<p id="p-0032" num="0031">Preferably, the state representation S is set up in such a way that it can handle many different types of vehicle dispatching problems. In an embodiment described herein, the reinforcement learning algorithm allows many vehicle dispatching problems, such as breakdown, maintenance, road closures, obstacles, etc., to be considered in determining the optimum dispatch decision for the vehicles <b>6</b> in the work area <b>8</b>. Ultimately, the more vehicle dispatching problems considered, the more complex the scenarios, and, thus, the more time involved in determining a solution. In the reinforcement learning step <b>33</b> a policy is developed for each possible environmental state in the work area <b>8</b> based on at least a reward value and time. An actual state in the work area <b>8</b> is then associated with one of the possible environmental states and the appropriate action (e.g., preferred action) associated with the policy for the associated possible environmental state is accessed.</p>
<p id="p-0033" num="0032">Armed with the appropriate action, method <b>30</b> further comprises dispatching <b>34</b> the vehicle <b>6</b> to take the appropriate action towards meeting the schedule and achieving the goal. Vehicle dispatching <b>34</b> comprises sending instructions to vehicle <b>6</b> to take the appropriate action at critical junctures that occur in work area <b>8</b>. The present invention aids in continuously sending instructions to vehicles <b>6</b> to go from source location S<b>1</b>, S<b>2</b> to destination location D<b>1</b>, D<b>2</b> in a way that may minimize idle time and maximize material throughput, for example. Dispatching <b>34</b> may designate the vehicle <b>6</b> route between locations S<b>1</b>, S<b>2</b>, D<b>1</b>, D<b>2</b> to take between locations and may occur continuously. In the case of autonomous vehicle <b>6</b>, dispatching <b>34</b> may comprise sending instructions to take the appropriate action directly to the vehicle <b>6</b> via wireless communication through the vehicle dispatch system <b>1</b>. In an embodiment for vehicles <b>6</b>, operated teleremotely, dispatching <b>34</b> may comprise sending such instructions to the teleremote operator. In an embodiment for manned vehicles <b>6</b>, dispatching <b>34</b> may comprise sending such instructions to the vehicle <b>6</b> operator directly (e.g., via radio communication).</p>
<p id="p-0034" num="0033">The method <b>30</b> may be further explained with reference to the following example. Work area <b>8</b> of the present example consists of two source locations S<b>1</b>, S<b>2</b> and two destination locations D<b>1</b>, D<b>2</b>, with the segments in between being of various lengths. It takes 2.5 minutes to load at S<b>1</b> and 1.8 minutes to load at S<b>2</b>. It takes three minutes to unload at D<b>1</b> and four minutes at D<b>2</b>. In this example, loads from S<b>2</b> can only be unloaded at D<b>1</b> because they are of the same material type and loads from S<b>1</b> are only able to be unloaded at D<b>2</b>. This example uses five vehicles <b>6</b>. Each vehicle has an average velocity of 10 m/s and a haul capacity of 100 tons. Thus, in the context of this example, setting <b>31</b> the goal may comprise maximizing the loads delivered from S<b>2</b> to D<b>1</b> and S<b>1</b> to D<b>2</b>.</p>
<p id="p-0035" num="0034">The linear programming of the system <b>1</b> or method <b>30</b> generates the schedule, which may be a simple, optimal abstract schedule. An example of the schedule that defines the number of trips to be traveled along each path between source locations S<b>1</b>, S<b>2</b> and destination locations D<b>1</b>, D<b>2</b> is given in Table 1.</p>
<p id="p-0036" num="0035">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 1</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Linear Program Schedule</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="56pt" align="left"/>
<colspec colname="1" colwidth="35pt" align="center"/>
<colspec colname="2" colwidth="126pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>Edge</entry>
<entry>Quota</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="56pt" align="left"/>
<colspec colname="1" colwidth="35pt" align="center"/>
<colspec colname="2" colwidth="126pt" align="char" char="."/>
<tbody valign="top">
<row>
<entry/>
<entry>S1 to D2</entry>
<entry>15</entry>
</row>
<row>
<entry/>
<entry>S2 to D1</entry>
<entry>20</entry>
</row>
<row>
<entry/>
<entry>D1 to S1</entry>
<entry>0</entry>
</row>
<row>
<entry/>
<entry>D1 to S2</entry>
<entry>20</entry>
</row>
<row>
<entry/>
<entry>D2 to S1</entry>
<entry>15</entry>
</row>
<row>
<entry/>
<entry>D2 to S2</entry>
<entry>0</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0037" num="0036">Instead of using a greedy local search solution, for example, to generate dispatches that try to maintain the linear programming's schedule&#x2014;using techniques such as first come first served, minimize wait time, etc.&#x2014;method <b>30</b> of the present invention uses 33 reinforcement learning to operationalize the schedule (e.g., developing appropriate the appropriate action for state(s) in work area <b>8</b>). In one embodiment, using <b>33</b> reinforcement learning comprises using a Monte Carlo reinforcement learning algorithm. An example of a Monte Carlo reinforcement learning algorithm for this embodiment is shown below.</p>
<p id="p-0038" num="0037">
<tables id="TABLE-US-00002" num="00002">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="196pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>Initialize, for all s &#x2208; S, a &#x2208; A(s)</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Q(s, a) &#x2190; 0</entry>
</row>
<row>
<entry/>
<entry>&#x3c0;(s) &#x2190; 0</entry>
</row>
<row>
<entry/>
<entry>Returns(s, a) &#x2190; empty list</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="196pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Repeat until no changes in policy:</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Get start state s</entry>
</row>
<row>
<entry/>
<entry>a &#x2190; &#x3c0;(s)</entry>
</row>
<row>
<entry/>
<entry>For each pair s,a appearing in the episode:</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="63pt" align="left"/>
<colspec colname="2" colwidth="154pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>R &#x2190; applyAction(s, a)</entry>
</row>
<row>
<entry/>
<entry>Append R to Returns(s, a)</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>For each s,a pair in Returns:</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="63pt" align="left"/>
<colspec colname="2" colwidth="154pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Q(s, a) &#x2190; Q(s, a) +</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="84pt" align="left"/>
<colspec colname="2" colwidth="133pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&#x3b1; &#xb7; {[R + &#x3b3; &#xb7; Q(s', a')]-Q(s, a)}</entry>
</row>
<row>
<entry/>
<entry>where s', a' are the</entry>
</row>
<row>
<entry/>
<entry>next state and next action in the episode</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="63pt" align="left"/>
<colspec colname="2" colwidth="154pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&#x3c0;(s) &#x2190; argmax<sub>a</sub>Q(s, a)</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0039" num="0038">In the reinforcement learning algorithm shown above, S is the set of all states s, and A is the set of all actions a in state s. Q(s,a) is a policy value function for state s given action a. &#x3c0;(s) is the policy, i.e., the action that should be taken, for state s. An episode is one run of the simulation. R is the reward for taking action a in state s. The goal of the reinforcement learning is to maximize the reward R to both identify the appropriate (e.g., best) action for each state and designate that action as the policy &#x3c0;(s) for that state. It will be apparent to one of ordinary skill in the art from this disclosure that the reinforcement learning algorithm can take various forms, and that reinforcement learning techniques, such as SARSA, Q-learning and temporal difference learning, can be used.</p>
<p id="p-0040" num="0039">The reinforcement learning algorithm uses the output of the linear programming (i.e., the schedule) to create the state representation, S. In one embodiment, the state representation S may be characterized as a simple table or array containing the possible states s of the work area <b>8</b>, such as that shown in Table 1. The state representation S may be used in reinforcement learning as an easy way to track the states s of the work area <b>8</b>. A state array takes each of the possible states s of the work area <b>8</b> (e.g., from Table 1) and places them in a discrete location in the state array. For learning purposes, a Q table is created. The Q table links with the state array to facilitate final decisionmaking and the policy &#x3c0; for state s is linked to a policy value Q in the Q table. The Q table consists of the value (e.g., the policy value) for each possible action a at each state s in the state representation S. Learning takes place by assigning reward R (e.g., reward value) based on the results from the action a and propagating rewards through all of the states s by adjusting the policy values in the Q table. The rewards R are a factor in determining whether the action a results in the policy &#x3c0;(s) for the state s. The reinforcement learning tries to maximize the reward R by continuously running simulations. The action a in given state s that results in the maximum possible value of Q becomes the policy &#x3c0; for that given state s and the action a is the appropriate (e.g., preferred action). The policy &#x3c0; is linked to the appropriate action a which produces the maximum value of Q. If during a subsequent simulation the reinforcement learning technique attains policy value Q greater than previously achieved, the policy value in the Q table for the corresponding action a in the state s is adjusted and the action a that resulted in the greater policy value Q is newly associated with the policy &#x3c0;. To determine the policy &#x3c0; for a state s, the state's discrete location in the state array is found. The index in the array is then used to locate the appropriate element in the Q table. The action a in the Q table with the best policy value Q becomes the policy &#x3c0; for that state s. Once learning is complete, the action resulting in the policy &#x3c0; for the given state s of the work area <b>8</b> is communicated to vehicle <b>6</b>, thereby dispatching <b>34</b> the vehicle <b>6</b> to take the appropriate action towards meeting the schedule and achieving the goal.</p>
<p id="p-0041" num="0040">Now that the method <b>30</b> has been explained in general, embodiments of the method <b>30</b> demonstrating how using reinforcement learning can be used to modify state representation S will now be explained. In the embodiment shown in <figref idref="DRAWINGS">FIG. 2</figref>, when vehicles <b>6</b> are at destination location D<b>1</b>, D<b>2</b>, decisions need to be made about where the vehicles <b>6</b> should go next. There are two possible decisions: go to S<b>1</b> or S<b>2</b>. In the schedule of this embodiment shown in Table 1, there are 20 states allocated for traveling from D<b>1</b> to S<b>2</b>. While the reinforcement learning technique proceeds with learning, it is possible for more trips to be taken along the path other than what the linear programming's schedule suggests. As an example, a buffer of two may be added to the state representation S, increasing the possible states from 20 to 22 states from D<b>1</b> to S<b>2</b>. If more than 21 trips are made on this path, the same state index is returned as would be returned for 21 trips. This is done because exceeding the number of trips suggested by the linear programming is suboptimal. To represent all of these states and how they influence each other, the number of trips for each path are all multiplied together. In this example, where two actions are possible at each state, the Q table is twice the size of the state space. Equation (1) shows a calculation of the number of states for any given problem, where n is the number of trips and n<sub>i </sub>is the number of trips to take at the ith trip.</p>
<p id="p-0042" num="0041">
<maths id="MATH-US-00001" num="00001">
<math overflow="scroll">
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <mo>&#xf603;</mo>
          <mi>S</mi>
          <mo>&#xf604;</mo>
        </mrow>
        <mo>=</mo>
        <mrow>
          <munderover>
            <mo>&#x220f;</mo>
            <mrow>
              <mi>i</mi>
              <mo>=</mo>
              <mn>1</mn>
            </mrow>
            <mi>n</mi>
          </munderover>
          <mo>&#x2062;</mo>
          <mstyle>
            <mspace width="0.3em" height="0.3ex"/>
          </mstyle>
          <mo>&#x2062;</mo>
          <mrow>
            <mo>(</mo>
            <mrow>
              <msub>
                <mi>n</mi>
                <mi>i</mi>
              </msub>
              <mo>+</mo>
              <mn>2</mn>
            </mrow>
            <mo>)</mo>
          </mrow>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>1</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
</maths>
<br/>
The size of the state array grows as the number of source locations S<b>1</b>, S<b>2</b>, destination locations D<b>1</b>, D<b>2</b>, and vehicles <b>6</b> grow. To effectively deal with large state spaces, quantization can reduce the number of states. The trips along the paths can be quantized so state s is not needed for every single trip. Another way to reduce the state space is the use of function approximation, rather than the use of the state array. A TD-Gammon neural network is an example in which states are effectively managed through function approximation.
</p>
<p id="p-0043" num="0042">As stated above, once the state space representation S has been created from the linear programming's schedule, learning can begin. Learning takes place through simulation. Simulation allows learning to occur much faster than it would in real-time. For example, on a 2 GHz Pentium M Processor, simulation runs approximately 5,000-30,000 times faster than real-time. Thus, the validity of learning through simulation before applying the learned policy in the real world is evident. The variation in speed occurs because simulation runs slower as the system becomes more complex.</p>
<p id="p-0044" num="0043">Reinforcement learning takes place by choosing action a each time a request is simulated and by observing the results of the action a via policy value function Q(s,a), the policy value Q and/or the reward R. In one embodiment, no rewards are given until the simulation time has elapsed, i.e., the episode is complete. In one embodiment, a negative reward is given, although other results are also possible. An equation representing this negative reward for the embodiment is shown in equation (2) below.
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>R=TDS&#x2212;TTP</i>&#x2003;&#x2003;(2)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
The negative reward R is the difference between the tons that are hauled during simulation in the episode TDS from the total tons possible TTP calculated by the linear programming. Generally, the linear programming slightly overestimates the number of tons that can be unloaded because the linear programming bases TTP on the total tons removed from source location S<b>1</b>, S<b>2</b>; in contrast, the reinforcement learning algorithm determines the total tons unloaded at destination location D<b>1</b>, D<b>2</b> during the simulations. Thus, implementing the schedule, either in real-time or through simulation deviates from the result calculated by the linear programming.
</p>
<p id="p-0045" num="0044">The reward R is then propagated back through the states visited during the episode, i.e., completed simulation run, using equation (4) that deals with time. Thus, the vehicle dispatch system <b>1</b> and method <b>30</b> learns what actions lead to the best reward. In many reinforcement learning applications, action decisions occur at fixed time intervals. A general value update equation, such as equation (3), is sufficient in applications where fixed time intervals are acceptable. However, in vehicle dispatching for uncertain environments, fixed time intervals are rare and state changes do not occur at a fixed frequency. That is, requests, action taking and decisionmaking happen continuously and at irregular intervals. The present invention advantageously factors time into the reinforcement learning (equation (4)) so that action decisions can be made and vehicles can be dispatched when needed, not at predetermined intervals. In the following equations, s&#x2032; is the state occurring after state s, and a&#x2032; is the accompanying next action. t(s) is the elapsed time in the episode given state s.
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>Q</i>(<i>s,a</i>)=<i>Q</i>(<i>s,a</i>)+&#x3b1;&#xd7;[&#x3b3;&#xd7;<i>Q</i>(<i>s&#x2032;,a</i>&#x2032;)&#x2212;<i>Q</i>(<i>s,a</i>)]&#x2003;&#x2003;(3)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>Q</i>(<i>s,a</i>)=<i>Q</i>(<i>s,a</i>)+&#x3b1;&#xd7;[&#x3b3;<sup>[t(s&#x2032;)&#x2212;t(s)]</sup><i>&#xd7;Q</i>(<i>s&#x2032;,a</i>&#x2032;)&#x2212;<i>Q</i>(<i>s,a</i>)]&#x2003;&#x2003;(4)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0046" num="0045">Thus, with equation (4), the policy value Q for action a in any given state s is represented as policy value function Q(s,a) that includes the time between states in the update.</p>
<p id="p-0047" num="0046">As can be seen from the reinforcement learning algorithm and equation (4), to determine the value Q for an existing state s and action a, the subsequent state s&#x2032; and subsequent action a&#x2032; in the episode are considered along with the current state s and action a. Furthermore, the elapsed time in the episode at the existing state t(s) and the elapsed time in the episode at the subsequent state t(s&#x2032;) are used in the policy value function Q (s,a) to determine the policy value Q.</p>
<p id="p-0048" num="0047">Thus, in the embodiment illustrated in <figref idref="DRAWINGS">FIG. 4</figref>, the step of using <b>33</b> reinforcement learning to develop the appropriate action for state(s) in the work area <b>8</b> may comprise running <b>331</b><i>a </i>simulation of the states by selecting one of possible actions within each state, thereby producing a result; assigning <b>333</b> the reward value based on the result; propagating <b>335</b> the reward value back through the simulation with reference to time between states; producing <b>337</b> the policy value function based on the propagating <b>335</b>; developing <b>339</b> the policy based on the policy value function for the state by associating the policy with the appropriate action.</p>
<p id="p-0049" num="0048">In yet another embodiment, an element of randomness may be added to the simulations performed by the reinforcement learning. The randomness in the reinforcement learning strengthens the policies &#x3c0; developed and results in more efficient and beneficial vehicle dispatching decisions. Vehicle dispatching encounters many disturbances. For example, vehicles <b>6</b> break down, roads go out of operation, source and destination locations S<b>1</b>, S<b>2</b>, D<b>1</b>, D<b>2</b> go out of operation due to breakdowns or changes in location, etc. The present invention is most advantageous in that it addresses these real-world problems during simulation. Thus, the vehicle dispatching system <b>1</b> or method <b>30</b> may develop the best policy &#x3c0; to follow for the given environmental state of the work area <b>8</b> and is well prepared for real-world events when they occur in the work area <b>8</b>.</p>
<p id="p-0050" num="0049">Specifically, reinforcement learning addresses real-world problems, i.e., disturbances, by introducing disturbances or entropy into the simulation and learning the best action to take when the disturbances or entropy occur. An example of learning from disturbances is where, during the simulation, the best or preferred action a, i.e. the action a in the state s with the (maximum) policy value Q, is not selected. That is, the reinforcement learning learns the consequences of not selecting the best action and further develops the policies &#x3c0; based on the selections. Additionally, the reinforcement learning technique may discover that selecting action a that is not the best for state s may reveal, over the course of simulation, better actions a to take for other states s. The present invention provides flexibility in the reinforcement learning method to explore numerous possibilities through simulation to arrive at the best action a for given situation or state s. Disturbances may also occur where the number of vehicles <b>6</b> operating in the work area <b>8</b> is reduced (to simulate maintenance or a breakdown of the vehicle <b>6</b>) or increased (to simulate vehicles <b>6</b> coming back online). Still other disturbances may occur where one or more source locations S<b>1</b>, S<b>2</b> or destination locations D<b>1</b>, D<b>2</b> are removed or added to simulate an area closure or reopening. The reinforcement learning technique learns from these disturbances so that the best action a is selected when such a disturbance occurs in the work area <b>8</b>.</p>
<p id="p-0051" num="0050">In another embodiment, adding a simple look-ahead search in the Q table may improve performance. The look-ahead search may be implemented to better determine the policy &#x3c0; each time a dispatch request is received and the appropriate action must be generated. The look-ahead search is performed to determine the wait time once the vehicle <b>6</b> arrives at its next destination D<b>1</b>, D<b>2</b>. The route that minimizes wait time and still meets the requirements of the schedule can be chosen.</p>
<p id="p-0052" num="0051">Having described the method <b>30</b>, a configuration for vehicle dispatch system <b>1</b> of the present invention will now be explained. In vehicle dispatch system <b>1</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>, the upper stage unit <b>10</b> performs the linear programming. The linear programming of the upper stage unit <b>10</b> uses an optimization function to maximize the total number of tons hauled. The linear programming also uses equations to account for environmental and vehicular constraints, such as path information, number of vehicles <b>6</b>, vehicle velocities and capacity, any material constraints, time limitations, etc. The processor <b>10</b><i>a </i>of the upper stage unit <b>10</b> performs the processing of the linear programming. In one embodiment, the processor <b>10</b><i>a </i>receives the above-mentioned optimization function and equations for the constraints from the interface communication unit <b>2</b>. In the configuration for the vehicle dispatch system <b>1</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>, the lower stage unit <b>12</b> implements the reinforcement learning method. In one embodiment, the state array having the states s of the state representation S is stored in a memory or storage unit, such as a first storage unit <b>12</b><i>b</i>. The Q table is stored in another memory or storage unit, such as a second storage unit <b>12</b><i>c</i>. The first and second storage units <b>12</b><i>b </i>and <b>12</b><i>c </i>are linked to each other and are both linked to the control unit <b>12</b><i>a</i>. Other arrangements for storage and control units are possible. In implementing method <b>30</b>, the control unit <b>12</b><i>a </i>collects the necessary information from the state array in the first storage unit <b>12</b><i>b</i>, processes the information via the simulation of the reinforcement learning, and delivers the results to the Q table stored in the second storage unit <b>12</b><i>c</i>. In addition, when an environmental state exists in the work area <b>8</b> and vehicle <b>6</b> needs instructions from the interface communication unit <b>2</b>, the interface communication unit <b>2</b> instructs or requests the control unit <b>12</b><i>a </i>to provide the appropriate action a for the state s. Specifically, the interface communication unit <b>2</b> and the lower stage unit <b>12</b> collaborate to associate the particular environmental state of the work area <b>8</b> with the equivalent state s in the state array in the first storage unit <b>12</b><i>b</i>. The control unit <b>12</b><i>a </i>calls the policy &#x3c0; associated with the (maximum) policy value Q for the state s and action a found in the second storage unit <b>12</b><i>c</i>. Once obtained by the control unit <b>12</b><i>a</i>, the interface communication unit <b>2</b> is provided with the appropriate (e.g., preferred) action a associated with the policy &#x3c0; for the state s occurring in the work area <b>8</b>. The interface communication unit <b>2</b> can then wirelessly communicate the appropriate action a to the vehicle <b>6</b> in the work area <b>8</b> so the vehicle <b>6</b> may meet the schedule to achieve the goal. In one embodiment, the operator in the vehicle <b>6</b> receives the appropriate action a as a dispatch and operates the vehicle <b>6</b> accordingly. In another embodiment in which the vehicle <b>6</b> is autonomous or substantially autonomous, the interface communication unit <b>2</b> instructs/controls the vehicle <b>6</b> to perform the appropriate action a.</p>
<p id="p-0053" num="0052">The method <b>30</b> can be used to advantage when illustrated in the example shown in <figref idref="DRAWINGS">FIG. 2</figref>. Work area <b>8</b> has two source locations S<b>1</b>, S<b>2</b> and two destination locations D<b>1</b>, D<b>2</b> and the option of using up to five vehicles <b>6</b>. It takes 2.5 minutes to load at source location S<b>1</b> and 1.8 minutes to load at source location S<b>2</b>. It takes three minutes to unload at destination location D<b>1</b> and four minutes at destination location D<b>2</b>. Loads from source location S<b>1</b> can only be unloaded at destination location D<b>2</b> because they are of the same material type. The same material constraint applies for loads from S<b>2</b> as they are only able to be unloaded at D<b>1</b>. In this example, the linear programming selected the use of five vehicles <b>6</b>, all of the same class and having a haul capacity of 100 tons and an average velocity of 10 m/s. However, in another embodiment, the linear programming could select vehicles <b>6</b> from more than one class wherein the classes may be differentiated based on haul capacities, velocities or other factors defined by the particular work environment.</p>
<p id="p-0054" num="0053">Simulations of the reinforcement learning were run with episode lengths of one, two, and three hours. When the results (i.e., tons hauled), of each of a local search method and the reinforcement learning aspect of method <b>30</b> were averaged, the results were consistent over the different episode lengths. Thus, regardless of the episode length, it was demonstrated that the reinforcement learning's ratio of performance, i.e., the ratio of reinforcement learning performance over the local search method performance, over the local search method was considerable.</p>
<p id="p-0055" num="0054">Tests were also performed to evaluate disturbances in the reinforcement learning's simulation represented as an entropy value. The larger the entropy value, the more disturbances occur. The simulation episode had a length of one hour with different entropy values of 0, 5, 10, 15, and 20. The results showed that even with disturbances, the reinforcement learning still performed better, i.e., more tons hauled, than the local search method. Since linear programming takes place before simulation episodes begin, linear programming cannot account for disturbances in the system.</p>
<p id="p-0056" num="0055">A further advantage of the present invention is that the reinforcement learning, and therefore the learning of the best policies &#x3c0;, can take place offline. The Monte Carlo reinforcement learning method was used in the above example. Similar results (tons hauled) occurred with policies &#x3c0; that were learned both with disturbances and without. Thus, the reinforcement learning can take place offline and disturbances can be simulated with success. This is most advantageous because reinforcement learning and therefore policy learning can be done 5,000-30,000 times faster than a real-time/real-world or non-simulation method.</p>
<p id="p-0057" num="0056">The present invention provides many advantages over commonly used vehicle dispatch systems and methods. The present invention balances the trade-offs between a great many factors, such as percentage constraints on materials, as well as minimum and maximum capacity constraints at source and destination locations. Furthermore, the present invention adapts quickly to changes in work area <b>8</b> such as a source or destination location S<b>1</b>, S<b>2</b>, D<b>1</b> or D<b>2</b> being closed or reopened. Most advantageously, when implementing reinforcement learning, the vehicle dispatch system <b>1</b> and method <b>30</b> of the present invention are not constrained by fixed time intervals. The present invention implements policies for addressing major environmental changes, such as changes in source location S<b>1</b>, S<b>2</b>, vehicle <b>6</b> break downs or repairs. The reinforcement learning technique also can factor in vehicles <b>6</b> coming from different locations that affect wait times. In mining, information needs to be updated constantly because continuous vehicle routing/dispatching environments are dynamic. Thus, the present invention provides for continuously updating policies and the actions associated with the policies via simulation and reward assignments.</p>
<p id="p-0058" num="0057">The present invention optimizes multiple parameters by balancing those which may be in conflict. Optimization parameters, for example, may include flow rates, tons/hour, blending requirements (hauling a certain percentage of each material type hauled, not merely maximizing the total amount of material hauled), shortest path of travel, minimal number of trucks and source locations, minimal source location wait times, minimal destination wait times, minimal vehicle wait times, etc.</p>
<p id="p-0059" num="0058">Since the present invention achieves flexibility, the invention may be adapted to use in many diverse applications such as military maneuvers (converge on location, exploration, mine disposal, recognizance), agriculture (dispatch multiple grain carts, multiple tractors, etc.), transportation (dispatching taxi cabs, buses, trains, subways, airlines, etc.), dispatching and fleet management of police and emergency vehicles, car rentals, open-pit mining, underground mining, postal services, general traffic control, whole systems (pit-to-port), freight systems, road construction, commercial or government vehicle fleets, cleaning of buildings (windows, floors, etc.), airport carts, NASA applications, and map building.</p>
<p id="p-0060" num="0059">The vehicle dispatch system <b>1</b> and method <b>30</b> are also designed so that they can be easily adapted and modified for different work environments (e.g. work area <b>8</b>). The state representation S is set up in such a way that it can handle many different types of vehicle routing problems. The system <b>1</b> and method of the present invention can work with many vehicle routing problems. However, the present invention should not be viewed as being limited to vehicle dispatching. It will be apparent to one of skill in the art after becoming familiar with the teachings of the present invention that, by providing a different set of equations and optimization parameters to the linear programming, the present invention can be used to solve other problems not related to vehicle dispatching, as long as the problem deals with scheduling. The novel systems and methods of the present invention comprising linear programming and reinforcement learning can be used for any problem given the proper constraints, optimization function and/or schedule as input. Thus, it is possible that the reinforcement learning and linear programming of the present invention can be applied to other problems as long as the output of the linear programming can be adapted as the state representation S for the reinforcement learning.</p>
<p id="p-0061" num="0060">In understanding the scope of the present invention, the term &#x201c;comprising&#x201d; and its derivatives, as used herein, are intended to be open-ended terms that specify the presence of the stated features, elements, components, groups, and/or steps, but do not exclude the presence of other unstated features, elements, components, groups, and/or steps. The foregoing also applies to words having similar meanings such as the terms, &#x201c;including&#x201d;, &#x201c;having&#x201d; and their derivatives. The terms of degree such as &#x201c;substantially&#x201d;, &#x201c;about&#x201d; and &#x201c;approximate&#x201d; as used herein mean a reasonable amount of deviation of the modified term such that the end result is not significantly changed. For example, these terms can be construed as including a deviation of at least &#xb1;5% of the modified term if this deviation would not negate the meaning of the word it modifies.</p>
<p id="p-0062" num="0061">While only selected embodiments have been chosen to illustrate the present invention, it will be apparent to those skilled in the art from this disclosure that various changes and modifications can be made herein without departing from the scope of the invention as defined in the appended claims. For example, the size, shape, location or orientation of the various components disclosed herein can be changed as needed and/or desired. Components or units that are shown directly connected to each other can have intermediate structures disposed between them. The functions of two or more elements or units can be performed by one, and vice versa. The structures, steps and functions of one embodiment can be adopted in another embodiment. It is not necessary for all advantages to be present in a particular embodiment at the same time. Thus, the foregoing descriptions of the embodiments according to the present invention are provided for illustration only, and not for the purpose of limiting the invention as defined by the appended claims and their equivalents.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-math idrefs="MATH-US-00001" nb-file="US08626565-20140107-M00001.NB">
<img id="EMI-M00001" he="8.47mm" wi="76.20mm" file="US08626565-20140107-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method of optimizing vehicle dispatching in a dynamic work area resulting from a linear program comprising:
<claim-text>inputting a vehicle dispatching schedule for a plurality of vehicles as a state representation into a reinforcement learning algorithm, the state representation having a plurality of states, each state having a plurality of possible actions;</claim-text>
<claim-text>using a computer, the computer comprising computer readable media programmed with a set of instructions causing the computer to perform the steps of:
<claim-text>running a simulation of the states by selecting one of the possible actions within each state, one running of the simulation being an episode and producing a result based on a proximity to optimum performance of the plurality of vehicles;</claim-text>
<claim-text>assigning a reward value based on the result;</claim-text>
<claim-text>propagating the reward value back through the simulation with reference to time between states;</claim-text>
<claim-text>for each action in each state within the episode, determining a policy value based on at least one of the reward value, a subsequent state, a subsequent action, elapsed time in the episode at the state and elapsed time in the episode at the subsequent state;</claim-text>
<claim-text>developing a policy for each state in which the action in each state that produces a maximum policy value is a preferred action;</claim-text>
</claim-text>
<claim-text>dispatching the preferred action to the plurality of vehicles in the dynamic work area; and</claim-text>
<claim-text>causing the plurality of vehicles to perform in accordance with the preferred action.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the dispatching the preferred action to the plurality of vehicles includes dispatching the preferred action for the state that has characteristics resembling those of the dynamic work area.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the characteristics include locations of the plurality of vehicles in the dynamic work area, capacity at a source location, or capacity at a destination location.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the reward value is based on the difference between tons hauled during the episode and the total tons possible declared by the linear program.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the dispatching the preferred action occurs continuously.</claim-text>
</claim>
</claims>
</us-patent-grant>
