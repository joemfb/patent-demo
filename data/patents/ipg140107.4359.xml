<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625431-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625431</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13226535</doc-number>
<date>20110907</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>149</us-term-extension>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>11</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>370236</main-classification>
<further-classification>370235</further-classification>
<further-classification>370230</further-classification>
<further-classification>370231</further-classification>
<further-classification>3702411</further-classification>
<further-classification>370242</further-classification>
</classification-national>
<invention-title id="d2e55">Notifying network applications of receive overflow conditions</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6041053</doc-number>
<kind>A</kind>
<name>Douceur et al.</name>
<date>20000300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6070219</doc-number>
<kind>A</kind>
<name>McAlpine et al.</name>
<date>20000500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6163539</doc-number>
<kind>A</kind>
<name>Alexander et al.</name>
<date>20001200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6477643</doc-number>
<kind>B1</kind>
<name>Vorbach et al.</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6600721</doc-number>
<kind>B2</kind>
<name>Edholm</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6714960</doc-number>
<kind>B1</kind>
<name>Bitar et al.</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6732182</doc-number>
<kind>B1</kind>
<name>Beverly, IV</name>
<date>20040500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709230</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6757731</doc-number>
<kind>B1</kind>
<name>Barnes et al.</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6831893</doc-number>
<kind>B1</kind>
<name>Ben Nun et al.</name>
<date>20041200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6839748</doc-number>
<kind>B1</kind>
<name>Allavarpu et al.</name>
<date>20050100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709223</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6859841</doc-number>
<kind>B2</kind>
<name>Narad et al.</name>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>6944168</doc-number>
<kind>B2</kind>
<name>Paatela et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>7046665</doc-number>
<kind>B1</kind>
<name>Walrand et al.</name>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>7177311</doc-number>
<kind>B1</kind>
<name>Hussain et al.</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>7260102</doc-number>
<kind>B2</kind>
<name>Mehrvar et al.</name>
<date>20070800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>7313142</doc-number>
<kind>B2</kind>
<name>Matsuo et al.</name>
<date>20071200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2003/0037154</doc-number>
<kind>A1</kind>
<name>Poggio et al.</name>
<date>20030200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2005/0135243</doc-number>
<kind>A1</kind>
<name>Lee et al.</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2005/0138620</doc-number>
<kind>A1</kind>
<name>Lewites</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2006/0041667</doc-number>
<kind>A1</kind>
<name>Ahn et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2006/0070066</doc-number>
<kind>A1</kind>
<name>Grobman</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>2006/0140578</doc-number>
<kind>A1</kind>
<name>Ohnishi</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>386 47</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>2006/0174324</doc-number>
<kind>A1</kind>
<name>Zur et al.</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>2006/0182031</doc-number>
<kind>A1</kind>
<name>Tran</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370235</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00025">
<othercit>Dovrolis, C., Thayer, B. And Ramanathan, P: &#x201c;HIP: Hybrid Interrupt&#x2014;Polling for the Network Interface&#x201d;, ACM SIGOPS Operating Systems Review, vol. 35, Iss. 4, Oct. 2001, (11 Pages).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00026">
<othercit>&#x201c;Solaris Networking&#x2014;The Magic Revealed&#x201d;; Sunay Tripathi's Solaris Networking Weblog; Nov. 14, 2005, pp. 1-22 (22 pages).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>14</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>370235</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370229</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370231</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370236</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370241</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>3702411</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370242</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709235</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>9</number-of-drawing-sheets>
<number-of-figures>9</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>11490821</doc-number>
<date>20060720</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>8036127</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13226535</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120026885</doc-number>
<kind>A1</kind>
<date>20120202</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Droux</last-name>
<first-name>Nicolas G.</first-name>
<address>
<city>Rio Rancho</city>
<state>NM</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Belgaied</last-name>
<first-name>Kais</first-name>
<address>
<city>Sunnyvale</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Tripathi</last-name>
<first-name>Sunay</first-name>
<address>
<city>Menlo Park</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Droux</last-name>
<first-name>Nicolas G.</first-name>
<address>
<city>Rio Rancho</city>
<state>NM</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Belgaied</last-name>
<first-name>Kais</first-name>
<address>
<city>Sunnyvale</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Tripathi</last-name>
<first-name>Sunay</first-name>
<address>
<city>Menlo Park</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Osha Liang LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Oracle America, Inc.</orgname>
<role>02</role>
<address>
<city>Redwood Shores</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Mian</last-name>
<first-name>Omer</first-name>
<department>2461</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method for notifying a packet destination that includes receiving a packet by a network interface card (NIC), where the packet destination is a destination of the packet, classifying the packet, forwarding the packet to one of a plurality of receive rings on the NIC, determining whether the one of the plurality of receive rings comprises space to store the packet, dropping the packet if the receive ring does not comprise the space to store the packet, and sending a notification message to the packet destination, where the notification message indicates that the packet was dropped by the receive ring.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="209.30mm" wi="179.83mm" file="US08625431-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="234.95mm" wi="199.31mm" orientation="landscape" file="US08625431-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="201.68mm" wi="143.68mm" file="US08625431-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="228.01mm" wi="178.90mm" file="US08625431-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="182.54mm" wi="190.42mm" file="US08625431-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="220.13mm" wi="137.75mm" file="US08625431-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="222.08mm" wi="179.58mm" orientation="landscape" file="US08625431-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="204.64mm" wi="175.94mm" orientation="landscape" file="US08625431-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="195.41mm" wi="188.81mm" orientation="landscape" file="US08625431-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="206.93mm" wi="160.44mm" file="US08625431-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 11/490,821, filed on Jul. 20, 2006, and assigned to assignee of the present application. This application claims benefit of U.S. patent application Ser. No. 11/490,821 under 35 U.S.C. &#xa7;120. U.S. patent application Ser. No. 11/490,821 is hereby incorporated in its entirety.</p>
<p id="p-0003" num="0002">The present application contains subject matter that may be related to the subject matter in the following U.S. applications filed on Apr. 22, 2005, and assigned to the assignee of the present application: &#x201c;Method and Apparatus for Managing and Accounting for Bandwidth Utilization Within A Computing System&#x201d; with U.S. application Ser. No. 11/112,367; &#x201c;Method and Apparatus for Consolidating Available Computing Resources on Different Computing Devices&#x201d; with U.S. application Ser. No. 11/112,368; &#x201c;Assigning Higher Priority to Transactions Based on Subscription Level&#x201d; with U.S. application Ser. No. 11/112,947; &#x201c;Method and Apparatus for Dynamically Isolating Affected Services Under Denial of Service Attack&#x201d; with U.S. application Ser. No. 11/112,158; &#x201c;Method and Apparatus for Improving User Experience for Legitimate Traffic of a Service Impacted by Denial of Service Attack&#x201d; with U.S. application Ser. No. 11/112,629; &#x201c;Method and Apparatus for Limiting Denial of Service Attack by Limiting Traffic for Hosts&#x201d; with U.S. application Ser. No. 11/112,328; &#x201c;Hardware-Based Network Interface Per-Ring Resource Accounting&#x201d; with U.S. application Ser. No. 11/112,222; &#x201c;Dynamic Hardware Classification Engine Updating for a Network Interface&#x201d; with U.S. application Ser. No. 11/112,934; &#x201c;Network Interface Card Resource Mapping to Virtual Network Interface Cards&#x201d; with U.S. application Ser. No. 11/112,063; &#x201c;Network Interface Decryption and Classification Technique&#x201d; with U.S. application Ser. No. 11/112,436; &#x201c;Method and Apparatus for Enforcing Resource Utilization of a Container&#x201d; with U.S. application Ser. No. 11/112,910; &#x201c;Method and Apparatus for Enforcing Packet Destination Specific Priority Using Threads&#x201d; with U.S. application Ser. No. 11/112,584; &#x201c;Method and Apparatus for Processing Network Traffic Associated with Specific Protocols&#x201d; with U.S. application Ser. No. 11/112,228.</p>
<p id="p-0004" num="0003">The present application contains subject matter that may be related to the subject matter in the following U.S. applications filed on Oct. 21, 2005, and assigned to the assignee of the present application: &#x201c;Method and Apparatus for Defending Against Denial of Service Attacks&#x201d; with U.S. application Ser. No. 11/255,366; &#x201c;Router Based Defense Against Denial of Service Attacks Using Dynamic Feedback from Attacked Host&#x201d; with U.S. application Ser. No. 11/256,254; and &#x201c;Method and Apparatus for Monitoring Packets at High Data Rates&#x201d; with U.S. application Ser. No. 11/226,790.</p>
<p id="p-0005" num="0004">The present application contains subject matter that may be related to the subject matter in the following U.S. applications filed on Jun. 30, 2006, and assigned to the assignee of the present application: &#x201c;Network Interface Card Virtualization Based On Hardware Resources and Software Rings&#x201d; with U.S. application Ser. No. 11/479,046; &#x201c;Method and System for Controlling Virtual Machine Bandwidth&#x201d; with U.S. application Ser. No. 11/480,000; &#x201c;Virtual Switch&#x201d; with U.S. application Ser. No. 11/480,261; &#x201c;System and Method for Virtual Network Interface Cards Based on Internet Protocol Addresses&#x201d; with U.S. application Ser. No. 11/479,997; &#x201c;Virtual Network Interface Card Loopback Fastpath&#x201d; with U.S. application Ser. No. 11/479,946; &#x201c;Bridging Network Components&#x201d; with U.S. application Ser. No. 11/479,948; &#x201c;Reflecting the Bandwidth Assigned to a Virtual Network Interface Card Through Its Link Speed&#x201d; with U.S. application Ser. No. 11/479,161; &#x201c;Method and Apparatus for Containing a Denial of Service Attack Using Hardware Resources on a Virtual Network Interface Card&#x201d; with U.S. application Ser. No. 11/480,100; &#x201c;Virtual Network Interface Cards with VLAN Functionality&#x201d; with U.S. application Ser. No. 11/479,998; &#x201c;Method and Apparatus for Dynamic Assignment of Network Interface Card Resources&#x201d; with U.S. application Ser. No. 11/479,817; &#x201c;Generalized Serialization Queue Framework for Protocol Processing&#x201d; with U.S. application Ser. No. 11/479,947; &#x201c;Serialization Queue Framework for Transmitting Packets&#x201d; with U.S. application Ser. No. 11/479,143.</p>
<p id="p-0006" num="0005">The present application contains subject matter that may be related to the subject matter in the following U.S. applications filed on Jul. 20, 2006, and assigned to the assignee of the present application: &#x201c;Low Impact Network Debugging&#x201d; with U.S. application Ser. No. 11/489,926; &#x201c;Reflecting Bandwidth and Priority in Network Attached Storage I/O&#x201d; with U.S. application Ser. No. 11/489,936; &#x201c;Priority and Bandwidth Specification at Mount Time of NAS Device Volume&#x201d; with U.S. application Ser. No. 11/489,934; &#x201c;Host Operating System Bypass for Packets Destined for a Virtual Machine&#x201d; with U.S. application Ser. No. 11/489,943; &#x201c;Multi-Level Packet Classification&#x201d; with U.S. application Ser. No. 11/490,745; &#x201c;Method and System for Automatically Reflecting Hardware Resource Allocation Modifications&#x201d; with U.S. application Ser. No. 11/490,582; &#x201c;Multiple Virtual Network Stack Instances Using Virtual Network Interface Cards&#x201d; with U.S. application Ser. No. 11/489,942; &#x201c;Method and System for Network Configuration for Containers&#x201d; with U.S. application Ser. No. 11/490,479; &#x201c;Network Memory Pools for Packet Destinations and Virtual Machines&#x201d; with U.S. application Ser. No. 11/490,486; &#x201c;Method and System for Network Configuration for Virtual Machines&#x201d; with U.S. application Ser. No. 11/489,923; &#x201c;Multiple Virtual Network Stack Instances&#x201d; with U.S. application Ser. No. 11/489,929; and &#x201c;Shared and Separate Network Stack Instances&#x201d; with U.S. application Ser. No. 11/489,933.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0007" num="0006">Network traffic is transmitted over a network, such as the Internet, from a sending system (e.g., a computer system) to a receiving system (e.g., a computer system) via a physical network interface card (NIC). The NIC is a piece of hardware found in a typical computer system that includes functionality to send and receive network traffic. Typically, network traffic is transmitted in the form of packets, where each packet includes a header and a payload. The header contains information regarding the source address, destination address, size, transport protocol used to transmit the packet, and various other identification information associated with the packet. The payload contains the actual data to be transmitted from the network to the receiving system.</p>
<p id="p-0008" num="0007">Each of the packets sent between the sending system and receiving system is typically associated with a connection. The connection ensures that packets from a given process on the sending system reach the appropriate process on the receiving system. Packets received by the receiving system (via a NIC associated with the receiving system) are analyzed by a classifier to determine the connection associated with the packet.</p>
<p id="p-0009" num="0008">Typically, the classifier includes a connection data structure that includes information about active connections on the receiving system. The connection data structure may include the following information about each active connection: (i) the queue associated with the connection; and (ii) information necessary to process the packets on the queue associated with the connection. Depending on the implementation, the connection data structure may include additional information about each active connection. Such queues are typically implemented as first-in first-out (FIFO) queues and are bound to a specific central processing unit (CPU) on the receiving computer system. Thus, all packets for a given connection are placed in the same queue and are processed by the same CPU. In addition, each queue is typically configured to support multiple connections.</p>
<p id="p-0010" num="0009">Once the classifier determines the connection associated with the packets, the packets are sent to a temporary data structure (e.g., a receive ring on the NIC) and an interrupt is issued to the CPU associated with the queue. In response to the interrupt, a thread associated with the CPU (to which the serialization queue is bound) retrieves the packets from the temporary data structure and places them in the appropriate queue. Once packets are placed in the queue, those packets are processed in due course. In some implementations, the queues are implemented such that only one thread is allowed to access a given queue at any given time.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0011" num="0010">In general, in one aspect, the invention relates to a method for notifying a packet destination. The method comprises receiving a packet by a network interface card (NIC), wherein the packet destination is a destination of the packet, classifying the packet, forwarding the packet to one of a plurality of receive rings on the NIC, determining whether the one of the plurality of receive rings comprises space to store the packet, dropping the packet if the receive ring does not comprise the space to store the packet, and sending a notification message to the packet destination, wherein the notification message indicates that the packet was dropped by the receive ring.</p>
<p id="p-0012" num="0011">In general, in one aspect, the invention relates to a method for notifying a packet destination. The method comprises receiving a packet at a level in a networking path, wherein the level in the networking path comprises one selected from a group consisting of a receive ring, a virtual network interface card (VNIC), an Internet Protocol (IP) layer and a transport layer, determining whether the level can store the packet, dropping the packet if the level cannot store the packet, and sending a notification message to the packet destination, wherein the notification message indicates that the packet was dropped by the level, wherein the networking path is associated with the packet destination.</p>
<p id="p-0013" num="0012">In general, in one aspect, the invention relates to a system. The system comprises a network interface card (NIC), comprising a plurality of receive rings, a hardware classifier, wherein the NIC is configured to: receive a packet by a network interface card (NIC), wherein a packet destination is a destination of the packet, classify the packet by the hardware classifier, forward the packet to one of the plurality of receive rings, determine whether the one of the plurality of receive rings comprises space to store the packet, drop the packet if the receive ring does not comprise space to store the packet, and send a notification message to the packet destination, wherein the notification message indicates that the packet was dropped by the receive ring, and a host, operatively connected to the NIC, comprising the packet destination, wherein the host is configured to forward the notification message to the packet destination.</p>
<p id="p-0014" num="0013">Other aspects of the invention will be apparent from the following description and the appended claims.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 1</figref> shows a system in accordance with one embodiment of the invention.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 2</figref> shows a virtual network stack in accordance with one embodiment of the invention.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 3</figref> shows a notification framework in accordance with one embodiment of the invention.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIGS. 4-7</figref> show flow charts in accordance with one embodiment of the invention.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 8</figref> shows an example in accordance with one embodiment of the invention.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 9</figref> shows a computer system in accordance with one embodiment of the invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0021" num="0020">Specific embodiments of the invention will now be described in detail with reference to the accompanying figures. Like elements in the various figures are denoted by like reference numerals for consistency.</p>
<p id="p-0022" num="0021">In the following detailed description of embodiments of the invention, numerous specific details are set forth in order to provide a more thorough understanding of the invention. However, it will be apparent to one of ordinary skill in the art that the invention may be practiced without these specific details. In other instances, well-known features have not been described in detail to avoid unnecessarily complicating the description.</p>
<p id="p-0023" num="0022">In general, embodiments of the invention relate to a method and system for notifying an application that packets destined for the application have been dropped. More specifically, in one or more embodiments of the invention, the application may register to receive notification messages from one or more levels in a networking path (e.g., receive ring, virtual network interface card (VNIC), Internet Protocol (IP) layer, transport layer) associated with the application. Further, the application may register to obtain information about dropped packets associated with a specific connection or socket.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 1</figref> shows a system in accordance with one embodiment of the invention. As shown in <figref idref="DRAWINGS">FIG. 1</figref>, the system includes a host (<b>100</b>) operatively connected to a network interface card (NIC) (<b>102</b>). The NIC (<b>102</b>) provides an interface between the host (<b>100</b>) and a network (not shown) (e.g., a local area network, a wide area network, a wireless network, etc.). More specifically, the NIC (<b>102</b>) includes a network interface (NI) (i.e., the hardware on the NIC used to interface with the network) (not shown). For example, the NI may correspond to an RJ-45 connector, a wireless antenna, etc. The packets received by the NI are then sent to other components on the NIC (<b>102</b>) for processing. In one embodiment of the invention, the NIC (<b>102</b>) includes a hardware classifier (<b>104</b>) and one or more hardware receive rings (HRRs) (<b>106</b>A, <b>106</b>B, <b>106</b>C). In one embodiment of the invention, the HRRs (<b>106</b>A, <b>106</b>B, <b>106</b>C) correspond to portions of memory within the NIC (<b>102</b>) used to temporarily store the received packets.</p>
<p id="p-0025" num="0024">In one embodiment of the invention, the hardware classifier (<b>104</b>) is configured to analyze the incoming network traffic, typically in the form of packets, received from the network (not shown). The hardware classifier (<b>104</b>) may be implemented entirely in hardware (i.e., the hardware classifier (<b>104</b>) may be a separate microprocessor embedded on the NIC (<b>102</b>)). Alternatively, the hardware classifier (<b>104</b>) may be implemented in software stored in memory (e.g., firmware, etc.) on the NIC (<b>102</b>) and executed by a microprocessor on the NIC (<b>102</b>).</p>
<p id="p-0026" num="0025">In one embodiment of the invention, the hardware classifier (<b>104</b>) is configured to classify packets using one or more of the follow criteria: (i) source Media Access Control (MAC) address, (ii) destination MAC address, (iii) source Internet Protocol (IP) address, (iv) destination IP address, (v) source port number, (vi) destination port number, (vii) protocol-type (e.g., TCP, UDP, etc.). In one embodiment of the invention, the aforementioned classification criteria are obtained from the header of the packet. Said another way, the hardware classifier (<b>104</b>) uses the header of the packet to classify the packet.</p>
<p id="p-0027" num="0026">In one embodiment of the invention, the host (<b>100</b>) may include the following components: a device driver (<b>107</b>), a software ring (<b>108</b>), one or more virtual network interface cards (VNICs) (<b>114</b>A, <b>114</b>B, <b>114</b>C, <b>114</b>D), one or more virtual network stacks (VNSs) (<b>116</b>A, <b>116</b>B, <b>116</b>C, <b>116</b>D), and one or more packet destinations (<b>118</b>). Each of the aforementioned components is described below.</p>
<p id="p-0028" num="0027">In one embodiment of the invention, the device driver (<b>107</b>) provides an interface between the HRRs (<b>106</b>A, <b>106</b>B, <b>106</b>C) and the host (<b>100</b>). More specifically, the device driver (<b>107</b>) exposes the HRRs (<b>106</b>A, <b>106</b>B, <b>106</b>C) to the host (<b>100</b>) such that the host (<b>100</b>) (or, more specifically, a process executing in the host (<b>100</b>)) may obtain packets from the HRRs (<b>106</b>A, <b>106</b>B, <b>106</b>C).</p>
<p id="p-0029" num="0028">In one embodiment of the invention, the software ring (<b>108</b>) includes a software classifier (<b>110</b>) and a number of software receive rings (SRR) (e.g., SRR A (<b>112</b>A), SRR B (<b>112</b>B)). In one embodiment of the invention, the software classifier (<b>110</b>) has the same functionality as the hardware classifier (<b>104</b>). However, instead of sending the classified packets to a HRR (<b>106</b>A, <b>106</b>B, <b>106</b>C), the software classifier (<b>110</b>) forwards classified packets to one of the SRRs (<b>112</b>A, <b>112</b>B). The SRRs (<b>112</b>A, <b>112</b>B) are configured to temporarily store the received packets after being classified by the software classifier (<b>110</b>). In one embodiment of the invention, the software ring (<b>108</b>) resides in a Media Access Control (MAC) layer (not shown) of the host (<b>100</b>).</p>
<p id="p-0030" num="0029">In one embodiment of the invention, each of the virtual network interface cards (VNICs) (<b>114</b>A, <b>114</b>B, <b>114</b>C, <b>114</b>D) is associated with either a SRR (<b>112</b>A, <b>112</b>B) or a HRR (<b>106</b>A, <b>106</b>B, <b>106</b>C). The VNICs (<b>114</b>A, <b>114</b>B, <b>114</b>C, <b>114</b>D) provide an abstraction layer between the NIC (<b>102</b>) and the various packet destinations (<b>118</b>) executing on the host (<b>100</b>). More specifically, each VNIC (<b>114</b>A, <b>114</b>B, <b>114</b>C, <b>114</b>D) operates like a NIC (<b>100</b>). For example, in one embodiment of the invention, each VNIC (<b>114</b>A, <b>114</b>B, <b>114</b>C, <b>114</b>D) is associated with one or more Internet Protocol (IP) addresses, one or more Media Access Control (MAC) address, optionally, one or more ports, and, is optionally configured to handle one or more protocol types. Thus, while the host (<b>100</b>) may be operatively connected to a single NIC (<b>102</b>), packet destinations (<b>118</b>) executing on the host (<b>100</b>) operate as if the host (<b>100</b>) is bound to multiple NICs. In one embodiment of the invention, the VNICs (<b>114</b>A, <b>114</b>B, <b>114</b>C, <b>114</b>D) reside in a Media Access Control (MAC) layer of the host (<b>100</b>).</p>
<p id="p-0031" num="0030">Each of the VNICs (<b>114</b>A, <b>114</b>B, <b>114</b>C, <b>114</b>D) is operatively connected to a corresponding virtual network stack (VNS) (<b>116</b>A, <b>116</b>B, <b>116</b>C, <b>116</b>D). In one embodiment of the invention, each VNS (<b>116</b>A, <b>116</b>B, <b>116</b>C, <b>116</b>D) includes functionality to process packets in accordance with various protocols used to send and receive packets (e.g., Transmission Communication Protocol (TCP), Internet Protocol (IP), User Datagram Protocol (UDP), etc.). Further, each VNS (<b>116</b>A, <b>116</b>B, <b>116</b>C, <b>116</b>D) may also include functionality, as needed, to perform additional processing on the incoming and outgoing packets. This additional processing may include, but is not limited to, cryptographic processing, firewall routing, etc.</p>
<p id="p-0032" num="0031">In one embodiment of the invention, each VNS (<b>116</b>A, <b>116</b>B, <b>116</b>C, <b>116</b>D) includes network layer and transport layer functionality. In one embodiment of the invention, network layer functionality corresponds to functionality to manage packet addressing and delivery on a network (e.g., functionality to support IP, Address Resolution Protocol (ARP), Internet Control Message Protocol, etc.). In one embodiment of the invention, transport layer functionality corresponds to functionality to manage the transfer of packets on the network (e.g., functionality to support TCP, UDP, Stream Control Transmission Protocol (SCTP), etc.). The structure and functionality of the VNSs (<b>116</b>A, <b>116</b>B, <b>116</b>C, <b>116</b>D) is discussed in <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="p-0033" num="0032">As discussed above, the host (<b>100</b>) includes one or more packet destinations (<b>118</b>). In one embodiment of the invention, the packet destination(s) (<b>118</b>) correspond to any process (or group of processes) executing on the host that is configured to send and/or receive network traffic. Further, the packet destination(s) (<b>118</b>) does not include an internal network stack (i.e., there is no network stack within the packet destination(s)).</p>
<p id="p-0034" num="0033">Examples of packet destinations (<b>118</b>) include, but are not limited to containers, services (e.g., web server), etc. As shown in <figref idref="DRAWINGS">FIG. 1</figref>, each of the VNSs (<b>116</b>A, <b>116</b>B, <b>116</b>C, <b>116</b>D) is associated with a packet destination (<b>118</b>). In one embodiment of the invention, each packet destination (<b>118</b>) is associated with a single VNS (<b>116</b>A, <b>116</b>B, <b>116</b>C, <b>116</b>D). Alternatively, each packet destination is associated with one or more VNSs (<b>116</b>A, <b>116</b>B, <b>116</b>C, <b>116</b>D).</p>
<p id="p-0035" num="0034">In one embodiment of the invention, each VNS (<b>116</b>A, <b>116</b>B, <b>116</b>C, <b>116</b>D) is associated with a bandwidth allocation. Those skilled in the art will appreciate that if there is only one VNS (<b>116</b>A, <b>116</b>B, <b>116</b>C, <b>116</b>D) bound to the packet destination (<b>118</b>), then the bandwidth allocation of the VNS (<b>116</b>A, <b>116</b>B, <b>116</b>C, <b>116</b>D) corresponds to the bandwidth allocated to the packet destination (<b>118</b>). In one embodiment of the invention, the bandwidth allocation corresponds to the number of packets the packet destination (<b>118</b>) may receive in a given time interval (e.g., megabytes per seconds). The bandwidth allocation for a given packet destination (<b>118</b>) is enforced by the VNS (<b>116</b>A, <b>116</b>B, <b>116</b>C, <b>116</b>D) operating in polling mode (discussed in <figref idref="DRAWINGS">FIG. 6</figref>).</p>
<p id="p-0036" num="0035">In one embodiment of the invention, the VNIC (<b>114</b>A, <b>114</b>B, <b>114</b>C, <b>114</b>D) may be bound to a virtual machine (not shown) (e.g., Xen Domain) instead of a packet destination (<b>118</b>). In such cases, the VNIC (<b>114</b>A, <b>114</b>B, <b>114</b>C, <b>114</b>D) is bound to an interface (e.g., a Xen interface), where the interface enables the VNIC (<b>114</b>A, <b>114</b>B, <b>114</b>C, <b>114</b>D) to communicate to with the virtual machine In one embodiment of the invention, the aforementioned virtual machine includes its own network stack and its own operating system (OS) instance, which may be different than the OS executing on the host.</p>
<p id="p-0037" num="0036">In one embodiment of the invention, each virtual machine is associated with its own MAC address and IP address (which may be static or obtained using Dynamic Host Configuration Protocol (DHCP)). Further, the VNIC associated with the virtual machine includes the same MAC address and IP address as virtual machine with which it is associated.</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 2</figref> shows a virtual network stack (VNS) in accordance with one embodiment of the invention. In one embodiment of the invention, the VNS (<b>200</b>) includes an Internet Protocol (IP) layer (<b>202</b>), an inbound virtual serialization queue (VSQ) (<b>204</b>), a transport layer (<b>206</b>), and an outbound serialization queue (<b>208</b>). Each of the aforementioned components is discussed below.</p>
<p id="p-0039" num="0038">In one embodiment, the IP layer (<b>202</b>) is configured to receive packets from the VNIC associated with the VNS (<b>204</b>) (e.g., VNS D (<b>116</b>D) receives packets from VNIC D (<b>114</b>D) in <figref idref="DRAWINGS">FIG. 1</figref>). Further, the IP layer (<b>202</b>) is configured to receive packets from the transport layer (<b>206</b>). In one embodiment of the invention, the IP layer (<b>202</b>) is configured to perform IP level processing for both inbound and outbound packets.</p>
<p id="p-0040" num="0039">Continuing with the discussion of <figref idref="DRAWINGS">FIG. 2</figref>, the inbound VSQ (<b>204</b>) is configured to receive packets from the IP layer (<b>202</b>). The inbound VSQ (<b>204</b>) corresponds to a queue data structure and is configured to queue packets received from the IP layer (<b>202</b>) prior to the packets being processed by the transport layer (<b>206</b>). In one embodiment of the invention, the inbound VSQ (<b>204</b>) may be used to control the number of packets being received by the packet destination (e.g., <b>118</b>) associated with VNS. The inbound VSQ (<b>204</b>) may control the bandwidth by limiting the number of packets in the VSQ (<b>204</b>) and preventing additional packets from entering the VNS (<b>200</b>) until the inbound VSQ (<b>204</b>) has less than a threshold number of packets.</p>
<p id="p-0041" num="0040">In one embodiment of the invention, the transport layer (<b>206</b>) is configured to process inbound and outbound packets in accordance with Transmission Control Protocol (TCP), User Datagram Protocol (UDP), or both UDP and TCP. Other protocols may be supported by the transport layer (<b>206</b>).</p>
<p id="p-0042" num="0041">In one embodiment of the invention, the outbound VSQ (<b>208</b>) is a queue data structure configured to receive packets from the packet destination (e.g., <b>118</b>) with which the VNS (<b>204</b>) is associated. Further, the outbound VSQ (<b>208</b>) is configured to store packets prior to sending the received packets to the transport layer (<b>206</b>). In one embodiment of the invention, the outbound VSQ (<b>208</b>) is also configured to control the flow of packets from the packet destination (e.g., <b>118</b>) to the VNS (<b>200</b>). In one embodiment of the invention, the outbound VSQ (<b>208</b>) (or a related process) is configured to block an application from sending packets to the outbound VSQ (<b>208</b>) if the packet destination (e.g., <b>118</b>) is attempting to issue packets at a higher rate than the outbound bandwidth allocated to the packet destination (e.g., <b>118</b>). Further, the outbound VSQ (<b>208</b>) (or a related process) is configured to notify the packet destination (e.g., <b>118</b>) when it is no longer blocked from issuing packets to the VNS (<b>200</b>).</p>
<p id="p-0043" num="0042">In one embodiment of the invention, the inbound VSQ (<b>204</b>) and outbound VSQ (<b>208</b>) are each configured to enforce the manner in which packets are processed. Specifically, the inbound VSQ (<b>204</b>) and outbound VSQ (<b>208</b>) may be configured to enforce the packet processing requirements imposed by the transport layer (<b>206</b>). For example, TCP requires serial processing of packets. Thus, the inbound VSQ (<b>204</b>) and outbound VSQ (<b>208</b>) may require all threads accessing the inbound VSQ (<b>204</b>) and outbound VSQ (<b>208</b>) to conform to a mutual exclusion policy. In one embodiment of the invention, the mutual exclusion policy requires that only one thread may access the VSQ (inbound or outbound) at a time. Thus, if two threads are attempting to access a given VSQ (inbound or outbound), one thread must wait until the other thread has finished accessing the VSQ (inbound or outbound).</p>
<p id="p-0044" num="0043">Alternatively, if the transport layer (<b>206</b>) only supports UDP, then the inbound VSQ (<b>204</b>) and outbound VSQ (<b>208</b>) may be configured to allow concurrent access. Said another way, two or more threads may concurrently access the VSQ (inbound or outbound). In one embodiment of the invention, if the transport layer (<b>206</b>) is configured to process both TCP and UDP packets, then the inbound VSQ (<b>204</b>) and outbound VSQ (<b>208</b>) are configured to conform to the more stringent standard (e.g., TCP if the transport layer supports both TCP and UDP).</p>
<p id="p-0045" num="0044">In one embodiment of the invention, the inbound VSQ (<b>204</b>) and the outbound VSQ (<b>208</b>) are implemented as a single bi-directional VSQ. In such cases, the bi-directional VSQ includes a single set of configuration parameters (discussed above) to enforce the manner in which packets are processed. Further, the enforcement of the configuration parameters is performed on a VSQ-basis (as opposed to a per-direction basis). For example, if the bi-directional VSQ enforces a mutual exclusion policy, then only one thread may access the bi-directional VSQ at a time.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 3</figref> shows a notification framework in accordance with one embodiment of the invention. As shown in <figref idref="DRAWINGS">FIG. 3</figref>, a packet (P) destined for the packet destination (<b>308</b>) passes through a number of levels (collectively referred to as a networking path). The packet destination for a packet is known at the time the packet enters the networking path as the packet may only enter the networking path if the packet is classified as being associated with the packet destination (e.g., when the destination IP address of the packet corresponds to an IP address associated with the packet destination).</p>
<p id="p-0047" num="0046">As shown in <figref idref="DRAWINGS">FIG. 3</figref>, the networking path associated with the packet destination (<b>308</b>) includes a receive ring (<b>300</b>), a virtual network interface card (VNIC) (<b>302</b>), an IP layer (<b>304</b>), and a transport layer (<b>306</b>). As shown in FIG. <b>3</b>, the IP layer (<b>304</b>), and the transport layer (<b>306</b>) are included in the virtual network stack (<b>310</b>).</p>
<p id="p-0048" num="0047">Though not shown in <figref idref="DRAWINGS">FIG. 3</figref>, each of the aforementioned levels is associated with at least one bidirectional queue (or, alternatively, two unidirectional queues). The bidirectional queues (or unidirectional queues) are typically first-in-first-out (FIFO) queues configured to temporarily store a finite number of packets prior to the packets being processed by corresponding level. For example, the bidirectional queue in the IP layer (<b>304</b>) is configured to store a finite number of inbound packets (i.e., packets received from the VNIC (<b>302</b>)) and outbound packets (i.e., packets received from the Transport Layer (<b>306</b>)) prior to the IP layer (<b>304</b>) processing the packets. In one embodiment of the invention, there is a bidirectional (or two unidirectional queues) for each TCP connection and/or UDP socket currently being used by an application (or applications) in the packet destination (<b>308</b>).</p>
<p id="p-0049" num="0048">Further, for each direction in the bidirectional queue (or each of the unidirectional queues) there is a drop counter. The drop counter is initially set to zero and is incremented each time a packet is received by the level but is not stored in appropriate queue (i.e., the queue is full). In addition, for each direction in the bidirectional queue (or each of the unidirectional queues) there may also be an error packet counter. The error packet counter is initially set to zero and is incremented each time a packet associated with an error is received by the level. A packet is said to be associated with an error, if there is an error in the header of the packet. The error may include but is not limited to an incorrect or partial MAC address, an incorrect or partial IP address, etc.</p>
<p id="p-0050" num="0049">As shown in <figref idref="DRAWINGS">FIG. 3</figref>, each level in a networking path associated with the packet destination (<b>308</b>) is configured to send a notification message (NM) to the packet destination (<b>308</b>). The NM may be sent in response to a dropped packet and/or an error packet. As shown in <figref idref="DRAWINGS">FIG. 3</figref>, the NM may be sent as an out-of-band channel (i.e., a different communication path than the incoming packets). In one embodiment of the invention, the out-of-band channel may correspond, but is not limited, to an event port framework, a door call, or a call back function provided during registration of the packet destination with the host. Alternatively, the NM is sent using an in-band channel (i.e., on the same communication path as other incoming packets). For example, the NM would be sent up the networking path through all levels between the level in which the NM was generated and the packet destination (<b>308</b>).</p>
<p id="p-0051" num="0050">In one embodiment of the invention, the NM may only include a notification that one packet (or a certain number of packets) for the packet destination has been dropped by a specific level. Alternatively, the NM may include additional information about the packet that was dropped. For example, the NM may include information about the connection or socket with which the packet was associated.</p>
<p id="p-0052" num="0051">While <figref idref="DRAWINGS">FIG. 3</figref> shows a single packet destination with a single networking path. As shown in <figref idref="DRAWINGS">FIG. 1</figref>, the system may include multiple networking paths and each networking path may include functionality as discussed in <figref idref="DRAWINGS">FIG. 3</figref>. Accordingly, each of the packet destinations in the system may register with the host (<b>312</b>) and receive notification message about dropped packets and/or error packets, where the dropped packets and/or error packets are associated with the packet destination (<b>308</b>).</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 4</figref> shows a flow chart in accordance with one or more embodiments of the invention. More specifically, <figref idref="DRAWINGS">FIG. 4</figref> shows a method for setting up a system in accordance with one embodiment of the invention. Initially, the NIC is registered and the appropriate device driver is used to obtain hardware information about the network interface card (NIC) (e.g., number of HRRs, APIs to program the hardware classifier, control functions to support interrupt and polling mode, etc.) (Step <b>401</b>). Once Step <b>401</b> is completed, a determination is made regarding the number of VNICs that need to be created on the host (Step <b>403</b>). In one or more embodiments of the invention, the number of VNICs required corresponds to the number of packet destinations on the host.</p>
<p id="p-0054" num="0053">Once the number of VNICs to be created has been determined, the number of hardware receive rings on the NIC is assessed (Step <b>405</b>). VNICs are subsequently created in the host, where the number of VNICs created corresponds to the number of VNICs determined in Step <b>403</b> (Step <b>407</b>). Next, a determination is made about whether there are fewer HRRs than VNICs on the host (Step <b>409</b>). If there are fewer HRRs than VNICs on the host, then a software ring is created in the host and subsequently associated with one of the HRRs (Step <b>411</b>).</p>
<p id="p-0055" num="0054">A set of software receive rings (SRRs) is then created within the software ring (Step <b>413</b>). The VNICs are then bound to the SRRs (Step <b>415</b>). More specifically, the VNICs that cannot be bound to the HRRs are bound to the SRRs. Then, the remaining VNICs are bound to the HRRs (Step <b>417</b>). The hardware classifier (in the NIC) and the software classifier (if host includes a software ring) are programmed (Step <b>419</b>). In one embodiment of the invention, programming the hardware classifier and software classifier includes specifying to which HRR or SRR to send the received packets. The hardware classifier may be programmed using an API advertised by the device driver (see Step <b>401</b>. Those skilled in the art will appreciate that steps in <figref idref="DRAWINGS">FIG. 4</figref> may be a different order.</p>
<p id="p-0056" num="0055">In one embodiment of the invention, programming the hardware classifier includes specifying that all packets for a specific packet destination are sent to a specific HRR. In one embodiment of the invention, the hardware classifier is programmed using the MAC address and, optionally, the IP address associated with the packet destinations. Thus, all packets with a specific MAC address (and optionally an IP address) are sent to a specific HRR. As discussed, the HRRs are bound to VNICs or software rings. Thus, packets sent to specific HRRs are subsequently sent to the appropriate VNIC or software ring.</p>
<p id="p-0057" num="0056">In the case where the packets are sent to the software ring, the software classifier in the software ring performs additional classification. In one embodiment of the invention, the software classifier includes the same functionality as the hardware classifier and is programmed using the same criteria (e.g., MAC addresses, IP addresses, etc.) as the hardware classifier.</p>
<p id="p-0058" num="0057">In one embodiment of the invention, VNICs are preferably bound to an HRR if an HRR is available and the hardware classifier in the NIC is configured to perform the level of classification required by the host. In such cases, one HRR is bound to a software ring and the other HRRs are bound to VNICs. In one embodiment of the invention, each of the aforementioned VNICs is associated with a virtual network stack (VNS), which is in turn associated with a packet destination (see <figref idref="DRAWINGS">FIG. 1</figref>).</p>
<p id="p-0059" num="0058">As stated above, software rings can be arbitrarily created on top of HRR or SRRs. As a result, different structures involving software rings can be created to handle the same number of VNICs using the method shown in <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. 5</figref> shows a flowchart in accordance with one embodiment of the invention. More specifically, <figref idref="DRAWINGS">FIG. 5</figref> shows a flowchart for registering an application to receive a notification message. Initially, the packet destination to receive the notification messages and the level from which to receive the notification message are selected (Step <b>500</b>). Said another way, the packet destination that is the target of the notification message and the specific level in the networking path (e.g., receive ring, VNIC, IP layer, and TCP layer) from which the notification message is generated is selected. Once the packet destination and level has been selected, a TCP connection or a UDP socket may be optionally selected (Step <b>502</b>).</p>
<p id="p-0061" num="0060">Step <b>502</b> is typically performed when a given networking path includes packets for multiple TCP connections and/or UDP sockets and the packet destination (or application executing therein) only wants to receive notification messages related to the specific TCP connection or UDP socket. Thus, instead of receiving notification messages when any packet drops, the packet destination (or application therein) only receives notification messages that packets associated with the selected TCP connection or UDP socket have been dropped. If the networking path only receives packets associated with a single TCP connection or UDP socket, or if the packet destination (or application therein) does not require per-TCP connection or per-UDP socket granularity, then Step <b>502</b> may not be performed.</p>
<p id="p-0062" num="0061">The notification type and the notification threshold are subsequently set (Step <b>504</b>). In one embodiment of the invention, the notification type corresponds to dropped packet notification or error packet notification. Drop packet notification corresponds to notifying the packet destination that a packet has dropped. Similarly, error packet notification corresponds to notifying the packet destination that there is an error packet.</p>
<p id="p-0063" num="0062">In one embodiment of the invention, the notification threshold corresponds to a minimum number of packets that must be dropped (as recorded by the drop counter) or a minimum number of error packets that must be received (as recorded by the error packet counter) before a notification message is sent to the packet destination. For example, the notification threshold may be set to ten, accordingly, a notification message is sent every time ten packets have been dropped. Typically, once the notification message is sent the corresponding counter (drop or error packet) is reset to zero.</p>
<p id="p-0064" num="0063">The notification is subsequently registered with the host using the information specified in Steps <b>500</b>-<b>504</b> (Step <b>506</b>). At this stage, the notification has been set and the packet destination (i.e., the packet destination specified in Step <b>500</b>) may receive notification messages from the level specified in Step <b>500</b>. A determination is then made about whether additional notifications need to be registered in the host (Step <b>508</b>). If additional notifications need to be registered, then the process proceeds to Step <b>500</b>. Alternatively, the process ends. The process in <figref idref="DRAWINGS">FIG. 5</figref> may be repeated for each packet destination on the host as well as for both dropped packets and error packets.</p>
<p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. 6</figref> shows a flow chart in accordance with one or more embodiments of the invention. More specifically, <figref idref="DRAWINGS">FIG. 6</figref> shows a method for processing received packets in accordance with one embodiment of the invention. Initially, packets are received by a NIC (Step <b>600</b>). Next, a hardware classifier associated with the NIC determines to which receive ring (e.g., HRR) to send the packets (Step <b>602</b>). The packets are then sent to the appropriate receive ring (Step <b>604</b>) based on the classifier's assessment.</p>
<p id="p-0066" num="0065">Continuing with the discussion in <figref idref="DRAWINGS">FIG. 6</figref>, a determination is then made about whether the receive ring is associated with a software receive ring (Step <b>606</b>). If the receive ring is associated with a software receive ring, then the packets are forwarded to a software classifier (Step <b>608</b>). If Step <b>602</b> is entered from Step <b>608</b>, then classifier in Step <b>602</b> now corresponds to a software classifier and all references to receive rings in Steps <b>602</b>-<b>622</b> correspond to SRRs. Said another way, when Steps <b>602</b>-<b>606</b> are initially performed, the classifier corresponds a hardware classifier and the receive rings correspond to HRRs. However, if the HRR is bound to a software ring (see Step <b>606</b>), then in all subsequent executions of Steps <b>602</b>-<b>622</b>, the classifier corresponds to a software classifier and all references to receive rings in Steps <b>602</b>-<b>622</b> correspond to SRRs.</p>
<p id="p-0067" num="0066">If the receive ring is not associated with a software ring, then a determination is made about whether the receive ring (HRR or SRR) is associated with a virtual machine or a packet destination (Step <b>610</b>). The receive ring is associated with the virtual machine if the receive ring sends (via a VNIC) received packets to an interface, which in turn sends packets to a virtual machine Similarly, the receive ring is associated with a packet destination if the receive ring (via a VNIC) sends packets to a VNS, which in turn sends packets to a packet destination.</p>
<p id="p-0068" num="0067">If the receive ring is associated with a packet destination, the process proceeds to Step <b>612</b>. Alternatively, if the receive ring is associated with a virtual machine, then the process proceeds to Step <b>616</b>. With respect to Step <b>612</b>, a determination is made about whether the VSQ associated with the VNS is operating in polling mode or interrupt mode.</p>
<p id="p-0069" num="0068">Continuing with the discussion of <figref idref="DRAWINGS">FIG. 6</figref>, if the VSQ is operating in polling mode, then the packets remain in the receive ring (HRR or SRR) until the VSQ requests a specified number of packets from the receive ring (Step <b>614</b>). In one embodiment of the invention, the VSQ does not request any packets when there are packets already queued on the VSQ. In one or more embodiments of the invention, the VSQ retrieves all packets from the receive ring when a request is made for packets.</p>
<p id="p-0070" num="0069">Those skilled in the art will appreciate that the receive rings store a finite number of packets. Thus, if the receive rings receive packets at a faster rate than the rate at which the corresponding VSQ requests the packets, the receive rings will eventually fill completely with packets and packets received after this point are dropped until packets on the receive rings are requested and processed. As discussed above, if the packet destination has registered with the host to receive notification regarding dropped packets, then notification messages are sent to the packet destination (see <figref idref="DRAWINGS">FIG. 7</figref>). In one embodiment of the invention, the rate at which packets are requested from the receive ring (SRR or HRR) and the number of packets requested is determined by the bandwidth allocation of the VNS bound to the receive ring.</p>
<p id="p-0071" num="0070">Alternatively, if the VSQ is operating in interrupt mode, then an interrupt is issued to a processor (i.e., a processor bound to the VSQ that is bound to the VNS associated with the receive ring or the processor bound to the interface associated with the VM) (Step <b>616</b>). In one embodiment of the invention, if the receive ring is an SRR and it is bound to a VNIC, then the interrupt (as recited in Step <b>616</b>) is a software interrupt as opposed to a hardware interrupt (as recited in Step <b>616</b>), which is generated when the HRR is bound to a VNIC. The packets are then sent to the VNIC (Step <b>618</b>).</p>
<p id="p-0072" num="0071">In one embodiment of the invention, if the VSQ is operating polling mode, then the VSQ, which includes a copy of the appropriate acceptor function, uses the acceptor function to obtain the packet from the receive ring and place it in the appropriate VNIC. Alternatively, if the VSQ is operating in interrupt mode, then the device driver (or NIC) executes the acceptor function to send the packet from the receive ring to the appropriate VNIC.</p>
<p id="p-0073" num="0072">The VNIC subsequently sends the packets to the appropriate VNS or interface (Step <b>620</b>), where the packets are processed and then sent to the packet destination or virtual machine (Step <b>622</b>).</p>
<p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. 7</figref> shows a flow chart in accordance with one or more embodiments of the invention. More specifically, <figref idref="DRAWINGS">FIG. 7</figref> shows a method for notifying a packet destination that is registered to receive notification that a packet has been dropped. Note the packet that is dropped is associated with the packet destination (e.g., when the destination IP address of the packet corresponds to an IP address associated with the packet destination). Further, the method shown in <figref idref="DRAWINGS">FIG. 7</figref> occurs each time a packet is received by a level in the networking path associated with the packet destination. In addition, the method shown in <figref idref="DRAWINGS">FIG. 7</figref> may be performed concurrently at each level in the networking path associated with the packet destination. Moreover, the method shown in <figref idref="DRAWINGS">FIG. 7</figref> may be performed concurrently in multiple networking paths within the host.</p>
<p id="p-0075" num="0074">Turning to the <figref idref="DRAWINGS">FIG. 7</figref>, initially, a packet is received at a level (e.g., receive ring, VNIC, IP layer, transport layer) (Step <b>700</b>). A determination is then made about whether there is space in the appropriate queue (bidirectional or unidirectional) to store the packet (Step <b>702</b>). If there is space in the appropriate queue, then the packet is stored in the appropriate queue (Step <b>704</b>) and the method ends.</p>
<p id="p-0076" num="0075">Alternatively, if there is no space in the appropriate queue, then the packet is dropped (Step <b>706</b>) (i.e., not stored in the queue and, thus, not processed any further by the host). The drop counter is subsequently incremented (Step <b>708</b>). A determination is then made about whether the notification threshold is been exceeded (Step <b>710</b>). The aforementioned determination is made using the drop counter incremented in Step <b>708</b>. If the notification threshold is exceeded, then a notification message is sent to the packet destination (i.e., the packet destination with which the packet is associated) (Step <b>712</b>). Alternatively, if the notification threshold is not exceeded, then the process ends and no notification message is sent.</p>
<p id="p-0077" num="0076">In one embodiment of the invention, if the packet destination is associated with multiple TCP connections or UDP sockets and the packet destination has only registered to receive packets associated with a specific connection then one of the two following embodiments may be implemented: (i) the hardware classifier is configured to only forward packets associated with the specific TCP connection or UDP socket to a receive ring, where the receive ring is in the networking path associated with the packet destination. In this case, no additional processing is required when sending the notification message. or (ii) the hardware classifier forwards all packets for the packet destination to a single receive ring. In this scenario, if there are multiple TCP connections or UDP sockets associated with the packet destination, then a separate drop counter is maintained for each TCP connection or UDP socket and step <b>710</b> is modified to determine whether the drop counter associated with the specific TCP connection or UDP socket has exceeded the threshold.</p>
<p id="p-0078" num="0077">A method similar to the method shown in <figref idref="DRAWINGS">FIG. 7</figref> may be used to send notification messages corresponding to error notification messages to the packet destination. In such cases, step <b>702</b> is modified to determine whether the packet is an error packet and step <b>708</b> is modified to increment the error packet counter.</p>
<p id="p-0079" num="0078">Embodiments of the invention enable a packet destination (or an application executing therein) to register and receive notifications of dropped packets at all levels within the associated networking path (i.e., the networking path associated with the packet destination). Further, embodiments of the invention allow the packet destination (or an application executing therein) to specify the specific UDP socket or TCP connection about which to receive notifications (i.e., when packets associated with the specific UDP socket or TCP connection are dropped).</p>
<p id="p-0080" num="0079">In addition to providing the packet destination (or an application executing therein) immediate notification of dropped packets, embodiments of the invention also enable the packet destination (or an application executing therein) to take action in response to receiving notification of dropped packets (or error packets).</p>
<p id="p-0081" num="0080">For example, if a packet destination (or an application executing therein) receives notification of dropped packets, the packet destination (or an application executing therein) may re-route packets in the network on which the host is located or, alternatively, change the encoding of data or video streams to reduce the number of packets being sent to the packet destination (or an application executing therein).</p>
<p id="p-0082" num="0081">Finally, embodiments of the invention enable the system administrators to identify when and where packets are being dropped. Using the aforementioned information, the system administrators may be able to more effectively and efficiently allocate host networking resources (e.g., queue sizes, processor cycle allocation to processes inbound and outbound packets, etc.).</p>
<p id="p-0083" num="0082"><figref idref="DRAWINGS">FIG. 8</figref> shows an example in accordance with one embodiment of the invention. The example is not intended to limit the scope of the invention. Turning to <figref idref="DRAWINGS">FIG. 8</figref>, the system includes a NIC (<b>826</b>) operatively connected to a host (<b>828</b>). The NIC (<b>826</b>) includes two receive rings (<b>800</b>, <b>810</b>) and a hardware classifier (<b>824</b>). The hardware classifier (<b>824</b>) is configured to forward packets (P<b>1</b>) for packet destination <b>1</b> (<b>808</b>) to receive ring <b>1</b> (<b>800</b>) and to forward packets for packet destination <b>2</b> (<b>818</b>) to receive ring <b>2</b> (<b>818</b>).</p>
<p id="p-0084" num="0083">As shown in <figref idref="DRAWINGS">FIG. 1</figref>, packets (P<b>1</b>) for packet destination <b>1</b> (<b>808</b>), once sent to receive ring <b>1</b> (<b>800</b>), pass through VNIC <b>1</b> (<b>802</b>), IP layer <b>1</b> (<b>804</b>) and transport layer <b>1</b> (<b>806</b>) and eventually reach packet destination <b>1</b> (<b>808</b>). As shown in <figref idref="DRAWINGS">FIG. 8</figref>, IP layer <b>1</b> (<b>804</b>) and transport layer <b>1</b> (<b>806</b>) are included in VNS <b>1</b> (<b>820</b>). Similarly, packets (P<b>2</b>) for packet destination <b>2</b> (<b>818</b>), once sent to receive ring <b>2</b> (<b>810</b>), pass through VNIC <b>2</b> (<b>812</b>), IP layer <b>2</b> (<b>814</b>) and transport layer <b>2</b> (<b>816</b>) and eventually reach packet destination <b>2</b> (<b>818</b>). As shown in <figref idref="DRAWINGS">FIG. 8</figref>, IP layer <b>2</b> (<b>814</b>) and transport layer <b>2</b> (<b>816</b>) are included in VNS <b>2</b> (<b>822</b>).</p>
<p id="p-0085" num="0084">Receive ring <b>1</b> (<b>800</b>), VNIC <b>1</b> (<b>802</b>), IP layer <b>1</b> (<b>804</b>) and transport layer <b>1</b> (<b>806</b>) are collectively referred to as the networking path associated with packet destination <b>1</b> (<b>808</b>). Receive ring <b>2</b> (<b>810</b>), VNIC <b>2</b> (<b>812</b>), IP layer <b>2</b> (<b>814</b>) and transport layer <b>2</b> (<b>816</b>) are collectively referred to as the networking path associated with packet destination <b>2</b> (<b>818</b>).</p>
<p id="p-0086" num="0085">As shown in <figref idref="DRAWINGS">FIG. 8</figref>, packet destination <b>1</b> (<b>808</b>) has registered to receive a notification message (NM <b>1</b>) when receive ring <b>1</b> (<b>800</b>) drops a packet. NM <b>1</b> (as shown in <figref idref="DRAWINGS">FIG. 8</figref>) is communicated to packet destination <b>1</b> using an out-of-band communication channel. Packet destination <b>1</b> (<b>808</b>) has also registered to receive a notification message (NM <b>3</b>) if a certain number of error packets are received by transport layer <b>1</b> (<b>806</b>). NM <b>3</b> is communicated using an in-band communication channel. Finally, packet destination <b>2</b> (<b>818</b>) has registered to receive a notification message (NM <b>2</b>) if packets are dropped by IP layer <b>2</b> (<b>814</b>). NM <b>2</b>, like NM <b>1</b>, is communicated to packet destination <b>2</b> (<b>818</b>) using an out-of-band communication channel.</p>
<p id="p-0087" num="0086">In one embodiment of the invention, each of the levels in the networking path is additionally configured to perform the following: (i) receive a packet; (ii) determine whether the level above the current level (e.g., a receive ring (<b>300</b> in <figref idref="DRAWINGS">FIG. 3</figref>) may query the VNIC (<b>302</b> in <figref idref="DRAWINGS">FIG. 3</figref>) to determine whether the VNIC includes space to store the packet; (iii) if the packet can be stored in the next level (i.e., the next level has space to store the packet), then the packet is sent to the next level; and (iv) if the next level cannot store the packet (i.e., the next level has no space to store the packet), then the packet is dropped and either the current level or the next level update the appropriate drop counters and then determine whether to issue a notification message to the packet destination in accordance with embodiments of the invention discussed above.</p>
<p id="p-0088" num="0087">An embodiment of the invention may be implemented on virtually any type of computer regardless of the platform being used. For example, as shown in <figref idref="DRAWINGS">FIG. 9</figref>, a networked computer system (<b>900</b>) includes a processor (<b>902</b>), associated memory (<b>904</b>), a storage device (<b>906</b>), and numerous other elements and functionalities typical of today's computers (not shown). The networked computer (<b>900</b>) may also include input means, such as a keyboard (<b>908</b>) and a mouse (<b>910</b>), and output means, such as a monitor (<b>912</b>). The networked computer system (<b>900</b>) is connected to a local area network (LAN) or a wide area network via a network interface connection (not shown). Those skilled in the art will appreciate that these input and output means may take other forms. Further, those skilled in the art will appreciate that one or more elements of the aforementioned computer (<b>900</b>) may be remotely located and connected to the other elements over a network. Further, software instructions to perform embodiments of the invention may be stored on a computer readable medium such as a compact disc (CD), a diskette, a tape, a file, or any other computer readable storage device.</p>
<p id="p-0089" num="0088">While the invention has been described with respect to a limited number of embodiments, those skilled in the art, having benefit of this disclosure, will appreciate that other embodiments can be devised which do not depart from the scope of the invention as disclosed herein. Accordingly, the scope of the invention should be limited only by the attached claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for notifying a packet destination of a plurality of packet destinations on a host, comprising:
<claim-text>receiving, by a network interface card (NIC) operatively connected to the host, a packet addressed to the packet destination of the plurality of packet destinations on the host, wherein a virtual network interface card (VNIC) on the host is bound to the packet destination;</claim-text>
<claim-text>classifying the packet by the NIC;</claim-text>
<claim-text>forwarding, by the NIC, the packet to one of a plurality of receive rings on the NIC, wherein the one of the plurality of receive rings is bound to the VNIC on the host;</claim-text>
<claim-text>if the NIC determines that the one of the plurality of receive rings does not comprise space to store the packet:
<claim-text>dropping the packet by the one of the plurality of receive rings,</claim-text>
<claim-text>incrementing a drop counter associated with the one of the plurality of receive rings, and</claim-text>
<claim-text>sending, by the NIC in response to the counter exceeding a first predefined notification threshold, a first notification message from the NIC to the packet destination, wherein the first notification message indicates that the packet was dropped by the one of the plurality of receive rings;</claim-text>
</claim-text>
<claim-text>if the NIC determines that the one of the plurality of receive rings comprises space to store the packet:
<claim-text>forwarding the packet to the VNIC,</claim-text>
<claim-text>dropping the packet by the VNIC in response to determining that the VNIC does not comprise space to store the packet, and</claim-text>
<claim-text>sending, by the VNIC in response to the dropping, a second notification message from the VNIC to the packet destination, wherein the second notification message indicates that the packet was dropped by the VNIC.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>prior to sending the first notification message to the packet destination:
<claim-text>registering the packet destination to receive the first notification message from the NIC, when the one of the plurality of receive rings drops the packet.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>resetting the drop counter associated with the one of the plurality of receive rings after the first notification message is sent to the packet destination.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first predefined notification threshold is a numeric value corresponding to a plurality of dropped packets.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the packet is a user datagram protocol (UDP) packet.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the VNIC is configured to store a specified number of packets.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein dropping the packet by the VNIC comprises incrementing a drop counter associated with the VNIC.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising:
<claim-text>resetting the drop counter associated with the VNIC after the second notification message is sent to the packet destination on the host.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the packet destination is only notified if the drop counter associated with the VNIC exceeds a second predefined notification threshold.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the second predefined notification threshold is a numeric value corresponding to a plurality of dropped packets.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein sending the first notification message from the NIC to the packet destination on the host comprises using an out-of-band communication channel between the NIC and the packet destination on the host.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the out-of-band communication channel is a different communication path than a path used by incoming packets.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein sending the second notification message from the VNIC to the packet destination on the host comprises using an out-of-band communication channel between the VNIC and the packet destination on the host.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the out-of-band communication channel is a different communication path than a path used by incoming packets.</claim-text>
</claim>
</claims>
</us-patent-grant>
