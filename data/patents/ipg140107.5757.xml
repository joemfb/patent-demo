<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626861-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626861</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13632396</doc-number>
<date>20121001</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>16</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>29</main-group>
<subgroup>08</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classifications-cpc>
<main-cpc>
<classification-cpc>
<cpc-version-indicator><date>20130101</date></cpc-version-indicator>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>29</main-group>
<subgroup>08072</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
<scheme-origination-code>C</scheme-origination-code>
</classification-cpc>
</main-cpc>
</classifications-cpc>
<classification-national>
<country>US</country>
<main-classification>709206</main-classification>
<further-classification>709207</further-classification>
<further-classification>726  1</further-classification>
<further-classification>726  3</further-classification>
<further-classification>726 22</further-classification>
<further-classification>726 23</further-classification>
<further-classification>726 24</further-classification>
<further-classification>726 25</further-classification>
<further-classification>713182</further-classification>
<further-classification>713187</further-classification>
<further-classification>713188</further-classification>
<further-classification>713189</further-classification>
</classification-national>
<invention-title id="d2e51">Method of detecting compromised computers in a network</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6968461</doc-number>
<kind>B1</kind>
<name>Lucas et al.</name>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 22</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7051077</doc-number>
<kind>B2</kind>
<name>Lin</name>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709207</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7610344</doc-number>
<kind>B2</kind>
<name>Mehr et al.</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7664812</doc-number>
<kind>B2</kind>
<name>Daniell et al.</name>
<date>20100200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709200</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>7882542</doc-number>
<kind>B2</kind>
<name>Neystadt et al.</name>
<date>20110200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726  3</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7899866</doc-number>
<kind>B1</kind>
<name>Buckingham et al.</name>
<date>20110300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>7930353</doc-number>
<kind>B2</kind>
<name>Chickering et al.</name>
<date>20110400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>8006305</doc-number>
<kind>B2</kind>
<name>Aziz</name>
<date>20110800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 24</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>8069471</doc-number>
<kind>B2</kind>
<name>Boren</name>
<date>20111100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726  3</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>8171553</doc-number>
<kind>B2</kind>
<name>Aziz et al.</name>
<date>20120500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 24</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2005/0071432</doc-number>
<kind>A1</kind>
<name>Royston, III</name>
<date>20050300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2006/0168024</doc-number>
<kind>A1</kind>
<name>Mehr et al.</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2007/0038705</doc-number>
<kind>A1</kind>
<name>Chickering et al.</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2007/0192855</doc-number>
<kind>A1</kind>
<name>Hulten et al.</name>
<date>20070800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 22</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2007/0250930</doc-number>
<kind>A1</kind>
<name>Aziz et al.</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 24</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2007/0282955</doc-number>
<kind>A1</kind>
<name>Lin et al.</name>
<date>20071200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2008/0005782</doc-number>
<kind>A1</kind>
<name>Aziz</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726  3</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2008/0028463</doc-number>
<kind>A1</kind>
<name>Dagon et al.</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 22</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2008/0080518</doc-number>
<kind>A1</kind>
<name>Hoeflin et al.</name>
<date>20080400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>37039542</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2008/0104186</doc-number>
<kind>A1</kind>
<name>Wieneke et al.</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2008/0244748</doc-number>
<kind>A1</kind>
<name>Neystadt et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 25</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>2010/0100962</doc-number>
<kind>A1</kind>
<name>Boren</name>
<date>20100400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 25</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00023">
<othercit>Mengjun Xie, Heng Yin, Haining Wang, &#x201c;An Effective Defense Against Email Spam Laundering&#x201d;, ACM conference CCS'06, Oct. 30, 2006-Nov. 3, 2006, pp. 179-190.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00024">
<othercit>Xie, M.; Yin, H; and Wang, H. Thwarting E-mail Spam Laundering. ACM Transactions on Information and System Security, vol. 12, No. 2, Article 13, 32 pages, Dec. 2008.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00025">
<othercit>Duan et al., Behavioral Characteristics of Spammers and Their Network Reachability Properties, IEEE International Conference on Communications, Jun. 2007.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00026">
<othercit>Gu et al., BotHunter: Detecting Malware Infection Through IDS-Driven Dialog Correlation, Proc. 16th USENIX Security Symposium, Boston, MA, Aug. 2007.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00027">
<othercit>Xie et al., Spamming Botnets: Signatures and Characteristics, Proc. ACM SIGCOMM, Seattle, WA, Aug. 2008.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00028">
<othercit>Zhuang et al., Characterizing Botnets from Email Spam Records, Proc. of 1st Usenix Workshop on Large-Scale Exploits and Emergent Threats, San Francisco, CA, Apr. 2008.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00029">
<othercit>Xie et al., An Effective Defense Against Email Spam Laundering, ACM Conference on Computer and Communications Security, Alexandria, VA, Oct. 30, 2006-Nov. 3, 2006.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00030">
<othercit>Wald, Sequential Analysis, 1947, John Wiley &#x26; Sons, Inc., pp. 37-69.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>7</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>709206-207</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>726  1</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>726  3</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>726 22- 25</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713182</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713187-189</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>8</number-of-drawing-sheets>
<number-of-figures>14</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>12762714</doc-number>
<date>20100419</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>8280968</doc-number>
<date>20121002</date>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13632396</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61170894</doc-number>
<date>20090420</date>
</document-id>
</us-provisional-application>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only" applicant-authority-category="assignee">
<addressbook>
<orgname>The Florida State University Research Foundation, Inc.</orgname>
<address>
<city>Tallahassee</city>
<state>FL</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Duan</last-name>
<first-name>Zhenhai</first-name>
<address>
<city>Tallahassee</city>
<state>FL</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Chen</last-name>
<first-name>Peng</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Lytvyn</last-name>
<first-name>Andriy</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<orgname>Smith &#x26; Hopen, P.A.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>The Florida State University Research Foundation, Inc.</orgname>
<role>02</role>
<address>
<city>Tallahassee</city>
<state>FL</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Daftuar</last-name>
<first-name>Saket K</first-name>
<department>2451</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method of detecting a compromised machine on a network. The method receives an email message from a machine on the network and classifies it as either spam or non-spam. A probability ratio is then updated, according to whether the message was spam or non-spam, by applying a sequential probability ratio test. If the probability ratio is greater than or equal to a first threshold, then the machine is compromised. If the probability ratio is less than or equal to a second threshold, then the machine is normal. The operations of receiving a message, classifying the message, updating the probability ratio, and indicating the machine is normal or compromised until the probability ratio is greater than or equal to the first threshold are repeated for a plurality of messages. Such repeated operations are performed on each of the messages one at a time, as each of the messages is received.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="165.69mm" wi="158.75mm" file="US08626861-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="221.74mm" wi="215.82mm" file="US08626861-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="211.16mm" wi="197.70mm" file="US08626861-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="215.90mm" wi="160.36mm" file="US08626861-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="242.82mm" wi="164.08mm" file="US08626861-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="243.50mm" wi="192.11mm" file="US08626861-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="204.64mm" wi="202.61mm" file="US08626861-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="256.37mm" wi="172.64mm" file="US08626861-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="165.10mm" wi="185.17mm" file="US08626861-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is a continuation of and claims priority to currently pending U.S. Non-provisional patent application Ser. No. 12/762,714 with the same title, filed by the same inventor on Apr. 19, 2010, which is a non-provisional of Provisional Patent Application No. 61/170,894, entitled &#x201c;Method of Detecting Compromised Computers in a Network,&#x201d; filed by the same inventor on Apr. 20, 2009, both of which are herein incorporated by reference.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">FIELD OF INVENTION</heading>
<p id="p-0003" num="0002">This invention relates to network security; more specifically, to the detection of compromised computers by monitoring email messages originating from and forwarded by computers on the network.</p>
<heading id="h-0003" level="1">BACKGROUND</heading>
<p id="p-0004" num="0003">A major security challenge on the Internet is the existence of the large number of compromised machines. Such machines have been increasingly used to launch various security attacks including DDoS, spamming, and identity theft. Two natures of the compromised machines on the Internet&#x2014;sheer volume and wide spread&#x2014;render many existing security countermeasures less effective and defending attacks involving compromised machines extremely hard. On the other hand, identifying and cleaning compromised machines in a network remain a significant challenge for system administrators of networks of all sizes.</p>
<p id="p-0005" num="0004">The subset of compromised machines that are used for sending spam messages are commonly referred to as spam zombies. Given that spamming provides a critical economic incentive for the controllers of the compromised machines to recruit these machines, it has been widely observed that many compromised machines are involved in spamming. A number of recent research efforts have studied the aggregate global characteristics of spamming botnets (networks of compromised machines involved in spamming) such as the size of botnets and the spamming patterns of botnets, based on the sampled spam messages received at a large email service provider.</p>
<p id="p-0006" num="0005">Based on email messages received at a large email service provider, two recent studies (Y. Xie et al. and L. Zhuang et al.) investigated the aggregate global characteristics of spamming botnets including the size of botnets and the spamming patterns of botnets. Y. Xie, F. Xu, K. Achan, R. Panigrahy, G. Hulten, and I. Osipkov, &#x201c;Spamming Botnets: Signatures and Characteristics,&#x201d; in Proc. ACM SIGCOMM, Seattle, Wash. (August 2008); L. Zhuang, J. Dunagan, D. R. Simon, H. J. Wang, I. Osipkov, G. Hulten, and J. D. Tygar, &#x201c;Characterizing Botnets from Email Spam Records,&#x201d; in <i>Proc. of </i>1<i>st Usenix Workshop on Large</i>-<i>Scale Exploits and Emergent Threats</i>, San Francisco, Calif. (April 2008). These studies provided important insights into the aggregate global characteristics of spamming botnets by clustering spam messages received at the provider into spam campaigns using embedded URLs and near-duplicate content clustering, respectively. However, their approaches are better suited for large email service providers to understand the aggregate global characteristics of spamming botnets instead of being deployed by individual networks to detect internal compromised machines. Moreover, their approaches cannot support the online detection requirement in the network environment.</p>
<p id="p-0007" num="0006">Xie, et al. developed an effective tool DBSpam to detect proxy-based spamming activities in a network relying on the packet symmetry property of such activities. M. Xie, H. Yin, and H. Wang, &#x201c;An effective defense against email spam laundering,&#x201d; in <i>ACM Conference on Computer and Communications Security</i>, Alexandria, Va., (Oct. 30, 2006-Nov. 3, 2006). This technique only identifies the spam proxies that translate and forward upstream non-SMTP packets (for example, HTTP) into SMTP commands to downstream mail servers. It does not identify all types of compromised machines involved in spamming.</p>
<p id="p-0008" num="0007">BotHunter, developed by Gu et al., detects compromised machines by correlating the IDS dialog trace in a network. G. Gu, P. Porras, V. Yegneswaran, M. Fong, and W. Lee, &#x201c;BotHunter: Detecting Malware Infection Through IDS-Driven Dialog Correlation,&#x201d; in <i>Proc. </i>16<i>th USENIX Security Symposium</i>, Boston, Mass., (August 2007). It was developed based on the observation that a complete malware infection process has a number of well-defined stages including inbound scanning, exploit usage, egg downloading, outbound bot coordination dialog, and outbound attack propagation. By correlating inbound intrusion alarms with outbound communications patterns, BotHunter can detect the potential infected machines in a network. BotHunter relies on the specifics of the malware infection process and requires support from the network intrusion detection system.</p>
<heading id="h-0004" level="1">SUMMARY</heading>
<p id="p-0009" num="0008">The present invention includes a spam zombie detection system that detects compromised machines by monitoring the outgoing email messages originated or forwarded by machines inside the network. A machine originating or forwarding sufficient email spam messages is flagged as a compromised machine. The monitoring point may be co-located with the mail transfer agent (MTA) server(s) deployed by the network; it may also be located in a machine separated from the MTA servers. In the latter case, MTA servers need to replicate the outgoing messages to the monitoring point, in addition to the regular email deliveries. The present invention also includes a method of examining if a machine has generated sufficient spam messages to be flagged as being compromised.</p>
<p id="p-0010" num="0009">In an embodiment, the method of detecting a compromised machine on a network begins by receiving an email message from a machine on the network. The email message may originate from the machine or the email message may be forwarded by the machine. The email message is then classified as either spam or non-spam. Such classification may be carried out by a spam filter and such a spam filter may be a content-based spam filter. The classification may also be carried out using user feedback. A probability ratio is then updated by applying a sequential probability ratio test (SPRT). The probability ratio is updated according to whether the email message was classified as spam or non-spam. If the probability ratio is greater than or equal to a first predetermined threshold (B), then the status of the machine is indicated as compromised. If the probability ratio is less than or equal to a second predetermined threshold (A), then the status of the machine is indicated as normal and the probability ratio is reset. The operations of receiving an email message, classifying the email message, updating the probability ratio, and indicating the machine is normal or compromised until the probability ratio is greater than or equal to the first predetermined threshold are repeated for a plurality of email messages. Such repeated operations are performed on each of the plurality of email messages one at a time as each of the plurality of email messages is received.</p>
<p id="p-0011" num="0010">The SPRT may use the approximate probability that an email message transmitted by a machine on the network is spam if the computer is compromised and the approximate probability that an email message transmitted by the machine is spam if the computer is not compromised.</p>
<p id="p-0012" num="0011">If the email message is classified as spam, the probability ratio may be updated according to the equation</p>
<p id="p-0013" num="0012">
<maths id="MATH-US-00001" num="00001">
<math overflow="scroll">
<mrow>
  <mrow>
    <msub>
      <mi>&#x39b;</mi>
      <mi>n</mi>
    </msub>
    <mo>+=</mo>
    <mrow>
      <mi>ln</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.3em" height="0.3ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mfrac>
        <msub>
          <mi>&#x3b8;</mi>
          <mn>1</mn>
        </msub>
        <msub>
          <mi>&#x3b8;</mi>
          <mn>0</mn>
        </msub>
      </mfrac>
    </mrow>
  </mrow>
  <mo>,</mo>
</mrow>
</math>
</maths>
<br/>
wherein &#x39b;<sub>n </sub>represents the probability ratio, &#x3b8;<sub>0 </sub>represents the probability that an email message received from a machine on the network is spam given that the machine is not compromised, and &#x3b8;<sub>1 </sub>represents the probability that an email message received from a machine on the network is spam given that the machine is compromised.
</p>
<p id="p-0014" num="0013">If the email message is classified as non-spam, the probability ratio may be updated according to the equation</p>
<p id="p-0015" num="0014">
<maths id="MATH-US-00002" num="00002">
<math overflow="scroll">
<mrow>
  <mrow>
    <msub>
      <mi>&#x39b;</mi>
      <mi>n</mi>
    </msub>
    <mo>+=</mo>
    <mrow>
      <mi>ln</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.3em" height="0.3ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mfrac>
        <mrow>
          <mn>1</mn>
          <mo>-</mo>
          <msub>
            <mi>&#x3b8;</mi>
            <mn>1</mn>
          </msub>
        </mrow>
        <mrow>
          <mn>1</mn>
          <mo>-</mo>
          <msub>
            <mi>&#x3b8;</mi>
            <mn>0</mn>
          </msub>
        </mrow>
      </mfrac>
    </mrow>
  </mrow>
  <mo>,</mo>
</mrow>
</math>
</maths>
<br/>
wherein &#x39b;<sub>n </sub>represents the probability ratio, &#x3b8;<sub>0 </sub>represents the probability that an email message received from a machine on the network is spam given that the machine is not compromised, and &#x3b8;<sub>1 </sub>represents the probability that an email message received from a machine on the network is spam given that the machine is compromised.
</p>
<p id="p-0016" num="0015">The present invention also includes a computer system adapted to detect a compromised machine on a network. The system includes a processor and a tangible memory storage including software instructions that cause the computer system to perform the above-described method of detecting compromised machines on a network.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0017" num="0016">For a fuller understanding of the invention, reference should be made to the following detailed description, taken in connection with the accompanying drawings, in which:</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram illustrating an example network utilizing the spam zombie detection system in accordance with an embodiment of the present invention.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 2A</figref> is an outline of the spam zombie detection method in accordance with an embodiment of the present invention.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 2B</figref> is a flowchart of the spam zombie detection method in accordance with an embodiment of the present invention.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 3</figref> is a graph showing the average number of required observations of an embodiment of spam zombie detection system when H<sub>1 </sub>is true (&#x3b2;=0.01) and &#x3b8;<sub>1</sub>=0.9.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 4</figref> is a graph showing the average number of required observations of an embodiment of spam zombie detection system when H<sub>1 </sub>is true (&#x3b2;=0.01) and &#x3b8;<sub>0</sub>=0.2.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 5</figref> is a table summarizing an email trace conducted in an exemplary deployment of the spam zombie detection system.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 6</figref> is a table showing the classifications of the observed IP addresses.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 7</figref> is a table summarizing the IP addresses sending a virus/worm.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 8</figref> is an illustration of the message clustering process.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 9</figref> is a table showing the performance of an exemplary deployment of the spam zombie detection system.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 10</figref> is a graph showing the number of actual observations that the spam zombie detection system took to detect the compromised machines in an exemplary deployment.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 11</figref> is a graph showing the distribution of spam messages in a cluster in an exemplary deployment of the spam zombie detection system.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 12</figref> is graph showing the distribution of the total messages in a cluster in an exemplary deployment of the spam zombie detection system.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 13</figref> is graph showing the distribution of the cluster duration in an exemplary deployment of the spam zombie detection system.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT</heading>
<p id="p-0032" num="0031">In the following detailed description of the preferred embodiments, reference is made to the accompanying drawings, which form a part hereof, and within which are shown by way of illustration specific embodiments by which the invention may be practiced. It is to be understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the invention.</p>
<p id="p-0033" num="0032">The present invention includes a tool that may be used to automatically detect compromised machines in a network in an online manner. The present invention includes a method of automatically identifying compromised machines in the network as outgoing messages pass the monitoring point sequentially. The approaches developed in previous work cannot be applied here. The locally generated outgoing messages in a network normally cannot provide the aggregate large-scale spam view required by these approaches. Moreover, these approaches cannot support the online detection requirement in the environment considered here.</p>
<p id="p-0034" num="0033">An embodiment of the spam zombie detection system was designed based on a statistical method called Sequential Probability Ratio Test (SPRT), developed by A. Wald in his seminal work, <i>Sequential Analysis</i>, which is herein incorporated by reference. A. Wald, <i>Sequential Analysis</i>, John Wiley &#x26; Sons, Inc (1947). SPRT is a powerful statistical method that can be used to test between two hypotheses (in this case, the machine is compromised vs. the machine is not compromised), as the events (in our case, outgoing messages) occur sequentially. SPRT minimizes the expected number of observations required to reach a decision among all the sequential and non-sequential statistical tests with no greater error rates. This means that the spam zombie detection system can identify a compromised machine quickly. Moreover, both the false positive and false negative probabilities of SPRT can be bounded by user-defined thresholds. Consequently, users of the spam zombie detection system can select the desired thresholds to control the false positive and false negative rates of the system.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 1</figref> illustrates the logical view of example network model <b>100</b>. In this example, messages <b>115</b> originate from machines <b>105</b> inside network <b>110</b> and will pass the deployed spam zombie detection system <b>120</b>. This network model can be achieved in a few different scenarios. First, in order to alleviate the ever-increasing spam volume on the Internet, many ISPs and networks have adopted the policy that all the outgoing messages originated from the network must be relayed by a few designated mail servers in the network. Outgoing email traffic (with destination port number of 25) from all other machines in the network is blocked by edge routers of the network. In this situation, the detection system can be co-located with the designated mail servers in order to examine the outgoing messages. Second, in a network where the aforementioned blocking policy is not adopted, the outgoing email traffic can be replicated and redirected to the spam zombie detection system. The detection system does not need to be on the regular email traffic forwarding path; the system only needs a replicated stream of the outgoing email traffic. Moreover, the spam zombie detection system works even if it cannot observe all outgoing messages. It only requires a reasonably sufficient view of the outgoing messages originated from the network in which it is deployed.</p>
<p id="p-0036" num="0035">A machine in the network is assumed to be either compromised or normal (i.e., not compromised). Here, the focus is on the compromised machines that are involved in spamming. Therefore, the term compromised machine is used to denote a spam zombie and the two terms are used interchangeably. Let X, for i=1, 2, . . . denote the successive observations of a random variable X corresponding to the sequence of messages originated from machine m inside the network. Let X<sub>i</sub>=1 if message i from the machine is a spam, and X<sub>i</sub>=0 otherwise. The detection system assumes that the behavior of a compromised machine is different from that of a normal machine in terms of the messages they send. Specifically, a compromised machine will with a higher probability generate a spam message than a normal machine. Formally,
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>Pr</i>(<i>X</i><sub>i</sub>=1<i>|H</i><sub>1</sub>)&#x3e;<i>Pr</i>(<i>X</i><sub>i</sub>=1<i>|H</i><sub>0</sub>),&#x2003;&#x2003;(1)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where H<sub>1 </sub>denotes that machine m is compromised and H<sub>0 </sub>denotes that the machine is normal.
</p>
<p id="p-0037" num="0036">The sending machine, as observed by the spam zombie detection system, may be any machine that generates or forwards email. Such machines may include, for example, end-user client machines or mail relay servers. A mechanism to classify messages as either spam or non-spam is also deployed on the network either at the spam zombie detection system or in communication with it. Such a mechanism may be a spam filter. In an exemplary embodiment the spam filter is a content-based spam filter. The spam filter does not need to be perfect in terms of the false positive rate and the false negative rate. An increasing number of networks have started filtering outgoing messages in recent years.</p>
<p id="p-0038" num="0037">In its simplest form, SPRT is a statistical method for testing a simple null hypothesis against a single alternative hypothesis. Intuitively, SPRT can be considered as a one-dimensional random walk with two user-specified boundaries corresponding to the two hypotheses. As the samples of the concerned random variable arrive sequentially, the walk moves either upward or downward one step, depending on the value of the observed sample. When the walk hits or crosses either of the boundaries for the first time, the walk terminates and the corresponding hypothesis is selected. In essence, SPRT is a variant of the traditional probability ratio tests for testing under what distribution (or with what distribution parameters) it is more likely to have the observed samples. However, unlike traditional probability ratio tests that require a pre-defined number of observations, SPRT works in an online manner and updates as samples arrive sequentially. Once sufficient evidence for drawing a conclusion is obtained, SPRT terminates.</p>
<p id="p-0039" num="0038">In SPRT, both the actual false positive and false negative probabilities of SPRT can be bounded by the user-specified error rates. This means that users of SPRT can pre-specify the desired error rates. A smaller error rate tends to require a larger number of observations before SPRT terminates. Thus users can balance the performance and cost of an SPRT test. Second, SPRT minimizes the average number of the required observations for reaching a decision for a given error rate, among all sequential and non-sequential statistical tests. This means that SPRT can quickly reach a conclusion to reduce the cost of the corresponding experiment, without incurring a higher error rate. The formal definition and a number of properties of SPRT are presented below.</p>
<p id="p-0040" num="0039">Let X denote a Bernoulli random variable under consideration with an unknown parameter &#x3b8;, and X<sub>1</sub>, X<sub>2</sub>, . . . the successive observations on X. As discussed above, SPRT is used for testing a simple hypothesis H<sub>0 </sub>that &#x3b8;=&#x3b8;<sub>0 </sub>against a single alternative H<sub>1 </sub>that &#x3b8;=&#x3b8;<sub>1</sub>. That is,
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>Pr</i>(<i>X</i><sub>i</sub>=1|<i>H</i><sub>0</sub>)=1<i>&#x2212;Pr</i>(<i>X</i><sub>i</sub>=0|<i>H</i><sub>0</sub>)=&#x3b8;<sub>0 </sub><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>Pr</i>(<i>X</i><sub>i</sub>=1|<i>H</i><sub>1</sub>)=1<i>&#x2212;Pr</i>(<i>X</i><sub>i</sub>=0<i>|H</i><sub>1</sub>)=&#x3b8;<sub>1</sub>.<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0041" num="0040">To ease exposition and practical computation, the logarithm of the probability ratio is computed instead of the probability ratio in the description of SPRT. For any positive integer n=1, 2, . . . , define</p>
<p id="p-0042" num="0041">
<maths id="MATH-US-00003" num="00003">
<math overflow="scroll">
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <msub>
          <mi>&#x39b;</mi>
          <mi>n</mi>
        </msub>
        <mo>=</mo>
        <mrow>
          <mi>ln</mi>
          <mo>&#x2062;</mo>
          <mstyle>
            <mspace width="0.3em" height="0.3ex"/>
          </mstyle>
          <mo>&#x2062;</mo>
          <mfrac>
            <mrow>
              <mi>Pr</mi>
              <mo>&#x2061;</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <msub>
                    <mi>X</mi>
                    <mn>1</mn>
                  </msub>
                  <mo>,</mo>
                  <msub>
                    <mi>X</mi>
                    <mn>2</mn>
                  </msub>
                  <mo>,</mo>
                  <mi>&#x2026;</mi>
                  <mo>&#x2062;</mo>
                  <mstyle>
                    <mspace width="0.8em" height="0.8ex"/>
                  </mstyle>
                  <mo>,</mo>
                  <mrow>
                    <msub>
                      <mi>X</mi>
                      <mi>n</mi>
                    </msub>
                    <mo>&#x2062;</mo>
                    <mstyle>
                      <mtext>|</mtext>
                    </mstyle>
                    <mo>&#x2062;</mo>
                    <msub>
                      <mi>H</mi>
                      <mn>1</mn>
                    </msub>
                  </mrow>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mrow>
              <mi>Pr</mi>
              <mo>&#x2061;</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <msub>
                    <mi>X</mi>
                    <mn>1</mn>
                  </msub>
                  <mo>,</mo>
                  <msub>
                    <mi>X</mi>
                    <mn>2</mn>
                  </msub>
                  <mo>,</mo>
                  <mi>&#x2026;</mi>
                  <mo>&#x2062;</mo>
                  <mstyle>
                    <mspace width="0.8em" height="0.8ex"/>
                  </mstyle>
                  <mo>,</mo>
                  <mrow>
                    <msub>
                      <mi>X</mi>
                      <mi>n</mi>
                    </msub>
                    <mo>&#x2062;</mo>
                    <mstyle>
                      <mtext>|</mtext>
                    </mstyle>
                    <mo>&#x2062;</mo>
                    <msub>
                      <mi>H</mi>
                      <mn>0</mn>
                    </msub>
                  </mrow>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
          </mfrac>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>2</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
</maths>
</p>
<p id="p-0043" num="0042">If it is assumed that X<sub>i</sub>'s are independent (and identically distributed), then</p>
<p id="p-0044" num="0043">
<maths id="MATH-US-00004" num="00004">
<math overflow="scroll">
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <msub>
          <mi>&#x39b;</mi>
          <mi>n</mi>
        </msub>
        <mo>=</mo>
        <mrow>
          <mrow>
            <mi>ln</mi>
            <mo>&#x2062;</mo>
            <mstyle>
              <mspace width="0.3em" height="0.3ex"/>
            </mstyle>
            <mo>&#x2062;</mo>
            <mfrac>
              <mrow>
                <munderover>
                  <mo>&#x220f;</mo>
                  <mn>1</mn>
                  <mi>n</mi>
                </munderover>
                <mo>&#x2062;</mo>
                <mstyle>
                  <mspace width="0.3em" height="0.3ex"/>
                </mstyle>
                <mo>&#x2062;</mo>
                <mrow>
                  <mi>Pr</mi>
                  <mo>&#x2061;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mrow>
                      <msub>
                        <mi>X</mi>
                        <mi>i</mi>
                      </msub>
                      <mo>&#x2062;</mo>
                      <mstyle>
                        <mtext>|</mtext>
                      </mstyle>
                      <mo>&#x2062;</mo>
                      <msub>
                        <mi>H</mi>
                        <mn>1</mn>
                      </msub>
                    </mrow>
                    <mo>)</mo>
                  </mrow>
                </mrow>
              </mrow>
              <mrow>
                <munderover>
                  <mo>&#x220f;</mo>
                  <mn>1</mn>
                  <mi>n</mi>
                </munderover>
                <mo>&#x2062;</mo>
                <mstyle>
                  <mspace width="0.3em" height="0.3ex"/>
                </mstyle>
                <mo>&#x2062;</mo>
                <mrow>
                  <mi>Pr</mi>
                  <mo>&#x2061;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mrow>
                      <msub>
                        <mi>X</mi>
                        <mi>i</mi>
                      </msub>
                      <mo>&#x2062;</mo>
                      <mstyle>
                        <mtext>|</mtext>
                      </mstyle>
                      <mo>&#x2062;</mo>
                      <msub>
                        <mi>H</mi>
                        <mn>0</mn>
                      </msub>
                    </mrow>
                    <mo>)</mo>
                  </mrow>
                </mrow>
              </mrow>
            </mfrac>
          </mrow>
          <mo>=</mo>
          <mrow>
            <mrow>
              <munderover>
                <mo>&#x2211;</mo>
                <mrow>
                  <mi>i</mi>
                  <mo>=</mo>
                  <mn>1</mn>
                </mrow>
                <mi>n</mi>
              </munderover>
              <mo>&#x2062;</mo>
              <mrow>
                <mi>ln</mi>
                <mo>&#x2062;</mo>
                <mstyle>
                  <mspace width="0.3em" height="0.3ex"/>
                </mstyle>
                <mo>&#x2062;</mo>
                <mfrac>
                  <mrow>
                    <mi>Pr</mi>
                    <mo>&#x2061;</mo>
                    <mrow>
                      <mo>(</mo>
                      <mrow>
                        <msub>
                          <mi>X</mi>
                          <mi>i</mi>
                        </msub>
                        <mo>&#x2062;</mo>
                        <mstyle>
                          <mtext>|</mtext>
                        </mstyle>
                        <mo>&#x2062;</mo>
                        <msub>
                          <mi>H</mi>
                          <mn>1</mn>
                        </msub>
                      </mrow>
                      <mo>)</mo>
                    </mrow>
                  </mrow>
                  <mrow>
                    <mi>Pr</mi>
                    <mo>&#x2061;</mo>
                    <mrow>
                      <mo>(</mo>
                      <mrow>
                        <msub>
                          <mi>X</mi>
                          <mi>i</mi>
                        </msub>
                        <mo>&#x2062;</mo>
                        <mstyle>
                          <mtext>|</mtext>
                        </mstyle>
                        <mo>&#x2062;</mo>
                        <msub>
                          <mi>H</mi>
                          <mn>0</mn>
                        </msub>
                      </mrow>
                      <mo>)</mo>
                    </mrow>
                  </mrow>
                </mfrac>
              </mrow>
            </mrow>
            <mo>=</mo>
            <mrow>
              <munderover>
                <mo>&#x2211;</mo>
                <mrow>
                  <mi>i</mi>
                  <mo>=</mo>
                  <mn>1</mn>
                </mrow>
                <mi>n</mi>
              </munderover>
              <mo>&#x2062;</mo>
              <msub>
                <mi>Z</mi>
                <mi>i</mi>
              </msub>
            </mrow>
          </mrow>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>3</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
</maths>
<br/>
where
</p>
<p id="p-0045" num="0044">
<maths id="MATH-US-00005" num="00005">
<math overflow="scroll">
<mrow>
  <mrow>
    <msub>
      <mi>Z</mi>
      <mi>i</mi>
    </msub>
    <mo>=</mo>
    <mrow>
      <mi>ln</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.3em" height="0.3ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mfrac>
        <mrow>
          <mi>Pr</mi>
          <mo>&#x2061;</mo>
          <mrow>
            <mo>(</mo>
            <mrow>
              <msub>
                <mi>X</mi>
                <mi>i</mi>
              </msub>
              <mo>&#x2062;</mo>
              <mstyle>
                <mtext>|</mtext>
              </mstyle>
              <mo>&#x2062;</mo>
              <msub>
                <mi>H</mi>
                <mn>1</mn>
              </msub>
            </mrow>
            <mo>)</mo>
          </mrow>
        </mrow>
        <mrow>
          <mi>Pr</mi>
          <mo>&#x2061;</mo>
          <mrow>
            <mo>(</mo>
            <mrow>
              <msub>
                <mi>X</mi>
                <mi>i</mi>
              </msub>
              <mo>&#x2062;</mo>
              <mstyle>
                <mtext>|</mtext>
              </mstyle>
              <mo>&#x2062;</mo>
              <msub>
                <mi>H</mi>
                <mn>0</mn>
              </msub>
            </mrow>
            <mo>)</mo>
          </mrow>
        </mrow>
      </mfrac>
    </mrow>
  </mrow>
  <mo>,</mo>
</mrow>
</math>
</maths>
<br/>
which can be considered as the step in the random walk represented by &#x39b;. When the observation is one (X<sub>i</sub>=1), the constant
</p>
<p id="p-0046" num="0045">
<maths id="MATH-US-00006" num="00006">
<math overflow="scroll">
<mrow>
  <mi>ln</mi>
  <mo>&#x2062;</mo>
  <mstyle>
    <mspace width="0.3em" height="0.3ex"/>
  </mstyle>
  <mo>&#x2062;</mo>
  <mfrac>
    <msub>
      <mi>&#x3b8;</mi>
      <mn>1</mn>
    </msub>
    <msub>
      <mi>&#x3b8;</mi>
      <mn>0</mn>
    </msub>
  </mfrac>
</mrow>
</math>
</maths>
<br/>
is added to the preceding value of &#x39b;. When the observation is zero (X<sub>i</sub>=0), the constant
</p>
<p id="p-0047" num="0046">
<maths id="MATH-US-00007" num="00007">
<math overflow="scroll">
<mrow>
  <mi>ln</mi>
  <mo>&#x2062;</mo>
  <mstyle>
    <mspace width="0.3em" height="0.3ex"/>
  </mstyle>
  <mo>&#x2062;</mo>
  <mfrac>
    <mrow>
      <mn>1</mn>
      <mo>-</mo>
      <msub>
        <mi>&#x3b8;</mi>
        <mn>1</mn>
      </msub>
    </mrow>
    <mrow>
      <mn>1</mn>
      <mo>-</mo>
      <msub>
        <mi>&#x3b8;</mi>
        <mn>0</mn>
      </msub>
    </mrow>
  </mfrac>
</mrow>
</math>
</maths>
<br/>
is added.
</p>
<p id="p-0048" num="0047">The Sequential Probability Ratio Test (SPRT) for testing H<sub>0 </sub>against H<sub>1 </sub>is then defined as follows. Given two user-specified constants A and B where A&#x3c;B, at each stage n of the Bernoulli experiment, the value of &#x39b;<sub>n </sub>is computed as in Eq. (3), then
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>&#x39b;<sub>n</sub><i>&#x2266;A</i><img id="CUSTOM-CHARACTER-00001" he="3.13mm" wi="3.56mm" file="US08626861-20140107-P00001.TIF" alt="custom character" img-content="character" img-format="tif"/>accept <i>H</i><sub>0 </sub>and terminate test,<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>&#x39b;<sub>n</sub><i>&#x2267;B</i><img id="CUSTOM-CHARACTER-00002" he="3.13mm" wi="3.56mm" file="US08626861-20140107-P00001.TIF" alt="custom character" img-content="character" img-format="tif"/>accept <i>H</i><sub>1 </sub>and terminate test,<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>&#x39b;&#x3c;&#x39b;<sub>n</sub><i>&#x3c;B</i><img id="CUSTOM-CHARACTER-00003" he="3.13mm" wi="3.56mm" file="US08626861-20140107-P00001.TIF" alt="custom character" img-content="character" img-format="tif"/>take an additional observation.&#x2003;&#x2003;(4)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0049" num="0048">In the following a number of important properties of SPRT are described. If H<sub>1 </sub>is considered as a detection and H<sub>0 </sub>as a normality, an SPRT process may result in two types of errors: false positive, where H<sub>0 </sub>is true but SPRT accepts H<sub>1</sub>, and false negative, where H<sub>1 </sub>is true but SPRT accepts H<sub>0</sub>. Let &#x3b1; and &#x3b2; denote the user-desired false positive and false negative probabilities, respectively. Some fundamental relations exist among &#x3b1;, &#x3b2;, A, and B,</p>
<p id="p-0050" num="0049">
<maths id="MATH-US-00008" num="00008">
<math overflow="scroll">
<mrow>
  <mrow>
    <mi>A</mi>
    <mo>&#x2265;</mo>
    <mrow>
      <mi>ln</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.3em" height="0.3ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mfrac>
        <mi>&#x3b2;</mi>
        <mrow>
          <mn>1</mn>
          <mo>-</mo>
          <mi>&#x3b1;</mi>
        </mrow>
      </mfrac>
    </mrow>
  </mrow>
  <mo>,</mo>
  <mrow>
    <mi>B</mi>
    <mo>&#x2264;</mo>
    <mrow>
      <mi>ln</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.3em" height="0.3ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mfrac>
        <mrow>
          <mn>1</mn>
          <mo>-</mo>
          <mi>&#x3b2;</mi>
        </mrow>
        <mi>&#x3b1;</mi>
      </mfrac>
    </mrow>
  </mrow>
  <mo>,</mo>
</mrow>
</math>
</maths>
<br/>
for most practical purposes, the equality can be taken, that is,
</p>
<p id="p-0051" num="0050">
<maths id="MATH-US-00009" num="00009">
<math overflow="scroll">
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <mi>A</mi>
          <mo>=</mo>
          <mrow>
            <mi>ln</mi>
            <mo>&#x2062;</mo>
            <mstyle>
              <mspace width="0.3em" height="0.3ex"/>
            </mstyle>
            <mo>&#x2062;</mo>
            <mfrac>
              <mi>&#x3b2;</mi>
              <mrow>
                <mn>1</mn>
                <mo>-</mo>
                <mi>&#x3b1;</mi>
              </mrow>
            </mfrac>
          </mrow>
        </mrow>
        <mo>,</mo>
        <mrow>
          <mi>B</mi>
          <mo>=</mo>
          <mrow>
            <mi>ln</mi>
            <mo>&#x2062;</mo>
            <mstyle>
              <mspace width="0.3em" height="0.3ex"/>
            </mstyle>
            <mo>&#x2062;</mo>
            <mfrac>
              <mrow>
                <mn>1</mn>
                <mo>-</mo>
                <mi>&#x3b2;</mi>
              </mrow>
              <mi>&#x3b1;</mi>
            </mfrac>
          </mrow>
        </mrow>
        <mo>,</mo>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>5</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
</maths>
</p>
<p id="p-0052" num="0051">This only slightly affects the actual error rates. Formally, let &#x3b1;&#x2032; and &#x3b2;&#x2032; represent the actual false positive rate and the actual false negative rate, respectively, and let A and B be computed using Eq. (5), then the following relations hold,</p>
<p id="p-0053" num="0052">
<maths id="MATH-US-00010" num="00010">
<math overflow="scroll">
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <msup>
            <mi>&#x3b1;</mi>
            <mi>&#x2032;</mi>
          </msup>
          <mo>&#x2264;</mo>
          <mrow>
            <mfrac>
              <mi>&#x3b1;</mi>
              <mrow>
                <mn>1</mn>
                <mo>-</mo>
                <mi>&#x3b2;</mi>
              </mrow>
            </mfrac>
            <mo>&#x2062;</mo>
            <mstyle>
              <mspace width="0.8em" height="0.8ex"/>
            </mstyle>
            <mo>&#x2062;</mo>
            <mi>and</mi>
            <mo>&#x2062;</mo>
            <mstyle>
              <mspace width="0.8em" height="0.8ex"/>
            </mstyle>
            <mo>&#x2062;</mo>
            <msup>
              <mi>&#x3b2;</mi>
              <mi>&#x2032;</mi>
            </msup>
          </mrow>
          <mo>&#x2264;</mo>
          <mfrac>
            <mi>&#x3b2;</mi>
            <mrow>
              <mn>1</mn>
              <mo>-</mo>
              <mi>&#x3b1;</mi>
            </mrow>
          </mfrac>
        </mrow>
        <mo>&#x2062;</mo>
        <mstyle>
          <mtext>
</mtext>
        </mstyle>
        <mo>&#x2062;</mo>
        <mi>and</mi>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>6</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <msup>
            <mi>&#x3b1;</mi>
            <mi>&#x2032;</mi>
          </msup>
          <mo>+</mo>
          <msup>
            <mi>&#x3b2;</mi>
            <mi>&#x2032;</mi>
          </msup>
        </mrow>
        <mo>&#x2264;</mo>
        <mrow>
          <mi>&#x3b1;</mi>
          <mo>+</mo>
          <mrow>
            <mi>&#x3b2;</mi>
            <mo>.</mo>
          </mrow>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>7</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
</maths>
</p>
<p id="p-0054" num="0053">Eqs. (6) and (7) provide important bounds for &#x3b1;&#x2032; and &#x3b2;&#x2032;. In all practical applications, the desired false positive and false negative rates will be small, for example, in the range from 0.01 to 0.05. In these cases,</p>
<p id="p-0055" num="0054">
<maths id="MATH-US-00011" num="00011">
<math overflow="scroll">
<mrow>
  <mfrac>
    <mi>&#x3b1;</mi>
    <mrow>
      <mn>1</mn>
      <mo>-</mo>
      <mi>&#x3b2;</mi>
    </mrow>
  </mfrac>
  <mo>&#x2062;</mo>
  <mstyle>
    <mspace width="0.8em" height="0.8ex"/>
  </mstyle>
  <mo>&#x2062;</mo>
  <mi>and</mi>
  <mo>&#x2062;</mo>
  <mstyle>
    <mspace width="0.8em" height="0.8ex"/>
  </mstyle>
  <mo>&#x2062;</mo>
  <mfrac>
    <mi>&#x3b2;</mi>
    <mrow>
      <mn>1</mn>
      <mo>-</mo>
      <mi>&#x3b1;</mi>
    </mrow>
  </mfrac>
</mrow>
</math>
</maths>
<br/>
very closely equal the desired &#x3b1; and &#x3b2;, respectively. In addition, Eq. (7) specifies that the actual false positive rate and the false negative rate cannot be both larger than the corresponding desired error rate in a given experiment. Therefore, in all practical applications, the boundaries A and B can be computed using Eq. (5). This will provide at least the same protection against errors as if the precise values of A and B were used for a given pair of desired error rates. The precise values of A and B are difficult to obtain.
</p>
<p id="p-0056" num="0055">Another property of SPRT is the number of observations, N, required before SPRT reaches a decision. The following two equations approximate the average number of observations required when H<sub>1 </sub>and H<sub>0 </sub>are true, respectively.</p>
<p id="p-0057" num="0056">
<maths id="MATH-US-00012" num="00012">
<math overflow="scroll">
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <mi>E</mi>
          <mo>&#x2061;</mo>
          <mrow>
            <mo>[</mo>
            <mrow>
              <mi>N</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mtext>|</mtext>
              </mstyle>
              <mo>&#x2062;</mo>
              <msub>
                <mi>H</mi>
                <mn>1</mn>
              </msub>
            </mrow>
            <mo>]</mo>
          </mrow>
        </mrow>
        <mo>=</mo>
        <mfrac>
          <mrow>
            <mrow>
              <mi>&#x3b2;</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.3em" height="0.3ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>ln</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.3em" height="0.3ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mfrac>
                <mi>&#x3b2;</mi>
                <mrow>
                  <mn>1</mn>
                  <mo>-</mo>
                  <mi>&#x3b1;</mi>
                </mrow>
              </mfrac>
            </mrow>
            <mo>+</mo>
            <mrow>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mn>1</mn>
                  <mo>-</mo>
                  <mi>&#x3b2;</mi>
                </mrow>
                <mo>)</mo>
              </mrow>
              <mo>&#x2062;</mo>
              <mi>ln</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.3em" height="0.3ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mfrac>
                <mrow>
                  <mn>1</mn>
                  <mo>-</mo>
                  <mi>&#x3b2;</mi>
                </mrow>
                <mi>&#x3b1;</mi>
              </mfrac>
            </mrow>
          </mrow>
          <mrow>
            <mrow>
              <msub>
                <mi>&#x3b8;</mi>
                <mn>1</mn>
              </msub>
              <mo>&#x2062;</mo>
              <mi>ln</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.3em" height="0.3ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mfrac>
                <msub>
                  <mi>&#x3b8;</mi>
                  <mn>1</mn>
                </msub>
                <msub>
                  <mi>&#x3b8;</mi>
                  <mn>0</mn>
                </msub>
              </mfrac>
            </mrow>
            <mo>+</mo>
            <mrow>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mn>1</mn>
                  <mo>-</mo>
                  <msub>
                    <mi>&#x3b8;</mi>
                    <mn>1</mn>
                  </msub>
                </mrow>
                <mo>)</mo>
              </mrow>
              <mo>&#x2062;</mo>
              <mi>ln</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.3em" height="0.3ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mfrac>
                <mrow>
                  <mn>1</mn>
                  <mo>-</mo>
                  <msub>
                    <mi>&#x3b8;</mi>
                    <mn>1</mn>
                  </msub>
                </mrow>
                <mrow>
                  <mn>1</mn>
                  <mo>-</mo>
                  <msub>
                    <mi>&#x3b8;</mi>
                    <mn>0</mn>
                  </msub>
                </mrow>
              </mfrac>
            </mrow>
          </mrow>
        </mfrac>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>8</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <mi>E</mi>
          <mo>&#x2061;</mo>
          <mrow>
            <mo>[</mo>
            <mrow>
              <mi>N</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mtext>|</mtext>
              </mstyle>
              <mo>&#x2062;</mo>
              <msub>
                <mi>H</mi>
                <mn>0</mn>
              </msub>
            </mrow>
            <mo>]</mo>
          </mrow>
        </mrow>
        <mo>=</mo>
        <mfrac>
          <mrow>
            <mrow>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mn>1</mn>
                  <mo>-</mo>
                  <mi>&#x3b1;</mi>
                </mrow>
                <mo>)</mo>
              </mrow>
              <mo>&#x2062;</mo>
              <mi>ln</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.3em" height="0.3ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mfrac>
                <mi>&#x3b2;</mi>
                <mrow>
                  <mn>1</mn>
                  <mo>-</mo>
                  <mi>&#x3b1;</mi>
                </mrow>
              </mfrac>
            </mrow>
            <mo>+</mo>
            <mrow>
              <mi>&#x3b1;</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.3em" height="0.3ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mi>ln</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.3em" height="0.3ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mfrac>
                <mrow>
                  <mn>1</mn>
                  <mo>-</mo>
                  <mi>&#x3b2;</mi>
                </mrow>
                <mi>&#x3b1;</mi>
              </mfrac>
            </mrow>
          </mrow>
          <mrow>
            <mrow>
              <msub>
                <mi>&#x3b8;</mi>
                <mn>1</mn>
              </msub>
              <mo>&#x2062;</mo>
              <mi>ln</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.3em" height="0.3ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mfrac>
                <msub>
                  <mi>&#x3b8;</mi>
                  <mn>1</mn>
                </msub>
                <msub>
                  <mi>&#x3b8;</mi>
                  <mn>0</mn>
                </msub>
              </mfrac>
            </mrow>
            <mo>+</mo>
            <mrow>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mn>1</mn>
                  <mo>-</mo>
                  <msub>
                    <mi>&#x3b8;</mi>
                    <mn>1</mn>
                  </msub>
                </mrow>
                <mo>)</mo>
              </mrow>
              <mo>&#x2062;</mo>
              <mi>ln</mi>
              <mo>&#x2062;</mo>
              <mstyle>
                <mspace width="0.3em" height="0.3ex"/>
              </mstyle>
              <mo>&#x2062;</mo>
              <mfrac>
                <mrow>
                  <mn>1</mn>
                  <mo>-</mo>
                  <msub>
                    <mi>&#x3b8;</mi>
                    <mn>1</mn>
                  </msub>
                </mrow>
                <mrow>
                  <mn>1</mn>
                  <mo>-</mo>
                  <msub>
                    <mi>&#x3b8;</mi>
                    <mn>0</mn>
                  </msub>
                </mrow>
              </mfrac>
            </mrow>
          </mrow>
        </mfrac>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>9</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
</maths>
</p>
<p id="p-0058" num="0057">As shown in the above equations, the average number of required observations when H<sub>1 </sub>or H<sub>0 </sub>is true depends on four parameters: the desired false positive and negative rates (&#x3b1; and &#x3b2;), and the distribution parameters &#x3b2;<sub>1 </sub>and &#x3b8;<sub>0 </sub>for hypotheses H<sub>1 </sub>and H<sub>0</sub>, respectively. SPRT does not require the precise knowledge of the distribution parameters &#x3b8;<sub>1 </sub>and &#x3b8;<sub>0</sub>. As long as the true distribution of the underlying random variable is sufficiently close to one of hypotheses compared to another (that is, &#x3b8; is closer to either &#x3b8;<sub>1 </sub>or &#x3b8;<sub>0</sub>), SPRT will terminate with the bounded error rates. An imprecise knowledge of &#x3b8;<sub>1 </sub>and &#x3b8;<sub>0 </sub>will only affect the number of required observations for SPRT to reach a decision.</p>
<p id="p-0059" num="0058">In an embodiment, H<sub>1 </sub>represents a detection and H<sub>0 </sub>represents a normality. That is, H<sub>1 </sub>is true if the concerned machine is compromised, and H<sub>o </sub>is true if it is not compromised. In addition, X<sub>i</sub>=1 if the ith message from the concerned machine in the network is a spam, and X<sub>i</sub>=0 otherwise. Recall that SPRT requires four configurable parameters from users, namely, the desired false positive probability &#x3b1;, the desired false negative probability &#x3b2;, the probability that a message is a spam when H<sub>1 </sub>is true (&#x3b8;<sub>1</sub>), and the probability that a message is a spam when H<sub>0 </sub>is true (&#x3b8;<sub>0</sub>). How these values can be configured is discussed below. Based on the user-specified values of &#x3b1; and &#x3b2;, the values of the two boundaries A and B of SPRT are computed using Eq. (5).</p>
<p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. 2A</figref> outlines the steps of a method of detecting compromised computers (spam zombies) in a network according to an embodiment of the present invention. <figref idref="DRAWINGS">FIG. 2B</figref> is a flowchart of the method. When an outgoing message arrives at the spam zombie detection system (<figref idref="DRAWINGS">FIG. 2A</figref>: line <b>1</b>; <figref idref="DRAWINGS">FIG. 2B</figref>: operation <b>205</b>), the sending machine's IP address is recorded (<figref idref="DRAWINGS">FIG. 2A</figref>: line <b>2</b>), and the message is classified as either spam or non-spam (<figref idref="DRAWINGS">FIG. 2A</figref>: line <b>5</b>; <figref idref="DRAWINGS">FIG. 2B</figref>: operation <b>210</b>). Such classification may be achieved by using a spam filter. The spam filter may be a content-based spam filter. For each observed IP address, the spam zombie detection system maintains the logarithm value of the corresponding probability ratio &#x39b;<sub>n</sub>, whose value is updated according to Eq. (3) as message n arrives from the IP address (<figref idref="DRAWINGS">FIG. 2A</figref>: lines <b>6</b> to <b>12</b>; <figref idref="DRAWINGS">FIG. 2B</figref>: operations <b>220</b> and <b>225</b>). Based on the relationship between &#x39b;<sub>n </sub>and B (<figref idref="DRAWINGS">FIG. 2A</figref>: line <b>15</b>; <figref idref="DRAWINGS">FIG. 2B</figref>: operation <b>230</b>) and the relationship between &#x39b;<sub>n </sub>and A (<figref idref="DRAWINGS">FIG. 2A</figref>: line <b>13</b>; <figref idref="DRAWINGS">FIG. 2B</figref>: operation <b>240</b>), the method determines if the corresponding machine is compromised (<figref idref="DRAWINGS">FIG. 2A</figref>: line <b>14</b>; <figref idref="DRAWINGS">FIG. 2B</figref>: operation <b>235</b>), normal (<figref idref="DRAWINGS">FIG. 2A</figref>: line <b>16</b>; <figref idref="DRAWINGS">FIG. 2B</figref>: operation <b>245</b>), or a decision cannot be reached (<figref idref="DRAWINGS">FIG. 2A</figref>: line <b>20</b>; <figref idref="DRAWINGS">FIG. 2B</figref>: operation <b>250</b>). If the machine is found to be compromised, the method terminates for that machine; however new iterations of the method may continue for other machines in the network. If the machine is found to be normal, the probability ratio &#x39b;<sub>n </sub>is reset (<figref idref="DRAWINGS">FIG. 2A</figref>: line <b>17</b>; <figref idref="DRAWINGS">FIG. 2B</figref>: operation <b>245</b>) and the method repeats for newly received emails (<figref idref="DRAWINGS">FIG. 2A</figref>: line <b>18</b>; <figref idref="DRAWINGS">FIG. 2B</figref>: operation <b>250</b>). If a decision could not be reached, then the method repeats for newly received emails (<figref idref="DRAWINGS">FIG. 2A</figref>: line <b>20</b>; <figref idref="DRAWINGS">FIG. 2B</figref>: operation <b>250</b>). The method receives and operates on emails in a sequential manner.</p>
<p id="p-0061" num="0060">In the context of spam zombie detection, from the viewpoint of network monitoring, it is more important to identify the machines that have been compromised than the machines that are normal. After a machine is identified as being compromised (FIG. <b>2</b>A: lines <b>13</b> and <b>14</b>), it can be added into the list of potentially compromised machines that system administrators can go after to clean. The message-sending behavior of the machine may also be recorded should further analysis be required. Before the machine is cleaned and removed from the list, the spam zombie detection system does not need to further monitor the message sending behavior of the machine.</p>
<p id="p-0062" num="0061">On the other hand, a machine that is currently normal may get compromised at a later time. Therefore, machines that are found to be normal may be continuously monitored by the spam zombie detection system. Once such a machine is identified by the spam zombie detection system, the records of the machine in the spam zombie detection system are re-set, in particular, the value of &#x39b;<sub>n </sub>is set to zero, so that a new monitoring phase starts for the machine (<figref idref="DRAWINGS">FIG. 2A</figref>: lines <b>15</b> to <b>18</b>).</p>
<p id="p-0063" num="0062">The spam zombie detection system uses four user-defined parameters: &#x3b1;, &#x3b2;, &#x3b8;<sub>1</sub>, and &#x3b8;<sub>0</sub>. As discussed above, &#x3b1; and &#x3b2; are normally small values in the range from 0.01 to 0.05, which users can easily specify independent of the behaviors of the compromised and normal machines in the network.</p>
<p id="p-0064" num="0063">Ideally, &#x3b8;<sub>1 </sub>and &#x3b8;<sub>0 </sub>should indicate the true probability of a message being spam from a compromised machine and a normal machine, respectively. However, as discussed previously, &#x3b8;<sub>1 </sub>and &#x3b8;<sub>0 </sub>do not need to accurately model the behaviors of the two types of machines. Instead, as long as the true distribution is closer to one of them than another, SPRT can reach a conclusion with the desired error rates. Inaccurate values assigned to these parameters will only affect the number of observations required by the method to terminate. Moreover, the spam zombie detection system may rely on a (content-based) spam filter to classify an outgoing message into either spam or non-spam. In practice, &#x3b8;<sub>1 </sub>and &#x3b8;<sub>0 </sub>should model the detection rate and the false positive rate of the employed spam filter, respectively. Note that all of the widely-used spam filters have a high detection rate and low false positive rate.</p>
<p id="p-0065" num="0064"><figref idref="DRAWINGS">FIGS. 3 and 4</figref> are graphs showing the average number of required observations for SPRT to reach a decision. <figref idref="DRAWINGS">FIGS. 3 and 4</figref> show the value of E[N|H<sub>1</sub>] as a function of &#x3b8;<sub>0 </sub>and &#x3b8;<sub>1</sub>, respectively, for different desired false positive rates. In the figures the false negative rate is set as &#x3b2;=0.01. In <figref idref="DRAWINGS">FIG. 3</figref>, the probability of a message being spam when H<sub>1 </sub>is true is assumed to be 0.9 (&#x3b8;<sub>1</sub>=0.9). That is, the corresponding spam filter is assumed to have a 90% detection rate. As shown in the figure, it only takes a small number of observations for SPRT to reach a decision. For example, when &#x3b8;<sub>0</sub>=0.2 (the spam filter has a 20% false positive rate), SPRT requires about three observations to detect that the machine is compromised if the desired false positive rate is 0.01. As the behavior of a normal machine gets closer to that of compromised machine (or rather, the false positive rate of the spam filter increases), i.e., &#x3b8;<sub>0 </sub>increases, a slightly higher number of observations are required for SPRT to reach a detection.</p>
<p id="p-0066" num="0065">In <figref idref="DRAWINGS">FIG. 4</figref>, the probability of a message being spam from a normal machine is assumed to be 0.2 (&#x3b8;<sub>0</sub>=0.2). That is, the corresponding spam filter has a false positive rate of 20%. As shown in the figure, it also only takes a small number of observations for SPRT to reach a decision. As the behavior of a compromised machine gets closer to that of a normal machine (or rather, the detection rate of the spam filter decreases), i.e., &#x3b8;<sub>1 </sub>decreases, a higher number of observations are required for SPRT to reach a detection.</p>
<p id="p-0067" num="0066">As shown in <figref idref="DRAWINGS">FIGS. 3 and 4</figref>, as the desired false positive rate decreases, SPRT needs a higher number of observations to reach a conclusion. The same observation applies to the desired false negative rate. These observations illustrate the trade-offs between the desired performance of SPRT and the cost of the method. In the above discussion, the average number of required observations when H<sub>1 </sub>is true are only shown because a user is likely more interested in the speed of the spam zombie detection system in detecting compromised machines. The study on E[N|H<sub>0</sub>] shows a similar trend (not shown).</p>
<p id="p-0068" num="0067">To ease exposition it was assumed that a sending machine m (<figref idref="DRAWINGS">FIG. 1</figref>) is an end-user client machine. In practice, a network may have multiple subdomains and each has its own mail servers. A message may be forwarded by a number of mail relay servers before leaving the network. The spam zombie detection system can work well in these kinds of network environments. In a first example approach, the spam zombie detection system can be deployed at the mail servers in each subdomain to monitor the outgoing messages so as to detect the compromised machines in that subdomain. In a second example, and possibly more practically, the spam zombie detection system is only deployed at the designated mail servers, which forward all outgoing messages (or the spam zombie detection system gets a replicated stream of all outgoing messages), as discussed previously. The spam zombie detection system may rely on the &#x2018;Received:&#x2019; header fields to identify the originating machine of a message in the network. Given that the &#x2018;Received:&#x2019; header fields can be spoofed by spammers, the spam zombie detection system should only use the &#x2018;Received:&#x2019; header fields inserted by the known mail servers in the network. The spam zombie detection system can determine the reliable &#x2018;Received:&#x2019; header fields by backtracking from the last known mail server in the network that forwards the message. It terminates and identifies the originating machine when an IP address in the &#x2018;Received:&#x2019; header field is not associated with a known mail server in the network.</p>
<p id="p-0069" num="0068">Given that the spam zombie detection system relies on spam filters to classify messages into spam and non-spam, spammers may try to evade the developed spam zombie detection system by evading the deployed spam filters. They may send completely meaningless non-spam messages (as classified by spam filters). However, this will reduce the real spamming rate, and hence, the financial gains, of the spammers. More importantly, even if a spammer reduces the spam percentage to 50%, the spam zombie detection system can still detect the spam zombie with a relatively small number of observations (25 when &#x3b1;=0.01, &#x3b2;=0.01, and &#x3b8;<sub>0</sub>=0.2). So, trying to send non-spam messages will not help spammers to evade the spam zombie detection system. Moreover, in certain environment where user feedback is reliable, for example, feedback from users of the same network in which the spam zombie detection system is deployed, the spam zombie detection system can rely on classifications from end users (which may be used in addition to the spam filter). Although completely meaningless messages may evade the deployed spam filter, it is impossible for them to remain undetected by end users who receive such messages. User feedbacks may be incorporated into the spam zombie detection system to improve the spam detection rate of the spam filter. As discussed previously, trying to send spam at a low rate will also not evade the spam zombie detection system. The spam zombie detection system relies on the number of (spam) messages, not the sending rate, to detect spam zombies.</p>
<p id="p-0070" num="0069">For comparison, two alternative designs in detecting spam zombies are presented, one based on the number of spam messages and another based on the percentage of spam messages sent from a machine. For simplicity, they are referred to as the count-threshold (CT) detection method and the percentage-threshold (PT) detection method, respectively.</p>
<p id="p-0071" num="0070">In CT, the time is partitioned into windows of fixed length T. A user-defined threshold parameter C<sub>s </sub>specifies the maximum number of spam message that may be originated from a normal machine in any time window. The system monitors the number of spam messages n originated from a machine in each window. If n&#x3e;C<sub>s</sub>, then the method declares that the machine has been compromised.</p>
<p id="p-0072" num="0071">Similarly, in the PT detection method the time is partitioned into windows of fixed length T. PT monitors two email sending properties of each machine; one is the percentage of spam messages sent from a machine, another the total number of messages. Let N and n denote the total messages and spam messages originated from a machine m within a time window, respectively, then PT declares machine m as being compromised if</p>
<p id="p-0073" num="0072">
<maths id="MATH-US-00013" num="00013">
<math overflow="scroll">
<mrow>
  <mrow>
    <mi>N</mi>
    <mo>&#x2265;</mo>
    <mrow>
      <msub>
        <mi>C</mi>
        <mi>a</mi>
      </msub>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>and</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mfrac>
        <mi>n</mi>
        <mi>N</mi>
      </mfrac>
    </mrow>
    <mo>&#x3e;</mo>
    <mi>P</mi>
  </mrow>
  <mo>,</mo>
</mrow>
</math>
</maths>
<br/>
where C<sub>&#x3b1;</sub> is the minimum number of messages that a machine must send, and P is the user-defined maximum spam percentage of a normal machine. The first condition is in place for preventing high false positive rates when a machine only generates a small number of messages. For example, in an extreme case, a machine may only send a single message and it is a spam, which renders the machine to have a 100% spam ratio. However, it does not make sense to classify this machine as being compromised based on this small number of messages generated.
<br/>
Exemplary Deployment
</p>
<p id="p-0074" num="0073">In the following, the two alternative spam zombie detection methods are briefly compared with an exemplary deployment of the spam zombie detection system. The three methods have the similar time and space complexities. They all maintain a record for each observed machine and update the corresponding record as messages arrive from the machine. However, unlike the spam zombie detection system, which can provide a bounded false positive rate and false negative rate, and consequently, a confidence how well the spam zombie detection system works, the error rates of CT and PT cannot be a priori specified.</p>
<p id="p-0075" num="0074">In addition, choosing the proper values for the four user-defined parameters (&#x3b1;, &#x3b2;, &#x3b8;<sub>1</sub>, and &#x3b8;<sub>0</sub>) in the spam zombie detection system is relatively straightforward. In contrast, selecting the &#x201c;right&#x201d; values for the parameters of CT and PT are much more challenging. The performance of the two alternative methods is sensitive to the parameters used in the method. They require a thorough understanding of the different behaviors of the compromised and normal machines in the concerned network and training based on the history of the two different behaviors in order for them to work reasonably well in the network.</p>
<p id="p-0076" num="0075">In the above discussion of the spam zombie detection methods, for simplicity, the potential impact of dynamic IP addresses has been disregarded and it has been assumed that an observed IP corresponds to a unique machine.</p>
<p id="p-0077" num="0076">However, the spam zombie detection system can work well in the environment of dynamic IP addresses. This is because the spam zombie detection system can reach a decision with a small number of observations (as illustrated in <figref idref="DRAWINGS">FIGS. 3 and 4</figref>, which shows the average number of observations required for SPRT to terminate). In practice, three or four observations should be sufficient for SPRT to reach a decision for the vast majority of cases. If a machine is compromised, it is likely that more than three or four spam messages will be sent before the (unwitting) user shutdowns the machine and the corresponding IP address gets re-assigned to a different machine. Therefore, dynamic IP addresses will not have any significant impact on the spam zombie detection system.</p>
<p id="p-0078" num="0077">Dynamic IP addresses can have a greater impact on the two alternative detection methods CT and PT. First, both require the continuous monitoring of the sending behavior of a machine for at least a fixed time window, which in practice can be on the order of hours or days. Second, CT also requires a relatively larger number of spam messages to be observed from a machine before reaching a detection. By properly selecting the values for the parameters of CT and PT (for example, a shorter time window for machines with dynamic IP addresses), they can also work reasonably well in the environment of dynamic IP addresses.</p>
<p id="p-0079" num="0078">The performance of the spam zombie detection system was evaluated based on a two-month email trace collected on a large U.S. college campus network. The potential impact of dynamic IP addresses on the spam zombie detection system was also evaluated.</p>
<p id="p-0080" num="0079">In the exemplary deployment of the spam zombie detection system, the email trace was collected at a mail relay server deployed on a university campus network. During the course of the email trace collection, the mail server relayed messages destined for 53 subdomains in the campus network. The mail relay server ran a spam filter (SpamAssassin by Apache) to detect spam messages. The email trace contained the following information for each incoming message: the local arrival time, the IP address of the sending machine, and whether or not the message was spam. In addition, if a message had a known virus/worm attachment, it was so indicated in the trace by an anti-virus software. The anti-virus software and the spam filter were two independent components deployed on the mail relay server. Due to privacy issues, there was no access to the content of the messages in the trace.</p>
<p id="p-0081" num="0080">The messages in the email trace that were forwarded or originated by the university's internal machines were identified, that is, the messages forwarded or originated by an internal machine and destined to a university account. This set of messages is referred to as the university emails and the evaluation of the spam zombie detection system is based on the university emails. The set of university emails does not contain all the outgoing messages originated from inside the university, and the compromised machines identified by the spam zombie detection system based on the university emails will likely be a lower bound on the true number of compromised machines inside the university campus network.</p>
<p id="p-0082" num="0081">An email message in the trace is classified as either spam or non-spam by the spam filter deployed on the university mail relay server. For ease of exposition, the set of all messages are referred to as the aggregate emails including both spam and non-spam. If a message has a known virus/worm attachment, it is referred to as an infected message. An IP address of a sending machine is referred to as a spam-only IP address if only spam messages are received from the IP. Similarly, an IP address is referred to as non-spam only and mixed if only non-spam messages are received, or both spam and non-spam messages are received, respectively. The table in <figref idref="DRAWINGS">FIG. 5</figref> shows a summary of the email trace. As shown in the table, the trace contains more than 25 million emails, of which more than 18 million, or about 73%, are spam. During the course of the trace collection, more than 2 million IP addresses (2,461,114) of sending machines were observed, of which more than 95% sent at least one spam message. During the same course, 440 university internal IP addresses were observed. The table in <figref idref="DRAWINGS">FIG. 6</figref> shows the classifications of the observed IP addresses and the table in <figref idref="DRAWINGS">FIG. 7</figref> shows a summary of the IP addresses sending a virus/worm. A more detailed analysis of the email trace can be found in Z. Duan et al., including the daily message arrival patterns, and the behaviors of spammers at both the mail-server level and the network level. Z. Duan, K. Gopalan, and X. Yuan, &#x201c;Behavioral Characteristics of Spammers and Their Network Reachability Properties,&#x201d; in <i>IEEE International Conference on Communications </i>(<i>ICC</i>) (June 2007), herein incorporated by reference.</p>
<p id="p-0083" num="0082">In order to study the potential impacts of dynamic IP addresses on the spam zombie detection system, the subset of university IP addresses in the trace whose domain names contain &#x201c;wireless&#x201d; were obtained, which normally have dynamically allocated IP addresses. The messages sent from each of the IP address were grouped into clusters, where the messages in each cluster were likely to be from the same machine (before the IP address was re-assigned to a different machine). Messages were grouped according to the inter-arrival times between consecutive messages, as discussed below. Let m<sub>i </sub>i=1, 2, . . . denote the messages sent from an IP address, and t<sub>i </sub>denote the time when message i is received. Then messages m<sub>i </sub>for i=1, 2, . . . , k belong to the same cluster if |t<sub>i</sub>&#x2212;t<sub>i&#x2212;1</sub>|&#x2267;T for i=2, 3, . . . , k, and |t<sub>i+1</sub>&#x2212;t<sub>k</sub>|&#x3e;T, where T is an user-defined time interval. The same process was repeated to group other messages. Let m<sub>i </sub>for i=j, j+1, . . . , k be the sequence of messages in a cluster, arriving in that order. Then, |t<sub>k</sub>&#x2212;t<sub>j</sub>| is referred to as the duration of the cluster. <figref idref="DRAWINGS">FIG. 8</figref> illustrates the message clustering process. From the illustration it can be inferred that, if two messages come closely in time from an IP address (within a time interval T), it is unlikely that the IP address has been assigned to two different machines within the short time interval.</p>
<p id="p-0084" num="0083">The performance of the spam zombie detection system was evaluated based on the collected university emails. In all the studies, &#x3b1;=0.01, &#x3b2;=0.01, &#x3b8;<sub>i</sub>=0.9, and &#x3b8;<sub>0</sub>=0.2. That is, it was assumed that the deployed spam filter had a 90% detection rate and 20% false positive rate. Many widely-deployed spam filters have much better performance than what was assumed here.</p>
<p id="p-0085" num="0084">The table shown in <figref idref="DRAWINGS">FIG. 9</figref> shows the performance of the spam zombie detection system. As discussed above, there are 440 university internal IP addresses observed in the email trace. The spam zombie detection system identified 132 of them to be associated with compromised machines. In order to understand the performance of the spam zombie detection system in terms of the false positive and false negative rates, a number of methods were used to verify if a machine was indeed compromised. First, it was determined if any message sent from an IP address carried a known virus/worm attachment. If so, then there was a confirmation. Out of the 132 IP addresses identified by the spam zombie detection system, 110 of them were confirmed to be compromised with this method. The spam sending patterns of the remaining 22 IP addresses and the domain names of the corresponding machines were then examined. If the fraction of the spam messages from an IP address was high (greater than 98%), then the corresponding machine was considered to be compromised. Sixteen IP addresses were confirmed with this method. The majority (62.5%) of the IP addresses confirmed by the spam percentage are dynamic IP addresses, which further indicates the likelihood of the machines to be compromised.</p>
<p id="p-0086" num="0085">For the remaining six IP addresses that were not confirmed by either of the above means, their sending patters were manually examined. These IP addresses have a relatively overall low percentage of spam messages over the two month of the collection period. However, they sent substantially more spam messages towards the end of the collection period. This indicates that they may have become compromised towards the end of the collection period.</p>
<p id="p-0087" num="0086">Evaluating the false negative rate of the spam zombie detection system is somewhat complicated because the spam zombie detection system focuses on the machines that are potentially compromised, but not the machines that are normal. To better understand the false negative rate of the spam zombie detection system, consider the machines that the spam zombie detection system did not identify as being compromised at the end of the email collection period, but for which the spam zombie detection system had re-set the records (lines <b>15</b> to <b>18</b> in <figref idref="DRAWINGS">FIG. 2A</figref>). Such machines were designated as normal by the spam zombie detection system (but were continuously been monitored). The list of IP addresses that have sent at least a message with a virus/worm attachment was also obtained. Seven of such IP addresses were found to be normal, i.e., missed, by the spam zombie detection system.</p>
<p id="p-0088" num="0087">In this exemplary embodiment, the infected messages were only used to confirm if a machine was compromised in order to study the performance of the spam zombie detection system. Infected messages were not used by the spam zombie detection system itself. The spam zombie detection system relied on the spam messages instead of infected messages to detect if a machine had been compromised to produce the results in the table of <figref idref="DRAWINGS">FIG. 9</figref>. This is because it is against the interest of a professional spammer to send spam messages with a virus/worm attachment. Such messages are more likely to be detected by anti-virus software, and hence deleted before reaching the intended recipients. This is confirmed by the low percentage of infected messages in the overall email trace shown in the table in <figref idref="DRAWINGS">FIG. 5</figref>. Infected messages are more likely to be observed during the spam zombie recruitment phase instead of the spamming phase. Infected messages can be easily incorporated into the spam zombie detection system to improve its performance.</p>
<p id="p-0089" num="0088">It should be noted that both the actual false positive rate and the false negative rate were higher than the specified false positive rate and false negative rate, respectively. One possible reason is that the evaluation was based on the university emails, which can only provide a partial view of the outgoing messages originated from inside the university.</p>
<p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. 10</figref> shows the distributions of the number of actual observations that the spam zombie detection system took to detect the compromised machines. As can be seen from the figure, the vast majority of compromised machines can be detected with a small number of observations. For example, more than 80% of the compromised machines were detected by the spam zombie detection system with only three observations. All of the compromised machines were detected with no more than eleven observations. The spam zombie detection system can quickly detect the compromised machines. The spam zombie detection system does not need compromised machines to send spam messages at a high rate in order to detect them. Here, &#x201c;quick&#x201d; detection does not mean a short duration, but rather a small number of observations. A compromised machine can send spam messages at a low rate, but it can still be detected once enough observations are obtained by the spam zombie detection system.</p>
<p id="p-0091" num="0090">In order to understand the potential impacts of dynamic IP addresses on the performance of the spam zombie detection system, messages from a dynamic IP address (with domain names containing &#x201c;wireless&#x201d;) were grouped into clusters with a time interval threshold of thirty minutes. Messages with a consecutive inter-arrival time no greater than thirty minutes were grouped into the same cluster. Given the short inter-arrival duration of messages within a cluster, all the messages from the same IP address within each cluster were considered as being sent from the same machine. That is, the corresponding IP address has not been re-assigned to a different machine within the concerned cluster. (It is possible that messages from multiple adjacent clusters are actually sent from the same machine.)</p>
<p id="p-0092" num="0091"><figref idref="DRAWINGS">FIG. 11</figref> shows the cumulative distribution function (CDF) of the number of spam messages in each cluster. The figure shows that more than 90% of the clusters have no less than ten spam messages, and more than 96% no less than three spam messages. Given the large number of spam messages sent within each cluster, it is unlikely for the spam zombie detection system to mistake one compromised machine as another when it tries to detect spam zombies. Indeed, it was manually checked that, spam messages tend to be sent back to back in a batch fashion when a dynamic IP address is observed in the trace. <figref idref="DRAWINGS">FIG. 12</figref> shows the CDF of the number of all messages (including both spam and non-spam) in each cluster. Similar observations can be made to that in <figref idref="DRAWINGS">FIG. 11</figref>.</p>
<p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. 13</figref> shows the CDF of the durations of the clusters. As illustrated in the figure, more than 75% and 58% of the clusters last no less than thirty minutes and one hour (corresponding to the two vertical lines in the figure), respectively. The longest duration of a cluster observed in the trace was about 3.5 hours.</p>
<p id="p-0094" num="0093">Given the above observations, in particular, the large number of spam messages in each cluster, it can be concluded that dynamic IP addresses will not have any important impact on the performance of the spam zombie detection system. The spam zombie detection system can reach a decision within the vast majority (96%) of the clusters in the study described here. It is unlikely for the spam zombie detection system to mistake a compromised machine as another.</p>
<p id="p-0095" num="0094">It will be seen that the advantages set forth above, and those made apparent from the foregoing description, are efficiently attained and since certain changes may be made in the above construction without departing from the scope of the invention, it is intended that all matters contained in the foregoing description or shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.</p>
<p id="p-0096" num="0095">It is also to be understood that the following claims are intended to cover all of the generic and specific features of the invention herein described, and all statements of the scope of the invention which, as a matter of language, might be said to fall there between.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-math idrefs="MATH-US-00001" nb-file="US08626861-20140107-M00001.NB">
<img id="EMI-M00001" he="6.35mm" wi="76.20mm" file="US08626861-20140107-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00002" nb-file="US08626861-20140107-M00002.NB">
<img id="EMI-M00002" he="6.35mm" wi="76.20mm" file="US08626861-20140107-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00003" nb-file="US08626861-20140107-M00003.NB">
<img id="EMI-M00003" he="7.79mm" wi="76.20mm" file="US08626861-20140107-M00003.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00004" nb-file="US08626861-20140107-M00004.NB">
<img id="EMI-M00004" he="15.16mm" wi="76.20mm" file="US08626861-20140107-M00004.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00005" nb-file="US08626861-20140107-M00005.NB">
<img id="EMI-M00005" he="7.79mm" wi="76.20mm" file="US08626861-20140107-M00005.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00006" nb-file="US08626861-20140107-M00006.NB">
<img id="EMI-M00006" he="6.35mm" wi="76.20mm" file="US08626861-20140107-M00006.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00007" nb-file="US08626861-20140107-M00007.NB">
<img id="EMI-M00007" he="6.35mm" wi="76.20mm" file="US08626861-20140107-M00007.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00008" nb-file="US08626861-20140107-M00008.NB">
<img id="EMI-M00008" he="6.01mm" wi="76.20mm" file="US08626861-20140107-M00008.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00009" nb-file="US08626861-20140107-M00009.NB">
<img id="EMI-M00009" he="6.35mm" wi="76.20mm" file="US08626861-20140107-M00009.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00010" nb-file="US08626861-20140107-M00010.NB">
<img id="EMI-M00010" he="15.92mm" wi="76.20mm" file="US08626861-20140107-M00010.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00011" nb-file="US08626861-20140107-M00011.NB">
<img id="EMI-M00011" he="6.69mm" wi="76.20mm" file="US08626861-20140107-M00011.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00012" nb-file="US08626861-20140107-M00012.NB">
<img id="EMI-M00012" he="27.52mm" wi="76.20mm" file="US08626861-20140107-M00012.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00013" nb-file="US08626861-20140107-M00013.NB">
<img id="EMI-M00013" he="5.67mm" wi="76.20mm" file="US08626861-20140107-M00013.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00014" nb-file="US08626861-20140107-M00014.NB">
<img id="EMI-M00014" he="6.35mm" wi="76.20mm" file="US08626861-20140107-M00014.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer implemented method of detecting a compromised machine on a network, comprising:
<claim-text>replicating an outgoing email traffic stream originated on the network;</claim-text>
<claim-text>redirecting the replicated outgoing email traffic stream to the compromised machine detection system;</claim-text>
<claim-text>receiving an email message from a machine on the network;</claim-text>
<claim-text>classifying the email message as spam or non-spam;</claim-text>
<claim-text>updating a probability ratio by applying a sequential probability ratio test, wherein the probability ratio is increased if the email message was classified as spam or decreased if the email message was classified as non-spam, wherein the probability ratio is updated according to the equation</claim-text>
</claim-text>
<claim-text>
<maths id="MATH-US-00014" num="00014">
<math overflow="scroll">
<mrow>
  <mrow>
    <msub>
      <mi>&#x39b;</mi>
      <mi>n</mi>
    </msub>
    <mo>=</mo>
    <mrow>
      <mi>ln</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.3em" height="0.3ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mfrac>
        <msub>
          <mi>&#x3b8;</mi>
          <mn>1</mn>
        </msub>
        <msub>
          <mi>&#x3b8;</mi>
          <mn>0</mn>
        </msub>
      </mfrac>
    </mrow>
  </mrow>
  <mo>,</mo>
</mrow>
</math>
</maths>
</claim-text>
<claim-text>responsive to the email message being classified as spam;
<claim-text>wherein &#x39b;<sub>n </sub>represents the probability ratio, &#x3b8;<sub>0 </sub>represents the probability that an email message received from a machine on the network is spam given that the machine is not compromised, and &#x3b8;<sub>1 </sub>represents the probability that an email message received from a machine on the network is spam given that the machine is compromised;</claim-text>
<claim-text>indicating the status of the machine as compromised, responsive to the probability ratio being greater than or equal to a first predetermined threshold (B);</claim-text>
<claim-text>indicating the status of the machine as normal and resetting the probability ratio, responsive to the probability ratio being less than or equal to a second predetermined threshold (A);</claim-text>
<claim-text>repeating, for a plurality of email messages, the operations of receiving an email message, classifying the email message, updating the probability ratio, and indicating the machine is normal or compromised until the probability ratio is greater than or equal to the first predetermined threshold, wherein the repeated operations are performed on each of the plurality of email messages one at a time as each of the plurality of email messages is received; and</claim-text>
<claim-text>identifying the machine indicated as compromised to a system administrator whereby the compromised machine may be cleaned.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the email message originates from the machine.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the email message is forwarded by the machine.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the email message is classified as spam or non-spam by a spam filter.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the spam filter is a content-based spam filter.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the email message is classified as spam or non-spam by user feedback.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the sequential probability test uses the approximate probability that an email message transmitted by a machine on the network is spam if the computer is compromised and the approximate probability that an email message transmitted by the machine is spam if the computer is not compromised.</claim-text>
</claim>
</claims>
</us-patent-grant>
