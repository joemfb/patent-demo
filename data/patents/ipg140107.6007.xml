<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627130-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627130</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12900771</doc-number>
<date>20101008</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>283</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>1</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>1</main-group>
<subgroup>32</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>13</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>713324</main-classification>
<further-classification>713320</further-classification>
<further-classification>711122</further-classification>
<further-classification>711130</further-classification>
<further-classification>711142</further-classification>
<further-classification>711161</further-classification>
</classification-national>
<invention-title id="d2e53">Power saving archive system</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5423046</doc-number>
<kind>A</kind>
<name>Nunnelley et al.</name>
<date>19950600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5845291</doc-number>
<kind>A</kind>
<name>Winokur</name>
<date>19981200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6400892</doc-number>
<kind>B1</kind>
<name>Smith</name>
<date>20020600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6496915</doc-number>
<kind>B1</kind>
<name>Halleck</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6583947</doc-number>
<kind>B1</kind>
<name>Hakamata et al.</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6826005</doc-number>
<kind>B2</kind>
<name>Hakamata et al.</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6947240</doc-number>
<kind>B2</kind>
<name>Hakamata et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6961815</doc-number>
<kind>B2</kind>
<name>Kistler et al.</name>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>7035972</doc-number>
<kind>B2</kind>
<name>Guha et al.</name>
<date>20060400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>7210005</doc-number>
<kind>B2</kind>
<name>Guha et al.</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>7275166</doc-number>
<kind>B2</kind>
<name>Kaiju et al.</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>7475265</doc-number>
<kind>B2</kind>
<name>Oshikawa et al.</name>
<date>20090100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2002/0144057</doc-number>
<kind>A1</kind>
<name>Li et al.</name>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711112</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2004/0054748</doc-number>
<kind>A1</kind>
<name>Ackaouy et al.</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709214</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2004/0054939</doc-number>
<kind>A1</kind>
<name>Guha et al.</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2004/0068672</doc-number>
<kind>A1</kind>
<name>Fisk et al.</name>
<date>20040400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2004/0111558</doc-number>
<kind>A1</kind>
<name>Kistler et al.</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2004/0133540</doc-number>
<kind>A1</kind>
<name>Saake et al.</name>
<date>20040700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2004/0205232</doc-number>
<kind>A1</kind>
<name>Matoba et al.</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2005/0188252</doc-number>
<kind>A1</kind>
<name>Amano</name>
<date>20050800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2005/0257000</doc-number>
<kind>A1</kind>
<name>Sonoda et al.</name>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>2005/0268119</doc-number>
<kind>A9</kind>
<name>Guha et al.</name>
<date>20051200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>2005/0273638</doc-number>
<kind>A1</kind>
<name>Kaiju et al.</name>
<date>20051200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>2006/0075190</doc-number>
<kind>A1</kind>
<name>Higaki et al.</name>
<date>20060400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711114</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>2006/0129761</doc-number>
<kind>A1</kind>
<name>Guha et al.</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>2007/0079087</doc-number>
<kind>A1</kind>
<name>Wang et al.</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00027">
<document-id>
<country>US</country>
<doc-number>2007/0143559</doc-number>
<kind>A1</kind>
<name>Yagawa</name>
<date>20070600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711170</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00028">
<document-id>
<country>US</country>
<doc-number>2007/0208921</doc-number>
<kind>A1</kind>
<name>Hosouchi et al.</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711170</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00029">
<document-id>
<country>US</country>
<doc-number>2007/0220198</doc-number>
<kind>A1</kind>
<name>Kassai</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711112</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00030">
<document-id>
<country>US</country>
<doc-number>2007/0220316</doc-number>
<kind>A1</kind>
<name>Guha et al.</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00031">
<document-id>
<country>US</country>
<doc-number>2007/0260815</doc-number>
<kind>A1</kind>
<name>Guha et al.</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00032">
<document-id>
<country>US</country>
<doc-number>2008/0072000</doc-number>
<kind>A1</kind>
<name>Osaki et al.</name>
<date>20080300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711162</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00033">
<document-id>
<country>US</country>
<doc-number>2009/0006877</doc-number>
<kind>A1</kind>
<name>Lubbers et al.</name>
<date>20090100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00034">
<document-id>
<country>US</country>
<doc-number>2009/0049240</doc-number>
<kind>A1</kind>
<name>Oe et al.</name>
<date>20090200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00035">
<document-id>
<country>US</country>
<doc-number>2009/0119530</doc-number>
<kind>A1</kind>
<name>Fisk et al.</name>
<date>20090500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00036">
<document-id>
<country>US</country>
<doc-number>2009/0177837</doc-number>
<kind>A1</kind>
<name>Kaneda</name>
<date>20090700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711112</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00037">
<document-id>
<country>US</country>
<doc-number>2009/0198886</doc-number>
<kind>A1</kind>
<name>Balakrishnan</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00038">
<document-id>
<country>US</country>
<doc-number>2010/0115305</doc-number>
<kind>A1</kind>
<name>Ichikawa et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713320</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00039">
<document-id>
<country>US</country>
<doc-number>2011/0231683</doc-number>
<kind>A1</kind>
<name>Kumasawa et al.</name>
<date>20110900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713320</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00040">
<othercit>Levine, Ron. &#x201c;NAS Advantages: A VARs View&#x201d;. Infostor. Online Apr. 1, 1998. Retrieved from Internet Feb. 25, 2013. &#x3c;http://www.infostor.com/index/articles/display/55961/articles/infostor/volume-2/issue-4/news-analysis-trends/nas-advantages-a-vars-view.html&#x3e;.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00041">
<othercit>International Search Report and Written Opinion in counterpart PCT application No. PCT/US2010/052006, dated Dec. 13, 2010.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>19</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>713300</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713310</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713320</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713323-324</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>710 74</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709217-218</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711117-118</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711122</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711130</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711133</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711136</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711147-149</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711154</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711159-162</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711142</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>6</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61249879</doc-number>
<date>20091008</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110087912</doc-number>
<kind>A1</kind>
<date>20110414</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Dickson</last-name>
<first-name>Lawrence John</first-name>
<address>
<city>National City</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Dickson</last-name>
<first-name>Lawrence John</first-name>
<address>
<city>National City</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Chen Yoshimura LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Bridgette, Inc.</orgname>
<role>02</role>
<address>
<city>El Cajon</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Cleary</last-name>
<first-name>Thomas J</first-name>
<department>2111</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A power saving archive system includes a front storage system accessible by clients and one or more back storage systems connected to the front storage system. A client file received by the front storage system is written to one of the back storage systems, while the front storage system stores a reference to the file and deletes the file from the front storage system after a certain time period. Each back storage system enters an inactive state (e.g. a powered off state) after a period of unuse, and can become active again in response to a wakeup command (e.g. a Wake-on-LAN signal) from the front storage system. Upon receiving a file read request from a client, the front storage system wakes up the appropriate back storage system, restores the file from the back storage system, and provides the file to the client.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="190.67mm" wi="167.89mm" file="US08627130-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="232.33mm" wi="170.35mm" file="US08627130-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="228.68mm" wi="193.04mm" file="US08627130-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="229.28mm" wi="171.03mm" file="US08627130-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="209.55mm" wi="187.79mm" file="US08627130-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="220.39mm" wi="168.06mm" file="US08627130-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="233.26mm" wi="185.50mm" file="US08627130-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<p id="p-0002" num="0001">This application claims priority under 35 USC 119(e) from U.S. provisional patent application No. 61/249,879, filed Oct. 8, 2009, which is herein incorporated by reference in its entirety.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">1. Field of the Invention</p>
<p id="p-0004" num="0003">This invention relates to storage systems. In particular, it relates to a power saving archive system.</p>
<p id="p-0005" num="0004">2. Description of the Related Art</p>
<p id="p-0006" num="0005">List of Patent References:
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0006">A. Nunnelley, Lewis L; Williams, Larry L; Wood, Jr, Leighton C: High Capacity Data Storage System using Disk Array. Issued Jun. 6, 1995: U.S. Pat. No. 5,423,046.</li>
    <li id="ul0001-0002" num="0007">B. Winokur, Alex: Computer with Reduced Power Consumption. Issued Dec. 1, 1998: U.S. Pat. No. 5,845,291.</li>
    <li id="ul0001-0003" num="0008">C. Smith, Gordon J: Adaptive Disk Drive Operation with Medium Speed and Recording Location based on Data Type. Issued Jun. 4, 2002: U.S. Pat. No. 6,400,892.</li>
    <li id="ul0001-0004" num="0009">D. Hakamata, Kazuo; Takamoto, Kenichi; Kobayashi, Masaaki: Disk Array Unit. Issued Jun. 24, 2003: U.S. Pat. No. 6,583,947. Continuations: U.S. Pat. Nos. 6,826,005 and 6,947,240.</li>
    <li id="ul0001-0005" num="0010">E. Halleck, Michael D: Apparatus and Method for Reducing Power Consumption in an Electronic Data Storage System. Issued Dec. 17, 2002: U.S. Pat. No. 6,496,915.</li>
    <li id="ul0001-0006" num="0011">F. Kistler, Michael David; Rajamony, Ramakrishnan: Multiple Disk Data Storage System for Reducing Power Consumption. Issued Nov. 1, 2005: U.S. Pat. No. 6,961,815. Continuation: U.S. patent application publication number 20040111558.</li>
    <li id="ul0001-0007" num="0012">G. Fisk, Ian; Mojaver, Michael: Lower Power Disk Array as a Replacement for Robotic Tape Storage. Filed Mar. 21, 2003. U.S. Patent application publication number 20040068672. Continuation: U.S. patent application publication number 20090119530.</li>
    <li id="ul0001-0008" num="0013">H. Guha, Aloke; Santilli, Chris T; McMillian, Gary B: Method and Apparatus for Power-Efficient High-Capacity Scalable Storage System. Issued Apr. 25, 2006: U.S. Pat. No. 7,035,972. Continuations: U.S. Pat. No. 7,210,005; U.S. patent application publication numbers 20040054939, 20050268119, 20060129761, and 20070220316.</li>
    <li id="ul0001-0009" num="0014">I. Amano, Takashi: Data Storage Systems and Methods. Filed Feb. 25, 2004. U.S. Patent application publication number 20050188252.</li>
    <li id="ul0001-0010" num="0015">J. Kaiju, Yoshihiko; Yoshida, Shoichi; Murakawa, Yoshitaka; Futamata, Akio; Ito, Katsuyoshi: Power Saving Control System and Power Saving Control Method. Issued Sep. 25, 2007: U.S. Pat. No. 7,275,166. Continuation: U.S. patent application number 20050273638.</li>
    <li id="ul0001-0011" num="0016">K. Oshikawa, Hiroshi; Saitoh, Hirofumi: Data Storage Device and Control Method for Power-Saving Modes of Serial Interface Thereof. Issued Jan. 6, 2009: U.S. Pat. No. 7,475,265.</li>
    <li id="ul0001-0012" num="0017">L. Lubbers, Clark Edward; DeCenzo, David Peter: Power Management in a Storage Array. Filed Jun. 28, 2007. U.S. Patent application publication number 20090006877.</li>
</ul>
</p>
<p id="p-0007" num="0018">In the discussions to follow, patents and their continuation applications are referenced by their letters in the above list, and/or by their inventors or their numbers.</p>
<p id="p-0008" num="0019">The majority of the above-referenced documents consists of disk arrays with a single master controller or CPU in communication with data storage users or hosts. This includes A, B, C, D, F, H, and K, and most of E, G and L. Such arrays include MAID systems (H), RAID-based systems (H, L), systems that organize files into clusters on selected disks (A, H), systems that cache data into semiconductor memory or flash memory (B, E), and even systems that work with the space between platters on a disk (C).</p>
<p id="p-0009" num="0020">However, power saving on a disk level proves to have two drawbacks. First, not much power is saved. Typical MAID performance is 30% to 40% power saving, due to the continued demands of CPU, fan and other power users in the enclosure. They require a controller (G) for all the disks, quiescent or not.</p>
<p id="p-0010" num="0021">Second, complexity tends to skyrocket as the size (measured in number of disks) moves beyond the capacity of one enclosure. This also results in latencies and trouble with data throughput.</p>
<p id="p-0011" num="0022">Having to micro-manage data via involvement in RAID, cache, or file characteristics (C, F, J) is another drawback of many of the references. Powering down and up are major disturbances in data flow. If the same control mechanism that causes these massive effects must be involved in delicate details of a file system, there is built-in danger of instability and race conditions that can result in data corruption.</p>
<p id="p-0012" num="0023">Micro-management is also a problem in K, as the host has to control the power saving function by explicit commands.</p>
<heading id="h-0002" level="1">SUMMARY</heading>
<p id="p-0013" num="0024">For better scalability and power savings, one approach is to build a power saving storage out of whole systems with CPUs and not just sets of disks. These whole systems can be almost completely shut down and awakened at will. A swap design (see reference I above) is applicable to such a setup, if 50% duty cycle is OK. But the swap nature of reference I does not allow the rarely-used storage to be specialized for its role.</p>
<p id="p-0014" num="0025">References E, G, J, and L are also to greater or less degree applicable to the multi-system storage approach, although the techniques they discuss are focused on the disk-level arrays and thus inadequate to get the real best advantage out of the multi-system approach. There is therefore a need for a multi-system power saving array design that can take real advantage of the high power-off savings of whole systems. However, random access to data that is scattered around such giant groupings as a multi-disk storage system, for example, even an 8-disk 1U (12 TB with 2TB disks and RAID6), will keep &#x201c;tweaking&#x201d; them and powering them up, even if the rate of data access is quite low. A touch on one file is all that is needed. Thus, technologies that deal in data typing and access characteristics (like references C, F, J above) will not get good results.</p>
<p id="p-0015" num="0026">The inventor of the present invention realized that many use patterns are not random, and have a tendency to feed data into storage in time order, data that after a short period is very rarely accessed, and when it is accessed it is in time-associated clumps. Technology of the embodiments of the present invention takes advantage of this restricted use case scenario to break free of the &#x201c;busy problem&#x201d; and get full advantage of the almost-100% power savings possible in systems that can be waked by a network signal.</p>
<p id="p-0016" num="0027">Accordingly, the present invention is directed to a power saving archive system and related methods that substantially obviates one or more of the problems due to limitations and disadvantages of the related art.</p>
<p id="p-0017" num="0028">Additional features and advantages of the invention will be set forth in the descriptions that follow and in part will be apparent from the description, or may be learned by practice of the invention. The objectives and other advantages of the invention will be realized and attained by the structure particularly pointed out in the written description and claims thereof as well as the appended drawings.</p>
<p id="p-0018" num="0029">To achieve these and other advantages and in accordance with the purpose of the present invention, as embodied and broadly described, the present invention provides a data archive system which includes a front storage system, one or more back storage systems connected to the front storage system, and a data connection for connecting the front storage system to one or more clients, wherein in response to a write command from a client, the front storage system receives a client file from the client and writes the client file to one of the back storage systems, and wherein each back storage system enters an inactive state after a predetermined time period of unuse, and wherein each inactive back storage system becomes active in response to receiving a wakeup command from the front storage system.</p>
<p id="p-0019" num="0030">Further, after writing the client file to one of the back storage systems, the front storage system stores a reference to the client file and deletes the client file from the front storage system after a predetermined period of unuse. In response to a read command from a second client, the front storage system transmits the wakeup command to a selected back storage system, reads a client file from the selected back storage systems, and transmits the client file to the second client.</p>
<p id="p-0020" num="0031">In the data archive system, the front storage system may include a server and a mass storage device, and each back storage system may include a server and a mass storage device. The inactive state of the back storage systems may be a powered off state and the wakeup command may be a Wake-on-LAN signal.</p>
<p id="p-0021" num="0032">In another aspect, the present invention provides a data archiving method implemented in a data archive system, the data archive system including a front storage system and a plurality of back storage systems connected to the front storage system, where the method includes: receiving a client file from a client by the front storage system; writing the client file in one of the plurality of back storage systems; each of the plurality of back storage systems entering an inactive state after a predetermined time period of unuse; and each inactive back storage system becoming active in response to receiving a wakeup command from the front storage system.</p>
<p id="p-0022" num="0033">The method may further include: storing a reference to the client file in the front storage system; and deleting the client file from the front storage system after a predetermined period of unuse of the client file.</p>
<p id="p-0023" num="0034">The method may further include: in response to a read command from a second client, the front storage system transmitting the wakeup command to a selected back storage system, reading a client file from the selected back storage systems, and transmitting the client file to the second client.</p>
<p id="p-0024" num="0035">It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory and are intended to provide further explanation of the invention as claimed.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0025" num="0036"><figref idref="DRAWINGS">FIG. 1</figref> schematically illustrates a power saving archive (PSA) system according to an embodiment of the present invention.</p>
<p id="p-0026" num="0037"><figref idref="DRAWINGS">FIG. 2</figref> schematically illustrates an exemplary use case of the PSA system.</p>
<p id="p-0027" num="0038"><figref idref="DRAWINGS">FIG. 3</figref> schematically illustrates the states of a file on the front storage system of the PSA according to an embodiment of the present invention.</p>
<p id="p-0028" num="0039"><figref idref="DRAWINGS">FIG. 4</figref> schematically illustrates the states of a back storage system of the PSA according to an embodiment of the present invention.</p>
<p id="p-0029" num="0040"><figref idref="DRAWINGS">FIG. 5</figref> schematically illustrates the cycling down process of a back storage system according to an embodiment of the present invention.</p>
<p id="p-0030" num="0041"><figref idref="DRAWINGS">FIG. 6</figref> is a flow chart illustrating processes performed by software of the landing pad according to an embodiment of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
<p id="p-0031" num="0042">In this disclosure, embodiments of the invention are sometimes referred to as the &#x201c;power saving archive&#x201d; or &#x201c;PSA&#x201d; for convenience. However, the use of such terms does not in any way limit the scope of the invention.</p>
<p id="p-0032" num="0043">The power saving archive (PSA) system stores large amounts of computer-readable data on multiple storage systems, each with large data storage capability, in such a way as to require little power usage under a common use case, and to make the data available quickly on demand. The power saving archive system also achieves cost saving through simplicity of design, using commonly available features of systems (as opposed to disks and other slave devices) and standard software.</p>
<p id="p-0033" num="0044">The storage units are independent systems, negotiating as equals through protocols over a network, not slave devices such as disks driven via a controller by a master. This gives far greater power savings possibilities (e.g., Wake-on-LAN vs MAID). It allows simplicity, using commercially available hardware and software, and thus is also more easily maintainable.</p>
<p id="p-0034" num="0045">There is a strong differentiation between the functions of the front storage system (also referred to as the landing pad) and the back storage system (also referred to as the storage units). The front storage communicates with clients and holds much-used recent data ready for access, while assuring that the data is stored in the back storage. The back storage holds archived data and is usually in an inactive state (e.g., powered off), but is capable of becoming active quickly when demanded.</p>
<p id="p-0035" num="0046">This allows differential optimization of the two designs, which is critical to cost savings and responsiveness. It makes the PSA system more secure since only the front storage deals with external clients directly.</p>
<p id="p-0036" num="0047">Embodiments of the present invention use a mechanism for back storage to enter an inactive state at very low power, after a quiescent period, and be reawakened at the command of the front storage when needed. Wake-on-LAN, implemented on the motherboard (BIOS) of a computer or network interface, is one robust and widespread example of such a mechanism. Such a mechanism is important for the very high power savings that differentiate embodiments of the present invention from MAID. The mechanism can be implemented with a standard network and switch, relatively cheap and easy to maintain compared with the tightly coupled controller-slave arrays of most of the competing art. Other techniques that can be used for this purpose include InfiniBand or FireWire for very fast archive networks, and peer-to-peer USB (e.g., a USB link and network cable that provides host-to-host networking and linking for two or more USB hosts) for sets of small archives. Remote wake up from a sleep state on such systems may be achieved by suitable hardware. It is not necessary for the client connection and the archive network to use the same technology.</p>
<p id="p-0037" num="0048">More generally, in this disclosure, the term &#x201c;inactive state&#x201d; refers to a low power state of the back storage system in which the back storage system is not required to engage in file read and write activities but is capable of detecting a wakeup command from the front storage system. It should be noted that in the inactive state, the back storage system may still perform certain auxiliary functions such as to indicate its status and identity. In response to the wakeup command, the back storage system starts itself up and enters an active state. The active state is a state in which the back storage system can perform file read and/or write as well as other associated functions such as file delete, directory upkeep, and command and data communication with the front storage system. In a preferred embodiment, the inactive state is a powered off state and the wakeup command is a Wake-on-LAN signal. There is a tradeoff or range of possibilities from the lowest power, most robust in which the back storage is fully powered off except for a Wake-on-LAN network card, through the fastest response (but more power consumption) in which the back storage is in one of several possible &#x201c;sleep&#x201d; states available to some motherboards and operating systems.</p>
<p id="p-0038" num="0049">The flow of data unit storage (a data unit may be, for example, a file) is driven consistently with ingest time ordering of the data units. This is simple and robust to program, implying as it does a naturally sequential structure to the data flow, so it increases reliability and predictability of behavior.</p>
<p id="p-0039" num="0050">Embodiments of the present invention are particularly useful in archive systems that must preserve large volumes of data unchanged for long periods. It is also adapted to the tendency of users to need time-associated clusters of archived data. Timestamp recording is supported by commercially available data organizers such as file systems, and is a great aid in finding data and useful to users.</p>
<p id="p-0040" num="0051">Other design features of the PSA system may include the following:</p>
<p id="p-0041" num="0052">A state machine permits a client data access protocol, such as a NAS (Network-attached storage) protocol, to be supported transparently while restarting (if necessary) and reaching data on back storage when needed, with little delay. This achieves high responsiveness. It may be done robustly using friendly features (e.g. VFS (Virtual File System)) of commercially available server data handlers such as CIFS (Common Internet File System)/Samba.</p>
<p id="p-0042" num="0053">Random access of files may be restricted to a copy of the file on front storage, which can be copied and restored sequentially to/from back storage, thus gaining several advantages. A fast, mature commercially available protocol (example: FTP (File Transfer Protocol)) may be used to connect front to back storage, thus improving speed, reliability and maintenance. A copy of the file on front storage can respond instantly to repeated client access without requiring action or redesign of back storage.</p>
<p id="p-0043" num="0054">Write Once, Read Many (WORM) data access may be enforced in a preferred embodiment. WORM is part of such a preferred embodiment at three levels: initial data ingest (front storage), data archiving (back storage), and archived data copy access (front storage). This offers assurance to users that require immutability of the stored data. It simplifies the design and allows use of many speed and other optimizations adapted to time-ordered WORM storage.</p>
<p id="p-0044" num="0055">Changeable data may be allowed even if WORM is enforced, by causing a new file copy to be written as if it were a new file, and then keeping track in client software of its relationship to the old copy.</p>
<p id="p-0045" num="0056">If WORM is not enforced, several options may be used for handling changeable data. The old copy may be deleted and a new copy written, or the old copy may be revised on its storage unit (thus requiring the old storage units be writable). Revision on the old storage unit or data updating on the new storage unit may involve diff, version control, deduplication or other technologies known in the art.</p>
<p id="p-0046" num="0057">In a preferred embodiment, schematically illustrated in <figref idref="DRAWINGS">FIG. 1</figref>, the power saving archive (PSA) system <b>10</b> includes a landing pad (also referred to as a front storage system) <b>11</b> consisting of one or two (two are shown in <figref idref="DRAWINGS">FIG. 1</figref>) landing pad systems <b>11</b><i>a </i>and <b>11</b><i>b</i>, and a number of storage units (also referred to as back storage systems) <b>12</b>, connected via a data connection <b>13</b><i>b </i>such as Ethernet to each other. The landing pad <b>11</b> is also connected to one or more external clients <b>20</b> via a data connection <b>13</b><i>a</i>. The connections <b>13</b><i>a </i>and <b>13</b><i>b </i>may be separate hardware or even different technologies, or they may be served by the same network hardware, in which case they may be placed on separate subnetworks for efficiency and security, or placed on the same subnetwork (less preferred).</p>
<p id="p-0047" num="0058">In one embodiment, the landing pad <b>11</b> appears as Network Attached Storage to the clients <b>20</b>, and the storage units <b>12</b> appear as fast file storage, for example FTP, to the landing pad. In the case of two landing pad systems <b>11</b><i>a </i>and <b>11</b><i>b</i>, one may be active and one may be passive with a Failover connection between them.</p>
<p id="p-0048" num="0059">As stated earlier, the storage units <b>12</b> are independent storage systems, negotiating as equals through protocols over a network, not slave devices such as disks driven via a controller by a master.</p>
<p id="p-0049" num="0060">In some use cases, which may be common to video surveillance, long term medical imaging, and other growing, high-volume applications, the word &#x201c;client&#x201d; has two functional meanings, and the same physical client may or may not perform both functions. A client writer records units of data (such as files), each with a timestamp that may not change during their lifetime. A client reader locates and reads such a unit of data. Such reads are frequent for a short period after the data is recorded. After that, they become rare, and when they do occur, they usually occur in timestamp-correlated clusters.</p>
<p id="p-0050" num="0061">In video surveillance, for example, a client writer is a camera, while a client reader is an observer. The rare, long-delayed reading of archived files occurs during investigations, which typically target action in a period of an hour or so around an incident.</p>
<p id="p-0051" num="0062">In <figref idref="DRAWINGS">FIG. 1</figref>, each client <b>20</b> may be a client reader or a client writer or both.</p>
<p id="p-0052" num="0063"><figref idref="DRAWINGS">FIG. 2</figref> schematically illustrates an exemplary use case of the PSA system <b>10</b>. In this example, a number of client writers <b>20</b><i>a</i>-<i>b </i>are writing data to the PSA system <b>10</b> and a number of client readers <b>20</b><i>x</i>-<i>z </i>are reading data from the PSA system. The PSA system <b>10</b> includes a number of storage units <b>12</b><i>a</i>-<i>g</i>, with storage unit <b>12</b><i>a </i>being the newest and <b>12</b><i>g </i>being the oldest in terms of user data stored on them. The newest storage unit is currently being written (referred to as &#x201c;hot&#x201d;). In the illustrated example, client writers A and B are writing data to the hot storage unit <b>12</b><i>a </i>via the landing pad <b>11</b>. Client reader Y is reading data from the hot storage unit <b>12</b><i>a </i>via the landing pad. Client reader X is reading data that still exists in the landing pad <b>11</b>. Client reader Z is reading data from a storage unit <b>12</b><i>d </i>that has been awakened after being inactive, via the landing pad. Storage units <b>12</b><i>b</i>, <b>12</b><i>c</i>, and <b>12</b><i>e</i>-<i>f </i>are in an inactive state, which by design can consume almost no power. The oldest storage unit <b>12</b><i>g </i>is in a state where user data stored thereon are being deleted to make space available for new user data. The various states of the storage units mentioned here will be described in more detail later.</p>
<p id="p-0053" num="0064">In one preferred embodiment, the NAS share (a Samba share) presented by the landing pad <b>11</b> offers symlinks (more generally, any suitable type of reference) to the clients <b>20</b>. Also in the share are subdirectories, invisible to the clients, in which actual data is stored, pointed to by the symlinks. There may also be related metadata. Some of the symlinks may be dangling (point to nonexistent files or even to files in a nonexistent directory). The passive landing pad system <b>11</b><i>b</i>, if it exists, possesses copies of all the symlinks but no data.</p>
<p id="p-0054" num="0065">Each file in this preferred embodiment has a Write Once Read Many (WORM) history on three levels. Within the landing pad <b>11</b> as a hot archive file it is created, written once by a client, read at least once (in order to be written to a storage unit; it may or may not be read again by clients), and deleted, in that order. Within the storage unit <b>12</b> it is created, written once, read zero or more times (for client archive reads), and deleted. Within the landing pad <b>11</b> as an archive read file it is (re)created, written once (for example by FTP fetch), read at least once (by the client whose read request caused the archive read, and perhaps by other client reads), and deleted. Thus, each file has one WORM history as a hot archive file, one WORM history as a storage unit file, and zero or more WORM histories as an archive read file. The hot archive file and the archive read file are preferably Posix (Portable Operating System Interface) files. It can retain the same symlink and/or metadata during this entire sequence of events, until the last copy is deleted both from the landing pad <b>11</b> and from the storage unit <b>12</b>.</p>
<p id="p-0055" num="0066">The state of the files (file lifetime) on the landing pad <b>11</b> is described in more detail with reference to <figref idref="DRAWINGS">FIG. 3</figref>. In this figure, the circles and half circles represent states of a file, and the arrows indicate the movement from one state to another.</p>
<p id="p-0056" num="0067">As illustrated, in state F.W<b>1</b><i>a</i>, the file is being written by a client to the landing pad (e.g. using Samba). In state F.W<b>1</b><i>b</i>, which follows shortly after state F.W<b>1</b><i>a</i>, the file is being written from the landing pad to the hot storage unit (<b>12</b><i>a </i>in <figref idref="DRAWINGS">FIG. 2</figref>). After that, the file exists in the landing pad in an idle state (F.R<b>1</b><i>a</i>).</p>
<p id="p-0057" num="0068">In state F.R<b>2</b>, the file is being purged from the landing pad. Purging can happen before or after the hot storage unit becomes inactive. After purging, the file is in a purged state (F.R<b>3</b>) in which the file is deleted and its symlink remains in the landing pad but is dangling (i.e. pointing to a nonexistent file). The purged file may be opened (state F.R<b>4</b>), i.e. read back into the landing pad from a storage unit where it has been stored, by using the dangling symlink. In state F.R<b>1</b><i>b</i>, the file in the landing pad is being read by a client (e.g. using Samba).</p>
<p id="p-0058" num="0069">A file may be read by clients many times. If the file is in state F.R<b>1</b><i>a </i>at the time of a client read request, reading will cycle between states F.R<b>1</b><i>a </i>and F.R<b>1</b><i>b</i>, without requiring data retrieval from a storage unit. If the file is in state F.R<b>2</b> or F.R<b>3</b> at the time of a client read request, the file will go through state F.R<b>4</b> (i.e. reading back from a storage unit) to reach state F.R<b>1</b><i>b </i>(read by a client). States F.R<b>1</b><i>a </i>and F.R<b>1</b><i>b</i>, F.R<b>2</b>, F.R<b>3</b> and F.R<b>4</b> form a complete cycle.</p>
<p id="p-0059" num="0070">In state F.D, the file is being deleted from the landing pad (as well as the storage unit if a copy is stored there).</p>
<p id="p-0060" num="0071">In state F.W<b>1</b><i>a</i>, the Samba file on the landing pad is writable by one client. In states F.R<b>1</b><i>a</i>, F.R<b>1</b><i>b </i>and F.R<b>3</b>, the Samba file is read-only by any client. In states F.W<b>1</b><i>b</i>, F.R<b>2</b>, F.R<b>4</b> and F.D, the Samba file is locked (inaccessible) against all clients.</p>
<p id="p-0061" num="0072">It should be noted that the behavior of the landing pad <b>11</b> and the storage units <b>12</b> must support the state machine of <figref idref="DRAWINGS">FIG. 3</figref>, in the context of multiple clients and multiple files, moving possibly concurrently. In a single landing pad and storage unit, at one time, it is possible for files to be read or written that are in many different states according to <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0062" num="0073">Preferably, every write and read to/from the storage unit is sequential. For maximum efficiency, each landing pad write and read is preferably also sequential. Also for maximum efficiency, the write to the storage unit preferably happens immediately after the write of the hot archive file to the landing pad, and the read from the archive read file preferably happens immediately after the read from the storage unit, so as to take advantage of file system caching on the landing pad. Given enough caching memory, this may cut the disk activity on the landing pad in half, and may eliminate most seeks.</p>
<p id="p-0063" num="0074">Each storage unit <b>12</b> enters an inactive state (e.g., powered off except for network connection) after being left unused (e.g., no read or write activities) for a predetermined period of time. When the landing pad <b>11</b> detects an unsatisfied request for data on an inactive storage unit <b>12</b>, it uses Wake-on-LAN or other suitable methods to wake up that storage unit. Then the landing pad fetches the file and other data it may need from that storage unit. After being left unused (e.g., no read or write activities) for a predetermined time period, the storage unit becomes inactive again.</p>
<p id="p-0064" num="0075">The states of a storage unit <b>12</b> are described in more detail with reference to <figref idref="DRAWINGS">FIG. 4</figref>. In this figure, the circles represent states of the storage unit, and the arrows indicate the movement from one state to another.</p>
<p id="p-0065" num="0076">In state A.W<b>1</b><i>a</i>, the storage unit is being filled with files by the landing pad. In state A.W<b>1</b><i>b</i>, the storage unit is being filled with files and also serving files for reading to the landing pad. States A.W<b>1</b><i>a </i>and A.W<b>1</b><i>b </i>are read/write states, and typically represent the states of a hot storage unit (e.g. <b>12</b><i>a </i>in <figref idref="DRAWINGS">FIG. 2</figref>). In state A.W<b>2</b>, the storage unit cycles down (from a read/write state) and becomes inactive.</p>
<p id="p-0066" num="0077">In state A.R<b>1</b><i>a</i>, the storage unit is idle (i.e., it is active but has no current read or write activities). In state A.R<b>1</b><i>b</i>, the storage unit is serving files for reading to the landing pad. States A.R<b>1</b><i>a </i>and A.R<b>1</b><i>b </i>are read-only states, and may represent the states of a storage unit that has been re-awakened (e.g. <b>12</b><i>d </i>in <figref idref="DRAWINGS">FIG. 2</figref>) or a storage unit that has just been filled but has not yet become inactive. In state A.R<b>2</b>, the storage unit cycles down (from a read-only state) and becomes inactive.</p>
<p id="p-0067" num="0078">In state A.D<b>1</b>, the files on the storage unit are being deleted. In state A.D<b>2</b>, the storage unit cycles down (from the file deleting state) and becomes inactive.</p>
<p id="p-0068" num="0079">States A.D<b>1</b> and A.D<b>2</b> correspond to the file deletion and recycling of an entire storage unit, i.e. the oldest storage unit <b>12</b><i>g </i>in <figref idref="DRAWINGS">FIG. 2</figref>. Optionally (not shown in <figref idref="DRAWINGS">FIG. 4</figref>), data on the oldest storage unit <b>12</b><i>g </i>may be transferred to an external storage device such as a tape drive before file deletion.</p>
<p id="p-0069" num="0080">In states A.W<b>2</b>, A.R<b>2</b>, A.D<b>1</b> and A.D<b>2</b>, the storage unit is locked and inaccessible to the landing pad.</p>
<p id="p-0070" num="0081">The horizontal movements of states from A.W<b>1</b><i>a </i>to A.R<b>1</b><i>a </i>to A.D<b>1</b> and back to A.W<b>1</b><i>a </i>are cyclic and correspond to the storage unit being reused after its data has aged enough to be discarded.</p>
<p id="p-0071" num="0082">As seen in <figref idref="DRAWINGS">FIG. 4</figref>, it is possible for the storage unit to enter the cycling down states (A.W<b>2</b>, A.R<b>2</b> and A.D<b>2</b>) at any time. After cycling down and becoming inactive, the storage unit can move from the inactive state back to state A.W<b>1</b><i>a</i>, A.W<b>1</b><i>b</i>, A.R<b>1</b><i>a</i>, A.R<b>1</b><i>b </i>or A.D<b>1</b>. The process of cycling down of a storage unit is shown in more detail in <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0072" num="0083">In <figref idref="DRAWINGS">FIG. 5</figref>, state A.<b>1</b> may correspond to state A.W<b>1</b><i>a</i>, A.W<b>1</b><i>b</i>, A.R<b>1</b><i>a</i>, A.R<b>1</b><i>b</i>, or A.D<b>1</b> in <figref idref="DRAWINGS">FIG. 4</figref>; states A.<b>2</b><i>a</i>, A.<b>2</b><i>b </i>and A.<b>2</b><i>c </i>collectively constitute state A.<b>2</b>, which may correspond to state A.W<b>2</b>, A.R<b>2</b> or A.D<b>2</b> in <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0073" num="0084">As shown in <figref idref="DRAWINGS">FIG. 5</figref>, a storage unit can enter a cycling down state A.<b>2</b> from a running state A.<b>1</b> in response to a shutdown or reboot action initiated by control software or hardware of the storage unit, or in response to a power loss condition. In the case of a shutdown action, the storage unit performs an orderly shutdown process A.<b>2</b><i>a</i>, and then enters the powered off state (i.e. the inactive state) A.<b>2</b><i>b</i>. In the case of a reboot action, the storage unit performs an orderly shutdown process A.<b>2</b><i>a </i>followed by a boot up process A.<b>2</b><i>c</i>, whereby the storage unit returns to the running state A.<b>1</b>.</p>
<p id="p-0074" num="0085">In the case of a power loss event (typically, in such an event, power is temporarily lost to the entire storage unit including the network card, followed by a resumption of power), the storage unit enters the powered off state A.<b>2</b><i>b </i>without going through the orderly shutdown process A.<b>2</b><i>a. </i></p>
<p id="p-0075" num="0086">From the powered off state A.<b>2</b><i>b</i>, in response to a wakeup signal (e.g. Wake-on-LAN) from the landing pad, or an explicit power on (e.g. pressing a power switch on the storage unit server), the storage unit performs a boot up process A.<b>2</b><i>c</i>, and enters the running state A.<b>1</b>.</p>
<p id="p-0076" num="0087">The landing pad <b>11</b> may be implemented by a dedicated storage system or storage system pair. Each storage unit <b>12</b> may be implemented by a dedicated storage system. The storage systems may have any suitable hardware and software structures, such as a server connected to one or more mass storage devices. A storage system acting as a storage unit <b>12</b> may have different characteristics from one acting as the landing pad <b>11</b>, being optimized for low cost, volume, and bootup time, while the landing pad is optimized for I/O responsiveness. Replacement storage systems may be used to provide redundancy. In one preferred embodiment, a storage system acting as a storage unit <b>12</b> may be recirculated or recycled after being emptied or tape-archived of the oldest data.</p>
<p id="p-0077" num="0088">One particular preferred embodiment, described in more detail below, is implemented based on items of hardware and software that are standard and widely available. It is the combination of these items and the timing and use of them in the power saving archive system <b>10</b> that is new and unobvious.</p>
<p id="p-0078" num="0089">These commonly found items include: the Wake-on-LAN capability that many if not most modern motherboards have; Samba (CIFS) or other NAS service to run on the landing pad, and its VFS (Virtual File System) capability that allows easy layering of special capability on the server's file structure; symlinks, and their robust implementation in many operating systems; the ability to order by timestamp; and efficient file transmission and storage protocols such as FTP.</p>
<p id="p-0079" num="0090">In this preferred embodiment, the landing pad <b>11</b> executes modified NAS software, here Samba, and a software daemon with its configuration capability to manage the FTP connection and (where applicable) the passive landing pad system's symlink structure. The existence of user-space VFS makes the modifications of Samba modular and easy.</p>
<p id="p-0080" num="0091">The Samba modifications of the preferred embodiment implement communication between the Samba instance and the daemon, as follows (refer to <figref idref="DRAWINGS">FIG. 6</figref>):</p>
<p id="p-0081" num="0092">A Samba create (step S<b>601</b>) causes, instead of a file create, a symlink create pointing to a file create. A Samba create communicates with the daemon (step S<b>601</b>). In cases where the landing pad is full the daemon performs a file delete to make the landing pad ready (step S<b>611</b>). In cases where a storage unit is full the daemon performs a directory create (and scheduling of a storage unit move) to make the storage unit ready (step S<b>611</b>). A Samba create awaits communication from the daemon that these steps are complete.</p>
<p id="p-0082" num="0093">A Samba create always precedes a Samba open (step S<b>602</b>), a Samba hot archive write (step S<b>603</b>), and a Samba close (step S<b>604</b>), and a Samba hot archive write always follows a Samba create, so that there is a one-to-one relation here. The daemon's actions make sure that the Samba open and write can follow without delay upon the client's request for a create.</p>
<p id="p-0083" num="0094">A Samba close communicates to the daemon but does not await a return communication from the daemon (step S<b>604</b>). The first close after the file's create is a signal to the daemon to commence writing to a storage unit <b>12</b> (e.g. by FTP) (step S<b>613</b>).</p>
<p id="p-0084" num="0095">A Samba open (step S<b>602</b>) communicates to the daemon and awaits a return communication from the daemon. In the open that immediately follows the create, this is preferably immediate (if the open and create are one command, then see create above for the behavior). Other opens (e.g. step S<b>606</b>), which are in response to a client read request (step S<b>605</b>) and are followed by Samba reads (step S<b>607</b>), may have to await action of the daemon to fetch the data (step S<b>614</b>). An open of an existing file to write is illegal in this preferred embodiment.</p>
<p id="p-0085" num="0096">Samba writes and reads typically do not communicate with the daemon.</p>
<p id="p-0086" num="0097">The daemon is structured and behaves as follows:</p>
<p id="p-0087" num="0098">The daemon is configured to communicate with a number of Samba instances (e.g., via a named pipe) and with a number of storage units <b>12</b> (e.g., via IP addresses). The storage unit communication happens using FTP which therefore is configured also. This configuration of FTP sets it to write to one storage unit (e.g. <b>12</b><i>a </i>in <figref idref="DRAWINGS">FIG. 2</figref>) at a time, but to read from all storage units that contain valid data, even ones which are currently inactive. Therefore, preferably all storage unit IP addresses are static.</p>
<p id="p-0088" num="0099">The daemon maintains a database relating all current symlinks with the file name and stats to which the symlink will point when there is data on the landing pad <b>11</b>. The database also relates each symlink with the storage unit <b>12</b> on which its data is archived.</p>
<p id="p-0089" num="0100">The daemon has the capability of sending a Wake-on-LAN command to any inactive storage unit <b>12</b>, of monitoring whether any storage unit <b>12</b> is inactive, booting up, active, or shutting down. In addition, the daemon sends a shutdown command to any active storage unit that has been unused for a predetermined time period. In an alternative embodiment (less preferred), the daemon does not send the shutdown commands to the active storage units; rather, the active storage units enter the inactive state spontaneously upon being left unused for a predetermined time period, and the daemon merely queries the states of the storage units from time to time. The daemon maintains a database of all storage units <b>12</b>, their fill status, and their state.</p>
<p id="p-0090" num="0101">In the case of failover, the symlinks and these databases are communicated to the passive landing pad system <b>11</b><i>b </i>and maintained current there. That is the only activity of the daemon on the passive landing pad system <b>11</b><i>b</i>. The existence of promptly stored data on the hot storage unit (<b>12</b><i>a </i>in <figref idref="DRAWINGS">FIG. 2</figref>) eliminates the need to copy data to the passive landing pad <b>11</b><i>b</i>, as a fail event will cause this data to be retrieved from the hot storage unit at need. Further description of the daemon will relate to the active landing pad system <b>11</b><i>a </i>only.</p>
<p id="p-0091" num="0102">The daemon monitors the fill status of the landing pad <b>11</b>. The daemon maintains an ordered list of all hot archive files and of all archive read files on the landing pad <b>11</b>, in order to make appropriate deletes to ensure room.</p>
<p id="p-0092" num="0103">The daemon responds to a communication from a Samba create (or create/open) by checking whether there is room for the file about to be written. If not, it forces delete of the oldest file(s) in the hot file area. It then creates the file and attaches it to the symlink and communicates back to Samba (or, alternatively, it creates the file and communicates back to Samba and Samba attaches it to the symlink).</p>
<p id="p-0093" num="0104">It also checks whether there will be room for writing a copy of this newly created file on the hot storage unit <b>12</b><i>a </i>(see <figref idref="DRAWINGS">FIG. 2</figref>). If there will not be enough room, the daemon prepares a hot storage unit as follows. It triggers a wakeup (if necessary) of a second storage unit, which is either an unused storage unit or the oldest storage unit. The daemon does not need to wait for the wakeup process to complete on the second storage unit. This second storage unit now no longer has valid data (this corresponds to state A.D<b>1</b> or A.D<b>2</b> of <figref idref="DRAWINGS">FIG. 4</figref>). If no old archived data exists on the second storage unit, this storage unit is designated the hot storage unit. If old archived data exists on this second storage unit, then its data is deleted in the following manner. First, the read from archive directory corresponding to this storage unit is marked dead and deleted, so that no client reads from this storage unit can succeed, and after any ongoing reads are done, all symlinks pointing to this storage unit are deleted, and after the storage unit is powered up, all its data is deleted. After the second storage unit is empty of data, it is designated the hot storage unit and the FTP copy or copies are allowed to proceed to the storage unit. These actions correspond to step S<b>611</b> in <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0094" num="0105">The daemon responds to a communication from a Samba close that follows a create/open/write of a new file by queueing the file for the FTP archiving to the hot storage unit.</p>
<p id="p-0095" num="0106">If there is a file in the queue for archiving to the hot storage unit, the daemon responds to the up and empty state of the newly opened hot storage unit, or responds to the completion of FTP transmission of the previous file in the queue to the (already open) hot storage unit, whichever is applicable, by triggering the transmission of the file at the head of the queue to the storage unit. These actions correspond to step S<b>613</b> in <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0096" num="0107">The daemon responds to a Samba open for write immediately (step S<b>612</b> in <figref idref="DRAWINGS">FIG. 6</figref>).</p>
<p id="p-0097" num="0108">The daemon responds to a Samba open for read of a non-existing symlink with an error (this means the data has been deleted both from landing pad and from its storage unit). This also applies if the symlink is dangling and its storage unit has been marked dead.</p>
<p id="p-0098" num="0109">The daemon responds to a Samba open for read of an existing symlink by checking whether the symlink is dangling. If it is not dangling (i.e. it points to an existing file on the landing pad), the daemon communicates back to Samba. If the symlink is dangling, the daemon checks the state of the storage unit corresponding to the symlink. If this storage unit is shutting down, the daemon waits for it to shut down. If the storage unit is shut down, the daemon sends it a Wake-on-LAN to make it boot up. If the storage unit is booting up, the daemon waits for it to come active. If the storage unit is active, the daemon checks whether the archive read area on the landing pad is full. If the archive read area on the landing pad is full, the daemon deletes the oldest file(s) in the archive read area to make room. If the storage unit is active and there is room in the archive read area of the landing pad, the daemon triggers an FTP read to the expected file in the storage unit and imposes the correct Posix stats on the resulting file in the landing pad. When this is complete, the daemon points the previously dangling symlink to this resulting file. When the symlink to the requested data is pointing at the data and not dangling, the daemon communicates back to Samba. These actions correspond to step S<b>614</b> in <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0099" num="0110">Each storage unit <b>12</b> in this preferred embodiment contains two pieces of software: an FTP slave, and a script that performs an orderly shutdown to enter the inactive state (see <figref idref="DRAWINGS">FIG. 5</figref>) upon reception of a shutdown command from the landing pad <b>11</b>. Alternatively (less preferred), in lieu of or in addition to the shutdown command from the landing pad, the storage unit <b>12</b> enters the inactive state spontaneously when it determines that it has been left unused (e.g., no read or write activities) for a predetermined time period. In addition, the BIOS of the storage device <b>12</b> is set capable of Wake-on-LAN, as shown in <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0100" num="0111">It will be apparent to those skilled in the art that various modification and variations can be made in the power saving archive system and related method of the present invention without departing from the spirit or scope of the invention. Thus, it is intended that the present invention cover modifications and variations that come within the scope of the appended claims and their equivalents.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A data archive system comprising:
<claim-text>a front storage system;</claim-text>
<claim-text>a plurality of back storage systems connected to the front storage system; and</claim-text>
<claim-text>a data connection for connecting the front storage system to a plurality of clients including a first client and a second client,</claim-text>
<claim-text>wherein in response to receiving a write command with a client file from the first client, the front storage system stores the client file in the front storage system, stores a reference to the client file in the front storage system, and writes the client file to one of the back storage systems,</claim-text>
<claim-text>wherein in response to receiving a read command from the second client specifying a requested file, the front storage system checks a reference to the requested file to determine whether the requested file is stored in the front storage system, wherein if it is, the front storage system transmits the requested file from the front storage system to the second client without communicating with the back storage systems, and wherein if it is not, the front storage system reads the requested file from a selected back storage system into the front storage system and transmits the requested file from the front storage system to the second client,</claim-text>
<claim-text>wherein each client file is stored in the back storage system as a Write Once, Read Many (WORM) file such that it is written only once and read zero or more times,</claim-text>
<claim-text>wherein one of the back storage systems is a hot back storage system which is currently being written to, wherein the front storage system writes client files to the hot back storage system only, until it is filled, and wherein the plurality of back storage systems are filled with client files in a time order sequentially, and</claim-text>
<claim-text>wherein each back storage system enters an inactive state after a predetermined time period of unuse, and wherein each inactive back storage system becomes active in response to receiving a wakeup command from the front storage system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The data archive system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein after writing the client file to the one of the back storage systems, the front storage system deletes the client file from the front storage system after a period of unuse.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The data archive system of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the front storage system maintains a database relating each reference to a back storage system where the referenced file is written.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The data archive system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the front storage system maintains a database storing inactive or active states of each back storage system.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The data archive system of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein in response to the read command from the second client and when the front storage system determines that the requested file is not stored in the front storage system, the front storage system determines, using the database that stores inactive or active states of each back storage system, whether the selected back storage system is inactive or active, and if it is inactive, the front storage system transmits the wakeup command to the selected back storage system before reading the requested file from the selected back storage system.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The data archive system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the front storage system transmits a shutdown signal to each active back storage system after a predetermined time period of unuse of the back storage system, and wherein each back storage system enters the inactive state in response to receiving the shutdown signal from the front storage system.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The data archive system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the second client is different from the first client.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The data archive system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the front storage system includes a server and a mass storage device, and each back storage system includes a server and a mass storage device.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The data archive system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the inactive state of the back storage systems is a powered off state and the wakeup command is a Wake-on-LAN signal.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The data archive system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the front storage system implements a NAS (network-attached storage) protocol for client data access.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The data archive system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the front storage system and the back storage systems implement File Transfer Protocol for file communication between them.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A data archiving method implemented in a data archive system, the data archive system including a front storage system and a plurality of back storage systems connected to the front storage system, the method comprising:
<claim-text>in response to receiving a write command with a client file from a first client, the front storage system storing the client file in the front storage system, storing a reference to the client file in the front storage system, and writing the client file in one of the plurality of back storage systems;</claim-text>
<claim-text>in response to receiving a read command from a second client specifying a requested file, the front storage system checking a reference to the requested file to determine whether the requested file is stored in the front storage system;
<claim-text>if the requested file is stored in the front storage system, the front storage system transmitting the requested file from the front storage system to the second client without communicating with the back storage systems; and</claim-text>
<claim-text>if the requested file is not stored in the front storage system, the front storage system reading the requested file from a selected back storage system into the front storage system and transmitting the requested file from the front storage system to the second client;</claim-text>
</claim-text>
<claim-text>wherein each client file is stored in the back storage system as a Write Once, Read Many (WORM) file such that it is written only once and read zero or more times,</claim-text>
<claim-text>wherein one of the back storage systems is a hot back storage system which is currently being written to, wherein the front storage system writes client files to the hot back storage system only, until it is filled, and wherein the plurality of back storage systems are filled with client files in a time order sequentially,</claim-text>
<claim-text>each of the plurality of back storage systems entering an inactive state after a predetermined time period of unuse; and</claim-text>
<claim-text>each inactive back storage system becoming active in response to receiving a wakeup command from the front storage system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:
<claim-text>deleting the client file from the front storage system after a period of unuse of the client file.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising:
<claim-text>the front storage system maintaining a database relating each reference to a back storage system where the referenced file is written.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:
<claim-text>the front storage system maintaining a database storing inactive or active states of each back storage system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:
<claim-text>in response to a read command from the second client and when the front storage system determines that the requested file is not stored in the front storage system, the front storage system determining, using the database that stores inactive or active states of each back storage system, whether the selected back storage system is inactive or active, and if it is inactive, the front storage system transmitting the wakeup command to the selected back storage system before reading the requested file from the selected back storage system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:
<claim-text>the front storage system transmitting a shutdown signal to each active back storage system after a predetermined time period of unuse of the back storage system; and</claim-text>
<claim-text>each back storage system entering the inactive state in response to receiving the shutdown signal from the front storage system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the second client is different from the first client.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the inactive state of the back storage systems is a powered off state and the wakeup command is a Wake-on-LAN signal.</claim-text>
</claim>
</claims>
</us-patent-grant>
