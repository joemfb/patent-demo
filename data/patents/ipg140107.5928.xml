<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627037-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627037</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13045087</doc-number>
<date>20110310</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2010-105622</doc-number>
<date>20100430</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>391</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>12</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>13</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>13</main-group>
<subgroup>28</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>711167</main-classification>
<further-classification>711103</further-classification>
<further-classification>711150</further-classification>
<further-classification>711151</further-classification>
<further-classification>711157</further-classification>
<further-classification>711158</further-classification>
</classification-national>
<invention-title id="d2e71">Memory system having nonvolatile semiconductor storage devices</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6134145</doc-number>
<kind>A</kind>
<name>Wong</name>
<date>20001000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>36518522</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6857055</doc-number>
<kind>B2</kind>
<name>Jeddeloh</name>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711163</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>8407407</doc-number>
<kind>B1</kind>
<name>Adler et al.</name>
<date>20130300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2002/0181311</doc-number>
<kind>A1</kind>
<name>Miyauchi</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>365227</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2004/0088511</doc-number>
<kind>A1</kind>
<name>Bacon et al.</name>
<date>20040500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711167</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2007/0168625</doc-number>
<kind>A1</kind>
<name>Cornwell et al.</name>
<date>20070700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711157</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2008/0219078</doc-number>
<kind>A1</kind>
<name>Kamiyama</name>
<date>20080900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>365226</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2009/0157993</doc-number>
<kind>A1</kind>
<name>Garrett, Jr.</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711167</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2010/0011158</doc-number>
<kind>A1</kind>
<name>Shiraishi et al.</name>
<date>20100100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2010/0036998</doc-number>
<kind>A1</kind>
<name>Ben-Rubi</name>
<date>20100200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711100</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2010/0250727</doc-number>
<kind>A1</kind>
<name>King et al.</name>
<date>20100900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709224</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2010/0274953</doc-number>
<kind>A1</kind>
<name>Lee et al.</name>
<date>20101000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2011/0035634</doc-number>
<kind>A1</kind>
<name>Blaum et al.</name>
<date>20110200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714704</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2011/0173462</doc-number>
<kind>A1</kind>
<name>Wakrat et al.</name>
<date>20110700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713300</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>JP</country>
<doc-number>2010-20715</doc-number>
<date>20100100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>KR</country>
<doc-number>10-2004-0105728</doc-number>
<date>20041200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00017">
<othercit>Office Action issued Aug. 17, 2012, in Korean Patent Application No. 10-2011-23468 with English translation.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>15</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>711103</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711150-151</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711154</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711157-158</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711167-168</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>23</number-of-drawing-sheets>
<number-of-figures>23</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110271040</doc-number>
<kind>A1</kind>
<date>20111103</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Kamizono</last-name>
<first-name>Akinori</first-name>
<address>
<city>Kanagawa-ken</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Kamizono</last-name>
<first-name>Akinori</first-name>
<address>
<city>Kanagawa-ken</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Oblon, Spivak, McClelland, Maier &#x26; Neustadt, L.L.P.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Kabushiki Kaisha Toshiba</orgname>
<role>03</role>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Bertram</last-name>
<first-name>Ryan</first-name>
<department>2187</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">According to an embodiment, a memory system includes a memory unit, a memory controller, a timer and a timer control unit. The memory unit has nonvolatile first and second chips capable of holding data. The memory controller transfers data received from host equipment simultaneously to the first and second chips. The timer measures a lapse of preset shift time. The timer control unit starts writing of data into the second chip immediately after the lapse of the shift time.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="69.17mm" wi="109.98mm" file="US08627037-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="156.29mm" wi="105.07mm" file="US08627037-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="155.96mm" wi="164.85mm" file="US08627037-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="217.93mm" wi="149.86mm" orientation="landscape" file="US08627037-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="136.23mm" wi="108.97mm" file="US08627037-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="178.39mm" wi="164.17mm" file="US08627037-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="211.84mm" wi="162.05mm" file="US08627037-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="244.52mm" wi="133.52mm" orientation="landscape" file="US08627037-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="215.90mm" wi="175.01mm" orientation="landscape" file="US08627037-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="246.46mm" wi="143.17mm" file="US08627037-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="150.54mm" wi="104.90mm" file="US08627037-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="119.21mm" wi="114.38mm" file="US08627037-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="162.05mm" wi="107.61mm" file="US08627037-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="217.93mm" wi="180.51mm" orientation="landscape" file="US08627037-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="216.58mm" wi="179.83mm" orientation="landscape" file="US08627037-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="258.83mm" wi="132.76mm" orientation="landscape" file="US08627037-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="202.27mm" wi="115.06mm" orientation="landscape" file="US08627037-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="239.01mm" wi="153.25mm" file="US08627037-20140107-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="132.08mm" wi="119.21mm" file="US08627037-20140107-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="149.86mm" wi="112.35mm" file="US08627037-20140107-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="221.32mm" wi="114.38mm" orientation="landscape" file="US08627037-20140107-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="221.32mm" wi="128.02mm" orientation="landscape" file="US08627037-20140107-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00022" num="00022">
<img id="EMI-D00022" he="125.31mm" wi="103.55mm" file="US08627037-20140107-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00023" num="00023">
<img id="EMI-D00023" he="157.99mm" wi="106.93mm" file="US08627037-20140107-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATION</heading>
<p id="p-0002" num="0001">This application is based upon and claims the benefit of priority from the prior Japanese Patent Application No. 2010-105622, filed on Apr. 30, 2010, the entire contents of which are incorporated herein by reference.</p>
<heading id="h-0002" level="1">FIELD</heading>
<p id="p-0003" num="0002">Embodiments described herein relate to a memory system having nonvolatile semiconductor storage devices.</p>
<heading id="h-0003" level="1">BACKGROUND</heading>
<p id="p-0004" num="0003">There has recently been development of semiconductor storage devices, e.g. flash memory cards which are nonvolatile semiconductor storage media. Such semiconductor storage devices are in widespread use as external storage devices of information equipment such as digital cameras, which are host equipment. The increase in volume of data to be handled by the host equipment has increased the capacity and density of a flash memory.</p>
<p id="p-0005" num="0004">For the flash memory card, there is considered an approach to increase the speed of writing data into the flash memory. However, there is a problem of increased current consumption of the flash memory card.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram schematically showing a memory system according to an embodiment;</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 2</figref> is a table showing signal allocation to pins of a connector according to the embodiment;</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram schematically showing a configuration of a memory card according to the embodiment;</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram schematically showing a configuration of a memory unit according to the embodiment;</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 5</figref> is a block diagram schematically showing an internal configuration of a chip according to the embodiment;</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 6</figref> is a circuit diagram of a part of a memory cell block according to the embodiment;</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 7</figref> is a diagram schematically showing parallel control according to a first embodiment;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 8</figref> is a basic timing chart of the parallel control according to the first embodiment;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 9</figref> is a basic flowchart of the parallel control according to the first embodiment;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 10</figref> is a graph showing a relationship between average current consumption and Busy shift time according to the first embodiment;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 11</figref> is a table showing a relationship between average current consumption and busy shift time or data-in shift time according to the embodiment;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 12</figref> is a graph showing an example of a relationship between a threshold of the average current consumption and the busy shift time according to the first embodiment;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 13</figref> is an example of a timing chart of the parallel control according to the first embodiment;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 14</figref> is another example of a timing chart of the parallel control according to the first embodiment;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 15</figref> is a diagram schematically showing interleave control according to a second embodiment;</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 16</figref> is a basic timing chart of the interleave control according to the second embodiment;</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 17</figref> is a basic flowchart of the interleave control according to the second embodiment;</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 18</figref> is a table showing a relationship between average current consumption and data-in shift time according to the second embodiment;</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 19</figref> is a graph showing an example of a relationship between a threshold of the average current consumption and the data-in shift time according to the second embodiment;</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 20</figref> is an example of a timing chart of the interleave control according to the second embodiment;</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 21</figref> is another example of a timing chart of the interleave control according to the second embodiment;</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 22</figref> is a graph showing a relationship between a data transfer speed between host equipment and an external interface unit and busy shift time or data-in shift time according to a third embodiment; and</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 23</figref> is a table showing a relationship between average current consumption and Busy shift time or data-in shift time according to the third embodiment.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0029" num="0028">According to an embodiment, a memory system includes a memory unit, a memory controller, a timer and a timer control unit. The memory unit has nonvolatile first and second chips capable of holding data. The memory controller transfers data received from host equipment simultaneously to the first and second chips. The timer measures a lapse of preset shift time. The timer control unit starts writing of data into the second chip immediately after the lapse of the shift time.</p>
<p id="p-0030" num="0029">Further embodiments are described below with reference to the drawings. In the drawings, the same reference numerals denote the same or similar portions.</p>
<p id="p-0031" num="0030">The configuration of a semiconductor device according to a first embodiment is described below with use of <figref idref="DRAWINGS">FIG. 1</figref>. <figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of a memory system according to the embodiment.</p>
<p id="p-0032" num="0031">The overall configuration of the memory system is described with reference to the drawings. As shown in <figref idref="DRAWINGS">FIG. 1</figref>, a memory card <b>100</b> that is the memory system is connected to host equipment <b>200</b> through a connector <b>13</b>. The host equipment <b>200</b> includes hardware and software to access the memory card <b>100</b> connected through the connector <b>13</b>. The memory card <b>100</b> operates with power supplied when the memory card is connected to the host equipment <b>200</b>, and performs processing in response to the access by the host equipment <b>200</b>.</p>
<p id="p-0033" num="0032">The configuration of the memory card is described. The memory card <b>100</b> is, for example, an SD memory card used as an external storage device of the host equipment <b>200</b> by being loaded into the host equipment <b>200</b>. Examples of the host equipment <b>200</b> include information processing equipment including a personal computer, a digital camera and the like, which processes various data such as image data and music data.</p>
<p id="p-0034" num="0033">Note that, in the embodiment, the memory card <b>100</b> and the host equipment <b>200</b>, to which the memory card <b>100</b> is applied, may be configured as the memory system. Alternatively, the form of a card is not adopted, and instead a flash memory and a controller to control the flash memory may be incorporated into the host equipment <b>200</b> to configure the memory system. Note that electronics such as a PDA, an electronic book, a digital video and a mobile phone are also conceivable as the host equipment <b>200</b> other than those mentioned above.</p>
<p id="p-0035" num="0034">The memory card <b>100</b> transmits and receives information to and from the host equipment <b>200</b> through the connector <b>13</b>. The memory card <b>100</b> includes a memory unit (nonvolatile semiconductor storage unit) <b>11</b> that is an NAND flash memory chip (which may be simply called the NAND flash memory or flash memory), a memory controller (card controller) <b>12</b> which controls the memory unit <b>11</b>, and the connector <b>13</b> having multiple signal pins (pins <b>1</b> to <b>9</b>).</p>
<p id="p-0036" num="0035">The connector <b>13</b> is electrically connected to the memory controller <b>12</b>. Signal allocation to the pins <b>1</b> to <b>9</b> of the connector <b>13</b> is as shown in <figref idref="DRAWINGS">FIG. 2</figref>, for example. <figref idref="DRAWINGS">FIG. 2</figref> is a table showing the pins <b>1</b> to <b>9</b> and signals allocated thereto. Note that, in <figref idref="DRAWINGS">FIG. 2</figref>, an SD mode (1-bit and 4-bit) and an SPI mode are data transfer operation modes specified by the SD memory card standard. Note that transfer modes of the memory card <b>100</b> include, depending on a transfer clock frequency and the like, an ultra high speed mode (also called &#x201c;UHSM&#x201d;) supporting up to 104 MHz, and the like, in addition to a normal speed mode (also called &#x201c;NSM&#x201d;) supporting up to 25 MHz and a high speed mode (also called &#x201c;HSM&#x201d;) supporting up to 50 MHz.</p>
<p id="p-0037" num="0036">The embodiment of the invention is more effective when applied to the case where the current consumption limit is specified in multiple steps during high-speed data transfer such as in the ultra high speed mode (UHSM), for example.</p>
<p id="p-0038" num="0037">Data DAT<b>0</b>, DAT<b>1</b>, DAT<b>2</b>, DAT<b>3</b> are allocated to the pins <b>7</b>, <b>8</b>, <b>9</b>, <b>1</b>, respectively. A card detection signal CD is also allocated to the pin <b>1</b>. A command CMD and a response RES that is a response signal of the memory card <b>100</b> to the command CMD are allocated to the pin <b>2</b>. A clock signal CLK is allocated to the pin <b>5</b>. A power supply voltage VDD is allocated to the pin <b>4</b>, a ground voltage VSS<b>1</b> is allocated to the pin <b>3</b>, and a ground voltage VSS<b>2</b> is allocated to the pin <b>6</b>.</p>
<p id="p-0039" num="0038">The memory card <b>100</b> is formed so that the memory card can be inserted into and removed from a slot provided in the host equipment <b>200</b>. A host controller (not shown) provided in the host equipment <b>200</b> communicates various signals and data with the memory controller <b>12</b> in the memory card <b>100</b> through the pins <b>1</b> to <b>9</b>. For example, when data are written into the memory card <b>100</b>, the host controller transfers a write command as a serial signal to the memory controller <b>12</b> through the pin <b>2</b>. In this event, the memory controller <b>12</b> retrieves the write command given to the pin <b>2</b> in response to the clock signal supplied to the pin <b>5</b>.</p>
<p id="p-0040" num="0039">As the operation modes (hereinafter also referred to as the &#x201c;transfer modes&#x201d;) during data transfer of the memory card <b>100</b> that is the SD memory card, the SD mode and the SPI mode are specified as described above. Furthermore, as the transfer modes of the SD mode, two modes are specified, including a 1-bit mode using only the data DAT<b>0</b> and a 4-bit mode using the data DAT<b>0</b> to DAT<b>3</b>. Note that the transfer modes of the memory card <b>100</b> include modes of various transfer speeds depending on the transfer clock frequency and the like.</p>
<p id="p-0041" num="0040">In the SD mode (SD 4-bit mode) for data transfer with 4-bit bus width, four pins <b>1</b>, <b>7</b>, <b>8</b>, <b>9</b> for data are all used for the data transfer. On the other hand, in the SD mode (SD 1-bit mode) for data transfer with 1-bit bus width, only the pin <b>7</b> is used for the data transfer, and the pins <b>8</b>, <b>9</b> for data are not used. Moreover, the pin <b>1</b> is specified to be used for asynchronous interrupt, for example, from the memory card <b>100</b> to the host equipment <b>200</b>, and the like.</p>
<p id="p-0042" num="0041">The SPI mode is the 1-bit bus width transfer mode. In the SPI mode, the pin <b>7</b> is used for a data signal line (DATA OUT) from the memory card <b>100</b> to the host equipment <b>200</b>, the pin <b>2</b> is used for a data signal line (DATA IN) from the host equipment <b>200</b> to the memory card <b>100</b>, and the pins <b>8</b>, <b>9</b> are not used. Moreover, in the SPI mode, the pin <b>1</b> is specified to be used for transmission of a chip select signal CS from the host equipment <b>200</b> to the memory card <b>100</b>.</p>
<p id="p-0043" num="0042">Note that whether to use the SD mode or the SPI mode is determined at the initialization of the memory card <b>100</b>. Moreover, a command (SET BUS WIDTH) from the host selects between the 1-bit mode and 4-bit mode of the SD mode.</p>
<p id="p-0044" num="0043">Here, as described above, the write command is serially inputted to the memory controller <b>12</b> using only the pin <b>2</b>. The pin <b>2</b> allocated to the input of the command is disposed between the pin <b>1</b> and the pin <b>3</b> for a ground potential Vss as shown in <figref idref="DRAWINGS">FIG. 2</figref>. That is, the connector <b>13</b> is used for the host controller in the host equipment <b>200</b> and the memory card <b>100</b> to communicate with each other.</p>
<p id="p-0045" num="0044">Meanwhile, communication between the memory unit <b>11</b> and the memory controller <b>12</b> is performed by a memory interface unit (which may be hereinafter simply called the &#x201c;NAND bus&#x201d; or &#x201c;NAND interface&#x201d;) <b>21</b> for the NAND flash memory. Thus, although not shown here, the memory unit <b>11</b> and the memory controller <b>12</b> are connected to each other through 8-bit input/output (I/O) lines, for example.</p>
<p id="p-0046" num="0045">For example, when the memory controller <b>12</b> writes data into the memory unit <b>11</b>, the memory controller <b>12</b> sequentially transmits a data input command <b>80</b>H, a column address, a page address, data and a program command <b>10</b>H (or a cache program command <b>15</b>H) to the memory unit <b>11</b> through the I/O lines. Here, &#x201c;H&#x201d; of the command <b>80</b>H represents hexadecimal notation, and 8-bit signals &#x201c;10000000&#x201d; are actually given to the 8-bit I/O lines in parallel. That is, multiple bit commands are given in parallel in an external interface unit <b>15</b>.</p>
<p id="p-0047" num="0046">Meanwhile, in the memory interface unit <b>21</b>, the commands and data to the memory unit <b>11</b> are communicated using the same common I/O line. Therefore, the interface (connector <b>13</b>) through which the host controller in the host equipment <b>200</b> and the memory card <b>100</b> communicate with each other differs from the interface (NAND bus <b>21</b>) through which the memory unit <b>11</b> and the memory controller <b>12</b> communicate with each other.</p>
<p id="p-0048" num="0047">The configuration of the memory controller is described below. The internal configuration of the memory controller included in the memory card <b>100</b> shown in <figref idref="DRAWINGS">FIG. 1</figref> is described with use of <figref idref="DRAWINGS">FIG. 3</figref>. <figref idref="DRAWINGS">FIG. 3</figref> is a block diagram of the memory card <b>100</b>.</p>
<p id="p-0049" num="0048">The memory unit <b>11</b> is a nonvolatile semiconductor memory, and includes multiple NAND flash memories. The data and the like transmitted from the host equipment <b>200</b> are stored in the memory unit <b>11</b>. Moreover, firmware (system information) that is control programs, and the like may be stored in the memory unit.</p>
<p id="p-0050" num="0049">The connector <b>13</b> is connected to the memory controller <b>12</b> through a bus <b>14</b>. The bus <b>14</b> includes a CLK line, a CMD/RES line, a DAT<b>0</b> line, a DAT<b>1</b> line, a DAT<b>2</b> line, a CD/DAT<b>3</b> line, a VDD line, a VSS<b>1</b> line and a VSS<b>2</b> line. The memory controller <b>12</b> is connected to the memory unit <b>11</b> through a bus having, for example, an 8-bit bus width.</p>
<p id="p-0051" num="0050">The memory controller <b>12</b> manages the physical state in the memory unit <b>11</b> (e.g., what physical block address includes what number logical sector address data or which block is in the erased state). The memory controller <b>12</b> includes the external interface unit <b>15</b>, a command control unit <b>16</b>, a data control unit <b>17</b>, an MPU (Micro Processing Unit) <b>18</b>, a ROM (Read Only Memory) <b>19</b>, a RAM (Random Access Memory) <b>20</b>, the memory interface unit <b>21</b>, and a timer (measurement unit) <b>22</b>.</p>
<p id="p-0052" num="0051">The external interface unit <b>15</b> performs an interfacing process between the memory controller <b>12</b> and the host equipment <b>200</b>. To be more specific, the external interface unit <b>15</b> is a functional block connected to the host equipment <b>200</b> through the connector <b>13</b> to transmit and receive commands, various data or the like according to a predetermined protocol under the control of the MPU (control unit) <b>18</b>.</p>
<p id="p-0053" num="0052">The command control unit <b>16</b> receives a command CMD transmitted from the host equipment <b>200</b>, and interprets the command CMD. The command control unit <b>16</b> also generates a response RES that is a response signal to the command CMD, and transmits the response RES to the host equipment <b>200</b>.</p>
<p id="p-0054" num="0053">The data control unit <b>17</b> transmits and receives data based on a command CMD transmitted from the host equipment <b>200</b>. The data control unit <b>17</b> also generates a status data (STATUS) showing an operation state and the like of the memory card <b>100</b>, and transmits the status data to the host equipment <b>200</b>.</p>
<p id="p-0055" num="0054">The MPU <b>18</b> controls operations of the entire memory card <b>100</b>. The MPU <b>18</b> creates various tables in the RAM <b>20</b> by reading the firmware (systemm information) stored in the ROM <b>19</b> or the memory unit <b>11</b> into the RAM <b>20</b> and then executing a predetermined process when the power is supplied to the memory card <b>100</b>, for example. In addition, the MPU <b>18</b> receives a write command, a read command, an erase command or the like from the host equipment <b>200</b>, and then executes a predetermined process for the memory unit <b>11</b> or controls a data transfer process through a buffer. To be more specific, the MPU <b>18</b> issues a write command in writing of data, for example. The write command is, for example, &#x201c;<b>80</b>H&#x201d;, &#x201c;<b>10</b>H&#x201d; or the like, which is specified by the NAND interface. The MPU <b>18</b> also has a timer control unit (measurement control unit) <b>18</b><i>a </i>which controls the timer <b>22</b>. The timer control unit <b>18</b><i>a </i>can set a measurement time in the timer <b>22</b> or control the MPU <b>18</b> or the memory interface unit <b>21</b> based on a time measurement completion signal from the timer <b>22</b>. Specifically, the timer control unit <b>18</b><i>a </i>controls the memory interface unit <b>21</b>, thereby controlling (delaying) the transfer of the write command issued by the MPU <b>18</b> or the execution of data input (data in). Note that the timer control unit <b>18</b><i>a </i>may supply a measurement completion signal to the MPU <b>18</b>. Moreover, the timer control unit <b>18</b><i>a </i>may be provided outside the MPU <b>18</b>.</p>
<p id="p-0056" num="0055">The ROM <b>19</b> is a memory to store the firmware and the like to be executed by the MPU <b>18</b>. The RAM <b>20</b> is a memory used as a work area of the MPU <b>18</b> to store the firmware and various tables. The memory interface unit <b>21</b> is a functional block to perform an interfacing process between the memory controller <b>12</b> and the memory unit <b>11</b>.</p>
<p id="p-0057" num="0056">The memory interface unit <b>21</b> performs the transfer of the write command issued by the MPU <b>18</b> or data input (data in) to the memory unit <b>11</b> upon receipt of, for example, the time measurement completion signal or the like from the timer control unit <b>18</b><i>a</i>. Note that although <figref idref="DRAWINGS">FIG. 3</figref> shows the MPU <b>18</b> and the memory interface unit <b>21</b> as separate circuit blocks, the function, of the MPU <b>18</b>, to issue the write command, for example, may be included in the memory interface unit <b>21</b>. It is possible to accomplish an adjustment of write command set timing to the memory interface unit <b>21</b> without the timer <b>22</b>. It is possible to control write timing to a chip by using an internal clock of the memory controller <b>12</b> having a constant interval. Specifically, after a redundant program command (e.g. a loop process being only count up until predetermined upper limit) is executed designated numbers by firmware stored the RAM <b>20</b>, a setting of the write command is executed. By an increase or a decrease of the loop numbers, although the internal clock of the MPU <b>18</b> or the controller <b>12</b> is depended, it is possible to adjust the command execution timing at a few clock units, and it becomes able to control the write timing to the chip.</p>
<p id="p-0058" num="0057">The timer <b>22</b> measures (counts) time using a period from the rising edge to falling edge of 1 CLK (clock) as a minimum unit. When the time measurement is completed, the timer <b>22</b> notifies the timer control unit <b>18</b><i>a </i>to that effect.</p>
<p id="p-0059" num="0058">In the memory controller <b>12</b>, a buffer (not shown) is provided, which can temporarily store a predetermined amount of data (e.g., data for one page) when the data sent from the host equipment <b>200</b> is written to the memory unit <b>11</b> or temporarily store a predetermined amount of data when the data read from the memory unit <b>11</b> is sent to the host equipment <b>200</b>.</p>
<p id="p-0060" num="0059">The configuration of a memory unit <b>11</b> is schematically described. As shown in <figref idref="DRAWINGS">FIG. 4</figref>, the memory unit <b>11</b> has multiple chips (nonvolatile semiconductor memory chips) <b>11</b><i>a </i>(e.g., n chips of Chip <b>0</b> to Chip n&#x2212;1). Each of the chips <b>11</b><i>a </i>is an NAND flash memory.</p>
<p id="p-0061" num="0060">The configuration of a NAND flash memory is described. The internal configuration of the chip <b>11</b><i>a </i>is schematically described with reference to <figref idref="DRAWINGS">FIG. 5</figref>. <figref idref="DRAWINGS">FIG. 5</figref> is block diagram of the chip <b>11</b><i>a</i>. As a shown in <figref idref="DRAWINGS">FIG. 5</figref>, a memory cell array <b>30</b>, a row decoder <b>31</b>, a column buffer (page buffer) <b>32</b>, and a data cache <b>33</b> are included in the chip <b>11</b><i>a. </i></p>
<p id="p-0062" num="0061">The configuration of a memory cell <b>30</b> is described. Multiple memory cell block blocks BLK (e.g., m chips of BLK <b>0</b> to BLKm&#x2212;1) (m is a natural number) are included in the memory cell <b>30</b>.</p>
<p id="p-0063" num="0062">The memory cell block BLK includes multiple Pages <b>0</b> to p&#x2212;1 (p is a natural number). The page is a unit by which data are collectively written, and is a set of multiple memory cell transistors capable of holding data. Moreover, data erasing is performed for each memory cell block BLK. That is, data in the same memory cell block BLK is erased collectively.</p>
<p id="p-0064" num="0063">A row decoder <b>31</b> included in the chip <b>11</b><i>a </i>is described. The row decoder <b>31</b> receives a row address from the memory controller <b>12</b> and decodes the row address. The row address includes a block address specifying any of the memory cell blocks BLK and a page address specifying any of the pages. The row decoder <b>31</b> selects any of the pages in any of the memory cell blocks BLK based on the row address.</p>
<p id="p-0065" num="0064">A data cache <b>33</b> is described. The data cache <b>33</b> is configured to be able to temporarily hold data of a page size.</p>
<p id="p-0066" num="0065">The data cache <b>33</b> transmits and receives data to and from the memory controller <b>12</b>. More specifically, the data cache <b>33</b> transfers data given from a column buffer <b>32</b> to the memory controller <b>12</b> during reading of data, receives data given from the memory controller <b>12</b> during writing, and transfers the received data page by page to the column buffer <b>32</b>.</p>
<p id="p-0067" num="0066">The column buffer <b>32</b> temporarily holds data read page by page from a memory cell array <b>30</b> during reading of data, and transfers the data to the data cache <b>33</b>. During writing of data, the column buffer <b>32</b> transfers the data transferred from the data cache <b>33</b> to bit lines BL<b>0</b> to BLn, and executes a program for each page of the data.</p>
<p id="p-0068" num="0067">Next, a memory cell block is described. The configuration of a memory cell block BLK is described in detail with reference to <figref idref="DRAWINGS">FIG. 6</figref>. <figref idref="DRAWINGS">FIG. 6</figref> is a circuit diagram of a part of a memory cell block.</p>
<p id="p-0069" num="0068">As shown in <figref idref="DRAWINGS">FIG. 6</figref>, the memory cell block BLK has multiple NAND cells. Each of the NAND cells includes multiple (e.g., eight) memory cell transistors MT and select transistors ST<b>1</b>, ST<b>2</b>. The memory cell transistors MT each have a stacked gate structure in which a charge storage layer (e.g., a floating gate) is formed on a semiconductor substrate with a gate insulating film interposed therebetween and a control gate is formed on the charge storage layer with an inter-gate insulating film interposed therebetween. Note that the number of the memory cell transistors MT is not limited to 8 but may be 16 or 32. The memory cell transistors MT share source and drain with adjacent memory cell transistors MT, and are arranged so that current paths are connected in series between the select transistors ST<b>1</b>, ST<b>2</b>. A drain region at one end of the memory cell transistors MT connected in series is connected to a source region of the select transistor ST<b>1</b>, and a source region at the other end is connected to a drain region of the select transistor ST<b>2</b>.</p>
<p id="p-0070" num="0069">The control gates of the memory cell transistors MT in the same row are connected in common to any of word lines WL<b>0</b> to WL<b>7</b>, and gates of the select transistors ST<b>1</b>, ST<b>2</b> of the memory cells in the same row are connected in common to select gate lines SGD and SGS, respectively. Furthermore, drains of the select transistors ST<b>1</b> in the same column in the memory cell array are connected in common to any of the bit lines BL<b>0</b> to BLq&#x2212;1 (q is a natural number), and sources of the select transistors ST<b>2</b> are connected in common to a source line SL.</p>
<p id="p-0071" num="0070">In the above configuration, the data are collectively written and read for the multiple memory cell transistors MT connected to the same word line WL. The memory cell transistors MT can hold, for example, 1 bit data. In this case, one page is allocated to one word line WL. Thus, in the example shown in <figref idref="DRAWINGS">FIG. 6</figref>, one memory cell block BLK includes eight pages. On the other hand, the memory cell transistors MT may hold multiple bits. In this case, writing and reading of data are performed for each bit. For example, when the memory cell transistors MT hold 2 bit data, pages corresponding to a lower bit and an upper bit are allocated to one word line WL. Thus, in this case, one memory cell block BLK includes (8&#xd7;2)=16 pages in the example shown in <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0072" num="0071">Next, description is given of control of the memory unit <b>11</b> by the memory controller <b>12</b> in the memory system thus configured. The memory controller <b>12</b> according to the embodiment can simultaneously access the multiple chips <b>11</b><i>a </i>in the memory unit <b>11</b>. This is called parallel control.</p>
<p id="p-0073" num="0072">Basic operations of the parallel control are described. The parallel control is described with reference to <figref idref="DRAWINGS">FIGS. 7 and 8</figref>. <figref idref="DRAWINGS">FIG. 7</figref> is a schematic diagram of the parallel control, showing how the data (external data) transferred from the host equipment is transferred to each of the chips <b>11</b><i>a</i>. <figref idref="DRAWINGS">FIG. 8</figref> is a basic timing chart of the parallel control, showing input data, write data and a ready/busy (R/B) signal for each of the chips <b>11</b><i>a. </i></p>
<p id="p-0074" num="0073">As shown in <figref idref="DRAWINGS">FIG. 7</figref>, in the parallel control, the data transferred from the host equipment <b>200</b> is divided into multiple pieces, which are simultaneously accessed (written) in the pages of the multiple chips <b>11</b><i>a</i>. To be more specific, one piece of data is divided into multiple ((n&#x2212;1) in the example shown in <figref idref="DRAWINGS">FIG. 7</figref>) data strings D<b>0</b> to Dn&#x2212;1. The host equipment <b>200</b> assigns addresses to the data strings D<b>0</b> to Dn&#x2212;1, respectively. It is assumed, for example, that addresses corresponding to Chips <b>0</b> to n&#x2212;1 are assigned to the data strings D<b>0</b> to Dn&#x2212;1, respectively. In this case, the data strings D<b>0</b> to Dn&#x2212;1 are transferred in parallel to Chips <b>0</b> to n&#x2212;1.</p>
<p id="p-0075" num="0074">As shown in <figref idref="DRAWINGS">FIG. 8</figref>, from time t<b>0</b> to time t<b>1</b>, the memory controller <b>12</b> simultaneously transmits data strings to the chips <b>11</b><i>a </i>into which data are written. In this event, since each of the chips <b>11</b><i>a </i>is in an accessible state (data receivable state), i.e., in a ready state, a high level (also simply described as H) R/B signal is outputted.</p>
<p id="p-0076" num="0075">At time t<b>1</b>, the memory controller <b>12</b> issues a write command (<b>10</b>H). In response to the command, each of the chips <b>11</b><i>a </i>performs writing (programming) of data strings from time t<b>1</b> to time t<b>2</b>. Since the chip <b>11</b><i>a </i>is in an access prohibited state (data reception prohibited state), i.e., in a busy state during the period, a low level (also simply described as L) R/B signal is outputted. Note that the time between the start of programming and the end of programming is hereinafter referred to as busy time. In the embodiment, for convenience, the busy time is treated the same as programming time for the chip <b>11</b><i>a. </i></p>
<p id="p-0077" num="0076">After the programming of each of the chips <b>11</b><i>a </i>is completed, each chip <b>11</b><i>a </i>returns to the ready state. Thus, the memory controller <b>12</b> transmits data strings to the chips <b>11</b><i>a </i>from time t<b>2</b> to time t<b>3</b>. Thereafter, the programming and transmission of data strings are repeated in the same manner.</p>
<p id="p-0078" num="0077">Next, busy shift is described. The memory controller <b>12</b> according to the embodiment performs control to shift the program start time between the chips <b>11</b><i>a </i>in the parallel control described above. This is called &#x201c;busy shift&#x201d;. The busy shift is described below with reference to <figref idref="DRAWINGS">FIG. 9</figref>. <figref idref="DRAWINGS">FIG. 9</figref> is a basic flowchart of the parallel control according to the first embodiment, showing the flow of operations of the memory system. In the embodiment, description is given of the case where writing is performed simultaneously into n chips of Chip <b>0</b> to Chip n&#x2212;1.</p>
<p id="p-0079" num="0078">First, the memory controller <b>12</b> expands into the RAM <b>20</b> the firmware (system information) stored in the ROM <b>19</b> or the memory unit <b>11</b> or information on program deviation time (which may be simply called shift time or first period) stored in the memory unit <b>11</b> when the power is supplied to the memory card <b>100</b>. The control is performed by the MPU <b>18</b>, for example (Step S<b>1001</b>).</p>
<p id="p-0080" num="0079">Next, setting information including current consumption limit, a transfer speed between the host equipment <b>200</b> and the memory controller <b>12</b>, and the like is supplied to the external interface unit <b>15</b> from the host equipment <b>200</b> (Step S<b>1002</b>).</p>
<p id="p-0081" num="0080">The MPU <b>18</b> derives program deviation time from the RAM <b>20</b> based on the setting information. In this event, the MPU <b>18</b> derives the program deviation time from the table expanded into the RAM <b>20</b>, for example. The program deviation time is preliminarily stored in the memory unit <b>11</b>, for example (Step S<b>1003</b>). Note that the program deviation time will be described in detail later.</p>
<p id="p-0082" num="0081">Thereafter, the MPU <b>18</b> sets the program deviation time (issuance timing of a command <b>10</b>H) in the timer control unit <b>18</b><i>a</i>. Then, the timer control unit <b>18</b><i>a </i>sets the program deviation time in the timer <b>22</b> (Step S<b>1004</b>).</p>
<p id="p-0083" num="0082">Subsequently, the memory card <b>100</b> supplies a write request from the host equipment <b>200</b> to the external interface unit <b>15</b>. When the memory unit <b>11</b> is in a writable state, the MPU <b>18</b> returns a response indicating that the memory unit <b>11</b> is in the writable state to the host equipment <b>200</b> (Step S<b>1005</b>).</p>
<p id="p-0084" num="0083">Next, data divided into multiple pieces are supplied to the data control unit <b>17</b> from the host equipment <b>200</b> through the external interface unit <b>15</b>. As to the divided data, the original data are not physically divided, but the address of the chip <b>11</b><i>a </i>into which data are written is divided into multiple addresses (Step S<b>1006</b>).</p>
<p id="p-0085" num="0084">Thereafter, the memory controller <b>12</b> simultaneously transmits multiple divided data strings to the column buffer <b>32</b> of the multiple chips <b>11</b><i>a </i>in the memory unit <b>11</b> according to the address (data in). The multiple divided data strings are temporarily held in the column buffer <b>32</b>. Thereafter, the MPU <b>18</b> issues a write command (<b>10</b>H) (Step S<b>1007</b>).</p>
<p id="p-0086" num="0085">The timer control unit <b>18</b><i>a </i>controls the memory interface unit <b>21</b> to delay the transfer timing of the write command <b>10</b>H to the memory unit <b>11</b> in accordance with the program deviation time set in the timer <b>22</b> (Step S<b>1008</b>).</p>
<p id="p-0087" num="0086">The measurement by the timer <b>22</b> allows the data strings to be sequentially written into the respective chips <b>11</b><i>a </i>(Step S<b>1009</b>).</p>
<p id="p-0088" num="0087">In the embodiment, the time is measured by the built-in timer <b>22</b>, thereby shifting the program execution timing between the chips <b>11</b><i>a</i>. This is called &#x201c;busy shift&#x201d;.</p>
<p id="p-0089" num="0088">Next, the program deviation time (busy shift time) Tbd described in Step S<b>1003</b> is described.</p>
<p id="p-0090" num="0089">Time required to store the data strings in the memory unit <b>11</b> is defined as data-in time Tdi, and time required between the storage of the data strings in the memory unit <b>11</b> and actual recording of the data strings in the memory unit <b>11</b> is defined as program time Tpg. Assuming that the quantity of electricity in this event is Q, average current consumption Im in the case where there is no busy shift is calculated as shown in the following equation (1).
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>Im=Q</i>/(<i>Tdi+Tpg</i>)&#x2003;&#x2003;(1)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0091" num="0090">When the busy shift is performed, the time required for the storage in all the chips <b>11</b><i>a </i>and for the programs becomes longer by Tbd&#xd7;(Nc&#x2212;1) than that required when no busy shift is performed. Here, Nc is the total number of chips. In this case, average current consumption Im in the case where there is no busy shift is calculated as shown in the following equation (2).
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>Im=Q</i>/(<i>Tdi+Tpg+Tbd</i>(<i>Nc&#x2212;</i>1))&#x2003;&#x2003;(2)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0092" num="0091">Accordingly, a relationship shown in <figref idref="DRAWINGS">FIG. 10</figref> is obtained. <figref idref="DRAWINGS">FIG. 10</figref> is a graph showing the average current consumption Im to the Busy shift time Tbd. <figref idref="DRAWINGS">FIG. 10</figref> shows that the longer the busy shift time Tbd, the lower the average current consumption Im. Note that the average current consumption Im described here means an average of currents consumed between the start and end of writing the data strings into the memory unit <b>11</b>.</p>
<p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. 11</figref> is a table showing a relationship between the average current consumption limit and the busy shift time. When there is no limitation on the average current consumption from the outside, i.e., when the average current consumption is I<sub>0 </sub>or more in <figref idref="DRAWINGS">FIG. 10</figref>, the busy shift time is T<sub>0</sub>=0 with the maximum writing speed performance into the memory unit <b>11</b>. In other words, when there is no particular limitation on the average current consumption, no busy shift needs to be performed. On the other hand, when there is a limitation, the busy shift time is set in accordance with the limitation. For example, the memory controller <b>12</b> performs control so that the busy shift time is T<sub>1 </sub>(T<sub>1</sub>&#x3e;0) when the average current consumption limit from the outside is I<sub>1</sub>, the busy shift time is T<sub>2 </sub>(T<sub>2</sub>&#x3e;T<sub>1</sub>) when the average current consumption limit is I<sub>2 </sub>(I<sub>2</sub>&#x3c;I<sub>1</sub>), and the busy shift time is T<sub>n-1 </sub>when the average current consumption limit is I<sub>n-1</sub>. <figref idref="DRAWINGS">FIG. 11</figref> shows that I<sub>0</sub>&#x3e;I<sub>1</sub>&#x3e;I<sub>2</sub>&#x3e;I<sub>3</sub>&#x3e; . . . &#x3e;I<sub>n </sub>and T<sub>n</sub>&#x3e;T<sub>n-1</sub>&#x3e;T<sub>n-2</sub>&#x3e; . . . &#x3e;T<sub>0</sub>=0. This leads to the conclusion that the busy shift time Tbd need only be increased as the allowable maximum average current consumption is reduced.</p>
<p id="p-0094" num="0093">Next, a method for setting the Busy shift time is described. As the method for setting the busy shift time (program deviation time), conceivable are a method for setting the busy shift time based on a threshold of average current consumption, a method for setting the busy shift time based on the table expanded into the RAM <b>20</b>, a method for setting the busy shift time corresponding to the average current consumption by calculation, and the like.</p>
<p id="p-0095" num="0094">First, description is given of the method for setting the busy shift time based on the threshold of average current consumption. In the method, the MPU <b>18</b> previously prepares in the RAM <b>20</b> the threshold of average current consumption and busy shift time corresponding to the magnitude of the threshold. These pieces of information may be read, for example, from the ROM <b>19</b> or the memory unit <b>11</b> into the RAM <b>20</b>. Then, when the current consumption (required current consumption) Is set in the setting information transferred from the host equipment <b>200</b> is equal to or larger than the threshold, busy shift time Tbd<sub>1 </sub>(Tbd<sub>1</sub>&#x2267;0) is selected. On the other hand, when the current consumption Is is smaller than the threshold, busy shift time Tbd<sub>2 </sub>(Tbd<sub>2</sub>&#x3e;Tbd<sub>1</sub>) is selected. In this event, an upper limit is set for Tbd<sub>2 </sub>in view of the writing speed performance. In this way, the busy shift time can be set based on whether the required current consumption Is is larger or smaller than a certain threshold using the threshold as a reference.</p>
<p id="p-0096" num="0095">Next, description is given of the method for setting the busy shift time based on the table expanded into the RAM <b>20</b>. In the method, the MPU <b>18</b> previously prepares in the RAM <b>20</b> multiple (e.g., about ten to twenty) thresholds of average current consumption and busy shift times corresponding to the multiple thresholds. These pieces of information may be read, for example, from the ROM <b>19</b> or the memory unit <b>11</b> into the RAM <b>20</b>. Then, the busy shift time is selected in accordance with the current consumption (required current consumption) set in the setting information transferred from the host equipment <b>200</b>. In this way, the busy shift time can be set using the multiple thresholds as a reference. This method enables more detailed setting of the busy shift time.</p>
<p id="p-0097" num="0096">An example of the relationship between the threshold of average current consumption and the busy shift time corresponds to the equation (2) derived above, for example, as shown in <figref idref="DRAWINGS">FIG. 12</figref>. <figref idref="DRAWINGS">FIG. 12</figref> is a graph showing a relationship between the required current consumption Is and the busy shift time. As shown in <figref idref="DRAWINGS">FIG. 12</figref>, when the required current consumption Is satisfies Threshold I<sub>0</sub>&#x2267;Is&#x3e;Threshold I<sub>1</sub>, the busy shift time Tbd<sub>0 </sub>(0&#x2266;Tbd<sub>0</sub>&#x3c;T<sub>1</sub>) between 0 and T<sub>1 </sub>corresponding to between the thresholds I<sub>0 </sub>and I<sub>1 </sub>is selected. Meanwhile, when the required current consumption Is satisfies Threshold I<sub>1</sub>&#x2267;Is&#x3e;Threshold I<sub>2</sub>, the busy shift time Tbd<sub>1 </sub>(T<sub>1</sub>&#x2266;Tbd<sub>1</sub>&#x3c;T<sub>2</sub>) between T<sub>1 </sub>and T<sub>2 </sub>corresponding to between the thresholds I<sub>0 </sub>and I<sub>1 </sub>is selected based on the relationship described above. Furthermore, when the required current consumption Is is equal to or smaller than the threshold I<sub>10 </sub>(Is&#x2266;I<sub>10</sub>), the busy shift time Tbd<sub>10 </sub>equal to or larger than T<sub>10 </sub>(T<sub>10</sub>&#x2266;Tbd<sub>10</sub>) corresponding to the threshold I<sub>10 </sub>based on the relationship described above. Note, however, that an upper limit is set for Tbd<sub>10</sub>, e.g., Tbd<sub>10</sub>=T<sub>10</sub>, in view of the writing speed performance.</p>
<p id="p-0098" num="0097">Next, description is given of the method for setting the busy shift time corresponding to the average current consumption by calculation. In the method, an analog circuit for calculation (not shown) is provided in the memory controller <b>12</b> to calculate the equation (2) described above based on the setting information transferred from the host equipment <b>200</b>, thereby deriving the busy shift time.</p>
<p id="p-0099" num="0098">As described above, the busy shift time is variable, and may be 0 depending on the request from the host equipment <b>200</b>.</p>
<p id="p-0100" num="0099">Next, concrete examples of the busy shift are described. With reference to <figref idref="DRAWINGS">FIG. 13</figref>, description is given of specific parallel control when the busy shift time is the time Ta. <figref idref="DRAWINGS">FIG. 13</figref> is an example of a timing chart of the parallel control according to the first embodiment, showing how the data (external data) transferred from the host equipment is transferred to each of the chips <b>11</b><i>a. </i></p>
<p id="p-0101" num="0100">As shown in <figref idref="DRAWINGS">FIG. 13</figref>, all Chips <b>0</b> to n&#x2212;1 are in the ready state at time point ta<b>0</b>. Thus, the memory controller <b>12</b> simultaneously transmits data strings to Chips <b>0</b> to n&#x2212;1. In the example shown in <figref idref="DRAWINGS">FIG. 7</figref>, for example, the memory controller <b>12</b> transfers in parallel the data strings D<b>0</b> to Dn&#x2212;1 to Chips <b>0</b> to n&#x2212;1. The data string transfer is performed during the period between the times ta<b>0</b> and ta<b>1</b>.</p>
<p id="p-0102" num="0101">After storage of all the data strings is completed, the memory controller <b>12</b> executes writing of the data strings at time point ta<b>1</b>. That is, the MPU <b>18</b> issues a write command (<b>10</b>H) and supplies the write command to the memory interface unit <b>21</b>. In this event, the timer control unit <b>18</b><i>a </i>controls the memory interface unit <b>21</b> to delay the issuance of the write command to write the data strings into Chips <b>1</b> to n&#x2212;1.</p>
<p id="p-0103" num="0102">To be more specific, the memory interface unit <b>21</b> first issues a write command to Chip <b>0</b>. Accordingly, Chip <b>0</b> is set in the busy state since data strings are written into Chip <b>0</b>. As a result, an R/B signal of Chip <b>0</b> is set to be L. Then, the timer <b>22</b> recognizes that the R/B signal from Chip <b>0</b> is L, and starts counting (measuring) the busy shift time Ta set by the timer control unit <b>18</b><i>a</i>. The memory interface unit <b>21</b> can issue a write command to Chips <b>1</b> to n&#x2212;1 when notified by the timer control unit <b>18</b><i>a. </i></p>
<p id="p-0104" num="0103">Thereafter, the timer <b>22</b> measures a lapse of the set busy shift time Ta from the time ta<b>1</b>, and then notifies the timer control unit <b>18</b><i>a </i>to that effect at time point ta<b>2</b>. Then, the timer control unit <b>18</b><i>a</i>, upon receipt of the notification, notifies the memory interface unit <b>21</b> to that effect. Upon receipt of the notification, the memory interface unit <b>21</b> issues a write command to Chip <b>1</b>. Alternatively, the timer control unit <b>18</b><i>a </i>may command or request the memory interface unit <b>21</b> to issue a data string write command to Chip <b>1</b>, next. Thus, Chip <b>1</b> starts writing of data strings. As a result, Chip <b>1</b> becomes the Busy state, and the R/B signal of Chip <b>1</b> is set to be L. Then, the timer <b>22</b> recognizes that the R/B signal from Chip <b>1</b> is L, resets the count (measurement), for example, and starts counting (measuring) from 0 to the busy shift time Ta set by the timer control unit <b>18</b><i>a. </i></p>
<p id="p-0105" num="0104">Thereafter, the timer <b>22</b> measures an elapse of the set busy shift time Ta from the time ta<b>2</b>, and then notifies the timer control unit <b>18</b><i>a </i>to that effect at time point ta<b>3</b>. The timer control unit <b>18</b><i>a</i>, upon receipt of the notification, notifies the memory interface unit <b>21</b> to that effect. Upon receipt of the notification, the memory interface unit <b>21</b> issues a write command to Chip <b>2</b>. Alternatively, the timer control unit <b>18</b><i>a </i>may command or request the memory interface unit <b>21</b> to issue a data string write command to Chip <b>2</b>, next. Thus, Chip <b>2</b> starts writing of data strings. As a result, Chip <b>2</b> becomes the busy state, and the R/B signal of Chip <b>2</b> is set to be L. Then, the timer <b>22</b> recognizes that the R/B signal from Chip <b>2</b> is L, resets the measurement, for example, and starts measuring from 0 to the busy shift time Ta set by the timer control unit <b>18</b><i>a. </i></p>
<p id="p-0106" num="0105">The timer control unit <b>18</b><i>a </i>similarly controls the memory interface unit <b>21</b>, and measures from the time <b>0</b> to the time Ta every time an R/B signal from Chip x (x is a natural number) is recognized as being L. Then, when the timer <b>22</b> finishes measuring the time Ta, the memory interface unit <b>21</b> issues a data string write command to Chip x+1. In this way, the memory interface unit <b>21</b> issues a write command every time the timer <b>22</b> measures the time Ta up to the chip n&#x2212;1. As a result, the data strings are written in a sequentially shifted manner into Chips <b>0</b> to n&#x2212;1.</p>
<p id="p-0107" num="0106">At time t&#x2032;a<b>0</b> when writing of data strings into all the chips <b>11</b><i>a </i>is completed, all Chips <b>0</b> to n&#x2212;1 are in the ready state. Thus, the memory controller <b>12</b> simultaneously transmits the data strings to Chips <b>0</b> to n&#x2212;1. Thereafter, the writing and transmission of data strings are repeated in the same manner.</p>
<p id="p-0108" num="0107">Next, with reference to <figref idref="DRAWINGS">FIG. 14</figref>, description is given of specific parallel control when the busy shift time is the time Tb (Tb&#x3e;Ta). <figref idref="DRAWINGS">FIG. 14</figref> is another example of a timing chart of the parallel control according to the first embodiment.</p>
<p id="p-0109" num="0108">As shown in <figref idref="DRAWINGS">FIG. 14</figref>, all Chips <b>0</b> to n&#x2212;1 are in the ready state at time point tb<b>0</b>. Thus, the memory controller <b>12</b> simultaneously transmits data strings to Chips <b>0</b> to n&#x2212;1.</p>
<p id="p-0110" num="0109">After storage of all the data strings is completed, the memory controller <b>12</b> executes writing of the data strings at time point tb<b>1</b>. That is, the MPU <b>18</b> issues a write command and supplies the write command to the memory interface unit <b>21</b>. In this event, the timer control unit <b>18</b><i>a </i>controls the memory interface unit <b>21</b> to delay the issuance of the write command to write the data strings into Chips <b>1</b> to n&#x2212;1.</p>
<p id="p-0111" num="0110">Thereafter, the timer <b>22</b> measures an elapse of the set Busy shift time Tb from the time tb<b>1</b>, and then notifies the timer control unit <b>18</b><i>a </i>to that effect at time point tb<b>2</b>. Then, the timer control unit <b>18</b><i>a</i>, upon receipt of the notification, notifies the memory interface unit <b>21</b> to that effect. Upon receipt of the notification, the memory interface unit <b>21</b> issues a write command to Chip <b>1</b>. Thus, Chip <b>1</b> starts writing of data strings. As a result, the R/B signal of Chip <b>1</b> is set to be L. Then, the timer <b>22</b> recognizes that the R/B signal from Chip <b>1</b> is L, resets the measurement, for example, and starts measuring from 0 to the Busy shift time Tb set by the timer control unit <b>18</b><i>a. </i></p>
<p id="p-0112" num="0111">Thereafter, the timer <b>22</b> measures a lapse of the set busy shift time Tb from the time point tb<b>2</b>, and then notifies the timer control unit <b>18</b><i>a </i>to that effect at time point tb<b>3</b>. The timer control unit <b>18</b><i>a</i>, upon receipt of the notification, notifies the memory interface unit <b>21</b> to that effect. Upon receipt of the notification, the memory interface unit <b>21</b> issues a write command to Chip <b>2</b>. Thus, Chip <b>2</b> starts writing of data strings. As a result, the R/B signal of Chip <b>2</b> is set to be L. Then, the timer <b>22</b> recognizes that the R/B signal from Chip <b>2</b> is L, resets the measurement, and starts measuring from 0 to the busy shift time Tb.</p>
<p id="p-0113" num="0112">In the same way, the memory interface unit <b>21</b> issues a write command every time the timer <b>22</b> measures the time Tb up to the chip n&#x2212;1. As a result, the data strings are written in a sequentially shifted manner into Chips <b>0</b> to n&#x2212;1.</p>
<p id="p-0114" num="0113">At time t&#x2032;b<b>0</b> when writing of data strings into all the chips <b>11</b><i>a </i>is completed, all Chips <b>0</b> to n&#x2212;1 are in the ready state. Thus, the memory controller <b>12</b> simultaneously transmits data strings to Chips <b>0</b> to n&#x2212;1. Thereafter, the writing and transmission of data strings are repeated in the same manner.</p>
<p id="p-0115" num="0114"><figref idref="DRAWINGS">FIGS. 13 and 14</figref> show that the longer the busy shift time Tbd, the smaller the number of the chips <b>11</b><i>a </i>into which data strings are simultaneously written.</p>
<p id="p-0116" num="0115">According to the embodiment described above, the memory system includes the memory unit <b>11</b> having nonvolatile first and second Chips <b>0</b> and <b>1</b> capable of holding data, the memory controller <b>12</b> transferring data received from the host equipment <b>200</b> simultaneously to first and second Chips <b>0</b> and <b>1</b>, the timer <b>22</b> measuring a lapse of preset busy shift time, and the timer control unit <b>18</b><i>a </i>starting writing of data into second Chip <b>1</b> immediately after the lapse of the busy shift time. The memory system further includes the RAM <b>20</b> capable of holding multiple different busy shift times, and the timer control unit <b>18</b><i>a </i>selects any one of the multiple busy shift times in the RAM <b>20</b>.</p>
<p id="p-0117" num="0116">In the parallel control, current consumption is increased since writing of data into the multiple chips <b>11</b><i>a </i>is performed all at once. However, shifting the timings of writing data strings into the respective chips <b>11</b><i>a </i>based on the setting information from the host equipment <b>200</b> makes it possible to reduce the number of the chips <b>11</b><i>a </i>into which the data strings are simultaneously written, and to suppress the average or instantaneous current consumption. Accordingly, the current consumption can be suppressed to be equal to or smaller than the value of average current consumption required by the host equipment <b>200</b>. As a result, the memory system capable of suppressing the average or instantaneous current consumption can be obtained.</p>
<p id="p-0118" num="0117">Next, with reference to <figref idref="DRAWINGS">FIGS. 15 to 21</figref>, description is given of control of a memory unit <b>11</b> by a memory controller <b>12</b> in a memory system according to a second embodiment. The memory controller <b>12</b> according to the second embodiment can start, during writing of data strings into chips <b>11</b><i>a </i>in the memory unit <b>11</b>, accessing the other chips <b>11</b><i>a</i>. This is called interleave control. Note that, in the description of the interleave control, description of portions overlapping with those in the first embodiment is omitted.</p>
<p id="p-0119" num="0118">Basic operations of the interleave control are described. The interleave control is described with reference to <figref idref="DRAWINGS">FIGS. 15 and 16</figref>. <figref idref="DRAWINGS">FIG. 15</figref> is a schematic diagram of the interleave control, showing how the data (external data) transferred from the host equipment <b>200</b> is transferred to each of the chips <b>11</b><i>a</i>. <figref idref="DRAWINGS">FIG. 16</figref> is a basic timing chart of the interleave control, showing input data, write data and a ready/busy (R/B) signal for each of the chips <b>11</b><i>a</i>. In the embodiment, as an example, the interleave control is performed for the two chips <b>11</b><i>a</i>, i.e., the Chips <b>0</b> and <b>1</b>.</p>
<p id="p-0120" num="0119">As shown in <figref idref="DRAWINGS">FIG. 15</figref>, in the interleave control, data D&#x2032;<b>0</b> transferred from the host equipment <b>200</b> is transferred to Chip <b>0</b>, and new data D&#x2032;<b>1</b> transferred from the host equipment <b>200</b> is transferred to and written into Chip <b>1</b> different from Chip <b>0</b> while the data D&#x2032;<b>0</b> is being written into Chip <b>0</b>. Note that the data D&#x2032;<b>0</b> to D&#x2032;<b>2</b><i>p&#x2212;</i>1 are different from each other. Moreover, an address corresponding to Chip <b>0</b> or <b>1</b> is assigned to each of the data D&#x2032;<b>0</b> to D&#x2032;<b>2</b><i>p&#x2212;</i>1 by the host equipment <b>200</b>.</p>
<p id="p-0121" num="0120">As shown in <figref idref="DRAWINGS">FIG. 16</figref>, the memory controller <b>12</b> transmits data to Chip <b>0</b> into which data are written from time t<b>0</b> to time t<b>1</b>. In this event, since the two Chips <b>0</b> and <b>1</b> are in a Ready state, a high-level R/B signal is outputted.</p>
<p id="p-0122" num="0121">At time t<b>1</b>, the memory controller <b>12</b> issues a write command (<b>10</b>H). In response to the command, Chip <b>0</b> performs writing of data from time t<b>1</b> to time t<b>3</b>. Since Chip <b>0</b> is in an access prohibited state (data reception prohibited state), i.e., in a busy state during the period, a low-level R/B signal is outputted. Moreover, the memory controller <b>12</b> starts transmitting data to Chip <b>1</b> when the memory controller <b>12</b> recognizes the low-level R/B signal from Chip <b>0</b>. During this period, Chip <b>1</b> outputs the high-level R/B signal.</p>
<p id="p-0123" num="0122">At time t<b>2</b>, the memory controller <b>12</b> issues a write command (<b>10</b>H). In response to the command, Chip <b>1</b> performs writing of data from time t<b>2</b> to time t<b>4</b>. Since Chip <b>1</b> is in an access prohibited state (data reception prohibited state), i.e., in a busy state during the period, a low-level R/B signal is outputted.</p>
<p id="p-0124" num="0123">At time t<b>3</b>, after the writing of data into Chip <b>0</b> is completed, Chip <b>0</b> returns to the Ready state. Thus, the memory controller <b>12</b> transmits data strings to Chip <b>0</b> from time t<b>3</b> to time t<b>4</b>. Thereafter, the programming and transmission of data strings are repeated in the same manner.</p>
<p id="p-0125" num="0124">Next, data-in shift is described. The memory controller <b>12</b> according to the embodiment performs control to shift data input time between the chips <b>11</b><i>a </i>in the parallel control described above. This is called &#x201c;data-in shift&#x201d;. The data-in shift is described below with reference to <figref idref="DRAWINGS">FIG. 17</figref>. <figref idref="DRAWINGS">FIG. 17</figref> is a basic flowchart of the interleave control according to the second embodiment, showing the flow of operations of the memory system. In the embodiment, description is given of the case where writing is performed simultaneously into 2 chips of Chip <b>0</b> and Chip <b>1</b>.</p>
<p id="p-0126" num="0125">First, the memory controller <b>12</b> expands the firmware (system information) stored in the ROM <b>19</b> or the memory unit <b>11</b> or information on data-in shift time (which may be simply called deviation time or first period) stored in the memory unit <b>11</b> into the RAM <b>20</b> when the power is supplied to the memory card <b>100</b>. This control is performed by the MPU <b>18</b>, for example (Step S<b>2001</b>).</p>
<p id="p-0127" num="0126">Next, setting information including current consumption limit, a transfer speed between the host equipment <b>200</b> and the memory controller <b>12</b>, and the like is supplied to the external interface unit <b>15</b> from the host equipment <b>200</b> (Step S<b>2002</b>).</p>
<p id="p-0128" num="0127">The MPU <b>18</b> derives data-in shift time from the RAM <b>20</b> based on the setting information. In this event, the MPU <b>18</b> derives the data-in shift time from the table expanded into the RAM <b>20</b>, for example. The data-in shift time is preliminarily stored in the memory unit <b>11</b>, for example (Step S<b>2003</b>). Note that the data-in shift time will be described in detail later.</p>
<p id="p-0129" num="0128">Thereafter, the MPU <b>18</b> sets the data-in shift time (data input timing) in the timer control unit <b>18</b><i>a</i>. Then, the timer control unit <b>18</b><i>a </i>sets the data-in shift time in the timer <b>22</b> (Step S<b>2004</b>).</p>
<p id="p-0130" num="0129">Subsequently, the memory card <b>100</b> supplies a write request from the host equipment <b>200</b> to the external interface unit <b>15</b>. When the memory unit <b>11</b> is in a writable state, the MPU <b>18</b> returns to the host equipment <b>200</b> a response indicating that the memory unit <b>11</b> is in the writable state (Step S<b>2005</b>).</p>
<p id="p-0131" num="0130">Next, data are supplied to the data control unit <b>17</b> from the host equipment <b>200</b> through the external interface unit <b>15</b>. The data are temporarily held in a buffer in the memory controller <b>12</b> (Step S<b>2006</b>).</p>
<p id="p-0132" num="0131">Next, the timer control unit <b>18</b><i>a </i>controls the memory interface unit <b>21</b> based on the data-in shift time to delay the transfer timing of transferring data to the memory unit <b>11</b> (Step S<b>2007</b>).</p>
<p id="p-0133" num="0132">The memory controller <b>12</b> supplies data to a column buffer <b>32</b> in the memory unit <b>11</b> (data in), and then the MPU <b>18</b> issues a write command (<b>10</b>H) (Step S<b>2008</b>).</p>
<p id="p-0134" num="0133">The measurement by the timer <b>22</b> allows the data strings to be sequentially written into the respective chips <b>11</b><i>a </i>(Step S<b>2009</b>).</p>
<p id="p-0135" num="0134">In the embodiment, the time is measured by the built-in timer <b>22</b>, thereby shifting the data input timing.</p>
<p id="p-0136" num="0135">Next, the data-in shift time Tdd described in Step S<b>2003</b> is described.</p>
<p id="p-0137" num="0136">Time required to store the data in the memory unit <b>11</b> is defined as data-in time Tdi, and time required between the storage of the data in the memory unit <b>11</b> and actual recording of the data strings in the memory unit <b>11</b> is defined as program time Tpg. As to the average current consumption Im, if the writing size is sufficiently large, the first Tdi of Chip <b>0</b> is reduced to a negligible level. Assuming that the quantity of electricity in this event is Q, average current consumption Im in the case where there is no data-in shift is calculated as shown in the following equation (3).
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>Im&#x2248;Q</i>/(<i>Tdi+Tpg</i>)&#x2003;&#x2003;(3)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0138" num="0137">When the data-in shift is performed, the time required for the storage in Chips <b>0</b> and <b>1</b> and for the programming becomes longer by Tdd&#xd7;2 (twice as long as Tdd) than that required when no data-in shift is performed. In this case, average current consumption Im in the case where there is data-in shift is calculated as shown in the following equation (4).
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>Im&#x2248;Q</i>/(<i>Tdi+Tpg+</i>2<i>Tdd</i>)&#x2003;&#x2003;(4)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0139" num="0138">Accordingly, a relationship shown in <figref idref="DRAWINGS">FIG. 18</figref> is obtained. <figref idref="DRAWINGS">FIG. 18</figref> is a graph showing the average current consumption Im to the data-in shift time Tdd. <figref idref="DRAWINGS">FIG. 18</figref> shows that the longer the data-in shift time Tdd, the lower the average current consumption Im.</p>
<p id="p-0140" num="0139"><figref idref="DRAWINGS">FIG. 11</figref> is a table showing a relationship between the average current consumption limit and the data-in shift time. When limitation on the average current consumption from the outside is I<sub>0 </sub>or more, i.e., when there is no limitation on the average current consumption and writing speed performance into the memory unit <b>11</b> is the maximum, the data-in shift time is T<sub>0</sub>=0. In other words, when there is no particular limitation on the average current consumption, no data-in shift needs to be performed. On the other hand, when there is a limitation, the data-in shift time is set in accordance with to the limitation. For example, the memory controller <b>12</b> performs control so that the data-in shift time is T<sub>1 </sub>(T<sub>1</sub>&#x3e;0) when the average current consumption limit from the outside is I<sub>1</sub>, the data-in shift time is T<sub>2 </sub>(T<sub>2</sub>&#x3e;T<sub>1</sub>) when the average current consumption limit is I<sub>2 </sub>(I<sub>2</sub>&#x3c;I<sub>1</sub>), and the busy shift time is T<sub>n-1 </sub>when the average current consumption limit is I<sub>n-1</sub>. <figref idref="DRAWINGS">FIG. 11</figref> shows that I<sub>0</sub>&#x3e;I<sub>1</sub>&#x3e;I<sub>2</sub>&#x3e;I<sub>3</sub>&#x3e; . . . &#x3e;I<sub>n </sub>and T<sub>n</sub>&#x3e;T<sub>n-1</sub>&#x3e;T<sub>n-2</sub>&#x3e; . . . &#x3e;T<sub>0</sub>=0. This leads to the conclusion that the data-in shift time Tdd need only be increased as the allowable maximum average current consumption is reduced.</p>
<p id="p-0141" num="0140">Next, a method for setting the data-in shift time is described. As the method for setting the data-in shift time (program deviation time), are conceivable a method for setting the data-in shift time based on a threshold of average current consumption, a method for setting the data-in shift time based on the table expanded into the RAM <b>20</b>, a method for setting the data-in shift time corresponding to the average current consumption by calculation, and the like, as in the first embodiment described above. Note that a basic method for deriving the data-in shift time is the same as that for the busy shift time described above.</p>
<p id="p-0142" num="0141">First, description is given of the method for setting the data-in shift time based on the threshold of average current consumption. In the method, the MPU <b>18</b> previously prepares in the RAM <b>20</b> the threshold of average current consumption and data-in shift time corresponding to the magnitude of the threshold. These pieces of information may be read, for example, from the ROM <b>19</b> or the memory unit <b>11</b> into the RAM <b>20</b>. Then, when the current consumption (required current consumption) Is set in the setting information transferred from the host equipment <b>200</b> is equal to or larger than the threshold, data-in shift time Tdd<sub>1 </sub>(Tdd<sub>1</sub>&#x3e;0) is selected. On the other hand, when the current consumption Is is smaller than the threshold, data-in shift time Tdd<sub>2 </sub>(Tdd<sub>2</sub>&#x3e;Tdd<sub>1</sub>) is selected. In this event, an upper limit is set for Tdd<sub>2 </sub>in view of the writing speed performance. In this way, the data-in shift time can be set based on whether the required current consumption Is is larger or smaller than a certain threshold using the threshold as a reference.</p>
<p id="p-0143" num="0142">Next, description is given of the method for setting the data-in shift time based on the table expanded into the RAM <b>20</b>. In the method, the MPU <b>18</b> previously prepares in the RAM <b>20</b> multiple (e.g., about ten to twenty) thresholds of average current consumption and data-in shift times corresponding to the multiple thresholds. These pieces of information may be read, for example, from the ROM <b>19</b> or the memory unit <b>11</b> into the RAM <b>20</b>. Then, the data-in shift time is selected in accordance with the current consumption (required current consumption) set in the setting information transferred from the host equipment <b>200</b>. In this way, the data-in shift time can be set using the multiple thresholds as a reference. This method enables more detailed setting of the data-in shift time.</p>
<p id="p-0144" num="0143">An example of the relationship between the threshold of average current consumption and the data-in shift time corresponds to the equation (2) derived above, for example, as shown in <figref idref="DRAWINGS">FIG. 19</figref>. <figref idref="DRAWINGS">FIG. 19</figref> is a graph showing a relationship between the required current consumption Is and the data-in shift time. As shown in <figref idref="DRAWINGS">FIG. 12</figref>, when the required current consumption Is satisfies Threshold I<sub>0</sub>&#x2267;Is&#x3e;Threshold I<sub>1</sub>, the data-in shift time Tdd<sub>0 </sub>(0&#x2266;Tdd<sub>0</sub>&#x3c;T<sub>1</sub>) between 0 and T<sub>1 </sub>corresponding to between the thresholds I<sub>0 </sub>and I<sub>1 </sub>is selected. Meanwhile, when the required current consumption Is satisfies Threshold I<sub>1</sub>&#x2267;Is&#x3e;Threshold I<sub>2</sub>, the data-in shift time Tdd<sub>1 </sub>(T<sub>1</sub>&#x2266;Tdd<sub>1</sub>&#x3c;T<sub>2</sub>) between T<sub>1 </sub>and T<sub>2 </sub>corresponding to between the thresholds I<sub>0 </sub>and I<sub>1 </sub>is selected based on the relationship described above. Furthermore, when the required current consumption Is is the threshold I<sub>10</sub>&#x2267;Is, the data-in shift time Tdd<sub>10 </sub>equal to or larger than T<sub>10 </sub>(T<sub>10</sub>&#x2266;Tdd<sub>10</sub>) corresponding to the threshold I<sub>10 </sub>is selected based on the relationship described above. Note, however, that an upper limit is set for Tdd<sub>10</sub>, e.g., Tdd<sub>10</sub>=T<sub>10</sub>, in view of the writing speed performance.</p>
<p id="p-0145" num="0144">Next, description is given of the method for setting the data-in shift time corresponding to the average current consumption by calculation. In the method, an analog circuit for calculation (not shown) is provided in the memory controller <b>12</b> to calculate the equation (4) described above based on the setting information transferred from the host equipment <b>200</b>, thereby deriving the data-in shift time.</p>
<p id="p-0146" num="0145">As described above, the data-in shift time is variable, and may be 0 depending on the request from the host equipment <b>200</b>.</p>
<p id="p-0147" num="0146">Next, concrete examples of the data-in shift are described. With reference to <figref idref="DRAWINGS">FIG. 20</figref>, description is given of specific interleave control when the data-in shift time is the time Tc. <figref idref="DRAWINGS">FIG. 20</figref> is an example of a timing chart of the interleave control according to the second embodiment, showing how the data (external data) transferred from the host equipment <b>200</b> is transferred to each of the chips <b>11</b><i>a. </i></p>
<p id="p-0148" num="0147">As shown in <figref idref="DRAWINGS">FIG. 20</figref>, Chip <b>0</b> and Chip <b>1</b> are in the ready state at time point tc<b>0</b>. Thus, the memory controller <b>12</b> performs data transmits to Chip <b>0</b>.</p>
<p id="p-0149" num="0148">After storage of the data in Chip <b>0</b> is completed, the memory controller <b>12</b> executes writing of the data strings at time point tc<b>1</b>. That is, the MPU <b>18</b> issues a write command and supplies the write command to the memory interface unit <b>21</b>. Then, the data are written into Chip <b>0</b>. In this event, the timer control unit <b>18</b><i>a </i>controls the memory interface unit <b>21</b> to delay the data input to Chip <b>1</b>.</p>
<p id="p-0150" num="0149">To be more specific, the memory interface unit <b>21</b> first issues a write command to Chip <b>0</b>. Accordingly, Chip <b>0</b> is set in the busy state since data strings are written into Chip <b>0</b>. As a result, an R/B signal of Chip <b>0</b> is set to be L. Then, the timer <b>22</b> recognizes that the R/B signal from Chip <b>0</b> is L, and starts measuring the data-in shift time Tc set by the timer control unit <b>18</b><i>a</i>. The memory interface unit <b>21</b> can transmit data to Chip <b>0</b> or Chip <b>1</b> when notified by the timer control unit <b>18</b><i>a. </i></p>
<p id="p-0151" num="0150">Thereafter, the timer <b>22</b> measures a lapse of the set data-in shift time Tc from the time tc<b>1</b>, and then notifies the timer control unit <b>18</b><i>a </i>to that effect at time point tc<b>2</b>. Then, the timer control unit <b>18</b><i>a</i>, upon receipt of the notification, notifies the memory interface unit <b>21</b> to that effect. Upon receipt of the notification, the memory interface unit <b>21</b> performs data input to Chip <b>1</b>. Alternatively, the timer control unit <b>18</b><i>a </i>may command or request the memory interface unit <b>21</b> to transmit data to Chip <b>1</b>, next. Thus, the data are transmitted to Chip <b>1</b>.</p>
<p id="p-0152" num="0151">At time tc<b>3</b>, data are written into Chip <b>1</b>. Accordingly, the R/B signal of Chip <b>1</b> becomes L.</p>
<p id="p-0153" num="0152">Next, at time point tc<b>4</b>, writing of data into Chip <b>0</b> is completed. Thus, Chip <b>0</b> becomes the ready state, and the R/B signal of Chip <b>0</b> becomes H. Then, the timer <b>22</b> recognizes that the R/B signal from Chip <b>0</b> is H, resets the measurement, and starts measuring from 0 to the data-in shift time Tc set by the timer control unit <b>18</b><i>a. </i></p>
<p id="p-0154" num="0153">Thereafter, the timer <b>22</b> measures a lapse of the set data-in shift time Tc from the time tc<b>4</b>, and then notifies the timer control unit <b>18</b><i>a </i>to that effect at time point tc<b>5</b>. Then, the timer control unit <b>18</b><i>a</i>, upon receipt of the notification, notifies the memory interface unit <b>21</b> to that effect. Upon receipt of the notification, the memory interface unit <b>21</b> transmits data to Chip <b>0</b>. Alternatively, the timer control unit <b>18</b><i>a </i>may command or request the memory interface unit <b>21</b> to transmit data to Chip <b>0</b>, next. Thus, the data are transmitted to Chip <b>0</b>.</p>
<p id="p-0155" num="0154">The timer <b>22</b> similarly measures from the time <b>0</b> to the time Ta every time an R/B signal from Chip y (y is 0 or 1) is recognized as being H. Then, when the timer <b>22</b> finishes measuring the time Tc, the memory interface unit transmits data to Chip y. In this way, the memory interface unit <b>21</b> transmits data every time the timer <b>22</b> measures the time Tc. As a result, the data are written in a sequentially shifted manner into Chips <b>0</b> and <b>1</b>. Thereafter, the writing and transmission of data are repeated in the same manner.</p>
<p id="p-0156" num="0155">With reference to <figref idref="DRAWINGS">FIG. 21</figref>, description is given of specific interleave control when the program deviation time is the time Td (Td&#x3e;Tc). <figref idref="DRAWINGS">FIG. 21</figref> is another example of a timing chart of the interleave control according to the second embodiment.</p>
<p id="p-0157" num="0156">As shown in <figref idref="DRAWINGS">FIG. 21</figref>, Chips <b>0</b> and <b>1</b> are in the ready state at time point td<b>0</b>. Thus, the memory controller <b>12</b> transmits data to Chip <b>0</b>.</p>
<p id="p-0158" num="0157">After storage of the data in Chip <b>0</b> is completed, the memory controller <b>12</b> executes writing of the data strings at time point td<b>1</b>. That is, the MPU <b>18</b> issues a write command and supplies the write command to the memory interface unit <b>21</b>. The data are written into Chip <b>0</b>. In this event, the timer <b>22</b> controls the memory interface unit <b>21</b> to delay the data input into Chip <b>1</b>.</p>
<p id="p-0159" num="0158">To be more specific, the memory interface unit <b>21</b> first issues a write command to Chip <b>0</b>. Accordingly, an R/B signal of Chip <b>0</b> is set to be L. The timer <b>22</b> recognizes that the R/B signal from Chip <b>0</b> is L, and starts measuring the data-in shift time Td set by the timer control unit <b>18</b><i>a</i>. The memory interface unit <b>21</b> can transmit the data to Chip <b>0</b> or Chip <b>1</b> when notified by the timer <b>22</b>.</p>
<p id="p-0160" num="0159">Thereafter, the timer <b>22</b> measures a lapse of the set data-in shift time Td from time td<b>1</b>, and then provides notification to that effect at time point td<b>2</b>. Then, the memory interface unit <b>21</b>, upon receipt of the notification, transmits the data to Chip <b>1</b>. Alternatively, the timer <b>22</b> may command or request the memory interface unit <b>21</b> to transmit the data to Chip <b>1</b>, next. Thus, the data are transmitted to Chip <b>1</b>.</p>
<p id="p-0161" num="0160">At time td<b>3</b>, data are written into Chip <b>1</b>. Accordingly, the R/B signal of Chip <b>1</b> becomes L.</p>
<p id="p-0162" num="0161">Next, at time point td<b>3</b>, writing of data into Chip <b>0</b> is completed. Thus, Chip <b>0</b> becomes the ready state, and the R/B signal of Chip <b>0</b> becomes H. Then, the timer <b>22</b> recognizes that the R/B signal from Chip <b>0</b> is H, resets the measurement, and starts measuring from 0 to the data-in shift time Td set by the timer control unit <b>18</b><i>a. </i></p>
<p id="p-0163" num="0162">Thereafter, the timer <b>22</b> measures a lapse of the set data-in shift time Td from time td<b>3</b>, and then provides notification to that effect at time point td<b>4</b>. The memory interface unit <b>21</b>, upon receipt of the notification, transmits the data to Chip <b>0</b>. Alternatively, the timer <b>22</b> may command or request the memory interface unit <b>21</b> to transmit the data to Chip <b>0</b>, next. Thus, the data are transmitted to Chip <b>0</b>.</p>
<p id="p-0164" num="0163">Thereafter, the writing and input of data are repeated in the same manner.</p>
<p id="p-0165" num="0164"><figref idref="DRAWINGS">FIGS. 20 and 21</figref> show that the longer the data-in shift time Tdd, the shorter the time during which data are written simultaneously into two chips <b>11</b><i>a. </i></p>
<p id="p-0166" num="0165">According to the embodiment described above, the memory system includes the memory unit <b>11</b> having nonvolatile first and second Chips <b>0</b> and <b>1</b> capable of holding data, the memory controller <b>12</b> to transfer data received from the host equipment <b>200</b> alternately to first and second Chips <b>0</b> and <b>1</b>, the timer <b>22</b> to measure a lapse of preset data-in shift time, and the timer control unit <b>18</b><i>a </i>to start the input of data to second Chip <b>1</b> immediately after the lapse of the data-in shift time. The memory system further includes the RAM <b>20</b> capable of holding multiple different data-in shift times, and the timer control unit <b>18</b><i>a </i>selects any one of the multiple data-in shift times in the RAM <b>20</b>.</p>
<p id="p-0167" num="0166">In the interleave control, current consumption is increased since writing of data into two chips <b>11</b><i>a</i>, for example, is performed all at once. However, shifting the timings of inputting data to the respective chips <b>11</b><i>a </i>based on the setting information from the host equipment <b>200</b> makes it possible to reduce the time during which the data are written simultaneously to the multiple chips <b>11</b><i>a</i>, and to suppress the average or instantaneous current consumption. Accordingly, the current consumption can be suppressed to be equal to or smaller than the value of average current consumption required by the host equipment <b>200</b>. As a result, the memory system capable of suppressing the average or instantaneous current consumption can be obtained.</p>
<p id="p-0168" num="0167">Next, with reference to <figref idref="DRAWINGS">FIG. 22</figref>, description is given of a memory system according to a third embodiment. In the third embodiment, busy shift time or data-in shift time is set based on data transfer speed (bus transfer speed) between host equipment <b>200</b> and an external interface unit <b>15</b>. Note that, in the description herein, description of portions overlapping with those in the first and second embodiments is omitted.</p>
<p id="p-0169" num="0168"><figref idref="DRAWINGS">FIG. 22</figref> is a graph showing a relationship between a data transfer speed V between the host equipment <b>200</b> and the external interface unit <b>15</b> and busy shift time or data-in shift time (also simply called shift time) T.</p>
<p id="p-0170" num="0169">There is a case where a maximum data transfer speed V<sub>x </sub>between the host equipment <b>200</b> and a memory controller <b>12</b> is lower than a maximum data transfer speed V<sub>y </sub>(V<sub>y</sub>&#x3e;V<sub>x</sub>) between the memory controller <b>12</b> and a memory unit <b>11</b>. Note that the shift time T set long reduces the speed of the memory system. However, since the maximum data transfer speed V<sub>x </sub>between the host equipment <b>200</b> and the memory controller <b>12</b> is lower than the maximum data transfer speed V<sub>y </sub>between the memory controller <b>12</b> and the memory unit <b>11</b>, the maximum data transfer speed of the memory system turns out to be the speed V<sub>x</sub>. For this reason, it turns out that the maximum data transfer speed of the memory system is not reduced even if the shift time T is set within the range 0&#x2266;T&#x2266;T<sub>x </sub>as shown in <figref idref="DRAWINGS">FIG. 12</figref>.</p>
<p id="p-0171" num="0170">As a method for obtaining the minimum shift time T<sub>x</sub>, the maximum data transfer speed V<sub>x </sub>between the host equipment <b>200</b> and the memory controller <b>12</b> is derived by, for example, the external interface unit <b>15</b>, and the speed information is supplied to the MPU <b>18</b>. The speed information is stored in the memory unit <b>11</b> or the like. The table showing the relationship between the data transfer speed and the shift time is expanded into the RAM <b>20</b>. Then, the MPU <b>18</b> derives the minimum shift time T<sub>x </sub>corresponding to the maximum transfer speed V<sub>x </sub>from the table expanded into the RAM <b>20</b>.</p>
<p id="p-0172" num="0171">According to the embodiment described above, in the memory system, the busy shift time or the data-in shift time (the first period) is determined based on the data transfer speed from the host equipment <b>200</b>.</p>
<p id="p-0173" num="0172">When the data transfer speed between the host equipment <b>200</b> and the memory controller <b>12</b> is lower than the data transfer speed between the memory controller <b>12</b> and the memory unit <b>11</b>, the speed performance of the entire memory system is dependent on the data transfer speed between the host equipment <b>200</b> and the memory controller <b>12</b>.</p>
<p id="p-0174" num="0173">However, as shown in <figref idref="DRAWINGS">FIG. 23</figref>, when the shift time T is the time T<sub>x</sub>, average current consumption Im turns out to be current I<sub>x </sub>(I<sub>x</sub>&#x3c;I<sub>0</sub>). <figref idref="DRAWINGS">FIG. 23</figref> shows that the longer the shift time T, the smaller the average current consumption Im. Since the shift time need only be within 0&#x2266;T&#x2266;T<sub>x</sub>, the average current consumption can be reduced to be smaller than I<sub>0</sub>.</p>
<p id="p-0175" num="0174">Therefore, by controlling the busy shift time or the data-in shift time T based on the data transfer speed between the host equipment <b>200</b> and the memory controller <b>12</b>, the average current consumption can be suppressed without degrading the speed performance of the entire memory system. As a result, the memory system capable of suppressing the average or instantaneous current consumption without degrading the speed performance can be achieved.</p>
<p id="p-0176" num="0175">Note that the description has been given in the first to third embodiments by taking the SD memory card as an example. However, the invention is also applicable to other memory cards, memory devices, internal memories and the like as long as such devices are semiconductor storage devices having the same bus structure, and the same advantageous effects as those of the memory card <b>100</b> or the like can be achieved. The invention is also applicable to, for example, a semiconductor device having multiple memory chips mounted in host equipment. Furthermore, the memory chip is not limited to the NAND flash memory, but may be other semiconductor memories.</p>
<p id="p-0177" num="0176">Moreover, in the embodiments described above, the timer <b>22</b> controls the issuance of the write command (<b>10</b>H) by the MPU <b>18</b> or the execution of data input (data in) by controlling the memory interface unit <b>21</b>. However, the timer <b>22</b> may notify the MPU <b>18</b> of the completion of the measurement of the first period, thereby allowing the MPU <b>18</b> to control (delay) the issuance of the write command (<b>10</b>H) or the execution of data input (data in).</p>
<p id="p-0178" num="0177">Furthermore, although the parallel control and the interleave control are separately performed in the first and second embodiments described above, the parallel control and the interleave control may be combined. Thus, the busy shift and data-in shift in the first and second embodiments can be simultaneously performed.</p>
<p id="p-0179" num="0178">While certain embodiments have been described, these embodiments have been presented by way of example only, and are not intend to limit the scope of the inventions. Indeed, the novel embodiments described herein may be embodied in a variety of the other forms; furthermore, various omissions, substitutions and changes in the form of the embodiments described herein may be made without departing from the spirit of the inventions. The accompanying claims and their equivalents are intended to cover such forms or modifications as would fall within the scope and spirit of the inventions.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A memory system, comprising:
<claim-text>a semiconductor storage unit having nonvolatile first and second semiconductor memory chips capable of holding data;</claim-text>
<claim-text>a memory controller configured to transfer data received from host equipment simultaneously to the first and second semiconductor memory chips;</claim-text>
<claim-text>a measurement unit configured to measure a lapse of a preset first period; and</claim-text>
<claim-text>a control unit configured to start writing of the data into the second semiconductor memory chip immediately after the lapse of the first period; and</claim-text>
<claim-text>a storage region capable of holding a plurality of the first periods different from one another, wherein</claim-text>
<claim-text>the control unit selects any one of the plurality of first periods in the storage region.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The memory system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the control unit starts writing the data into the first semiconductor memory chip immediately after a completion of a write ready condition in the first and second semiconductor memory chips, the control unit starts writing the data into the second semiconductor memory chip immediately after the lapse of the first period.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The memory system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein an upper limit is set for the first period.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The memory system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first period is determined based on a speed of data transfer from the host equipment.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The memory system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the memory system is a memory card.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The memory system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the measurement unit and the control unit are provided in the memory controller.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A memory system, comprising:
<claim-text>a semiconductor storage unit having nonvolatile first and second semiconductor memory chips capable of holding data;</claim-text>
<claim-text>a memory controller configured to transfer data received from host equipment alternately to the first and second semiconductor memory chips;</claim-text>
<claim-text>a measurement unit configured to measure a lapse of a preset first period;</claim-text>
<claim-text>a control unit configured to start input of the data into the second semiconductor memory chip immediately after the lapse of the first period; and</claim-text>
<claim-text>a storage region capable of holding a plurality of the first periods different from one another, wherein</claim-text>
<claim-text>the control unit selects any one of the plurality of first periods in the storage region.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The memory system according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the control unit starts writing the data into the first semiconductor memory chip immediately after a completion of a write ready condition in the first semiconductor memory chip, a write ready condition in the second semiconductor memory chip is started immediately after the lapse of the first period when a write ready condition in the first semiconductor memory chip is started, the control unit starts writing the data into the second semiconductor memory chip.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The memory system according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein an upper limit is set for the first period.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The memory system according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the first period is determined based on a speed of data transfer from the host equipment.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The memory system according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the memory system is a memory card.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The memory system according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the measurement unit and the control unit are provided in the memory controller.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A memory system, comprising:
<claim-text>a semiconductor storage unit having nonvolatile first and second semiconductor memory chips capable of holding data;</claim-text>
<claim-text>an external interface unit configured to transfer data outputted from host equipment;</claim-text>
<claim-text>a memory controller unit configured to transfer data received through the external interface unit from the host equipment simultaneously or alternately to the first and second semiconductor memory chips based on a data transfer speed between the host equipment and the external interface unit;</claim-text>
<claim-text>a measurement unit configured to measure a lapse of a preset first period; and</claim-text>
<claim-text>a control unit configured to start writing of the data into the second semiconductor memory chip immediately after the lapse of the first period when the memory controller unit transfers the data simultaneously to the first and second semiconductor memory chips, and to start inputting the data to the second semiconductor memory chip immediately after the elapsed time of the first period when the memory controller unit transfers the data alternately to the first and second semiconductor memory chips.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The memory system according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein an upper limit is set for the first period.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The memory system according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising:
<claim-text>a storage region capable of holding a plurality of the first periods different from one another, wherein</claim-text>
<claim-text>the control unit selects any one of the plurality of first periods in the storage region. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
