<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627431-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627431</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13153399</doc-number>
<date>20110604</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>236</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>9</main-group>
<subgroup>32</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>726  7</main-classification>
<further-classification>726  9</further-classification>
</classification-national>
<invention-title id="d2e53">Distributed network name</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5394555</doc-number>
<kind>A</kind>
<name>Hunter et al.</name>
<date>19950200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6119143</doc-number>
<kind>A</kind>
<name>Dias et al.</name>
<date>20000900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6748416</doc-number>
<kind>B2</kind>
<name>Carpenter et al.</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6801949</doc-number>
<kind>B1</kind>
<name>Bruck et al.</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6865597</doc-number>
<kind>B1</kind>
<name>Bandopadhyay et al.</name>
<date>20050300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6954881</doc-number>
<kind>B1</kind>
<name>Flynn, Jr. et al.</name>
<date>20051000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>7496565</doc-number>
<kind>B2</kind>
<name>Thind et al.</name>
<date>20090200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>7506009</doc-number>
<kind>B2</kind>
<name>Singh et al.</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>7525902</doc-number>
<kind>B2</kind>
<name>Dominic</name>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>7885930</doc-number>
<kind>B2</kind>
<name>Anzai et al.</name>
<date>20110200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2005/0283658</doc-number>
<kind>A1</kind>
<name>Clark et al.</name>
<date>20051200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2007/0226359</doc-number>
<kind>A1</kind>
<name>Gunduc et al.</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709229</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2008/0005196</doc-number>
<kind>A1</kind>
<name>Beck</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2008/0256607</doc-number>
<kind>A1</kind>
<name>Janedittakarn et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2009/0132552</doc-number>
<kind>A1</kind>
<name>Adya et al.</name>
<date>20090500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2009/0204705</doc-number>
<kind>A1</kind>
<name>Marinov et al.</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2009/0327798</doc-number>
<kind>A1</kind>
<name>D'Amato et al.</name>
<date>20091200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2011/0296486</doc-number>
<kind>A1</kind>
<name>Burch et al.</name>
<date>20111200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726  1</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00019">
<othercit>Sadtler, Carla, &#x201c;WebSphere Application Server V6.1: Technical Overview&#x201d;, Retrieved at &#x3c;&#x3c;http://www.redbooks.ibm.com/redpapers/pdfs/redp4191.pdf&#x3e;&#x3e;, Retrieved Date: Mar. 17, 2011, pp. 1-68.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00020">
<othercit>&#x201c;Using Microsoft Server Technology to Build Carrier Grade Call Centers&#x201d;, Jun. 2004, pp. 15.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00021">
<othercit>Wang, et al., &#x201c;Xenloop: A Transparent High Performance Inter-Vm Network Loopback&#x201d;, Retrieved at: http://osnet.cs.binghamton.edu/publications/wang08xenloop.pdf, Proceedings of the 17th international symposium on High performance distributed computing, vol. 12, Issue 02, Jun. 23-27, 2008, pp. 10.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00022">
<othercit>Ekren, Steven, et al., &#x201c;Innovating High Availability with Cluster Shared Volumes&#x201d;, 2009, pp. 44.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00023">
<othercit>&#x201c;Failover Clustering Performance Counters&#x2014;Part 1&#x201d;, Sep. 4, 2009, pp. 4.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00024">
<othercit>Schulman, Jerold, &#x201c;The Microsoft Windows Cluster Service (MSCS) Clustering Model&#x201d;, Apr. 7, 2003, pp. 2.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00025">
<othercit>&#x201c;Cluster Shared Volumes (CSV): Disk Ownership&#x201d;, Mar. 1, 2009, pp. 4.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00026">
<othercit>&#x201c;Pomegranate&#x2014;Storing Billions and Billions of Tiny Little Files&#x201d;, Retrieved at &#x3c;&#x3c;http://highscalability.com/blog/2010/8/30/pomegranate-storing-billions-and-billions-of-tiny-little-fil.html&#x3e;&#x3e;, Aug. 30, 2010, pp. 14.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00027">
<othercit>&#x201c;The Oracle Database Lite RDBMS&#x201d;, Retrieved at &#x3c;&#x3c;http://download.oracle.com/docs/cd/B19188<sub>&#x2014;</sub>01/doc/B15920/nvdb.htm&#x3e;&#x3e;, Retrieved Date: Mar. 28, 2011, pp. 18.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00028">
<othercit>&#x201c;HDFS Architecture&#x201d;, Retrieved at &#x3c;&#x3c;http://hadoop.apache.org/common/docs/r0.20.2/hdfs<sub>&#x2014;</sub>design.html&#x3e;&#x3e;, Retrieved Date: Mar. 28, 2011, pp. 7.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>19</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>7</number-of-drawing-sheets>
<number-of-figures>7</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120311685</doc-number>
<kind>A1</kind>
<date>20121206</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Padmanaban</last-name>
<first-name>Sai Sudhir Anantha</first-name>
<address>
<city>Redmond</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Warwick</last-name>
<first-name>Alan M.</first-name>
<address>
<city>Bellevue</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>D'Amato</last-name>
<first-name>Andrea</first-name>
<address>
<city>Kirkland</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Aloysius</last-name>
<first-name>Henry Anthuvan</first-name>
<address>
<city>Sammamish</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="005" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Petter</last-name>
<first-name>Vladimir</first-name>
<address>
<city>Bellevue</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Padmanaban</last-name>
<first-name>Sai Sudhir Anantha</first-name>
<address>
<city>Redmond</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Warwick</last-name>
<first-name>Alan M.</first-name>
<address>
<city>Bellevue</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>D'Amato</last-name>
<first-name>Andrea</first-name>
<address>
<city>Kirkland</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Aloysius</last-name>
<first-name>Henry Anthuvan</first-name>
<address>
<city>Sammamish</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="005" designation="us-only">
<addressbook>
<last-name>Petter</last-name>
<first-name>Vladimir</first-name>
<address>
<city>Bellevue</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Rau Patents, LLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Microsoft Corporation</orgname>
<role>02</role>
<address>
<city>Redmond</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Hoffman</last-name>
<first-name>Brandon</first-name>
<department>2433</department>
</primary-examiner>
<assistant-examiner>
<last-name>Woldemariam</last-name>
<first-name>Nega</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Aspects of the subject matter described herein relate to a distributed network name. In aspects, computers of a cluster have components of a distributed network name service. The network name service has a leader and clones that are hosted on the computers of the cluster. The leader is responsible for updating a name server with network names and addresses of the computers. The leader is also responsible for configuring a security server that allows clients to securely access the computers. The network name service provides credentials to local security authorities of the computers so that a client that attempts to access a service of the computers can be authenticated.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="176.78mm" wi="241.81mm" file="US08627431-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="241.64mm" wi="175.85mm" orientation="landscape" file="US08627431-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="215.73mm" wi="171.62mm" orientation="landscape" file="US08627431-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="199.64mm" wi="140.46mm" orientation="landscape" file="US08627431-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="249.34mm" wi="167.81mm" orientation="landscape" file="US08627431-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="226.65mm" wi="146.73mm" orientation="landscape" file="US08627431-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="187.71mm" wi="131.66mm" file="US08627431-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="214.38mm" wi="135.89mm" file="US08627431-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is related to U.S. patent application Ser. No. 13/153,416 entitled &#x201c;CLUSTERED FILE SERVICE.&#x201d;</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">A cluster may include one or more machines. Clusters are often used to increase performance and availability. When a single server computer serves client computers, updating name servers and security mechanisms such that the client computers can find and use services of the server computer and be authenticated is relatively straightforward. Doing these same things in a cluster, however, is challenging.</p>
<p id="p-0004" num="0003">The subject matter claimed herein is not limited to embodiments that solve any disadvantages or that operate only in environments such as those described above. Rather, this background is only provided to illustrate one exemplary technology area where some embodiments described herein may be practiced.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0005" num="0004">Briefly, aspects of the subject matter described herein relate to a distributed network name. In aspects, computers of a cluster have components of a distributed network name service. The network name service has a leader and clones that are hosted on the computers of the cluster. The leader is responsible for updating a name server with network names and addresses of the computers. The leader is also responsible for configuring a security server that allows clients to securely access the computers. The network name service provides credentials to local security authorities of the computers so that a client that attempts to access a service of the computers can be authenticated.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram representing an exemplary general-purpose computing environment into which aspects of the subject matter described herein may be incorporated;</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram that represents an exemplary environment in which aspects of the subject matter described herein may be implemented;</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram that represents exemplary components that may be hosted on each of the computers <b>208</b>-<b>211</b> of <figref idref="DRAWINGS">FIG. 2</figref> in accordance with aspects of the subject matter described herein;</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 4</figref> is a timing diagram that illustrates an exemplary sequence of actions in accordance with aspects of the subject matter described herein;</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 5</figref> is a state diagram that illustrates exemplary states in accordance with aspects of the subject matter described hereon; and</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIGS. 6-7</figref> are flow diagrams that generally represent exemplary actions that may occur in accordance with aspects of the subject matter described herein.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="h-0006" num="0000">Definitions</p>
<p id="p-0012" num="0011">As used herein, the term &#x201c;includes&#x201d; and its variants are to be read as open-ended terms that mean &#x201c;includes, but is not limited to.&#x201d; The term &#x201c;or&#x201d; is to be read as &#x201c;and/or&#x201d; unless the context clearly dictates otherwise. The term &#x201c;based on&#x201d; is to be read as &#x201c;based at least in part on.&#x201d; The terms &#x201c;one embodiment&#x201d; and &#x201c;an embodiment&#x201d; are to be read as &#x201c;at least one embodiment.&#x201d; The term &#x201c;another embodiment&#x201d; is to be read as &#x201c;at least one other embodiment.&#x201d;</p>
<p id="p-0013" num="0012">As used herein, terms such as &#x201c;a,&#x201d; &#x201c;an,&#x201d; and &#x201c;the&#x201d; are inclusive of one or more of the indicated item or action. In particular, in the claims a reference to an item generally means at least one such item is present and a reference to an action means at least one instance of the action is performed.</p>
<p id="p-0014" num="0013">Sometimes herein the terms &#x201c;first&#x201d;, &#x201c;second&#x201d;, &#x201c;third&#x201d; and so forth may be used. Without additional context, the use of these terms in the claims is not intended to imply an ordering but is rather used for identification purposes. For example, the phrase &#x201c;first version&#x201d; and &#x201c;second version&#x201d; does not necessarily mean that the first version is the very first version or was created before the second version or even that the first version is requested or operated on before the second versions. Rather, these phrases are used to identify different versions.</p>
<p id="p-0015" num="0014">Headings are for convenience only; information on a given topic may be found outside the section whose heading indicates that topic.</p>
<p id="p-0016" num="0015">Other definitions, explicit and implicit, may be included below.</p>
<p id="h-0007" num="0000">Exemplary Operating Environment</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an example of a suitable computing system environment <b>100</b> on which aspects of the subject matter described herein may be implemented. The computing system environment <b>100</b> is only one example of a suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of aspects of the subject matter described herein. Neither should the computing environment <b>100</b> be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment <b>100</b>.</p>
<p id="p-0018" num="0017">Aspects of the subject matter described herein are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well-known computing systems, environments, or configurations that may be suitable for use with aspects of the subject matter described herein comprise personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microcontroller-based systems, set-top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, personal digital assistants (PDAs), gaming devices, printers, appliances including set-top, media center, or other appliances, automobile-embedded or attached computing devices, other mobile devices, distributed computing environments that include any of the above systems or devices, and the like.</p>
<p id="p-0019" num="0018">Aspects of the subject matter described herein may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, and so forth, which perform particular tasks or implement particular abstract data types. Aspects of the subject matter described herein may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices.</p>
<p id="p-0020" num="0019">With reference to <figref idref="DRAWINGS">FIG. 1</figref>, an exemplary system for implementing aspects of the subject matter described herein includes a general-purpose computing device in the form of a computer <b>110</b>. A computer may include any electronic device that is capable of executing an instruction. Components of the computer <b>110</b> may include a processing unit <b>120</b>, a system memory <b>130</b>, and a system bus <b>121</b> that couples various system components including the system memory to the processing unit <b>120</b>. The system bus <b>121</b> may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, Peripheral Component Interconnect (PCI) bus also known as Mezzanine bus, Peripheral Component Interconnect Extended (PCI-X) bus, Advanced Graphics Port (AGP), and PCI express (PCIe).</p>
<p id="p-0021" num="0020">The computer <b>110</b> typically includes a variety of computer-readable media. Computer-readable media can be any available media that can be accessed by the computer <b>110</b> and includes both volatile and nonvolatile media, and removable and non-removable media. By way of example, and not limitation, computer-readable media may comprise computer storage media and communication media.</p>
<p id="p-0022" num="0021">Computer storage media includes both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer-readable instructions, data structures, program modules, or other data. Computer storage media includes RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile discs (DVDs) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by the computer <b>110</b>.</p>
<p id="p-0023" num="0022">Communication media typically embodies computer-readable instructions, data structures, program modules, or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term &#x201c;modulated data signal&#x201d; means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer-readable media.</p>
<p id="p-0024" num="0023">The system memory <b>130</b> includes computer storage media in the form of volatile and/or nonvolatile memory such as read only memory (ROM) <b>131</b> and random access memory (RAM) <b>132</b>. A basic input/output system <b>133</b> (BIOS), containing the basic routines that help to transfer information between elements within computer <b>110</b>, such as during start-up, is typically stored in ROM <b>131</b>. RAM <b>132</b> typically contains data and/or program modules that are immediately accessible to and/or presently being operated on by processing unit <b>120</b>. By way of example, and not limitation, <figref idref="DRAWINGS">FIG. 1</figref> illustrates operating system <b>134</b>, application programs <b>135</b>, other program modules <b>136</b>, and program data <b>137</b>.</p>
<p id="p-0025" num="0024">The computer <b>110</b> may also include other removable/non-removable, volatile/nonvolatile computer storage media. By way of example only, <figref idref="DRAWINGS">FIG. 1</figref> illustrates a hard disk drive <b>141</b> that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive <b>151</b> that reads from or writes to a removable, nonvolatile magnetic disk <b>152</b>, and an optical disc drive <b>155</b> that reads from or writes to a removable, nonvolatile optical disc <b>156</b> such as a CD ROM or other optical media. Other removable/non-removable, volatile/nonvolatile computer storage media that can be used in the exemplary operating environment include magnetic tape cassettes, flash memory cards, digital versatile discs, other optical discs, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive <b>141</b> may be connected to the system bus <b>121</b> through the interface <b>140</b>, and magnetic disk drive <b>151</b> and optical disc drive <b>155</b> may be connected to the system bus <b>121</b> by an interface for removable non-volatile memory such as the interface <b>150</b>.</p>
<p id="p-0026" num="0025">The drives and their associated computer storage media, discussed above and illustrated in <figref idref="DRAWINGS">FIG. 1</figref>, provide storage of computer-readable instructions, data structures, program modules, and other data for the computer <b>110</b>. In <figref idref="DRAWINGS">FIG. 1</figref>, for example, hard disk drive <b>141</b> is illustrated as storing operating system <b>144</b>, application programs <b>145</b>, other program modules <b>146</b>, and program data <b>147</b>. Note that these components can either be the same as or different from operating system <b>134</b>, application programs <b>135</b>, other program modules <b>136</b>, and program data <b>137</b>. Operating system <b>144</b>, application programs <b>145</b>, other program modules <b>146</b>, and program data <b>147</b> are given different numbers herein to illustrate that, at a minimum, they are different copies.</p>
<p id="p-0027" num="0026">A user may enter commands and information into the computer <b>110</b> through input devices such as a keyboard <b>162</b> and pointing device <b>161</b>, commonly referred to as a mouse, trackball, or touch pad. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, a touch-sensitive screen, a writing tablet, or the like. These and other input devices are often connected to the processing unit <b>120</b> through a user input interface <b>160</b> that is coupled to the system bus, but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB).</p>
<p id="p-0028" num="0027">A monitor <b>191</b> or other type of display device is also connected to the system bus <b>121</b> via an interface, such as a video interface <b>190</b>. In addition to the monitor, computers may also include other peripheral output devices such as speakers <b>197</b> and printer <b>196</b>, which may be connected through an output peripheral interface <b>195</b>.</p>
<p id="p-0029" num="0028">The computer <b>110</b> may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer <b>180</b>. The remote computer <b>180</b> may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer <b>110</b>, although only a memory storage device <b>181</b> has been illustrated in <figref idref="DRAWINGS">FIG. 1</figref>. The logical connections depicted in <figref idref="DRAWINGS">FIG. 1</figref> include a local area network (LAN) <b>171</b> and a wide area network (WAN) <b>173</b>, but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet.</p>
<p id="p-0030" num="0029">When used in a LAN networking environment, the computer <b>110</b> is connected to the LAN <b>171</b> through a network interface or adapter <b>170</b>. When used in a WAN networking environment, the computer <b>110</b> may include a modem <b>172</b> or other means for establishing communications over the WAN <b>173</b>, such as the Internet. The modem <b>172</b>, which may be internal or external, may be connected to the system bus <b>121</b> via the user input interface <b>160</b> or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer <b>110</b>, or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation, <figref idref="DRAWINGS">FIG. 1</figref> illustrates remote application programs <b>185</b> as residing on memory device <b>181</b>. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.</p>
<p id="h-0008" num="0000">Network Name</p>
<p id="p-0031" num="0030">As mentioned previously, finding and using services and authenticating clients in a cluster is challenging. <figref idref="DRAWINGS">FIG. 2</figref> is a block diagram that represents an exemplary environment in which aspects of the subject matter described herein may be implemented. The components illustrated in <figref idref="DRAWINGS">FIG. 2</figref> are exemplary and are not meant to be all-inclusive of components that may be needed or included. In other embodiments, the components described in conjunction with <figref idref="DRAWINGS">FIG. 2</figref> may be included in other components (shown or not shown) or placed in subcomponents without departing from the spirit or scope of aspects of the subject matter described herein.</p>
<p id="p-0032" num="0031">As used herein, the term component is to be read to include hardware such as all or a portion of a device, a collection of one or more software modules or portions thereof, some combination of one or more software modules or portions thereof and one or more devices or portions thereof, and the like.</p>
<p id="p-0033" num="0032">Turning to <figref idref="DRAWINGS">FIG. 2</figref>, the environment may include a client <b>205</b>, a name server <b>206</b>, a security server <b>207</b>, a cluster <b>225</b>, a network <b>230</b>, and may include other entities (not shown). The cluster <b>210</b> may include one or more computers <b>208</b>-<b>211</b> (sometimes referred to as servers or nodes). The computers <b>208</b>-<b>211</b> may host cluster management components <b>215</b>-<b>218</b> (sometimes referred to as a cluster manager) and distributed network name (DNN) components <b>220</b>-<b>223</b>. One of the DNN components <b>220</b>-<b>223</b> may be designated as the leader while the other DNN components may be designated as clones. The function of the leader and the clones will be described in more detail below.</p>
<p id="p-0034" num="0033">Although the cluster illustrated in <figref idref="DRAWINGS">FIG. 2</figref> has DNN components on each of the computers <b>208</b>-<b>211</b>, in other embodiments, not all of the computers may have DNN components. In other words, a portion of the computers of a cluster may host DNN components without departing from the spirit or scope of aspects of the subject matter described herein. In addition, there may be multiple DNN services hosted on the same cluster. Furthermore, a cluster may be partitioned into two or more portions where each portion hosts a DNN service for a subset of the cluster. The portions may overlap.</p>
<p id="p-0035" num="0034">The various entities (e.g., the client <b>205</b>, the name server <b>206</b>, the security server <b>207</b>, and the servers <b>208</b>-<b>211</b>) may be located relatively close to each other or may be distributed across the world. The computers <b>208</b>-<b>211</b> of the cluster <b>225</b> may, for example, be on the same local area network or may be located in different locations and communicate with each other via one or more networks including the network <b>230</b>. The various entities may communicate with each other via various networks including intra- and inter-office networks. The client <b>205</b> (sometimes referred to herein as a requestor) may communicate with servers of the cluster <b>225</b> via the network <b>230</b>.</p>
<p id="p-0036" num="0035">In an embodiment, the network <b>230</b> may comprise the Internet. In an embodiment, the network <b>230</b> may comprise one or more local area networks, wide area networks, direct connections, virtual connections, private networks, virtual private networks, some combination of the above, and the like.</p>
<p id="p-0037" num="0036">The client <b>205</b>, the name server <b>206</b>, the security server <b>207</b>, and the computer <b>208</b>-<b>211</b> of the cluster <b>225</b> may comprise or reside on one or more computing devices. Such devices may include, for example, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microcontroller-based systems, set-top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, cell phones, personal digital assistants (PDAs), gaming devices, printers, appliances including set-top, media center, or other appliances, automobile-embedded or attached computing devices, other mobile devices, distributed computing environments that include any of the above systems or devices, and the like. An exemplary device that may be configured to act as one of the above comprises the computer <b>110</b> of <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0038" num="0037">Although the terms &#x201c;client&#x201d; and &#x201c;server&#x201d; are sometimes used herein, it is to be understood, that a client may be implemented on a machine that has hardware and/or software that is typically associated with a server and that likewise, a server may be implemented on a machine that has hardware and/or software that is typically associated with a desktop, personal, or mobile computer. Furthermore, a client may at times act as a server and vice versa. At times, two or more entities that more frequently act as a client or server may concurrently be peers, servers, or clients. In an embodiment, a client and server may be implemented on the same physical machine.</p>
<p id="p-0039" num="0038">Furthermore, as used herein, each of the terms &#x201c;server&#x201d; and &#x201c;client&#x201d; may refer to one or more physical or virtual entities, one or more processes executing on one or more physical or virtual entities, and the like. Thus, a server may include an actual physical node upon which one or more processes execute, a virtual node upon which one or more processes execute, a service executing on one or more nodes, a group of nodes that together provide a service, and the like. A service may include one or more processes executing on one or more physical or virtual entities. Furthermore, a single process may implement one or more servers.</p>
<p id="p-0040" num="0039">The name server <b>206</b> may include data that identifies network addresses of various entities including the computer <b>208</b>-<b>211</b>. In one embodiment, the data may associate a network name with network addresses of the computers <b>208</b>-<b>211</b>. In one embodiment, the name server <b>206</b> may comprise a Domain Name System (DNS) server. The name server <b>206</b> may be hosted by a computer of the cluster <b>225</b> or may be hosted by another computer.</p>
<p id="p-0041" num="0040">When the client <b>205</b> seeks to access a server, the client <b>205</b> may contact the name server <b>206</b> and provide a name. In response, the name server may look up network addresses associated with the name. If more than one network address is associated with the name, the name server may alternate in sending one of the network addresses (e.g., via round robin or some other algorithm), may send a list of the network addresses where the list is ordered such that using the first address of the list will distribute requests to alternate servers, or may act in some other way to provide one or more network addresses to the client <b>205</b>.</p>
<p id="p-0042" num="0041">The client <b>205</b> may also access the security server <b>207</b> in preparation for authenticating with one of the servers <b>208</b>-<b>211</b>. In one embodiment, the security server <b>207</b> may implement a Kerberos algorithm in which tokens are provided to clients. A token may include security data that allows the client to access one or more of the computers <b>208</b>-<b>211</b>. In one embodiment, the security server <b>207</b> may comprise a server configured with ACTIVE DIRECTORY&#xae; (AD). The security server <b>207</b> may be may hosted by a computer of the cluster <b>225</b> or may be hosted by another computer.</p>
<p id="p-0043" num="0042">Although Kerberos and ACTIVE DIRECTORY&#xae; are mentioned above, there is no intention to limit aspects of the subject matter described herein to only those implementations. Indeed, based on the teachings herein, those skilled in the art may recognize many other security mechanisms that may be used without departing from the spirit or scope of aspects of the subject matter described herein.</p>
<p id="p-0044" num="0043">For example, in one embodiment, a security module on each node may be relied on to provide security services. This module may be the node's default security mechanism. Security data may be replicated (e.g., via a distributed security component) between computers of the cluster <b>225</b> to ensure that each computer has the data needed for authentication. If security data regarding a user changes on one of the nodes, the distributed security component may update each of the nodes with the updated security data. In this embodiment, the security server <b>207</b> may comprise the distributed security component and the default security modules of each node.</p>
<p id="p-0045" num="0044">After the client <b>205</b> has obtained the security data from the security server <b>207</b>, the client <b>205</b> may connect to one of the computers of the cluster <b>225</b> and may present the security data to authenticate itself and may in turn authenticate the server to which the client <b>205</b> connected. After authentication, the client may access a server (e.g., a file server) hosted on the computer to which the client connected.</p>
<p id="p-0046" num="0045">As mentioned previously, the computers <b>208</b>-<b>211</b> may host cluster management components <b>215</b>-<b>218</b> and distributed network name components <b>220</b>-<b>223</b>. The cluster management components <b>215</b>-<b>218</b> may provide a framework for managing and communicating with the computers <b>208</b>-<b>211</b> with respect to cluster activities. For example, the cluster management components <b>215</b>-<b>218</b> may monitor health of the computers and servers hosted thereon and may indicate when a computer has joined or left the cluster. The cluster management components <b>215</b>-<b>218</b> may provide a mechanism by which servers of the computers <b>208</b>-<b>211</b> may discover and communicate with each other. The cluster management components <b>215</b>-<b>218</b> may also call entry points of the distributed network name components <b>215</b>-<b>218</b> as described in more detail below.</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram that represents exemplary components that may be hosted on each of the computers <b>208</b>-<b>211</b> of <figref idref="DRAWINGS">FIG. 2</figref> in accordance with aspects of the subject matter described herein. The components <b>300</b> correspond to the distributed network name (DNN) components that reside on each of the computers <b>208</b>-<b>211</b>.</p>
<p id="p-0048" num="0047">The components <b>300</b> may include an identity component <b>305</b>, an entry point handler <b>310</b>, a name component <b>315</b>, a configuration component <b>320</b>, a client component <b>325</b>, a security component <b>330</b>, and other components (not shown). Some or all of the components may be active on a leader of the DNN service while some of the components may not be active on a clone of the DNN service. The term DNN service is used to refer to the DNN components that reside on one or more computers of the cluster to perform distributed network name actions as described herein.</p>
<p id="p-0049" num="0048">The entry point handler <b>310</b> allows an external entity, such as a component of the cluster management components, to perform management operations with respect to the components <b>300</b>. The entry point handler <b>310</b> may receive a message from the cluster manager and may take actions in response thereto. Some exemplary management operations include instantiating, deleting, activating, deactivating, indicating that a node is to act as a leader or clone, communicating with, configuring, and the like. For example, a cluster management component may call entry points including:</p>
<p id="p-0050" num="0049">1. Open( ). This may be called, for example, when a resource is created, when a node is added to the DNN service, when reattaching a monitoring process, and the like. In response, a node of the DNN service that receives the open request may instantiate all of its components (e.g., the identity component <b>305</b>, the name component <b>315</b>, the client component <b>325</b>, and the security component <b>330</b>. The node may wait to activate one or more of those components until later. In addition, when a node receives the open request, if the DNN configuration data already exists, the node may start supplying access tokens to applications that have requested such tokens. These applications may then use the tokens to impersonate the DNN service to access resources outside of the DNN service.</p>
<p id="p-0051" num="0050">2. Online( ). This entry point is called on a node that is to become the DNN leader. In response to receiving this entry point, a node may activate its configuration, name, and security components. If the online entry point is received to create a brand new DNN (e.g., with no persisted properties), the DNN leader may activate the identity component on the nodes of the DNN service by sending a broadcast message (e.g., via a broadcast component not shown). In response, a clone component may retrieve credentials (e.g., domain name, user name, password, or the like) from a common store such as a cluster database. A client component on a node that receives the broadcast message may wait to activate itself until instructed by another component (e.g., a file server component) executing on the node.</p>
<p id="p-0052" num="0051">In one embodiment, instead of having the clones obtain the credentials from a common store, the leader may securely communicate the credentials directly to each of the clones. When credentials change, the leader may securely communicate the changed credentials to the clones.</p>
<p id="p-0053" num="0052">3. Offline( ). This entry point is called on a node to cause it to relinquish DNN leadership. In response, the node deactivates its configuration, name, and security components. If the call includes a flag that indicates that the offline of the DNN service is persistent, the DNN leader may broadcast to all nodes to deactivate identity and client components. If the call does not include a flag that indicates that the offline of the DNN service is persistent, the identity and client components of each node of the DNN service remain functional.</p>
<p id="p-0054" num="0053">4. Terminate( ). This entry point may be called for various reasons including, for example, if a health monitor indicates problems, to kill the cluster hosting subsystem, to cause the DNN service to fail via an API, or for other reasons. The terminate call may include a flag that lets the DNN know if the cluster hosting subsystem plans to bring the DNN service online on another node. In response to receiving a terminate call, if the flag is not set, a broadcast message is sent to all clones to deactivate the identity and client components. If the flag is sent, the client and identity components are still active on all nodes.</p>
<p id="p-0055" num="0054">5. Close( ). This entry point may be called for various reasons including, for example, if a DNN resource is being deleted. In response to a close call, all components on the node are deactivated and deleted.</p>
<p id="p-0056" num="0055">6. IsAlive/LooksAlive( ). This entry point may be called by the cluster hosting subsystem for the DNN leader only. In response to receiving this call, the DNN leader may check if the appropriate object exists on the security server and has not been corrupted.</p>
<p id="p-0057" num="0056">7. ResourceCtl( ). This entry point may be called for resource controls. It may also be called for interaction with a distributed file server that uses the DNN service for the name and authentication services.</p>
<p id="p-0058" num="0057">8. Some other entry point not described above. The list above is not intended to be all-inclusive or exhaustive of all entry points that may be called. Based on the teachings herein, those skilled in the art may recognize other entry points that may also be used without departing from the spirit or scope of aspects of the subject matter described herein.</p>
<p id="p-0059" num="0058">The configuration component <b>320</b> maintains configuration data of the DNN service while the DNN service is online and may store the configuration data in a persistent store. Configuration information may include, for example, IP addresses of the nodes involved in the DNN service, status of and other data (e.g., last update time, name server name, time to live, and the like) associated with a name server, status of and other data (e.g., object identifier, password expiration date, and the like) associated with a security server, data about a domain controller associated with the DNN service, and the like.</p>
<p id="p-0060" num="0059">The security component <b>330</b> includes functionality for interacting with a security server. Such functionality may include, for example, functionality to set object attributes, change passwords or other credentials, and the like. If the computer is a leader, the security component may communicate with a security server (e.g., such as the security server <b>207</b>) to indicate credentials by which the distributed network name service is accessible via the one or more computers of the cluster that are hosting the network name service.</p>
<p id="p-0061" num="0060">The name component <b>315</b> includes functionality for interacting with a name server. Such functionality may include, for example, functionality to update name information on the name server. The name component <b>315</b> may configure the name server to associated network addresses (e.g., of the DNN service computers) with a network name (e.g., of the DNN service). In configuring the name server, the name component <b>315</b> may instruct the name server (implicitly or explicitly) to provide at least one of the network addresses to an entity that provides the network name to the name server.</p>
<p id="p-0062" num="0061">In addition as nodes are added or removed from the cluster, the name component <b>315</b> may update the name server. For example, the name component <b>315</b> may add a network address if another computer begins hosting the distributed name server and may remove a network address if one of the computers that is currently hosting the distributed name service stops hosting the distributed name service.</p>
<p id="p-0063" num="0062">Furthermore, the name component <b>315</b> may further operate to periodically refresh the network addresses on the name server even if there have been no additions to or subtractions from the one or more computers of the cluster that are hosting the distributed name service.</p>
<p id="p-0064" num="0063">The identity component <b>305</b> may allow impersonation of the DNN service for use in communicating with other entities. For example, the identity component <b>305</b> may obtain and provide a token that allows an entity to impersonate the DNN service when accessing a resource external to the DNN service. A resource external to the DNN service is a resource that is not controlled by the DNN service.</p>
<p id="p-0065" num="0064">As mentioned previously, one server of a DNN service may be configured as a leader while the other servers of the DNN service may be configured as clones. A DNN leader may be responsible for actions including:</p>
<p id="p-0066" num="0065">1. Updating the name server. When the DNN leader is instantiated and at other times, the DNN leader may check to see what clones are part of the DNN service. If the DNN leader finds clones, the DNN leader may add the clones' network addresses (e.g., IP addresses) to an address list and update a name server (e.g., the name server <b>206</b> of <figref idref="DRAWINGS">FIG. 2</figref>) as appropriate. Each time a new clone is added or a current clone is removed from the DNN service, the DNN leader may update its address list and update the name server as appropriate. The DNN leader may provide multiple addresses (e.g., IPv4, IPv6, tunnel addresses, and the like) to the name server for each clone.</p>
<p id="p-0067" num="0066">2. Update the security server. The DNN leader may also update the security server. For example, periodically or at other times, the DNN leader may update the credentials that the security server uses to create the token it provides to clients.</p>
<p id="p-0068" num="0067">3. Communicating with the clones. The DNN leader may interact with a DNN clone at various points including, for example:</p>
<p id="p-0069" num="0068">A. When a DNN clone start up. This may occur because a node is added to the cluster, a cluster service starts on a node, a monitoring process is attached via the resource hosting subsystem, or the like. At this point the DNN clone may send a GetLeaderState to the DNN leader.</p>
<p id="p-0070" num="0069">B. When the DNN leader persistently put online or offline. At this point, the DNN leader may send a SendLeaderState to the clones.</p>
<p id="p-0071" num="0070">C. When credentials are changed. In this case the DNN leader may provide the new credentials to the DNN clones via a SendCredentialsUpdate.</p>
<p id="p-0072" num="0071">The GetLeaderState may be processed asynchronously by the DNN leader. The clone may pass an input buffer of the clone's node identifier. In response, the DNN leader may, for example, fork off a thread and send a reply to the clone using the SendLeaderState message.</p>
<p id="p-0073" num="0072">The SendLeaderState message is sent from the DNN leader to the DNN clone either after a persistent offline/online or in response to a GetLeaderState message. The SendLeaderState message includes a flag that indicates the current leader state (e.g., Offline/Online), a flag indicating if a file server is dependent on the DNN service, and potentially other data. When a clone receives this message, the clone may do nothing if the DNN leader is offline; otherwise, the DNN clone may add a transport in an enabled or disabled state. The transport may be used for accessing a distributed file server, for example.</p>
<p id="p-0074" num="0073">The SendCredentialsUpdate message is sent from the DNN leader to the DNN clones. When a clone receives a SendCredentialsUpdate message, the client component may update a local security authority that maintains information about local security of a computer that hosts the clone. This local security authority may use the credentials supplied by the clone to authenticate clients that seek to access a service of the computer. For example, if a client is accessing a distributed file system server, the local security authority may authenticate the client prior to allowing access to the file system server hosted on the computer that hosts the clone.</p>
<p id="p-0075" num="0074">The DNN leader may send an indication that credentials are available to the clones so that each clone (or another application associated with the clone) is able to obtain the credentials and authenticate a client. If the credentials change, the DNN leader may send a message to the clones so indicating. When a new clone is added, the clone may obtain the credentials from a common store of the DNN service.</p>
<p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. 4</figref> is a timing diagram that illustrates an exemplary sequence of actions in accordance with aspects of the subject matter described herein. The ordering of the sequence of events is not intended to be the only possible ordering or a complete listing of all the events that may happen. In other embodiments, events may be re-ordered or happen in parallel and other events not shown may occur.</p>
<p id="p-0077" num="0076">To start a leader of a DNN service, the cluster manager <b>415</b> sends a message (e.g., Online(Resource Identifier)) to the leader <b>420</b>. In response, the leader <b>420</b> instantiates its components and activates them. Then the leader <b>420</b> configures the security server <b>425</b> so that the security server <b>425</b> has the appropriate security data to provide tokens to clients.</p>
<p id="p-0078" num="0077">After configuring the security server <b>425</b>, the leader <b>420</b> may persist the security data on the data store <b>405</b>. After persisting the security data, the leader <b>420</b> may query for address information from the topology manager <b>410</b>. In response, the topology manager <b>410</b> may provide network addresses of nodes within the cluster that are to host the DNN service.</p>
<p id="p-0079" num="0078">After receiving the address information, the leader <b>420</b> may persist the address information in the data store <b>405</b>. The leader may configure the name server <b>430</b> with the address information so that clients are able to reach applications that depend on the DNN service. After configuring the name server <b>430</b>, the leader may send a broadcast message to the clone(s) <b>435</b> instructing the clones to activate their client and identity components. Each client component may update a local security authority with credentials that may be used to authenticate clients.</p>
<p id="p-0080" num="0079"><figref idref="DRAWINGS">FIG. 5</figref> is a state diagram that illustrates exemplary states in accordance with aspects of the subject matter described hereon. The states and transitions illustrated in <figref idref="DRAWINGS">FIG. 5</figref> are not intended to be all-inclusive or exhaustive. In other embodiments, there may be more, fewer, or other states and transitions.</p>
<p id="p-0081" num="0080">Turning to <figref idref="DRAWINGS">FIG. 5</figref>, from an entry point, the state proceeds to the idle state or to the force name server refresh state.</p>
<p id="p-0082" num="0081">From the idle state, the state transitions to the timer running state if a network interface goes up or down or if a network address is added or removed. If from the idle state, a certain amount of time (e.g., 24 hours) has elapsed since the name server has been configured, the state transitions to the forced name server refresh state. The state may also transition to this state if the address has changed or a registration has failed. The state may also transition from the idle state to the force name server refresh state if a network interface has been added or deleted from any of the servers that are part of the DNN service.</p>
<p id="p-0083" num="0082">From the forced name server refresh state, the state may transition to the time running state if the refresh failed. The state may transition to the idle state if the configuration of the name server is successful.</p>
<p id="p-0084" num="0083">From the timer running state, the state may transition to the idle state or to the force name server refresh state depending on if the address changed or the registration failed.</p>
<p id="p-0085" num="0084"><figref idref="DRAWINGS">FIGS. 6-7</figref> are flow diagrams that generally represent exemplary actions that may occur in accordance with aspects of the subject matter described herein. For simplicity of explanation, the methodology described in conjunction with <figref idref="DRAWINGS">FIGS. 6-7</figref> is depicted and described as a series of acts. It is to be understood and appreciated that aspects of the subject matter described herein are not limited by the acts illustrated and/or by the order of acts. In one embodiment, the acts occur in an order as described below. In other embodiments, however, the acts may occur in parallel, in another order, and/or with other acts not presented and described herein. Furthermore, not all illustrated acts may be required to implement the methodology in accordance with aspects of the subject matter described herein. In addition, those skilled in the art will understand and appreciate that the methodology could alternatively be represented as a series of interrelated states via a state diagram or as events.</p>
<p id="p-0086" num="0085">Turning to <figref idref="DRAWINGS">FIG. 6</figref>, at block <b>605</b>, the actions begin. At block <b>610</b>, a leader is indicated. For example, referring to <figref idref="DRAWINGS">FIG. 3</figref>, a cluster manager may indicate that a node is the leader by calling the online entry point of the entry point handler <b>310</b>.</p>
<p id="p-0087" num="0086">At block <b>615</b>, a security server is updated with security information associated with the computers in the cluster that host the name service. For example, referring to <figref idref="DRAWINGS">FIGS. 2 and 3</figref>, the security component <b>330</b> may set object attributes, change password or other credentials, or provide other data to the security server <b>207</b>. The security server <b>207</b> may use this information to provide tokens to the clients. These tokens may allow the clients access to a service hosted on the computers of the cluster <b>225</b>. One exemplary service includes a file server that provides access to files via each of the computers of the cluster <b>225</b>.</p>
<p id="p-0088" num="0087">At block <b>620</b>, address information is obtained for the computers in the cluster that are to be referenced by a network name. For example, referring to <figref idref="DRAWINGS">FIG. 4</figref>, the leader <b>420</b> may obtain IP addresses of computers in the cluster by querying the topology manager <b>410</b>. As another example, the leader <b>420</b> may obtain the IP addresses by querying the data store <b>405</b> for previously stored IP addresses of computers in the cluster.</p>
<p id="p-0089" num="0088">At block <b>625</b>, credentials are provided from the leader to the computers for use in authenticating clients that seek access the computers of the cluster. For example, referring to <figref idref="DRAWINGS">FIG. 4</figref>, the leader <b>420</b> may store credentials in a store of the cluster and send a broadcast to the clones that credentials are available. Credentials may include, for example, a user name and password. The user name and password may be usable to authenticate clients that seek to access a service hosted on the computers.</p>
<p id="p-0090" num="0089">At block <b>630</b>, the name server is updated with address information of the computers. For example, referring to <figref idref="DRAWINGS">FIG. 4</figref>, the leader <b>420</b> may configure the name server <b>430</b> to associate a network name with network addresses of the computers of the cluster. When a client provides the name to the name server <b>430</b>, the name server <b>430</b> may respond with one or more of the network addresses.</p>
<p id="p-0091" num="0090">At block <b>635</b>, other actions, if any, may be performed. For example, the leader may receive information that indicates that a computer has been added to the computers in the cluster and may in response update the name server with a network address of the newly added computer. As another example, the leader may receive information that indicates that a computer has been removed from the computers in the cluster and may in response update the name server to remove a network address of the removed computer.</p>
<p id="p-0092" num="0091">As another example, the leader may update the security server with new security information and send another broadcast that informs the computers in the cluster that new credentials are available for use in authenticating clients that seek access a service hosted on the computers.</p>
<p id="p-0093" num="0092">Turning to <figref idref="DRAWINGS">FIG. 7</figref>, at block <b>705</b>, the actions begin. At block <b>710</b>, a message is received to instantiate the components of a clone. This message is received at the entry point handler of the clone. For example, referring to <figref idref="DRAWINGS">FIG. 3</figref>, the entry point hander <b>310</b> receives an Open( ) call.</p>
<p id="p-0094" num="0093">At block <b>715</b>, in response to the message, the components of the clone may be instantiated. For example, referring to <figref idref="DRAWINGS">FIG. 3</figref>, in response to the Open( ) call, the components of the clone may be instantiated.</p>
<p id="p-0095" num="0094">At block <b>720</b>, a request is sent to a leader of the name service. The request includes an identifier of the clone and requests a state of the leader. For example, referring to <figref idref="DRAWINGS">FIG. 2</figref>, a clone (e.g., the clone hosted on the computer <b>209</b>) may send a request to the leader (e.g., the leader hosted on the computer <b>208</b>) and may provide an identifier of the clone (e.g., something that may be used to identify the computer <b>209</b> to the cluster management components).</p>
<p id="p-0096" num="0095">At block <b>725</b>, a message may be received from the leader that indicates if the leader is online or offline. For example, referring to <figref idref="DRAWINGS">FIG. 2</figref>, a clone (e.g., the clone hosted on the computer <b>209</b>), may receive a message from the leader (e.g., the leader hosted on the computer <b>208</b>) that indicates whether the leader is online or offline.</p>
<p id="p-0097" num="0096">At block <b>730</b>, if the leader is online, credentials may be obtained. For example, referring to <figref idref="DRAWINGS">FIG. 2</figref>, the clone (e.g., the clone hosted on the computer <b>209</b>), may receive a message from the leader (e.g., the leader hosted on the computer <b>208</b>) that indicates that credentials are available. In response, the clone may retrieve credentials from a store of the cluster.</p>
<p id="p-0098" num="0097">At block <b>735</b>, the clone may provide the credentials to a local security authority operable to use the credentials to authenticate clients that seek to access a service of the computer. For example, referring to <figref idref="DRAWINGS">FIG. 3</figref>, client <b>325</b> may update a local security authority that maintains information about local security of a computer that hosts the clone. This local security authority may use the credentials supplied by the clone to authenticate clients that seek to access a service of the computer.</p>
<p id="p-0099" num="0098">At block <b>740</b>, other actions, if any, may be performed. For example, a clone may receive a message that the name service has been terminated and may in response revoke the credentials from the local authority, deactivate any of the components that are active, and delete the components.</p>
<p id="p-0100" num="0099">As another example, the clone may receive a message that the clone is to become the leader of the name service. In response, the clone may activate all of its components that have not already been activated and may assume the role of the leader.</p>
<p id="p-0101" num="0100">As can be seen from the foregoing detailed description, aspects have been described related to a distributed network name. While aspects of the subject matter described herein are susceptible to various modifications and alternative constructions, certain illustrated embodiments thereof are shown in the drawings and have been described above in detail. It should be understood, however, that there is no intention to limit aspects of the claimed subject matter to the specific forms disclosed, but on the contrary, the intention is to cover all modifications, alternative constructions, and equivalents falling within the spirit and scope of various aspects of the subject matter described herein.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method implemented at least in part by a computer, the method comprising:
<claim-text>at a leader of a name service hosted on a cluster, obtaining address information for computers in the cluster for referencing the computers by a network name;</claim-text>
<claim-text>updating a name server with the address information of the computers by configuring the name server via the leader with network addresses of the computers and associating the network addresses with the network name;</claim-text>
<claim-text>updating a security server with security information associated with the computers; and</claim-text>
<claim-text>providing credentials to the computers for use in authenticating clients that seek access to the computers of the cluster.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein obtaining the address information comprises querying a topology manager for a list of network addresses of the computers.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein obtaining the address information comprises querying a data store for a previously stored list of network addresses of the computers.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein updating a security server with security information associated with the computers comprises configuring the security server via the leader with security data usable to provide a token that allows access to a service hosted on the computers.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein providing credentials to the computers comprises broadcasting a message to the computers that indicates that a user name and password are available from a store, the user name and password usable to authenticate clients that seek to access a service hosted on the computers.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising receiving information that indicates that a computer has been added to the computers and in response updating the name server with a network address of the computer.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising receiving information that indicates that a computer has been removed from the computers and in response updating the name server to remove a network address of the computer.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising updating the security server with new security information and providing a message from the leader to the computers that new credentials are available, the new credentials for use in authenticating clients that seek access a service hosted on the computers.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. In a computing environment, a system, comprising:
<claim-text>a configuration component operable to maintain configuration data of a distributed name service that is hosted by one or more computers of a cluster;</claim-text>
<claim-text>an entry point handler operable to receive messages from a cluster manager of the cluster including at least a message that indicates whether a computer is to act as a leader of the distributed name service;</claim-text>
<claim-text>a name component operable, if the computer is to act as the leader, to interact with a name server to indicate one or more network addresses of the one or more computers;</claim-text>
<claim-text>a security component operable, if the computer is to act as the leader, to interact with a security server to indicate credentials by which the distributed name service is accessible via the one or more computers.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising a client component operable to provide the credentials to a local security authority that maintains information about local security of a hosting computer that hosts the client component, the local security authority operable to use the credentials to authenticate clients that seek to access a service of the hosting computer.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising an identity component operable to impersonate the distributed name service in accessing a resource external to the system.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the entry point handler is further operable in response to receiving an open message to instantiate components of the distributed name service that are hosted on a computer that hosts the entry point handler.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising a broadcast component operable, if the computer is to act as the leader, to send a message to the one or more computers that host the distributed name service, the message indicating that the credentials are available for use by the one or more computers.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the name component being operable to interact with a name server to indicate one or more network addresses of the one or more computers comprises the name component being operable to configure the name server to associate the one or more network addresses with a network name, the name server being instructed to provide at least one of the network addresses to an entity the provides the network name to the name server.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the name component being operable to interact with a name server to indicate one or more network addresses of the one or more computers comprises the name component being operable to configure the name server to add an additional network address if another computer begins hosting the distributed name service and to remove a network address if one of the computers stops hosting the distributed name service.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the name component being operable to interact with the name server to indicate one or more network addresses of the one or more computers comprises the name component periodically refreshing the one or more network addresses on the name server even if there have been no additions to or subtractions from the one or more computers of the cluster that are hosting the distributed name service.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. A computer readable storage device having computer-executable instructions, which when executed perform actions, comprising:
<claim-text>at an entry point handler of clone of a name service hosted on a cluster, receiving a message to instantiate components of the clone;</claim-text>
<claim-text>in response to the message, instantiating the components;</claim-text>
<claim-text>sending a request to a leader of the name service, the request including an identifier of the clone, the request requesting a state of the leader;</claim-text>
<claim-text>receiving from the leader a message that indicates if the leader is online; and</claim-text>
<claim-text>if the leader is online, obtaining credentials and providing the credentials to a local security authority, the local security authority operable to use the credentials to authenticate clients that seek to access a service of the computer.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The computer readable storage device of <claim-ref idref="CLM-00017">claim 17</claim-ref>, further comprising at the entry point handler of the clone, receiving a message that the name service is terminated and in response deactivating any of the components that are active and deleting the components.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The computer readable storage device of <claim-ref idref="CLM-00017">claim 17</claim-ref>, further comprising at the entry point handler of the clone, receiving a message that the clone is to become the leader of the name service and in response activating all of the components that have not already been activated.</claim-text>
</claim>
</claims>
</us-patent-grant>
