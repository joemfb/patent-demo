<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625589-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625589</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12805816</doc-number>
<date>20100820</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>GB</country>
<doc-number>0301033.7</doc-number>
<date>20030116</date>
</priority-claim>
<priority-claim sequence="02" kind="national">
<country>GB</country>
<doc-number>0307439.0</doc-number>
<date>20030331</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>168</us-term-extension>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>28</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>370390</main-classification>
<further-classification>370396</further-classification>
<further-classification>370420</further-classification>
<further-classification>370432</further-classification>
<further-classification>709203</further-classification>
<further-classification>709231</further-classification>
<further-classification>348 1412</further-classification>
<further-classification>348159</further-classification>
<further-classification>34820799</further-classification>
</classification-national>
<invention-title id="d2e92">Video/audio network</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5258837</doc-number>
<kind>A</kind>
<name>Gormley</name>
<date>19931100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5625410</doc-number>
<kind>A</kind>
<name>Washino et al.</name>
<date>19970400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6115507</doc-number>
<kind>A</kind>
<name>Eglit et al.</name>
<date>20000900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6160544</doc-number>
<kind>A</kind>
<name>Hayashi et al.</name>
<date>20001200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6331983</doc-number>
<kind>B1</kind>
<name>Haggerty et al.</name>
<date>20011200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6466550</doc-number>
<kind>B1</kind>
<name>Foster et al.</name>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6564262</doc-number>
<kind>B1</kind>
<name>Chaddha</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709231</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6654806</doc-number>
<kind>B2</kind>
<name>Wall et al.</name>
<date>20031100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709225</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6757005</doc-number>
<kind>B1</kind>
<name>Elbaz et al.</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>7082164</doc-number>
<kind>B2</kind>
<name>Chaddha</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>37524012</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>7103011</doc-number>
<kind>B2</kind>
<name>Kumar et al.</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370261</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>7133371</doc-number>
<kind>B2</kind>
<name>Helm et al.</name>
<date>20061100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370270</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>RE40256</doc-number>
<kind>E</kind>
<name>Oshima et al.</name>
<date>20080400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2002/0048275</doc-number>
<kind>A1</kind>
<name>Atwater et al.</name>
<date>20020400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2002/0049979</doc-number>
<kind>A1</kind>
<name>White et al.</name>
<date>20020400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2002/0097322</doc-number>
<kind>A1</kind>
<name>Monroe et al.</name>
<date>20020700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>348159</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2002/0133405</doc-number>
<kind>A1</kind>
<name>Newnam et al.</name>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2003/0142672</doc-number>
<kind>A1</kind>
<name>Chen et al.</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370390</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2003/0147390</doc-number>
<kind>A1</kind>
<name>Rizzo et al.</name>
<date>20030800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2003/0174243</doc-number>
<kind>A1</kind>
<name>Arbeiter et al.</name>
<date>20030900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2003/0193619</doc-number>
<kind>A1</kind>
<name>Farrand</name>
<date>20031000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>2003/0197785</doc-number>
<kind>A1</kind>
<name>White et al.</name>
<date>20031000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>34820799</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>2004/0001091</doc-number>
<kind>A1</kind>
<name>Kressin</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>2006/0010245</doc-number>
<kind>A1</kind>
<name>Carnahan</name>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>2006/0146184</doc-number>
<kind>A1</kind>
<name>Gillard et al.</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>2006/0203819</doc-number>
<kind>A1</kind>
<name>Farinacci et al.</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00027">
<document-id>
<country>EP</country>
<doc-number>0 650 278</doc-number>
<date>19950400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00028">
<document-id>
<country>EP</country>
<doc-number>0 677 942</doc-number>
<date>19951000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00029">
<document-id>
<country>EP</country>
<doc-number>0 967 753</doc-number>
<date>19991200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00030">
<document-id>
<country>JP</country>
<doc-number>10-313454</doc-number>
<date>19981100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00031">
<document-id>
<country>JP</country>
<doc-number>2002-237844</doc-number>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00032">
<document-id>
<country>WO</country>
<doc-number>WO 01/99370</doc-number>
<date>20011200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00033">
<othercit>McGraw-Hill, &#x201c;Multimedia Over IP,&#x201d; McGraw-Hill Companies Inc., 2000.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00034">
<othercit>James Curtis, &#x201c;UDP vs TCP&#x201d;, Web Publication, Jan. 2000.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00035">
<othercit>Foresight Imaging, &#x201c;I-RGB 165 &#x26; 200 Frame Grabbers and Video Streamers&#x201d;, Press Release, ThomasNet, Feb. 2002.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00036">
<othercit>Ishikawa, et al, Transactions of Information Processing Society of Japan, &#x201c;An Architecture for User Authentication of IP Multicast and Its Implementation&#x201d;,1999, vol. 40, No. 10, pp. 3728-3736.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00037">
<othercit>Open Design, &#x201c;IP Multicast&#x201d;, 1997, No. 22, pp. 38-67.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>18</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>16</number-of-drawing-sheets>
<number-of-figures>20</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>10507559</doc-number>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>7808932</doc-number>
</document-id>
</parent-grant-document>
<parent-pct-document>
<document-id>
<country>WO</country>
<doc-number>PCT/GB2004/000141</doc-number>
<date>20040116</date>
</document-id>
</parent-pct-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>12805816</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110055416</doc-number>
<kind>A1</kind>
<date>20110303</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Chen</last-name>
<first-name>Jian-Rong</first-name>
<address>
<city>Basingstoke</city>
<country>GB</country>
</address>
</addressbook>
<residence>
<country>GB</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Wilson</last-name>
<first-name>Daniel</first-name>
<address>
<city>Buckingham</city>
<country>GB</country>
</address>
</addressbook>
<residence>
<country>GB</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Economou</last-name>
<first-name>Daphne</first-name>
<address>
<city>Thessalonica</city>
<country>GR</country>
</address>
</addressbook>
<residence>
<country>GR</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Chen</last-name>
<first-name>Jian-Rong</first-name>
<address>
<city>Basingstoke</city>
<country>GB</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Wilson</last-name>
<first-name>Daniel</first-name>
<address>
<city>Buckingham</city>
<country>GB</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Economou</last-name>
<first-name>Daphne</first-name>
<address>
<city>Thessalonica</city>
<country>GR</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Oblon, Spivak, McClelland, Maier &#x26; Neustadt, L.L.P.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Sony United Kingdom Limited</orgname>
<role>03</role>
<address>
<city>Weybridge</city>
<country>GB</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Lee</last-name>
<first-name>Jae Y</first-name>
<department>2466</department>
</primary-examiner>
<assistant-examiner>
<last-name>Pham</last-name>
<first-name>Tito</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A packet-based data network including: an audio/video network comprising:
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0000">a packet-switched network over which data including audio and/or video data packets can be carried; at least one data source connected to the network and operable to assemble packetised data comprising audio/video data at a first resolution and at a second resolution greater than the first resolution, and to transmit data packets carrying multiple audio/video streams at the first resolution by multicast network transmission; at least one client connected to the network, being a data handling device for handling packetised audio/video data and being arranged to join the multicast group to receive the multiple audio/video streams at the first resolution, wherein the client is associated with a graphical user interface configured in conjunction with a processor to select an audio/video stream, and the processor is arranged to issue a unicast command to cause transmission of a selected audio/video stream at the second resolution from the source to the client.</li>
    </ul>
    </li>
</ul>
</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="180.26mm" wi="234.87mm" file="US08625589-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="235.29mm" wi="179.24mm" orientation="landscape" file="US08625589-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="217.09mm" wi="176.45mm" orientation="landscape" file="US08625589-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="134.45mm" wi="164.93mm" file="US08625589-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="239.52mm" wi="175.43mm" orientation="landscape" file="US08625589-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="197.44mm" wi="93.13mm" file="US08625589-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="211.50mm" wi="144.27mm" orientation="landscape" file="US08625589-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="232.49mm" wi="165.61mm" orientation="landscape" file="US08625589-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="143.59mm" wi="131.32mm" file="US08625589-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="239.18mm" wi="66.21mm" orientation="landscape" file="US08625589-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="240.54mm" wi="184.91mm" orientation="landscape" file="US08625589-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="211.84mm" wi="164.59mm" orientation="landscape" file="US08625589-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="228.68mm" wi="178.90mm" orientation="landscape" file="US08625589-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="219.54mm" wi="179.66mm" orientation="landscape" file="US08625589-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="108.20mm" wi="72.81mm" file="US08625589-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="219.54mm" wi="126.75mm" orientation="landscape" file="US08625589-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="48.68mm" wi="157.56mm" file="US08625589-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">The present continuation application claims the benefit of priority under 35 U.S.C. 120 to application Ser. No. 10/507,559, filed Apr. 18, 2005, which is the National Stage of PCT/GB04/00141, filed on Jan. 16, 2004, and claims the benefit of priority under 35 U.S.C. 119 from United Kingdom Application Nos. 0301033.7 filed on Jan. 16, 2003 and 0307439.0, filed on Mar. 31, 2003. Application Ser. No. 10/507,559 is incorporated herein by reference in its entirety.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">FIELD OF INVENTION</heading>
<p id="p-0003" num="0002">The present invention relates to video and/or audio networks and to video and/or audio network management arrangements.</p>
<heading id="h-0003" level="1">DISCUSSION OF RELATED ART</heading>
<p id="p-0004" num="0003">It is known to link video and audio devices in a studio together using a switching device, typically a cross point switch. The conventional cross point switch arrangement is inflexible requiring particular pieces of studio equipment to be connected to specific physical ports of the switch. It also requires a switching structure having a capacity proportional to the square of the number of inputs.</p>
<p id="p-0005" num="0004">In practice the actual ports of the cross point switch are physically labelled to indicate what is connected to them. Changes in the configuration of the network are difficult and require re-labelling and reconfiguration of the network.</p>
<p id="p-0006" num="0005">It is desirable to provide a more flexible arrangement.</p>
<heading id="h-0004" level="1">SUMMARY</heading>
<p id="p-0007" num="0006">According to one aspect of the present invention, there is provided a packet-based data network comprising:</p>
<p id="p-0008" num="0007">a packet-based network switch;</p>
<p id="p-0009" num="0008">a plurality of packetised data sources coupled to the network, the packetised data comprising at least one of audio data or video data;</p>
<p id="p-0010" num="0009">at least one destination, being a data handling device for handling data from the packetised data sources, coupled to the network; and</p>
<p id="p-0011" num="0010">a network control arrangement coupled to the network, the network control arrangement being arranged to provide virtual circuit-switched connections for transfer of packetised data from sources to destinations via the network switch by:</p>
<p id="p-0012" num="0011">a) assigning multicast group identifiers to the sources, so that the sources launch packetised data onto the network as multicast data packets identified by the multicast group identifiers; and</p>
<p id="p-0013" num="0012">b) instructing a destination to issue a request to the network switch to join the multicast group of a source so as to receive data packets from that source.</p>
<p id="p-0014" num="0013">Thus, by having a packet-based network providing virtual (emulated) circuit-switched connections, at least some of the physical limitations of a cross point switch can be avoided while retaining the simple concept of a cross-point switched arrangement.</p>
<p id="p-0015" num="0014">The network control arrangement preferably supervises, controls and configures the source and destination nodes to provide the virtual circuit-switched connections via packet switching techniques. Because the network control arrangement operates by packet switching, the need to connect particular equipment to particular physical ports is avoided. Indeed, in embodiments of the invention it is possible to use a conventional network switcher and network arrangements such as (for example) so-called category 5 or category 6 data cabling.</p>
<p id="p-0016" num="0015">Preferably the network control arrangement provides a graphical user interface for a user to manually provide and/or to view data relating to the configuration of the network.</p>
<p id="p-0017" num="0016">This invention also provides a network control arrangement for use in a packet-based data network having a packet-based network switch; a plurality of packetised data sources coupled to the network operable to generate packetised data comprising at least one of audio data or video data; and at least one destination, being a data handling device for handling packetised data from the packetised data sources, coupled to the network;</p>
<p id="p-0018" num="0017">the network control arrangement being arranged to provide virtual circuit-switched connections from sources to destinations via the network switch by:</p>
<p id="p-0019" num="0018">a) assigning multicast group identifiers to the sources, so that the sources data comprising at least one of audio data or video data onto the network as multicast data packets identified by the multicast group identifiers; and</p>
<p id="p-0020" num="0019">b) instructing a destination to issue a request to the network switch to join the multicast group of a source so as to receive data packets from that source.</p>
<p id="p-0021" num="0020">This invention also provides a method of operation of network control arrangement in a packet-based data network having a packet-based network switch; a plurality of packetised data sources operable to generate data packets comprising at least one of audio data or video data, the data sources being coupled to the network; and at least one destination, being a data handling device for handling data from the packetised data sources, coupled to the network;</p>
<p id="p-0022" num="0021">the method comprising the steps of providing virtual circuit-switched connections for transfer of packetised data from sources to destinations via the network switch by:</p>
<p id="p-0023" num="0022">a) assigning multicast group identifiers to the sources, so that the sources launch video packetised data onto the network as multicast data packets identified by the multicast group identifiers; and</p>
<p id="p-0024" num="0023">b) instructing a destination to issue a request to the network switch to join the multicast group of a source so as to receive data packets from that source.</p>
<p id="p-0025" num="0024">Further respective aspects and features of the invention are defined in the appended claims.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0026" num="0025">Embodiments of the invention will now be described, by way of example only, with reference to the accompanying drawings in which:</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 1</figref> is a schematic block diagram of a network in a studio;</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 2</figref> is a schematic simplified diagram of the network showing data flows across the network;</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 3A</figref> is a schematic diagram of the format of an audio or video packet used in the network;</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 3B</figref> is a schematic diagram of the format of an AVSCP or CNMCP packet used in the network;</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 3C</figref> schematically illustrates a unicast data packet;</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 4</figref> is a schematic block diagram of a network interface of the network of <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 5A</figref> is a schematic diagram of the format of an data packet used in the network interface;</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 5B</figref> is a schematic example of current flow assignment;</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 5C</figref> schematically illustrates data flow in an ENIC;</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIGS. 6A and 6B</figref> schematically illustrate a packetiser/depacketiser switch of the network interface;</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 7</figref> is a schematic block diagram of an illustrative small network for explaining a mode of operation of the network; and</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 8</figref> is a schematic block diagram of a proxy generator of the network interface;</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 9</figref> is a schematic diagram of one example of the display of a Graphical User Interface (GUI); and</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 10</figref> is a schematic diagram of another example of the display of a Graphical User Interface (GUI);</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 11</figref> is a schematic diagram of an example of a graphical interface for illustrating the configuration of the network;</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 12</figref> is a schematic diagram of an example of a graphical interface for illustrating how data is routed across the network;</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 13</figref> schematically illustrates a user interface provided on the network manager via which a user may enter configuration data;</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 14</figref> schematically illustrates a protocol stack; and</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 15</figref> schematically illustrates an AVSCP header.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION</heading>
<p id="h-0007" num="0000">Overview and Terminology</p>
<p id="p-0046" num="0045">Referring to <figref idref="DRAWINGS">FIG. 1</figref>, a network is installed in for example a studio. The network comprises a plurality of source group AV devices consisting of three cameras S<b>1</b> to S<b>3</b>, three video tape recorders (VT<b>10</b>s) S<b>4</b> to S<b>6</b>, two digital signal processors (DSPs) S<b>7</b>,S<b>8</b> and two other source groups S<b>9</b>, S<b>10</b> which generate serial digital audio data only. The network further comprises a set of destination group AV devices consisting of a video switch D<b>8</b>, a pair of monitors D<b>2</b>, a pair of audio processors D<b>3</b> and a video processor D<b>9</b>. An Ethernet switch <b>2</b> effects connections between source group devices and destination group devices. All of the group devices S<b>1</b> to S<b>10</b> and D<b>1</b>, D<b>2</b>, D<b>3</b>, D<b>8</b>, D<b>9</b> are connected to the network via at least one Enhanced Network Interface Card (ENIC) NI<b>1</b> to NI<b>11</b>, which differs from a standard network interface card and whose structure and function is described below with reference to <figref idref="DRAWINGS">FIG. 4</figref>. The network further comprises a network control arrangement consisting of a first switching and routing client <b>6</b>, an additional switching and routing client <b>61</b> and a network manager <b>4</b>. A user may request a change in the current configuration of the virtual circuit-switched connections of the network via a Graphical User Interface (GUI) generated by a computer software application, which in this arrangement is displayed on a monitor associated with the switching and routing client <b>6</b>. However, in alternative arrangements the GUI is displayed on a monitor associated with the network manager <b>4</b>. The GUI is described in detail below with reference to <figref idref="DRAWINGS">FIGS. 9 to 12</figref>.</p>
<p id="p-0047" num="0046">The network is an Ethernet multicast network comprising the Ethernet switch <b>2</b>, which is an asynchronous nGigabit Ethernet switch <b>2</b>, where n is 1 or 10 for example. Connected to the Ethernet switch <b>2</b> are network nodes comprising the source &#x201c;groups&#x201d; S<b>1</b> to S<b>10</b>, the destination &#x201c;groups&#x201d; D<b>1</b>, D<b>2</b>, D<b>3</b>, D<b>8</b> and D<b>9</b>, and the network control arrangement, which in this example comprises the network manager <b>4</b> and the switching and routing clients <b>6</b>, <b>61</b>.</p>
<p id="p-0048" num="0047">A source group is defined to be an AV device such as a camera S<b>1</b> or a video tape recorder (VTR) <b>54</b> that is operable to generate or supply audio and/or video data for transmission across the network, the source group having one or more input and/or one or more output terminal. Each input/output terminal of the AV device will be connected to a port of one of the ENICs NI<b>1</b> to NI<b>11</b>. However, different terminals of the same AV device may be connected to different ENICs as in the case of source group S<b>1</b> in <figref idref="DRAWINGS">FIG. 1</figref>, which has a first output terminal connected to ENIC NI<b>1</b> and a second output terminal connected to ENIC NI<b>2</b>. A destination group is defined to be an AV device such as a video switch D<b>8</b>, video processor D<b>9</b> or audio processor D<b>3</b>, that is operable to receive packetised audio and/or video data via the network and to perform processing operations on the received data. Similarly to the source group, the destination group comprises one or more inputs and/or one or more outputs which can be connected to different ports of the same ENIC or to different ENICs.</p>
<p id="p-0049" num="0048">It will be appreciated that a destination group may also act as a source and a source group may also act as a destination for different data exchange events on the network. For example the VTR <b>54</b> has audio, video, status and proxy source and/or destination devices associated with it and for a data exchange event involving output of data across the network from a video source device on the VTR <b>54</b> to the video processor D<b>9</b>, the VTR <b>54</b> acts as a source group. A different data exchange event may involve the VTR <b>54</b> receiving data from a camera S<b>1</b> that has been routed via the network through the video processor D<b>9</b> for subsequent recording by the VTR <b>54</b>, in which case, the processed video data will be received from the network at a destination device (ENIC input terminal) associated with the VTR <b>54</b> for subsequent supply to the VTR <b>54</b> in serial digital form for recording so that the VTR <b>54</b> acts as a destination group in this context.</p>
<p id="p-0050" num="0049">Whilst the AV devices themselves are denoted source groups S<b>1</b> to S<b>10</b> and destination groups D<b>1</b>, D<b>2</b>, D<b>3</b>, D<b>8</b>, D<b>9</b> each of these groups is connected to one or more ENIC ports. The ENIC ports will be denoted &#x201c;source devices&#x201d; and &#x201c;destination devices&#x201d;. A &#x201c;source device&#x201d; is defined to be an ENIC output port, which outputs packetised data onto the network or outputs serial digital data to a destination group AV device whereas a &#x201c;destination device&#x201d; is defined to be an ENIC input port, which receives either packetised data from the network or serial digital data from a source group AV device output terminal. The source devices and destination devices of an ENIC can be associated with the source groups (AV devices) from which they receive data for transmission across the network or the destination groups to which they deliver data from the network. The network manager <b>4</b> keeps track of the mappings between ENIC ports and AV devices.</p>
<p id="p-0051" num="0050">The network manager <b>4</b> stores a freely assignable alphanumeric label denoted &#x201c;tally text&#x201d; for each source group S<b>1</b> to S<b>10</b> of the network. An example of tally text is a name such as &#x201c;VTR<b>1</b>&#x201d; which may be given to a source group S<b>4</b> or a cameraman's name e.g. &#x201c;Jim&#x201d; which may be given to the source group camera S<b>1</b>. The tally text is recorded at the network manager. All groups connected to the network may be named in this way. Source devices and destination devices of the ENIC may be labelled with tally text derived from the associated source group or destination group AV device. To enable connection to the network, each source group S<b>1</b>-S<b>6</b> and each destination group D<b>1</b>, D<b>2</b>, D<b>3</b>, D<b>8</b>, D<b>9</b> is coupled to the Ethernet switch <b>2</b> by at least one network interface card NI <b>1</b> to <b>11</b>. These network interface cards are specially adapted for transmission of audio and/or video data across the network according to the present technique and are denoted ENICs (Enhanced Network Interface Cards). A single source or destination group may be connected to a plurality of ENICs, for example, in the arrangement of <figref idref="DRAWINGS">FIG. 1</figref>, the camera source group S<b>1</b> is connected to two different ENICs, that is, NI<b>1</b> and NI<b>2</b>. In particular, one subset of source devices (output terminals) and destination devices (input terminals) of the source group are connected to the first ENIC NI<b>1</b> whereas another different subset is connected to the second ENIC NI<b>2</b>. Each ENIC NI<b>1</b> to NI<b>8</b> has a plurality of ports. Input ports of a first subset of the ENICs, NI<b>1</b> to NI<b>7</b> receive data directly from source groups such as cameras SI<b>1</b> to SI<b>3</b>, VTRs S<b>4</b> to S<b>6</b> and DSPs SI<b>7</b>, SI<b>8</b> and the output ports of those ENICs transmit packetised data across the network, whereas input ports of a second subset of the ENICs, NI<b>8</b> to NI<b>1</b>, receive packetised data derived from other source groups across the network whilst their output ports supply serial digital audio and/or video data to destination groups such as the video switch D<b>8</b> and audio processors D<b>3</b>. The network optionally also comprises a master ENIC NIM <b>63</b> (See <figref idref="DRAWINGS">FIG. 1</figref>) which will be described in more detail in the section Frame Start Alignment below.</p>
<p id="p-0052" num="0051">In a conventional studio, the source groups, e.g. cameras and destination groups e.g. video processors are connected by a cross point switch. The conventional cross point switch requires specific known devices to be connected to corresponding specific known ports on the switch to ensure that they can be connected together via switch. By way of contrast, the network of <figref idref="DRAWINGS">FIG. 1</figref>, including the Ethernet switch <b>2</b>, is configured by the network manager <b>4</b> and by the switching and routing client <b>6</b> to provide virtual circuit-switched connections that emulate a crosspoint switch at least to the extent that any one or more source groups can be connected to any one or more destination groups. The virtual circuit-switched connections are facilitated by implementation, in the arrangement of <figref idref="DRAWINGS">FIG. 1</figref>, of an Internet Protocol (IP) multicast network that uses a known protocol, IGMP (Internet Group Management Protocol). The multicast network enables transmission of data from one source device to several destination devices belonging to a predetermined multicast group across the network and IGMP provides a means of identifying which multicast group a source device or destination device belongs to. Each source device and destination device is assigned an identifier and predetermined source device identifiers and destination device identifiers are associated with a given multicast address in order to define the virtual connections. Unlike the conventional cross point switch network, in the network of <figref idref="DRAWINGS">FIG. 1</figref> the actual physical ports of the Ethernet switch <b>2</b> to which the source devices and destination devices are connected are irrelevant because the connections are flexibly specified using the identifiers and multicast addresses and associated communication protocols.</p>
<p id="p-0053" num="0052">It should be noted that in the example arrangement of <figref idref="DRAWINGS">FIG. 1</figref> the network operates as follows: a single source device should belong to only one multicast group that is not shared by any other sources. At least one destination device receives data from that source device by joining the source device's multicast group. A given destination device joins a multicast group in order to receive data from the associated source device by issuing a multi cast group join message. The network control arrangement <b>4</b>, <b>6</b>, <b>61</b> initiates each virtual circuit-switched connection by sending a control message to the destination device (i.e. to an input terminal of one of destination group AV devices or a corresponding ENIC terminal) instructing the device to issue a request to the Ethernet switch <b>2</b> to join the multicast group of the appropriate source device. Multiple destination devices can join a given multicast group and the Ethernet switch <b>2</b> performs the required duplication of the data from the source device transmitting to that multicast group. The data that may be transmitted by a source device to the plurality of destination devices of the multicast group includes video data, audio data, timecode data or status data.</p>
<p id="h-0008" num="0000">Overview of ENICs</p>
<p id="p-0054" num="0053">The functionality of the ENIC is described in more detail below with reference to <figref idref="DRAWINGS">FIG. 4</figref>. An ENIC allows any source group, for example a camera, and any destination group, for example a VTR, which is not designed for use with a multicast network to be used in a multicast network. An ENIC is a &#x201c;dumb&#x201d; device which can be requested to supply and receive audio, video, and control data streams. An ENIC cannot view or initiate any change to the configuration of the network. Rather, the network manager <b>4</b> controls to which multicast group(s) a given ENIC may subscribe and directs the ENIC to issue requests to the Ethernet switch <b>2</b> to join those multicast groups. Although, in the arrangement of <figref idref="DRAWINGS">FIG. 1</figref>, The ENICs NI<b>1</b> to NI<b>11</b> are distinct entities from the source group and destination group AV devices with which they are associated, it will be appreciated that in alternative arrangements the functionality of an ENIC could be integrated into an AV device. Each ENIC has an associated Ethernet address and an IP address. The Ethernet address is a 48-bit value that specifies a physical address within the LAN whereas the IP address is (in for example IPv4) a 32-bit value that identifies each sender or receiver of packet-based information across the Internet. The Ethernet address typically differs from the IP address but the two addresses can be mapped to each other e.g. using Address Resolution Protocol (ARP). The IP address is required to enable the Ethernet switch <b>2</b> to route data to and from the ENIC. Each data stream associated with the ENIC is identified using both a multicast address and a User Datagram Protocol (UDP) port number. UDP is a transport layer protocol that together with IP mediates data communication across the network. UDP provides port numbers to distinguish different transaction requests (this service is not provided by IP). In this embodiment a single IP address is associated with each ENIC. However, in alternative embodiments multiple IP addresses could be associated with a single ENIC. Besides the Ethernet address and IP address, the ENIC also has an associated ENIC identifier (ID) and a plurality of port IDs for respective ones of the destination devices and source devices associated with the ENIC. All of the addresses and IDs associated with each ENIC are recorded by the network manager <b>4</b>. The source devices and destination devices (i.e. individual inputs and outputs of the network node devices S<b>1</b>-S<b>8</b> and D<b>1</b>, D<b>2</b>, D<b>3</b>, D<b>8</b>, D<b>9</b>) correspond to respective ones of one or more physical inputs and outputs of an ENIC. An ENIC acts as a switch which switches data received from the switch <b>2</b> to a specified physical output of the ENIC and switches data from a specified physical input to the switch <b>2</b>.</p>
<p id="p-0055" num="0054">The network, implemented using the Ethernet switch <b>2</b>, is asynchronous. However video and audio data need synchronous processing. The ENICs provide synchronous operation across the network and align frames of different video streams for purposes such as editing. The video and audio devices (i.e. source groups and destination groups) connected to the network operate on serial digital data, for example using the digital standard Serial Digital Interface (SDI) for interface of component digital video or the Audio Engineering Society (AES) digital audio standard for audio data. The ENICs convert data from the source device at the transmission end from SDI or AES serial digital format to a packetised format suitable for transmission across the network, in particular to multicast UDP/IP data packets. At the receiving end, the ENICs convert multicast UDP/IP data packets received from the network to a serial digital data format suitable for delivery to the destination device. A further functionality provided by the ENICs is to generate from a full resolution video stream a reduced resolution video stream denoted &#x201c;proxy video&#x201d;. The proxy video is a reduced-bandwidth version of the corresponding full-resolution video information and, as such, is suitable for processing by network clients having restricted storage capacity and/or processing power or for use in previewing information content for downloading across the network.</p>
<p id="h-0009" num="0000">Overview of Network Manager</p>
<p id="p-0056" num="0055">The network manager <b>4</b> co-operates with the switching and routing clients <b>6</b>, <b>61</b> form the network control arrangement that is operable to assign multicast group identifiers to the audio and video source devices and to instruct destination devices to issue requests to the Ethernet switch <b>2</b> to join a particular multicast group in order to receive data, from the corresponding source device. The network manager <b>4</b> maintains information of the current state of the network and all instructions that initiate a change to the device configuration or to the network connectivity originate from the network manager <b>4</b>. In the arrangement of <figref idref="DRAWINGS">FIG. 1</figref>, the network manager is a Personal Computer (PC) that is linked to the network via a standard network interface card. In alternative arrangements the network manager could be for example a workstation and the network control arrangement may comprise more than one network manager.</p>
<p id="p-0057" num="0056">The network manager <b>4</b> maintains a database specifying the configuration of the network. In the arrangement of <figref idref="DRAWINGS">FIG. 1</figref>, the database is stored on the same PC as the network manager <b>4</b> but in alternative arrangements it could be stored on at least one different PC. The database records, for each ENIC, the associated Ethernet address, the IP address, the ENIC ID and the source devices and destination devices (inputs and outputs of the network node devices) currently connected to the network via that ENIC. The section below entitled &#x201c;Network Configuration Data&#x201d; describes four different categories of device for which the network manager <b>4</b> stores configuration data. The network manager <b>4</b> also performs the functions of: allocating network resources to the switching and routing client(s) <b>6</b>, <b>61</b> and to the ENICs NH to NI<b>11</b>; sending commands to the destination devices to issue requests to the Ethernet switch <b>2</b> to join a specified multicast group thereby changing the audio and/or video virtual circuit-switched connections across the network; and ensuring that each switching and routing client's <b>6</b>, <b>61</b> view of the network is correct.</p>
<p id="h-0010" num="0000">Network Configuration Data</p>
<p id="p-0058" num="0057">The network manager stores and maintains a set of data relating to each of a number of different categories of device on the network. Since control messages are sent from the network control manager <b>4</b> to the ENICs Nil to NM (rather than to input/outputs), each ENIC port is categorised as belonging to one of a plurality of device types/categories. The &#x201c;source device&#x201d; and &#x201c;destination device&#x201d; have already been discussed above.</p>
<p id="p-0059" num="0058">In particular, the network configuration data is of four basic types relating to four different types of device (ENIC input/output ports) and a fifth data type associated with a group of devices that are commonly controlled. The four basic device types are:</p>
<p id="p-0060" num="0059">1. SOURCE device: video, audio and status data from a source device is appropriately formatted by an ENIC and transmitted to a multicast group on the network. Each SOURCE device can also transmit a low-bandwidth video proxy.</p>
<p id="p-0061" num="0060">2. DESTINATION device: video, audio and status data from the network is received by a destination device by joining a multicast group.</p>
<p id="p-0062" num="0061">3. CONTROL SOURCE device: control commands are generated by an ENIC or by a network client and are transmitted unicast to a predetermined CONTROL DESTINATION.</p>
<p id="p-0063" num="0062">4. CONTROL DESTINATION device: this receives control commands unicast from a CONTROL SOURCE.</p>
<p id="p-0064" num="0063">The switching and routing client <b>6</b> cannot directly access the SOURCE and CONTROL DESTINATION devices. These devices are members of a CONTROL SOURCE GROUP, which is a group of devices that cannot be controlled independently. For example, a standard SDI video output and a super SDI output from a VTR are both connected to an ENIC for transmission onto the network <b>2</b>. The SDI input is represented as four SOURCE devices comprising two video source devices, V<sub>0</sub>, V<sub>1 </sub>(one from the SDI output and one from the super SDI output) and two audio source devices A<sub>0</sub>, A<sub>1 </sub>in the network configuration. These four source devices are generated by the same physical device (the source group is the VTR). The four source devices have a common time code and stream status, i.e. stop, FF (fast forward), rew (rewind), etc. Hence these four source devices are jointly controlled via a control source group rather than being independently controlled.</p>
<p id="p-0065" num="0064">A predetermined set of information (a data structure) is stored by the network manager <b>4</b> in relation to each of the above device types i.e. source, destination, control source control destination and control source group in addition to an ENIC data structure described below.</p>
<p id="p-0066" num="0065">For the SOURCE device, the network manager stores the following data: &#x2014;a 32-bit ID of which the most significant 16 bits specify the ENIC ID and the least significant 16 bits specify the UDP port ID; an 8-bit value specifying the data type (audio, video or status data); a 32-bit value specifying the CONTROL SOURCE GROUP to which the source device belongs; a first 32-bit multicast IP address specifying the destination device that the source transmits to and a second 32-bit multicast IP address specifying the destination device to which the video proxy is transmitted; 64 bytes of tally text information; a 32-bit &#x201c;LINK&#x201d; value specifying a destination device ID associated with a destination device that supplies the given source (a linked source is one that is supplied by a destination device (e.g. chroma keyer) that receives data via the network and subsequently outputs processed data onto the network as a source for another network device); a 32-bit value specifying the number of video lines to delay transmission by for a video source; and an 8-bit state value specifying if the source is currently enabled to transmit data across the network.</p>
<p id="p-0067" num="0066">For the DESTINATION device, the network manager stores the following data: &#x2014;a 32 bit ID of which the most significant 16 bits specified the ENIC ID and the least significant 16 bits specifies the UDP port ID; an 8-bit value specifying the data type (audio, video or status data); a 32-bit value specifying the IP address of the ENIC that implements the destination device; a 32-bit value MCAST_SRC_IP specifying the multicast IP address from which the destination device receives data; a 32-bit value specifying the source device that transmits to the multicast IP address with to which the destination device is assigned; an 8-bit tally text index; a 32-bit value specifying a source device ID associated with a source device that is supplied by the destination device (a linked destination is one that supplies a source); a 32-bit line delay value that specifies the number of video lines by which to delay playout; and an 8-bit status value specifying whether the destination device is on-air, off-air, controlled etc.</p>
<p id="p-0068" num="0067">For the CONTROL SOURCE device the network manager <b>4</b> stores the following data set: &#x2014;a 32-bit ID of which the most significant 16 bits specified the ENIC ID and the least significant 16 bits specifies the UDP port ID; a 32-bit value specifying an ID of the control destination device to which messages are to be transmitted; a 32-bit IP address and a 16 bit UDP port address of the ENIC that implements the specified control destination device; a 32-bit IP address and a 16-bit UDP address of the ENIC that implements the actual control source device.</p>
<p id="p-0069" num="0068">For the CONTROL DESTINATION device the network manager <b>4</b> stores the following data set: &#x2014;a 32-bit ID of which the most significant 16 bits specify the ENIC ID and the least significant 16 bits specify the UDP port ID; a 32-bit ID of the control source group to which the specified control destination device belongs; a 32-bit ID of the control source to which the control destination is connected; a 32-bit IP address and 16-bit UDP address of the ENIC that implements the associated control source; and a 32-bit IP address and 16-bit UDP address of the ENIC that implements the specified control destination.</p>
<p id="p-0070" num="0069">For the CONTROL SOURCE GROUP (with which given SOURCE and CONTROL DESTINATION devices are associated) the network manager <b>4</b> stores the following data set:</p>
<p id="p-0071" num="0070">A 32-bit ID that uniquely identifies the specified control source group; a 16-bit value specifying the number of devices belonging to the source group; a 32-bit value specifying the Ids of all of the devices belonging to the group (maximum of ten); a 32-bit value specifying the control destination device associated with the group; a 32-bit source status value specifying the status source device that transmits the status data for each of the (up to ten) devices of the group; 64 bytes comprising tally texts for all of the devices of the group; 128 bytes of description data for storing up to ten descriptions for the group; a 64-byte control source name and an 8-bit status value.</p>
<p id="p-0072" num="0071">In addition to the above five categories of data sets stored by the network manager <b>4</b>, the following data is stored by the network manager <b>4</b> for each of the ENICs NI<b>1</b> to NI<b>11</b> as the ENIC data structure: &#x2014;a 16-bit ID that uniquely identifies the ENIC; a 48-bit media access control (MAC) address associated with the ENIC; a 32-bit ENIC IP address; a 32-bit IP address for the master clock of the ENIC and a 32-bit filed specifying a number of parameters used for device to hardware mappings.</p>
<p id="p-0073" num="0072">The ENIC data structure also maps the four source devices of the above example to the physical ports on the ENIC card and includes any hardware limitations that restrict the ideal model described above. When an ENIC initialises it will receive information on what devices are connected to its UDP (RS422) ports, so that the correct driver can be used.</p>
<p id="p-0074" num="0073">Thus, for each destination group, the network manager <b>4</b> stores each multicast IP address MCAST_SRC_IP from which that destination group derives data. It should be understood that different input/output ports of a given destination group may receive data from different IP multicast addresses. The data received depends on the ENIC port (i.e. source/destination device) to which the input/output ports of the destination group (AV device) are connected. As specified above in relation to the DESTINATION data structure, for each destination group an ID for both the destination group itself and for the source group from which the received data is derived is also stored in the network configuration database. The source/destination group ID comprises an identifier of the ENIC by which the source/destination group is connected to the network and an identifier of the ENIC port to which the associated source/destination group is connected. A similar set of information is stored in respect of each source group.</p>
<p id="h-0011" num="0000">Overview of Switching and Routing Client <b>6</b>.</p>
<p id="p-0075" num="0074">In the arrangement of <figref idref="DRAWINGS">FIG. 1</figref>, the switching and routing client <b>6</b>, similarly to the network manager <b>4</b>, is a PC linked to the network via a standard network interface card. The switching and routing client <b>6</b> is operable to view and/or initiate changes to the network configuration i.e. to initiate of change virtual circuit switched connections between source devices and destination devices. Such changes may be initiated by a user interacting with a GUI as described below with reference to <figref idref="DRAWINGS">FIGS. 9 to 12</figref>. In the example arrangement of <figref idref="DRAWINGS">FIG. 1</figref>, the switching and routing client <b>6</b> is operable to control both the video switch D<b>8</b> and the associated ENIC NI<b>8</b> as well as the supply of video data to the ENIC NI<b>8</b> to and from the network. The switching and routing client <b>6</b> can also control the supply of video or audio data to other destination devices D<b>2</b>, D<b>3</b> and D<b>9</b> via the associated ENICS NI<b>9</b>, NI<b>10</b> and NI<b>11</b> respectively. The further switching and routing client <b>61</b> is operable to control a different subset of destination devices and their ENICS from those controlled by the switching and routing client <b>6</b>.</p>
<p id="p-0076" num="0075">As described above, the network manager <b>4</b> maintains a database specifying the current network configuration and co-operates with the switching and routing client <b>6</b> to configure the network. Although the network manager <b>4</b> can grant the switching and routing client <b>6</b> permission to send certain commands directly to the ENIC rather than sending them to the ENIC via the network manager <b>4</b>, in general, all requests that may jeopardise the network configuration must be sent via the network manager. Examples of particular commands that do not jeopardise the network connections and hence can be sent directly from the switching and routing client <b>6</b> to an ENIC are data stream control commands such as play, rewind, fast-forward. Apart from storing information specifying the network configuration, the network controller <b>4</b> allocates resources to the ENICs and to the switching and routing clients <b>6</b>, <b>61</b>, controls all commands that may jeopardise the audio and/or video data connections on the network and ensures that the switching and routing clients <b>6</b>, <b>61</b> have an accurate view of the relevant network connections.</p>
<p id="h-0012" num="0000">Protocols and Data Flows, <figref idref="DRAWINGS">FIG. 2</figref></p>
<p id="p-0077" num="0076">The Ethernet network of the arrangement of <figref idref="DRAWINGS">FIG. 1</figref> implements various conventional protocols including UDP (user datagram protocol)/IP, TCP (transmission control protocol)/IP, and IGMP (Internet Group Management Protocol). Other protocols implemented in the network include a known real-time protocol (RTP), and two protocols that are proprietary to Sony Corporation: firstly AVSCP (Audio Video Switching Control Protocol), which is used for connection control between the network manager <b>4</b> and the ENICS NI <b>1</b> to Nil <b>1</b> and secondly CNMCP (Client Network Manager Communication Protocol), which is used for communication between the network manager <b>4</b> and the switching and routing clients <b>6</b>, <b>61</b>. These protocols will be described in more detail below with reference to <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="p-0078" num="0077">Referring to <figref idref="DRAWINGS">FIG. 2</figref>, <figref idref="DRAWINGS">FIG. 2</figref> is a simplified diagram of the network of <figref idref="DRAWINGS">FIG. 1</figref> showing only the Network manager <b>4</b>, the switching and routing client <b>6</b>, and a subset of the ENICs, in particular NI<b>1</b> (associated with the camera <b>1</b> source group), NI<b>2</b> (associated with both camera <b>1</b> and camera <b>2</b> source groups) and NI<b>8</b> (associated with the video switch D<b>8</b> destination group) by way of example. <figref idref="DRAWINGS">FIG. 2</figref> illustrates how the network manager <b>4</b>, switching and routing client <b>6</b> and the ENICs NI<b>1</b>, NI<b>2</b>, NI<b>8</b> communicate via the LAN using a number of different communication protocols. As shown in <figref idref="DRAWINGS">FIG. 2</figref>, the network manager <b>4</b> communicates with ENICS NI<b>1</b>, NI<b>2</b>, NI<b>8</b> using AVSCP whereas the switching and routing client <b>6</b> communicates with the network manager <b>4</b> using CNMCP. The switching and routing client <b>6</b> is operable to receive as input Stream Status (SS) data specifying the status of a CONTROL SOURCE GROUP, to receive AV proxy data P and to output Unicast Control Data (UCD) to the network to control a source or destination device. Note that in this arrangement only the switching and routing client receives proxy video P as input although all three ENICs NI<b>1</b>, NI<b>2</b>, NI<b>8</b> output proxy video to the network. The ENICs NI<b>1</b>, NI<b>2</b> and NI<b>8</b>, are each operable to output proxy data P, to receive and transmit SS status data across the LAN, to send and receive RTP communications, to output IGMP data specifying to which multicast group that source device may transmitting data, to receive UCD messages across the network from the switching and routing client <b>6</b> and/or network manager <b>4</b>. Note that the ENIC NI<b>2</b> is operable to send UCD messages directly to another ENIC NI<b>8</b> bypassing the network manager <b>4</b>. As described above, this direct communication between ENICs is only permissible for control commands that do not jeopardise the network connections. Since the ENIC NI<b>8</b> is associated with the destination group video switch D<b>8</b> it is operable both to transmit and receive SDI video streams whereas ENICs NI<b>1</b> and NI<b>2</b> associated with the cameras are operable only to receive SDI video from outputs on those cameras for packetisation by the ENIC and transmission across the network.</p>
<p id="h-0013" num="0000">AVSCP</p>
<p id="p-0079" num="0078">AVSCP uses UDP (User Datagram Protocol) to carry its messages. UDP is a connectionless transport protocol, which means that a one-way data packet is sent by the sending device without notifying the receiving device that the data is en route. On receipt of each data packet, the receiving device does not return status information to the sending device. The data format is described in the section &#x201c;Data Format&#x201d; and <figref idref="DRAWINGS">FIG. 3B</figref> below.</p>
<p id="p-0080" num="0079">AVSCP is used for communication between the network manager and each ENIC for the purpose of connection control and in order to monitor the operation status of ENIC and AV (audio and video) ports. For example, if it is desired to connect a video tape recorder (VTR) destination device to a camera source device to receive AV data then the switching and routing client <b>6</b> must send an instruction to the ENIC associated with the destination device, in this case the VTR, to join the port of that ENIC that is connected to the VTR to the specific multicast group that is sourced from the camera. This instruction between the ENIC and the switching control server <b>6</b> is sent via the AVSCP protocol.</p>
<p id="p-0081" num="0080">The AVSCP protocol messages have five main functions, which are to:</p>
<p id="p-0082" num="0081">1) Monitor the operational status of the ENICs;</p>
<p id="p-0083" num="0082">2) Discover the configuration of an ENIC;</p>
<p id="p-0084" num="0083">3) Stop and start audio and video source transmission;</p>
<p id="p-0085" num="0084">4) Direct ENICs and their associated audio and video devices to join multicast groups; and</p>
<p id="p-0086" num="0085">5) Set up and delete paths for conveying control data across the network.</p>
<p id="p-0087" num="0086">The network manager <b>4</b> should be aware of the operational status of an ENIC before it can send any instructions to it. Accordingly the AVSCP protocol requires an ENIC to send status messages to the network manager <b>4</b> periodically. The network manager <b>4</b> can only control AV stream transmission and reception of an ENIC when it is operational. As an alternative to deriving network configuration information from messages periodically generated by the ENICs, the network manager <b>4</b> can actively obtain the current configuration of an ENIC by sending a configuration request message to it. The ENIC responds to this request by returning a message specifying the current configuration.</p>
<p id="p-0088" num="0087">Examples of AVSCP messages are as follows:</p>
<p id="p-0089" num="0088">STOP_TX and START_TX: &#x2014;these are command messages that allow the network manager <b>4</b> to instruct an ENIC to stop transmission and start transmission of a specific AV data stream (specified by AV input port of ENIC).</p>
<p id="p-0090" num="0089">SWITCH_AV and SWITCH_AUDIO: &#x2014;these are command messages that enable the network manager <b>4</b> to instruct an ENIC to add or delete an AV data stream or audio data stream respectively to a specific multicast group</p>
<p id="p-0091" num="0090">SET_CTRL_TX and SET_CTRL_RX: &#x2014;these are command messages to set up transmit (TX) and receive (RX) ends of an AV data stream control path. If an application sends a SET_CTRL_TX message to one ENIC then it will typically also send a SET_CTRL_RX message to the ENIC at the other end of the control path to create a complete AV control path.</p>
<p id="p-0092" num="0091">UPDATE_TALLY: &#x2014;this is a command message used to request a source/destination device associated with an ENIC port to update its display of tally text information. This command is usually used when an AV source changes its display information.</p>
<p id="p-0093" num="0092">ACK: &#x2014;this message is sent by an ENIC to the network manager <b>4</b> when it has received a command message from the network manager <b>4</b>. The acknowledged command message is identified by a session ID value and the acknowledgement itself could be either positive or negative. The ACK message of AVSCP is required because UDP is not a guaranteed delivery protocol. If messages are not acknowledged within a predetermined time then they may be retransmitted up to a maximum number of times by the network manager.</p>
<p id="p-0094" num="0093"><figref idref="DRAWINGS">FIG. 14</figref> schematically illustrates how AVSCP relates to other functional modules in the ENIC network of <figref idref="DRAWINGS">FIG. 1</figref>. The arrangement of <figref idref="DRAWINGS">FIG. 14</figref> shows identical protocol stacks <b>1100</b>A and <b>1100</b>B of two different ENICs and a protocol stack <b>1120</b> of the network manager <b>4</b>. The ENIC protocol stack comprises an AVSCP layer <b>1104</b> that sits on top of a UDP/IP/Ethernet layer <b>1102</b>. Other protocols <b>1106</b> may also be implemented at the same level of the protocol stack as AVSCP. The AVSCP layer communicates with a higher layer <b>1108</b> comprising ENIC applications via an AVSC request command and an AVSC indicate command. An uppermost layer of the ENIC protocol stack <b>1100</b>A represents a local configuration <b>1110</b> of the network. The network manager protocol stack <b>1120</b> is similar to the ENIC protocol stack <b>1100</b>A, <b>1100</b>B in that it comprises an AVSCP layer <b>1124</b> that sits on top of a UDP/IP/Ethernet layer <b>1122</b>. However, a server applications layer <b>1128</b> sits on top of the AVSCP layer <b>1124</b> and communications between these two layers are mediated by the AVSC request command and the AVSC indicate command. The server applications layer <b>1128</b> is in communication with a higher layer corresponding to a network configuration database <b>1130</b>. The AVSCP protocol layer <b>1104</b> of the ENIC may send AVSCP protocol messages to and receive messages from the corresponding AVSCP protocol layer <b>1124</b> of the network manager <b>4</b>.</p>
<p id="p-0095" num="0094">The AVSCP request is a primitive command that is sent from the application layer of the ENIC <b>1108</b>, or network manager <b>1128</b> to the corresponding AVSCP protocol layer <b>1104</b>, <b>1124</b>. An application initiates an AVSCP request in order to send an AVSCP message to another AVSCP entity. The AVSCP request has the following parameters: IP address of the message destination (typically an ENIC); AVSCP message type (e.g. stop transmission, switch etc.); and a number of information elements required by the message.</p>
<p id="p-0096" num="0095">One or more remote client controller devices (not shown) may access the server applications layer <b>1120</b> of the network manager <b>4</b> via a client controller interface (not shown). The client controller interface of the network manager <b>4</b> enables a client controller to connect remotely with and exercise a subset of control functions over a subset of ENIC devices.</p>
<p id="p-0097" num="0096"><figref idref="DRAWINGS">FIG. 15</figref> schematically illustrates the structure of an AVSCP header that is applied to all AVSCP messages. The AVSCP header has a fixed length of 32 bits. The first octet (bits <b>0</b> to <b>7</b>) is used as a protocol identifier. It has a value of 0xCC. The purpose of a protocol ID is to detect possible collision with other protocols if they happen to use the same port number. The second octet (bits <b>8</b> to <b>15</b>) is used to carry a version number for the protocol. The third octet (bits <b>16</b> to <b>23</b>) is reserved for future use. The fourth octet (bits <b>24</b> to <b>31</b>) indicates the message type. The last 4 octets of the AVSCP header is a session-ID, which is a random number chosen by the command message initiator to tie up acknowledgement message returned by the responder to the original command message.</p>
<p id="h-0014" num="0000">CNMCP</p>
<p id="p-0098" num="0097">As described above, the network manager <b>4</b> and the switching and routing client <b>6</b> communicate with each other using CNMCP. CNMCP messages are carried by TCP (See section &#x201c;Data Format&#x201d; and <figref idref="DRAWINGS">FIG. 3B</figref> for a description of the data format TCP is a connection-oriented protocol, which means that before any data is transferred between network nodes, the sending and receiving devices must co-operate in the establishment of a bi-directional communication channel. Subsequently, each package of data sent across the local network receives an acknowledgement and the sending device records status information to ensure that each data package is received without errors.</p>
<p id="p-0099" num="0098">CNMCP enables control messages such as a registration request, a switch request or a permissions update from the switching and routing client <b>6</b> to the network manager <b>4</b> and further enables control messages such as a registration response, a switch response, an update indication (specifying device configurations) and a permission response from the network manager <b>4</b> to the switching and routing client <b>6</b>. By sending CNMCP messages to the switching and routing client <b>6</b>, the network manager <b>4</b> informs the switching and routing client <b>6</b> of data associated with the ENICs which are connected to the network as well as data associated with source devices and destination devices connected to the network by the ENICs. Furthermore, by sending CNMCP messages from the network manager <b>4</b> to the switching and routing client <b>6</b>, the network manager <b>4</b> informs the switching and routing client <b>6</b> of the multicast IP addresses on which it can receive the proxy video streams, audio streams and status streams. The network manager <b>4</b> can determine whether sufficient bandwidth is available to service a request by the switching and routing client <b>6</b> to add a connection between a source device and a destination device and mediates access to network resources accordingly. However, it is also possible for the switching and routing client <b>6</b> to enable an ENIC source/destination device to join a multicast group directly without requesting access via the network manager <b>4</b>. This may be appropriate where, for example, only a low data-rate connection is required.</p>
<p id="p-0100" num="0099">Alternatively to CNMCP, a known protocol such as Simple Network Management Protocol (SNMP) may be used. The switching and routing client <b>6</b> can cause the network to connect audio and video streams from source devices to destination devices, both of which are specified by the switching and routing client <b>6</b> and to specify control data routing by sending CNMCP or SNMP messages to the network manager <b>4</b>.</p>
<p id="h-0015" num="0000">Audio and Video Data (RTP)</p>
<p id="p-0101" num="0100">For sending streams of audio and video data from the source devices to the destination devices, the transport layer is UDP multicast. The audio and video data are carried in Real-Time Protocol (RTP) format within a UDP packet. This applies to the audio data, the full resolution video and the low resolution proxy video. (See section &#x201c;Data Format&#x201d; and <figref idref="DRAWINGS">FIG. 3A</figref> below for a description of the data format). RTP provides functions to support real-time traffic, that is, traffic that requires time-sensitive reproduction at the destination application. The services provided by RTP include payload type identification (e.g. video traffic), sequence numbering, time-stamping and delivery monitoring. RTP supports data transfer to multiple destinations via multicast distribution if provided by the underlying network. The RTP sequence numbers allow the receiver to reconstruct the original packet sequence. The sequence numbers may also be used to determine the proper location of a packet. RTP does not provide any mechanism to ensure timely delivery, nor does it provide other Quality of Service guarantees.</p>
<p id="p-0102" num="0101">When an ENIC receives an AVSCP switch request from the network manager <b>4</b>, the ENIC sends an IGMP join message to the Ethernet switch <b>2</b> to join the multicast group of the data it needs to receive.</p>
<p id="h-0016" num="0000">Unicast Control Data (UCD)</p>
<p id="p-0103" num="0102">Control data may be sent, only as a Unicast transmission, directly from one ENIC to another. In the case of control data that is likely to jeopardise virtual circuit-switched connections on the network the control data must be sent via the switching and routing client <b>6</b> and/or the network manager <b>4</b> to control a device. However, for a specific subset of control data a controller connected to one ENIC may directly control a device connected to another ENIC bypassing the network manager <b>4</b> and the switching and routing client <b>6</b>. For example, commands such as play, pause stop, record, jog etc. may be sent from a controller across the network directly to a source/destination group such as a VTR. The control channels are set up using AVSCP. The control data itself is carried in UDP messages in this embodiment. However, TCP may alternatively be used to carry control data.</p>
<p id="h-0017" num="0000">Stream Status (SS)</p>
<p id="p-0104" num="0103">Since status data is likely to be low-bandwidth, CNMCP is used to enable the switching and routing client <b>6</b> client to receive the status information SS without the intervention of the network manager. Where a controller is connected to the network at a first ENIC and controlling a group is connected to the network via a second, ENIC the first ENIC needs to know the status of the controlled group. To achieve this, status data SS may be sent from the controlled group to the controller via the network. The switching and routing client <b>6</b> is operable to elect to receive SS data to monitor the current status of the data stream.</p>
<p id="h-0018" num="0000">AV Proxy Streams (P)</p>
<p id="p-0105" num="0104">AV proxy streams are communicated across the network using RTP over UDP multicast. The switching and routing client <b>6</b> can elect to receive proxy video for monitoring purposes and to make informed switching decisions with regard to the virtual circuit-switched connections. In the arrangement of <figref idref="DRAWINGS">FIG. 2</figref> only the switching and routing client <b>6</b> receives the proxy video stream but ENICs NI<b>1</b> (associated with &#x2018;Camera <b>1</b>&#x2019; S<b>1</b> source group), NI<b>2</b> (associated with &#x2018;Camera <b>2</b>&#x2019; S<b>2</b> source group) and NI<b>8</b> (associated with video switch D<b>8</b> destination group) are all operable to output proxy video data streams. Users of source group and destination group devices such as cameras, VTRs and video processors are likely to want to make editing decisions based on the content of the audio and/or video data streams and it is for this reason that AV proxy streams are generated. Although several known video formats stream video data across a network using RTP, these known methods involve heavy compression of the video data. Video compression methods that introduce significant periods (i.e. &#x3e;one field) of delay are unsuitable for the studio production environment in which the network according to the present technique is likely to be deployed. Furthermore, in a production environment it is likely that multiple AV data sources will have to be displayed substantially simultaneously on a screen and this would place undue burden on the data processor to decompress the multiple data streams, perhaps requiring hardware acceleration. Accordingly, the video proxy is generated as an uncompressed sub-sampled data stream rather than a compressed data stream ((e.g. QCIF (176&#xd7;144); 16 bit RGB; 25 frames per second; sub-sampling with horizontal and vertical filtering; at 15.2 Mbits per second).</p>
<p id="h-0019" num="0000">Data Formats&#x2014;<figref idref="DRAWINGS">FIGS. 3A</figref>, <b>3</b>B, <b>3</b>C.</p>
<p id="h-0020" num="0000">Audio and Video Data</p>
<p id="p-0106" num="0105">Referring to <figref idref="DRAWINGS">FIG. 3A</figref>, the audio and video data format comprises, in order, an Ethernet header, an IP multicast header, a UDP header, an RTP header, a field specifying the type of payload, the payload, and a CRC (cyclic redundancy check) field. The Ethernet header comprises a source Ethernet address and a destination multicast Ethernet address. The IP multicast header comprises the source ENIC IP address and the destination device multicast IP address. There are several different IP address classes e.g. Class A has the first 8-bits allocated to the network ID and the remaining 24-bits to the host ID whereas Class B has the first 16 bits allocated to the network ID and the remaining 16-bits to the host ID.</p>
<p id="p-0107" num="0106">Class D IP addresses are used for multicasting. The four left-most bits of a Class D network address always start with the binary pattern <b>1110</b>, corresponding to decimal numbers <b>224</b> to <b>239</b>, and the remaining 28 bits are allocated to a multicast group ID. IGMP is used in conjunction with multicasting and Class D IP addresses.</p>
<p id="p-0108" num="0107">The set of hosts (i.e. source and/or destination devices) listening to a particular IP multicast address is called a host group. A host group may span multiple networks and membership of a host group is dynamic. The Class D IP address is mapped to the Ethernet address such that the low-order 23 bits (of 28) of the multicast group ID are copied to the low-order 23 bits of the Ethernet address. Accordingly 5 bits of the multicast group ID are not used to form the Ethernet address. As a consequence the mapping between the IP multicast address and the Ethernet address is non-unique i.e. 32 different multicast group IDs map to the same Ethernet address.</p>
<p id="p-0109" num="0108">The UDP header comprises source and destination port numbers, which are typically associated with a particular application on a destination device. Note that UDP is redundant in the case of multicast messages since in this case the multicast group address identifies the stream/content. The audio/video streams are transported using RTP protocol. Forward Error Correction (FEC) may be used for certain data streams e.g. full resolution video streams to provide a level of protection against data corruption due to network errors. FEC is provided using a known RTP payload format that provides for FEC. FEC is a parity-based error protection scheme.</p>
<p id="p-0110" num="0109">A known extension to the RTP protocol allows a video scan line number to be specified in the RTP payload header. The RTP header also comprises a field to specify whether 8-bit or 10-bit video is present. Although known RTP and RTP/FEC protocol formats provide the data packet fields necessary to transport audio and video data over an IP network it may also be desired to transmit additional information such as source status and source timecode information. For example if the source device is a VTR then the timecode as stored on the tape should be transferred across the network. The source status information might indicate, for example, whether the VTR is currently playing, stopped or in jog/shuttle mode. This status information allows a user to operate the VTR from a remote network location. Since the timecode data and source status information is required only once per field, the information is transported in an RTP packet marked as vertical blanking. To allow audio and video resynchronisation, the RTP timecode is based on a 27 MHz clock. The payload type field contains data indicating the type of payload. i.e. video or audio data. The payload field contains the video or audio data to be transmitted. The CRC is a cyclic redundancy check known in the art.</p>
<p id="h-0021" num="0000">AVSCP and CNMCP</p>
<p id="p-0111" num="0110">AVSCP and CNMCP messages are carried by a data format as shown in <figref idref="DRAWINGS">FIG. 3B</figref>. The format comprises in order, an Ethernet header, an IP header (which is not a multicast header), a UDP or TCP header, the payload, and a CRC field. The Ethernet header comprises source and destination Ethernet addresses. The IP header comprises the source ENIC IP address and the destination ENIC IP address. UDP is used for AVSCP and TCP is used for CNMCP. The payload field contains the AVSCP or CNMCP message data. The CRC is a cyclic redundancy check known in the art.</p>
<p id="h-0022" num="0000">Stream Status Format</p>
<p id="p-0112" num="0111">The stream status (SS) format is identical to the audio and video data format as shown in <figref idref="DRAWINGS">FIG. 3A</figref>, with the exception of the content of the payload section. The frame comprises an Ethernet header, an IP multicast header, a UDP header, an RTP header, a payload type identifier, a stream status data payload and a CRC field.</p>
<p id="h-0023" num="0000">Unicast Control Data Format</p>
<p id="p-0113" num="0112">The unicast control data format is shown in <figref idref="DRAWINGS">FIG. 3C</figref> and comprises an Ethernet header, a standard IP header (not multicast), a UDP header, a payload section assigned to 30 unicast control data and a CRC field.</p>
<p id="p-0114" num="0113">IGMP is a known protocol. Multicasting that extends beyond a single network is complicated by the fact that Internet routers must establish whether any hosts (in this case source devices and destination devices) on a given physical network belong to a given multicast group. IGMP is typically used to establish this information. IGMP lets all nodes of a physical network know the current association of hosts to multicast groups. IGMP messages are transmitted in IP datagrams and have a fixed 8-byte IGMP message size concatenated with a 20 byte IP header. The IGMP message includes a 32-bit Class D IP address.</p>
<p id="p-0115" num="0114">A number of IGMP queries and reports are used by multicast routers (e.g. the Ethernet switch <b>2</b> of <figref idref="DRAWINGS">FIG. 1</figref>) to record which network interfaces have at least one host (source/destination device or group) associated with a multicast group. When the Ethernet switch <b>2</b> receives a multicast message from a source device to forward, it forwards the message only to interfaces that currently have destination devices associated with that multicast group.</p>
<p id="h-0024" num="0000">ENIC, <figref idref="DRAWINGS">FIG. 4</figref></p>
<p id="p-0116" num="0115">An ENIC joins a multicast group by sending an IGMP join message to the asynchronous Ethernet switch <b>2</b>. An ENIC may send and/or receive data in the audio/video format shown in <figref idref="DRAWINGS">FIG. 3A</figref>, in the AVSCP/CNMCP format shown in <figref idref="DRAWINGS">FIG. 3B</figref> or in the UCD data format shown in <figref idref="DRAWINGS">FIG. 3C</figref>. Note that an ENIC does not send or receive CNMCP data (which only passes between the network manager <b>4</b> and the switching and routing client <b>6</b>).</p>
<p id="p-0117" num="0116">Referring to <figref idref="DRAWINGS">FIG. 4</figref>, an ENIC comprises a network processor <b>20</b>, a buffer and packet switch <b>22</b>, a packetiser/depacketiser <b>24</b>, a control processor CPU <b>26</b>, a peripheral component interconnect PCI <b>28</b>, a clock <b>202</b>, a clock synchronisation circuit <b>204</b> and a frame synchronisation circuit <b>205</b>. The clock synchronisation circuit <b>204</b> is described in co-pending UK patent Application 0204242.2. The frame synchronisation circuit is described in co-pending patent application 0307459.8.</p>
<p id="p-0118" num="0117">The packetiser/depacketiser has three video inputs <b>218</b> for receiving respective SDI video streams, three audio inputs <b>220</b> for receiving respective SDI audio streams. Alternatively, three input ports could be provided for receiving combined SDI audio/video streams and the audio and video streams could be subsequently separated to form three audio and three video streams with in the ENIC. In further alternative embodiments AES digital audio streams could be supplied as input to the packetiser/depacketiser. The packetiser/depacketiser <b>24</b> has likewise three video outputs <b>222</b> and three audio outputs <b>224</b>.</p>
<p id="p-0119" num="0118">The CPU <b>26</b> has three control data inputs <b>226</b> and three control data outputs <b>228</b>, here denoted &#x201c;RS422&#x201d; because they provide control similar to that provided by RS422 in a conventional studio. The three video inputs <b>218</b> are connected to respective ones of three substantially real-time proxy video generators <b>212</b> which generate the low resolution versions of the video streams as will be described below. The outputs of the proxy generators and the SDI video inputs <b>218</b> are supplied as input to a packetiser and multiplexer <b>214</b>, which converts the full resolution serial video from the inputs <b>218</b> and the proxy video from the proxy generators <b>212</b> to packets suitable for transmission across the network. The packets are then supplied to the buffer and packet switch <b>22</b>. The packetiser/depacketiser <b>24</b> has a depacketiser <b>216</b> and demultiplexer for receiving packets representing the SDI video and audio channels from the packet switch <b>22</b>. It depacketises and demultiplexes the video and audio into 3 serial video streams and 3 serial audio streams for supply to respective ones of three video outputs <b>222</b> and three audio outputs <b>224</b>. Thus the packetiser/depacketiser <b>24</b> provides routing of the video and audio received from the network in packetised form via the packet switch <b>22</b> to outputs <b>222</b> and <b>224</b> in serial digital format and further provides the routing of the serial digital video and audio data received from source devices via the inputs <b>218</b>,<b>220</b> to the buffer and switch <b>22</b> for transmission in packetised form across the network. The packetiser/depacketiser <b>24</b> also provides synchronisation of the different video and audio streams in conjunction with the clock synchronisation circuit <b>204</b> and provides frame alignment of the video frames of the different video streams in conjunction with the frame synchronisation circuit <b>205</b>.</p>
<p id="p-0120" num="0119">The buffer and packet switch <b>22</b> provides routing of video, audio and control packets received from the network processor <b>20</b> in accordance with a series of tags, which are applied to the packets in the network processor <b>20</b>. The network processor <b>20</b> generates the tags in accordance with header data in the received packets. There are two sorts of tag: a &#x201c;flow&#x201d; tag, which defines the route of the data through the packet switch <b>22</b>, and a &#x201c;type&#x201d; tag, which defines the final output to which the packets are supplied by the packetiser/depacketiser <b>24</b>. The video and audio packets are routed to the depacketiser <b>216</b>, whereas the control packets are routed to the CPU <b>26</b>.</p>
<p id="p-0121" num="0120">The network processor <b>20</b> comprises UDP/IP filters <b>208</b>, which detect, using packet header information, sync, audio, video, status and control data packets received from the network. Received clock sync packets are directed by the network processor <b>20</b> directly to the clock synchronisation circuit <b>204</b> to synchronise the ENIC clock <b>202</b> with a master reference clock as described in the co-pending UK patent application 0204242.2. Frame sync packets are directed by the network processor <b>20</b> to the clock sync circuit <b>204</b> and then to the frame sync circuit <b>205</b> via the ENIC clock <b>202</b>. The network processor <b>20</b> directs the sync packets directly to the clock synchronisation circuit <b>204</b> and to the frame synchronisation circuit <b>205</b> to reduce time delays which may otherwise reduce the accuracy of the synchronisation. Other packets, for example AVSCP packets, which are not recognised by the filters <b>208</b> are directed to the CPU <b>26</b> (although in alternative arrangements) filters could be set up for these.</p>
<p id="p-0122" num="0121">The network processor <b>20</b> attaches tags to the audio and video packets in accordance with the header data received with them. The tagged video and audio packets are supplied to the packet switch <b>22</b>, which routes them to the depacketiser <b>216</b> or to the PCI <b>28</b> computer interface. The tagged control data packets are directed by the buffer and packet switch <b>22</b> to the CPU <b>26</b>. The buffer and packet switch <b>22</b> is described in more detail below.</p>
<p id="h-0025" num="0000">Routing Data in an ENIC</p>
<p id="h-0026" num="0000">1. Data Received from the Network</p>
<p id="p-0123" num="0122">An ENIC may receive from the network: audio and video data packets as shown in <figref idref="DRAWINGS">FIG. 3A</figref>; AVSCP data packets as shown in <figref idref="DRAWINGS">FIG. 3B</figref>; stream status data packets (in essentially the same format as shown in <figref idref="DRAWINGS">FIG. 3A</figref>); and unicast control data packets as shown in <figref idref="DRAWINGS">FIG. 3C</figref>. The Ethernet header provides the physical address of the ENIC allowing a packet to be delivered by the network in known manner to the ENIC.</p>
<p id="p-0124" num="0123">The network processor <b>20</b> of the ENIC (see <figref idref="DRAWINGS">FIG. 4</figref>) has the UDP/IP filters <b>208</b> that extract the IP and UDP headers, decode the address information in the headers and detect the payload data type from the payload type field (see <figref idref="DRAWINGS">FIG. 3A</figref>). The network processor <b>20</b> then replaces the packet header with a tag identifier, which specifies a data processing route through the ENIC for the packet payload data to a target data handling node such as a video or audio processor. <figref idref="DRAWINGS">FIG. 5A</figref> schematically illustrates the data format of a tagged packet. The tagged data packet is 32 bits wide and is of indefinite length i.e. the payload has a variable length. The first 32 bits of the tagged packet comprise an 8-bit &#x201c;flow&#x201d; data field, an 8-bit &#x201c;type&#x201d; data field and a 16-bit &#x201c;size&#x201d; field. The next 32 bits are currently unused. The unused field is followed by a payload field. For audio and video data the tagged packet payload comprises the RTP header and the payload type data in addition to the audio or video data payload of <figref idref="DRAWINGS">FIG. 3A</figref>. In the case of both AVSCP/CNMCP data packets and unicast control data packets (see <figref idref="DRAWINGS">FIGS. 3B and 3C</figref>) the tagged packet payload is the message data.</p>
<p id="p-0125" num="0124">The flow data field of the tagged packet data format of <figref idref="DRAWINGS">FIG. 5A</figref> defines the output of the packet switch <b>22</b> (<figref idref="DRAWINGS">FIG. 4</figref>) corresponding to the target data-handling node for which the tagged packet payload is destined. The type data field determines what the target processor does with the data and the size data field specifies the payload size.</p>
<p id="p-0126" num="0125"><figref idref="DRAWINGS">FIG. 5B</figref> schematically illustrates an example of a flow assignment allocation. In this example flow <b>0</b> corresponds to data that will not be passed to any target processing device e.g. untagged data; flows <b>1</b> and <b>4</b> correspond to video input and output ports <b>218</b>, <b>222</b> of the packetiser/depacketiser <b>24</b> (see <figref idref="DRAWINGS">FIG. 4</figref>); flows <b>2</b> and <b>5</b> correspond to CPU data flows from and to the network; and flows <b>3</b> and <b>6</b> correspond to PCI <b>28</b> data flow from and to the network.</p>
<p id="p-0127" num="0126"><figref idref="DRAWINGS">FIG. 5C</figref> schematically illustrates how video data, PCI data, network data and CPU data is mapped to each of the six defined flow paths via multiplexers (MUX) and demultiplexers (DEMUX). Each of the data flows of <figref idref="DRAWINGS">FIG. 5B</figref> is associated with a FIFO. In this example arrangement there is no direct means of determining the size or number of packets written to the FIFO since this is not necessary. The tags associated with the packets specify the packet size so the MUX only requires a &#x201c;not empty&#x201d; indication for the FIFO to perform a read operation. The MUX modules are programmable (by external means such as a CPU) such that they are sensitive only to particular flows. This enables virtual flow paths to be set up across the buffer and packet switch <b>22</b> of <figref idref="DRAWINGS">FIG. 4</figref>. Similarly, to avoid contention, only a single DEMUX module can write into any one data flow. Again, the mapping is programmably controlled by external means.</p>
<p id="p-0128" num="0127">Referring to <figref idref="DRAWINGS">FIG. 6A</figref>, the video section of the packetiser/depacketiser <b>24</b> is shown. It comprises a demultiplexer <b>2401</b> which responds to the &#x201c;type&#x201d; data in the tags attached to the video packets to feed video packets to three channels V<b>0</b>, V<b>1</b> and V<b>2</b> denoted by the type data. Each channel comprises an RTP/FEC decoder <b>2402</b>, <b>2403</b>, <b>2404</b> followed by a respective frame store <b>2405</b>, <b>2406</b>, <b>2407</b>. The RTP decoder <b>2402</b> removes the tag from the packet it receives and writes the packet into the frame store at the address defined by the RTP packet header, in particular the line number data thereof, to create a video frame having the video data in the correct order.</p>
<p id="h-0027" num="0000">First Example of Operation: Multicasting of Audio Data</p>
<p id="p-0129" num="0128">In this example, it is desired to form a data communication path to transmit AES audio data from source group S<b>9</b> across the network to the audio processors D<b>3</b>. The AES audio data is to be packetised by ENIC NI<b>6</b>, sent across the network and received and depacketised by ENIC NI<b>10</b> before being delivered in serial digital format to the audio processors D<b>3</b>. The user may instigate the connection between audio source S<b>9</b> and the audio processors by interacting with the GUI described with reference to <figref idref="DRAWINGS">FIGS. 9 to 11</figref> and displayed by the switching and routing client <b>6</b>.</p>
<p id="p-0130" num="0129">To set up the communication paths between audio source group S<b>9</b> and audio processors D<b>3</b>, the switching and routing client <b>6</b> sends a CNMCP switch request message to a predetermined port of the network manager <b>4</b> to initiate a change to the current configuration of virtual circuit-switched connections. The network manager <b>4</b> sends CNMCP messages to the switching and routing client <b>6</b> providing information on the source devices and destination devices (and the associated source groups and destination groups) that are available to it. This enables the switching and routing client <b>6</b> to derive a view specifying the current configuration and status of the network. Each source device and destination device has an associated ID assigned by the network manager in communications to the switching and routing client <b>6</b> and this device ID is used by the switching and routing client <b>6</b> in subsequent communications with the network manager. In response to a user request to connect S<b>9</b> to D<b>3</b> the switching and routing client <b>6</b> send a CNMCP message device to the network manager <b>4</b> containing the ID of the relevant source device and the ID of the destination.</p>
<p id="p-0131" num="0130">In the event that the switching and routing client <b>6</b> is not permitted to perform this operation (e.g. if there is insufficient network bandwidth available to form a reliable connection) then the network manager <b>4</b> sends a NACK (negative acknowledgement) CNMCP message to the switching and routing client <b>6</b> in response to the connection request. On the other hand, if the network manager <b>4</b> permits establishment of the connection, the connection request will be processed as follows.</p>
<p id="p-0132" num="0131">First, the network manager <b>4</b> queries its network configuration database to determine which multicast IP address the AES audio data from source group S<b>9</b> is currently being transmitted to. Then an AVSCP switch message containing the multicast IP address to which S<b>9</b> transmits is created by the network manager <b>4</b> and sent to the relevant port (device) of the ENIC NI<b>10</b>, which connects the audio processors D<b>3</b> to the network. Embedded software on the ENIC NI<b>10</b> sends an IGMP join message to the multicast IP address on which the audio data of S<b>9</b> is transmitted and then sends an AVSCP ACK message back to the network manager. This enables the ENIC NI<b>10</b> to receive the output of the audio source S<b>9</b> on one of its destination devices and the ENIC NI<b>9</b> will route the received audio data to the source device (ENIC AES output port) that connects to the audio processors D<b>3</b>. Meanwhile, the network manager <b>4</b>, having received the AVSCP ACK message from the ENIC NI<b>10</b> acknowledging that the instruction to join the specified multicast IP address has been received, will update the routing information in the network configuration database to reflect the existence of the newly formed connection. Finally, the network manager <b>4</b> sends a CNMCP ACK message to the switching and routing client <b>6</b> indicating that the requested audio data connection between S<b>9</b> and D<b>3</b> has been successfully set up.</p>
<p id="h-0028" num="0000">Second Example of Operation: Multicasting of AV Data</p>
<p id="p-0133" num="0132">In this example of operation, two of the source groups of <figref idref="DRAWINGS">FIG. 1</figref> are connected to a single destination group. In particular, the outputs of &#x2018;Camera <b>1</b>&#x2019; S<b>1</b> and &#x2018;Camera <b>2</b>&#x2019; S<b>2</b> are supplied as inputs to the video switch D<b>8</b>. To initiate connections between Si and D<b>8</b> and between S<b>2</b> and D<b>8</b>, the switching and routing client <b>6</b> sends CNMCP switch messages to the network manager <b>4</b> containing the ID values associated with &#x2018;Camera <b>1</b>&#x2019; <b>51</b>, &#x2018;Camera <b>2</b>&#x2019; S<b>2</b> and the video switch D<b>8</b>.</p>
<p id="p-0134" num="0133">Recall that the network configuration database of the network manager <b>4</b> also stores data in relation to each ENIC device category. In particular, the network configuration database stores data indicating whether each source device is linked, the number of video lines to delay transmission of the data stream by and the current transmission status the source device. The network manager <b>4</b> also derives information with regard to the destination devices from the database, including the IP address of the ENIC that implements the device and the number of video lines to delay playout by.</p>
<p id="p-0135" num="0134">From the network configuration database the network manager <b>4</b> can determine the multicast IP address that each of the camera source groups S<b>1</b>, S<b>2</b> transmits data to. Thus to establish the connections between the two cameras <b>51</b>, S<b>2</b> and the video switch D<b>8</b> the network manager <b>4</b> transmits AVSCP messages to the ENIC N<b>18</b> specifying both the multicast IP address onto which &#x2018;Camera <b>1</b>&#x2019; transmits AV data and the multicast IP address onto which &#x2018;Camera <b>2</b>&#x2019; transmits AV data. Each of the AVSCP message from the network manager <b>4</b> is detected by the network processor <b>20</b> (<figref idref="DRAWINGS">FIG. 4</figref>) of the ENIC NI<b>8</b> and fed to the CPU <b>26</b> of the ENIC NI<b>8</b> which issues an IGMP join message to the network. The AV packets output by each of the two cameras are received by the network processor <b>20</b> of the ENIC NI<b>8</b>. Each of the received video packets specifies, in its header data, a destination IP address and the multicast group for which that AV packet is destined is derived from the IP address. The ENIC NI<b>8</b> determines from the multicast group, to which output port (source device) of the ENIC NI<b>8</b>, the depacketised AV data should be routed. As explained above the multicast group determines to which subset of destination devices in the network a data packet should be routed. In the ENIC NI<b>8</b>, the headers are removed from the AV packets by the network processor <b>20</b> and replaced by the tags (as described above with reference to <figref idref="DRAWINGS">FIG. 4</figref>). The packet switch <b>22</b> routes the video packets to the demultiplexer <b>2401</b> (see <figref idref="DRAWINGS">FIG. 6A</figref>) according to the flow data in the tag. The demultiplexer <b>2401</b> depacketises that data and routes it to RTP/FEC decoders <b>2402</b> and <b>2403</b> (by way of example) where decoding is performed and video frames are reconstructed. The output from the decoders <b>2402</b> and <b>2403</b> is subsequently supplied to frame stores <b>2405</b> and <b>2406</b> respectively. In addition, the frame sync circuit <b>205</b> of the ENIC NI<b>8</b> (see <figref idref="DRAWINGS">FIG. 4</figref>) aligns the frames of the two video streams, taking into account the line delay information stored in the network configuration database by the network manager <b>4</b>. The video switch D<b>8</b> (<figref idref="DRAWINGS">FIG. 1</figref>) receives the two AV SDI streams from the ENIC NI<b>8</b>.</p>
<p id="p-0136" num="0135">In addition to setting up data communication channels between &#x2018;Camera <b>1</b>&#x2019;, &#x2018;Camera <b>2</b>&#x2019; and the video switch D<b>8</b>, it is also necessary to set up control channels, which are specified by the CONTROL_SOURCE and CONTROL_DESTINATION data structures in the network configuration database. An AV stream control path is set up sending two &#x2018;CREATE_STREAM_CTRL&#x2019; AVSCP messages from the switching and control server <b>6</b> to the two ENICs defining the end points of the control path. Each &#x2018;CREATE_STREAM_CTRL&#x2019; sets up one end of the control path at an ENIC. Once the control path has been established, UCD data packets can be sent to the ENIC, NI<b>8</b>, for example, to instruct the video switch D<b>8</b> to change its output from data sourced from &#x2018;Camera <b>1</b>&#x2019; to data sourced from &#x2018;Camera <b>2</b>&#x2019;.</p>
<p id="p-0137" num="0136">Accordingly, in addition to the AV data streams from &#x2018;Camera <b>1</b>&#x2019; and &#x2018;Camera <b>2</b>&#x2019;, the video switch D<b>8</b> also receives control data from the CPU <b>26</b> (<figref idref="DRAWINGS">FIG. 4</figref>) of the ENIC NI<b>8</b>. The control data is sent by the switching and routing client <b>6</b> (<figref idref="DRAWINGS">FIG. 1</figref>) as Unicast control data, which is received via the network in packetised form by the network processor <b>20</b> (<figref idref="DRAWINGS">FIG. 4</figref>) of ENIC NI<b>8</b>. The Unicast control data has a header that identifies it as a control packet and accordingly (as described above with reference to <figref idref="DRAWINGS">FIG. 4</figref>), these control packets are routed to the CPU <b>26</b> of the ENIC NI<b>8</b>. The control data may instruct the video switcher D<b>8</b> to switch its output from one of the AV streams to the other i.e. from &#x2018;Camera <b>1</b>&#x2019; to &#x2018;Camera <b>2</b>&#x2019;.</p>
<p id="h-0029" num="0000">Third Example of Operation: Propagation of Changes to Tally Text Data Through the Network.</p>
<p id="p-0138" num="0137"><figref idref="DRAWINGS">FIG. 7</figref> schematically illustrates a simplified view of a network arrangement according to the present technique. The network comprises two cameras, &#x201c;camera <b>1</b>&#x201d; and &#x201c;camera <b>2</b>&#x201d;, a Digital Multi-Effects (DME) unit, an AB switch and a monitor that may display the output AV stream of one or other of the two cameras, depending on the current configuration of the AB switch. <figref idref="DRAWINGS">FIG. 7</figref> illustrates the network in terms of the ENICs associated with each of the network devices. Accordingly, the network comprises ENIC_<b>1</b> <b>710</b> that is connected to a source device of &#x201c;camera <b>1</b>&#x201d;, ENIC_<b>2</b> <b>720</b> that is connected to a source device of &#x201c;camera <b>2</b>&#x201d;, ENIC_DME <b>730</b> that is connected to the DME unit, ENIC_AB_SWITCH <b>740</b> that is connected to the AB switch and ENIC AIR <b>750</b> that is connected to the monitor.</p>
<p id="p-0139" num="0138">The ENIC_<b>1</b> <b>710</b> receives SDI data output by &#x201c;camera <b>1</b>&#x201d;, packetises it, transmits it across the network via the ENIC_DME <b>730</b> to the DME for digital multi-effects processing and the SDI output of the DME is supplied back to ENIC_DME <b>730</b> for packetisation and transmission across the network to the AB switch via ENIC_AB_SWITCH <b>740</b>. The output of &#x201c;camera <b>2</b>&#x201d; is packetised by ENIC_<b>2</b> <b>720</b> and transmitted in packetised form across the network to the AB switch via ENIC_AB_SWITCH <b>740</b>. Depending on the current configuration of the AB switch, either the DME processed output of &#x201c;camera <b>1</b>&#x201d; or the output of &#x201c;camera <b>2</b>&#x201d; is supplied to the ENIC_AIR <b>750</b> for conversion to SDI format and for display on the monitor. The broken lines between the ENICs in <figref idref="DRAWINGS">FIG. 7</figref> represent a network connection from an ENIC whereas the unbroken lines represent an SDI connection to an ENIC. Recall that SDI data is supplied input to an ENIC port for packetisation and transmission across the network to a destination device whereas packetised data received from the network by an ENIC is depacketised and supplied to an AV device as a serial digital data stream such as an SDI data stream or AES audio data stream.</p>
<p id="p-0140" num="0139">Recall that the network configuration data stored by the network manager <b>4</b> includes a &#x201c;SOURCE&#x201d; data structure that includes the parameter &#x201c;LINK&#x201d; and that a source having</p>
<p id="p-0141" num="0140">LINK=1 is a source that is supplied by a destination device. The video source device for each camera has LINK=0 and so is a &#x2018;pure&#x2019; source i.e. it directly generates the data that it outputs. Each camera has a user group called &#x201c;Producer&#x201d; and the Producer has set the tally text to be the name of the cameraman, i.e. &#x201c;FRED&#x201d; or &#x201c;JIM&#x201d; for &#x201c;camera <b>1</b>&#x201d; and &#x201c;camera <b>2</b>&#x201d; respectively. ENIC_<b>1</b> <b>710</b> is associated with &#x201c;camera <b>1</b>&#x201d;, ENIC_<b>2</b> is associated with &#x201c;camera <b>2</b>&#x201d; and the three other ENICs on the network are ENIC_DME <b>730</b>, ENIC_AB_SWITCH <b>740</b> and ENIC_AIR <b>750</b>. ENIC_DME <b>730</b> performs digital multi-effects (DME) on the video from &#x201c;camera <b>1</b>&#x201d;. This ENIC will have two device entries in the network configuration database stored by the network manager <b>4</b>, the device entries being labelled DME In&#x2019; and &#x2018;DME Out&#x2019;. &#x2018;DME In&#x2019; is a destination device, which receives across the network, packetised data from &#x201c;camera <b>1</b>&#x201d; for supply to the DME unit and has a video link to the source device &#x2018;DME Out&#x2019; on the same ENIC, via which packetised DME-processed data from &#x201c;camera <b>1</b>&#x201d; is transmitted across the network to the ENIC_AB_SWITCH <b>740</b>. &#x2018;DME Out&#x2019; also has a tally entry of E<b>1</b> (indicating EFFECT <b>1</b>). ENIC_AB_SWITCH <b>740</b> performs a seamless switch between the &#x201c;DME Out&#x201d; source device and the source device associated with ENIC <b>2</b> <b>720</b> that outputs data from &#x201c;camera <b>2</b>&#x201d;. This ENIC <b>740</b> will have three device entries in the network configuration database, labelled &#x2018;Switch A In&#x2019;, &#x2018;Switch B In&#x2019; and &#x2018;Switch Out&#x2019;. &#x2018;Switch Out&#x2019; is a source device that will either be linked to &#x2018;Switch A In&#x2019; or &#x2018;Switch B In&#x2019;, depending on which video source is selected (i.e. the processed AV stream from &#x201c;camera <b>1</b>&#x201d; or the AV stream from &#x201c;camera <b>2</b> ENIC_AIR <b>750</b> has one device, which is a destination device labelled. &#x2018;Monitor&#x2019; (a monitor with a tally display). &#x2018;Monitor&#x2019; is a &#x2018;pure&#x2019; destination device (LINKED=0) since it does not supply data to another source device. The &#x201c;Monitor&#x201d; device receives video from the AB switch via ENIC_AB_SWITCH <b>740</b> and has a tally that displays the METADATA from its source device, which is the &#x2018;Switch Out&#x2019; source device of ENIC_AB_SWITCH <b>740</b>.</p>
<p id="p-0142" num="0141">First consider how the propagation of a change in the tally text data of a source device propagates through the network connections to a final destination device is achieved according to the present technique. Consider, for example, that the AB switch is showing channel A and the METADATA of Camera <b>1</b> changes. If the tally text entry of &#x2018;camera <b>1</b>&#x2019; is changed from &#x201c;FRED&#x201d; to &#x201c;ROB&#x201d;, corresponding to a change in the current cameraman, then ENIC_<b>1</b> <b>710</b> will send a request to the network manager <b>4</b> to changed the tally text data associated with the &#x2018;camera <b>1</b>&#x2019; source device from &#x201c;FRED&#x201d; to &#x201c;ROB&#x201d;. The network manager will query the network configuration database and examine each destination device that is subscribed to the multicast group on which the camera <b>1</b> source data is transmitted. The network manager <b>4</b> will update the view of any client that is displaying the tally text data of the ENIC_<b>1</b> source device. If any of these destination devices is a linked device (i.e. if it supplies the received data to a further source device), then it navigates to the corresponding linked source device and update all of its destinations, and so on. In the arrangement of <figref idref="DRAWINGS">FIG. 7</figref>, the destination device &#x2018;DME In&#x2019; of ENIC_DME <b>730</b> is linked to the source device &#x2018;DME Out&#x2019; on the same ENIC (i.e. linked to a different port on the same ENIC). The source device &#x2018;DME Out's&#x2019; tally text (E<b>1</b>) is concatenated to ROB to form ROB E<b>1</b> and all of the destinations currently receiving data from &#x2018;DME Out&#x2019; must be notified. The only destination device of ENIC_AB_SWITCH <b>740</b> is &#x2018;Switch A In&#x2019;. Since the switch is currently set to receive data from channel A (i.e. from camera <b>1</b>), &#x2018;Switch A In&#x2019; (but not &#x2018;Switch B In&#x2019;) is currently a linked destination device, since it supplies the &#x2018;Switch Out&#x2019; source device of (the same ENIC) ENIC_AB_SWITCH <b>740</b> and hence all destinations of &#x201c;Switch Out&#x2019; are updated. In this example, &#x2018;Switch Out&#x2019; only has one destination device and this is a pure destination &#x2018;Monitor&#x2019; on ENIC_AIR <b>750</b>. Thus, the tally of &#x2018;Monitor&#x2019; is updated with &#x2018;ROB_E<b>1</b>&#x2019; (which replaces &#x2018;FRED_E<b>1</b>&#x2019;). Hence the tally text change has been effectively propagated throughout the relevant nodes of the network.</p>
<p id="p-0143" num="0142">Next consider performing an AB switch so that instead of the output of &#x201c;camera <b>1</b>&#x201d; being displayed on the monitor, the output of &#x201c;camera <b>2</b>&#x201d; is instead displayed.</p>
<p id="p-0144" num="0143">In this case a request is sent to the network manager <b>4</b> to perform a seamless AB switch between destination devices &#x2018;Switch A In&#x2019; and &#x2018;Switch B In&#x2019; on ENIC_AB_SWITCH <b>740</b>. The network manager <b>4</b> consults the network configuration database to determine the current status of the ENICs associated with the proposed switch and provided that the network is correctly configured, the network manager initiates the change in the virtual circuit-switched connections necessary to effect the switch between the two source devices. The source device on ENIC <b>2</b> <b>720</b> from which destination device &#x2018;Switch B In&#x2019; on ENIC_AB_SWITCH <b>740</b> derives its data is associated with &#x2018;camera <b>2</b>&#x2019;. Using the network configuration database of the network manager <b>4</b> it is possible navigate to &#x2018;Camera <b>2</b>&#x2019; and update its status as being *ON AIR*. Similarly, &#x2018;Camera <b>1</b>&#x2019; can be designated as *OFF AIR* by navigating back through the devices from &#x2018;Switch A In&#x2019; when the switch AB configuration is changed such that the connection to &#x2018;Switch A In&#x2019; is active again. The correct tally text, which is the tally text associated with &#x2018;Camera <b>2</b>&#x2019;, i.e. &#x201c;JIM&#x201d;, can now be propagated to &#x2018;Monitor&#x2019; as already described to replace the currently displayed tally text &#x201c;FRED_E<b>1</b>&#x201d; or &#x201c;ROB_E<b>1</b>&#x201d; associated with &#x2018;Camera <b>1</b>&#x2019;.</p>
<p id="h-0030" num="0000">2. Sending Data to the Network <figref idref="DRAWINGS">FIGS. 6B and 6C</figref>.</p>
<p id="p-0145" num="0144">Referring to <figref idref="DRAWINGS">FIG. 6B</figref>, one channel of SDI video is received by a buffer <b>2408</b> from an SDI source such as a camera. The buffer <b>2408</b> stores the video temporarily whilst it is packetised by an RTP/FEC encoder <b>2410</b> and sent to a buffer <b>2412</b> for temporary storage. A tag generator <b>241</b> adds to the RTP packets a tag comprising flow and type data as shown in <figref idref="DRAWINGS">FIGS. 5A and 5B</figref>. A multiplexer <b>2416</b> receives the tagged packets from the tag generator and multiplexes the video packet with other video packets from similar video channels. The tag is defined by data produced by the CPU <b>26</b> in response to an AVSCP message received from the network controller <b>4</b>. As shown schematically in <figref idref="DRAWINGS">FIG. 5C</figref>, the packet switch directs the video packets to the network processor (net) or to the PCI <b>28</b> according to the flow data in the tag. Audio packets are similarly processed and routed.</p>
<p id="p-0146" num="0145">Where packets are to be routed to the network, a header generator <b>210</b> (<figref idref="DRAWINGS">FIG. 4</figref>) strips the tag from the packet and, based on the flow and type flags, generates an appropriate part of the network header which is appended to the packet.</p>
<p id="h-0031" num="0000">Proxy Video</p>
<p id="p-0147" num="0146">Referring to <figref idref="DRAWINGS">FIG. 8</figref>, proxy video is generated from SDI video as follows. A horizontal filter <b>70</b> applies a low-pass FIR filter to the SDI input data. The output of the horizontal filter is supplied as input to a horizontal subsampler <b>71</b>, which subsamples the SDI video horizontally to reduce the horizontal resolution. A vertical subsampler <b>72</b> reduces the vertical resolution of data received from the horizontal subsampler <b>71</b>. The resulting proxy video is then encoded by an encoder <b>74</b> to form RTP packets. There is one proxy video generator for each video channel. The proxy video is processed in the same way as the SDI video by the packetiser <b>24</b>, the packet switch <b>22</b> and the network processor <b>20</b>. The proxy video is always directed to the switching and routing client <b>6</b>, or one of the switching and routing clients <b>6</b> and <b>61</b>. Thus one proxy video stream is multicast in a first multicast group to which the client <b>6</b> and/or <b>61</b> joins and the SDI video (from which that proxy video is derived) is multicast in a second multicast group. The multicast group is defined by the class D IP address that identifies the data stream. In an alternative embodiment alternate fields of either the proxy video stream or the higher-resolution SDI video stream could be assigned to different multicast groups.</p>
<p id="p-0148" num="0147">In a currently preferred example of the invention, the proxy video comprises 180 samples&#xd7;144 lines (PAL) or 180 samples&#xd7;120 lines (NTSC) and 25 or 30 frames per second, with horizontal and vertical filtering. The number of bits per sample may be 24 bits (i.e. 3 colours, each 8 bits) or 16 bits (i.e. 3 colours, each 5 bits).</p>
<p id="h-0032" num="0000">Switching and Routing Client <b>6</b></p>
<p id="p-0149" num="0148">Referring to <figref idref="DRAWINGS">FIGS. 9 and 10</figref>, examples of graphical user interfaces (GUI) are shown. In this example, the GUI is provided by the switching and routing client <b>6</b>, which is a PC having a monitor, keyboard and mouse. However the GUI may be provided by the network manager <b>4</b> or by both the network manager <b>4</b> and the switching and routing client <b>6</b>. The GUI is an interface with underlying software that reacts to actions taken (for example mouse-clicks or keyboard entries) by the user using the GUI.</p>
<p id="h-0033" num="0000">Data Flows</p>
<p id="p-0150" num="0149">The GUI displays information about the configuration of the network provided to it by the network manager <b>4</b>. That information is provided using the CNMCP protocol as discussed above. The GUI also displays proxy video provided by the ENICs using the Real Time Transport protocol (RTP) described above. The proxy video is multicast across the network by the generating source group via the ENICs and to receive it the switching and routing client <b>6</b> joins the multicast groups of the proxy video streams. The routing of data is established using IGMP message commands. The GUI may be used to initiate control of a controllable source group such as a VTR or a destination group such as a video processor. The switching and routing client <b>6</b> unicasts control data directly to the ENIC associated with the CONTROL SOURCE GROUP in response to an action taken via GUI. Unicast control data is described above. The switching and routing client <b>6</b> receives status stream data which is multicast as described above when it joins the multicast group on which the status stream data is transmitted.</p>
<p id="p-0151" num="0150">When the GUI is used to initiate a routing of video from a source device to a destination device, it sends a CNMCP message to the network manager <b>4</b>. The network manager then sends an AVSCP message to the ENIC associated with the destination device to cause it to join the destination device to the required multicast group.</p>
<p id="p-0152" num="0151">The switching and routing client <b>6</b> is able to send IGMP join messages to the network. However, the switching and routing client <b>6</b> may also self-subscribe to a multicast group for communication of status, audio and proxy data streams only. The network manager controls client access to a multicast group corresponding to a video stream.</p>
<p id="h-0034" num="0000">The GUI</p>
<p id="p-0153" num="0152">The following description assumes that the GUI is operated in conventional manner using at least a pointing device such as a mouse and/or a keyboard. Alternatively, a keyboard interface having &#x201c;hot keys&#x201d; mapped to particular GUI commands or a touchscreen interface may be used to issue commands. The GUI of <figref idref="DRAWINGS">FIG. 9</figref> has three main display areas A<b>1</b>, A<b>2</b>, and A<b>3</b>.</p>
<p id="p-0154" num="0153">The area A<b>1</b> is a network management area displaying graphical representations of the groups (e.g. Cameras CAM<b>1</b> etc and VTRs VTR<b>1</b> etc) and their source devices (e.g. output CAM V<b>1</b> of CAM<b>1</b>). The graphical representations of the groups are displayed with the tally text (e.g. CAM <b>1</b>) and the source devices with their sub-tally text (e.g. CAM V<b>1</b>). The data for creating the display in the area A<b>1</b> is derived from the database held by the network manager and provided to the switching and routing client using CNMCP messages.</p>
<p id="p-0155" num="0154">The area A<b>2</b> is a source content review area which has a plurality of proxy video display areas or windows W<b>1</b> to W<b>10</b>. In this example there are 10 such windows but there can be any convenient number. The windows W<b>1</b> to W<b>10</b> display proxy video. In this example the proxy video to be displayed in the windows is chosen by dragging a source device from the network management area A<b>1</b> and dropping it into a chosen window. The display window also has an identifier that indicates the source group with which the currently displayed proxy video is associated. This drag and drop event causes the underlying software to send an IGMP join message to the network for the switching and routing client <b>6</b> to join the multicast group on which the proxy video associated with the selected source device is being transmitted.</p>
<p id="p-0156" num="0155">The windows have respective label areas L<b>1</b> to L<b>10</b> in which the GUI displays the appropriate tally text and/or sub tally text associated with the source device.</p>
<p id="p-0157" num="0156">The area A<b>3</b> is a routing review area comprising buttons B which act as switches. There are two rows of buttons in this example: a row of buttons associated with source groups and/or source devices and labelled with the appropriate tally text corresponding to the source and a row of destination buttons labelled with tally text corresponding to the associated destination. A user may select (via a mouse-click event, by keyboard entries or by touching the appropriate region of a touch-screen interface) on the GUI area A<b>3</b> a source button and one or more destination buttons and in response to such a selection communication paths are set up such that the source indicated by the selected source button is linked across the network to the selected destinations. In the example of <figref idref="DRAWINGS">FIG. 9</figref>, the highlighted buttons show CAM <b>1</b> is linked to MON<b>1</b>, VTR <b>2</b>, and DSP<b>2</b> and audio data associated with CAM<b>1</b> is linked to AU OUT <b>3</b>.</p>
<p id="p-0158" num="0157">By way of further explanation, assume a source CAM<b>1</b> is to be connected to MON<b>1</b>. When a switching and routing client <b>6</b> starts up, it connects to the network manager on a known port <b>4</b> and the network manager <b>4</b> sends information on the source devices, which are available to it. This allows the client to form a view of the network. This view of the network will be reflected to a user in the GUI display. Each device is delivered to the client with an ID, which the client will use to describe the device in subsequent communication with the Network Manager. A destination device may be a monitor for example. If the client wishes to route video from a source group (e.g. a VTR) then it will send to the network manager <b>4</b> a CNMCP Switch message that contains the IDs of the destination device and of the source device.</p>
<p id="p-0159" num="0158">If the client is not permitted to perform this operation then the Network Manager will send a CNMCP NAK message to the client in response. Otherwise it will process the request as follows.</p>
<p id="p-0160" num="0159">The network manager <b>4</b> will examine the network configuration database and determine which multicast IP address the video is being transmitted to. An AVSCP Switch message will be created that contains this IP address and it is sent to the ENIC, which connects to the Monitor. The ENIC embedded software sends an IGMP Join message to this IP address and sends an AVSCP ACK message back to the Network Manager. The ENIC should now be receiving the desired video data and will send it to the SDI output that connects the Monitor. Meanwhile, the network manager <b>4</b>, having received the AVSCP ACK message, will update the routing information in the database. The network manager <b>4</b> sends a CNMCP ACK message back to the client to indicate success.</p>
<p id="p-0161" num="0160">The GUI of <figref idref="DRAWINGS">FIG. 9</figref> preferably also includes, as shown, two further display areas M<b>1</b> and M<b>2</b> for showing the video displayed on play-out monitors MON <b>1</b> and MON<b>2</b>. In this example MON<b>2</b> has a dark border indicating that it shows the video currently being played out on LINE OUT <b>1</b> from for example VTR<b>1</b>. MON <b>1</b>, which has a lighter border, shows the video from CAM<b>1</b>, which has been preselected for play-out next. The video may be selected for display in the windows MON<b>1</b> and MON<b>2</b> by dragging and dropping proxy video from windows W<b>1</b> to W<b>10</b> into MON <b>1</b> and MON <b>2</b>. The video to be played out may be selected or switched over by clicking on MON<b>1</b> or MON<b>2</b>.</p>
<p id="p-0162" num="0161">The GUI of <figref idref="DRAWINGS">FIG. 9</figref> has an audio control display area AVD.</p>
<p id="p-0163" num="0162">The GUI also has virtual user controls C<b>1</b> to C<b>10</b> associated with the windows W<b>1</b> to W<b>10</b> and user controls CM associated with the MON<b>1</b> and <b>2</b> windows. Operation of such a user control causes the underlying software to send unicast control data UCD across the network directly to the source group from which the video in the associated window originates. Alternatively, or in addition, C<b>1</b> to C<b>10</b> can indicate the current status of the relevant device.</p>
<p id="p-0164" num="0163">The GUI of <figref idref="DRAWINGS">FIG. 10</figref> differs in minor ways from that of <figref idref="DRAWINGS">FIG. 9</figref>. It has proxy video display areas W<b>1</b> to W<b>8</b>, a network management area A<b>1</b> (shown only schematically) identical to that of <figref idref="DRAWINGS">FIG. 9</figref>, and monitor displays &#x2018;M<b>1</b>&#x2019; and &#x2018;M<b>2</b>&#x2019; in an area AS. The GUI of <figref idref="DRAWINGS">FIG. 10</figref> lacks the rows of source and destination buttons corresponding to the area A<b>3</b> in <figref idref="DRAWINGS">FIG. 9</figref>, but has two buttons M<b>1</b> and M<b>2</b> which act, similarly to the buttons of <figref idref="DRAWINGS">FIG. 9</figref>, as switches. The buttons M<b>1</b> and M<b>2</b> select for play-out video associated with an associated one of windows M<b>1</b> and M<b>2</b>. The currently played out video is displayed in the play-out window PO.</p>
<p id="p-0165" num="0164">The windows &#x2018;M<b>1</b>&#x2019; and &#x2018;M&#x2019;<b>2</b> have associated audio controls A<b>1</b> and A<b>2</b> for switching on and off an audio monitor to allow the user to monitor the audio associated with the video of windows M<b>1</b> and M<b>2</b>.</p>
<p id="p-0166" num="0165">The video to be displayed in windows M<b>1</b> and M<b>2</b> is dragged and dropped into those windows from the proxy video windows W<b>1</b> to W<b>8</b>. Such a drag and drop event causes the full resolution video (rather than proxy video) to be sent from the sources to full resolution monitors such as MON<b>1</b> and MON<b>2</b> in <figref idref="DRAWINGS">FIG. 1</figref> and to a video switcher such as D<b>8</b> in <figref idref="DRAWINGS">FIG. 1</figref> via ENIC NI<b>8</b>. Accordingly, the reduced-bandwidth proxy video assists the user in selection of which virtual circuit-switched connections to establish in the network and the data stored by the network manager <b>4</b> correlating each proxy video source with the full resolution data stream from which it was derived enables the data communication path to be set up in response to user initiated GUI events. Note that each source group for which a proxy video stream is generated is associated with at least two multicast IP addresses, the first multicast IP address being that on which the full-resolution video data is transmitted and the second multicast IP address being that on which the lower-resolution proxy video data is transmitted. Operating the button M<b>1</b> or M<b>2</b> causes the underlying software to send unicast control data UCD via the ENIC NI<b>8</b> to the video switcher causing the video switcher to switch between the two different data sources.</p>
<p id="p-0167" num="0166"><figref idref="DRAWINGS">FIG. 11</figref> schematically illustrates a GUI that presents the operator with an overview of the network configuration. The GUI comprises a first source panel <b>110</b> that displays active sources and inactive sources belonging to the IP network. Source groups such as cameras CAM<b>1</b>, CAM<b>2</b>, CAM <b>3</b> are represented. The video tape recorder group VTR<b>1</b> has separate audio VTR A <b>1</b>/<b>2</b> VTR A <b>3</b>/<b>4</b> and video VTR V<b>1</b> devices associated with it (i.e. three different input/output terminals), which are also displayed. Both the source type e.g. MIC <b>1</b> for a first microphone and the source name MIC A<b>1</b>/<b>2</b> that specifies the audio channel device are represented in the first source panel <b>110</b>. The source type is represented by an icon but the source name is not. An input may be selected by highlighting a desired source on the first source panel <b>110</b>, for example camera <b>1</b> (CAM <b>1</b>) is currently selected. A network review panel <b>112</b> comprises three sub-panels: a controllers sub-panel <b>114</b>, a source sub-panel <b>116</b> and a destination sub-panel. The connection between a controller, a source and one or more destinations is represented by colour-coded branch connections between entries in the three sub-panels. The current configuration shows that a first controller CONT <b>1</b> is controlling the source group CAM<b>1</b>, which in turn is providing data to six different destination devices i.e. two monitors MON<b>1</b>, MON<b>2</b>, VTR<b>1</b>, an audio output AUDIO OUT <b>3</b>, a digital signal processor DSP <b>2</b> and an output line LINE OUT <b>1</b>. The source sub-panel <b>116</b> provides pull-down menus for each source that provide more detailed information about devices e.g. audio and video data streams associated with that source. The relationship between a source and digital signal processors (DSP) is indicated by colour coding in the left hand margin of the source sub-panel <b>116</b>, for example in this case CAM <b>1</b> is associated with both DSP <b>2</b> and DSP <b>3</b>. The names of the sources e.g. CAM <b>1</b>, VTR <b>1</b>, MIC <b>1</b> are derived from the tally text. The GUI of <figref idref="DRAWINGS">FIG. 11</figref> is operable to display status information (e.g. on air/off-air) associated with source devices or destination devices of the network. This status information is supplied to the network by the corresponding device as status packets. The network manager <b>4</b> collates the status data in the network configuration database and the GUI representation is updated at regular intervals based on the updated information in the database.</p>
<p id="p-0168" num="0167"><figref idref="DRAWINGS">FIG. 12</figref> schematically illustrates a GUI which provides one way of indicating the connections between sources and destinations across the network. An area <b>120</b> depicts groups (e.g. CAM<b>1</b>) and the associated source devices (e.g. V<b>1</b>, V<b>2</b>) and area <b>122</b> denotes destinations. Each source group has a coloured bar <b>124</b> associated with it. Area <b>121</b> is a matrix which uses the coloured bars to indicate the connections between sources and destinations. The GUI shown in <figref idref="DRAWINGS">FIG. 12</figref> provides the user with an overview and an interface for displaying to an operator how the data is being routed across the network. The GUI comprises a routing review overview panel <b>121</b> at the top of the screen and a main routing review panel <b>122</b> comprising a source sub-panel <b>123</b> and a destination sub-panel <b>124</b>. The overview routing review panel <b>121</b> provides an easily comprehensible overview of the relationships between sources and destinations. This is achieved by colour-coded highlighting. This panel <b>121</b> currently indicates that source CAM<b>1</b> is connected to destinations MON<b>1</b>, MON<b>2</b>, MON<b>3</b>, VTR<b>2</b> and AUOUT<b>3</b>. By clicking on a given source area of the routing review overview panel <b>121</b>, that source and any destinations associated with it are highlighted. The sources sub-panel <b>124</b> provides an expanded view of the source in which both the source group e.g. CAM<b>1</b> and the associated device V<b>1</b> or V<b>2</b> are graphically represented. Similarly, the destinations sub-panel provides an expanded view of the destination groups. From the highlighted areas in the sources sub-panel <b>121</b> and the destinations sub-panel <b>124</b> it is apparent that CAM <b>1</b> device V<b>1</b> is connected to devices V<b>1</b> and V<b>2</b> of MON<b>1</b> for example. The destination sub panel <b>124</b> also provides a graphical colour coded matrix representation of source-destination connections.</p>
<p id="p-0169" num="0168">In the network arrangement having a GUI according to the examples of <figref idref="DRAWINGS">FIGS. 9 to 11</figref>, it is assumed that the user is able to view the complete configuration of the network, based on all available data stored in the network configuration database by the network manager <b>4</b>. However, in alternative arrangements, the network manager <b>4</b> is operable to store user-specific profiles according to which each user is assigned to a particular access-permissions level with regard to the portion of the network configuration that can be viewed and the virtual circuit-switched connections which that user is authorised to establish or delete. The allowed access-permissions level specified by the user-specific profile could be determined by the job of the user (for example, cameraman, editor, director, producer) or simply by a unique ID associated with the individual user. Thus for example, the director may have access enabled to view the current configuration of the entire network but no permission to alter the virtual circuit-switched connections whereas a cameraman could have access both to view and change the configuration or a subset of the network of which the camera that he operates forms a part.</p>
<p id="p-0170" num="0169"><figref idref="DRAWINGS">FIG. 13</figref> schematically illustrates a user interface provided on the network manager via which a user may manually enter configuration data. When a device is connected to the network, the user informs the network manager <b>4</b> that this is the case via the user interface. The interface comprises an ENIC ID dialog box, a PORT ID dialog box and a TALLY TEXT dialog box. The user enters into dialog boxes data required by the manager to determine the configuration of the network. The ENIC ID entry is a user-defined identifier e.g. ENIC<b>6</b>, the PORT ID entry specifies the ENIC port to which the device has been connected and the TALLY TEXT entry specifies the freely assignable label (referred to above as tally text) used as a source/destination identifier. The tally text ID is used in addition to (rather than as an alternative to) the source and destination identifiers ID discussed above.</p>
<heading id="h-0035" level="1">REFERENCES</heading>
<p id="p-0171" num="0000">
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0170">1, RTP Payload Format for BT.656 Video Encoding, D. Tynan, (Claddagh Films) RFC2431, October 1998</li>
</ul>
</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An audio/video network comprising:
<claim-text>a packet-switched network over which data including audio and/or video data packets can be carried;</claim-text>
<claim-text>at least one data source connected to the network and operable to assemble packetised data comprising multiple respective audio/video data streams at a first resolution and at a second resolution greater than the first resolution, and to transmit data packets carrying said multiple audio/video streams at the first resolution by multicast network transmission; and</claim-text>
<claim-text>at least one client connected to the network, being a data handling device for handling packetised audio/video data and being arranged to join a multicast group to receive the multiple audio/video streams at the first resolution,</claim-text>
<claim-text>wherein the client is associated with a graphical user interface configured in conjunction with a processor to select an audio/video stream, the processor is arranged to issue a unicast command to cause transmission of the selected audio/video stream at the second resolution from the source to the client, and the client is configured to synchronize the alignment of frames upon switching of frames from a stream at said first resolution to frames of the selected stream at the said second resolution in accordance with delay information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The network according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which the graphical user interface is operable to display a representation of a selected audio/video stream at the first resolution.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The network according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which the audio/video data at the second resolution are carried by multicast network transmission.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The network according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>a packet-based network switch; and</claim-text>
<claim-text>a network control arrangement coupled to the network switch, the network control arrangement being arranged to provide virtual circuit-switched connections for transfer of packetised data from a source to a destination via the network switch by:</claim-text>
<claim-text>a) assigning multicast group identifier to sources, so that a source launches packetised data onto the network as multicast data packets identified by a multicast group identifier, and</claim-text>
<claim-text>b) instructing a client to issue a request to the network switch to join the multicast group of a source so as to receive data packets from that source.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The network according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, in which the network control arrangement is arranged to store for each client the multicast group identifier from which it receives data.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The network according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, in which the network control arrangement is arranged to store for each client an identifier of the source from which it receives data.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The network according to <claim-ref idref="CLM-00006">claim 6</claim-ref>, in which the network control arrangement is arranged to store an identifier in respect of each client.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The network according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, in which each identifier comprises:
<claim-text>an identifier of a network interface by which that source or client is connected to the network; and</claim-text>
<claim-text>an identifier of the port of the interface by which the source or client is connected.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The network according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, in which the network control arrangement is arranged to store a network address for each network interface.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The network according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which the network is arranged to carry control data packets for controlling at least one of the data sources and/or clients.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The network according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which the audio/video streams at the first resolution comprise video streams at a first video resolution.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The network according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the client further comprises a buffer and depacketizer configured to depacketize data representing audio/video streams into frames of audio/video.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The network according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the packet-switched network includes a network manager that stores the delay information.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The network according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the network manager stores the delay information as a 32-bit line delay value that specifies a number of video lines by which to delay playout.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The network according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the client receives the multiple audio/video streams using the Internet Group Management Protocol (IGMP).</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The network according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the client receives the multiple audio/video streams in messages including an IP multicast header, a User Datagram Protocol (UDP) header, and a Real-Time Protocol (RTP) header.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The network according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the client sends the unicast command in a message including a non-multicast IP header and a User Datagram Protocol (UDP) header.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. An audio/video network comprising:
<claim-text>a packet-switched network over which data including audio and/or video data packets can be carried;</claim-text>
<claim-text>a plurality of data sources connected to the network and operable to assemble respective packetised data comprising audio/video data at a first resolution and at a second resolution greater than the first resolution, and to transmit data packets carrying said audio/video streams at the first resolution by multicast network transmission; and</claim-text>
<claim-text>at least one client connected to the network, being a data handling device for handling packetised audio/video data and being arranged to join multicast groups to receive respective audio/video streams at the first resolution from the plurality of data sources,</claim-text>
<claim-text>wherein the client is associated with a graphical user interface configured in conjunction with a processor to select an audio/video stream originating from a respective data source, the processor is arranged to issue a unicast command to the respective data source to cause transmission of the selected audio/video stream at the second resolution from said respective data source to the client, and the client is configured to synchronize the alignment of frames upon switching of frames from a stream at said first resolution to frames of the selected stream at the said second resolution in accordance with delay information.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
