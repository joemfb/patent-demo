<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627225-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627225</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>11449961</doc-number>
<date>20060609</date>
</document-id>
</application-reference>
<us-application-series-code>11</us-application-series-code>
<us-term-of-grant>
<us-term-extension>1904</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20130101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>3</main-group>
<subgroup>048</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>715781</main-classification>
<further-classification>715806</further-classification>
</classification-national>
<invention-title id="d2e53">Apparatus and methods for ensuring closure of displays</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4574364</doc-number>
<kind>A</kind>
<name>Tabata et al.</name>
<date>19860300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5060170</doc-number>
<kind>A</kind>
<name>Bourgeois et al.</name>
<date>19911000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5091866</doc-number>
<kind>A</kind>
<name>Takagi</name>
<date>19920200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5390295</doc-number>
<kind>A</kind>
<name>Bates et al.</name>
<date>19950200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>5487143</doc-number>
<kind>A</kind>
<name>Southgate</name>
<date>19960100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>5657463</doc-number>
<kind>A</kind>
<name>Bingham</name>
<date>19970800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>5734380</doc-number>
<kind>A</kind>
<name>Adams et al.</name>
<date>19980300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>5796403</doc-number>
<kind>A</kind>
<name>Adams et al.</name>
<date>19980800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6313880</doc-number>
<kind>B1</kind>
<name>Smyers et al.</name>
<date>20011100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>348552</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6509915</doc-number>
<kind>B2</kind>
<name>Berman et al.</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6630946</doc-number>
<kind>B2</kind>
<name>Elliott et al.</name>
<date>20031000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715781</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>6678867</doc-number>
<kind>B2</kind>
<name>Fong et al.</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>6724406</doc-number>
<kind>B1</kind>
<name>Kelley</name>
<date>20040400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>6873345</doc-number>
<kind>B2</kind>
<name>Fukuda et al.</name>
<date>20050300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>7386807</doc-number>
<kind>B2</kind>
<name>Cummins et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715797</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>7424644</doc-number>
<kind>B2</kind>
<name>Canning et al.</name>
<date>20080900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 34</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2005/0050148</doc-number>
<kind>A1</kind>
<name>Mohammadioun et al.</name>
<date>20050300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2006/0005085</doc-number>
<kind>A1</kind>
<name>Zunino et al.</name>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 47</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2006/0070008</doc-number>
<kind>A1</kind>
<name>Sauve et al.</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2006/0190838</doc-number>
<kind>A1</kind>
<name>Nadamoto</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715781</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2006/0200702</doc-number>
<kind>A1</kind>
<name>Canning et al.</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 38</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>2006/0271205</doc-number>
<kind>A1</kind>
<name>Abe</name>
<date>20061100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>700  9</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>2006/0271918</doc-number>
<kind>A1</kind>
<name>Abe</name>
<date>20061100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717131</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>2007/0156835</doc-number>
<kind>A1</kind>
<name>Pulkowski et al.</name>
<date>20070700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709207</main-classification></classification-national>
</us-citation>
</us-references-cited>
<number-of-claims>22</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>715764</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715781</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715806</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345418</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345530</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>6</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20070285408</doc-number>
<kind>A1</kind>
<date>20071213</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Adams</last-name>
<first-name>James S.</first-name>
<address>
<city>Phoenix</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Adams</last-name>
<first-name>James S.</first-name>
<address>
<city>Phoenix</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Honeywell International Inc.</orgname>
<role>02</role>
<address>
<city>Morristown</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Tillery</last-name>
<first-name>Rashawn</first-name>
<department>2174</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Devices, systems and methods for controlling displays in a multi-display environment are disclosed. An exemplary method may create a request to close a display in response to a request inputted to the display system. The method may generate a display monitoring thread in response to a request inputted to the display system. The method may determine if the display has closed and create a second request to close a display when the display has not closed.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="206.33mm" wi="163.91mm" file="US08627225-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="204.89mm" wi="152.65mm" file="US08627225-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="218.10mm" wi="142.41mm" orientation="landscape" file="US08627225-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="180.59mm" wi="125.73mm" orientation="landscape" file="US08627225-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="149.61mm" wi="123.27mm" orientation="landscape" file="US08627225-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="197.19mm" wi="161.54mm" file="US08627225-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="223.27mm" wi="162.73mm" file="US08627225-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0002" num="0001">The present invention relates to a display system, and more particularly, to a method for organizing software application displays by categories, enabling subsequent management of these displays based on the category.</p>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">In control room environments, operators depend on the control system to manage closure of process control graphic displays as new process control windows or displays are invoked. Operators depend on applications to close displays being replaced by newly invoked displays in a workspace environment. Applications may currently implement this closure via a request to the display being closed, in the form of a specific message (WM_CLOSE) sent to the display window. However, applications being replaced may in fact not close upon receipt of this message, due to various factors including errors on close or other implementation or functional issues. When applications fail to close as requested, problems ensue, including utilization of system resources, operator confusion and even failure of the control system to respond to further operational commands.</p>
<p id="p-0004" num="0003">Accordingly, an efficient and effective system is needed for ensuring that the display windows have properly closed and are not going to interfere with new displays or cause operator confusion. In addition, systems are needed to monitor the closure of the requested display and take additional action to ensure the display will close.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0005" num="0004">It is, therefore, an objective of the present invention to provide devices, systems, and methods to controlling and monitoring closure of displays in a multi-display environment. In one embodiment, an exemplary system creates a request to close a display in response to a request inputted to the display system. The system may generate a display monitoring thread in response to a request inputted to the display system. The system may determine if the display has closed and create a second request to close a display when the display has not closed.</p>
<p id="p-0006" num="0005">Embodiments of the invention may incorporate one or more of the following aspects. According to one exemplary embodiment, the system may determine if the display has closed for a second time and terminate the process associated with the display when the display has not closed for the second time. In another embodiment, the system may wait a predetermined amount of time prior to creating a second request to close a display when the display has not closed. In another embodiment, the system determines if the display has closed for a second time and creates a third request to close a display when the display has not closed. In yet another embodiment, the system may determine if the display has closed for a third time and terminate the process associated with the display when the display has not closed for the third time.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0007" num="0006">The above and other objectives and advantages of the present invention will be apparent upon consideration of the following detailed description, taken in conjunction with the accompanying drawings, in which like reference numbers refer to like parts throughout, and in which:</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 1</figref> shows a block diagram of a process control system of an exemplary embodiment in which the present invention can be utilized;</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 2</figref> shows a block diagram of common elements of each physical module of the process control system of <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 3</figref> shows a functional block diagram of a typical physical module of the process control system;</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 4</figref> shows a block diagram of a Workspace Manager Display System of an exemplary embodiment;</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 5</figref> is a flow chart illustrating a first exemplary method of the present invention.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 6</figref> is a flow chart illustrating a second exemplary method embodiment of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0014" num="0013">Before describing the method of the present invention, it will be helpful in understanding a system environment in which the invention is utilized. Referring to <figref idref="DRAWINGS">FIG. 1</figref>, there is shown a block diagram of a process control system <b>10</b> of the preferred embodiment in which the present invention can be found. The process control system <b>10</b> includes a plant control network <b>11</b>, and connected thereto is a data highway <b>12</b>, which permits a process controller <b>20</b>&#x2032; to be connected thereto. In the present day process control system <b>10</b>, additional process controllers <b>20</b>&#x2032; can be operatively connected to the plant control network <b>11</b> via a corresponding highway gateway <b>601</b> and a corresponding data highway <b>12</b>. A process controller <b>20</b>, an interface apparatus which includes many new additions, improvements, and features over the process controller <b>20</b>&#x2032;, is operatively connected to the plant control network <b>11</b> via a universal control network (UCN) <b>14</b> to a network interface module (NIM) <b>602</b>. In the preferred embodiment of the process control system <b>10</b> additional process controllers <b>20</b> can be operatively connected to the plant control network <b>11</b> via a corresponding UCN <b>14</b> and a corresponding NIM <b>602</b>. The process controllers <b>20</b>, <b>20</b>&#x2032; interface the analog input and output signals and digital input and output signals (A/I, A/O, D/I, and D/O respectively) to the process control system <b>10</b> from the variety of field devices (not shown) of the process being controlled which include valves, pressure switches, pressure gauges, thermocouples, . . . .</p>
<p id="p-0015" num="0014">The plant control network (or more simply the network) <b>11</b> provides the overall supervision of the controlled process in conjunction with the plant operator and obtains all the information needed to perform the supervisory function and includes an interface with the operator. The plant control network <b>11</b> includes a plurality of physical modules (or nodes), which include a universal operator station (US) <b>122</b>, an application module (AM) <b>124</b>, a history module (HM) <b>126</b>, a computer module (CM) <b>128</b>, and duplicates (backup or secondary) of these modules (and additional types of modules, not shown) as necessary to perform the required control/supervisory function of the process being controlled. Each of these physical modules is operatively connected to a local control network (LCN) <b>120</b>, which permits each of these modules to communicate with each other as necessary. The NIM <b>602</b> and HG <b>601</b> provide an interface between the LCN <b>120</b> and the UCN <b>14</b> and the LCN <b>120</b> and the data highway <b>12</b>, respectively.</p>
<p id="p-0016" num="0015">Physical modules <b>122</b>, <b>124</b>, <b>126</b>, <b>128</b>, . . . of network <b>11</b> of the preferred embodiment are of various specialized functional types. Each physical module is the peer, or equivalent, of the other in terms of right of access to the network's communication medium, or LCN <b>120</b>, for the purpose of transmitting data to other physical modules of network <b>11</b>.</p>
<p id="p-0017" num="0016">Universal operator station module (US) <b>122</b> of network <b>11</b> is a workstation for one or more plant operators.</p>
<p id="p-0018" num="0017">A history module (HM) <b>126</b> provides mass data storage capability. The history module <b>126</b> includes at least one conventional disk mass storage device, such as a Winchester disk, which disk storage device provides a large volume of nonvolatile storage capability for binary data. The types of data stored by such a mass storage device are typically trend histories, event histories, . . . or data from which such histories can be determined, data that constitutes or forms CRT type displays, copies of programs for the physical modules . . . .</p>
<p id="p-0019" num="0018">An application module (AM) <b>124</b> provides additional data processing capability in support of the process control functions performed by the controllers associated with the process control subsystem <b>20</b>, <b>20</b>&#x2032; such as data acquisition, alarming, batch history collection, and provide continuous control computational facilities when needed. The data processing capability of the application module <b>124</b> is provided by a processor (not shown) and a memory (not shown) associated with the module.</p>
<p id="p-0020" num="0019">Computer module (CM) <b>128</b> uses the standard or common units of all physical modules to permit a medium-to-large scale, general purpose data processing system to communicate with other physical modules of the network <b>11</b> and the units of such modules over the LCN <b>120</b> and the units of process control subsystems <b>20</b>, <b>20</b>&#x2032; via the highway gateway module <b>601</b>, and the NIA<b>4</b> <b>602</b>, respectively. Data processing systems of a computer module <b>128</b> are used to provide supervisory, optimization, generalized user program preparation, and execution of such programs in higher-level program languages. Typically, the data processing systems of a computer module <b>128</b> have the capability of communicating with other such systems by a communication processor and communication fines.</p>
<p id="p-0021" num="0020">The local control network <b>120</b> (LCN) is a high-speed, bit serial, dual redundant communication network that interconnects all the physical modules of plant control network <b>11</b>. LCN <b>120</b> provides the only data transfer path between the principal sources of data, such as highway gateway module <b>601</b>, application module <b>124</b>, and history module <b>126</b>, and principal users of such data, such as universal operator station module <b>122</b>, computer module <b>128</b>, and application module <b>124</b>. LCN <b>120</b> also provides the communication medium over which large blocks of data, such as memory images, can be moved from one physical module, such as history module <b>126</b>, to universal station module <b>122</b>. LCN <b>120</b> is dual redundant in that it consists of two coaxial cables that permit the serial transmission of binary signals over both cables.</p>
<p id="p-0022" num="0021">Referring to <figref idref="DRAWINGS">FIG. 2</figref>, there is shown a block diagram of the common elements of each physical module of the network <b>11</b> or the process control system <b>10</b>. Each of the physical modules includes a module central processor unit <b>38</b> and a module memory <b>40</b>, a random-access memory (not shown), and such additional controller devices, or units (not shown), which are configured to provide the desired functionality of that type of module, i.e., that of the operator station <b>122</b>, for example. The data-processing capabilities of each module's CPU <b>38</b> and module memory <b>40</b> create a distributed processing environment that provides for improved reliability and performance of network <b>11</b> and process control system <b>10</b>. The reliability of network <b>11</b> and system <b>10</b> is improved because, if one physical module of network <b>11</b> fails, the other physical modules will remain operational. As a result, the network <b>11</b> as a whole is not disabled by such an occurrence as would be the case in centralized systems. Performance is improved by this distributed environment in that throughput and fast operator response times result from the increased computer processing resources and the concurrency and parallelism of the data-processing capabilities of the system.</p>
<p id="p-0023" num="0022">As mentioned above, each physical module includes the BUS interface unit (BIU) <b>32</b>, which is connected to the LCN <b>120</b> by the transceiver <b>34</b>. Each physical module is also provided with the module BUS <b>36</b> which, in the preferred embodiment, is capable of transmitting 16 bits of data in parallel between the module CPU <b>38</b> and the module memory <b>40</b>. Other units, utilized to tailor each type of physical module to satisfy its functional requirements, are operatively connected to module BUS <b>36</b> so that each such unit can communicate with the other units of the physical module via its module BUS <b>36</b>. The BIU <b>32</b> of the physical module initiates the transmission of data over LCN <b>120</b>. In the preferred embodiment, all transmissions by a BIU <b>32</b> are transmitted over the coaxial cables which, in the preferred embodiment, form the LCN <b>120</b>.</p>
<p id="p-0024" num="0023">Referring to <figref idref="DRAWINGS">FIG. 3</figref> there is shown a functional block diagram of a typical physical module <b>122</b>, <b>124</b>, <b>126</b>, <b>128</b> of the plant control network <b>11</b>, and includes the BUS <b>32</b> and the transceiver <b>34</b>, which connects BIU <b>32</b> to the LCN <b>120</b>. BIU <b>32</b> is capable of transmitting binary data over LCN <b>120</b> and of receiving data from LCN <b>120</b>. Transceiver <b>34</b>, in the preferred embodiment, is transformer coupled to the LCN <b>120</b>. In the preferred embodiment, the LCN <b>120</b> is a dual-redundant coaxial cable with the capability of transmitting bit serial data. BIU <b>32</b> is provided with a very fast micro-engine <b>56</b>. In the preferred embodiment, micro-engine <b>56</b> is made up of bit slice components so that it can process eight bits in parallel and can execute a 24 bit microinstruction from its programmable read-only memory (PROM) <b>58</b>.</p>
<p id="p-0025" num="0024">Signals received from the LCN <b>120</b> are transmitted by transceiver <b>34</b> and receive circuitry <b>52</b> to receive FIFO register <b>54</b>. Micro-engine <b>56</b> examines the data stored in FIFO register <b>54</b> and determines if the information is addressed to the physical module. If the data is an information frame, the received data is transferred by direct memory access (DMA) write circuitry <b>66</b> by conventional direct memory access techniques to the physical module memory unit (MMU) <b>40</b> over module BUS <b>36</b>.</p>
<p id="p-0026" num="0025">Communication between MCPU processor <b>68</b>, a Motorola 68020 microprocessor in the preferred embodiment, and other functional elements of MCPU <b>38</b> is via local microprocessor BUS <b>39</b>. Module BUS interface element <b>41</b> provides the communication link between local BUS <b>39</b> and module BUS <b>36</b>. Processor <b>68</b> executes instructions fetched from either its local memory <b>43</b>, in the preferred embodiment an EPROM, or from MMU <b>40</b>. Processor <b>68</b> has a crystal-controlled clock <b>45</b> which produces clock pulses, or timing signals. Input/output (I/O) port <b>49</b> provides communication between MCPU <b>38</b> and equipment external to the physical module to permit program loading and the diagnosis of errors, or faults, for example.</p>
<p id="p-0027" num="0026">Each MCPU <b>38</b> includes a timing subsystem <b>48</b> which, in response to clock signals from module clock <b>45</b>, produces fine resolution, synchronization, and real-time, timing signals. Any timing subsystem <b>48</b>, which is provided with a timing subsystem driver <b>50</b>, has the capability of transmitting timing information to other physical modules over the LCN <b>120</b>. Another input to each timing subsystem <b>48</b> is timing information which is transmitted over LCN <b>120</b> and which is received through transceiver <b>34</b>, timing receiver <b>55</b>, and timing driver <b>57</b> of BIU <b>32</b>. Timing pulses from module power supply <b>59</b>, which are a function of the frequency of the external source of A.C. electric power applied to power supply <b>59</b>, are used by timing subsystem <b>48</b> to correct longer-term frequency drift of the clock pulses produced by clock <b>45</b>.</p>
<p id="p-0028" num="0027">Additional information of the BIU <b>32</b> can be found in U.S. Pat. No. 4,556,974. A more detailed description of the process control system <b>10</b> can be had by referring to U.S. Pat. No. 4,607,256. Additional information of the individual, common, functional blocks of the physical modules can be had by reference to U.S. Pat. No. 4,709,347, all of the above-identified patents being assigned to the assignee of the present application; and additional information of the process controller <b>20</b>&#x2032; can be had by referencing U.S. Pat. Nos. 4,296,464 5,796,403; 5,734,380.</p>
<p id="p-0029" num="0028">The addition of an interface apparatus which interfaces other systems to the process control system <b>10</b> described above and a modification to a graphics generator in the US <b>122</b> opens up the existing system, specifically the graphics interface, which includes designing-in the capability to readily permit nodes of differing designs to communicate to the network. In order to open up the graphics interface such that a display which is not on the LCN can be displayed onto the CRT <b>151</b> of the US <b>122</b>, there is included an interface to a graphics card of the US <b>122</b> from a co-processor. For more detailed information regarding the opening of the graphics interface, reference can be made to U.S. Pat. No. 5,386,503, entitled &#x201c;Method for Controlling Window Displays in an Open Systems Windows Environment,&#x201d; and to U.S. Pat. No. 5,530,844, entitled &#x201c;Method of Coupling Open Systems to a Proprietary Network,&#x201d; both Pat.s being assigned to the same assignee of the present application.</p>
<p id="p-0030" num="0029">The display system which incorporates the method of the present invention will now be described. Referring to <figref idref="DRAWINGS">FIG. 4</figref>, there is shown a block diagram of a Workspace Manager (WSM) Display System of the preferred embodiment. The Workspace Manager Display System, or more simply referred to as Workspace Manager <b>124</b>, is coupled to the LCN <b>120</b> of the process control system <b>10</b> in the preferred embodiment. The Workspace Manager (WSM) <b>124</b> is a personal computer (PC) which be purchased in the marketplace, and includes an LCN co-processor <b>127</b> coupled to the LCN <b>120</b> and to an internal BUS (PCBUS) <b>131</b> of the PC (i.e., of the WSM <b>124</b>). The LCN co-processor <b>127</b> includes the BIU <b>32</b>, the module BUS <b>36</b>, the module CPU <b>38</b>, and the module memory <b>40</b>, described above. This configuration permits the WSM <b>124</b> to communicate with the LCN <b>120</b> and the nodes connected thereto. The WSM <b>124</b> includes a graphics card <b>132</b> coupled to a display <b>125</b> and to the PC BUS <b>131</b>. An Ethernet card <b>133</b> permits the WSM <b>124</b> to communicate with foreign systems (i.e., systems not coupled to the LCN <b>120</b>). A microprocessor (&#x3bc;p) <b>134</b> of the PC is coupled to the PC BUS <b>131</b> and executes the Operating System and the Workspace Manager software. A WSM memory <b>135</b> is also coupled to the PC BUS <b>131</b> and stores the various information (including a configuration file, which will be described later) for use by the &#x3bc;p <b>134</b>. A keyboard <b>130</b> and a mouse interface <b>136</b> may be used for inputting commands to the WSM <b>124</b>.</p>
<p id="p-0031" num="0030">In the microprocessor <b>134</b> of WSM <b>124</b> there is operating a workspace management program (i.e., software), which behavior has been modified according to the following behavior. A thread to monitor the status of the display or application is spawned when a request is made to close the display, which in one embodiment occurs when the workspace management program determines that a newly invoked display is to replace an existing display. In another embodiment, a request for the display to close may be initiated by another program or by the operator. If the display fails to close within a nominal amount of time or the occurrence of a specified event, the thread may generate an additional request to close the display. In another embodiment, after a brief period of time, if the display has still not actually closed, the thread may generate a request to terminate the application, thereby ensuring closure of the display, and release of its resources. This protocol may be implemented as a standard procedure for all request display closing or based on a window specification file.</p>
<p id="p-0032" num="0031">A window specification file (sometimes referred to as a configuration file) is provided to the workspace management software&#x2014;The window specification may be a set of window properties which can be applied to one or more real-application windows during runtime. These properties may include instructions for generating a thread and the actions to be taken by the thread. A plurality of window specifications can be included in a given workspace configuration. At runtime, once the workspace manager associates a real-application window with a particular window specification, that specification's properties are applied and enforced for that application window. For example, a display may generate a thread that generates a second request to close after a set time specified in the specification properties. If the display still fails to close after a second set time, the specification properties may provide for a thread that terminates the application associated with the display.</p>
<p id="p-0033" num="0032">In the present invention, third-party applications can be dispositioned, not by category, but by title and process file (i.e., module) by matching expression in the configuration file. A third-party application may specify which displays should be ensured closure and what action to take to ensure closure. For example, some application associated with a failed display closure may be terminated in shortened time frame while more critical application may be provided additional time or additional requests to close the display prior, if at all, to terminating the application.</p>
<p id="p-0034" num="0033">In an exemplary embodiment, the features of the embodiment may be implemented in underlying control system, for example, the Honeywell's TotalPlant Network/TPN system or, in general, Honeywell's SafeView&#xae; control system. Embodiments may also be incorporated in the newer generation of Honeywell&#xae; control system, called Experion&#xae;. The embodiments of the invention are not limited to applications involving control systems. Features may be implemented in any multi-window environment, including an office laptop or desktop such that if a word processing application failed to close, features of the invention may enforce the displays closure.</p>
<p id="p-0035" num="0034">Referring to <figref idref="DRAWINGS">FIG. 5</figref>, a first exemplary method <b>500</b> may be implemented for control displays by the previously disclosed systems. A request to close the display is generated in response to a received request to the display system (block <b>502</b>). A display monitoring thread may also be generated in response to the request inputted to the display system (block <b>504</b>). The thread determines if the display has closed (block <b>506</b>). The thread may wait a predetermined amount of time instructed by the thread or an occurrence. The occurrence may be a second requested inputted to the display system. If the display has closed (&#x201c;Yes&#x201d; branch of block <b>506</b>), the thread may terminate (block <b>510</b>). If the display has not closed (&#x201c;No&#x201d; branch of block <b>506</b>), the thread may create or trigger the creation of a second request to close the display (block <b>508</b>). The process may go back to block <b>504</b> and generate another thread to continue monitoring the display (block <b>512</b>). In another example, the same thread may continue to monitor the display and continue to generate display closure requests if the display remains open.</p>
<p id="p-0036" num="0035">Referring to <figref idref="DRAWINGS">FIG. 6</figref>, a second exemplary method <b>600</b> may be implemented for control displays and take additional actions to ensure the closure of displays. A request to close the display is generated in response to a received request to the display system (block <b>602</b>). A display monitoring thread may also be generated in response to the request inputted to the display system (block <b>604</b>). The thread determines if the display has closed (block <b>606</b>). As previously discussed in the first exemplary method <b>500</b>, the thread may wait a predetermined amount of time instructed by the thread or an occurrence. If the display has closed (&#x201c;Yes&#x201d; branch of block <b>606</b>), the thread may terminate (block <b>610</b>). If the display has not closed (&#x201c;No&#x201d; branch of block <b>606</b>), the thread may create or trigger the creation of a second request to close the display (block <b>608</b>).</p>
<p id="p-0037" num="0036">If the display has closed (&#x201c;Yes&#x201d; branch of block <b>612</b>), the thread may terminate (block <b>610</b>). If the display has not closed (&#x201c;No&#x201d; branch of block <b>612</b>), the thread may create or trigger the creation of a request to terminate the application or process associated with the display (block <b>614</b>). Prior to triggering the termination of the application, the thread may be set to wait a second predetermined period of time that may be, for example, slightly shorter or longer than first predetermined period of time. In addition, the termination of the application may be triggered by the occurrence of an event. For example, when a second request is received to terminate the display by the display system, the thread may automatically cause the application to terminate even before a request to close the display is generated. The second exemplary method <b>600</b> helps to ensure the display closes and does not interfere with new or current display being used by the operator. Once the application has been terminated the thread may terminate (block <b>610</b>).</p>
<p id="p-0038" num="0037">The exemplary methods disclosed herein may be implemented in a variety of manners as previously discussed. The threads and instructions associated with the threads may be based on a windows configuration file, as a standard thread for every close display request, or a by a third party application that may generate the thread based on a windows configuration file. Persons skilled in the art will appreciate that the present invention can be practiced by other than the described examples and embodiments, which are presented for purposes of illustration rather than of limitation and that the present invention is limited only by the claims that follow.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method comprising:
<claim-text>associating a specified display with a selected one of multiple window specification files, each window specification file defining properties to be applied to one or more displays in a display system;</claim-text>
<claim-text>creating a first request to close the specified display in response to a request inputted to the display system;</claim-text>
<claim-text>generating a display monitoring thread associated with the specified display in response to the request inputted to the display system;</claim-text>
<claim-text>determining if the specified display has closed using the display monitoring thread;</claim-text>
<claim-text>when the specified display has not closed in response to at least the first request, generating a second thread that terminates an application associated with the specified display; and</claim-text>
<claim-text>terminating the display monitoring thread in response to a determination that the specified display has been closed;</claim-text>
<claim-text>wherein the selected window specification file defines the display monitoring thread and the second thread and actions to be taken by the display monitoring thread and the second thread.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>creating a second request to close the specified display; and</claim-text>
<claim-text>determining if the specified display has closed for a second time using the display monitoring thread;</claim-text>
<claim-text>wherein generating the second thread that terminates the application associated with the specified display comprises generating the second thread when the specified display has not closed for the second time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>waiting a predetermined amount of time between generating the display monitoring thread and determining if the specified display has closed.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising:
<claim-text>waiting a predetermined amount of time between generating the display monitoring thread and determining if the specified display has closed for the second time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>creating a second request to close the specified display;</claim-text>
<claim-text>determining if the specified display has closed for a second time using the display monitoring thread; and</claim-text>
<claim-text>creating a third request to close the specified display when the specified display has not closed for the second time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising:
<claim-text>determining if the specified display has closed for a third time using the display monitoring thread;</claim-text>
<claim-text>wherein generating the second thread that terminates the application associated with the specified display comprises generating the second thread when the specified display has not closed for the third time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A non-transitory machine-readable medium having instructions stored thereon for causing a machine to perform the acts of:
<claim-text>associating a specified display with a selected one of multiple window specification files, each window specification file defining properties to be applied to one or more displays in a display system;</claim-text>
<claim-text>creating a first request to close the specified display in response to a request inputted to the display system;</claim-text>
<claim-text>generating a display monitoring thread associated with the specified display in response to the request inputted to the display system;</claim-text>
<claim-text>determining if the specified display has closed using the display monitoring thread;</claim-text>
<claim-text>when the specified display has not closed in response to at least the first request, generating a second thread that terminates an application associated with the specified display; and</claim-text>
<claim-text>terminating the display monitoring thread in response to a determination that the specified display has been closed;</claim-text>
<claim-text>wherein the selected window specification file defines the display monitoring thread and the second thread and actions to be taken by the display monitoring thread and the second thread.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The machine-readable medium of <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising instructions for causing the machine to perform the acts of:
<claim-text>creating a second request to close the specified display; and</claim-text>
<claim-text>determining if the specified display has closed for a second time using the display monitoring thread;</claim-text>
<claim-text>wherein the instructions for causing the machine to generate the second thread that terminates the application associated with the specified display comprises instructions for causing the machine to generate the second thread when the specified display has not closed for the second time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The machine-readable medium of <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising instructions for causing the machine to perform the act of:
<claim-text>waiting a predetermined amount of time between generating the display monitoring thread and determining if the specified display has closed.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The machine-readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising instructions for causing the machine to perform the act of:
<claim-text>waiting a predetermined amount of time between generating the display monitoring thread and determining if the specified display has closed for the second time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The machine-readable medium of <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising instructions for causing the machine to perform the acts of:
<claim-text>creating a second request to close the specified display;</claim-text>
<claim-text>determining if the specified display has closed for a second time using the display monitoring thread; and</claim-text>
<claim-text>creating a third request to close the specified display when the specified display has not closed for the second time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The machine-readable medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising instructions for causing the machine to perform the act of:
<claim-text>determining if the specified display has closed for a third time using the display monitoring thread;</claim-text>
<claim-text>wherein the instructions for causing the machine to generate the second thread that terminates the application associated with the specified display comprises instructions for causing the machine to generate the second thread when the specified display has not closed for the third time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A device comprising:
<claim-text>a memory configured to store multiple window specification files, each window specification file defining properties to be applied to one or more displays in a display system; and</claim-text>
<claim-text>at least one processing unit configured to:
<claim-text>associate a specified display with a selected one of the window specification files;</claim-text>
<claim-text>create a first request to close the specified display in response to a request inputted to the display system, wherein the display system comprises at least one output monitor;</claim-text>
<claim-text>generate a display monitoring thread associated with the specified display in response to the request inputted to the display system;</claim-text>
<claim-text>determine if the specified display has closed using the display monitoring thread; and</claim-text>
<claim-text>generate a second thread that terminates an application associated with the specified display when the specified display has not closed in response to at least the first request;</claim-text>
</claim-text>
<claim-text>wherein the device is configured to terminate the display monitoring thread in response to a determination that the specified display has been closed; and</claim-text>
<claim-text>wherein the selected window specification file defines the display monitoring thread and the second thread and actions to be taken by the display monitoring thread and the second thread.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The device of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the at least one processing unit is further configured to:
<claim-text>create a second request to close the specified display; and</claim-text>
<claim-text>determine if the specified display has closed for a second time using the display monitoring thread;</claim-text>
<claim-text>wherein the at least one processing unit is configured to generate the second thread that terminates the application associated with the specified display when the specified display has not closed for the second time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The device of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the at least one processing unit is further configured to:
<claim-text>wait a predetermined amount of time between generating the display monitoring thread and determining if the specified display has closed.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The device of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the at least one processing unit is further configured to:
<claim-text>wait a predetermined amount of time between generating the display monitoring thread and determining if the specified display has closed for the second time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The device of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the at least one processing unit is further configured to:
<claim-text>create a second request to close the specified display;</claim-text>
<claim-text>determine if the specified display has closed for a second time using the display monitoring thread; and</claim-text>
<claim-text>create a third request to close the specified display when the specified display has not closed for the second time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The device of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the at least one processing unit is further configured to:
<claim-text>determine if the specified display has closed for a third time using the display monitoring thread;</claim-text>
<claim-text>wherein the at least one processing unit is configured to generate the second thread that terminates the application associated with the specified display when the specified display has not closed for the third time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The device of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the at least one processing unit is further configured to:
<claim-text>wait a second predetermined amount of time between generating the display monitoring thread and determining if the specified display has closed for a third time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>a specified number of requests to close the specified display are created prior to generating the second thread that terminates the application associated with the specified display; and</claim-text>
<claim-text>the specified number is based on a criticality of the application associated with the specified display.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the specified display is provided a specified amount of time to close prior to generating the second thread that terminates the application associated with the specified display; and</claim-text>
<claim-text>the specified amount of time is based on a criticality of the application associated with the specified display.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein associating the specified display with the selected window specification file comprises associating the specified display with the selected window specification file at runtime. </claim-text>
</claim>
</claims>
</us-patent-grant>
