<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627109-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627109</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>11396848</doc-number>
<date>20060403</date>
</document-id>
</application-reference>
<us-application-series-code>11</us-application-series-code>
<us-term-of-grant>
<us-term-extension>2395</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>11</main-group>
<subgroup>30</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>12</main-group>
<subgroup>14</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>713193</main-classification>
</classification-national>
<invention-title id="d2e53">Method of securing access to a hard disk drive of a computer system with an enhanced security mode</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5432950</doc-number>
<kind>A</kind>
<name>Sibigtroth</name>
<date>19950700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711163</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6467007</doc-number>
<kind>B1</kind>
<name>Armstrong et al.</name>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6957335</doc-number>
<kind>B2</kind>
<name>Foster et al.</name>
<date>20051000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713171</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7237081</doc-number>
<kind>B2</kind>
<name>Dahan et al.</name>
<date>20070600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711163</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>7340576</doc-number>
<kind>B1</kind>
<name>Therene et al.</name>
<date>20080300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711164</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7356707</doc-number>
<kind>B2</kind>
<name>Foster et al.</name>
<date>20080400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713189</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2003/0140205</doc-number>
<kind>A1</kind>
<name>Dahan et al.</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2004/0088559</doc-number>
<kind>A1</kind>
<name>Foster et al.</name>
<date>20040500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713193</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2004/0236874</doc-number>
<kind>A1</kind>
<name>Largman et al.</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2005/0193220</doc-number>
<kind>A1</kind>
<name>Little et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713201</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2006/0129848</doc-number>
<kind>A1</kind>
<name>Paksoy et al.</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713193</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2006/0184804</doc-number>
<kind>A1</kind>
<name>Varma et al.</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713193</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2007/0045425</doc-number>
<kind>A1</kind>
<name>Yoshida</name>
<date>20070300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2007/0118768</doc-number>
<kind>A1</kind>
<name>Wolford</name>
<date>20070500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>713193</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>13</number-of-drawing-sheets>
<number-of-figures>13</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60739858</doc-number>
<date>20051123</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20070118768</doc-number>
<kind>A1</kind>
<date>20070524</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Wolford</last-name>
<first-name>Jeff W.</first-name>
<address>
<city>Spring</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Wolford</last-name>
<first-name>Jeff W.</first-name>
<address>
<city>Spring</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Hewlett-Packard Development Company, L.P.</orgname>
<role>02</role>
<address>
<city>Houston</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Zand</last-name>
<first-name>Kambiz</first-name>
<department>2434</department>
</primary-examiner>
<assistant-examiner>
<last-name>Sanders</last-name>
<first-name>Stephen</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method of enhancing security of a storage component communicating with a host processor over a bus comprises: receiving from the bus by the storage component one of a security unlock command, set password command, security disable command and security erase command along with a password associated therewith; determining a security state in which the storage component is operating at reception of the received command; determining if an enhanced security mode is enabled at reception of the received command; and performing security steps of the received command based the determined security state and the determined security mode.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="102.36mm" wi="161.88mm" file="US08627109-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="119.55mm" wi="165.52mm" file="US08627109-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="265.77mm" wi="174.67mm" file="US08627109-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="190.42mm" wi="102.53mm" file="US08627109-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="191.69mm" wi="144.36mm" file="US08627109-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="181.53mm" wi="111.17mm" file="US08627109-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="250.53mm" wi="169.50mm" orientation="landscape" file="US08627109-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="222.08mm" wi="151.30mm" orientation="landscape" file="US08627109-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="244.60mm" wi="166.79mm" orientation="landscape" file="US08627109-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="239.18mm" wi="160.95mm" orientation="landscape" file="US08627109-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="214.55mm" wi="138.77mm" orientation="landscape" file="US08627109-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="256.79mm" wi="178.56mm" orientation="landscape" file="US08627109-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="262.30mm" wi="180.09mm" orientation="landscape" file="US08627109-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="260.60mm" wi="169.93mm" orientation="landscape" file="US08627109-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<p id="p-0002" num="0001">This application claims the benefit of U.S. Provisional Application No. 60/739,858, filed Nov. 23, 2005, and entitled &#x201c;Security Improvements for ATA HD Drives&#x201d;.</p>
<heading id="h-0001" level="1">CROSS REFERENCE TO RELATED PENDING APPLICATION</heading>
<p id="p-0003" num="0002">U.S. patent application Ser. No. 11/396,534, entitled&#x201c;Method of Securing Access to a Hard Disk Drive of a Computer System&#x201d;, assigned to the same assignee as the instant application and filed currently therewith.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0004" num="0003">Computer systems generally include a mass storage component, like a hard disk drive (HDD), for example, to store the operational and application software of one or more host processing units. IBM's AT bus has become a defacto standard for linking the host processing unit with the HDD and for providing the protocol for communication therebetween. AT is a trademark of the IBM Corporation. Specifications for such linking and communication over the AT bus are currently provided by the ANSI standard published as NCITS 397-2005 AT Attachment-7 and AT Attachment-7 With Packet Interface (ATA/ATAPI-7), Vol. 1,which is incorporated herein by reference in its entirety. These specifications may be located over the world wide web at the website &#x201c;www.incits.org&#x201d;. A security mode feature is included in the AT bus protocol standard, substantially in Section 4.7 thereof, which is intended to prevent unintended user access or unintended software, like a rogue or virus software, for example, which may have penetrated the host computer's defenses, from locking out the user from accessing software from the HDD.</p>
<p id="p-0005" num="0004">Section 4.7 of the ATA/ATAPI-7 specification sets forth a password system for restricting access to user software stored on the HDD. In this standard, various predetermined commands issued by the host processing unit or elements thereof permit setting a password and accessing the drive storage with the password. However, the standard has certain drawbacks, which will be described in greater detail below, which may permit the password to be scrambled or changed, under certain conditions, by unintended software, thus locking out the USER from accessing the mass storage component.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0006" num="0005">In accordance with one aspect of the present invention, a method of enhancing security of a storage component communicating with a host processor over a bus comprises: receiving from the bus by the storage component one of a security unlock command, set password command, security disable command and security erase command along with a password associated therewith; determining a security state in which the storage component is operating at reception of the received command; determining if an enhanced security mode is enabled at reception of the received command; and performing security steps of the received command based the determined security state and the determined security mode.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram schematic of an exemplary computer system comprising a storage component coupled to a host CPU over an AT bus;</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 2</figref> is a security mode state diagram of security mode features suitable for use in the computer system of <figref idref="DRAWINGS">FIG. 1</figref> for security of the storage component;</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 3</figref> is a flowchart of exemplary enhancement security software suitable for use in the storage component to ensure that any security command interrupted by a soft reset (SRST) will cause no Security state transition;</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 4</figref> is a flowchart of exemplary enhancement security software suitable for use in the storage component to ensure that any power on reset (POR) of the system initiated while in an original security state or during the execution of a command that started in the original security state will result in only predetermined post POR Security state transitions;</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart of exemplary enhancement security software suitable for use in the storage component to ensure that a hard reset command issued over the AT bus during a security command execution shall cause no Security state transitions;</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIGS. 6A and 6B</figref> compositely depict a flowchart of exemplary enhancement security software suitable for use in the storage component to handle a condition in which a Security Unlock command is issued over the AT bus <b>16</b> along with a Master password;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIGS. 7A and 7B</figref> compositely depict a flowchart of exemplary enhancement security software suitable for use in the storage component to handle a condition in which a Security Unlock command is issued over the AT bus <b>16</b> along with a User password; and</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIGS. 8</figref>, <b>8</b>A, <b>8</b>B and <b>8</b>C compositely depict a flowchart of exemplary enhancement security software suitable for use in the storage component to handle enhanced security mode conditions in which one of a Set Password command, a Security Unlock command, a Security disable command and a Security erase command along with an associated password are received from the AT bus by the storage component.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram schematic of an exemplary computer system suitable for embodying at least one aspect of the present invention. Referring to <figref idref="DRAWINGS">FIG. 1</figref>, the computer system includes at least one host central processing unit (CPU) and associated support logic which shall herein after be referred to collectively as CPU <b>10</b>. Interfaced to the CPU <b>10</b> in this exemplary embodiment are a random access memory (RAM) <b>12</b> and a non-volatile or read only memory (ROM) <b>14</b>. An AT bus <b>16</b>, which may be serial or parallel, may be used to interface computer components of the system to the host CPU <b>10</b>. The RAM <b>12</b> and ROM <b>14</b> may communicate with the host CPU <b>10</b> through the AT bus <b>16</b> or otherwise. The RAM <b>12</b> may be used by the computer system for storage of temporary data, and the non-volatile ROM <b>14</b> may be used to store initially executed operational software of the computer system, like a boot loader and basic input/output system (BIOS) software which is part of the operating system (OS) software of the computer system.</p>
<p id="p-0016" num="0015">Also, coupled to the host CPU <b>10</b> through the AT bus <b>16</b> is a mass storage component or device <b>18</b>, which may be a hard disk drive (HDD), for example. The HDD <b>18</b> may include: a controller <b>20</b> comprising for example a microprocessor and firmware for storing operational software thereof; and a hard disk storage media assembly <b>22</b> for storing user data. The controller <b>20</b> is coupled to the host CPU <b>10</b> over the AT bus <b>16</b> for controlling the data storage to and access from storage media <b>22</b> of the device <b>18</b>. Power may be supplied to the system from a power source <b>24</b> through an appropriate voltage regulator <b>26</b>. A power switch <b>28</b> may be used to switch power on and off to the system.</p>
<p id="p-0017" num="0016">In the exemplary embodiment, security mode software set forth by the ATA/ATAPI-7 standard specification referenced above may be stored in non-volatile memory of the HDD <b>18</b> as well as in the boot loader and BIOS software of the ROM <b>14</b>. A storage device which implements such a security mode feature includes the following minimum set of commands: SECURITY SET PASSWORD, SECURITY UNLOCK, SECURITY ERASE PREPARE, SECURITY ERASE UNIT, SECURITY FREEZE LOCK and SECURITY DISABLE PASSWORD. In operation, the security mode feature may be enabled by sending the command SECURITY SET PASSWORD and a USER password via the AT bus <b>16</b> to the controller <b>20</b> of storage device <b>18</b>. The operational software of the controller <b>20</b>, which may be stored in firmware thereof, responds to the set password command and stores the associated USER password in a designated non-volatile storage location of the device <b>18</b>. Once the security mode feature is enabled, user data may be accessed from the storage device <b>18</b> only upon sending the command SECURITY UNLOCK with either the USER password or an optional MASTER password via the AT bus <b>16</b> to the controller <b>20</b>.</p>
<p id="p-0018" num="0017">In response to the SECURITY SET PASSWORD, the controller <b>20</b> may set the security level to High or Maximum, which levels determine the device behavior when the optional Master password is used to unlock the device <b>18</b>. When the security level is set High, the USER password or the MASTER password may be used any place where a security password is required by the system. When the security level is set Maximum, the USER password may be used with any security command to perform the associated task, but there are restrictions on the use of the MASTER password. The SECURITY FREEZE LOCK command prevents changes to passwords, security states or security levels until a following power cycle, i.e. power off to power on. The purpose of this is to prevent unintended security changes on the system.</p>
<p id="p-0019" num="0018">A security mode state diagram of the security mode feature set forth in section 4.7 of the standard specification is shown in <figref idref="DRAWINGS">FIG. 2</figref>. In the present embodiment, the state diagram of <figref idref="DRAWINGS">FIG. 2</figref> includes seven security states which are as follows: SEC<b>0</b>, SEC<b>1</b>, SEC<b>2</b>, SEC<b>3</b>, SEC<b>4</b>, SEC<b>5</b> and SEC<b>6</b>, and is used to define the conditions of transitions between the states of the security mode feature. For example, the security state SEC<b>0</b> is caused to be entered from states SEC<b>1</b> and SEC<b>2</b> by the controller <b>20</b> when the device <b>18</b> is powered down with the security mode feature set disabled as illustrated by arrowed lines <b>40</b> (from SEC<b>1</b>) and <b>42</b> (from SEC<b>2</b>). When the device <b>18</b> is powered up and security mode is disabled, the security state SEC<b>1</b> is caused to be entered from state SECO by the controller <b>20</b> as illustrated by the arrowed line <b>44</b>. Also, when the controller receives a hardware RESET command over the AT bus <b>16</b>, the device will be caused to transition to state SEC<b>4</b> from state SEC<b>5</b> as illustrated by arrowed line <b>46</b> or caused to remain in state SEC<b>4</b> if already in state SEC<b>4</b> as illustrated by arrowed line <b>48</b>. Similarly, other transitions between states are defined in <figref idref="DRAWINGS">FIG. 2</figref> and illustrated by their respective arrowed lines.</p>
<p id="p-0020" num="0019">The following paragraphs describe exemplary drawbacks when implementing the Security Mode feature set as described in the ATA-7 specification as illustrated in <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="p-0021" num="0020">With security disabled, if a security freeze lock is not performed, any software may issue a Security Set Password with an unknown/random password, rendering the storage component <b>18</b> inaccessible. Therefore, it is recommended to have the system BIOS of ROM <b>14</b> issue via the host CPU <b>10</b> the SECURITY FREEZE LOCK command before turning execution over to the boot loader of ROM <b>14</b>. After the SECURITY FREEZE LOCK command has been issued, the storage component <b>18</b> is in the SEC<b>2</b>: Security disabled/Frozen state.</p>
<p id="p-0022" num="0021">In this state, a drawback of the Security Mode feature arises when a condition of a &#x201c;hard&#x201d; reset or an asynchronous loss of signal occurs over a serial AT attachment (SATA) bus. In SATA, the hard reset may be caused by the signal COMRESET, and in a parallel AT attachment (PATA) bus, the hard reset may be caused by the signal HRESET. This condition will normally cause a hardware reset to be generated, forcing the storage component <b>18</b> to transition from the SEC<b>2</b> state to the SEC<b>1</b>: Security disabled/not Frozen state. While in the SEC<b>1</b> state the storage component <b>18</b> may accept a Security Set Password command.</p>
<p id="p-0023" num="0022">A possible scenario of this drawback is as follows: the system BIOS issues via the host CPU <b>10</b> the SECURITY FREEZE LOCK command during power-on self test (POST) (SEC<b>2</b>: Security disabled/Frozen). While, in the OS environment, an unintended or rogue software may effect the following steps:</p>
<p id="p-0024" num="0023">1) Generate a hard reset via the SATA bus Scontrol register or via the PATA bus PCI registers (causes a SEC<b>2</b>:SEC<b>1</b> security state transition),</p>
<p id="p-0025" num="0024">2) Issue a Security Set Password with a random password (causes a SEC<b>1</b>:SEC<b>5</b> security state transition)</p>
<p id="p-0026" num="0025">3) Issue a Security Freeze Lock command (SEC<b>5</b>:SEC<b>6</b> security state transition)</p>
<p id="p-0027" num="0026">4) Generate a hard reset which causes immediate inaccessibility (e.g. blue screen in a Windows&#x2122; environment). If this command is not set, the computer system will be prevented from booting up after the next cold start. Under these conditions, the User is no longer able to access data on the storage component <b>18</b>.</p>
<p id="p-0028" num="0027">If security is enabled and a SECURITY FREEZE LOCK command has not been issued, any unintended software may issue a Security Set Password with an unknown/random or rogue password, rendering the storage component <b>18</b> inaccessible to the User in the future. Therefore, it is recommended that the system BIOS in ROM <b>14</b> to issue via the host CPU <b>10</b> the SECURITY FREEZE LOCK command before turning execution over to the boot loader in ROM <b>14</b>. After the SECURITY FREEZE LOCK command has been issued with security disabled, the storage component <b>18</b> is in the SEC<b>6</b>: Security disabled/Frozen state.</p>
<p id="p-0029" num="0028">Also, with security enabled and no FREEZE LOCK command, the condition of a hard reset or asynchronous loss of signal occurring on the SATA bus may cause a generation of a hardware reset in the storage component <b>18</b>. This reset causes the storage component <b>18</b> to transition from the SEC<b>5</b>: Unlocked/Not Frozen state to the SEC<b>4</b>: Security enabled/Locked state. While in state SEC<b>4</b>, the storage component <b>18</b> may no longer accept user data access commands via the host CPU <b>10</b> or otherwise. Thus, the USER no longer has access to the storage device <b>18</b>.</p>
<p id="p-0030" num="0029">A possible scenario of this drawback is as follows: the security feature is enabled by setting the User password and optionally the Master password. Under this condition, the system BIOS issues via the host CPU <b>10</b> the SECURITY UNLOCK command with the password during POST (causing a SEC<b>4</b>:SEC<b>5</b> security state transition). Thus, while in the operating system (OS) environment, an unintended or rogue software may generate a hard reset via the SATA bus Scontrol register (causing a SEC<b>6</b>:SEC<b>4</b> security state transition). In this state, the User is no longer able to access the storage component <b>18</b> , causing the OS software to &#x201c;crash&#x201d; (e.g. blue screen for Windows&#x2122; operating system).</p>
<p id="p-0031" num="0030">Another drawback of the Security Mode feature arises in the SEC<b>2</b> state when a hard reset or an asynchronous loss of signal occurs over the SATA bus, which will normally cause the generation of a hardware reset, which may force the storage component <b>18</b> to transition from the SEC<b>2</b> state to the SEC<b>1</b>: Security disabled/not Frozen state. While in the SEC<b>1</b> state the storage component <b>18</b> may accept a Security Set Password command.</p>
<p id="p-0032" num="0031">To alleviate the conditions of the foregoing described drawbacks, enhancement software may be incorporated into the firmware of controller <b>20</b> to ensure that any security command interrupted by a soft reset (SRST) will cause no Security state transition. An example of such software is illustrated by the steps or blocks of the flowchart of <figref idref="DRAWINGS">FIG. 3</figref>. Referring to <figref idref="DRAWINGS">FIG. 3</figref>, one way of detecting a soft reset is to monitor the device control register (DCR) in the controller <b>20</b> (see <figref idref="DRAWINGS">FIG. 1</figref>) by the step <b>100</b>. If the SRST bit of the DCR is toggled as determined by step <b>102</b>, then the &#x201c;in progress&#x201d; command will be interrupted by step <b>104</b>. After the interrupt task is completed, the software will return the required reset status appropriate for that type of software reset. Thereafter, execution will be returned to the security state (SEC#) prior to the issue of the interrupted command by step <b>108</b>, thus, ensuring that no unintended security state transition will occur.</p>
<p id="p-0033" num="0032">One possible scenario of the above described enhancement is when the storage component <b>18</b> is in the Security state SEC<b>4</b>: Security Enabled/Locked and the host CPU <b>10</b> issues via the AT bus <b>16</b> a Security Erase Prepare command and a Security Erase command along with the proper password. Under these conditions, the storage component <b>18</b> receives the commands and password from the AT bus <b>16</b> and enters a busy state in response to the Security Erase command. Software on the host CPU <b>10</b> will time out and send a Soft Reset to the storage component <b>18</b> over the AT bus <b>16</b>. As a result of the enhancement, the storage component <b>18</b> responds to the Soft Reset by performing a sequence of steps including sending back to the host CPU <b>10</b> via the AT bus <b>16</b> a not BSY signal and RDY (appropriate status) signal (step <b>106</b>) and returning to SEC<b>4</b> (prior security state) at the end of the Soft Reset sequence (step <b>108</b>). In this condition, the USER is not allowed access to the data on the device <b>18</b> without a password and not allowed access to the device <b>18</b> without a complete erasure.</p>
<p id="p-0034" num="0033">Software may be also incorporated into the firmware of controller <b>20</b> to ensure that any power on reset (POR), caused by a system power interruption, for example, initiated while in an original security state or during the execution of a command that started in the original security state will result in only the post POR Security state transitions of the following table:</p>
<p id="p-0035" num="0034">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="49pt" align="center"/>
<colspec colname="2" colwidth="133pt" align="center"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Original State</entry>
<entry>Post POR State</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>SEC1</entry>
<entry>SEC1</entry>
</row>
<row>
<entry/>
<entry>SEC2</entry>
<entry>SEC1</entry>
</row>
<row>
<entry/>
<entry>SEC4</entry>
<entry>SEC4</entry>
</row>
<row>
<entry/>
<entry>SEC5</entry>
<entry>SEC4</entry>
</row>
<row>
<entry/>
<entry>SEC6</entry>
<entry>SEC4</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0036" num="0035">An example of such software is illustrated by the steps or blocks of the flowchart of <figref idref="DRAWINGS">FIG. 4</figref>. Referring to <figref idref="DRAWINGS">FIG. 4</figref>, in steps <b>110</b> and <b>112</b>, it is determined if a power on reset is initiated during the execution of a command. If not, then the command will continue to be executed in step <b>114</b>. However, if a POR is initiated, then in block <b>116</b>, the original state of the command being executed or otherwise is determined. If execution of the command has been completed as determined by step <b>118</b>, then upon power return, the software will go to the final state of the command transition in step <b>120</b>. Otherwise, upon power up, the software will be diverted in step <b>122</b> to the security state designated by the table above which may be stored in the firmware of the controller <b>20</b> as a look-up table, for example.</p>
<p id="p-0037" num="0036">Software may be also incorporated into the firmware of controller <b>20</b> to ensure that a hard reset command issued over the AT bus <b>16</b> during a security command execution shall cause no Security state transitions. An example of this software is illustrated by the flowchart of <figref idref="DRAWINGS">FIG. 5</figref>. Referring to <figref idref="DRAWINGS">FIG. 5</figref>, steps <b>130</b> and <b>132</b> determine if a hard reset command is issued and received by the controller <b>20</b> during its execution of a security command. If no hard reset is issued, the command will continue to be executed by controller <b>20</b> in step <b>134</b>. Otherwise, any security command interrupted by the hard reset command will cause the controller <b>20</b> to interrupt the outstanding command in step <b>136</b> and to return the required status appropriate for that type of reset to the host CPU <b>10</b> via the AT bus <b>16</b> in step <b>138</b>. At the end of the hard reset sequence, the controller <b>20</b> will return to the security state prior to the issuance of the interrupted command, i.e. original security state, in step <b>140</b>.</p>
<p id="p-0038" num="0037">Additional software may be also incorporated into the firmware of controller <b>20</b> to handle the condition in which a Security Unlock command is issued over the AT bus <b>16</b> along with a Master Password. The intent is to make the Security Unlock command behave like the Security Erase command so that there are fewer unique security decisions which will decrease the likelihood of an implementation issue. An example of such software is illustrated by the flowchart of <figref idref="DRAWINGS">FIGS. 6A and 6B</figref>. Referring to <figref idref="DRAWINGS">FIGS. 6A and 6B</figref>, in step <b>150</b>, the controller <b>20</b> receives a Security Unlock command and a Master Password over the AT bus <b>16</b> and, in step <b>151</b>, the controller <b>20</b> determines if an expire counter has been decremented to a predetermined number which is zero (0)in the present example. In the present embodiment, the expire counter is decremented each time the received and set passwords do not match which will become more evident from the following description. However, it is understood that the expire counter could just as well be counted up to a predetermined number without deviating from the broad principles of the present invention.</p>
<p id="p-0039" num="0038">If the predetermined number of the expire counter has not been reached, the controller <b>20</b> next determines in which security state it is operating. If operating in security state SEC<b>1</b> (Disabled state&#x2014;see <figref idref="DRAWINGS">FIG. 2</figref>) as determined by decisional step <b>152</b>, then the controller <b>20</b> will compare the received Master Password with the most recently set Master Password which is stored in a designated memory location of the storage device <b>18</b>. If the two passwords compare or match as determined by the decisional step <b>154</b>, the controller <b>20</b> will respond by sending to the host CPU <b>10</b> via the AT bus <b>16</b> a status/error code of 50/00 hex in step <b>156</b>. Otherwise, the controller <b>20</b> will respond by sending to the host CPU <b>10</b> via the AT bus <b>16</b> a status/error code of 51/04 hex in step <b>158</b>. The program will exit after executing either step <b>156</b> or <b>158</b>.</p>
<p id="p-0040" num="0039">If the controller <b>20</b> is operating in security state SEC<b>2</b> or SEC<b>6</b> (Frozen States&#x2014;see <figref idref="DRAWINGS">FIG. 2</figref>) during reception of the Security Unlock command and Master Password as determined by step <b>160</b>, it will respond by sending to the host CPU <b>10</b> via the AT bus <b>16</b> a status/error code of 51/04 hex in step <b>162</b>. Controller <b>20</b> will also respond by sending to the host CPU <b>10</b> via the AT bus <b>16</b> the status/error code of 51/04 hex in step <b>162</b> if the expire counter has reached its predetermined number. The program will exit after executing step</p>
<p id="p-0041" num="0040">If the controller <b>20</b> is operating in security state SEC<b>4</b> (Locked state&#x2014;see <figref idref="DRAWINGS">FIG. 2</figref>) during reception of the Security Unlock command and Master Password as determined by step <b>164</b> and the current User Password level is set to Maximum as determined by decisional step <b>166</b>, it will respond by decrementing an expire counter thereof in step <b>168</b> and sending to the host CPU <b>10</b> via the AT bus <b>16</b> the status/error code of 51/04 hex in step <b>169</b>. If the current User Password level is not set to Maximum as determined by decisional step <b>166</b>, the controller <b>20</b> will compare the received and set passwords in step <b>170</b>. If there is a match in passwords, the controller <b>20</b> will respond by changing the security state SEC<b>4</b> to SEC<b>5</b> in step <b>171</b> and sending to the host CPU <b>10</b> via the AT bus <b>16</b> a status/error code of 50/00 hex in step <b>172</b>. On the other hand, if there is no match in passwords, program execution will be diverted to step <b>168</b>. Controller <b>20</b> will exit execution of the program after executing either step <b>169</b> or step <b>172</b>.</p>
<p id="p-0042" num="0041">If the controller <b>20</b> is operating in security state SEC<b>5</b> (Unlocked state&#x2014;see <figref idref="DRAWINGS">FIG. 2</figref>) during reception of the Security Unlock command and Master Password as determined by step <b>173</b> and the current User Password level is set to Maximum, it will respond by sending to the host CPU <b>10</b> via the AT bus <b>16</b> a status/error code of 51/04 hex in step <b>174</b>, i.e. all security unlock attempts with a master password shall result in a 51/04 hex status/error response. If the controller <b>20</b> is operating in security state SEC<b>5</b> (Unlocked state&#x2014;see <figref idref="DRAWINGS">FIG. 2</figref>) during reception of the Security Unlock command and Master Password as determined by step <b>173</b> and the current User Password level is set to High, it will divert software execution to step <b>154</b> in which the received and set Master Passwords are compared. If the two passwords match as determined by step <b>154</b>, then the controller <b>20</b> will respond in step <b>156</b> by sending a status/error digital code of 50/00 hex over the AT bus <b>16</b> to the host CPU <b>10</b>. Otherwise, the controller <b>20</b> will respond in step <b>158</b> by sending a status/error digital code of 51/04 hex over the AT bus <b>16</b> to the host CPU <b>10</b>. If the controller <b>20</b> is not in any security state as determined by the steps <b>152</b>, <b>160</b>, <b>164</b> and <b>173</b>, then it will respond to the reception of the Security Unlock command and Master Password, by exiting execution of the software.</p>
<p id="p-0043" num="0042">Further software may be also incorporated into the firmware of controller <b>20</b> to handle the condition in which a Security Unlock command is issued over the AT bus <b>16</b> along with a User Password. The intent is to limit the actual password comparisons to only times when an expire counter is used or the proper password has already been given to limit the ability for rogue software to do unbounded password testing. An example of such software is illustrated by the flowchart of <figref idref="DRAWINGS">FIGS. 7A and 7B</figref>. Referring to <figref idref="DRAWINGS">FIGS. 7A and 7B</figref>, in step <b>180</b>, the controller <b>20</b> receives the Security Unlock command and a User Password via the AT bus <b>16</b>. Thereafter, in step <b>181</b>, the controller <b>20</b> determines if the expire counter has reached its predetermined number, e.g. zero. If not, the controller <b>20</b> determines if it is in the security state SEC<b>1</b> in step <b>182</b>. If in SEC<b>1</b>, the controller <b>20</b> will not perform a password comparison in step <b>183</b> and instead, will respond to the Security Unlock command by sending in step <b>184</b> a status/error code of 51/04 hex over the AT bus <b>16</b> to the host CPU <b>10</b>. Also, if the expire counter has reached its predetermined number as determined by step <b>181</b>, the controller <b>20</b> will respond by sending in step <b>184</b> the status/error code of 51/04 hex over the AT bus <b>16</b> to the host CPU <b>10</b>.</p>
<p id="p-0044" num="0043">If the controller <b>20</b> is in the security state SEC<b>5</b> as determined by step <b>185</b>, it will perform a comparison of the received and set User passwords in step <b>186</b> and, if the two passwords match, it will send in step <b>187</b> a status/error code of 50/00 hex over the AT bus <b>16</b> to the host CPU <b>10</b>. Otherwise, if the two passwords do not match, the controller <b>20</b> will decrement the expire counter in step <b>188</b><i>a </i>and will send in step <b>188</b><i>b </i>a status/error code of 51/04 hex over the AT bus <b>16</b> to the host CPU <b>10</b>.</p>
<p id="p-0045" num="0044">If the controller <b>20</b> is in the security state SEC<b>4</b> as determined by step <b>189</b>, it will perform a comparison of the received and set User passwords in step <b>190</b> and, if the two passwords match, it will change the security state from SEC<b>4</b> to SEC<b>5</b> in step <b>191</b> and send in step <b>192</b> a status/error code of 50/00 hex over the AT bus <b>16</b> to the host CPU <b>10</b>. Otherwise, if the two passwords do not match, the controller <b>20</b> will send in step <b>193</b> a status/error code of 51/04 hex over the AT bus <b>16</b> to the host CPU <b>10</b> and decrement the expire counter in step <b>194</b>. If the controller is in either security state SEC<b>2</b> or SEC<b>6</b> as determined by step <b>196</b>, it will respond by sending in step <b>198</b> a status/error code of 51/04 hex over the AT bus <b>16</b> to the host CPU <b>10</b>. If the controller <b>20</b> is not in any security state as determined by the steps <b>182</b>, <b>185</b>, <b>189</b>, and <b>196</b>, then it will respond to the reception of the Security Unlock command and User Password, by exiting execution of the software.</p>
<p id="p-0046" num="0045">Still further software may be also incorporated into the firmware of controller <b>20</b> to handle certain conditions under support for enhanced security. An example of such software is illustrated by the flowchart of <figref idref="DRAWINGS">FIGS. 8</figref>, <b>8</b>A, <b>8</b>B and <b>8</b>C. Referring to <figref idref="DRAWINGS">FIGS. 8</figref>, <b>8</b>A, <b>8</b>B and <b>8</b>C, if the controller <b>20</b> includes software to support an enhanced security mode, then if it receives a command, it first checks the expire counter in step <b>200</b> to determine if it has reached the predetermined number. For example, if the expire counter has been decremented to zero, the controller <b>20</b> will abort all security commands for all security states in step <b>201</b>. If the expire counter has not been decremented to zero, the controller <b>20</b> determines the received command and diverts program execution to the appropriate set of instructions or steps.</p>
<p id="p-0047" num="0046">For example, if a Set Password command and its associated password are determined to have been received in step <b>202</b>, then program execution is diverted to the steps illustrated in the flowchart of <figref idref="DRAWINGS">FIG. 8A</figref>; if a Security Unlock command and its associated password are determined to have been received in step <b>204</b>, then program execution is diverted to the steps illustrated in the flowchart of <figref idref="DRAWINGS">FIG. 8B</figref>; and if a Security Disable or Security Erase command and its associated password are determined to have been received in step <b>206</b>, then program execution is diverted to the steps illustrated in the flowchart of <figref idref="DRAWINGS">FIG. 8C</figref>. While the flowchart of <figref idref="DRAWINGS">FIG. 8C</figref> will be used for program execution of both Security Disable and Security Erase commands, there is a difference in the program execution between the two which will be explained in greater detail below.</p>
<p id="p-0048" num="0047">For the reception of the Set Password command, the flowchart of <figref idref="DRAWINGS">FIG. 8A</figref> starts with determining in step <b>208</b> if an enhanced security flag has been set which is indicative of the enhanced security mode being enabled. If not set, it is determined if an enhanced security bit is set in step <b>210</b>. If not set, the program will perform appropriate security state transitions and rules according to the standard security mode, i.e. not enhanced mode, in step <b>212</b>. Otherwise, if the enhanced bit is determined to be set in step <b>210</b>, the enhanced security flag will be set and saved in step <b>214</b>, thus enabling the enhanced security mode. Once the enhanced security flag is set, it will remain set over all power cycles and resets until disabled or cleared by the program as will become more evident by the following description. When the controller <b>20</b> is in the enhanced security mode, it shall require all data payload security commands to have the enhanced security bit set and shall enforce all enhanced security rules.</p>
<p id="p-0049" num="0048">If it is determined that the enhanced security flag is set in step <b>208</b>, it is determined if an enhanced security bit is set in step <b>216</b>. If not set, the program will abort the received command and respond by sending a status/error code of 51/01 hex to the host CPU <b>10</b> via the AT bus <b>16</b> in step <b>218</b>. If the enhanced bit is set as determined by step <b>216</b> or after execution of step <b>214</b>, it is determined if the controller <b>20</b> is in security state SEC<b>1</b> as determined by step <b>220</b>. If it is determined in step <b>220</b> that the controller <b>20</b> is in any other state than SEC<b>1</b>, then the software will be diverted to step <b>218</b> wherein the command will be aborted and controller <b>20</b> will send a status/error code of 51/04 hex over the AT bus <b>16</b> to the host CPU <b>10</b>. The intent of this enhancement is to always require the host CPU <b>10</b> to disable the security mode with a password before a new password may be installed.</p>
<p id="p-0050" num="0049">If the controller is in state SEC<b>1</b>, then the controller <b>20</b> will save the received password in step <b>222</b>. Thereafter, if a User password is supplied as determined by step <b>224</b>, the security state of controller <b>20</b> is changed from SEC<b>1</b> to SEC<b>5</b> in step <b>226</b>. Whether or not a User password is supplied, the controller <b>20</b> will send the status code of 50/00 hex to the host CPU <b>10</b> via the AT bus <b>16</b> in step <b>228</b>.</p>
<p id="p-0051" num="0050">If a Security Unlock command and associated password are received by the controller <b>20</b> in step <b>204</b>, then program execution is diverted to the flowchart of <figref idref="DRAWINGS">FIG. 8B</figref> which starts with determining in step <b>230</b> if the enhanced security flag has been set. If not set, it is determined if the enhanced security bit is set in step <b>232</b>. If not set, the program will perform appropriate security state transitions and rules according to the standard security mode, i.e. not enhanced mode, in step <b>234</b>. Otherwise, if the enhanced bit is determined to be set in step <b>232</b>, the command will be aborted and a status/error code of 51/04 hex will be sent to the host CPU <b>10</b> via the AT bus in step <b>236</b>. If it is determined that the enhanced security flag is set in step <b>230</b>, it is determined if the enhanced security bit is set in step <b>238</b>. If not set, the program will also abort the received command and respond by sending a status/error code of 51/01 hex to the host CPU <b>10</b> via the AT bus <b>16</b> in step <b>236</b>.</p>
<p id="p-0052" num="0051">If the enhanced bit is determined to be set by step <b>238</b>, it is next determined in step <b>239</b> if the controller <b>20</b> is in the state SEC<b>4</b>. If the controller <b>20</b> is in any other state than SEC<b>4</b> as determined by step <b>239</b>, then software execution may be diverted to step <b>236</b> wherein the command will be aborted and controller <b>20</b> will send a status/error code of 51/04 hex over the AT bus <b>16</b> to the host CPU <b>10</b>. Otherwise, if the controller <b>20</b> is determined to be in SEC<b>4</b> by step <b>239</b>, the program will check to determine if the user level is set to maximum and the Master password was received in step <b>241</b>. If so, the expire counter will be decremented in step <b>240</b> and thereafter, step <b>236</b> is executed. Otherwise, the received and set passwords are compared in step <b>242</b> and if there is determined to be a password match, then the security state is changed from SEC<b>4</b> to SEC<b>5</b> in step <b>244</b> and a status/error code of 50/00 hex will be sent to the host CPU <b>10</b> via the AT bus <b>16</b> in step <b>246</b>. If the passwords do not match in step <b>242</b>, the controller <b>20</b> will decrement the expire counter in step <b>240</b> and abort the command and send a status/error code of 51/04 hex to the host CPU <b>10</b> via the AT bus <b>16</b> in step <b>236</b> and exit program execution.</p>
<p id="p-0053" num="0052">If a Security Disable or Security Erase command is received along with its associated password by the controller <b>20</b> in step <b>206</b>, then program execution is diverted to the flowchart of <figref idref="DRAWINGS">FIG. 8C</figref> which starts with determining in step <b>250</b> if the enhanced security flag has been set. If not set, it is determined if the enhanced security bit is set in step <b>252</b>. If not set, the program will perform appropriate security state transitions and rules according to the standard security mode, i.e. not enhanced mode, in step <b>254</b>. Otherwise, if the enhanced bit is determined to be set in step <b>252</b>, the command will be aborted and a status/error code of 51/04 hex will be sent to the host CPU <b>10</b> via the AT bus in step <b>256</b>. If it is determined that the enhanced security flag is set in step <b>250</b>, it is determined if the enhanced security bit is set in step <b>258</b>. If not set, the program will also abort the received command and respond by sending a status/error code of 51/01 hex to the host CPU <b>10</b> via the AT bus <b>16</b> in step <b>256</b>.</p>
<p id="p-0054" num="0053">If the enhanced bit is determined to be set by step <b>258</b>, it is next determined in step <b>260</b> if the controller <b>20</b> is in the state SEC<b>5</b> for the Security Disable command or in either state SEC<b>4</b> or SEC<b>5</b> for the Security Erase command. If the controller <b>20</b> is in any other state than SEC<b>5</b> for the Security Disable command or than state SEC<b>4</b> or SEC<b>5</b> for the Security Erase command as determined by step <b>260</b>, then software execution may be diverted to step <b>256</b> wherein the command will be aborted and controller <b>20</b> will send a status/error code of 51/04 hex over the AT bus <b>16</b> to the host CPU <b>10</b>.</p>
<p id="p-0055" num="0054">Otherwise, if the controller <b>20</b> is determined to be in state SEC<b>5</b> for the Security Disable command or in either state SEC<b>4</b> or SEC<b>5</b> for the Security Erase command by step <b>260</b>, the received and set passwords are compared in step <b>262</b>. There are different password matching rules for the Security Disable and Security Erase commands in the present embodiment. For the Security Disable command, if the user level is set to &#x201c;high&#x201d;, either User or Master passwords may be used, but if the user level is set to &#x201c;maximum&#x201d;, then only the User passwords may be used. For the Security Erase command, either the User or the Master passwords may be used independent of which user level, &#x201c;high&#x201d; or &#x201c;maximum&#x201d;, is set.</p>
<p id="p-0056" num="0055">If there is determined to be a password match in step <b>262</b>, then the security state is changed from SEC<b>5</b> or SEC<b>4</b> to SEC<b>1</b> in step <b>264</b>. Thereafter, the security enhanced flag will be cleared in step <b>266</b> and the controller <b>20</b> will send a status code of 50/00 hex to the host CPU <b>10</b> via the AT bus <b>16</b> in step <b>268</b> and exit program execution. If no password match is determined by step <b>262</b>, the program will abort the received command and respond by sending a status/error code of 51/01 hex to the host CPU <b>10</b> via the AT bus <b>16</b> in step <b>270</b>. Thereafter, the expire counter will be decremented in step <b>272</b> and the program will be exited.</p>
<p id="p-0057" num="0056">While aspects of the present invention have been presented herein above in connection with a variety of embodiments, it is understood that all such embodiments are merely described by way of example. Accordingly, the present invention and all of its aspects should not be limited in any way by the various embodiments presented above, but rather construed in breadth and broad scope in accordance with the recitation of the claims appended hereto.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. Method of enhancing security of a storage component communicating with a host processor over a bus, said method comprising:
<claim-text>receiving from the bus by the storage component one of a security unlock command, set password command, security disable command and security erase command along with a password associated therewith;</claim-text>
<claim-text>determining a security state in which the storage component is operating at reception of the received command;</claim-text>
<claim-text>determining if an enhanced security mode is enabled at reception of the received command; and</claim-text>
<claim-text>performing security steps of the received command based on the determined security state and the determined security mode.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> including if the set password command is received and the enhanced security mode is enabled, performing the security steps associated with the set password command if the determined security state is a first security state, and aborting the set password command and sending a first predetermined status/error code to the host processor if the determined security state is other than the first security state.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref> including if the set password command is received, the enhanced security mode is enabled, and the determined security state is the first security state, saving the received password; changing from the first security state to a fifth security state if said received password is a user password; and
<claim-text>sending a second predetermined status/error code to the host processor.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> including if the set password command is received and the enhanced security mode is not enabled, enabling the enhanced security mode if an enhanced security bit is set in the storage component.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> including if the security unlock command is received and the enhanced security mode is enabled, performing the security steps of the security unlock command if the determined security state is a fourth security state; and aborting the security unlock command and sending a first predetermined status/error code to the host processor if the determined security state is other than the fourth security state.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref> including if the security unlock command is received and the enhanced security mode is enabled, altering the count of an expire counter if the determined security state is other than the fourth security state.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref> including if the security unlock command is received, the enhanced security mode is enabled, and the determined security state is the fourth security state, comparing the received password with a preset password; if said passwords match, changing from the fourth security state to a fifth security state and sending a second predetermined status/error code to the host processor; and if said passwords do not match, aborting the security unlock command and sending the first predetermined status/error code to the host processor.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> including if the security disable command is received and the enhanced security mode is enabled, performing the security steps of the received command if the determined security state is a fifth security state; and aborting the received command and sending a first predetermined status/error code to the host processor if the determined security state is other than the fifth security state.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref> including if the security disable command is received, the enhanced security mode is enabled, and the determined security state is the fifth security state, comparing the received password with a preset password; if the passwords match, changing from the fifth security state to a first security state, disabling the enhanced security mode, and sending a second predetermined status/error code to the host processor; and if the passwords do not match, aborting the received command, sending the first predetermined status/error code to the host processor and altering a count of an expire counter.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> including if the security erase command is received and the enhanced security mode is enabled, performing the security steps of the received command if the determined security state is one of a fourth and fifth security states; and aborting the received command and sending a first predetermined status/error code to the host processor if the determined security state is other than one of the fourth and fifth security states.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref> including if the security erase command is received, the enhanced security mode is enabled, and the determined security state is one of the fourth and fifth security states, comparing the received password with a preset password; if the passwords match, changing from one of the fourth and fifth security states to a first security state, disabling the enhanced security mode, and sending a second predetermined status/error code to the host processor; and if the passwords do not match, aborting the received command, sending the first predetermined status/error code to the host processor and altering a count of an expire counter.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> including the steps of: determining if an expire counter is altered to a predetermined count; and aborting all received security commands for all security states if the expire counter is determined to be at said predetermined count.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. Method of enabling an enhanced security mode for securing access to a storage component communicating with a host processor over a bus, said method comprising:
<claim-text>receiving from the bus by the storage component a set password command;</claim-text>
<claim-text>determining if an enhanced security bit is set; and</claim-text>
<claim-text>enabling an enhanced security mode if the enhanced security bit is set.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref> including determining a security state in which the storage component is operating when the enhanced security mode is enabled; and performing security steps of a received command in the enhanced security mode based on the determined security state.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref> including performing security steps of a received command in a non-enhanced security mode if the enhanced security bit is not set.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref> including the steps of: determining if an expire counter is altered to a predetermined count; and aborting all received security commands for all security states if the expire counter is determined to be at said predetermined count.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. Method of disabling an enhanced security mode for securing access to a storage component communicating with a host processor over a bus, said method comprising:
<claim-text>receiving from the bus by the storage component one of a security disable command and a security erase command and an associated password therewith;</claim-text>
<claim-text>determining if an enhanced security bit is set in the enhanced security mode;</claim-text>
<claim-text>if the enhanced security bit is set, determining a security state in which the storage component is operating in the enhanced security mode;</claim-text>
<claim-text>if the storage component is determined to be operating in a predetermined state, comparing the received password with a preset password; and</claim-text>
<claim-text>disabling the enhanced security mode if the received and set passwords match.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref> including if the enhanced security bit is not set in the enhanced security mode, aborting the received command and sending a predetermined status code over the bus to the host processor.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref> including if the enhanced security bit is set in the enhanced security mode and the storage component is determined not to be operating in the predetermined state, aborting the received command and sending a predetermined status code over the bus to the host processor.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref> including if the enhanced security bit is set in the enhanced security mode, the storage component is determined to be operating in the predetermined state, but the received and preset passwords do not match, aborting the received command and sending a predetermined status code over the bus to the host processor.</claim-text>
</claim>
</claims>
</us-patent-grant>
