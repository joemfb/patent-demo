<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627449-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627449</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13039550</doc-number>
<date>20110303</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>153</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>29</main-group>
<subgroup>06</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>726 15</main-classification>
<further-classification>726  2</further-classification>
<further-classification>726  3</further-classification>
<further-classification>713150</further-classification>
<further-classification>713151</further-classification>
<further-classification>709227</further-classification>
<further-classification>709228</further-classification>
<further-classification>709229</further-classification>
<further-classification>709230</further-classification>
</classification-national>
<invention-title id="d2e53">Dynamic tunneling over virtual private network connections based on network conditions</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6438127</doc-number>
<kind>B1</kind>
<name>Le Goff et al.</name>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370389</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6438603</doc-number>
<kind>B1</kind>
<name>Ogus</name>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6463061</doc-number>
<kind>B1</kind>
<name>Rekhter et al.</name>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370392</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6543005</doc-number>
<kind>B1</kind>
<name>Bamford</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6898729</doc-number>
<kind>B2</kind>
<name>Virolainen et al.</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7072309</doc-number>
<kind>B2</kind>
<name>Xie et al.</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>7478427</doc-number>
<kind>B2</kind>
<name>Mukherjee et al.</name>
<date>20090100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 15</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>7716731</doc-number>
<kind>B2</kind>
<name>Short et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>8316226</doc-number>
<kind>B1</kind>
<name>Kshirsagar et al.</name>
<date>20121100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713150</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2004/0221004</doc-number>
<kind>A1</kind>
<name>Chalfin et al.</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2006/0206705</doc-number>
<kind>A1</kind>
<name>Khosravi</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2007/0094723</doc-number>
<kind>A1</kind>
<name>Short et al.</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 14</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00013">
<othercit>Diab, Wafaa Bou, Samir Tohme, and Carole Bassil. &#x201c;Critical VPN Security Analysis and New Approach for Securing VoIP Communications over VPN Networks.&#x201d; WMuNeP'07, Oct. 22, 2007, Chania, Crete Island, Greece. Copyright 2007 ACM 978-1-59593-804-6/07/0010.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00014">
<othercit>J. Salowey et al., &#x201c;Transport Layer Security (TLS) Session Resumption without Server-Side State&#x201d;, Network Working Group, RFC 5077, Jan. 2008, pp. 1-21.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>18</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>726 15</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>5</number-of-drawing-sheets>
<number-of-figures>5</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120227102</doc-number>
<kind>A1</kind>
<date>20120906</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Parla</last-name>
<first-name>Vincent</first-name>
<address>
<city>North Hampton</city>
<state>NH</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Short</last-name>
<first-name>Todd</first-name>
<address>
<city>Sudbury</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Tardif</last-name>
<first-name>Marc</first-name>
<address>
<city>Franklin</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Brownhill</last-name>
<first-name>David</first-name>
<address>
<city>Acton</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Parla</last-name>
<first-name>Vincent</first-name>
<address>
<city>North Hampton</city>
<state>NH</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Short</last-name>
<first-name>Todd</first-name>
<address>
<city>Sudbury</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Tardif</last-name>
<first-name>Marc</first-name>
<address>
<city>Franklin</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Brownhill</last-name>
<first-name>David</first-name>
<address>
<city>Acton</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Edell, Shapiro &#x26; Finnan, LLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Cisco Technology, Inc.</orgname>
<role>02</role>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Arani</last-name>
<first-name>Taghi</first-name>
<department>2438</department>
</primary-examiner>
<assistant-examiner>
<last-name>Victoria</last-name>
<first-name>Narciso</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Techniques are provided for transmitting data securely across virtual private network (VPN) connections. A first VPN connection is initiated between a first device and a second device. The second device selects a first communication protocol to be used for the first VPN connection with the first device. The first device generates session identification data associated with the first VPN connection and sends the session identification data to the second device over the first VPN. The second device receives the session identification data and stores it. The second device determines when the first VPN connection has been disrupted. The second device then selects a second communication protocol and initiates a second VPN connection using the second communication protocol with the first device. The second device transmits the session identification data to the first device, and the first device associates the second VPN connection with the first VPN connection using session identification data.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="182.03mm" wi="182.03mm" file="US08627449-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="192.62mm" wi="181.10mm" file="US08627449-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="139.02mm" wi="160.87mm" file="US08627449-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="137.92mm" wi="155.87mm" file="US08627449-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="254.08mm" wi="180.17mm" file="US08627449-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="184.40mm" wi="155.02mm" file="US08627449-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">TECHNICAL FIELD</heading>
<p id="p-0002" num="0001">The present disclosure relates to network sessions, and more particularly to maintaining network connectivity between devices.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">Virtual Private Networks (VPNs) permit secure access to network resources and allow for network users to connect to a network remotely through firewalls and proxies. Network clients are able to connect through firewalls and proxies because VPNs use the same protocols that are used for Internet access.</p>
<p id="p-0004" num="0003">VPN connections between users and the network can be disrupted, degrading communications between the user and the network resources. Re-establishing the VPN connection, when possible, can be helpful. For example, when wireless devices (e.g., mobile computers, cellular phones, personal data assistant devices, etc.) roam between wireless networks or switch from wired to wireless networks, re-establishing the VPN connection allows users to maintain continuous data communications with the network. Frequently, however, VPN connections cannot be re-established due to failures of the communication protocols that are used to establish the connectivity.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. 1</figref> shows an example of a network environment featuring multiple virtual private network (VPN) connections between a client device and a gateway device within a VPN.</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 2</figref> is an example block diagram of the gateway device that is configured with protocol agile connection management process logic to associate multiple distinct VPN connections having different communication protocols.</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 3</figref> is an example of a block diagram of the client device that is configured with VPN client process logic to initiate multiple VPN connections with multiple communication protocols.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIGS. 4A and 4B</figref> illustrate a flow chart depicting operations of the gateway device and the client device in accordance with the techniques described herein.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DESCRIPTION OF EXAMPLE EMBODIMENTS</heading>
<p id="p-0009" num="0008">Overview</p>
<p id="p-0010" num="0009">Techniques are provided for transmitting data securely across virtual private network (VPN) connections. A first VPN connection is initiated between a first device and a second device. The second device selects a first communication protocol to be used for the first VPN connection with the first device. The first device generates session identification data associated with the first VPN connection and sends the session identification data to the second device over the first VPN. The second device receives the session identification data and stores it. The second device determines when the first VPN connection has been disrupted. The second device then selects a second communication protocol and initiates a second VPN connection using the second communication protocol with the first device. The second device transmits the session identification data to the first device, and the first device associates the second VPN connection with the first VPN connection using session identification data. In one example, the first device is a gateway device and the second device is a client device.</p>
<p id="p-0011" num="0010">Example Embodiments</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 1</figref> shows an example of a network environment <b>10</b> featuring a gateway device <b>20</b> configured to manage network connectivity between a client device <b>30</b> and a destination device <b>40</b>. The gateway device <b>20</b> may reside in a network <b>50</b> that comprises a wide area network, e.g., the Internet, and any number of local area networks. In general, in network environment <b>10</b>, client device <b>30</b> can access the gateway device <b>20</b> in network <b>50</b> through one of a plurality of VPN connections. For example, in <figref idref="DRAWINGS">FIG. 1</figref>, client device <b>30</b> can connect with the gateway device <b>20</b> in network <b>50</b> using a first VPN connection <b>70</b>. In the instance that communication using the first VPN connection <b>70</b> is disrupted, the client device <b>30</b> can initiate a second VPN connection <b>80</b> with the gateway device <b>20</b>. The client device <b>30</b> may be any device with network connectivity, including a personal computer (desktop or laptop), hand-held computing device (Smartphone or tablet computer), virtual machine running in a cloud computing environment, etc.</p>
<p id="p-0013" num="0012">The client device <b>30</b> may connect to the network <b>50</b> using, for example, a wired connection through a wired local area network <b>90</b>. In another form, if the client device <b>30</b> has wireless network connectivity capabilities, the client device <b>30</b> may wirelessly connect with a wireless (local or wide area) access network <b>100</b>, which is in turn connected to the network <b>50</b>, to establish a VPN connection with the gateway device <b>20</b>. In either case, either or both of the first and second VPN connections <b>70</b> and <b>80</b> may be by way of the wired local area network <b>90</b> or wireless access network <b>100</b>. Furthermore, the client device <b>30</b> may roam from the wired network <b>90</b> to the wireless network <b>100</b> while a VPN connection is active.</p>
<p id="p-0014" num="0013">As shown in <figref idref="DRAWINGS">FIG. 1</figref>, one or more VPN connections or tunnels are established between client device <b>30</b> and gateway device <b>20</b>. The VPN connections are established using secure protocols that enable secure data communication between the client device <b>30</b> and gateway device <b>20</b> and ultimately between the client device <b>30</b> and the destination device <b>40</b>. The client device <b>30</b> may initiate the first VPN connection <b>70</b> and the second VPN connection <b>80</b>. For example, the client device <b>30</b> may first initiate the first VPN connection <b>70</b> using a first secure communication protocol and, in response to a disruption of the first VPN connection <b>70</b>, may initiate the second VPN connection <b>80</b> using a second secure communication protocol.</p>
<p id="p-0015" num="0014">For example, in <figref idref="DRAWINGS">FIG. 1</figref>, the client device <b>30</b> may initiate the first VPN connection <b>70</b> with gateway device <b>20</b> using a Secure Socket Layer (SSL) protocol. If the first VPN connection <b>70</b> is disrupted, the client device <b>30</b> may initiate the second VPN connection <b>80</b> with the gateway device <b>20</b> using an Internet Key Exchange (IKE) protocol or IKE version 2 (IKEv2) protocol in the Internet Protocol Security (IPSec) suite for secure IP communications between the client device <b>30</b> and the gateway device <b>20</b>. In general, the VPN connections <b>70</b> and <b>80</b> operate as secure control channels for data transmission between an authenticated client device <b>30</b>, gateway device <b>20</b> and ultimately the destination device <b>40</b>.</p>
<p id="p-0016" num="0015">In one example, the client device <b>30</b> may use a Hypertext Transfer Protocol Secure (HTTPS) connection, which may be a hypertext transfer protocol (HTTP) with an SSL or Transport Layer Security (TLS) protocol. This HTTPS connection allows for encrypted communication of data (for example, secure IP communications) between the client device <b>30</b> and the gateway device <b>20</b>. In one example, the client device <b>30</b> may be a client device configured with Cisco AnyConnect&#x2122; network connectivity capabilities to enable an HTTPS connection.</p>
<p id="p-0017" num="0016">As is explained further hereinafter, in response to a failure or disruption of the first VPN connection <b>70</b> between the client device <b>30</b> and gateway device <b>20</b>, the client device <b>30</b> can establish a second VPN connection <b>80</b> to maintain the secure data communication between the client device <b>30</b>, gateway device <b>20</b> and destination device <b>40</b>. The client device <b>30</b> may establish the second VPN connection using a second secure communication protocol that is different from the secure protocol used for the first VPN connection. After the client device <b>30</b> initiates the second VPN connection with the gateway device <b>20</b>, the gateway device <b>20</b> may utilize session authentication and identification information that was passed between the gateway device <b>20</b> and the client device <b>30</b> during the first VPN connection to authenticate the client device <b>30</b> for the second VPN connection. As a result, the second VPN connection can be established and authenticated autonomously between the gateway device <b>20</b> and the client device <b>30</b> without requiring user interaction at the client device <b>30</b>.</p>
<p id="p-0018" num="0017">Turning to <figref idref="DRAWINGS">FIG. 2</figref>, an example block diagram of the gateway device <b>20</b> is now described. In <figref idref="DRAWINGS">FIG. 2</figref>, the gateway device <b>20</b> comprises a network interface unit <b>210</b>, switch hardware <b>220</b>, processor <b>230</b> and memory <b>240</b>. The network interface unit <b>210</b> is configured to enable network communications over network <b>50</b>. For example, network interface unit <b>210</b> is an Ethernet card, and it is also configured to receive secure data communications from the client device <b>30</b>. The gateway device <b>20</b> also contains switch hardware <b>220</b>, which, in general, allows for gateway <b>20</b> to queue packets received from a source device, e.g., client device <b>20</b>, for ultimately forwarding to a destination, e.g., to destination device <b>40</b>.</p>
<p id="p-0019" num="0018">The network interface unit <b>210</b> and switch hardware <b>220</b> of the gateway device <b>20</b> are coupled to processor <b>230</b>. The processor <b>230</b> is a microprocessor or microcontroller that is configured to execute program logic instructions (i.e., software) for carrying out various operations and tasks described herein. For example, the processor <b>230</b> is configured to execute the protocol agile connection management process logic <b>400</b> that is stored in memory <b>240</b>. In general, the protocol agile connection management process logic <b>400</b> enables processor <b>230</b> to generate session identification data associated with a first VPN connection, send the session identification data to the client device over the first VPN connection and associate the second VPN connection with the first VPN connection when the session identification data is received from a client device, in accordance with the techniques described herein. The memory <b>240</b> may comprise read only memory (ROM), random access memory (RAM), magnetic disk storage media devices, optical storage media devices, FLASH memory devices, electrical, optical, or other physical/tangible memory storage devices.</p>
<p id="p-0020" num="0019">The functions of processor <b>230</b> may be implemented by logic encoded in one or more tangible computer readable media (e.g., embedded logic such as an application specific integrated circuit, digital signal processor instructions, software that is executed by a processor, etc), wherein memory <b>240</b> stores data used for the operations described herein and stores software or processor executable instructions that are executed to carry out the operations described herein.</p>
<p id="p-0021" num="0020">The protocol agile connection management process logic <b>400</b> may take any of a variety of forms, so as to be encoded in one or more tangible computer readable memory media or storage device for execution, such as fixed logic or programmable logic (e.g., software/computer instructions executed by a processor) and the processor <b>230</b> may be an application specific integrated circuit (ASIC) that comprises fixed digital logic, or a combination thereof. For example, the processor <b>230</b> may be embodied by digital logic gates in a fixed or programmable digital logic integrated circuit, which digital logic gates are configured to perform the protocol agile connection management process logic <b>400</b>. In another form, the protocol agile connection management process logic <b>400</b> may be embodied in one or more computer readable storage media encoded with software comprising computer executable instructions and when the software is executed operable to perform the operations described herein for the process logic <b>400</b>.</p>
<p id="p-0022" num="0021">Turning to <figref idref="DRAWINGS">FIG. 3</figref>, an example block diagram of the client device <b>30</b> is now described. In <figref idref="DRAWINGS">FIG. 3</figref>, the client device <b>30</b> has a network interface unit <b>310</b>, a processor <b>320</b> and a memory <b>330</b>. The network interface unit <b>310</b> is configured to enable communications over either a wired network, e.g., network <b>90</b> or a wireless network, e.g., wireless access network <b>100</b>. For example, the network interface unit <b>310</b> comprises an Ethernet card for wired network communications and a WiFi&#x2122; card for wireless local area network communications and optionally a wireless wide area network (WWAN) card for WWAN network connectivity. The processor <b>320</b> of the client device <b>30</b> is a microprocessor or microcontroller similar to processor <b>230</b> in the gateway device <b>20</b>. Processor <b>320</b> is configured to execute program logic instructions (i.e., software) for carrying out various operations and tasks described herein. For example, the processor <b>320</b> of the client device <b>30</b> is configured to execute the VPN client process logic <b>500</b> that is stored in memory <b>330</b>. In general, the VPN client process logic <b>500</b> enables processor <b>320</b> to select a first communication protocol, initiate a first VPN connection using the first communication protocol, determine whether the first VPN connection has been disrupted, select a second communication protocol in response to the disruption and initiate a second VPN connection using the second communication protocol, according to the techniques described herein. The memory <b>330</b> is similar to memory <b>240</b> of the gateway device and may comprise ROM, RAM, magnetic disk storage media devices, optical storage media devices, FLASH memory devices, electrical, optical, or other physical/tangible memory storage devices.</p>
<p id="p-0023" num="0022">The functions of processor <b>320</b> may be implemented by logic encoded in one or more tangible computer readable media (e.g., embedded logic such as an application specific integrated circuit, digital signal processor instructions, software that is executed by a processor, etc), wherein memory <b>330</b> stores data used for the operations described herein and stores software or processor executable instructions that are executed to carry out the operations described herein.</p>
<p id="p-0024" num="0023">The VPN client process logic <b>500</b> may take any of a variety of forms, so as to be encoded in one or more tangible computer readable memory media or storage device for execution, such as fixed logic or programmable logic (e.g., software/computer instructions executed by a processor) and the processor <b>320</b> may be ASIC that comprises fixed digital logic, or a combination thereof. For example, the processor <b>320</b> may be embodied by digital logic gates in a fixed or programmable digital logic integrated circuit, which digital logic gates are configured to perform the VPN client process logic <b>500</b>. In another form, the VPN client process logic <b>500</b> may be embodied in one or more computer readable storage media encoded with software comprising computer executable instructions and when the software is executed operable to perform the operations described herein for the process logic <b>500</b>.</p>
<p id="p-0025" num="0024">As stated above, and with reference to <figref idref="DRAWINGS">FIG. 1</figref>, if the first VPN connection <b>70</b> between the gateway device <b>20</b> and the client device <b>30</b> is disrupted, the client device <b>30</b> can initiate a second VPN connection <b>80</b> between the gateway device <b>20</b> and the client device <b>30</b>. Alternatively, the client device <b>30</b>, in response to a disruption in the first VPN connection <b>70</b>, can attempt to re-establish the first VPN connection. In both situations, session identification information that was passed between the gateway device <b>20</b> and the client device <b>30</b> during the establishment of the first VPN connection <b>70</b> may be used to re-establish the first VPN connection <b>70</b> or to initiate the second VPN connection <b>80</b> and associate the second VPN connection with the first VPN connection, according to the techniques described herein.</p>
<p id="p-0026" num="0025">Reference is now made to <figref idref="DRAWINGS">FIGS. 4A and 4B</figref> for a description of a flow chart that depicts how the protocol agile connection management process logic <b>400</b> of the gateway device <b>20</b> and the VPN client process logic <b>500</b> of the client device <b>30</b> establish a VPN connection and attempt to re-establish the VPN connection in response to a connection disruption. It should be noted that <figref idref="DRAWINGS">FIGS. 4A and 4B</figref> describe operations for both the gateway device <b>20</b> and the client device <b>30</b>. Accordingly, the operations in <figref idref="DRAWINGS">FIGS. 4A and 4B</figref> with reference numerals in the 400's are operations performed by the gateway device <b>20</b>, and the operations with reference numerals in the 500's are operations performed by the client device <b>30</b>.</p>
<p id="p-0027" num="0026">At <b>510</b>, the client device <b>30</b> initiates a first VPN connection with the gateway device <b>20</b> using a first communication protocol. The first communication protocol may be any secure protocol for establishing secure data communication between the gateway device <b>20</b> and the client device <b>30</b>. For example, the first communication protocol may be an SSL protocol or an IKEv2/IPsec protocol.</p>
<p id="p-0028" num="0027">After the first VPN connection is initiated, at <b>415</b> the gateway device <b>20</b> sends a message to the client device <b>30</b> to prompt a user at the client device <b>30</b> to enter authentication credentials for the first VPN connection, which are then sent from the client device <b>30</b> to the gateway device <b>20</b>. Once the gateway device <b>20</b> receives the authentication credentials from the client device <b>30</b>, at <b>420</b> the gateway device determines whether the authentication is successful. If the authentication is not successful (e.g., if the authentication credentials received at the gateway device <b>20</b> are not valid), then at <b>415</b> the user at the client device <b>20</b> may be prompted to re-enter the authentication credentials.</p>
<p id="p-0029" num="0028">When the authentication is successful (e.g., if the authentication credentials received at the gateway device <b>20</b> are valid), the gateway device <b>20</b>, at <b>425</b>, generates and sends session identification data to the client device <b>30</b>. For example, the processor <b>230</b> of the gateway device <b>20</b> may generate identification data that comprises a session identifier and a session token and may send the session identifier or the session token, or both, to the client device <b>30</b>. At <b>530</b>, the client device <b>30</b> receives and stores (caches) the session identification data sent by the gateway device <b>20</b> at <b>425</b>. After generating and sending the session identification data to the client device <b>30</b>, the processor <b>230</b> of the gateway device <b>20</b>, at <b>430</b>, stores data that associates the first VPN connection with the session identification data sent at <b>425</b>. At operation <b>435</b>, the gateway device <b>20</b> and the client device <b>30</b> transmit data securely to each other using the first VPN connection.</p>
<p id="p-0030" num="0029">Data continues to be transmitted securely between the client device <b>30</b> and the gateway device <b>20</b> while the client device <b>30</b>, at <b>540</b>, monitors network conditions between the gateway device <b>20</b> and the client device <b>30</b>. Based on the monitoring, the processor <b>320</b> of the client device <b>30</b>, at <b>545</b>, determines whether there is a disruption of the first VPN connection. Examples of techniques to monitor the network conditions and detect a disruption include monitoring the number of packet re-transmission requests and detecting an increase beyond a threshold, monitoring the number of packets that are not acknowledged, etc. In another example, the client device <b>30</b> periodically sends a keep-alive message to the gateway device <b>20</b> and expects to receive a response message from the gateway device <b>20</b> after the gateway device <b>20</b> receives the keep-alive message. If the client device <b>20</b> does not receive a response message from the gateway device <b>20</b>, the client device <b>30</b> resends the keep-alive message to the gateway device <b>20</b>. If the client device <b>30</b> still does not receive a response message from the gateway device <b>20</b>, the client device <b>30</b>, after a predetermined number of attempts, determines that there is a disruption in the first VPN connection. Similarly, in another example, the gateway device <b>20</b> periodically sends a keep-alive message to the client device <b>30</b>, and expects a response message from the client device <b>30</b> after the client device <b>30</b> receives the keep-alive message. If the gateway device <b>20</b> does not receive a response message from the client device <b>30</b> after a predetermined number of attempts to send the keep-alive message, the gateway device <b>20</b> maintains the first VPN connection in an idle state.</p>
<p id="p-0031" num="0030">If there is no disruption of the first VPN connection, the gateway device <b>20</b> and the client device <b>30</b> continue to transmit data securely across the first VPN connection, while the processor <b>320</b> of the client device <b>30</b> continues to monitor the network conditions. If there is a disruption of the first VPN connection (e.g., if the client device <b>30</b> detects network conditions indicating a disruption of the first VPN connection), then the processor <b>230</b> of the gateway device <b>20</b>, at <b>450</b>, maintains the first VPN connection in an idle state, as described above, for example, for a period of time to allow the session to be resumed, while at <b>555</b>, the client device <b>30</b> sends session identification data (received from the gateway device <b>20</b> at <b>425</b>) to the gateway device <b>20</b> with a request to re-establish the first VPN connection using the first communication protocol. Operation <b>555</b> may be performed prior to operation <b>450</b> so that the gateway device <b>20</b> puts the first VPN connection in the idle state in response to receiving the request to re-establish the first VPN connection. In one example, the session identification data and the request to re-establish the first VPN connection is sent by the client device <b>30</b> to the gateway device <b>20</b> without requiring any user interaction at the client device <b>30</b>. That is, the user at the client device <b>30</b> need not perform any action to send the request to re-establish the VPN connection. At <b>560</b>, the client device <b>30</b> determines whether the first VPN connection can be re-established, and if so, the client device <b>30</b> re-establishes the first VPN connection. The gateway device <b>20</b>, at <b>465</b>, confirms that the first VPN session is re-established and reverts to operation <b>435</b> where the gateway device <b>20</b> and client device <b>30</b> transmit data securely to each other using the first VPN connection.</p>
<p id="p-0032" num="0031">If at <b>560</b> it is determined that the first VPN connection cannot be re-established, the client device <b>30</b> initiates a second VPN connection using a second communication protocol. Reference is now made to <figref idref="DRAWINGS">FIG. 4B</figref> for a description of how the client device <b>30</b> establishes the second VPN connection.</p>
<p id="p-0033" num="0032">At <b>570</b>, in response to determining at <b>560</b> that the first VPN connection cannot be re-established, the processor <b>320</b> of the client device <b>30</b> initiates a second VPN connection to the gateway device <b>20</b> using a second communication protocol. As with the first communication protocol, the second communication protocol may be any secure protocol for establishing secure data communication between the gateway device <b>20</b> and the client device <b>30</b>. For example, the second communication protocol may be an SSL protocol or an IKEv2/IPsec protocol. In one example, the second communication protocol is a secure communication protocol that is different than the secure protocol used for the first communication protocol. In other words, for example, if the first VPN connection utilized an SSL protocol, the second VPN may utilize an IKEv2/IPsec protocol, and vice versa.</p>
<p id="p-0034" num="0033">After initiating the second VPN connection, the processor <b>230</b> of the gateway device <b>20</b>, at <b>475</b>, receives the cached session identification data sent from the client device <b>30</b> over the second VPN connection. This session identification data is used as authentication credentials for the client device <b>30</b> on the second VPN connection. This cached session identification data may be, for example, the session identifier or the session token, or both, generated by the gateway device <b>20</b> and sent to the client device <b>30</b> at <b>425</b> of <figref idref="DRAWINGS">FIG. 4A</figref>. For example, if the first VPN connection was established using an SSL protocol and the second VPN connection is initiated using an IKEv2/IPsec protocol, the session identifier and session token may be used for authenticating the client device <b>30</b> on the second VPN connection via IKE pre-shared key (PSK) techniques. The cached session identification data (e.g., the session identifier and session token) may be sent from the client device <b>30</b> at <b>570</b> without requiring any user interaction at the client device <b>30</b>. The cached session identification data received by the gateway device <b>20</b> can further be used to correlate the second VPN connection attempt to the existing, idle first VPN connection.</p>
<p id="p-0035" num="0034">After receiving the cached session identification data from the client device <b>20</b>, the processor <b>230</b> of the gateway device <b>20</b>, at <b>480</b>, determines whether the authentication of the session identification data is successful. If the authentication is not successful, the gateway device <b>20</b>, at operation <b>485</b>, closes the first VPN connection that the gateway device <b>20</b> kept as an idle session in step <b>450</b> of <figref idref="DRAWINGS">FIG. 4A</figref>. The gateway device <b>20</b> may perform this authentication by using a full handshake exchange between the client device <b>30</b> and the gateway device <b>20</b>. If the authentication is successful, the processor <b>230</b> of the gateway device <b>20</b>, at operation <b>490</b>, associates the second VPN connection with the disrupted first VPN connection using the cached session identification received at the gateway device <b>20</b> from the client device <b>30</b>. Data communication is then resumed between the client device <b>30</b> and the gateway device <b>20</b> to enable secure data transmission over the second VPN connection.</p>
<p id="p-0036" num="0035">Thus, the processor <b>230</b> of the gateway device <b>20</b> enables protocol agility between the first communication protocol and the second communication protocol based on the network conditions. Accordingly, multiple secure communication protocols can be used to resume secure data communications between a client device <b>30</b> and a gateway device <b>20</b> in response to a disruption in the initial communication session. Such protocol agility also allows for secure communications between the client device <b>30</b> and the gateway device <b>20</b> to continue without requiring user interaction, while also associating the new, second VPN connection with the existing, idle first VPN connection.</p>
<p id="p-0037" num="0036">Though the foregoing application refers to data communications between a gateway device <b>20</b> and a client device <b>30</b>, it should be appreciated that the techniques described herein can be used for communications between any two network devices. For example, a first device can perform the processes that are described above with respect to the gateway device <b>20</b>, and a second device can perform the processes that are described above with respect to the client device <b>30</b>. In one example, in a peer-to-peer VPN connection between the first device and the second device using a server for session traversal utilities for network address translators (STUN), the protocol agile techniques may be employed between a first communication protocol of a first VPN connection and a second communication protocol of a second VPN connection, as described above. In this example, in response to a disruption of the first VPN connection, communications between the first device and the second device can fall back to the second VPN connection (with the second communication protocol). Likewise, communications between the first and second devices can later fall forward to the first VPN connection (with the first communication protocol) if the first VPN connection is re-established.</p>
<p id="p-0038" num="0037">In sum, a method is provided comprising: generating at a first device session identification data that is associated with a first virtual private network connection between the first device and a second device using a first communication protocol; sending the session identification data from the first device to the second device over the first private network connection; receiving the session identification data at the first device from the second device over a second virtual private network connection; and associating the second virtual private network connection with the first virtual private network connection using the session identification data.</p>
<p id="p-0039" num="0038">Additionally, a method is provided comprising: initiating a first virtual private network connection with a first device at a second device and selecting at the second device a first communication protocol to be used for the first virtual private network connection; receiving session identification data associated with the first virtual private network connection from the first device over the first virtual private network connection and storing the session identification data at the second device; determining whether the first virtual private network connection has been disrupted; selecting a second communication protocol and initiating a second virtual private network connection with the first device using the second communication protocol if the first virtual private network connection has been disrupted; and transmitting the session identification data associated with the first virtual private network from the second device to the first device over the second virtual private network.</p>
<p id="p-0040" num="0039">Additionally, one or more computer readable storage media is provided that is encoded with software comprising computer executable instructions and when the software is executed operable to: generate session identification data associated with a first virtual private network connection between first device and a second device using a first communication protocol; send the session identification data to the second device over the first private network connection; receive the session identification data from the second device over a second virtual private network connection; and associate the second virtual private network connection with the first virtual private network connection using the session identification data.</p>
<p id="p-0041" num="0040">Furthermore, an apparatus is provided comprising: a network interface device configured to enable communications over a network; and a processor coupled to the network interface device. The processor is configured to: generate session identification data associated with a first virtual private network connection with a client device using a first communication protocol; send the session identification data to the client device over the first private network connection; receive the session identification data from the client device over a second virtual private network connection; and associate the second virtual private network connection with the first virtual private network connection using session identification data.</p>
<p id="p-0042" num="0041">Further still, an apparatus is provided comprising a network interface device configured to enable communications over a network; and a processor coupled to the network interface device. The processor is configured to select a first communication protocol and initiate a first virtual private network connection with a gateway device using the first communication protocol; receive session identification data associated with the first virtual private network connection from the gateway device over the first virtual private network connection and store the session identification data; determine whether the first virtual private network connection is disrupted; select a second communication protocol and initiate a second virtual private network connection with the gateway device using the second communication protocol when it is determined that the first virtual private network connection is disrupted; and transmit the session identification data to the gateway device over the second virtual private network connection.</p>
<p id="p-0043" num="0042">The above description is intended by way of example only. Various modifications and structural changes may be made therein without departing from the scope of the concepts described herein and within the scope and range of equivalents of the claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method comprising:
<claim-text>generating at a first device session identification data that is associated with a first virtual private network connection between the first device and a second device using a first secure communication protocol;</claim-text>
<claim-text>sending the session identification data from the first device to the second device over the first virtual private network connection;</claim-text>
<claim-text>receiving the session identification data at the first device from the second device over a second virtual private network connection using a second secure communication protocol;</claim-text>
<claim-text>at the first device, associating the second virtual private network connection with the first virtual private network connection using the session identification data after the second device is authenticated for the second virtual private network connection; and</claim-text>
<claim-text>authenticating the second device at the first device using the session identification information received from the second device over the second virtual private network connection.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein authenticating comprises authenticating the second device at the first device using a full handshake exchange between the first device and the second device.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein generating comprises generating identification data that comprises a session identifier and a session token.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, and further comprising at the second device: determining whether the first virtual private network connection is disrupted; selecting the second secure communication protocol and initiating the second virtual private network connection with the first device using the second secure communication protocol when it is determined that the first virtual private network connection is disrupted; and transmitting the session identification data to the first device over the second virtual private network connection.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. A method comprising:
<claim-text>initiating a first virtual private network connection with a first device at a second device and selecting at the second device a first secure communication protocol to be used for the first virtual private network connection;</claim-text>
<claim-text>receiving session identification data associated with the first virtual private network connection at the second device from the first device over the first virtual private network connection and storing the session identification data at the second device;</claim-text>
<claim-text>at the second device, determining whether the first virtual private network connection is disrupted;</claim-text>
<claim-text>at the second device, selecting a second secure communication protocol and initiating a second virtual private network connection with the first device using the second secure communication protocol when it is determined that the first virtual private network connection is disrupted;</claim-text>
<claim-text>transmitting the session identification data from the second device to the first device over the second virtual private network connection;</claim-text>
<claim-text>receiving the session identification data at the first device from the second device over the second virtual private network connection; and</claim-text>
<claim-text>at the first device, associating the second virtual private network connection with the first virtual private network connection using the session identification data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein selecting the first secure communication protocol comprises selecting a Secure Socket Layer protocol and wherein selecting the second secure communication protocol comprises selecting an Internet Key Exchange over Internet Protocol Security protocol.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein selecting the first secure communication protocol comprises selecting an Internet Key Exchange over Internet Protocol Security protocol and wherein selecting the second secure communication protocol comprises selecting a Secure Socket Layer protocol.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein transmitting comprises transmitting the session identification data to the first device without requiring user interaction at the second device.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising attempting to re-establish the first virtual private network connection if the first virtual private network connection has been disrupted, and wherein selecting the second secure communication protocol, initiating the second virtual private network connection and transmitting the session identification data operations are performed when the attempt to re-establish the first virtual private network connection is not successful.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein determining comprises determining whether the first virtual private network connection has been disrupted by evaluating network conditions to detect a disruption in the first virtual private network connection.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. One or more non-transitory computer readable storage media encoded with software comprising computer executable instructions and when the software is executed operable to:
<claim-text>generate session identification data associated with a first virtual private network connection between a first device and a second device using a first secure communication protocol;</claim-text>
<claim-text>send the session identification data to the second device over the first virtual private network connection;</claim-text>
<claim-text>receive the session identification data from the second device over a second virtual private network connection using a second secure communication protocol;</claim-text>
<claim-text>associate the second virtual private network connection with the first virtual private network connection using the session identification data after the second device is authenticated for the second virtual private network connection; and</claim-text>
<claim-text>authenticate the second device at the first device using the session identification information received from the second device over the second virtual private network connection.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The computer readable storage media of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the instructions that are operable to authenticate the second device comprise instructions that are operable to authenticate the second device at the first device using a full handshake exchange between the first device and the second device.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The computer readable storage media of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the instructions that are operable to generate session identification data comprises instructions that are operable to generate identification data that comprises a session identifier and a session token.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. An apparatus comprising:
<claim-text>a network interface device configured to enable communications over a network; and</claim-text>
<claim-text>a processor coupled to the network interface device and configured to:
<claim-text>generate session identification data associated with a first virtual private network connection with a client device using a first secure communication protocol;</claim-text>
<claim-text>send the session identification data to the client device over the first virtual private network connection;</claim-text>
<claim-text>receive the session identification data from the client device over a second virtual private network connection using a second secure communication protocol;</claim-text>
<claim-text>associate the second virtual private network connection with the first virtual private network connection using the session identification data after the client device is authenticated for the second virtual private network connection; and</claim-text>
<claim-text>authenticate the client device using the session identification information received from the client device over the second virtual private network connection.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The apparatus of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the processor is further configured to authenticate the client device using a full handshake exchange with a client device.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The apparatus of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the processor is further configured to generate identification data that comprises a session identifier and a session token.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. An apparatus comprising:
<claim-text>a network interface device configured to enable communications over a network; and</claim-text>
<claim-text>a processor coupled to the network interface device and configured to:
<claim-text>select a first secure communication protocol and initiate a first virtual private network connection with a gateway device using the first communication protocol;</claim-text>
<claim-text>receive session identification data associated with the first virtual private network connection from the gateway device over the first virtual private network connection and store the session identification data;</claim-text>
<claim-text>determine whether the first virtual private network connection is disrupted;</claim-text>
<claim-text>select a second secure communication protocol and initiate a second virtual private network connection with the gateway device using the second secure communication protocol when it is determined that the first virtual private network connection is disrupted;</claim-text>
<claim-text>transmit the session identification data to the gateway device over the second virtual private network connection;</claim-text>
<claim-text>receive the session identification data at the first device from the second device over the second virtual private network connection; and</claim-text>
<claim-text>associate the second virtual private network connection with the first virtual private network connection using the session identification data.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The apparatus of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the processor is configured to transmit the session identification data to the gateway device without requiring user interaction at the client device.</claim-text>
</claim>
</claims>
</us-patent-grant>
