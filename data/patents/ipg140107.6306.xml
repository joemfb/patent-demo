<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627461-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627461</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12398073</doc-number>
<date>20090304</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>584</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>29</main-group>
<subgroup>06</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>726 22</main-classification>
</classification-national>
<invention-title id="d2e53">System, method, and computer program product for verifying an identification of program information as unwanted</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6697948</doc-number>
<kind>B1</kind>
<name>Rabin et al.</name>
<date>20040200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6708212</doc-number>
<kind>B2</kind>
<name>Porras et al.</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6981155</doc-number>
<kind>B1</kind>
<name>Lyle et al.</name>
<date>20051200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7095716</doc-number>
<kind>B1</kind>
<name>Ke et al.</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>7409712</doc-number>
<kind>B1</kind>
<name>Brooks et al.</name>
<date>20080800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7512911</doc-number>
<kind>B1</kind>
<name>Goren et al.</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>7512977</doc-number>
<kind>B2</kind>
<name>Cook et al.</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>7752667</doc-number>
<kind>B2</kind>
<name>Challener et al.</name>
<date>20100700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>7945787</doc-number>
<kind>B2</kind>
<name>Gassoway</name>
<date>20110500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2004/0042416</doc-number>
<kind>A1</kind>
<name>Ngo et al.</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2004/0054925</doc-number>
<kind>A1</kind>
<name>Etheridge et al.</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713201</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2004/0073810</doc-number>
<kind>A1</kind>
<name>Dettinger et al.</name>
<date>20040400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2004/0123117</doc-number>
<kind>A1</kind>
<name>Berger</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713188</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2004/0203589</doc-number>
<kind>A1</kind>
<name>Wang et al.</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2005/0015455</doc-number>
<kind>A1</kind>
<name>Liu</name>
<date>20050100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2005/0027818</doc-number>
<kind>A1</kind>
<name>Friedman et al.</name>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2005/0065899</doc-number>
<kind>A1</kind>
<name>Li et al.</name>
<date>20050300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2005/0262576</doc-number>
<kind>A1</kind>
<name>Gassoway</name>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2006/0036693</doc-number>
<kind>A1</kind>
<name>Hulten et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2006/0070130</doc-number>
<kind>A1</kind>
<name>Costea et al.</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2006/0150256</doc-number>
<kind>A1</kind>
<name>Fanton et al.</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>2006/0242245</doc-number>
<kind>A1</kind>
<name>Christensen</name>
<date>20061000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>2007/0016953</doc-number>
<kind>A1</kind>
<name>Morris et al.</name>
<date>20070100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>2007/0028304</doc-number>
<kind>A1</kind>
<name>Brennan</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>2007/0073660</doc-number>
<kind>A1</kind>
<name>Quinlan</name>
<date>20070300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>2007/0079379</doc-number>
<kind>A1</kind>
<name>Sprosts et al.</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00027">
<document-id>
<country>US</country>
<doc-number>2007/0226804</doc-number>
<kind>A1</kind>
<name>Somkiran et al.</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 24</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00028">
<document-id>
<country>US</country>
<doc-number>2007/0240217</doc-number>
<kind>A1</kind>
<name>Tuvell et al.</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00029">
<document-id>
<country>US</country>
<doc-number>2007/0240220</doc-number>
<kind>A1</kind>
<name>Tuvell et al.</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00030">
<document-id>
<country>US</country>
<doc-number>2007/0261112</doc-number>
<kind>A1</kind>
<name>Todd et al.</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00031">
<document-id>
<country>US</country>
<doc-number>2008/0126779</doc-number>
<kind>A1</kind>
<name>Smith</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00032">
<document-id>
<country>US</country>
<doc-number>2008/0141373</doc-number>
<kind>A1</kind>
<name>Fossen et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00033">
<document-id>
<country>US</country>
<doc-number>2008/0168533</doc-number>
<kind>A1</kind>
<name>Ozaki et al.</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00034">
<document-id>
<country>US</country>
<doc-number>2008/0196099</doc-number>
<kind>A1</kind>
<name>Shastri</name>
<date>20080800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00035">
<document-id>
<country>US</country>
<doc-number>2008/0295177</doc-number>
<kind>A1</kind>
<name>Dettinger et al.</name>
<date>20081100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 24</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00036">
<document-id>
<country>US</country>
<doc-number>2008/0313738</doc-number>
<kind>A1</kind>
<name>Enderby</name>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00037">
<document-id>
<country>US</country>
<doc-number>2009/0044024</doc-number>
<kind>A1</kind>
<name>Oberheide et al.</name>
<date>20090200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00038">
<document-id>
<country>US</country>
<doc-number>2009/0064329</doc-number>
<kind>A1</kind>
<name>Okumura et al.</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 22</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00039">
<document-id>
<country>US</country>
<doc-number>2009/0088133</doc-number>
<kind>A1</kind>
<name>Orlassino</name>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00040">
<document-id>
<country>US</country>
<doc-number>2009/0097661</doc-number>
<kind>A1</kind>
<name>Orsini et al.</name>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00041">
<document-id>
<country>US</country>
<doc-number>2009/0254992</doc-number>
<kind>A1</kind>
<name>Schultz et al.</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00042">
<document-id>
<country>US</country>
<doc-number>2010/0031358</doc-number>
<kind>A1</kind>
<name>Elovici et al.</name>
<date>20100200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00043">
<document-id>
<country>US</country>
<doc-number>2011/0047618</doc-number>
<kind>A1</kind>
<name>Evans et al.</name>
<date>20110200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00044">
<document-id>
<country>US</country>
<doc-number>2011/0138465</doc-number>
<kind>A1</kind>
<name>Franklin et al.</name>
<date>20110600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00045">
<document-id>
<country>WO</country>
<doc-number>WO2008089626</doc-number>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<patcit num="00046">
<document-id>
<country>WO</country>
<doc-number>2011082084</doc-number>
<kind>A2</kind>
<date>20110700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00047">
<document-id>
<country>WO</country>
<doc-number>2011082084</doc-number>
<kind>A3</kind>
<date>20111000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00048">
<othercit>An Architecture for Generating Semantics-Aware Signatures; Vinod Yegneswaran, Jonathon T. Griffin, Paul Barford, Somesh Jha; Appeared in Proceedings of Usenix Security Symposium 2005, all pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00049">
<othercit>Christodorescu, Miha et al. &#x201c;Testing Malware Detectors&#x201d; in the Proceedings of the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA '04), vol. 29, Issue 4, Jul. 11-14, 2004, Boston, Massachusetts, 11 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00050">
<othercit>VMware DiskMount Utility: User's Manual, http://www.vmware.com/pdf/VMwareDiskMount.pdf, 1998-2005, Revision Apr. 8, 2005, Vmware, Inc., 6 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00051">
<othercit>Wolf, Chris, Column: &#x201c;Virtual Server 2005 R2 SPI Treasures: VHD Mount&#x201d;, Jun. 2007, Microsoft Certified Professional Magazine Online, Download on Feb. 27, 2008 from http://mcpmag.com/columns/article.asp?EditorialsID=1793 pp. 1-5.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00052">
<othercit>&#x201c;chroot(2)&#x2014;Linux man page&#x201d;, Downloaded on Feb. 27, 2008 from http://linux.die.net/man/2/chroot pp. 1-2 D.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00053">
<othercit>&#x201c;Linux/Unix Command: chroot&#x201d;, Downloaded on Feb. 27, 2008 from http://linux.about.com/library/cmd/blcmdl2<sub>&#x2014;</sub>chroot.htm pp. 1-3.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00054">
<othercit>&#x201c;Blacklist&#x201d;, Wikipedia, last modified Jun. 5, 2008, Wikipedia Foundation, Inc. Downloaded from http://en.wikipedia.org/wiki/Blacklist , pp. 1-3.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00055">
<othercit>U.S. Appl. No. 11/946,777, filed Nov. 28, 2007.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00056">
<othercit>Non-Final Office Action, dated Jan. 5, 2011 for U.S. Appl. No. 11/946,777.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00057">
<othercit>Final Office Action, dated Jun. 13, 2011 for U.S. Appl. No. 11/946,777.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00058">
<othercit>U.S. Appl. No. 12/111,846, filed Apr. 29,2008.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00059">
<othercit>Non-Final Office Action, dated Jun. 24, 2011 for U.S. Appl. No. 12/111,846.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00060">
<othercit>Final Office Action, dated Nov. 15, 2011 for U.S. Appl. No. 12/111,846.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00061">
<othercit>U.S. Appl. No. 12/050,432, filed Mar. 18, 2008.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00062">
<othercit>Non-Final Office Action dated Oct. 6, 2010 for U.S. Appl. No. 12/050,432.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00063">
<othercit>Final Office Action dated May 13, 2011 for U.S. Appl. No. 12/050,432.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00064">
<othercit>U.S. Appl. No. 12/131,383 filed Jun. 2, 2008.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00065">
<othercit>Non-Final Office Action dated Jun. 24, 2011 for U.S. Appl. No. 12/131,383.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00066">
<othercit>Final Office Action dated Oct. 17, 2011 for U.S. Appl. No. 12/131,383.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00067">
<othercit>U.S. Appl. No. 12/144,967 filed Jun. 24, 2008.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00068">
<othercit>Non-Final Office Action dated Mar. 3, 2011 for U.S. Appl. No. 12/144,967.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00069">
<othercit>Final Office Action dated Aug. 17, 2011 for U.S. Appl. No. 12/144,967.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00070">
<othercit>International Preliminary Report received for PCT Patent Application No. PCT/US2010/061889, issued on Jul. 4, 2012, 4 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00071">
<othercit>International Search Report received for PCT Patent Application No. PCT/US2010/061889, mailed on Aug. 29, 2011, 3 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>18</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>726 22- 25</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>722 22</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>5</number-of-drawing-sheets>
<number-of-figures>5</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20130276106</doc-number>
<kind>A1</kind>
<date>20131017</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Barton</last-name>
<first-name>Christopher</first-name>
<address>
<city>Buckingham</city>
<country>GB</country>
</address>
</addressbook>
<residence>
<country>GB</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Roberts</last-name>
<first-name>Guy William Welch</first-name>
<address>
<city>Milton Keynes</city>
<country>GB</country>
</address>
</addressbook>
<residence>
<country>GB</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Muttik</last-name>
<first-name>Igor G.</first-name>
<address>
<city>Berkhamsted</city>
<country>GB</country>
</address>
</addressbook>
<residence>
<country>GB</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Hinchliffe</last-name>
<first-name>Alexander James</first-name>
<address>
<city>Milton Keynes</city>
<country>GB</country>
</address>
</addressbook>
<residence>
<country>GB</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Barton</last-name>
<first-name>Christopher</first-name>
<address>
<city>Buckingham</city>
<country>GB</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Roberts</last-name>
<first-name>Guy William Welch</first-name>
<address>
<city>Milton Keynes</city>
<country>GB</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Muttik</last-name>
<first-name>Igor G.</first-name>
<address>
<city>Berkhamsted</city>
<country>GB</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Hinchliffe</last-name>
<first-name>Alexander James</first-name>
<address>
<city>Milton Keynes</city>
<country>GB</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Wong, Cabello, Lutsch, Rutherford &#x26; Brucculeri, LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>McAfee, Inc.</orgname>
<role>02</role>
<address>
<city>Santa Clara</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Zand</last-name>
<first-name>Kambiz</first-name>
<department>2494</department>
</primary-examiner>
<assistant-examiner>
<last-name>Jamshidi</last-name>
<first-name>Ghodrat</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A system, method, and computer program product are provided for verifying an identification of program information as unwanted. In use, program information is identified as unwanted at a client. Furthermore, the identification of the program information as unwanted is verified, utilizing a communication between the client and a server.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="243.33mm" wi="192.11mm" file="US08627461-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="200.41mm" wi="155.11mm" file="US08627461-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="149.27mm" wi="163.32mm" file="US08627461-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="134.79mm" wi="146.81mm" file="US08627461-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="232.07mm" wi="165.18mm" file="US08627461-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="246.97mm" wi="196.34mm" file="US08627461-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0002" num="0001">The present invention relates to security systems, and more particularly to security systems that identify code and/or data as unwanted.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">Traditionally, security systems have been utilized for detecting unwanted data and/or code (e.g. malware, etc.). Oftentimes, the security systems employ signatures of previously detected unwanted code and/or data, heuristics, etc. for detecting unwanted code and/or data. However, techniques used by traditional security systems to detect unwanted code and/or data have generally exhibited various limitations. Just by way of example, such signatures, heuristics, etc. used by traditional security systems are generally susceptible to causing false positive identifications of unwanted code and/or data.</p>
<p id="p-0004" num="0003">There is thus a need for addressing these and/or other issues associated with the prior art.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0005" num="0004">A system, method, and computer program product are provided for verifying an identification of program information as unwanted. In use, program information is identified as unwanted at a client. Furthermore, the identification of the program information as unwanted is verified, utilizing a communication between the client and a server.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 1</figref> illustrates a network architecture, in accordance with one embodiment.</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 2</figref> shows a representative hardware environment that may be associated with the servers and/or clients of <figref idref="DRAWINGS">FIG. 1</figref>, in accordance with one embodiment.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 3</figref> shows a method for verifying an identification of program information as unwanted, in accordance with one embodiment.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 4</figref> shows a system for verifying an identification of program information as unwanted, in accordance with another embodiment.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 5</figref> shows a method for conditionally performing a remedial action based on a verification of an identification of program information as unwanted, in accordance with yet another embodiment.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 1</figref> illustrates a network architecture <b>100</b>, in accordance with one embodiment. As shown, a plurality of networks <b>102</b> is provided. In the context of the present network architecture <b>100</b>, the networks <b>102</b> may each take any form including, but not limited to a local area network (LAN), a wireless network, a wide area network (WAN) such as the Internet, peer-to-peer network, etc.</p>
<p id="p-0012" num="0011">Coupled to the networks <b>102</b> are servers <b>104</b> which are capable of communicating over the networks <b>102</b>. Also coupled to the networks <b>102</b> and the servers <b>104</b> is a plurality of clients <b>106</b>. Such servers <b>104</b> and/or clients <b>106</b> may each include a desktop computer, lap-top computer, hand-held computer, mobile phone, personal digital assistant (PDA), peripheral (e.g. printer, etc.), any component of a computer, and/or any other type of logic. In order to facilitate communication among the networks <b>102</b>, at least one gateway <b>108</b> is optionally coupled therebetween.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 2</figref> shows a representative hardware environment that may be associated with the servers <b>104</b> and/or clients <b>106</b> of <figref idref="DRAWINGS">FIG. 1</figref>, in accordance with one embodiment. Such figure illustrates a typical hardware configuration of a workstation in accordance with one embodiment having a central processing unit <b>210</b>, such as a microprocessor, and a number of other units interconnected via a system bus <b>212</b>.</p>
<p id="p-0014" num="0013">The workstation shown in <figref idref="DRAWINGS">FIG. 2</figref> includes a Random Access Memory (RAM) <b>214</b>, Read Only Memory (ROM) <b>216</b>, an I/O adapter <b>218</b> for connecting peripheral devices such as disk storage units <b>220</b> to the bus <b>212</b>, a user interface adapter <b>222</b> for connecting a keyboard <b>224</b>, a mouse <b>226</b>, a speaker <b>228</b>, a microphone <b>232</b>, and/or other user interface devices such as a touch screen (not shown) to the bus <b>212</b>, communication adapter <b>234</b> for connecting the workstation to a communication network <b>235</b> (e.g., a data processing network) and a display adapter <b>236</b> for connecting the bus <b>212</b> to a display device <b>238</b>.</p>
<p id="p-0015" num="0014">The workstation may have resident thereon any desired operating system. It will be appreciated that an embodiment may also be implemented on platforms and operating systems other than those mentioned. One embodiment may be written using JAVA, C, and/or C++ language, or other programming languages, along with an object oriented programming methodology. Object oriented programming (OOP) has become increasingly used to develop complex applications.</p>
<p id="p-0016" num="0015">Of course, the various embodiments set forth herein may be implemented utilizing hardware, software, or any desired combination thereof. For that matter, any type of logic may be utilized which is capable of implementing the various functionality set forth herein.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 3</figref> shows a method <b>300</b> for verifying an identification of program information as unwanted, in accordance with one embodiment. As an option, the method <b>300</b> may be carried out in the context of the architecture and environment of <figref idref="DRAWINGS">FIGS. 1</figref> and/or <b>2</b>. Of course, however, the method <b>300</b> may be carried out in any desired environment.</p>
<p id="p-0018" num="0017">As shown in operation <b>302</b>, program information is identified as unwanted at a client. With respect to the present description, the program information may include any type of code and/or data capable of being identified as unwanted. For example, the program information may include a file, an application, computer code, etc.</p>
<p id="p-0019" num="0018">In one embodiment, the program information may be stored on the client. Of course, however, the program information may be accessible to the client in any manner capable of allowing the client to identify the program information as unwanted. It should be noted that the client may include any device and/or logic that is operable to identify program information as unwanted. Optionally, the client may include any of the devices described above with respect to <figref idref="DRAWINGS">FIGS. 1</figref> and/or <b>2</b>.</p>
<p id="p-0020" num="0019">In another embodiment, the client may include a security system for identifying the program information as unwanted. Such security system may include a firewall, an anti-virus scanner, an anti-spyware scanner, etc. To this end, identifying the program information as unwanted may include identifying the program information as malware, spyware, adware and/or any other type of program information which is unwanted.</p>
<p id="p-0021" num="0020">As an option, the program information may be identified as unwanted utilizing a driver. With respect to the present description, the driver may include any information capable of being utilized to identify the unwanted program information, including, but not limited to, any routine script or logic within an engine (e.g. an anti-virus engine). In one embodiment, the driver may include a signature of known unwanted program information (e.g. program information previously determined to be unwanted). In another embodiment, the driver may include behavioral characteristics, activity, etc. indicative of unwanted program information.</p>
<p id="p-0022" num="0021">In yet another embodiment, the driver may be manually configured. For example, an administrator (e.g. of a security system provider, etc.) may define the driver, create the driver, etc. Accordingly, the driver may be applied (e.g. compared, etc.) to the program information for identifying the program information as unwanted.</p>
<p id="p-0023" num="0022">Furthermore, the identification of the program information as unwanted is verified, utilizing a communication between the client and a server, as shown in operation <b>304</b>. With respect to the present description, the server may include any device that is separate from the client via which a communication with the client may be utilized for verifying the identification of the program information as unwanted. Just by way of example, the server may include any of the devices described above with respect to <figref idref="DRAWINGS">FIGS. 1</figref> and/or <b>2</b>. As an option, the server and the client may be in communication over a network (e.g. such as any of the networks described above with respect to <figref idref="DRAWINGS">FIG. 1</figref>).</p>
<p id="p-0024" num="0023">In one embodiment, the server may be associated with a security system provider. For example, the server may be provided by, managed by, etc. the security system provider. Thus, a security system provider that optionally provides the driver to the client for identifying the program information as unwanted may also provide the server via which the identification of the program information as unwanted may be verified, as an option.</p>
<p id="p-0025" num="0024">In one embodiment, the verification of the identification of the program information as unwanted may be performed utilizing a whitelist. The whitelist may optionally include a predetermined list of drivers for which identifications of program information as unwanted are to be prevented from being verified. For example, the whitelist may include drivers predetermined to at least potentially be associated with false positive identifications of program information as unwanted (e.g. identifications of program information as unwanted when the program information is not actually unwanted). As another example, the whitelist may include drivers predetermined to be modified in any unwanted manner (e.g. by malware, etc.). As an option, the whitelist may be stored on the server.</p>
<p id="p-0026" num="0025">As another option, the whitelist may include drivers made available for use by the client (e.g. provided by the security system provider, stored on the client, etc.) within a predetermined period of time. The predetermined period of time may include the last day, week, month, etc. Just by way of example, drivers made available within the predetermined period of time may be considered to be newly available drivers for which it is unknown whether such drivers result in false positive identifications of program information as unwanted.</p>
<p id="p-0027" num="0026">As yet another option, the whitelist may include drivers of a type predetermined to be at least potentially associated with false positive identifications of program information as unwanted. For example, the whitelist may include drivers that include behavioral characteristics, activity, etc. indicative of unwanted program information (e.g. drivers that employ heuristics for identifying program information as unwanted). Of course, it should be noted that the whitelist may include any list of drivers capable of being utilized to verify the identification of the program information as unwanted.</p>
<p id="p-0028" num="0027">In one embodiment, the verification may include transmitting an identification of a driver utilized by the client to identify the program information as unwanted with the communication between the client and the server. Optionally, identification of the driver may include a name of the driver, a fingerprint of the driver, a checksum of the driver, etc. In another embodiment, the verification may include comparing the identification of the driver with the whitelist (e.g. at the server).</p>
<p id="p-0029" num="0028">In yet another embodiment, the communication between the client and the server that is utilized for verifying the identification of the program information as unwanted may include receiving a response from the server (e.g. at the client). Such response may optionally include a result of the comparison of the identification of the driver with the whitelist. For example, if it is determined that the identification of the driver is included in the whitelist, the response may indicate that the driver is not verified. As another example, if it is determined that the identification of the driver is not included in the whitelist, the response may indicate that the driver is verified.</p>
<p id="p-0030" num="0029">In this way, the client may utilize the response from the server for verifying the identification of the program information as unwanted. Of course, it should be noted that while various embodiments of verifying the identification of the program information as unwanted have been described hereinabove, it should be noted that such identification may be verified in any desired manner that utilizes a communication between the client and the server. In one embodiment, if the response indicates that the driver is not verified, the client may not verify the identification of the program information as unwanted. In another embodiment, if the response indicates that the driver is verified, the client may verify the identification of the program information as unwanted.</p>
<p id="p-0031" num="0030">More illustrative information will now be set forth regarding various optional architectures and features with which the foregoing technique may or may not be implemented, per the desires of the user. It should be strongly noted that the following information is set forth for illustrative purposes and should not be construed as limiting in any manner. Any of the following features may be optionally incorporated with or without the exclusion of other features described.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 4</figref> shows a system <b>400</b> for verifying an identification of program information as unwanted, in accordance with another embodiment. As an option, the system <b>400</b> may be implemented in the context of the architecture and environment of <figref idref="DRAWINGS">FIGS. 1-3</figref>. Of course, however, the system <b>400</b> may be implemented in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.</p>
<p id="p-0033" num="0032">As shown, a server <b>402</b> is in communication with a client <b>404</b>. In one embodiment, the server <b>402</b> and the client <b>404</b> may be in communication over a network (e.g. the Internet, wireless, mobile device networks, etc.). Of course, however, the server <b>402</b> and the client <b>404</b> may be in communication in any desired manner.</p>
<p id="p-0034" num="0033">Additionally, the client <b>404</b> includes a security system <b>408</b>. The security system <b>408</b> may include any system capable of being utilized to identify program information as unwanted. For example, the security system <b>408</b> may identify program information stored on the client <b>404</b> as unwanted.</p>
<p id="p-0035" num="0034">In various embodiments, the security system <b>408</b> may include an anti-virus scanner, an anti-spyware scanner, etc. Accordingly, the security system <b>408</b> may scan the client <b>404</b> for unwanted program information. As an option, the security system <b>408</b> may be provided by (e.g. made available to the client <b>404</b> by, etc.) a security system provider associated with (e.g. managing, etc.) the server <b>402</b>.</p>
<p id="p-0036" num="0035">Further, the security system <b>408</b> includes a plurality of sets of drivers <b>410</b>A-N. As shown, each set of drivers <b>410</b>A-N is associated with a different degree of risk. For example, drivers in a first set of drivers <b>410</b>A are associated with a first degree of risk, drivers in a second set of drivers <b>410</b>B are associated with a second degree of risk, and so on. Each set of drivers <b>410</b>A-N may optionally be flagged with a degree of risk associated therewith.</p>
<p id="p-0037" num="0036">With respect to the present embodiment, the degree of risk may include a probability that an identification of program information as unwanted is a false positive identification. Thus, different sets of drivers <b>410</b>A-N may be associated with different degrees of risk in false positive identifications. Just by way of example, the drivers in the first set of drivers <b>410</b>A may be associated with a higher degree of risk than the drivers in the second set of drivers <b>410</b>B, such that the drivers in the first set of drivers <b>410</b>A may be more likely to produce false positive identifications of unwanted program information than drivers in the second set of drivers <b>410</b>B.</p>
<p id="p-0038" num="0037">The degree of risk for each driver may be determined manually, in one embodiment. For example, a user may manually assign a degree of risk to a driver. In another embodiment, the degree of risk for each driver may be determined automatically. As an option, the degree of risk may be automatically determined based on a characteristic of the driver, such as an age of the driver (e.g. a length of time the driver has been available for use in identifying program information as unwanted). As another option, the degree of risk may be automatically determined based on a type of analysis that resulted in the identification of the program information as unwanted, such as information included in the driver for use in identifying program information as unwanted (e.g. signature, behavioral, etc.).</p>
<p id="p-0039" num="0038">In one embodiment, the security system <b>408</b> of the client <b>404</b> may compare program information to the drivers in the sets of drivers <b>410</b>A-N for determining whether the program information is unwanted. To this end, the security system <b>408</b> of the client <b>404</b> may identify the program information as unwanted utilizing a driver in one of the sets of drivers <b>410</b>A-N. For example, the security system <b>408</b> may compare the driver to the program information, such that detection of a match results in identification of the program information as unwanted.</p>
<p id="p-0040" num="0039">In response to the identification of the program information as unwanted, the client <b>404</b> may determine a risk factor associated with the identification of the program information as unwanted. It should be noted that in other embodiments a server and/or any other device and/or logic may determine the risk factor. In one embodiment, the risk factor may be based on the degree of risk associated with the driver utilized to identify the program information as unwanted. For example, the risk factor may be a function of the type of analysis that resulted in the identification of the program information as unwanted, the age of the driver that resulted in the identification of the program information as unwanted, etc. Thus, the risk factor may indicate a risk that the identification of the program information as unwanted is a false positive identification.</p>
<p id="p-0041" num="0040">Based on the risk factor, the client <b>404</b> may verify the identification of the program information as unwanted, utilizing a communication between the server <b>402</b> and the client <b>404</b>. In one embodiment, if the risk factor meets a predetermined threshold risk factor, the client <b>404</b> may verify the identification of the program information as unwanted. In another embodiment, the client <b>404</b> may not verify the identification of the program information as unwanted if the risk factor is below the predetermined threshold risk factor, and thus may react to the identification of the program information as unwanted as desired (e.g. by performing a remedial action, etc.).</p>
<p id="p-0042" num="0041">As an option, the client <b>404</b> may verify the identification of the program information as unwanted by communicating a request for such verification to the server <b>402</b>. The request may include an identifier associated with the identification of the program information as unwanted (e.g. an identifier of the driver utilized to identify the program information as unwanted), in one embodiment. Thus, the identifier may be transmitted with the communication to the server <b>402</b>. In response to receipt of the request, the server <b>402</b> may verify the identification of the program information as unwanted utilizing a whitelist database <b>406</b> stored on the server <b>402</b>. It should be noted that while a whitelist database <b>406</b> is shown, the whitelist may be provided in any desired type of data structure (e.g. a list, etc.). The whitelist database <b>406</b> may store identifiers of drivers predetermined to be associated with (e.g. predetermined to generate, etc.) false positive identifications of unwanted program information, for example.</p>
<p id="p-0043" num="0042">Thus, the server <b>402</b> may compare the identifier of the driver received from the client <b>404</b> with the whitelist database <b>406</b>. If, based on the comparison, the server <b>402</b> determines that the identifier of the driver received from the client <b>404</b> is not in the whitelist database <b>406</b>, the server <b>402</b> may respond to the client <b>404</b> indicating that the identification of the program information as unwanted is verified. If, however, based on the comparison, the server <b>402</b> determines that the identifier of the driver received from the client <b>404</b> is in the whitelist database <b>406</b>, the server <b>402</b> may respond to the client <b>404</b> indicating that the identification of the program information as unwanted is not verified. To this end, the client <b>404</b> may optionally verify the identification of the program information as unwanted based on the response received from the server <b>402</b>.</p>
<p id="p-0044" num="0043">As an option, the server <b>402</b> may periodically update the drivers in the sets of drivers <b>410</b>A-N stored on the client <b>404</b>. In one embodiment, such update may be based on the whitelist database <b>406</b>. For example, the server <b>402</b> may provide updated sets of drivers to the client <b>404</b>, where such updated sets of drivers exclude the drivers included in the whitelist database <b>406</b>. Further, in response to updating the sets of drivers at the client <b>404</b>, the server <b>402</b> may remove the identifiers of drivers included in the whitelist database <b>406</b>.</p>
<p id="p-0045" num="0044">As another option, the server <b>402</b> may log information associated with the program information that is received from the client <b>404</b> and/or any other client in communication with the server <b>402</b>. In one embodiment, the server <b>402</b> may log each identification of program information as unwanted for which a request for verification is received at the server <b>402</b> (e.g. by a plurality of clients). Thus, the program information identified as unwanted (or optionally a fingerprint thereof) may be logged. In another embodiment, an aggregation of such logs may be utilized for analysis purposes.</p>
<p id="p-0046" num="0045">In yet another embodiment, the information may indicate the driver utilized to identify the program information as unwanted. Moreover, the server <b>402</b> may initiate an analysis of the driver utilized to identify the program information as unwanted. Such analysis may include a manual analysis, for example. As an option, the analysis may include determining whether the driver is making false positive identifications of unwanted program information (e.g. whether the program information identified as unwanted utilizing the driver is not actually unwanted) or whether the driver is identifying actual unwanted program information (e.g. malware).</p>
<p id="p-0047" num="0046">Still yet, the server <b>402</b> may update the whitelist database <b>406</b> based on the analysis. For example, the server <b>402</b> may include an identifier of the driver in the whitelist database <b>406</b> if it is determined, based on the analysis, that the driver is making false positive identifications of unwanted program information. In this way, the current and subsequent identifications of program information as unwanted by such driver may be prevented from being verified by the server <b>402</b>, if an identifier of the driver is included in the whitelist database <b>406</b>.</p>
<p id="p-0048" num="0047">It should be noted that while only a single client <b>404</b> is shown, the server <b>402</b> may be in communication with any number of different clients for communicating with such clients to allow verification of identifications by such clients of program information as unwanted. For example, the server <b>402</b> may communicate with each of the clients for verifying an identification of program information as unwanted that has been made by the client in the manner described above with respect to the client <b>404</b> shown in the present embodiment.</p>
<p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. 5</figref> shows a method <b>500</b> for conditionally performing a remedial action based on a verification of an identification of program information as unwanted, in accordance with yet another embodiment. As an option, the method <b>500</b> may be carried out in the context of the architecture and environment of <figref idref="DRAWINGS">FIGS. 1-4</figref>. For example, the method <b>500</b> may be carried out utilizing the client <b>404</b> of <figref idref="DRAWINGS">FIG. 4</figref>. Of course, however, the method <b>500</b> may be carried out in any desired environment. It should also be noted that the aforementioned definitions may apply during the present description.</p>
<p id="p-0050" num="0049">As shown in operation <b>502</b>, program information is scanned. In one embodiment, the program information may include program information stored on a client, but of course may also include any program information accessed by the client. In another embodiment, the program information may be scanned by a security system installed on the client. For example, the program information may be scanned for identifying whether the program information is unwanted. As an option, scanning the program information may include comparing the program information to drivers indicative of known unwanted program information, unknown program information (e.g. program information for which it is unknown whether such program information is unwanted, program information which is determined to be suspicious, etc.), etc.</p>
<p id="p-0051" num="0050">Additionally, it is determined whether the program information is identified as unwanted, as shown in decision <b>504</b>. For example, it may be determined that the program information is identified as unwanted if it is determined that the program information matches any of the drivers that are indicative of known unwanted program information. As an option, the drivers may include signatures of known unwanted program information, such that it may be determined that the program information is identified as unwanted if it is determined that the program information matches one of such signatures. As another option, the drivers may include behavioral characteristics indicative of known unwanted program information, such that it may be determined that the program information is identified as unwanted if it is determined that the program information exhibits such behavioral characteristics.</p>
<p id="p-0052" num="0051">As another example, it may be determined that the program information is not identified as unwanted if it is determined that the program information matches any of the drivers that are indicative of unknown program information. For example, such drivers may include signatures of unknown program information, such that it may be determined that the program information is not identified as unwanted if it is determined that the program information matches one of such signatures.</p>
<p id="p-0053" num="0052">If it is determined that the program information is not identified as unwanted, the method <b>500</b> scans other program information (operation <b>502</b>). If, however, it is determined that the program information is identified as unwanted, it is determined whether a risk factor associated with the identification of the program information is high. Note decision <b>505</b>. Just by way of example, it may be determined whether the driver utilized to identify the program information as unwanted is assigned a high degree of risk. The high risk may include a risk that meets a predefined threshold, as an option.</p>
<p id="p-0054" num="0053">If it is determined that the risk factor associated with the identification of the program information is not high, a remedial action is performed, as shown in operation <b>514</b>. With respect to the present embodiment, the remedial action may include any action capable of remediating the program information identified as unwanted. For example, the remedial action may include preventing access to the program information, quarantining the program information, generating a notification to the client (e.g. indicating the identification of the unwanted program information), deleting the program information, cleaning the program information, restoring the program information, etc.</p>
<p id="p-0055" num="0054">If it is determined that the risk factor associated with the identification of the program information is high, verification of the identification of the program information as unwanted is requested from a server, Note operation <b>506</b>. In one embodiment, a request may be sent to the server with an identifier of the driver utilized to identify the program information as unwanted, such that the server may compare the identifier of the driver to a whitelist of drivers predetermined to be associated with false positive identifications of unwanted program information. In another embodiment, the whitelist stored on the server may be queried for the identifier of the driver utilized to identify the program information as unwanted.</p>
<p id="p-0056" num="0055">In this way, the server may determine whether the identification of the program information as unwanted is verified (e.g. by determining whether the identifier of the driver is included in the whitelist, etc.). Moreover, as shown in decision <b>508</b>, it is determined whether a response is received from the server. The response may include a response to the request for the verification of the identification of the program information as unwanted, with respect to the present embodiment.</p>
<p id="p-0057" num="0056">If a response is not received from the server, the method <b>500</b> continues to wait for such a response. If it is determined that a response is received from the server, it is further determined whether the server requests that the remedial action be suppressed. Note decision <b>510</b>. As an option, the response is received from the server be authenticated prior to determining whether the server requests that the remedial action be suppressed. For example, the response may be authenticated by verifying that the response includes a predetermined digital certificate unique to the server. Thus, it may optionally be verified that the response is actually received from the server instead of from a potentially malicious third party device.</p>
<p id="p-0058" num="0057">In one embodiment, the server may request, via the response, that the remedial action be suppressed if the server determines that the identification of the program information as unwanted is not verified (e.g. that the identifier of the driver utilized to identify the program information as unwanted is included in the whitelist). In another embodiment, the server may request, via the response that, the remedial action not be suppressed (e.g. that the remedial action be allowed) if the server determines that the identification of the program information as unwanted is verified (e.g. that the identifier of the driver utilized to identify the program information as unwanted is not included in the whitelist).</p>
<p id="p-0059" num="0058">If it is determined that the server requests that the remedial action be suppressed, the remedial action is prevented, as shown in operation <b>512</b>. For example, the remedial action may be prevented by blocking the remedial action, or dropping an instruction for the remedial action, etc. As an option, the remedial action may be prevented to prevent a false positive (e.g. associated with the identification of the program information as unwanted).</p>
<p id="p-0060" num="0059">If, however, it is determined that the server requests that the remedial action not be suppressed, the remedial action is performed. Note operation <b>514</b>.</p>
<p id="p-0061" num="0060">To this end, the remedial action may be conditionally performed based on the response received from the server. For example, the remedial action may be conditionally performed based on the verification of the identification of the program information as unwanted. As another example, the remedial action may only be performed if the program information is verified to be unwanted.</p>
<p id="p-0062" num="0061">While various embodiments have been described above, it should be understood that they have been presented by way of example only, and not limitation. Thus, the breadth and scope of a preferred embodiment should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer program product embodied on a non-transitory computer readable medium comprising instructions to cause one or more processors to:
<claim-text>determine, at a client, program information is unwanted and to associate an indication of the unwanted determination with the program information;</claim-text>
<claim-text>determine a risk factor associated with the determination of the program information as unwanted, wherein the risk factor indicates a degree of risk that the determination by the client will not be positively verified by a server;</claim-text>
<claim-text>compare the risk factor to a threshold value, the comparison indicating an unacceptable degree of risk that the determination by the client will not be positively verified by a server;</claim-text>
<claim-text>transmit the indication of the unwanted determination to the server based on the comparison; and</claim-text>
<claim-text>receive a verification of the unwanted determination from the server.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The computer program product of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the program information includes a file.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The computer program product of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising instructions to cause the one or more processors to conditionally perform a remedial action responsive to a positive verification.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The computer program product of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the remedial action includes at least one of preventing access to the program information, quarantining the program information, and generating a notification on the client.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The computer program product of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the remedial action is only performed if the program information is verified to be unwanted.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The computer program product of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising instructions to cause the one or more processors to conditionally prevent a remedial action when the verification of the determination is negative.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The computer program product of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the risk factor is a function of a type of analysis that resulted in the determination of the program information as unwanted.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The computer program product of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the risk factor is a function of an age of a driver that resulted in the determination of the program information as unwanted.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A computer program product embodied on a non-transitory computer readable medium comprising instructions to cause one or more processors to:
<claim-text>receive a request from a client for verifying an identification by a client of program information as unwanted, wherein a degree of risk that the identification of program information as unwanted will not be positively verified by the server compares unfavorably to a threshold value, the comparison indicating an unacceptable degree of risk that the identification by the client will not be positively verified;</claim-text>
<claim-text>verify the identification of the program information as unwanted; and</claim-text>
<claim-text>send a response with an indication of a result of the verification.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The computer program product of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the verification is performed utilizing a whitelist.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The computer program product of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising instructions to cause the one or more processors to:
<claim-text>receive, from the client, an identifier associated with the determination of the program information as unwanted; and</claim-text>
<claim-text>search the whitelist for the identifier.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The computer program product of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising instructions to cause the one or more processors to log information associated with the program information that is received from a plurality of clients.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The computer program product of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the log information indicates a number of instances of the determination of the program information as unwanted across the plurality of clients.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. A method, comprising:
<claim-text>receiving, at a server, a request from a client for verifying an identification of program information as unwanted, wherein a degree of risk that the identification of program information as unwanted will not be positively verified by the server compares unfavorably to a threshold value, the comparison indicating an unacceptable degree of risk that the determination by the client will not be positively verified by a server;</claim-text>
<claim-text>verifying whether the program information is unwanted, utilizing the server; and</claim-text>
<claim-text>sending a response with an indication of a result of the verification.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the server logs information associated with the program information that is received from a plurality of clients.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the logged information indicates a number of instances of the identification of the program information as unwanted across the plurality of clients.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. A system, comprising:
<claim-text>a memory; and</claim-text>
<claim-text>a processor coupled to the memory, the processor adapted to execute instructions stored in the memory to&#x2014;
<claim-text>receive a request from a client for verifying an identification by the client of program information as unwanted, wherein a degree of risk that the identification of program information as unwanted will not be positively verified by the server compares unfavorably to a threshold value, the comparison indicating an unacceptable degree of risk that the determination by the client will not be positively verified by a server;</claim-text>
<claim-text>verify the identification of the program information as unwanted; and</claim-text>
<claim-text>send a response with an indication of a result of the verification.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. A system, comprising:
<claim-text>a memory; and</claim-text>
<claim-text>a processor coupled to the memory by a bus, the processor adapted to execute instructions stored in the memory to&#x2014;
<claim-text>determine, at a client, program information is unwanted and associate an indication of the unwanted determination with the program information;</claim-text>
<claim-text>determine a risk factor associated with the determination of the program information as unwanted, wherein the risk factor indicates a degree of risk that the determination by the client will not be positively verified by a server;</claim-text>
<claim-text>compare the risk factor to a threshold value, the comparison indicating an unacceptable degree of risk that the determination by the client will not be positively verified by a server;</claim-text>
<claim-text>transmit the indication of the unwanted determination to the server based on the comparison; and</claim-text>
<claim-text>receive a verification of the unwanted determination from the server. </claim-text>
</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
