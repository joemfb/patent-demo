<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625781-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625781</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12677096</doc-number>
<date>20070907</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>810</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>K</subclass>
<main-group>1</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>380 28</main-classification>
<further-classification>380 44</further-classification>
<further-classification>713187</further-classification>
<further-classification>713189</further-classification>
</classification-national>
<invention-title id="d2e53">Encrypton processor</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>7099470</doc-number>
<kind>B2</kind>
<name>Lim</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>380 29</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2007/0083586</doc-number>
<kind>A1</kind>
<name>Luo et al.</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00003">
<othercit>Hamalainen, P., et al., &#x201c;Design and Implementation of Low-Area and Low-Power AES Encryption Hardware Core,&#x201d; I Proceedings of the 9th EUROMICRO Conference of Digital System Design: Architectures, Methods and Tools, Cavtat/| Dubrovnik, Croatia, Aug. 28-Sep. 1, 2006, pp. 577-583. [.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00004">
<othercit>Krishnamoorthy, A., et al., &#x201c;Minimize IC Power Without Sacrificing Performance,&#x201d; D&#x26;R Headlines News, Jul. 15, 2004.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00005">
<othercit>International Search Report, in connection with International Application No. PCT/NL20071050441, mailed Jun. 17, 2008, 3 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00006">
<othercit>Jarvinen, T., et al., &#x201c;Efficient Byte Permutation Realizations for Compact AES Implementations,&#x201d; Proceedings of the European Signal Processing Conference, Sep. 4-8, 2005, Antalya, Turkey, pp. 1-4.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00007">
<othercit>Krishnamoorthy, A., et al., &#x201c;Minimize IC Power Without Sacrificing Performance,&#x201d; D&#x26;R Headlines News, Jul. 15, 2004, http://www.us.design-reuse.com/news/?id=8288&#x26;print=yes, Retrieved May 28, 2008, 10 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00008">
<othercit>Hamalainen, P., et al., &#x201c;Design and Implementation of Low-Area and Low-Power AES Encryption Hardware Core,&#x201d; Proceedings of the 9th EUROMICRO Conference of Digital System Design: Architectures, Methods and Tools, Cavtat/ Dubrovnik, Croatia, Aug. 28-Sep. 1, 2006, pp. 577-583.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00009">
<othercit>Author Unknown, Advance Encryption Standards (AES), National Institute of Standards and Technology (NIST), Apr. 2003, pp. 168-169.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>Oswald, et al., European Network of Excellence in Cryptology (ECRYPT), D.VAM.2, State of the Art in Hardware Architectures, Sep. 5, 2005, 46 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00011">
<othercit>Author Unknown, Federal Information Processing Standards Publication 197, Advanced Encryption Standard (AES), Nov. 26, 2001, 51 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>12</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>8</number-of-drawing-sheets>
<number-of-figures>12</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20100322411</doc-number>
<kind>A1</kind>
<date>20101223</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Lubberhuizen</last-name>
<first-name>Wessel Harm</first-name>
<address>
<city>Delden</city>
<country>NL</country>
</address>
</addressbook>
<residence>
<country>NL</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Lubberhuizen</last-name>
<first-name>Wessel Harm</first-name>
<address>
<city>Delden</city>
<country>NL</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Fliesler Meyer LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Greenpeak Technologies B.V.</orgname>
<role>03</role>
<address>
<country>NL</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Gelagay</last-name>
<first-name>Shewaye</first-name>
<department>2437</department>
</primary-examiner>
</examiners>
<pct-or-regional-filing-data>
<document-id>
<country>WO</country>
<doc-number>PCT/NL2007/050441</doc-number>
<kind>00</kind>
<date>20070907</date>
</document-id>
<us-371c124-date>
<date>20100324</date>
</us-371c124-date>
</pct-or-regional-filing-data>
<pct-or-regional-publishing-data>
<document-id>
<country>WO</country>
<doc-number>WO2009/031883</doc-number>
<kind>A </kind>
<date>20090312</date>
</document-id>
</pct-or-regional-publishing-data>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">An Encryption processor is disclosed comprising an S-box unit, a byte permutation unit, a MixColumns unit and a key expansion unit. In an embodiment the byte permutation unit comprises a data input terminal for receiving input data, two or more row processors, each row processor having an input coupled to the input terminal and an output, and a clock gating circuit for generating for each of the two or more row processors a gated clock signal. Furthermore, a clock gated key expansion unit is disclosed. By clock gating, the power consumption of the processor is reduced which extends the battery life time in battery powered devices.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="100.58mm" wi="154.18mm" file="US08625781-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="100.92mm" wi="161.71mm" file="US08625781-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="171.87mm" wi="161.88mm" file="US08625781-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="115.06mm" wi="149.27mm" file="US08625781-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="133.10mm" wi="162.73mm" file="US08625781-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="121.16mm" wi="155.96mm" file="US08625781-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="258.15mm" wi="175.77mm" file="US08625781-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="237.91mm" wi="168.15mm" file="US08625781-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="187.28mm" wi="166.71mm" file="US08625781-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0002" num="0001">The present invention relates to an Encryption processor comprising an S-box unit, a byte permutation unit, a MixColumns unit and a key expansion unit.</p>
<p id="p-0003" num="0002">The invention has particular application AES processor for use in a wireless infrastructure employing wireless communication devices by means of a smart wireless protocol, wherein end nodes are battery powered. ZigBee is an example of such smart wireless protocols.</p>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0004" num="0003">Because the application of AES (Advanced Encryption Standard) is fully in development for various (wireless) applications, there is growing likeliness of future usage by others. In particular, IEEE 802.15.4 has defined several AES based security provisions for different levels of protection and with various key-sizes and various secondary encryption additions.</p>
<p id="p-0005" num="0004">For low cost systems that are battery powered or use energy harvesting, a low (peak) power and an area efficient security implementation are very important.</p>
<p id="p-0006" num="0005">Ref [1] specifies the algorithm for AES encryption. AES is a symmetric block cipher, which means that the plain text is found by de-encrypting the cipher text with the same key. <figref idref="DRAWINGS">FIG. 1</figref> illustrates the basic transformation steps of the AES defined algorithm: SubBytes, ShiftRows, MixColumns, AddRoundKey. <figref idref="DRAWINGS">FIG. 2</figref> shows the 4 steps in more detail. They are all linear transformations, except for the SubBytes operation, which is non-linear. The order of the SubBytes and the ShiftRows transformations can be exchanged, because the SubBytes operation performs a mapping of byte values, keeping the order in tact, while the ShiftRows operation changes the order of the bytes, keeping the values in tact. With AES-128 a 128 bit key is used and the cycle of the 4 steps is made 10 rounds, but other key sizes of 192 and 256 are also possible with more rounds.</p>
<p id="p-0007" num="0006">Many different architectures for the best performance with respect to throughput, energy consumption and chip area have been investigated. Architectures with the highest throughput and largest area use a data path width of 128 bits, and employ an unrolling of the round operations. Architectures that are optimised for the smallest area use a data path width of 8 bits, and perform the rounds consecutively. In 8-bit designs, the most area and energy is used by the register that holds the state and key variables. Some designs have employed a single port memory to allow storage of the state variable, and others use specially designed register structures that combine storage of state variable with the ShiftRows transformation (byte permutation units). Ref [5] gives an overview of memory and register based byte permutation units.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 3</figref> shows a high level architecture for an AES core. The high level architecture is disclosed in Ref [3]. <figref idref="DRAWINGS">FIG. 4</figref> shows a detailed flow diagram for the AES core shown in <figref idref="DRAWINGS">FIG. 3</figref>. The AES core comprises a byte permutation unit <b>1</b>, a first S-box <b>2</b>, a MixColumns multiplier <b>3</b>, a parallel-to-serial converter <b>4</b>, a second S-box <b>5</b> and a key expansion unit <b>6</b>. The AES core is an 8-bits AES core. All signal lines shown in <figref idref="DRAWINGS">FIGS. 3 and 4</figref> corresponds to 8-bits wide lines and each delay, multiplexer, demultiplexer, XOR (logical exclusive OR operation) etc., are elements which process the 8-bits input signal signals to obtain 8-bits output signals. The AES core shown in <figref idref="DRAWINGS">FIG. 4</figref> will be used as a reference AES core to elucidate the advantages of the embodiment of the present invention.</p>
<heading id="h-0003" level="1">DEFINITIONS</heading>
<p id="p-0009" num="0008">&#x201c;Bit&#x201d; is a binary digit having a value of 0 or 1.</p>
<p id="p-0010" num="0009">&#x201c;Byte&#x201d; is a group of eight bits that is treated either as a single entity or as an array of 8 individual bytes.</p>
<p id="p-0011" num="0010">&#x201c;Cipher&#x201d; is a series of transformations that converts plaintext to ciphertext using a cipher key.</p>
<p id="p-0012" num="0011">&#x201c;Cipher Key&#x201d; is a secret, cryptographic key that is used by a Key Expansion routine to generate a set of Round Keys; it can be pictured as a rectangular array of bytes having four rows and four columns.</p>
<p id="p-0013" num="0012">&#x201c;Ciphertext&#x201d; is data output from the Cipher or input to an Inverse Cipher.</p>
<p id="p-0014" num="0013">&#x201c;Inverse Cipher&#x201d; is a series of transformations that convert ciphertext to plain text using the Cipher Key.</p>
<p id="p-0015" num="0014">&#x201c;Key Expansion&#x201d; is a routine used to generate a series of Round Keys from the Cipher Key.</p>
<p id="p-0016" num="0015">&#x201c;Plaintext&#x201d; is data input to the Cipher or output from the inverse cipher.</p>
<p id="p-0017" num="0016">&#x201c;Round Key&#x201d; are values derived from the Cipher Key using the key expansion routine and are applied to the State in the Cipher and Inverse Cipher.</p>
<p id="p-0018" num="0017">&#x201c;State&#x201d; is an Intermediate Cipher result that can be pictured as a rectangular array of bytes, having four rows and four columns.</p>
<p id="p-0019" num="0018">&#x201c;S-box&#x201d; a non-linear substitution table used in several byte substitution transformations and in the Key expansion routine to perform a one for one substitution of a byte value.</p>
<p id="p-0020" num="0019">&#x201c;Word&#x201d; is a group of 32 bits that is treated either as a single entity or as an array of 4-bytes.</p>
<p id="p-0021" num="0020">&#x201c;AddRoundKey&#x201d; is a transformation in the Cipher and Inverse Cipher in which a Round Key is added to the State using an XOR operation. The length of a Round Key equals the size of the State, i.e. 16 bytes.</p>
<p id="p-0022" num="0021">&#x201c;MixColumns&#x201d; is a transformation in the Cipher that takes all of the columns of the State and mixes their data (independently of one other) to produce new columns.</p>
<p id="p-0023" num="0022">&#x201c;ShiftRows&#x201d; is a transformation in the Cipher that processes the State by cyclically shifting the last three rows of the State by different offsets.</p>
<p id="p-0024" num="0023">&#x201c;SubBytes&#x201d; is a transformation in the Cipher that processes the State using a non-linear byte substitution table (S-box) that operates on each of the State bytes independently.</p>
<p id="p-0025" num="0024">XOR is Exclusive-OR operation.</p>
<p id="p-0026" num="0025">&#x2295; is Exclusive-OR operation.</p>
<p id="p-0027" num="0026">&#xb7; indicates a finite field multiplication.</p>
<p id="p-0028" num="0027">In the polynomial representation, multiplication in GF(2<sup>8</sup>) (denoted by &#xb7;) corresponds with the multiplication of polynomials modulo an irreducible polynomial of degree 8. A polynomial is irreducible if its only divisors are one and itself. For the AES algorithm, the irreducible polynomial is m(x)=x<sup>8</sup>+x<sup>4</sup>+x<sup>3</sup>+x+1 or {01} {1b} in hexadecimal notation.</p>
<heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0029" num="0028">The present invention seeks to provide an improved Encryption processor, especially for energy efficient encryption of data, using the AES-128 encryption standard.</p>
<p id="p-0030" num="0029">The Encryption processor according to the invention has a byte permutation unit comprising:</p>
<p id="p-0031" num="0030">a data input terminal for receiving input data;</p>
<p id="p-0032" num="0031">two or more row processors, each row processor having an input coupled to the input terminal and an output;</p>
<p id="p-0033" num="0032">a clock gating circuit for generating for each of the two or more row processors a gated clock signal.</p>
<p id="p-0034" num="0033">The object of the invention is achieved by reducing the number of active registers or delays and logic circuitry coupled to the outputs of the registers. This is done by using clock gating circuitry. As a result of the clock gating, the average activity factor of the registers is reduced to 29% compared to the situation that no clock gating was applied. In the prior design shown in <figref idref="DRAWINGS">FIG. 4</figref>, all registers of the circuitry performing the same function are continuously active during processing. Synthesis results show that the area of the prior art circuitry is comparable but uses 60% more power.</p>
<p id="p-0035" num="0034">In an exemplary embodiment of the invention, the byte permutation unit comprises four row processors, and the clock gating circuit is arranged for generating for each of the four row processors a different gated clock signal. It has been found that using four row processors provides an optimal solution with respect to circuitry area.</p>
<p id="p-0036" num="0035">In a further embodiment, the byte permutation unit comprises four output terminals and each output of the four row processors being coupled to a corresponding output terminal. This feature allows to provide State columns to the MixColumns unit and to pipeline the processing in the MixColumns unit. The four input signals are considered as a polynomial over GF(2<sup>8</sup>). This enables the MixColumns unit to perform very efficiently the polynomial and multiplied modulo x<sup>4</sup>+1 with a fixed polynomial a(x), given by
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>a</i>(<i>x</i>)={03<i>}x</i><sup>3</sup>+{01}<i>x</i><sup>2</sup>+{01}<i>x+</i>{02}.<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0037" num="0036">In a further embodiment of the Encryption processor, an output of the S-box unit is coupled to the input terminal of the byte permutation unit, and the four output terminals of the byte permutation unit are coupled to four input terminals of the MixColumns unit, wherein the MixColumns unit comprises:</p>
<p id="p-0038" num="0037">a rotator unit having four input terminals coupled to the four input terminals of the MixColumns unit and four output terminals, wherein the rotator unit is arranged to receive four bytes at the input terminal at a first frequency, to perform a cyclic shift on the four bytes at a second frequency to supply sequentially four groups of four intermediate bytes to four output terminals of the rotator unit, wherein the second frequency is four times the first frequency, and</p>
<p id="p-0039" num="0038">a mixing unit having four input terminals coupled to the four output terminals of the rotator unit and an output terminal, wherein the mixing unit is arranged to combine the data at the four input terminals (c<b>1</b>, c<b>2</b>, c<b>3</b>, c<b>4</b>) to obtain an output signal corresponding to the equation:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>out=({02<i>}&#xb7;c</i>1)&#x2295;({03<i>}&#x2295;c</i>2)&#x2295;<i>c</i>3<i>&#x2295;c</i>4<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
wherein &#xb7; is a multiplication in GF(2<sup>8</sup>) and &#x2295; is a XOR operation, c<b>1</b>, c<b>2</b>, c<b>3</b> and c<b>4</b> are the input signals at the respective four input terminals and out is the output signal at the output terminal. These features allow the Encryption processor to generate in one clock cycle the output signal corresponding to the equation from the input signals.
</p>
<p id="p-0040" num="0039">In a further exemplary embodiment of the invention, the mixing unit comprises circuitry arranged to perform with one fixed constant coefficient multiplier unit a multiplication in the AES Galois Field of input signal c<b>1</b> with the coefficient {02} and input signal c<b>2</b> with the coefficient {03}. These features allow the Encryption processor to obtain with minimal chip area and delay the result of the equation.</p>
<p id="h-0005" num="0000">In an exemplary embodiment of the Encryption processor, the key expansion unit comprises:</p>
<p id="p-0041" num="0040">a processing unit having a first input coupled to an input terminal of the key expansion unit, a first output coupled to an output terminal of the key expansion unit; and</p>
<p id="p-0042" num="0041">a register bank having an input coupled to a second output of the processing unit and an output coupled to a second input of the processing unit, wherein the register bank comprises:</p>
<p id="p-0043" num="0042">four units having a delay line of three delays, each unit having an input coupled to the input of the register bank, a clock signal input and an output;</p>
<p id="p-0044" num="0043">demultiplexer having four inputs, an output coupled to the output of the register bank and a control signal input, each input coupled to an output of the four units; and
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0044">a control unit for alternately supplying an active clock signal to one of the four units and generating a control signal to be supplied to the clock signal input of the demultiplexer. This feature allows to reduce the power consumption further.
<br/>
In an embodiment of the Encryption processor, the Encryption processor further comprises:
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0045" num="0045">an input key terminal for receiving an input key;</p>
<p id="p-0046" num="0046">a first XOR unit having a first input coupled to the input terminal of the Encryption processor and a second input coupled to the second input key terminal of the Encryption processor;</p>
<p id="p-0047" num="0047">a second XOR unit having a first input coupled to the output of the mixing unit, a second input coupled to the output of the output terminal of the key expansion unit;
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0000">
    <ul id="ul0004" list-style="none">
        <li id="ul0004-0001" num="0048">a first multiplexer having a first input coupled to an output of the first XOR unit and a second input coupled to an output of the second XOR unit and an output coupled to an input of the S-box unit, wherein an output of the S-box unit is coupled to the input terminal of the byte permutation unit. These features allows to use only one S-box in stead of four, i.e. four S-boxes one coupled to each of the four outputs of the byte permutation unit. This reduces the chip area and the power consumption.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0048" num="0049">In an further embodiment of the invention, the Encryption processor further comprises:</p>
<p id="p-0049" num="0050">another data input terminal for receiving other input data;</p>
<p id="p-0050" num="0051">an input multiplexer for multiplexing the input data and other input data to obtain a multiplexed data signal to be supplied to the first input of the first XOR unit;</p>
<p id="p-0051" num="0052">a second byte permutation unit having an input coupled to the S-box;</p>
<p id="p-0052" num="0053">a second MixColumns unit coupled to the second byte permutation unit;</p>
<p id="p-0053" num="0054">an output multiplexer having an input coupled to the output of the MixColumns unit and an input coupled to the output of the second MixColumns unit, to obtain a combined signal to be supplied to the second XOR unit. And in another further embodiment of the invention, the Encryption processor further comprises:</p>
<p id="p-0054" num="0055">another data input terminal for receiving other input data;</p>
<p id="p-0055" num="0056">an input multiplexer for multiplexing the input data and other input data to obtain a multiplexed data signal to be supplied to the first input of the first XOR unit;</p>
<p id="p-0056" num="0057">a second byte permutation unit having an input coupled to the S-box and four outputs;</p>
<p id="p-0057" num="0058">wherein the MixColumns unit comprises four additional input terminals coupled to the four outputs of the second byte permutation unit, wherein the inputs of the rotator unit are coupled to the four input terminals and four additional input terminals of the MixColumns unit, wherein the rotator unit is arranged to receive alternating the bytes at the four input terminals and the four additional input terminals at the first frequency, to perform a cyclic shift on the combination of the four bytes at the input terminals and additional input terminals at a third frequency to supply sequentially four intermediate bytes to the four outputs of the rotator unit at the third frequency, wherein the third frequency is eight time the first frequency. Security processing often requires multiple blocks to be encrypted using the same key. For example, in CCM (=CTR+CBC MAC) mode encryption requires two AES cycles for each 16 byte block. One for authentication (CBC MAC mode) and one for encryption (CTR). The implementation of the respective operations of the AES algorithm according to the invention allows us to have an interleaved Encryption processor, wherein the hardware of some operations, for example key expansion unit and S-boxes for more than one AES cycle for each respective 16 byte block of plaintext. This reduces both chip area and power consumption.</p>
<p id="p-0058" num="0059">In an embodiment of the interleaved Encryption processor, the Encryption processor further comprises a clock gating circuit for generating for the byte permutation unit and the second byte permutation unit a first and second gated clock signal respectively. This feature enables to have only one byte permutation unit active at a time. This reduces the power consumption.</p>
<p id="p-0059" num="0060">In all embodiments given above, the reduction of the power consumption makes the invention suitable for use in wireless and battery powered devices. The reduction extends the battery life time and consequently the maintenance costs for systems comprising such wireless and battery powered devices.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0006" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0060" num="0061">The present invention will be discussed in more detail below, using a number of exemplary embodiments, with reference to the attached drawings, in which</p>
<p id="p-0061" num="0062"><figref idref="DRAWINGS">FIG. 1</figref> shows the AES iteration process with successive transformation round;</p>
<p id="p-0062" num="0063"><figref idref="DRAWINGS">FIG. 2</figref> shows the AES iteration process with successive transformation round in more detail;</p>
<p id="p-0063" num="0064"><figref idref="DRAWINGS">FIG. 3</figref> shows a high level architecture of a prior art AES core;</p>
<p id="p-0064" num="0065"><figref idref="DRAWINGS">FIG. 4</figref> shows a data flow diagram of the prior art AES core shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0065" num="0066"><figref idref="DRAWINGS">FIG. 5</figref> shows a data flow diagram of a byte permutation unit according to the invention;</p>
<p id="p-0066" num="0067"><figref idref="DRAWINGS">FIG. 6</figref> shows a data flow diagram of a MixColumns unit according to the invention;</p>
<p id="p-0067" num="0068"><figref idref="DRAWINGS">FIG. 7</figref> shows a data flow diagram of a key expansion unit according to the invention;</p>
<p id="p-0068" num="0069"><figref idref="DRAWINGS">FIG. 8</figref> shows a data flow diagram of an AES encryption core according to the invention;</p>
<p id="p-0069" num="0070"><figref idref="DRAWINGS">FIG. 9</figref> shows a data flow diagram of a parallel AES architecture;</p>
<p id="p-0070" num="0071"><figref idref="DRAWINGS">FIG. 10</figref> shows a data flow diagram of a first embodiment of an interleaved AES architecture;</p>
<p id="p-0071" num="0072"><figref idref="DRAWINGS">FIG. 11</figref> shows a data flow diagram of a second embodiment of an interleaved AES architecture; and</p>
<p id="p-0072" num="0073"><figref idref="DRAWINGS">FIG. 12</figref> shows a data flow diagram of an interleaved rotator unit for use in the interleaved AES architecture of <figref idref="DRAWINGS">FIG. 11</figref>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0007" level="1">DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS</heading>
<p id="p-0073" num="0074">The present invention relates to two architecture aspects. The first architecture aspect relates to an AES encryption core performing one AES encryption cycle on a 16 byte plaintext block with an encryption key. <figref idref="DRAWINGS">FIG. 8</figref> shows the architecture of such an architecture. The second architecture aspect relates to an AES encryption core suitable for performing one AES encryption cycle on two or more 16 byte plaintext blocks using one encryption key. Both architectures improve the efficiency with respect to chip area and power consumption further and will be described below in more detail.</p>
<p id="p-0074" num="0075"><figref idref="DRAWINGS">FIG. 5</figref> shows a data flow diagram of a byte permutation unit (BPU) according to the invention. The byte permutation unit is designed to implement the &#x2018;ShiftRows&#x2019; transformation as specified by [1] in section 5.1.2. This operation reorders the 16-byte state variable (four row and four columns) by cyclically shifting the last three rows of the state by different offsets. The signal lines in the data flow diagram represent 8 bit signals representing one byte. The operations in the flow diagram are performed on 8 bit signals.</p>
<p id="p-0075" num="0076">The BPU according to the invention comprises a single data input port of 8 bits a and four output ports of 8 bits b<b>1</b>, b<b>2</b>, b<b>3</b>, b<b>4</b>. The BPU comprises further four separate row processing units <b>502</b>, <b>504</b>, <b>506</b>, <b>508</b>. The data input port a is arranged for receiving input data. The input data are blocks of plaintext data comprising 16 bytes of data. The first row processor unit <b>502</b> is implemented as a shift register with 4 delay elements R<b>1</b>-R<b>4</b>. The input of delay element R<b>1</b> is coupled to the input of the BPU and the output of delay element R<b>4</b> is coupled to the output port b<b>1</b> of the BPU. The second row processor unit <b>504</b> is implemented as a shift register with 4 delay elements R<b>5</b>-R<b>8</b> and a multiplexer M<b>1</b>. A first input of the multiplexer M<b>1</b> is coupled to the input a of the byte processing unit. The output of the multiplexer M<b>1</b> is coupled to the input of delay element R<b>5</b> and a second input of the multiplexer M<b>1</b> is coupled to the output of delay element R<b>8</b>. The output of delay element R<b>8</b> is coupled to the output port b<b>2</b> of the BPU. The third row processor unit <b>506</b> comprises a shift register with 4 delay elements R<b>9</b>-R<b>12</b> and two multiplexers M<b>2</b> and M<b>3</b>. A first input of the two multiplexers is coupled to the input a of the BPU. The second input of multiplexer M<b>2</b> is coupled to the output of delay element R<b>12</b> and the output of multiplexer M<b>2</b> is coupled to the input of delay element R<b>9</b>. The second input of multiplexer M<b>3</b> is coupled to the output of delay element R<b>10</b> and the output of multiplexer M<b>3</b> is coupled to the input of delay element R<b>11</b>. The output of delay element R<b>12</b> is coupled to the output port b<b>3</b> of the BPU. The fourth row processor <b>508</b> comprises a shift register of three delay elements R<b>13</b>-R<b>15</b> and a multiplexer M<b>4</b>. A first input of the multiplexer M<b>4</b> is coupled to the input port a of the BPU and a second input of the multiplexer M<b>4</b> is coupled to the output of delay element R<b>15</b>. The output of the multiplexer is coupled to the output port b<b>4</b> of the BPU. The BPU comprises further a clock gating circuit <b>510</b> for generating for each of the row processors a gated clock signal. The clock gates G<b>1</b>-G<b>4</b> could be implemented by a logical AND function, wherein the gated clock signal corresponds the signal obtained by performing a logical AND function on the clock signal clk and a control signal. Other implementations are commonly known to the person skilled in the art. By means of the clock gating function the number of active register of delay elements is reduced which reduces the power consumption.</p>
<p id="p-0076" num="0077">The control signals for the multiplexers M<b>1</b>-M<b>4</b> and the clock gates G<b>1</b>-G<b>4</b> are generated by a central control unit (not shown). The values for the control signals show a periodic pattern that is repeated every 16 clock cycles. Table 1 shows the values of the respective control signals during the 16 clock cycles.</p>
<p id="p-0077" num="0078">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="259pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 1</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Control signals for the byte permutation unit.</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="14pt" align="left"/>
<colspec colname="2" colwidth="245pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>Time</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="17">
<colspec colname="1" colwidth="14pt" align="left"/>
<colspec colname="2" colwidth="14pt" align="center"/>
<colspec colname="3" colwidth="21pt" align="center"/>
<colspec colname="4" colwidth="14pt" align="center"/>
<colspec colname="5" colwidth="14pt" align="center"/>
<colspec colname="6" colwidth="14pt" align="center"/>
<colspec colname="7" colwidth="21pt" align="center"/>
<colspec colname="8" colwidth="14pt" align="center"/>
<colspec colname="9" colwidth="14pt" align="center"/>
<colspec colname="10" colwidth="14pt" align="center"/>
<colspec colname="11" colwidth="14pt" align="center"/>
<colspec colname="12" colwidth="14pt" align="center"/>
<colspec colname="13" colwidth="14pt" align="center"/>
<colspec colname="14" colwidth="21pt" align="center"/>
<colspec colname="15" colwidth="14pt" align="center"/>
<colspec colname="16" colwidth="14pt" align="center"/>
<colspec colname="17" colwidth="14pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
<entry>4</entry>
<entry>5</entry>
<entry>6</entry>
<entry>7</entry>
<entry>8</entry>
<entry>9</entry>
<entry>10</entry>
<entry>11</entry>
<entry>12</entry>
<entry>13</entry>
<entry>14</entry>
<entry>15</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="14pt" align="left"/>
<colspec colname="2" colwidth="245pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>Row</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="17">
<colspec colname="1" colwidth="14pt" align="left"/>
<colspec colname="2" colwidth="14pt" align="center"/>
<colspec colname="3" colwidth="21pt" align="center"/>
<colspec colname="4" colwidth="14pt" align="center"/>
<colspec colname="5" colwidth="14pt" align="center"/>
<colspec colname="6" colwidth="14pt" align="center"/>
<colspec colname="7" colwidth="21pt" align="center"/>
<colspec colname="8" colwidth="14pt" align="center"/>
<colspec colname="9" colwidth="14pt" align="center"/>
<colspec colname="10" colwidth="14pt" align="center"/>
<colspec colname="11" colwidth="14pt" align="center"/>
<colspec colname="12" colwidth="14pt" align="center"/>
<colspec colname="13" colwidth="14pt" align="center"/>
<colspec colname="14" colwidth="21pt" align="center"/>
<colspec colname="15" colwidth="14pt" align="center"/>
<colspec colname="16" colwidth="14pt" align="center"/>
<colspec colname="17" colwidth="14pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="14pt" align="left"/>
<colspec colname="2" colwidth="245pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>Column</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="17">
<colspec colname="1" colwidth="14pt" align="left"/>
<colspec colname="2" colwidth="14pt" align="center"/>
<colspec colname="3" colwidth="21pt" align="center"/>
<colspec colname="4" colwidth="14pt" align="center"/>
<colspec colname="5" colwidth="14pt" align="center"/>
<colspec colname="6" colwidth="14pt" align="center"/>
<colspec colname="7" colwidth="21pt" align="center"/>
<colspec colname="8" colwidth="14pt" align="center"/>
<colspec colname="9" colwidth="14pt" align="center"/>
<colspec colname="10" colwidth="14pt" align="center"/>
<colspec colname="11" colwidth="14pt" align="center"/>
<colspec colname="12" colwidth="14pt" align="center"/>
<colspec colname="13" colwidth="14pt" align="center"/>
<colspec colname="14" colwidth="21pt" align="center"/>
<colspec colname="15" colwidth="14pt" align="center"/>
<colspec colname="16" colwidth="14pt" align="center"/>
<colspec colname="17" colwidth="14pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>2</entry>
<entry>2</entry>
<entry>2</entry>
<entry>2</entry>
<entry>3</entry>
<entry>3</entry>
<entry>3</entry>
<entry>3</entry>
</row>
<row>
<entry namest="1" nameend="17" align="center" rowsep="1"/>
</row>
<row>
<entry>M1</entry>
<entry>X</entry>
<entry>0</entry>
<entry>X</entry>
<entry>X</entry>
<entry>X</entry>
<entry>0</entry>
<entry>X</entry>
<entry>X</entry>
<entry>X</entry>
<entry>0</entry>
<entry>X</entry>
<entry>X</entry>
<entry>X</entry>
<entry>0</entry>
<entry>1</entry>
<entry>X</entry>
</row>
<row>
<entry>M2</entry>
<entry>X</entry>
<entry>X</entry>
<entry>0</entry>
<entry>X</entry>
<entry>X</entry>
<entry>X</entry>
<entry>0</entry>
<entry>X</entry>
<entry>X</entry>
<entry>X</entry>
<entry>0</entry>
<entry>X</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>X</entry>
</row>
<row>
<entry>M3</entry>
<entry>X</entry>
<entry>X</entry>
<entry>0</entry>
<entry>X</entry>
<entry>X</entry>
<entry>X</entry>
<entry>0</entry>
<entry>X</entry>
<entry>X</entry>
<entry>X</entry>
<entry>0</entry>
<entry>X</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>X</entry>
</row>
<row>
<entry>M4</entry>
<entry>X</entry>
<entry>X</entry>
<entry>X</entry>
<entry>0</entry>
<entry>X</entry>
<entry>X</entry>
<entry>X</entry>
<entry>0</entry>
<entry>X</entry>
<entry>X</entry>
<entry>X</entry>
<entry>0</entry>
<entry>X</entry>
<entry>X</entry>
<entry>X</entry>
<entry>1</entry>
</row>
<row>
<entry>G1</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
</row>
<row>
<entry>G2</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>1</entry>
<entry>0</entry>
</row>
<row>
<entry>G3</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>0</entry>
</row>
<row>
<entry>G4</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
</row>
<row>
<entry namest="1" nameend="17" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0078" num="0079">In table 1, it can be seen that the control signal for the multiplexers M<b>1</b>-M<b>4</b> can have three different values, namely &#x2018;1&#x2019;, &#x2018;0&#x2019; and &#x2018;X&#x2019;. Under control of a value &#x2018;0&#x2019; or &#x2018;1&#x2019;, the multiplexer will supply the signal at the input port indicated with a &#x2018;0&#x2019; or &#x2018;1&#x2019; respectively to the output of the multiplexer. A value &#x2018;X&#x2019; represents a don't care signal, i.e. the value could be either a &#x2018;0&#x2019; or a &#x2018;1&#x2019;. As the delay elements coupled to a multiplexer do not have an active clock signal, any value could be supplied to the multiplexer. The &#x2018;X&#x2019; value in table 1 enables to reduce the complexity to the control unit and consequently the chip area.</p>
<p id="p-0079" num="0080">During a period of 16 clock cycles, the input data is written consecutively to the input port a (traversing rows first, columns next). When columns 0, 1 and 2 are processed, only one row processor is activated at any time using the clock gates G<b>1</b>-G<b>4</b>. Then, the other row processors are not used and therefore the energy consumption is reduced. When column 3 is processed, one additional shift operation is performed by row processor <b>2</b> during the third byte, and two additional shift operations are performed by row processor <b>3</b> during the first two bytes. The registers of row processor <b>4</b> stay unchanged and are kept in low power mode for the entire column. As a result of the clock gating, the average activity factor of the registers is reduced to 18/64=28.1%.</p>
<p id="p-0080" num="0081">In total, the BPU according to the invention uses 15 delay elements R<b>1</b>-R<b>15</b>, 4 multiplexers M<b>1</b>-M<b>4</b> and some clock gating circuitry <b>510</b>. A recent prior art implementation of the ShiftRows operation is illustrated in <figref idref="DRAWINGS">FIG. 4</figref>, contour <b>1</b>. In the prior art implementation, the BPU has 4 multiplexers and 12 shift registers. The AES design based on that implementation features a parallel-to-serial-converter (<figref idref="DRAWINGS">FIG. 4</figref>, contour <b>4</b>), which is not required for an AES architecture based on the present invention. For the purpose of comparing the prior art implementation with the first embodiment of the present invention, we combine the resources of the BPU (<figref idref="DRAWINGS">FIG. 4</figref>, contour <b>1</b>) and the parallel-to-serial converter (<figref idref="DRAWINGS">FIG. 4</figref>, contour <b>4</b>). In total, the prior art implementation requires 15 registers and 8 multiplexers. All registers are continually active during processing. Synthesis result shows that the prior art implementation uses 57% more area and 149% more power compared to the embodiment of the BPU according to the invention.</p>
<p id="p-0081" num="0082">It should be noted that a power reduction can also be obtained by having two, three, five or more row processors. However, in that case a less optimal solution will be found with respect to the combination chip area and power consumption. Furthermore, having four output ports b<b>1</b>-b<b>4</b> has an advantage when the four output signals are supplied simultaneously to a MixColumns unit <b>802</b> of the AES processor. Each fourth clock cycle the four signals b<b>1</b>-b<b>4</b> of the four output ports correspond to a column of 4 bytes of the state being output of the ShiftRows transformation.</p>
<p id="p-0082" num="0083"><figref idref="DRAWINGS">FIG. 6</figref> shows a data flow diagram of a MixColumns unit <b>802</b> according to the invention. The MixColumns unit <b>802</b> comprises two part. The first part is a rotator unit <b>602</b> and the second part is a mixing unit <b>604</b>. The MixColumns unit <b>802</b> according to the invention is a pipelined column mixer to execute the &#x2018;MixColumns&#x2019; transformation as specified by [1]. The rotator unit <b>602</b> comprises 4 registers (R<b>16</b>-R<b>19</b>) and 4 multiplexers (M<b>5</b>-M<b>8</b>). The mixing unit <b>604</b> comprises five XOR units (X<b>1</b>-X<b>5</b>), a shift unit (S<b>1</b>), and two multiplexers (M<b>9</b>-M<b>10</b>).</p>
<p id="p-0083" num="0084">As said before, each fourth clock cycle, the four output signals b<b>1</b>-b<b>4</b> of the byte permutation unit represent a column of 4 bytes of the state being the output result of the ShiftRows transformation. An entire column of a state (=4 bytes) is loaded in a single clock cycle from the BPU (with b<b>1</b>-b<b>4</b> from <figref idref="DRAWINGS">FIG. 6</figref>) into the registers R<b>16</b>-R<b>19</b>.</p>
<p id="p-0084" num="0085">In the four subsequent cycles, the register values are rotated to perform a cyclic shift on the four bytes. In this way, sequentially four groups of four output bytes are supplied to four output terminals of the rotator unit. Each clock cycle, four bytes c<b>1</b>-c<b>4</b> are supplied to the mixing unit <b>604</b>.</p>
<p id="p-0085" num="0086">The &#x2018;MixColumns&#x2019; transformation operates on the State column-by column, treating each column as a four term polynomial as described in Sec. 4.3 of [1]. The columns are considered as polynomials over GF(2<sup>8</sup>) and multiplied modulo x<sup>4</sup>+1 with a fixed polynomial a(x), given by
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>a</i>(<i>x</i>)={03}<i>x</i><sup>3</sup>+{01}<i>x</i><sup>2</sup>+{01}<i>x+{</i>02}.<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0086" num="0087">This can be written as a matrix multiplication s&#x2032;(x)=a(x)<img id="CUSTOM-CHARACTER-00001" he="2.79mm" wi="2.12mm" file="US08625781-20140107-P00001.TIF" alt="custom character" img-content="character" img-format="tif"/>s(x).</p>
<p id="p-0087" num="0088">Ref [1] teaches that as a result of this matrix multiplication the four bytes b<b>1</b>-b<b>4</b> in a column are replaced by the following:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i><sub>0</sub>=({02<i>}&#xb7;b</i>1)&#x2295;({03<i>}&#xb7;b</i>2)&#x2295;{01<i>}b</i>3&#x2295;{01<i>}b</i>4<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i><sub>1</sub>=({02<i>}&#xb7;b</i>2)&#x2295;({03<i>}&#xb7;b</i>3)&#x2295;{01<i>}b</i>4&#x2295;{01<i>}b</i>1.<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i><sub>2</sub>=({02<i>}&#xb7;b</i>3)&#x2295;({03<i>}&#xb7;b</i>4)&#x2295;{01<i>}b</i>1&#x2295;{01<i>}b</i>2.<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i><sub>3</sub>=({02<i>}&#xb7;b</i>4)&#x2295;({03<i>}&#xb7;b</i>1)&#x2295;{01<i>}b</i>2&#x2295;{01<i>}b</i>3.<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0088" num="0089">Wherein d<sub>0</sub>, d<sub>1</sub>, d<sub>2 </sub>and d<sub>3 </sub>form a column of a state outputted by the MixColumns transformation. From the equations above, it can easily be seen that the four values of d<sub>0</sub>, d<sub>1</sub>, d<sub>2 </sub>and d<sub>3 </sub>can be obtained by cyclic rotation of the values of b<b>1</b>, b<b>2</b>, b<b>3</b> and b<b>4</b> and performing the same function of the rotated values. The rotator unit <b>602</b> performs the cyclic rotation of the values b<b>1</b>, b<b>2</b>, b<b>3</b> and b<b>4</b> and the mixing unit <b>604</b> performs the function above and computes output signal d from the register output values corresponding to the signals c<b>1</b>-c<b>4</b>. In this way, the combination of the rotation unit <b>602</b> and mixing unit <b>604</b> of the MixColumns unit transforms a state column at the output of the ShiftRows transformation into a state column of the MixColumns transformation.</p>
<p id="p-0089" num="0090">In the mixing unit <b>604</b>, the signals c<b>1</b> and c<b>2</b> are added using XOR unit X<b>1</b>. The result is multiplied by two, using shift unit S<b>1</b>. The output of S<b>1</b> is XOR-ed using XOR unit X<b>2</b>, with the constant {1b}=&#x201c;0011011&#x201d;. Multiplexer M<b>5</b> selects the output of XOR unit X<b>2</b> when the most significant bit of the output of XOR unit X<b>1</b> has the value &#x2018;1&#x2019;, otherwise the output of S<b>1</b> is selected. The selection signal is indicated by the dashed line from the signal line between XOR unit X<b>1</b> and shift unit S<b>1</b> to the multiplexer M<b>9</b>. The circuit formed by shift unit S<b>1</b>, XOR unit X<b>2</b> and multiplexer M<b>5</b> effectively implements a constant coefficient multiplier in the AES Galois Field with the coefficient {02}.</p>
<p id="p-0090" num="0091">Subsequently, the values of c<b>2</b>, c<b>3</b> and c<b>4</b> are added to the output of M<b>9</b>, using the XOR units X<b>3</b>, X<b>4</b> and X<b>5</b> to obtain the output signal d. The circuitry is arranged to perform with one fixed constant coefficient multiplier unit <b>608</b>, a multiplication in the AES Galois Field of input signal c<b>1</b> with the coefficient {02} and input signal c<b>2</b> with the coefficient {03}.</p>
<p id="h-0008" num="0000">The implementation of mixing unit <b>604</b> performs the following function:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i>=({02}&#xb7;(<i>c</i>1<i>+c</i>2))&#x2295;<i>c</i>2<i>&#x2295;c</i>3<i>&#x2295;c</i>4<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0091" num="0092">wherein &#xb7; is a multiplication in GF(2<sup>8</sup>) and &#x2295; is a XOR operation, c<b>1</b>, c<b>2</b>, c<b>3</b> and c<b>4</b> are the input signals at the respective four input terminals and out is the output signal at the output terminal This corresponds, without proof, to the equation:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i>=({02<i>}&#xb7;c</i>1)&#x2295;({03<i>}&#xb7;c</i>2)&#x2295;<i>c</i>3<i>&#x2295;c</i>4.<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0092" num="0093">In the last round of an encryption cycle, the MixColumns operation should not be performed. In that case, multiplexer M<b>10</b> is used to bypass the mixing network, by selecting signal c<b>1</b> instead of the output of XOR unit X<b>3</b>.</p>
<p id="p-0093" num="0094">The embodiment of the byte permutation unit with four outputs and MixColumns unit with four inputs form an optimal combination. Input data rate at the input of the byte permutation unit is similar to the output data rate at the output of the MixColumns unit. This allows to use a clock signal having the same frequency. In this embodiment the SubBytes transformation is preferably performed before the data is supplied to the byte permutation unit. However, the SubBytes transformation can still be applied to the four output signals of the byte permutation unit. In that case four S-box instances have to be developed, which require more circuitry than a non-pipelined S-box before the byte permutation unit.</p>
<p id="p-0094" num="0095">Table 2 shows the values of the control signals for the multiplexers of the rotator unit and table 3 shows the values of the control signals for multiplexer M<b>10</b> of the mixing unit <b>604</b>.</p>
<p id="p-0095" num="0096">
<tables id="TABLE-US-00002" num="00002">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 2</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Control signals for the rotator depicted in FIG. 6a.</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="77pt" align="left"/>
<colspec colname="1" colwidth="119pt" align="center"/>
<colspec colname="2" colwidth="21pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Time</entry>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="offset" colwidth="77pt" align="left"/>
<colspec colname="1" colwidth="14pt" align="center"/>
<colspec colname="2" colwidth="56pt" align="center"/>
<colspec colname="3" colwidth="14pt" align="center"/>
<colspec colname="4" colwidth="56pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="4" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="6">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="49pt" align="left"/>
<colspec colname="2" colwidth="14pt" align="center"/>
<colspec colname="3" colwidth="56pt" align="center"/>
<colspec colname="4" colwidth="14pt" align="center"/>
<colspec colname="5" colwidth="56pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>M5-M8</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0096" num="0097">
<tables id="TABLE-US-00003" num="00003">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 3</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Control signals for mixing unit depicted in FIG. 6b.</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="168pt" align="center"/>
<colspec colname="3" colwidth="7pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>Time</entry>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="9">
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="14pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="14pt" align="center"/>
<colspec colname="5" colwidth="28pt" align="center"/>
<colspec colname="6" colwidth="14pt" align="center"/>
<colspec colname="7" colwidth="28pt" align="center"/>
<colspec colname="8" colwidth="14pt" align="center"/>
<colspec colname="9" colwidth="35pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>0</entry>
<entry>1</entry>
<entry>. . .</entry>
<entry>15</entry>
<entry>16</entry>
<entry>17</entry>
<entry>. . .</entry>
<entry>159</entry>
</row>
<row>
<entry namest="1" nameend="9" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="10">
<colspec colname="1" colwidth="14pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="left"/>
<colspec colname="3" colwidth="14pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="14pt" align="center"/>
<colspec colname="6" colwidth="28pt" align="center"/>
<colspec colname="7" colwidth="14pt" align="center"/>
<colspec colname="8" colwidth="28pt" align="center"/>
<colspec colname="9" colwidth="14pt" align="center"/>
<colspec colname="10" colwidth="35pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>M10</entry>
<entry>1</entry>
<entry>1</entry>
<entry>. . .</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>. . .</entry>
<entry>0</entry>
</row>
<row>
<entry namest="1" nameend="10" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0097" num="0098">The resources used by the embodiment are: 4 registers, 6 multiplexers, 5 XOR units and a shift unit (S<b>1</b>). A recent prior art implementation of the MixColumns transformation is illustrated in <figref idref="DRAWINGS">FIG. 4</figref>, contour <b>3</b>. That implementation uses a 1-byte input, and a 4 byte output that is fed into a parallel to serial converter, and requires 4 registers, 4 XOR units, 4 AND units and two fixed constant multipliers. From [1] section 4.2.1 can be learned that a fixed constant multiplier can be implemented by performing repeated application of the a left shift and a subsequent conditional bitwise XOR with {1b}. To implement the two fixed constant multipliers {02} and {03} at least two left shift units, three XOR units and two multiplexers are required.</p>
<p id="p-0098" num="0099"><figref idref="DRAWINGS">FIG. 7</figref> shows a data flow diagram of a key expansion unit according to the invention. Similar to the byte permutation unit, clock gating is used to reduce the power consumption. The key expansion unit comprises 17 registers R<b>20</b>-R<b>36</b>, 5 multiplexers M<b>11</b>-M<b>15</b>, 2 XOR units X<b>6</b>-X<b>7</b>, 4 clock gates G<b>5</b>-G<b>8</b>, a Round Constant generator RC, and an S-box S<b>2</b>.</p>
<p id="p-0099" num="0100">The purpose of the key expansion unit is to implement the key expansion algorithm described in [1], section 5.2. The key expansion algorithm takes an initial set of 16 bytes, to generate a set of 160 bytes. The embodiment of the key expansion unit generates one new byte at every clock cycle, using the values stored in registers R<b>20</b>-R<b>36</b>.</p>
<p id="p-0100" num="0101">The key expansion unit comprises a processing unit <b>700</b> surrounding a register bank <b>702</b>. The processing unit <b>700</b> includes all circuitry not being part of the register bank <b>702</b>. The processing unit <b>700</b> comprises a first input <b>704</b> coupled to an input terminal key_in of the key expansion unit and a first output <b>706</b> coupled to an output terminal of the key expansion unit. The register bank <b>702</b> includes an input <b>708</b> coupled to a second output <b>708</b> of the processing unit <b>700</b> and an output <b>710</b> coupled to a second input <b>710</b> of the processing unit <b>700</b>. The register bank comprises four units having a delay line of three delays. Each unit has an input coupled to the input of the register bank <b>702</b>, a clock signal input and an output. The first unit comprises the registers R<b>20</b>, R<b>24</b>, R<b>28</b>. The second unit comprises the registers R<b>21</b>, R<b>25</b>, R<b>29</b>. The third unit comprises the registers R<b>22</b>, R<b>26</b>, R<b>30</b> and the fourth unit comprises the registers R<b>23</b>, R<b>27</b> and R<b>31</b>. A demultiplexer M<b>14</b> has four inputs, an output coupled to the output <b>710</b> of the register bank and a control signal input, each input coupled to an output of the four units. The register bank further comprises a control unit <b>712</b> for alternately supplying an active clock signal to one of the four units by means of the clock gates G<b>5</b>-G<b>8</b> and for generating a control signal to be supplied to the clock signal input of the demultiplexer M<b>14</b>.</p>
<p id="p-0101" num="0102">The key expansion takes place in 10 rounds of 16 clock cycles. A new key expansion cycle can be started every 160 clock cycles. Because the circuit has a latency of 16 clock cycles, it will output the last 16 bytes of the previous expansion cycle during the first 16 clock cycles of the next expansion cycle.</p>
<p id="p-0102" num="0103">During the first round, multiplexer M<b>11</b> selects new key data bytes from the input port key_in. During the subsequent rounds, M<b>11</b> selects the feedback output from register R<b>35</b>. The output of multiplexer M<b>11</b> is fed into one of the registers R<b>20</b>-R<b>23</b>. The registers R<b>20</b>-R<b>28</b> are grouped in four rows of three registers each. Every clock cycle, only one of the rows is activated using the clock gates G<b>5</b>-G<b>8</b>. The output of the active row is selected by multiplexer M<b>14</b>. Together with register R<b>32</b>, these registers form a tapped delay line containing the values of the previous 13 outputs.</p>
<p id="p-0103" num="0104">In clock cycles <b>0</b>-<b>11</b> of each round, multiplexer M<b>15</b> selects the lower input, which is connected to the output of register R<b>36</b>. During this period, the upper branch formed by multiplexer M<b>13</b>, S-box S<b>2</b> and XOR unit X<b>6</b> is silenced, because multiplexer M<b>13</b> selects the constant input <b>0</b> at the input indicated with 1. As a result, two taps with a delay difference of 12 bytes are XOR-ed by XOR unit X<b>7</b>. During clock cycles <b>12</b>-<b>15</b> of each round, multiplexer M<b>15</b> selects the upper input, which is connected to the output of XOR unit X<b>6</b>. During clock cycles <b>13</b>-<b>14</b>, multiplexer M<b>13</b> selects the output of multiplexer M<b>12</b>. The result is fed through the S-box S<b>2</b>, and XOR-ed by XOR unit X<b>6</b> with the output of the round constant generator RC. As a result, two taps with a delay difference of 13 bytes are XOR-ed by XOR unit X<b>7</b>. At clock cycle <b>15</b>, multiplexer M<b>13</b> selects the output of R<b>20</b>. As a result, two taps with a delay difference of 9 bytes are XOR-ed by XOR unit X<b>7</b>.</p>
<p id="p-0104" num="0105">The output of XOR unit X<b>7</b> is delayed by 3 clock cycles by registers R<b>33</b>-R<b>35</b>. The output of register R<b>35</b> is used as key_out signal and feed back to the multiplexers M<b>11</b> and M<b>12</b>. Multiplexer M<b>12</b> normally selects the output of register R<b>35</b>, except during clock cycles <b>12</b>-<b>15</b> of the first round. In this period, multiplexer M<b>12</b> selects the value of the input port key_in.</p>
<p id="p-0105" num="0106">Tables 4 shows the values of the clock gating control signals. The clock gating control signals are repeated every four clock cycles.</p>
<p id="p-0106" num="0107">
<tables id="TABLE-US-00004" num="00004">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 4</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>clock gating control signals.</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="63pt" align="left"/>
<colspec colname="1" colwidth="126pt" align="center"/>
<colspec colname="2" colwidth="28pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Time</entry>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="6">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="14pt" align="center"/>
<colspec colname="3" colwidth="56pt" align="center"/>
<colspec colname="4" colwidth="14pt" align="center"/>
<colspec colname="5" colwidth="70pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>Gate</entry>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>G5</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
</row>
<row>
<entry/>
<entry>G6</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
</row>
<row>
<entry/>
<entry>G7</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
</row>
<row>
<entry/>
<entry>G8</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0107" num="0108">Table 5 shows the values of the control signals for the multiplexers of the key expansion unit during the first round, i.e. the first 16 clock cycles. The value indicates which input port of the multiplexer will be selected.</p>
<p id="p-0108" num="0109">
<tables id="TABLE-US-00005" num="00005">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 5</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Multiplexer control signals during first round.</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="189pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>Time</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="17">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="7pt" align="center"/>
<colspec colname="3" colwidth="14pt" align="center"/>
<colspec colname="4" colwidth="7pt" align="center"/>
<colspec colname="5" colwidth="14pt" align="center"/>
<colspec colname="6" colwidth="7pt" align="center"/>
<colspec colname="7" colwidth="14pt" align="center"/>
<colspec colname="8" colwidth="7pt" align="center"/>
<colspec colname="9" colwidth="14pt" align="center"/>
<colspec colname="10" colwidth="7pt" align="center"/>
<colspec colname="11" colwidth="14pt" align="center"/>
<colspec colname="12" colwidth="14pt" align="center"/>
<colspec colname="13" colwidth="14pt" align="center"/>
<colspec colname="14" colwidth="14pt" align="center"/>
<colspec colname="15" colwidth="14pt" align="center"/>
<colspec colname="16" colwidth="14pt" align="center"/>
<colspec colname="17" colwidth="14pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
<entry>4</entry>
<entry>5</entry>
<entry>6</entry>
<entry>7</entry>
<entry>8</entry>
<entry>9</entry>
<entry>10</entry>
<entry>11</entry>
<entry>12</entry>
<entry>13</entry>
<entry>14</entry>
<entry>15</entry>
</row>
<row>
<entry namest="1" nameend="17" align="center" rowsep="1"/>
</row>
<row>
<entry>M11</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
</row>
<row>
<entry>M12</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
</row>
<row>
<entry>M13</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>2</entry>
<entry>2</entry>
<entry>2</entry>
<entry>0</entry>
</row>
<row>
<entry>M14</entry>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
</row>
<row>
<entry>M15</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
</row>
<row>
<entry namest="1" nameend="17" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0109" num="0110">Table 6 shows the values of the control signals for the multiplexers of the key expansion unit during the subsequent 9 rounds, i.e. the subsequent 9 rounds of 16 clock cycles.</p>
<p id="p-0110" num="0111">
<tables id="TABLE-US-00006" num="00006">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 6</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Multiplexer control signal during subsequent 9 rounds.</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="189pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>Time</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="17">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="7pt" align="center"/>
<colspec colname="3" colwidth="14pt" align="center"/>
<colspec colname="4" colwidth="7pt" align="center"/>
<colspec colname="5" colwidth="14pt" align="center"/>
<colspec colname="6" colwidth="7pt" align="center"/>
<colspec colname="7" colwidth="14pt" align="center"/>
<colspec colname="8" colwidth="7pt" align="center"/>
<colspec colname="9" colwidth="14pt" align="center"/>
<colspec colname="10" colwidth="7pt" align="center"/>
<colspec colname="11" colwidth="14pt" align="center"/>
<colspec colname="12" colwidth="14pt" align="center"/>
<colspec colname="13" colwidth="14pt" align="center"/>
<colspec colname="14" colwidth="14pt" align="center"/>
<colspec colname="15" colwidth="14pt" align="center"/>
<colspec colname="16" colwidth="14pt" align="center"/>
<colspec colname="17" colwidth="14pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
<entry>4</entry>
<entry>5</entry>
<entry>6</entry>
<entry>7</entry>
<entry>8</entry>
<entry>9</entry>
<entry>10</entry>
<entry>11</entry>
<entry>12</entry>
<entry>13</entry>
<entry>14</entry>
<entry>15</entry>
</row>
<row>
<entry namest="1" nameend="17" align="center" rowsep="1"/>
</row>
<row>
<entry>M11</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
</row>
<row>
<entry>M12</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
</row>
<row>
<entry>M13</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>2</entry>
<entry>2</entry>
<entry>2</entry>
<entry>0</entry>
</row>
<row>
<entry>M14</entry>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
</row>
<row>
<entry>M15</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
</row>
<row>
<entry namest="1" nameend="17" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0111" num="0112">The embodiment of the key expansion unit in <figref idref="DRAWINGS">FIG. 5</figref> can be compared to the key expansion unit shown in [4], contour <b>5</b> and <b>6</b>, which uses comparable resources: 17 registers, 4 multiplexers, 3 XOR units, 1 S-box <b>2</b> and 1 round constant generator. However, in that implementation, all 17 registers are always active, while for this embodiment only 8 registers are active at any time. Comparison of synthesis results shows that the implementation of the Key expansion unit according to the present invention uses 18% less area and 27% less power compared to the prior art implementation.</p>
<p id="p-0112" num="0113"><figref idref="DRAWINGS">FIG. 8</figref> shows the architecture of an AES encryption core according to the invention using the byte permutation unit <b>806</b>, MixColumns unit <b>802</b> and key expansion unit <b>804</b> described above. The AES encryption core, comprises two XOR units XOR<b>81</b> and XOR<b>82</b>, a multiplexer MUX<b>81</b>, an S-box <b>808</b>, a clock gated byte permutation unit <b>806</b>, a MixColumns unit <b>802</b> consisting of a rotator unit ROT and a mixing unit MIX and a Clock Gated Key Expansion unit KEX.</p>
<p id="p-0113" num="0114">The plaintext p, being a four by four block of 16 bytes, is XOR-ed with the input key k by the XOR<b>81</b> unit. In the first round of 16 clock cycles, the MUX<b>81</b> unit selects the output of XOR<b>81</b>. In the subsequent 9 rounds, it selects the signal at the output of XOR<b>82</b>. The output signal of MUX<b>81</b> is fed through the S-box, into the Byte Permutation Unit <b>806</b>, which has four parallel outputs. The four parallel outputs are coupled to the MixColumns unit <b>802</b>. The four signals at the input of the MixColumns unit <b>802</b> are fed into the Rotation Unit ROT to obtain four output signals to be supplied to the Mixing Unit MIX. The output signal from the mixing unit XOR-ed with the output of the key expander, and supplied to the output port q.</p>
<p id="p-0114" num="0115">The architecture does not need additional delay elements to synchronize the respective signals. The key expansion unit <b>804</b> has a latency of 16 clock cycles. The XOR units XOR<b>81</b>, XOR <b>82</b>, multiplexer <b>81</b>, S-box do not have a latency. The byte permutation unit has a latency of 15 clock cycles and the rotator unit ROT of the MixColumns unit <b>802</b> has a latency of one clock cycle. Consequently, the signals at the input of XOR <b>82</b> are in phase and the output of the XOR <b>82</b> can directly be coupled with the input of the multiplexer MUX <b>81</b>.</p>
<p id="p-0115" num="0116">Table 7 provides an overview the performance character of a number of prior art architectures and the AES core shown in <figref idref="DRAWINGS">FIG. 8</figref>. Most of the data has been copied from [3], Table 2.</p>
<p id="p-0116" num="0117">
<tables id="TABLE-US-00007" num="00007">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="301pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 7</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Performance characteristic of various AES implementations.</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="9">
<colspec colname="1" colwidth="14pt" align="left"/>
<colspec colname="2" colwidth="42pt" align="left"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="35pt" align="center"/>
<colspec colname="6" colwidth="35pt" align="center"/>
<colspec colname="7" colwidth="42pt" align="center"/>
<colspec colname="8" colwidth="35pt" align="center"/>
<colspec colname="9" colwidth="42pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>Area</entry>
<entry>number</entry>
<entry>Power</entry>
<entry>Current</entry>
<entry>Energy per</entry>
</row>
<row>
<entry/>
<entry>Design</entry>
<entry>Process</entry>
<entry>Voltage</entry>
<entry>(k gates)</entry>
<entry>of cycles</entry>
<entry>(uW/MHz)</entry>
<entry>(uA/MHz)</entry>
<entry>block (nJ)</entry>
</row>
<row>
<entry namest="1" nameend="9" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="9">
<colspec colname="1" colwidth="14pt" align="center"/>
<colspec colname="2" colwidth="42pt" align="left"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="35pt" align="char" char="."/>
<colspec colname="6" colwidth="35pt" align="char" char="."/>
<colspec colname="7" colwidth="42pt" align="char" char="."/>
<colspec colname="8" colwidth="35pt" align="center"/>
<colspec colname="9" colwidth="42pt" align="char" char="."/>
<tbody valign="top">
<row>
<entry>1</entry>
<entry>Hodjat</entry>
<entry>0.18 um</entry>
<entry>?</entry>
<entry>73.2</entry>
<entry>11</entry>
<entry>291</entry>
<entry>?</entry>
<entry>320</entry>
</row>
<row>
<entry>2</entry>
<entry>Feldhofer</entry>
<entry>0.35 um</entry>
<entry>1.5 V</entry>
<entry>3.4</entry>
<entry>1032</entry>
<entry>45.0</entry>
<entry>30.0</entry>
<entry>46.4</entry>
</row>
<row>
<entry>3</entry>
<entry>H&#xe4;m&#xe4;l&#xe4;inen</entry>
<entry>0.18 um</entry>
<entry>1.6 V</entry>
<entry>3.1</entry>
<entry>160</entry>
<entry>54.7</entry>
<entry>34.2</entry>
<entry>8.8</entry>
</row>
<row>
<entry>4</entry>
<entry>H&#xe4;m&#xe4;l&#xe4;inen</entry>
<entry>0.13 um</entry>
<entry>1.2 V</entry>
<entry>3.2</entry>
<entry>160</entry>
<entry>30.0</entry>
<entry>25.0</entry>
<entry>4.8</entry>
</row>
<row>
<entry>5</entry>
<entry>Xanadu</entry>
<entry>0.18 um</entry>
<entry>1.6 V</entry>
<entry>2.5</entry>
<entry>160</entry>
<entry>31.0</entry>
<entry>19.4</entry>
<entry>5.0</entry>
</row>
<row>
<entry/>
<entry>Wireless</entry>
<entry/>
<entry/>
<entry/>
<entry/>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>6</entry>
<entry>Xanadu</entry>
<entry>0.13 um</entry>
<entry>1.2 V</entry>
<entry>2.5</entry>
<entry>160</entry>
<entry>17.0</entry>
<entry>14.2</entry>
<entry>2.7</entry>
</row>
<row>
<entry/>
<entry>Wireless</entry>
</row>
<row>
<entry namest="1" nameend="9" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0117" num="0118">All energy consumption results are based on gate level simulations, except for design <b>1</b>, which is based on the results of actual power measurements. The energy consumption results for design <b>3</b> were obtained for 0.18 um, by using the source code that was downloaded from the author's website. Design <b>4</b> is the same as 3, the only difference is the process technology.</p>
<p id="p-0118" num="0119">Design <b>5</b> shows the power and area for the AES core architecture shown n <figref idref="DRAWINGS">FIG. 8</figref>, based on a 0.18 um process, obtained from simulation. The result for design <b>6</b> is a prediction for the fourth embodiment on 0.13 um technology, assuming the power ratio between design <b>5</b> and <b>6</b> is the same as between design <b>3</b> and <b>4</b>.</p>
<p id="p-0119" num="0120">Security processing often requires multiple blocks to be encrypted using the same key. For example, in CCM (=CTR+CBC MAC) mode encryption requires two AES cycles for each 16 byte block: one for authentication (CBC MAC mode) and one for encryption (CTR). This is commonly done using one of two methods.</p>
<p id="p-0120" num="0121">In the first method, a single AES core (such as the one depicted in <figref idref="DRAWINGS">FIG. 8</figref>) is first used in CBC-MAC mode for authentication, and then used in CTR mode for encryption. In order to save processing, the output signal of the key expansion unit can be saved for re-use. However, this requires an additional large are because the key expander output signal is 160 bytes long.</p>
<p id="p-0121" num="0122">In the second method, two AES cores are used that run in parallel: one in CTR mode, and one in CBC mode. In this case, one can use a single the key expansion block, saving both power and resources. <figref idref="DRAWINGS">FIG. 9</figref> shows a data flow diagram of a parallel AES architecture using the AES architecture comprising a byte permutation unit having four parallel outputs according to the invention.</p>
<p id="p-0122" num="0123">The byte permutation unit, and MixColumns unit according to the invention allows to obtain an interleaving AES core. <figref idref="DRAWINGS">FIG. 10</figref> shows a data flow diagram or architecture of a first embodiment of an interleaved AES architecture. This AES core comprises a single encryption core that can be used to encrypt two different plain text inputs p<b>1</b> and p<b>2</b>, with the same key k, into cipher texts q<b>1</b> and q<b>2</b>. First, the plain texts p<b>1</b> and p<b>2</b> (16 bytes each) are multiplexed into a single plaintext p&#x2032; (32 bytes) using interleaving at the byte level. The resulting plaintext is processed by an encryption core that uses two byte permutation units (BPU A, BPU B), two column rotator units (ROT A, ROT B) and two mixing units (MIX A, MIX B).</p>
<p id="p-0123" num="0124">At any time, either the upper branch containing the &#x2018;A&#x2019; versions of the units or the lower branch containing the &#x2018;B&#x2019; version is activated, using clock gates G<b>1</b> and G<b>2</b>. The clock gating pattern is such that the &#x2018;A&#x2019; and &#x2018;B&#x2019; branch are alternately activated. The output of the active branch is selected by the multiplexer MUX <b>102</b>, XOR-ed with the output of the key expander, and fed back. The key expander is activated only every other clock cycle, using the clock gate G<b>0</b>. After 10 rounds, of 32 clock cycles each, the result is output as the cipher text q&#x2032;, which can be de-interleaved to obtain the cipher texts q<b>1</b> and q<b>2</b>.</p>
<p id="p-0124" num="0125">Compared to the parallel AES core in <figref idref="DRAWINGS">FIG. 9</figref>, the interleaving AES core of <figref idref="DRAWINGS">FIG. 10</figref> will require slightly less area, mainly because it uses only a single S-box. The total energy required for a single encryption cycle will be approximately the same, but the interleaving AES core requires twice as many clock cycles to complete a single encryption cycle. Hence, the energy per clock cycle will be lower for the interleaving AES core, resulting in a lower peak power usage.</p>
<p id="p-0125" num="0126"><figref idref="DRAWINGS">FIG. 11</figref> shows a data flow diagram of a second embodiment of an interleaved AES architecture. In this embodiment the mixing unit is shared too. An interleaved rotator unit is designed to interleave the output signals of the byte permutation units BPU A and BPU B. <figref idref="DRAWINGS">FIG. 12</figref> shows a data flow diagram of an interleaved rotator unit for use in the interleaved AES architecture of <figref idref="DRAWINGS">FIG. 11</figref>. The multiplexers M<b>71</b>-M<b>74</b> select in the first and second clock cycle of 8 clock cycles the signal supplied by the byte permutation units BPU A and BPU B respectively. In the subsequent 6 clock cycles the register values are rotated to perform a cyclic shift.</p>
<p id="p-0126" num="0127">Several embodiments of the invention have been described above by way of exemplary embodiments. The embodiment are dedicated to the AES encryption standard, but could easily amended to other encryption related algorithms such as block cipher algorithms, hash code generators and random number generators. In general, solutions are provided for using clock gating in encryption processors for use in battery powered devices to reduce the power consumption. Various modifications and variations for the elements described with respect of these embodiments may be made by skilled persons without departing from the scope of the present invention, which is defined by the appended claims.</p>
<heading id="h-0009" level="1">REFERENCES</heading>
<p id="p-0127" num="0000">
<ul id="ul0005" list-style="none">
    <li id="ul0005-0001" num="0128">[1] National Institute of Standards and Technology (NIST). Advanced Encryption Standard (AES), 2001. FIPS-197.</li>
    <li id="ul0005-0002" num="0129">[2] Oswald, E., State of the Art in Hardware Architectures, IST-2002-507932, ECRYPT, European Network of Excellence in Cryptology, Information Society Technologies D.VAM.2, September 2005, rev. 1., p. 12-13.</li>
    <li id="ul0005-0003" num="0130">[3]H&#xe4;mal&#xe4;inen, P. et. al., Design and Implementation of Low-area and Low-power AES Encryption Hardware Core. Proc. of the 9th EUROMICRO Conf. on Digital System Design (DSD'06)</li>
    <li id="ul0005-0004" num="0131">[4] IEEE 802.15.4-2003, Wireless Medium Access control (MAC) and Physical Layer (PHY) Specifications for Low-Rate Wireless Personal Are Networks (LR-WPANs), October 2003, pp. 168-169.</li>
    <li id="ul0005-0005" num="0132">[5] J&#xe4;rvinen, T. et. al., Efficient Byte Permutation Realizations for Compact AES Implementations, 13th European Signal Processing Conference (EUSIPCO 2005), Antalya, Turkey, September, 2005</li>
</ul>
</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. Encryption processor comprising an S-box unit, a byte permutation unit, a MixColumns unit and a key expansion unit, wherein the byte permutation unit comprises:
<claim-text>a data input terminal for receiving input data;</claim-text>
<claim-text>two or more row processors, each row processor having an input coupled to the input terminal and an output;</claim-text>
<claim-text>a clock gating circuit for generating for each of the two or more row processors a gated clock signal:</claim-text>
<claim-text>wherein the byte permutation unit comprises four row processors, and the clock gating circuit is arranged for generating for each of the four row processors a different gated clock signal;</claim-text>
<claim-text>wherein the byte permutation unit comprises four output terminals and each output of the four row processors being coupled to a corresponding output terminal; and</claim-text>
<claim-text>wherein an output of the S-box unit is coupled to the input terminal of the byte permutation unit, and the four output terminals of the byte permutation unit are coupled to four input terminals of the MixColumns unit, wherein the MixColumns unit comprises:</claim-text>
<claim-text>a rotator unit having four input terminals coupled to the four input terminals of the MixColumns unit and four output terminals, wherein the rotator unit is arranged to receive four bytes at the input terminal at a first frequency, to perform a cyclic shift on the four bytes at a second frequency to supply sequentially four groups of four intermediate bytes to four output terminals of the rotator unit, wherein the second frequency is four times the first frequency, and</claim-text>
<claim-text>a mixing unit having four input terminals coupled to the four output terminals of the rotator unit and an output terminal, wherein the mixing unit is arranged to combine the data at the four input terminals (c<b>1</b>, c<b>2</b>, c<b>3</b>, c<b>4</b>) to obtain an output signal corresponding to the equation:
<claim-text>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>out=({02<i>}&#xb7;c</i>1)&#x2295;({03<i>}&#xb7;c</i>2)&#x2295;<i>c</i>3<i>&#x2295;c</i>4;<?in-line-formulae description="In-line Formulae" end="tail"?>
</claim-text>
</claim-text>
<claim-text>wherein &#xb7; is a multiplication in GF(2<sup>8</sup>) and &#x2295; is a XOR operation, c<b>1</b>, c<b>2</b>, c<b>3</b> and c<b>4</b> are the input signals at the respective four input terminals and out is the output signal at the output terminal.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The Encryption processor according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the mixing unit comprises circuitry arranged to perform with one fixed constant coefficient multiplier unit a multiplication in the AES Galois Field of input signal c<b>1</b> with the coefficient {02} and input signal c<b>2</b> with the coefficient {03}.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The Encryption processor according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising a key expansion unit, wherein the key expansion unit comprises:
<claim-text>a processing unit <b>700</b> having a first input coupled to an input terminal of the key expansion unit, a first output coupled to an output terminal of the key expansion unit; and</claim-text>
<claim-text>a register bank <b>702</b> having an input coupled to a second output of the processing unit and an output coupled to a second input of the processing unit, wherein the register bank comprises:</claim-text>
</claim-text>
<claim-text>four units having a delay line of three delays, each unit having an input coupled to the input of the register bank, a clock signal input and an output;
<claim-text>demultiplexer having four inputs, an output coupled to the output of the register bank and a control signal input, each input coupled to an output of the four units; and</claim-text>
</claim-text>
<claim-text>a control unit <b>712</b> for alternately supplying an active clock signal to one of the four units and generating a control signal to be supplied to the clock signal input of the demultiplexer.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The Encryption processor according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the Encryption processor further comprises:
<claim-text>an input key terminal for receiving an input key;</claim-text>
<claim-text>a first Exclusive or (XOR) unit having a first input coupled to the input terminal of the Encryption processor and a second input coupled to the second input key terminal of the Encryption processor;</claim-text>
<claim-text>a second XOR unit having a first input coupled to the output of the MixColumns unit, a second input coupled to the output of the output terminal of the key expansion unit;</claim-text>
<claim-text>a first multiplexer having a first input coupled to an output of the first XOR unit and a second input coupled to an output of the second XOR unit and an output coupled to an input of the S-box unit, wherein an output of the S-box unit is coupled to the input terminal of the byte permutation unit.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The Encryption processor according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the Encryption processor further comprises:
<claim-text>another data input terminal for receiving other input data;</claim-text>
<claim-text>an input multiplexer for multiplexing the input data and other input data to obtain a multiplexed data signal to be supplied to the first input of the first XOR unit;</claim-text>
<claim-text>a second byte permutation unit having an input coupled to the S-box;</claim-text>
<claim-text>a second MixColumns unit coupled to the second byte permutation unit;</claim-text>
<claim-text>an output multiplexer having an input coupled to the output of the MixColumns unit and an input coupled to the output of the second MixColumns unit, to obtain a combined signal to be supplied to the second XOR unit.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The Encryption processor according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the Encryption processor further comprises a clock gating circuit for generating for the byte permutation unit and the second byte permutation unit a first and second gated clock signal respectively.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The Encryption processor according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the Encryption processor further comprises:
<claim-text>another data input terminal for receiving other input data;</claim-text>
<claim-text>an input multiplexer for multiplexing the input data and other input data to obtain a multiplexed data signal to be supplied to the first input of the first XOR unit;</claim-text>
<claim-text>a second byte permutation unit having an input coupled to the S-box and four outputs;</claim-text>
<claim-text>wherein the MixColumns unit comprises four additional input terminals coupled to the four outputs of the second byte permutation unit, wherein the inputs of the rotator unit are coupled to the four input terminals and four additional input terminals of the MixColumns unit, wherein the rotator unit is arranged to receive alternating the bytes at the four input terminals and the four additional input terminals at the first frequency, to perform a cyclic shift on the combination of the four bytes at the input terminals and additional input terminals at a third frequency to supply sequentially four intermediate bytes to the four outputs of the rotator unit at the third frequency, wherein the third frequency is eight time the first frequency.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The Encryption processor according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the Encryption processor further comprises a clock gating circuit for generating for the byte permutation unit and the second byte permutation unit a first and second gated clock signal respectively.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The Encryption processor according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising a key expansion unit, wherein the key expansion unit comprises:
<claim-text>a processing unit <b>700</b> having a first input coupled to an input terminal of the key expansion unit, a first output coupled to an output terminal of the key expansion unit; and</claim-text>
<claim-text>a register bank <b>702</b> having an input coupled to a second output of the processing unit and an output coupled to a second input of the processing unit, wherein the register bank comprises:</claim-text>
</claim-text>
<claim-text>four units having a delay line of three delays, each unit having an input coupled to the input of the register bank, a clock signal input and an output;
<claim-text>demultiplexer having four inputs, an output coupled to the output of the register bank and a control signal input, each input coupled to an output of the four units; and</claim-text>
</claim-text>
<claim-text>a control unit <b>712</b> for alternately supplying an active clock signal to one of the four units and generating a control signal to be supplied to the clock signal input of the demultiplexer.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The Encryption processor according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising a key expansion unit, wherein the key expansion unit comprises:
<claim-text>a processing unit <b>700</b> having a first input coupled to an input terminal of the key expansion unit, a first output coupled to an output terminal of the key expansion unit; and</claim-text>
<claim-text>a register bank <b>702</b> having an input coupled to a second output of the processing unit and an output coupled to a second input of the processing unit, wherein the register bank comprises:</claim-text>
</claim-text>
<claim-text>four units having a delay line of three delays, each unit having an input coupled to the input of the register bank, a clock signal input and an output;
<claim-text>demultiplexer having four inputs, an output coupled to the output of the register bank and a control signal input, each input coupled to an output of the four units; and</claim-text>
</claim-text>
<claim-text>a control unit <b>712</b> for alternately supplying an active clock signal to one of the four units and generating a control signal to be supplied to the clock signal input of the demultiplexer.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The Encryption processor according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising a key expansion unit, wherein the key expansion unit comprises:
<claim-text>a processing unit <b>700</b> having a first input coupled to an input terminal of the key expansion unit, a first output coupled to an output terminal of the key expansion unit; and</claim-text>
<claim-text>a register bank <b>702</b> having an input coupled to a second output of the processing unit and an output coupled to a second input of the processing unit, wherein the register bank comprises:</claim-text>
</claim-text>
<claim-text>four units having a delay line of three delays, each unit having an input coupled to the input of the register bank, a clock signal input and an output;
<claim-text>demultiplexer having four inputs, an output coupled to the output of the register bank and a control signal input, each input coupled to an output of the four units; and</claim-text>
</claim-text>
<claim-text>a control unit <b>712</b> for alternately supplying an active clock signal to one of the four units and generating a control signal to be supplied to the clock signal input of the demultiplexer.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The Encryption processor according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising a key expansion unit, wherein the key expansion unit comprises:
<claim-text>a processing unit <b>700</b> having a first input coupled to an input terminal of the key expansion unit, a first output coupled to an output terminal of the key expansion unit; and</claim-text>
<claim-text>a register bank <b>702</b> having an input coupled to a second output of the processing unit and an output coupled to a second input of the processing unit, wherein the register bank comprises:</claim-text>
</claim-text>
<claim-text>four units having a delay line of three delays, each unit having an input coupled to the input of the register bank, a clock signal input and an output;
<claim-text>demultiplexer having four inputs, an output coupled to the output of the register bank and a control signal input, each input coupled to an output of the four units; and</claim-text>
</claim-text>
<claim-text>a control unit <b>712</b> for alternately supplying an active clock signal to one of the four units and generating a control signal to be supplied to the clock signal input of the demultiplexer.</claim-text>
</claim>
</claims>
</us-patent-grant>
