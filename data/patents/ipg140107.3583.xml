<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08624648-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08624648</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13150469</doc-number>
<date>20110601</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>KR</country>
<doc-number>10-2010-0052914</doc-number>
<date>20100604</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>166</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>03</class>
<subclass>K</subclass>
<main-group>3</main-group>
<subgroup>02</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>327198</main-classification>
<further-classification>327142</further-classification>
</classification-national>
<invention-title id="d2e71">System reset circuit and method</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4903193</doc-number>
<kind>A</kind>
<name>Nakamura</name>
<date>19900200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 55</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5570674</doc-number>
<kind>A</kind>
<name>Izumiura et al.</name>
<date>19961100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>123690</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5761414</doc-number>
<kind>A</kind>
<name>Akaishi et al.</name>
<date>19980600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 55</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6417704</doc-number>
<kind>B1</kind>
<name>Nakajima et al.</name>
<date>20020700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>327143</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6456135</doc-number>
<kind>B1</kind>
<name>Albean</name>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>327198</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7996732</doc-number>
<kind>B2</kind>
<name>Nishimura</name>
<date>20110800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 55</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2003/0141909</doc-number>
<kind>A1</kind>
<name>Iwaguro et al.</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>327142</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>KR</country>
<doc-number>10-1999-0032802</doc-number>
<kind>A</kind>
<date>19950500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>KR</country>
<doc-number>10-0257597</doc-number>
<kind>B1</kind>
<date>20000300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>12</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>327143</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>327198</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>4</number-of-drawing-sheets>
<number-of-figures>4</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110298515</doc-number>
<kind>A1</kind>
<date>20111208</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Kim</last-name>
<first-name>Tae Soo</first-name>
<address>
<city>Suwon-si</city>
<country>KR</country>
</address>
</addressbook>
<residence>
<country>KR</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Choi</last-name>
<first-name>Min Ki</first-name>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
<residence>
<country>KR</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Park</last-name>
<first-name>Ju Young</first-name>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
<residence>
<country>KR</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Kim</last-name>
<first-name>Tae Soo</first-name>
<address>
<city>Suwon-si</city>
<country>KR</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Choi</last-name>
<first-name>Min Ki</first-name>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Park</last-name>
<first-name>Ju Young</first-name>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Jefferson IP Law, LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Samsung Electronics Co., Ltd.</orgname>
<role>03</role>
<address>
<city>Suwon-si</city>
<country>KR</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Jager</last-name>
<first-name>Ryan</first-name>
<department>2816</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A system reset circuit and a method for resetting a system automatically according to an operation state of the system are provided. The system reset circuit includes a system, which is triggered by a first logic state during an operation of a program and a second logic state at termination of the program, for generating a trigger signal for maintaining the first logic state in a lockup state and a counter for receiving the trigger signal as an enable signal, for counting a period of the first logic state of the trigger signal, and for clearing the counting for a period of the second logic state, and of which an output node is connected to a reset node of the system, wherein, when the first logic state period of the trigger signal is maintained before the counter expires, the system generates a reset signal automatically.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="129.96mm" wi="157.40mm" file="US08624648-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="165.69mm" wi="174.41mm" file="US08624648-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="179.32mm" wi="169.84mm" file="US08624648-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="156.97mm" wi="184.49mm" file="US08624648-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="201.08mm" wi="168.15mm" file="US08624648-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">PRIORITY</heading>
<p id="p-0002" num="0001">This application claims the benefit under 35 U.S.C. &#xa7;119(a) of a Korean patent application filed on Jun. 4, 2010 in the Korean Intellectual Property Office and assigned Serial No. 10-2010-0052914, the entire disclosure of which is hereby incorporated by reference</p>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">1. Field of the Invention</p>
<p id="p-0004" num="0003">The present invention relates to a system reset circuit and a method thereof. More particularly, the present invention relates to a system reset circuit and a method for resetting the system automatically according to the operation state of the system.</p>
<p id="p-0005" num="0004">2. Description of the Related Art</p>
<p id="p-0006" num="0005">Systems are usually controlled by means of processes for executing certain operations and functions. In a case where the system has entered a lockup state due to an abnormal operation of a program, it is routine for a user to reset the system manually by pushing a reset button or a power button provided outside of the system.</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 1</figref> is a circuit diagram illustrating a reset circuit according to the related art.</p>
<p id="p-0008" num="0007">Referring to <figref idref="DRAWINGS">FIG. 1</figref>, a system is depicted under the assumption of a low reset state. If a reset switch <b>110</b> is in the off state, this denotes that the power source is not connected to ground, such that power is supplied to the reset node of the system <b>130</b> via the pull-up resister <b>120</b>. Accordingly, the system <b>130</b> operates in a normal state. If the reset switch <b>110</b> is pushed by the user in the normal state, the power is bypassed to the ground node via the pull-up resister <b>120</b> and the reset switch <b>110</b>. As a consequence, the ground potential is induced to the reset node, and thus the system <b>130</b> executes the operation for system initialization.</p>
<p id="p-0009" num="0008">However, the system reset method of the related art has disadvantages in view of user convenience because, when a program enters the lockup state, the user has to reset the system with the external reset button. More particularly, when the system slows down for processing a large amount of data, the user is likely to misunderstand the system slow-down as the lockup state, resulting in resetting the system unnecessarily.</p>
<p id="p-0010" num="0009">Therefore, a need exists for a system reset circuit and a method that is capable of detecting system lockup and resetting the system automatically when the system lockup is detected.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0011" num="0010">Aspects of the present invention are to address at least the above-mentioned problems and/or disadvantages and to provide at least the advantages described below. Accordingly, an aspect of the present invention is to provide a system reset circuit and a method that is capable of detecting system lockup and resetting the system automatically when the system lockup is detected.</p>
<p id="p-0012" num="0011">In accordance with an aspect of the present invention, a system reset circuit is provided. The circuit includes a system, which is triggered by a first logic state during an operation of a program and a second logic state at termination of the program, for generating a trigger signal for maintaining the first logic state in a lockup state, and a counter for receiving the trigger signal as an enable signal, for counting a period of the first logic state of the trigger signal, and for clearing the counting for a period of the second logic state, and of which an output node is connected to a reset node of the system, wherein, when the first logic state period of the trigger signal is maintained before the counter expires, the system generates a reset signal automatically.</p>
<p id="p-0013" num="0012">In accordance with another aspect of the present invention, a system reset method is provided. The method includes generating a trigger signal which has a first logic state during an operation of a program and a second logic state at termination of the program and maintaining the first logic state in a lockup state, generating a count signal for counting a period of the first logic state of the trigger signal and clearing the count for a period of the second logic state, and resetting a system in response to an automatic reset signal generated when the first logic state period of the trigger signal is maintained before a counter expires.</p>
<p id="p-0014" num="0013">Other aspects, advantages, and salient features of the invention will become apparent to those skilled in the art from the following detailed description, which, taken in conjunction with the annexed drawings, discloses exemplary embodiments of the invention.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0015" num="0014">The above and other aspects, features, and advantages of certain exemplary embodiments of the present invention will be more apparent from the following description taken in conjunction with the accompanying drawings, in which:</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 1</figref> is a circuit diagram illustrating a reset circuit according to the related art;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 2</figref> is a circuit diagram illustrating a configuration of a system reset circuit according to an exemplary embodiment of the present invention;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 3</figref> is a graph illustrating waveforms of a trigger signal according to an exemplary embodiment of the present invention; and</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 4</figref> is a circuit diagram illustrating a configuration of a system reset circuit having a reset switch according to an exemplary embodiment of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<p id="p-0020" num="0019">Throughout the drawings, it should be noted that like reference numbers are used to depict the same or similar elements, features, and structures.</p>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS</heading>
<p id="p-0021" num="0020">The following description with reference to the accompanying drawings is provided to assist in a comprehensive understanding of exemplary embodiments of the invention as defined by the claims and their equivalents. It includes various specific details to assist in that understanding but these are to be regarded as merely exemplary. Accordingly, those of ordinary skill in the art will recognize that various changes and modifications of the embodiments described herein can be made without departing from the scope and spirit of the invention. In addition, descriptions of well-known functions and constructions may be omitted for clarity and conciseness.</p>
<p id="p-0022" num="0021">The terms and words used in the following description and claims are not limited to the bibliographical meanings, but, are merely used by the inventor to enable a clear and consistent understanding of the invention. Accordingly, it should be apparent to those skilled in the art that the following description of exemplary embodiments of the present invention is provided for illustration purpose only and not for the purpose of limiting the invention as defined by the appended claims and their equivalents.</p>
<p id="p-0023" num="0022">It is to be understood that the singular forms &#x201c;a,&#x201d; &#x201c;an,&#x201d; and &#x201c;the&#x201d; include plural referents unless the context clearly dictates otherwise. Thus, for example, reference to &#x201c;a component surface&#x201d; includes reference to one or more of such surfaces.</p>
<p id="p-0024" num="0023">By the term &#x201c;substantially&#x201d; it is meant that the recited characteristic, parameter, or value need not be achieved exactly, but that deviations or variations, including for example, tolerances, measurement error, measurement accuracy limitations and other factors known to skill in the art, may occur in amounts that do not preclude the effect the characteristic was intended to provide.</p>
<p id="p-0025" num="0024">According to exemplary embodiments of the present invention, if a lockup is detected, the system executes a system initialization function automatically. Since the system monitors to detect an abnormal operation and recovers from the abnormal state automatically, it is possible to reduce the number of unnecessary system resets by the user.</p>
<p id="p-0026" num="0025">According to exemplary embodiments of the present invention, the system generates a trigger signal to indicate whether the system is operating normally, a counter generates a count signal according to the state of the trigger signal, and the system determines whether to reset the system according to the output of the counter as the system reset signal. The trigger signal is generated in the form of a pulse according to the execution of the program when the system operates normally or in the form of having a specific logic maintained when the system operates abnormally. The counter is set to a count value greater than a cycle of the trigger signal. That is, the count value of the counter is set to a value greater than the time duration taken for completing a program normally. Accordingly, when the trigger signal is generated abnormally, the counter outputs an automatic system reset signal.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIGS. 2 through 4</figref>, discussed below, and the various exemplary embodiments used to describe the principles of the present disclosure in this patent document are by way of illustration only and should not be construed in any way that would limit the scope of the disclosure. Those skilled in the art will understand that the principles of the present disclosure may be implemented in any suitably arranged communications system. The terms used to describe various embodiments are exemplary. It should be understood that these are provided to merely aid the understanding of the description, and that their use and definitions in no way limit the scope of the invention. Terms first, second, and the like are used to differentiate between objects having the same terminology and are in no way intended to represent a chronological order, unless where explicitly state otherwise. A set is defined as a non-empty set including at least one element.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 2</figref> is a circuit diagram illustrating a configuration of a system reset circuit according to an exemplary embodiment of the present invention. <figref idref="DRAWINGS">FIG. 3</figref> is a graph illustrating waveforms of a trigger signal according to an exemplary embodiment of the present invention.</p>
<p id="p-0029" num="0028">Referring to <figref idref="DRAWINGS">FIGS. 2 and 3</figref>, a system <b>210</b> generates a trigger signal to the Enable Node (EN) of the counter <b>220</b> via a General Purpose Input/Output (GPIO) node. The output of the counter <b>220</b> is applied to the reset node of the system. Here, the trigger signal can be a signal represented by a waveform having a period (T) in a normal operation state, as denoted by reference number <b>311</b>, or a signal maintaining a predefined logic for the execution of a program. In the former case, when the system <b>210</b> operates normally, the trigger signal has a waveform of alternating low and high logic levels. Here, the trigger signal can be designed to have a low/high duty ratio of 1:1 or another duty ratio. In the latter case, the system generates a signal to maintain a predefined logic during the execution of a program and is triggered by the end of the program execution to transition to another logic. The system <b>210</b> generates a trigger signal having a predefined logic when an abnormal state, such as a system lockup, is detected.</p>
<p id="p-0030" num="0029">The following description is made under the assumption that, when system <b>210</b> is locked up, the trigger signal is in a high logic state and the system reset is enabled in a low logic state. In addition, it is assumed that the counter <b>220</b> is enabled in a high logic state to start counting and disabled in a low logic state to initialize the count value. In addition, it is assumed that the counter <b>220</b> generates the low logic signal to the Counter Output (CO) node as the counting is completed. The count value of the counter <b>220</b> is set to a value greater than the period (T) of the trigger signal. That is, the trigger signal maintains the high logic period (t<b>1</b>-t<b>2</b> period in <figref idref="DRAWINGS">FIG. 3</figref>) when the system is operating abnormally. Accordingly, the counter <b>220</b> is designed to have the count value greater than the period (T) of the pulse signal generated in the normal operation state.</p>
<p id="p-0031" num="0030">The trigger signal can be generated in the waveform as denoted by reference number <b>311</b> of <figref idref="DRAWINGS">FIG. 3</figref>. That is, the system <b>210</b> maintains a predefined logic state (here, the high logic state) while running a program and generates a trigger signal in which the logic state transitions to another logic state (here, the low logic state) when the running program is terminated. In this case, the count value of the counter <b>220</b> has to be set to a value greater than the running time of the program having the greatest running time. The counter <b>220</b> is activated while the trigger pulse is maintained in the high logic state to perform counting.</p>
<p id="p-0032" num="0031">The following description is made under the assumption that the system <b>210</b> generates the trigger signal having the waveform as denoted by reference number <b>311</b>. In the normal operation state (before the time t<b>1</b> in <figref idref="DRAWINGS">FIG. 3</figref>), the system generates the trigger signal having the period of T. In this case, since the count complete signal is not generated, the counter <b>220</b> outputs the signal having the waveform of high logic state as denoted by reference number <b>313</b> of <figref idref="DRAWINGS">FIG. 3</figref>. Accordingly, the high logic signal is applied to the reset node of the system <b>210</b> such that the system <b>210</b> maintains its normal operation without reset. That is, the counter <b>220</b> is in a clearing state for the low logic duration and performs counting for the high logic duration. At this time, since the count value is set to the value greater than the period (T), the output of the counter <b>220</b> maintains the high logic state.</p>
<p id="p-0033" num="0032">In a case where the system operates abnormally, the system <b>210</b> generates the trigger signal in which a predefined logic state (here, a high logic state) is maintained. That is, if the abnormal state is detected at time point t<b>1</b> (see <figref idref="DRAWINGS">FIG. 3</figref>), the system <b>210</b> generates the trigger signal having the waveform in which the high logic state is maintained. Once the trigger signal is generated, the counter <b>220</b> maintains the enable state so as to continue counting. If the high logic state is not changed (i.e., the abnormal state of the system is maintained) until the preset count value expires, the counter <b>220</b> generates a count expiry signal for the low logic at the time point t<b>2</b> as shown in the waveform <b>313</b> of <figref idref="DRAWINGS">FIG. 3</figref>. The low logic count expiry signal is applied to the reset node of the system <b>210</b> such that the system performs automatic system initialization operation.</p>
<p id="p-0034" num="0033">After the system initialization, the system generates the normal trigger signal at the time point t<b>3</b> at which the system starts operating normally. After outputting the count expiry signal, the counter <b>220</b> starts counting again. The count value of the counter <b>220</b> is greater than the period T of the pulse signal generated in the normal operating state and designed to have the count value greater than the time duration for the system reset operation. This is to prevent the counter <b>220</b> from generating another reset signal during the system reset operation (i.e., the duration from the detection of the reset signal to the completion of the system initialization). That is, the count value is greater than a period of the normal trigger signal and the system reset duration so as to prevent another reset signal from being generated during the system initialization process.</p>
<p id="p-0035" num="0034">If the reset signal of a low logic state is detected, the system <b>210</b> performs system reset and generates the normal trigger signal having a predefined period after the completion of the system reset. That is, after the system initialization (time point t<b>3</b> in <figref idref="DRAWINGS">FIG. 3</figref>), the system <b>210</b> generates the normal trigger signal such that the counter <b>220</b> outputs the signal having the waveform <b>313</b> in which the high logic state is maintained as shown in <figref idref="DRAWINGS">FIG. 3</figref>. In this case, the counter <b>220</b> initializes the counting operation for the low logic duration and continues counting for the high logic duration in the trigger signal having the waveform <b>311</b> of <figref idref="DRAWINGS">FIG. 3</figref> such that the counter <b>220</b> does not generate the count expiry signal having the waveform <b>313</b> of <figref idref="DRAWINGS">FIG. 3</figref>. Accordingly, the system <b>210</b> can operate normally.</p>
<p id="p-0036" num="0035">As described above, in a case where the abnormal state of the systems continues over a predefined time (count expiry of the counter), the system reset signal is generated automatically such that the system is initialized. Accordingly, when the system lockup is detected while the system is running, it is possible to recover the system automatically. Since the trigger signal is generated normally when the system slows down but not in the lockup state, it is possible to avoid the unnecessary system reset caused by the user's misunderstanding.</p>
<p id="p-0037" num="0036">The system reset method according to an exemplary embodiment of the present invention includes generating a trigger signal having a predefined period and the waveform maintaining a predefined logic state in a normal operating state and generating a count signal which counts for a predefined logic state and clears for the other logic state, and the count signal is output to the system as the reset signal when the predefined logic state of the trigger signal is maintained before the expiry of the count such that the system executes system reset automatically according to the reset signal.</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 4</figref> is a circuit diagram illustrating a configuration of a system reset circuit having a reset switch according to an exemplary embodiment of the present invention.</p>
<p id="p-0039" num="0038">Referring to <figref idref="DRAWINGS">FIG. 4</figref>, a system <b>210</b> outputs a trigger signal indicating whether the system operates abnormally. The counter <b>220</b> receives the trigger signal as an enable signal and, when the abnormal state of the system continues over a predefined time, sets a count value for resetting the system automatically. As described above, the counter <b>220</b> is set to a value greater than the period of the trigger signal and also the time required for the system initialization. The output of the counter <b>220</b> is input to the gate <b>250</b> along with the output of the reset switch <b>245</b>. The gate <b>250</b> performs a logical operation on the two inputs such that logical operation result is applied to the reset node of the system <b>210</b>. Here, the gate <b>250</b> is implemented as an AND gate when the output signal of the counter <b>220</b> and the on signal of the reset switch <b>245</b> are low logic reset or an OR gate when the output signal of the counter <b>220</b> and the on signal of the reset switch <b>245</b> are high logic reset. In <figref idref="DRAWINGS">FIG. 4</figref>, the system reset circuit is depicted under the assumption of the AND gate. In <figref idref="DRAWINGS">FIGS. 2 and 4</figref>, the resisters <b>230</b> and <b>240</b> are the pull-up resisters connected to the power source.</p>
<p id="p-0040" num="0039">In the abnormal state, the system <b>210</b> generates a trigger signal having a predefined logic (here, high logic) as shown in the waveform <b>313</b> of <figref idref="DRAWINGS">FIG. 3</figref>. If the trigger signal is input, the counter <b>220</b> counts the internal clock for the duration of the high logic and generates a count expiry signal at the time point when the predefined count value expires. If the count expiry signal is input, the AND gate <b>250</b> generates a low logic signal such that the system <b>210</b> performs the reset operation. If the reset switch <b>245</b> is manually turned on, the low logic signal is applied to the AND gate <b>250</b> such that the system <b>210</b> performs the reset operation. The system reset is triggered automatically by the counter <b>220</b> when the abnormal state of the system continues over the predefined time or manually by the user pushing the reset switch <b>245</b>.</p>
<p id="p-0041" num="0040">The trigger pulse generated in the system can have various waveforms. For example, the trigger signal can be generated in the waveform having a period for the normal operation of the system <b>210</b> and the waveform maintaining the high logic state for the system lockup. In this case, the system <b>210</b> generates the trigger pulse of the high logic signal while the system is running a program, and the counter <b>220</b> performs counting while the trigger signal maintains a high logic state. The system <b>210</b> generates the trigger signals having different periods according to the operation time of the program. Accordingly, the counter should be set to a count value greater than a value representing the program having the longest execution time. The counter <b>220</b> is activated during the high logic state of the trigger pulse to continue counting.</p>
<p id="p-0042" num="0041">The system <b>210</b> is triggered by the low logic signal when the program is terminated normally, and at this time the high logic period of the trigger signal occurs to be shorter than the count value of the counter <b>220</b>. In a case where the program is terminated normally, the counter <b>220</b> clears the counter value and stops counting. In a case where the program is terminated abnormally, the system maintains the trigger signal in a high logic state, and at this time the high logic period of the trigger signal occurs to be longer than the count value of the counter <b>220</b>. The counter <b>220</b> continues counting to the maximum value of the counter <b>220</b> and generates the count expiry signal in a low logic state. If the count expiry signal is generated by the counter <b>220</b>, the system <b>210</b> executes the reset operation.</p>
<p id="p-0043" num="0042">While the invention has been shown and described with reference to certain exemplary embodiments thereof, it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the spirit and scope of the invention as defined by the appended claims and their equivalents.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A system reset circuit, comprising:
<claim-text>a system, which is triggered by a first logic state during an operation of a program and a second logic state at termination of the program, for generating a trigger signal for maintaining the first logic state in a lockup state;</claim-text>
<claim-text>a reset switch for connecting a power source node and a ground node;</claim-text>
<claim-text>a counter for receiving the trigger signal as an enable signal, for counting a period of the first logic state of the trigger signal, and for clearing the counting for a period of the second logic state, and of which an output node is connected to a reset node of the system; and</claim-text>
<claim-text>a gate for receiving outputs of the reset switch and the counter and having an output node connected to the reset node of the system,</claim-text>
<claim-text>wherein, when the first logic state period of the trigger signal is maintained before the counter expires, the counter generates a reset signal automatically.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The circuit of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the counter is set to a value greater than a program execution time configured normally.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The circuit of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the gate comprises an AND gate, the first logic state is a high logic, and the second logic state is a low logic.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The circuit of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the outputs of the reset switch and the counter are low logic resets.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The circuit of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the gate comprises an OR gate, the first logic state is a high logic, and the second logic state is a low logic.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The circuit of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the outputs of the reset switch and the counter are high logic resets.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A system reset method, comprising:
<claim-text>generating, by a system, a trigger signal which has a first logic state during an operation of a program and a second logic state at termination of the program and maintaining the first logic state in a lockup state;</claim-text>
<claim-text>generating, by a counter, a count signal for counting a period of the first logic state of the trigger signal and clearing the count for a period of the second logic state;</claim-text>
<claim-text>generating a reset signal by performing a logical operation on outputs of a reset switch and a count signal; and</claim-text>
<claim-text>resetting the system in response to an automatic reset signal generated by the counter when the first logic state period of the trigger signal is maintained until the counter expires or in response to a manual reset signal generated by the reset switch.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the counter is set to a value greater than a program execution time configured normally.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the logical operation comprises an AND operation, the first logic state is a high logic, and the second logic state is a low logic.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the outputs of the reset switch and the counter are low logic resets.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the gate comprises an OR gate, the first logic state is a high logic, and the second logic state is a low logic.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the outputs of the reset switch and the counter are high logic resets. </claim-text>
</claim>
</claims>
</us-patent-grant>
