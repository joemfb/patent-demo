<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627083-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627083</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13267672</doc-number>
<date>20111006</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>9</main-group>
<subgroup>32</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>713171</main-classification>
<further-classification>726 28</further-classification>
</classification-national>
<invention-title id="d2e43">Online secure device provisioning with online device binding using whitelists</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5914957</doc-number>
<kind>A</kind>
<name>Dean et al.</name>
<date>19990600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370438</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7275155</doc-number>
<kind>B1</kind>
<name>Aull</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7319759</doc-number>
<kind>B1</kind>
<name>Peinado et al.</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>380277</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7581096</doc-number>
<kind>B2</kind>
<name>Balfanz et al.</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>7983240</doc-number>
<kind>B2</kind>
<name>Jansson et al.</name>
<date>20110700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370351</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2008/0049942</doc-number>
<kind>A1</kind>
<name>Sprunk et al.</name>
<date>20080200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2009/0205028</doc-number>
<kind>A1</kind>
<name>Smeets et al.</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2009/0316909</doc-number>
<kind>A1</kind>
<name>Futa et al.</name>
<date>20091200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>EP</country>
<doc-number>1249964</doc-number>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>EP</country>
<doc-number>1253744</doc-number>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>EP</country>
<doc-number>2056230</doc-number>
<date>20090500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>WO</country>
<doc-number>2006/054843</doc-number>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00013">
<othercit>Nemo Semret; Pricing, Provisioning and Peering: Dynamic Markets for Differentiated Internet Services and Implications for Network Interconnections; Dec. 12, 2000; IEEE; pp: 1-15.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00014">
<othercit>Adams, C., et al., &#x201c;Internet x.509 Public Key Infrastructure Certificate Management Protocol (CMP)&#x201d;, Network Working Group, Sep. 2005. URL: http://www.iettorg/rfc/rfc4210.txt.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>16</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>713 71</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713171</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>7</number-of-drawing-sheets>
<number-of-figures>9</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61390387</doc-number>
<date>20101006</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120089839</doc-number>
<kind>A1</kind>
<date>20120412</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Qiu</last-name>
<first-name>Xin</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Medvinsky</last-name>
<first-name>Alexander</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Moskovics</last-name>
<first-name>Stuart P.</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Pasion</last-name>
<first-name>Jason A.</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="005" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Wang</last-name>
<first-name>Fan</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="006" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Yao</last-name>
<first-name>Ting</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Qiu</last-name>
<first-name>Xin</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Medvinsky</last-name>
<first-name>Alexander</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Moskovics</last-name>
<first-name>Stuart P.</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Pasion</last-name>
<first-name>Jason A.</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="005" designation="us-only">
<addressbook>
<last-name>Wang</last-name>
<first-name>Fan</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="006" designation="us-only">
<addressbook>
<last-name>Yao</last-name>
<first-name>Ting</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Motorala Mobility LLC</orgname>
<role>02</role>
<address>
<city>Libertyville</city>
<state>IL</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Reza</last-name>
<first-name>Mohammad W</first-name>
<department>2436</department>
</primary-examiner>
<assistant-examiner>
<last-name>Rahim</last-name>
<first-name>Monjour</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">One or more servers are provided including a session manager, authentication module, authorization module, encryption module, database, and protocol handler. The session manager is configured to receive requests for new identity data from network-enabled devices. Each request is authenticated first by the update server via its authentication module by validating the signature of the request message as well as the certificate chain trusted by the update server. The authorization module is configured to determine if the network-enabled devices specified on a whitelist are authorized to be provisioned with new identity data. The database is configured to receive new identity records generated by an identity data generation system. Each of the new identity records includes a new identifier. The new identifier is not associated or linked to any previously assigned/used identifiers and identity data, thus all the new identity records are generated independently and then loaded to the update server.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="185.84mm" wi="551.01mm" file="US08627083-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="273.13mm" wi="187.37mm" orientation="landscape" file="US08627083-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="279.99mm" wi="177.80mm" orientation="landscape" file="US08627083-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="262.97mm" wi="117.86mm" file="US08627083-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="98.13mm" wi="160.78mm" file="US08627083-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="237.07mm" wi="148.51mm" orientation="landscape" file="US08627083-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="281.35mm" wi="178.48mm" orientation="landscape" file="US08627083-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="275.25mm" wi="181.19mm" orientation="landscape" file="US08627083-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application claims priority from U.S. provisional application Ser. No. 61/390,387, filed Oct. 6, 2010, which is incorporated by reference herein in its entirety.</p>
<p id="p-0003" num="0002">This application is related to co-pending U.S. application Ser. No. 12/961,455 [BCS06149] filed on Dec. 6, 2010, entitled &#x201c;Online Public Key Infrastructure (PKI) System.&#x201d; This application is also related to co-pending U.S. application Ser. No. 13/087,847 [BCS06335], filed Apr. 15, 2011, entitled &#x201c;Online Secure Device Provisioning Framework.&#x201d; This application is also related to co-pending U.S. application Ser. No. 13/087,972 [BCS06330], filed Apr. 15, 2011, entitled &#x201c;Online Secure Device Provisioning with Updated Offline Identity Data Generation and Offline Device Binding.&#x201d;</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0004" num="0003">Digital information has become extremely important in all aspects of commerce, education, government, entertainment and management. In many of these applications, the ability to ensure the privacy, integrity and authenticity of the information is critical. As a result, several digital security mechanisms have been developed to improve security.</p>
<p id="p-0005" num="0004">One standardized approach to today's digital security is referred to as the Public Key Infrastructure (PKI). PKI provides for use of digital certificates to authenticate the identity of a certificate holder, or to authenticate other information. A certificate authority (CA) issues a certificate to a certificate holder and the holder can then provide the certificate to a third party as an attestation by the CA that the holder who is named in the certificate is in fact the person, entity, machine, email address user, etc., that is set forth in the certificate. And that a public key in the certificate is, in fact, the holder's public key. People, devices, processes or other entities dealing with the certificate holder can rely upon the certificate in accordance with the CA's certification practice statement.</p>
<p id="p-0006" num="0005">A certificate is typically created by the CA digitally signing, with its own private key, identifying information submitted to the CA along with the public key of the holder who seeks the certificate. A certificate usually has a limited period of validity, and can be revoked earlier in the event of compromise of the corresponding private key of the certificate holder, or other revocable event. Typically, a PKI certificate includes a collection of information to which a digital signature is attached. A CA that a community of certificate users trusts attaches its digital signature and issues the certificates to various users and/or devices within a system.</p>
<p id="p-0007" num="0006">Network-enabled devices are generally provisioned at the factory with identity data so that they may communicate with other network-enabled devices in a secure manner using an identity data system. The identity data typically includes a public and private key pair and a digital certificate. Illustrative examples of networked-enabled devices include, without limitation, PCs, mobile phones, routers, media players, set-top boxes and the like.</p>
<p id="p-0008" num="0007">The identity data may be provisioned in network-enabled devices before or after they are deployed in the field. For instance, the identity data may be incorporated into the device at the time of manufacture. For example, a large scale upgrade may occur when a network operator wants to replace their Digital Rights Management (DRM) system or when they want to support other security applications that require the network-enabled devices to be provisioned with new types of identity after the devices have been deployed. This can be a difficult and cumbersome process because it is often performed manually and therefore can require the devices to be returned to a service center.</p>
<p id="p-0009" num="0008">One particular issue that arises when upgrading or updating identity data concerns the manner in which new identity data is securely delivered to the network-enabled devices.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0010" num="0009">In accordance with one aspect of the invention, a method is provided for updating network-enabled devices with new identity data. The method includes receiving requests for new identity data from a plurality of network-enabled devices. The requests include previously assigned identifiers respectively associated with the network-enabled devices. A plurality of new identity records is generated ahead of time by an identity data generation system. The new identity records each include new identity data and new identifiers respectively linked to the new identity data. The method also determines that each of the plurality of network-enabled devices specified in the requests for new identity data are authorized to receive new identity data. A first of the new identity records are retrieved and at least a part of a first of the new identity record is encrypted with a key uniquely associated with a network-enabled device identified by a first of the previously assigned identifiers. The first encrypted new identity record is sent to the network-enabled device identified by the first previously assigned identifier.</p>
<p id="p-0011" num="0010">In accordance with another aspect of the invention, one or more servers are provided which includes a session manager, an authentication module, an authorization module, a database, and a protocol handler and an encryption module. The session manager is configured to receive requests for new identity data from network-enabled devices. Each request is authenticated first by the update server via its authentication module by validating the signature of the request message as well as the certificate chain trusted by the update server. Each of the requests includes a previously assigned identifiers identifying the respective network-enabled device sending the request. The authorization module is configured to determine if the network-enabled devices specified on a whitelist are authorized to be provisioned with new identity data. The whitelist includes identifier(s) of network-enabled devices previously assigned by a network operator and identifier(s) associated with identity data records previously provisioned in the respective network-enabled devices. The database is configured to receive new identity records generated by an identity data generation system. Each of the new identity records includes a new identifier.</p>
<p id="p-0012" num="0011">In accordance with one particular aspect of the invention, the new identifier is not associated or linked to any previously assigned/used identifiers and identity data, thus all the new identity records are generated independently and then loaded to the update server. When the server generates response messages for authorized requests, the new identity data records are used sequentially. After a new identify record is used to response to a specific request, the new identifier associated with the new identity record is linked to other previously used identifiers which are part of the request message. Their relationship is then recorded in a database for the tracking and reporting purpose. The protocol handler is configured to deliver a data response message to each of the authorized network-enabled devices requesting new identity data. Each of the data response messages includes a new identity record that is encrypted by the encryption module with a key uniquely associated with the network-enabled device to which the data response message is sent.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIGS. 1A and 1B</figref> show one example of an operating environment in which the processes described herein for provisioning network-enabled devices with identity data may be implemented.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 2</figref> shows one example of the initial PKI identity data installed into network-enabled devices at the time of manufacture.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 3</figref> shows an example of new PKI identity data records for three network-enable devices having PKI types ID<b>1</b> to IDn.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 4</figref> shows an example of whitelists that may be employed for authorization and device binding are performed during the PKI identity data update process.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 5</figref> shows an example of a whitelist after the devices are bound to new PKI data.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 6</figref> shows one example of an update server which receives the output from the PKI/identity generation system of <figref idref="DRAWINGS">FIG. 4</figref> and PKI data requests from the network-enabled devices.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0019" num="0018">An identity data management system is described herein which provides a flexible framework that can be used to upgrade, renew, or supplement identity data that is provisioned in a large base of network-enabled devices that have already been deployed in the field. The system architecture allows network operators to install and update the identity data in these devices without having to recall them from the end-user. The system architecture may also allow operators to update expired or expiring digital certificates provisioned in previously deployed network-enabled devices with minimum service disruption. In a common scenario, for instance, a service provider may have acquired, say, 500,000 units of a product that they have delivered to their end user customers. For one reason or another, the service provider may wish to update the identity data in all or a subset (e.g., 100,000) of those units. In one particular instance the identity data is PKI data. In other cases the identity data may take a variety of other forms such as a serial number, a symmetric key that is cryptographic based, and the like. For purposes of illustration only and not as a limitation on the invention the following description will often refer to a PKI management system that is used to upgrade, renew, or supplement PKI data.</p>
<p id="p-0020" num="0019">It is generally desirable to deliver new identity data to devices in a secure manner. In some cases this is accomplished by encrypting the new identity data with the old identity data provisioned in the device. In this way the device is able to decrypt the new identity data after it has been installed. However, in some cases it may be desirable to protect the new identity data with a key that is specific to a single device and which is installed in the device at the time of manufacture and protected by its hardware (e.g., permanently programmed into a device chip). One example will be presented below in which the new identity data is encrypted with a device specific hardware key, which is referred to herein as a one-time programmable (OTP) key. The OTP key may be stored in a protected digital memory of the device such as a programmable read-only memory (PROM), a field programmable read-only memory (FPROM) or a one-time programmable non-volatile memory (OTP NVM), for example. Another example will also be presented below in which a Diffie-Hellman or other public key based key agreement algorithm is used.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIGS. 1A and 1B</figref> show one example of an operating environment in which the processes described herein for provisioning network-enabled devices with identity data may be implemented. This example shows a number of different domains representative of the different parties that may be involved in the data identity provisioning/update process. In this example three domains are shown: a factory domain <b>310</b> representing a manufacturing site for network-enabled devices; a deployed network domain <b>210</b> controlled by a network operator that operates the network in which the network-enabled devices are used; and a PKI/identity management system domain <b>120</b> operated by a PKI center operator. Although in general these domains may be maintained and operated by the different entities, in some cases they may be operated by the same entities. For instance, the factory domain <b>310</b> and the PKI/identity management system domain <b>120</b> are sometimes under the control of the same entity.</p>
<p id="p-0022" num="0021">It should be understood that each domain in <figref idref="DRAWINGS">FIGS. 1A and 1B</figref> is shown in a highly simplified manner in which a single entity (e.g., server, database, etc) may be representative of more complex arrangements and systems. For instance, as explained below, the factory domain includes a factory database <b>330</b> which is used to track components used in the manufacturing process, purchase and shipping orders, and so on. In reality, there may be many different systems and entities involved in this process, all of which are represented herein by factory database <b>330</b>.</p>
<p id="p-0023" num="0022">The manufacturing domain <b>310</b> of a single manufacturer may include multiple manufacturing sites which in some cases can be operated by a third party contract manufacturer distributed world-wide. Each factory, only one of which is illustrated in <figref idref="DRAWINGS">FIGS. 1A and 1B</figref>, may produce a single type or single class of network-enabled devices (e.g., mobile phones) or multiple classes of devices (e.g., mobile phones, routers and set-top boxes). <figref idref="DRAWINGS">FIGS. 1A and 1B</figref> show one illustrative manufacturing site, factory <b>310</b>, which includes the aforementioned local factory database <b>330</b>, factory programming stations <b>350</b> that allow factory personnel to access the factory database and the network-enabled devices <b>340</b><sub>1</sub>, <b>340</b><sub>2</sub>, and <b>340</b><sub>3 </sub>(&#x201c;<b>340</b>&#x201d;) being produced, and factory servers <b>320</b> that are used to communicate with the PKI system <b>120</b> and store the PKI identity data received therefrom.</p>
<p id="p-0024" num="0023">The network <b>210</b> includes a network access authorization server <b>230</b>, which grants permission to the deployed network-enabled devices <b>240</b><sub>1</sub>, <b>240</b><sub>2</sub>, and <b>240</b><sub>3 </sub>(&#x201c;<b>240</b>&#x201d;) to access the network and initiate upgrade operations. Identity data and other information concerning the deployed devices <b>240</b> are maintained by an account identity and management system <b>220</b>.</p>
<p id="p-0025" num="0024">In addition to the identity management components located at the factory site <b>310</b> discussed above, the PKI/identity management system includes two primary sub-systems: a PKI/identity generation system <b>120</b> and a PKI/identity update system <b>130</b>. The PKI/identity generation system <b>120</b>, which for security reasons is often an offline system, includes order fulfillment processors <b>122</b>, which generate digital certificates or other identity data requested for products. The order fulfillment processors <b>122</b> may include, or have access to, hardware security modules (HSMs) in which the CA's certificate signing private keys and secure data may be stored for use by the system. The PKI/identity generation system <b>120</b> also includes an archive database <b>124</b>, which is a database of records. These records may pertain to issued digital certificates, original requests for new digital certificates or secure data, audit data, organization information, product configurations, user information, and other record types as necessary. It should be noted that while the PKI/identity generation system <b>120</b> is shown as an offline system, in some implementations it alternatively may be an online system.</p>
<p id="p-0026" num="0025">The PKI/identity update system <b>130</b> includes a PKI/identity update server <b>132</b> that receives new identity data from the offline PKI/identity generation system <b>120</b> and securely downloads the new identity data to the appropriate deployed network-enabled devices <b>240</b>. The PKI/identity update system <b>130</b> also includes a whitelist generation and manager (WGM) server <b>134</b> for consolidating various identifies received from different whitelist sources maintained within the various domains, i.e., the PKI/identity generation domain, the device manufacturer domain and the service provider/network operator domain. In particular, WGM server <b>134</b> receives one set of device identifiers from the factory via a unit personalization database <b>160</b>, which has all the data retrieved from different manufacturing sites and another set of device identifiers, one of which is assigned by the PKI/identity generation system <b>120</b>, from PKI personalization database <b>160</b>. Other sources of whitelist data, either from network operators or update servers <b>132</b>, will be discussed below. These identifiers and other data allow the WGM server <b>134</b> to correlate the various identifiers that are assigned to same network-enabled device.</p>
<p id="p-0027" num="0026">A high-level overview of the secure device provisioning process flow as shown in <figref idref="DRAWINGS">FIGS. 1A and 1B</figref> will be presented. At the outset, it should be noted that different domains may assign its own identifier which are to be associated with the network enabled devices, and these identities need to be tracked and correlated with one another in order to perform a PKI/identity update. In particular, the PKI center coordinator assigns an identifier, referred to herein as ID-A, to each PKI/identity data unit that will ultimately be provisioned in a network-enabled device at the factory. If an identity data unit includes a public-private key pair and a digital certificate, its ID-A will be included in the certificate. Likewise, the manufacturer assigns an identifier, denoted ID-B to each device <b>340</b> it manufactures. This identifier will often be in the form of a hardware-based identifier such as a MAC Address, an International Mobile Equipment Identity Number (IMEI) or a unit ID (UID), for example. In addition, the manufacturer may also assign another identifier, denoted ID-C, which may be in the form of a label such as a serial number or the like Unlike the other identifiers, the label will often be visible on the device itself. In part for this reason, the network operator will generally use the identifier ID-C within its own domain. In some cases the identifiers ID-B and ID-C may be the same.</p>
<p id="p-0028" num="0027">When a network-enabled device is first provisioned with identity data, the PKI/identity generation system <b>120</b> generates the initial identity data for each device and delivers it to the factory servers <b>320</b>. Each identity data unit that is provided to the factory servers <b>320</b> includes its identifier ID-A. When the manufacturer is ready to first load a newly manufactured device with identity data, the factory stations <b>350</b> will request an identity data record from the factory servers <b>320</b> with the device's identifier ID-B. In response, the factory servers <b>320</b> will provide the factory stations <b>350</b> with an identity data record identified by its identifier ID-A. Both of these identifiers will be stored in the factory servers <b>320</b> and replicated to an identity database <b>160</b>, which associates both identifiers with one another to indicate that they relate to the same network-enabled device <b>340</b>.</p>
<p id="p-0029" num="0028">As previously mentioned, in some cases the new identity data is encrypted with a hardware key, referred to as a one-time programmable (OTP) key, which is unique to each device. Since this hardware key is not made available to the identity data update server <b>132</b>, the initial, factory provisioned identity data is provided with an additional attribute so that the OTP key can be recovered by the update server <b>132</b>. This additional attribute is an encrypted version of the OTP key, which is referred to herein as an encrypted OTP Link key (EOLK). The OTP key is encrypted by a global key for multiple devices, typically an entire model, product line or the like. The key that is used to decrypt the EOLK is referred to as the EOLK decryption key (DK-EOLK). The DK-EOLK is made available to the identity data update server <b>132</b>, where it is stored in a hardware security module (HSM) <b>650</b>. The update server <b>132</b> can then use this decryption key to decrypt the OTP keys of all the devices that encrypted using the global key. All the encryption and decryption operations described above may be performed by one or more encryption engines or modules</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 2</figref> shows an example of the initial, factory provisioned identity data, which in this case is PKI data <b>10</b> and thus includes as attributes the PKI keys and certificates, as well as the EOLK <b>20</b>. The OPT key <b>30</b> is also shown. The manner in which the OTP key, the EOLK and the DK-EOLK are used will be described below.</p>
<p id="p-0031" num="0030">In another example, instead of using an OTP key the new identity data is encrypted using a Diffie-Hellman or other public key based key agreement algorithm. In the case of the Diffie-Hellman algorithm, the network-enabled devices are pre-provisioned at the factory with a device-specific private key and a device-specific Diffie-Hellman digital certificate which includes a unique public key derived from the device-specific private key. The network-enabled devices are also pre-provisioned with the Diffie-Hellman digital certificate of the update server, which includes the public key of the update server. The network-enabled device can thus perform a Diffie-Hellman key agreement by mathematically combining its public key with the update server's public key to obtain a derived symmetric key. In some implementations the network-enabled devices may be pre-provisioned with the derived symmetric key, and thus does not need to have the private key, the digital certificate of the update server or the capability to perform the Diffie-Hellman key agreement process.</p>
<p id="p-0032" num="0031">The request sent by the network-enabled device to the identity data update server <b>132</b> includes its Diffie-Hellman digital certificate. The update server <b>132</b> uses its public key and the network-enabled device's public key contained in the Diffie-Hellman digital certificate to obtain the same derived symmetric key as obtained by the network-enabled device. When the update server <b>132</b> sends a new identity data record to the network-enabled device, it encrypts the secret portions of the new record with the derived symmetric key. Since the network-enabled device has the same derived symmetric key as the update server, it is able to decrypt the encrypted record received from the update server <b>132</b>. The update server only needs to protect its private Diffie-Hellman key, which is stored in the HSM of the update server. The derived symmetric key, which is unique to each device, can be calculated when the update server receives the device's public Diffie-Hellman Key.</p>
<p id="p-0033" num="0032">When an already deployed device <b>240</b> makes a request that requires it to be provisioned with a new identity data unit, the network operator approves the request in accordance with its own internal procedures. In some cases permission to fulfill the request may be granted by the authorization server <b>230</b>, which may provide a whitelist specifying those devices to be updated to the WGM server <b>134</b> associated with the PKI/identity update system <b>130</b>. Instead of using an authorization server <b>230</b> to deliver the whitelist, the network operator may manually deliver the whitelist to the WGM server <b>134</b> over an online interface or the like.</p>
<p id="p-0034" num="0033">Instead of coming from the network operator, in some cases the authorization may come from the factory, particularly when all the devices deployed to a particular network operator are to be upgraded. This authorization may be based, for instance, on a list of all devices shipped to the network operator. The whitelist that is provided includes the identifier used by the network operator, ID-C, for each device that is to be updated. The WGM server <b>134</b> obtains the identifiers ID-A and ID-C from a factory where the device was made and from a network operator where the device is deployed, and joins them together into a single whitelist for subsequent distribution to the update server <b>132</b> and/or to the PKI/identity generation system <b>120</b>. If the new identity data to be generated is based on/linked to the identifiers ID-A and/or ID-C, it should be protected by the key/certificate previously provisioned in the devices at the factory. In this case the whitelist is delivered from the WGM server <b>134</b> to the PKI/identity generation system <b>120</b>, from which the previous IDs/keys/certificates can be retrieved to protect the new identity data that is generated. If, on the other hand, the new identity data to be generated is based on a new ID (ID-D) that is not associated with a previously generated/provisioned key/certificate, the PKI/identity generation system <b>120</b> generates the new identity data before update requests are received and thus does not need this information from the WGM server <b>134</b>. In this case, which is discussed in more detail below, the whitelist is directly sent to the update server <b>132</b> so that it can be used to check on the device authorization for the update. Next, the devices <b>240</b> to be updated each send a request to the update server <b>132</b>. Among other things, the request includes the EOLK for the device. The request also includes a previously assigned device identifier (e.g., ID-A, and ID-C) which may be a separate parameter in the request message or it may be part of the device's digital certificate which was installed at manufacture time. The request is signed with an asymmetric private key (or other types of keys such as symmetric keys and identifiers) previously installed at the factory. The asymmetric cryptography-based mechanism provides a strong authentication of the request message, while a simple identity and symmetric key based mechanism provides a weaker authentication. The update server <b>132</b> first authenticates the device request message by validating its signature and certificate(s). Any invalid request will be rejected.</p>
<p id="p-0035" num="0034">Using the appropriate identifiers (such as ID-A, and ID-C) for each device <b>240</b> requesting an update, the PKI/identity update server <b>132</b> can first perform the message authentication check by validating the signature of the request message and its certificates against the trusted certificate chain. The update server then performs the authorization check based on the whitelist it receives to ensure that only authorized devices are updated with the new PKI/identity data. This is done simply by validating whether or not a previously assigned device ID (ID-A or ID-C) in a request message is included in the whitelist. The update server <b>132</b> also obtains the new PKI identity data records from the PKI/identity generation system <b>120</b>. The new PKI identity data records are specified by new identifiers ID-D, which is not be based on any of the previous identifiers (ID-A and ID-C). The association of the new and previous PKI/identity data can be determined by the update server when an update request is received.</p>
<p id="p-0036" num="0035">As previously mentioned, in the example described herein, the new PKI/identity data (IDs and keys) are not related to the previous IDs/keys/certificates. In this case the PKI/identity generation system generates a sufficient pool of new PKI data with internally assigned new identifiers and uploads them to the update server <b>132</b> for use. An example of such PKI/identity data records for new identity data types ID<b>1</b> . . . IDn are shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0037" num="0036">Each request message received from a device will be fulfilled with the next available new or unused PKI/identity data record stored in the update server <b>132</b>. In this process, the update server <b>132</b> will pair the device ID with a new PKI/identity data record having the identifier ID-D. This online authorization and device binding process is used to ensure that all devices that are authorized to be upgraded will receive the new PKI/identity data.</p>
<p id="p-0038" num="0037">Prior to sending a new identity data record to a network-enabled device, the update server encrypts at least the portions of the record that are to remain secret using the OTP or other device-specific key such as a Diffie-Hellman derived symmetric key if a Diffie-Hellman algorithm is employed. Therefore the update server needs to calculate the clear OTP key by decrypting the EOLK using either the DK-EOLK or by calculating the shared Diffie-Hellman secret, which is derived from the update server's Diffie-Hellman public key and the network-enabled device's public key. The various encryption and decryption operations may be performed by encryption module <b>660</b> of the update server <b>132</b></p>
<p id="p-0039" num="0038">The WGM <b>134</b> employs a whitelist-based approach to consolidate the various IDs received and to address any conflict in the process of resolving the above issues. In particular, the WGM <b>134</b> manages the various identifiers used by different entities and correlates the different whitelist sources from the factories, the PKI management system and the network operator's access authorization servers as well as the update server <b>132</b>. This is accomplished by cross indexing the identifiers to create a master database for the subsequent generation of specific whitelists that are tailored for a particular network/customer or application. The WGM <b>134</b> also manages the associations among the various IDs and their relationships with their respective PKI/Identity data records which are used for different purposes, including online update request authentication, authorization, new identity protection, and so on. If conflicts arise as a result of information received from either of the three identity data sources or as a result of information stored in update server <b>132</b> transaction logs, the WGM <b>134</b> detects and resolves them.</p>
<p id="p-0040" num="0039">The following discussion will from time-to-time refer to PKI data instead of more generally to identity data. However, in all cases any of the other aforementioned types of identity data may be used instead of PKI data. Furthermore, the term &#x201c;PKI Data&#x201d; does not necessarily imply the type of identity data which includes digital certificates.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 4</figref> shows one example of a generic whitelist <b>400</b> that may be used for both online request message authentication and offline new identity generation with online binding to a specific network-enabled device. The whitelist includes a number of fields that are to be populated by data, including a CustID, New PKI Type ID, Previous PKI Type ID, Previous ID (e.g. ID-A), which is linked to the previous PKI data) and Device ID. The CustID specifies the identifier of the network operator deploying the list of network-enabled devices from which a request for new PKI data is received. The New PKI Type ID (<b>1</b>, . . . , n) specifies the identifier or identifiers for the type and format of the identity data (also known as PKI Data) that is being requested. If the device is to be provisioned for n sets of identity data, then the whitelist may include n New PKI Type IDs. The Previous PKI Type ID specifies the identity data type that is associated with a device's previous PKI data which has previously been installed into a device, most likely in a factory. The Previous ID specifies the original identifier that was assigned to a deployed device by the secure device provisioning system at the factory.</p>
<p id="p-0042" num="0041">For devices without previously installed PKI data, it is assumed that the device still has some type of a unique identifier (e.g., a chip ID, serial number, MAC Address, etc.) which can be considered to be the Previous ID. In terms of the notation employed above, this identifier is denoted ID-A and is associated with the previous PKI type and data. Note that in the examples presented below PKI identity data is assumed to have been previously installed in the devices being updated. The Device ID (ID-C) specifies the identifier of the device that is used by the network operator to identify a deployed device. A new identifier (ID-D) could be used for new PKI identity generation.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 5</figref> shows the whitelist after the devices are bound to the new PKI data. As shown, each of the devices <b>1</b>, <b>2</b> and <b>3</b> in <figref idref="DRAWINGS">FIG. 5</figref> are to be provisioned with PKI data records for New PKI Types ID<b>1</b>, ID<b>2</b>, . . . IDn. The new PKI data is denoted with a new identifier, (New ID). Each new identifier is linked to a pair of previously assigned identifiers, which in this example includes ID-A (associated with the old identity data) and ID-C (associated with the service provider). The new identifier may be linked to the PKI data for a single PKI Type or multiple PKI Types. That is, in <figref idref="DRAWINGS">FIG. 5</figref>, the new identifiers ID-D<b>1</b>, ID-D<b>2</b> and ID-D<b>3</b> (associated with New PKI Type ID<b>1</b>) may or may not be the same as the identifiers ID-DX, ID-DY and ID-DZ (associated with New PKI Type IDn), respectively.</p>
<p id="p-0044" num="0043">For devices equipped with an OTP key and which have initial PKI-based identity data that includes its corresponding EOLK installed at the factory, their OTP key can be used for the protection of the new PKI/identity data until it is delivered to the appropriate device. In this way the identity data can be decrypted only by the device that possesses the proper OTP key.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 6</figref> shows one example of the update server <b>132</b> which receives the output from the PKI/identity generation system <b>120</b> of <figref idref="DRAWINGS">FIGS. 1A and 1B</figref> and PKI data requests from the network-enabled devices. As previously mentioned, after receiving and validating the request, the update server <b>132</b> returns the uniquely protected and authenticated PKI data back to the device. In this example the network-enabled devices are assumed to have been provisioned at the factory with a unique OTP key and an encrypted version of the OTP key. As those of ordinary skill will recognize, a similar process may be performed if other public-based key agreement algorithms are employed.</p>
<p id="p-0046" num="0045">The process starts at <b>1</b> a when a system administrator provides the configuration manager <b>605</b> with various system configuration parameters. For instance, one parameter may specify the maximum number of repeat requests allowed from the same device for a specific PKI type and network operator. That is, the number of repeat requests may be different for different network operators and even different types of PKI data for the same network operator. Another parameter may specify the amount of time that must elapse before receiving successive requests from the same device. Yet other parameters may relate to various security checks and the like that are to be performed. The use of these system parameters can allow both efficient preprocessing to maintain server performance while allowing a sufficient number of device retries to account for request failures and/or disruptions. The system administrator also places the EOLK decryption key or keys (the DK-EOLKs) into a hardware security module <b>650</b>. As previously mentioned, a single decryption key usually will be able to decrypt the EOLK from multiple devices, which will generally belong to an entire product line or the like.</p>
<p id="p-0047" num="0046">At <b>1</b><i>b </i>the system configuration parameters are stored in the server database <b>625</b>.</p>
<p id="p-0048" num="0047">The PKI loader <b>133</b> imports to the server database <b>625</b> at <b>1</b><i>c </i>the new identity records that were output from the PKI generation system. The data that is stored is shown in <figref idref="DRAWINGS">FIG. 3</figref>. While the PKI generation system is shown in <figref idref="DRAWINGS">FIG. 1</figref> as an offline system, as mentioned above, in some implementations it may be an online system. In this latter case, since the identity data generation system is online and the process of binding the identity data to the devices is performed online, both the generation of the identity data and the binding process can be performed by a common system or server (e.g., the update server <b>132</b>). It should be noted that when the PKI data is imported from an offline system, it generally will be encrypted for security purposes. This layer of encryption is removed when a request for PKI identity data is received, before the identity data is encrypted with the device-specific key described herein.</p>
<p id="p-0049" num="0048">The WGM <b>134</b> provides a whitelist such as shown in <figref idref="DRAWINGS">FIG. 2</figref> to the whitelist handler <b>635</b>, which in turn parses the data and stores the whitelist attributes in server database <b>625</b> at <b>2</b><i>b. </i></p>
<p id="p-0050" num="0049">At <b>3</b><i>a</i>, the session manager <b>610</b> receives a PKI data request from a specific device. The request includes data such as the CustID, the previously assigned device identifier (ID-A or ID-B or ID-C), the device EOLK, the device certificate and a signature. The request is passed to the protocol handler <b>615</b> at <b>3</b><i>b</i>. The protocol handler <b>615</b>, in turn, passes the new PKI data request to the message validation module <b>620</b> at <b>4</b><i>a</i>. In addition, the protocol handler <b>615</b> also passes at <b>4</b><i>b </i>the aforementioned ID pairing information, the new PKI Type ID and CustID to the authorization module <b>630</b>.</p>
<p id="p-0051" num="0050">At <b>5</b>, the message validation module <b>620</b> checks the format of the PKI data request, verifies the signature, validates the key and certificate chain, and checks that the message conforms to various message protocols to determine, for example, that the message has a proper timestamp and/or sequence number.</p>
<p id="p-0052" num="0051">The authorization module <b>630</b> determines at <b>6</b><i>a </i>if the requesting device is authorized for an upgrade for the particular new PKI type that is being requested. Such verification of the device's authorization to receive an upgrade can be accomplished by confirming that the paired IDs (ID-A and ID-C) in an upgrade request is on the whitelist provided to the server database <b>625</b>. If the authorization verification fails, the authorization module <b>630</b> at <b>6</b><i>b </i>passes the missing ID pairing information along with the CustID and the new identity data type to the monitor and reporter <b>136</b> so that the network operator may be notified. This notification indicates that although the request for new PKI data which was received from the device may be valid, the necessary information needed to perform the upgrade was not made available to the update server <b>132</b>. In addition, this same information is passed to the whitelist handler <b>635</b> at <b>6</b><i>c</i>, which as discussed below, can request the WGM <b>134</b> to perform whatever steps are necessary to provide the update server <b>130</b> with the missing information.</p>
<p id="p-0053" num="0052">The protocol handler <b>615</b> next checks with the server database <b>625</b> at <b>7</b><i>a </i>to see if the number of repeated requests from the same device is less than the maximum allowed amount. The purpose of this check is to ensure that the update server <b>132</b> can stop responding to a rogue device that repeatedly sends new PKI data requests to the server. If the maximum number of requests has not been exceeded, at <b>7</b><i>b </i>the next available new PKI data record is retrieved from the database <b>625</b> based on the new PKI Type ID. At <b>7</b><i>c </i>the protocol handler <b>615</b> then uses the encryption module <b>660</b> to decrypt the EOLK that it received along with the identity data request received at step <b>3</b><i>b </i>by using the decryption key (DK-EOLK) stored in the HSM <b>650</b>. Note that, as previously mentioned, if the PKI identity data was provided by an offline generation system, the data will generally have been encrypted. This encryption layer needs to be removed before the EOLK can be decrypted. In this way the encryption module <b>650</b> recovers the OTP key for the device. The new PKI data record is then encrypted (or re-encrypted if the identity data was encrypted upon receipt from an offline generation system) by the protocol handler <b>615</b> using the OTP key. If the Diffie-Hellman algorithm is used, the encryption key is computed from the server's Diffie-Hellman private key and the device's Diffie-Hellman public key (obtained the device's Diffie-Hellman certificate) using a Diffie-Hellman key agreement process. The new PKI Data is then encrypted using this encryption key. Note that only the secret key and any private attributes of the new PKI data need to be encrypted.</p>
<p id="p-0054" num="0053">The new encrypted PKI data record is incorporated into a new PKI data response message, which at <b>7</b><i>d </i>is sent to the message signing module <b>640</b> so that it can be signed with the private key of the update server <b>132</b>. If an error occurs in this process, at <b>7</b><i>e </i>the protocol handler <b>615</b> sends a status error message to the email notification module <b>645</b>. In some cases the protocol handler may also send an error message to the device since the device may have some error handling capabilities. Assuming no error has occurred, the signed new PKI data response message is sent to the device at <b>7</b><i>f. </i></p>
<p id="p-0055" num="0054">The monitor and reporter <b>136</b> retrieves at <b>8</b><i>a </i>various usage data and status information from the server database <b>625</b> as well as transaction and error logs. Examples of the usage data are the number of new PKI data records loaded and requested, the identification of records that are requested more than once or requested for the maximum allowed number of times, and so on. The monitor and reporter <b>136</b> sends this information at <b>8</b><i>b </i>to the system administrator, indicating any errors that have occurred. At <b>8</b><i>c</i>, the monitor and reporter <b>136</b> also sends periodic reports to the network operator so that they are informed of the upgrade status. Finally, the whitelist handler <b>635</b> at <b>9</b> sends a message back to the WGM <b>134</b> requesting any whitelist updates.</p>
<p id="p-0056" num="0055">As used in this application, the terms &#x201c;component,&#x201d; &#x201c;module,&#x201d; &#x201c;system,&#x201d; &#x201c;apparatus,&#x201d; &#x201c;interface,&#x201d; or the like are generally intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and/or a computer. By way of illustration, both an application running on a controller and the controller can be a component. One or more components may reside within a process and/or thread of execution and a component may be localized on one computer and/or distributed between two or more computers.</p>
<p id="p-0057" num="0056">Furthermore, the claimed subject matter may be implemented as a method, apparatus, or article of manufacture using standard programming and/or engineering techniques to produce software, firmware, hardware, or any combination thereof to control a computer to implement the disclosed subject matter. The term &#x201c;article of manufacture&#x201d; as used herein is intended to encompass a computer program accessible from any computer-readable storage media. For example, computer readable storage media can include but are not limited to magnetic storage devices (e.g., hard disk, floppy disk, magnetic strips . . . ), optical disks (e.g., compact disk (CD), digital versatile disk (DVD) . . . ), smart cards, and flash memory devices (e.g., card, stick, key drive . . . ). Of course, those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for updating network-enabled devices with new identity data, comprising:
<claim-text>receiving requests for new identity data from a plurality of network-enabled devices, said requests including previously assigned identifiers respectively associated with the network-enabled devices and encrypted versions of keys uniquely associated with the network-enabled devices;</claim-text>
<claim-text>decrypting the encrypted versions of the keys;</claim-text>
<claim-text>receiving a plurality of new identity records that each include new identity data and new identifiers respectively linked to the new identity data;</claim-text>
<claim-text>receiving a whitelist of network-enabled devices authorized to be provisioned with new identity data;</claim-text>
<claim-text>determining that each of the plurality of network-enabled devices specified in the requests for new identity data are authorized to receive new identity data by confirming that the previously assigned identifiers included in the requests are also included in the whitelist;</claim-text>
<claim-text>retrieving a first of the new identity records;</claim-text>
<claim-text>encrypting at least a part of a first of the new identity record with a key uniquely associated with a network-enabled device identified by a first of the previously assigned identifiers; and</claim-text>
<claim-text>sending the first encrypted new identity record to the network-enabled device identified by the first previously assigned identifier.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> in which a decryption key used to decrypt the encrypted version of the key is able to decrypt encrypted keys included in requests received from a plurality of network-enabled devices requesting new identity data.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the keys uniquely associated with the respective network-enabled devices sending the requests are one-time programmable keys stored in a protected memory included in the network-enabled devices.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the requests for new identity data each include a public key uniquely associated with a respective one of the network-enabled devices, and further comprising executing a public key based agreement algorithm using the public key to obtain the key uniquely assigned to each respective network-enabled device which is used to decrypt the new identity data records respectively delivered to the network-enabled devices.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising validating the request by at least verifying a signature of the request.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein, if determining that each of the plurality of network-enabled devices specified in the request for new identity data are authorized to receive the new identity data fails, sending a message requesting any information concerning missing pairs of previously assigned identifiers.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising determining that a number of requests for new identity data is not received from a given network-enabled devices more than a maximum allowed number of times.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the new identity data is not linked to old identity data previously provisioned in the network-enabled devices and wherein retrieving the first of the new identity records includes retrieving a next available new identity record independent of the network-enabled device to which the first identity data record is to be sent.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein retrieving, encrypting and sending are performed online upon receiving the request.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. At least one server, comprising:
<claim-text>a session manager configured to receive requests for new identity data from network-enabled devices, each of said requests including a previously assigned identifier identifying the respective network-enabled device and an encrypted version of a key uniquely associated with the network-enabled device;</claim-text>
<claim-text>an authorization module configured to determine if the network-enabled devices specified on a whitelist are authorized to be provisioned with new identity data, the whitelist including previously assigned identifiers of network-enabled devices associated with identity data records previously provisioned in the respective network-enabled devices;</claim-text>
<claim-text>a database configured to receive new identity records generated by an identity data generation system, wherein each of the new identity records includes a new identifier; and</claim-text>
<claim-text>a protocol handler configured to decrypt the encrypted version of the key and deliver a data response message to each of the authorized network-enabled devices requesting new identity data, each of the data response messages including a new identity record that is encrypted with a key uniquely associated with the network-enabled device to which the data response message is sent.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The at least one server of <claim-ref idref="CLM-00010">claim 10</claim-ref> in which the decryption key is able to decrypt encrypted keys included in requests received from a plurality of network-enabled devices requesting new identity data.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The at least one server of <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein the keys uniquely associated with the respective network-enabled devices sending the requests are one-time programmable keys stored in a memory included in the network-enabled devices.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The at least one server of <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein the requests for new identity data each include a public key uniquely associated with a respective one of the network-enabled devices, said protocol handler being further configured to execute a public key based agreement algorithm using the public key to obtain the key uniquely assigned to each respective network-enabled device which is used to encrypt the new identity data records respectively delivered to the network-enabled devices.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The at least one server of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising a configuration manager for receiving user input specifying a maximum number of repeat requests that are allowed from a particular network-enabled device.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The at least one server of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the authorization module is configured to determine if the network-enabled devices specified on the whitelist are authorized to be provisioned with new identity data by determining if pairing information included in the request is also in the database.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. One or more non-transitory computer-readable storage media containing instructions which, when executed by one or more processors perform a method for updating network-enabled devices with new identity data, comprising:
<claim-text>receiving requests for new identity data from a plurality of network-enabled devices, said requests including previously assigned identifiers respectively associated with the network-enabled devices and encrypted versions of keys uniquely associated with the network-enabled devices;</claim-text>
<claim-text>decrypting the encrypted versions of the keys;</claim-text>
<claim-text>receiving a whitelist of network-enabled devices authorized to be provisioned with new identity data</claim-text>
<claim-text>determining that each of the plurality of network-enabled devices specified in the requests for new identity data are authorized to receive new identity data by confirming that the previously assigned identifiers included in the requests are also included in the whitelist;</claim-text>
<claim-text>binding new identity data to each of the network-enabled devices authorized to receive new identity data;</claim-text>
<claim-text>encrypting the new identity data bound to each of the network-enabled devices using an encryption key unique to each respective network-enabled device; and</claim-text>
<claim-text>sending the first encrypted new identity record to the network-enabled device identified by the first previously assigned identifier. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
