<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627270-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627270</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13231162</doc-number>
<date>20110913</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>119</us-term-extension>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>9</main-group>
<subgroup>44</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>717100</main-classification>
<further-classification>717101</further-classification>
<further-classification>717120</further-classification>
</classification-national>
<invention-title id="d2e55">Method and system for monitoring a software artifact</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>7080355</doc-number>
<kind>B2</kind>
<name>Carlson et al.</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717120</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7149734</doc-number>
<kind>B2</kind>
<name>Carlson et al.</name>
<date>20061200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7322024</doc-number>
<kind>B2</kind>
<name>Carlson et al.</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7343386</doc-number>
<kind>B2</kind>
<name>Gomes et al.</name>
<date>20080300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717100</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>7506312</doc-number>
<kind>B1</kind>
<name>Girolami-Rose et al.</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7644101</doc-number>
<kind>B2</kind>
<name>Yano</name>
<date>20100100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707793</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>7707162</doc-number>
<kind>B2</kind>
<name>Naphade et al.</name>
<date>20100400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>7735068</doc-number>
<kind>B2</kind>
<name>Siddaramappa et al.</name>
<date>20100600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>7788632</doc-number>
<kind>B2</kind>
<name>Kuester et al.</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>7814078</doc-number>
<kind>B1</kind>
<name>Forman et al.</name>
<date>20101000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>7844592</doc-number>
<kind>B2</kind>
<name>Shoval et al.</name>
<date>20101100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>7877391</doc-number>
<kind>B2</kind>
<name>Bird et al.</name>
<date>20110100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>8060871</doc-number>
<kind>B2</kind>
<name>Bernabeu-Auban et al.</name>
<date>20111100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>8069182</doc-number>
<kind>B2</kind>
<name>Pieper</name>
<date>20111100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>8156092</doc-number>
<kind>B2</kind>
<name>Hewett et al.</name>
<date>20120400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>8156120</doc-number>
<kind>B2</kind>
<name>Brady</name>
<date>20120400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707736</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>8280755</doc-number>
<kind>B2</kind>
<name>Stuhec et al.</name>
<date>20121000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705  711</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>8296251</doc-number>
<kind>B1</kind>
<name>Athayde</name>
<date>20121000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>8356278</doc-number>
<kind>B2</kind>
<name>Drissi et al.</name>
<date>20130100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>8359285</doc-number>
<kind>B1</kind>
<name>Dicker et al.</name>
<date>20130100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>706 45</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>8438532</doc-number>
<kind>B2</kind>
<name>Fox et al.</name>
<date>20130500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>8464205</doc-number>
<kind>B2</kind>
<name>Chaar et al.</name>
<date>20130600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>8473894</doc-number>
<kind>B2</kind>
<name>Fox et al.</name>
<date>20130600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>8479159</doc-number>
<kind>B2</kind>
<name>Klinger et al.</name>
<date>20130700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>8499284</doc-number>
<kind>B2</kind>
<name>Pich et al.</name>
<date>20130700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>2003/0046282</doc-number>
<kind>A1</kind>
<name>Carlson et al.</name>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00027">
<document-id>
<country>US</country>
<doc-number>2004/0010786</doc-number>
<kind>A1</kind>
<name>Cool et al.</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00028">
<document-id>
<country>US</country>
<doc-number>2004/0243968</doc-number>
<kind>A1</kind>
<name>Hecksel</name>
<date>20041200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717100</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00029">
<document-id>
<country>US</country>
<doc-number>2005/0137884</doc-number>
<kind>A1</kind>
<name>Baird</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00030">
<document-id>
<country>US</country>
<doc-number>2006/0020937</doc-number>
<kind>A1</kind>
<name>Schaefer</name>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00031">
<document-id>
<country>US</country>
<doc-number>2006/0037000</doc-number>
<kind>A1</kind>
<name>Speeter et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00032">
<document-id>
<country>US</country>
<doc-number>2006/0149717</doc-number>
<kind>A1</kind>
<name>Bird et al.</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00033">
<document-id>
<country>US</country>
<doc-number>2007/0033567</doc-number>
<kind>A1</kind>
<name>Carlson et al.</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717100</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00034">
<document-id>
<country>US</country>
<doc-number>2007/0050232</doc-number>
<kind>A1</kind>
<name>Chang et al.</name>
<date>20070300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00035">
<document-id>
<country>US</country>
<doc-number>2007/0089086</doc-number>
<kind>A1</kind>
<name>Ortloff</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00036">
<document-id>
<country>US</country>
<doc-number>2007/0143735</doc-number>
<kind>A1</kind>
<name>Clemm et al.</name>
<date>20070600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717100</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00037">
<document-id>
<country>US</country>
<doc-number>2007/0250829</doc-number>
<kind>A1</kind>
<name>Hillier et al.</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717170</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00038">
<document-id>
<country>US</country>
<doc-number>2007/0277148</doc-number>
<kind>A1</kind>
<name>Venolia</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00039">
<document-id>
<country>US</country>
<doc-number>2008/0028378</doc-number>
<kind>A1</kind>
<name>Biswas et al.</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00040">
<document-id>
<country>US</country>
<doc-number>2008/0127040</doc-number>
<kind>A1</kind>
<name>Barcellona</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00041">
<document-id>
<country>US</country>
<doc-number>2008/0154965</doc-number>
<kind>A1</kind>
<name>Pedersen</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>7071041</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00042">
<document-id>
<country>US</country>
<doc-number>2008/0229300</doc-number>
<kind>A1</kind>
<name>O'Brien</name>
<date>20080900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00043">
<document-id>
<country>US</country>
<doc-number>2008/0270374</doc-number>
<kind>A1</kind>
<name>Li et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  5</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00044">
<document-id>
<country>US</country>
<doc-number>2008/0313595</doc-number>
<kind>A1</kind>
<name>Boulineau et al.</name>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717101</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00045">
<document-id>
<country>US</country>
<doc-number>2009/0013310</doc-number>
<kind>A1</kind>
<name>Arner et al.</name>
<date>20090100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717120</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00046">
<document-id>
<country>US</country>
<doc-number>2009/0055809</doc-number>
<kind>A1</kind>
<name>Campbell</name>
<date>20090200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00047">
<document-id>
<country>US</country>
<doc-number>2009/0094572</doc-number>
<kind>A1</kind>
<name>Hegde et al.</name>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00048">
<document-id>
<country>US</country>
<doc-number>2009/0119261</doc-number>
<kind>A1</kind>
<name>Ismalon</name>
<date>20090500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  3</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00049">
<document-id>
<country>US</country>
<doc-number>2009/0138843</doc-number>
<kind>A1</kind>
<name>Hinton et al.</name>
<date>20090500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00050">
<document-id>
<country>US</country>
<doc-number>2009/0144698</doc-number>
<kind>A1</kind>
<name>Fanning et al.</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00051">
<document-id>
<country>US</country>
<doc-number>2009/0307662</doc-number>
<kind>A1</kind>
<name>Ackerman</name>
<date>20091200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00052">
<document-id>
<country>US</country>
<doc-number>2010/0023920</doc-number>
<kind>A1</kind>
<name>Chaar et al.</name>
<date>20100100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00053">
<document-id>
<country>US</country>
<doc-number>2010/0058295</doc-number>
<kind>A1</kind>
<name>Johnson et al.</name>
<date>20100300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00054">
<document-id>
<country>US</country>
<doc-number>2010/0100543</doc-number>
<kind>A1</kind>
<name>Brady</name>
<date>20100400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00055">
<document-id>
<country>US</country>
<doc-number>2010/0153920</doc-number>
<kind>A1</kind>
<name>Bonnet</name>
<date>20100600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00056">
<document-id>
<country>US</country>
<doc-number>2010/0211924</doc-number>
<kind>A1</kind>
<name>Begel et al.</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717101</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00057">
<document-id>
<country>US</country>
<doc-number>2010/0306730</doc-number>
<kind>A9</kind>
<name>Carlson et al.</name>
<date>20101200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00058">
<document-id>
<country>US</country>
<doc-number>2010/0333067</doc-number>
<kind>A1</kind>
<name>Goh et al.</name>
<date>20101200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00059">
<document-id>
<country>US</country>
<doc-number>2011/0023016</doc-number>
<kind>A1</kind>
<name>Khader et al.</name>
<date>20110100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00060">
<document-id>
<country>US</country>
<doc-number>2011/0055186</doc-number>
<kind>A1</kind>
<name>Gopalakrishnan</name>
<date>20110300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00061">
<document-id>
<country>US</country>
<doc-number>2011/0066619</doc-number>
<kind>A1</kind>
<name>Perantatos et al.</name>
<date>20110300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00062">
<document-id>
<country>US</country>
<doc-number>2011/0145810</doc-number>
<kind>A1</kind>
<name>Forsyth</name>
<date>20110600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00063">
<document-id>
<country>US</country>
<doc-number>2011/0258162</doc-number>
<kind>A1</kind>
<name>Lam</name>
<date>20111000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00064">
<document-id>
<country>US</country>
<doc-number>2011/0307862</doc-number>
<kind>A1</kind>
<name>Abrams et al.</name>
<date>20111200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00065">
<document-id>
<country>US</country>
<doc-number>2012/0060148</doc-number>
<kind>A1</kind>
<name>Jones et al.</name>
<date>20120300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00066">
<document-id>
<country>US</country>
<doc-number>2012/0110039</doc-number>
<kind>A1</kind>
<name>McKay et al.</name>
<date>20120500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00067">
<document-id>
<country>US</country>
<doc-number>2012/0124547</doc-number>
<kind>A1</kind>
<name>Halbedel</name>
<date>20120500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00068">
<document-id>
<country>US</country>
<doc-number>2012/0159420</doc-number>
<kind>A1</kind>
<name>Yassin et al.</name>
<date>20120600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00069">
<document-id>
<country>US</country>
<doc-number>2012/0246616</doc-number>
<kind>A1</kind>
<name>Frontiero et al.</name>
<date>20120900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00070">
<document-id>
<country>US</country>
<doc-number>2012/0311534</doc-number>
<kind>A1</kind>
<name>Fox et al.</name>
<date>20121200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00071">
<document-id>
<country>US</country>
<doc-number>2012/0331439</doc-number>
<kind>A1</kind>
<name>Zimmermann et al.</name>
<date>20121200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00072">
<document-id>
<country>US</country>
<doc-number>2013/0007704</doc-number>
<kind>A1</kind>
<name>Haynes et al.</name>
<date>20130100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00073">
<document-id>
<country>US</country>
<doc-number>2013/0047137</doc-number>
<kind>A1</kind>
<name>Bak et al.</name>
<date>20130200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717121</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00074">
<document-id>
<country>US</country>
<doc-number>2013/0067427</doc-number>
<kind>A1</kind>
<name>Fox et al.</name>
<date>20130300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00075">
<document-id>
<country>US</country>
<doc-number>2013/0074038</doc-number>
<kind>A1</kind>
<name>Fox et al.</name>
<date>20130300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00076">
<document-id>
<country>US</country>
<doc-number>2013/0191808</doc-number>
<kind>A1</kind>
<name>Fox et al.</name>
<date>20130700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00077">
<document-id>
<country>US</country>
<doc-number>2013/0212562</doc-number>
<kind>A1</kind>
<name>Fox et al.</name>
<date>20130800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00078">
<document-id>
<country>US</country>
<doc-number>2013/0227517</doc-number>
<kind>A1</kind>
<name>Fox et al.</name>
<date>20130800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00079">
<othercit>Gardler, &#x201c;Reuse Readiness Rating&#x201d;, 2009, pp. 1-17, downloaded from the Internet on Apr. 1, 2013 from &#x3c;url&#x3e;: http://www.oss-watch.ac.uk/resources/reuseReadinessRating.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00080">
<othercit>Open Source Initiative, &#x201c;Home&#x201d;, May 5, 2010, pp. 1-2, downloaded from the Waybackmachine Internet Archive on Apr. 1, 2013.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00081">
<othercit>David, &#x201c;Recommending Software Artifacts from Repository Transactions,&#x201d; N. T. Nguyen et al. (Eds.): IEA/AIE 2008, LNAI 5027, pp. 189-198, 2008.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00082">
<othercit>Herbsleb, &#x201c;Global Software Engineering: The Future of Socio-technical Coordination,&#x201d; 2007, FOSE '07 2007 Future of Software Engineering, pp. 188-198.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00083">
<othercit>Kagdi et al., &#x201c;A survey and taxonomy of approaches for mining software repositories in the context of software evolution,&#x201d; 2007, Journal of Software Maintenance and Evolution: Research and Practice J. Softw. Maint. Evol.: Res. Pract. 2007; 19:77-131.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00084">
<othercit>U.S. Appl. No. 13/089,751, filed Apr. 19, 2011, Fox et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00085">
<othercit>U.S. Appl. No. 13/233,265, filed Sep. 15, 2011, Fox et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00086">
<othercit>Sourceforge, List of Current OSS Discovery Fingerprints [online] [retrieved on May 27, 2012] Retrieved from the internet: &#x3c;http://ossdiscovery.sourceforge.net/fingerprints.html&#x3e;.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00087">
<othercit>Sourceforge, OSS Discovery FAQ[online] [retrieved on May 27, 2012] Retrieved from the internet: &#x3c;http://ossdiscovery.sourceforge.net/faq.html &#x3e;.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00088">
<othercit>U.S. Appl. No. 13/476,160, filed May 21, 2012, Fedorenko et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00089">
<othercit>U.S. Appl. No. 13/483,412, filed May 30, 2012, Fox et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00090">
<othercit>U.S. Appl. No. 13/554,335, filed Jul. 20, 2012, Jackson et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00091">
<othercit>U.S. Appl. No. 13/151,816, filed Jun. 2, 2011, Fox et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00092">
<othercit>U.S. Appl. No. 13/369,617, filed Feb. 9, 2012, Fox et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00093">
<othercit>U.S. Appl. No. 13/744,542, filed Jan. 18, 2013, Fox et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00094">
<othercit>U.S. Appl. No. 13/780,525, filed Feb. 28, 2013, Fox et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00095">
<othercit>Cubranic et al., &#x201c;Hipikat: Recommending Pertinent Software Development Artifacts,&#x201d; 2003, Proceedings of the 25<sup>th </sup>International Conference on Software Engineering (ICSE '03), pp. 1-11.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00096">
<othercit>Cubranic et al., &#x201c;Hipikat: A Project Memory for Software Development,&#x201d; IEEE Transactions on Software Engineering, vol. 31, No. 6, Jun. 2005, pp. 446-465.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00097">
<othercit>Notice of Allowance issued by the U.S. Patent Office on Jan. 22, 2013 in connection with related U.S. Appl. No. 13/089,751.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00098">
<othercit>Milanovic et al., &#x201c;Model &#x26; Metamodel, Metadata and Document Repository for Software and Data Integration&#x201d;, 2008, MoDELS 2008, LNCS 5301, pp. 416-430, 2008.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00099">
<othercit>Sherman Steven, &#x201c;A Process-Oriented Ontology for Representing Software Engineering Project Knowledge&#x201d;, 2009, A doctoral dissertation submitted in partial fulfillment of the requirements for the degree of Doctor of Philosophy, Graduate School of Computer and Information Sciences, Nova Southeastern University, pp. 1-244.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00100">
<othercit>Notice of Allowance issued by the U.S. Patent Office on Mar. 15, 2013 in connection with related U.S. Appl. No. 13/483,412.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00101">
<othercit>Office Action issued by the U.S. Patent Office on Apr. 8, 2013 in connection with related U.S. Appl. No. 13/151,816.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00102">
<othercit>U.S. Appl. No. 13/861,065, filed Apr. 11, 2013, Fox et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00103">
<othercit>Ji et al., &#x201c;Efficient Interactive Fuzzy Keyword Search&#x201d;, WWW 2009, Apr. 20-24, 2009, ACM 978-1-60558-487-4/09/04, pp. 371-380.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00104">
<othercit>Happel et al., &#x201c;Potentials and Challenges of Recommendation Systems for Software Development&#x201d;, RSSE '08, Copyright 2008 ACM 978-1-60558-228-3, pp. 11-15.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00105">
<othercit>Maalej et al., &#x201c;A Lightweight Approach for Knowledge Sharing in Distributed Software Teams&#x201d;, T. Yamaguchi (Ed.): PAKM 2008, LNAI 5345, pp. 14-25.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00106">
<othercit>U.S. Appl. No. 13/962,122, filed Aug. 8, 2013, Fox et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00107">
<othercit>Gacek, &#x201c;Exploiting Domain Architectures in Software Reuse&#x201d;, 1992, ACM 0-89791-739&#x2014;1/95/0004, pp. 229-232.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00108">
<othercit>Prieto-Diaz et al., &#x201c;Classifying Software for Reusability&#x201d;, Jan. 1987, IEEE Software pp. 6-16.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00109">
<othercit>Meling et al., &#x201c;Storing and Retrieving Software Components: A Component Description Manager&#x201d;, 2000, IEE, pp. 1-11.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00110">
<othercit>Robillard et al., &#x201c;Recommendation Systems for Software Engineering&#x201d;, IEEE Computer Society, 2010, pp. 80-86.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00111">
<othercit>Duan et al., &#x201c;Clustering Support for Automated Tracing&#x201d;, ASE '07, Nov. 5-9, 2007, pp. 244-253.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00112">
<othercit>David, &#x201c;Recommending Software Artifacts from Repository Transactions&#x201d;, IEA/AIE '08 Proceedings of the 21<sup>st </sup>International conference on Industrial, Engineering and Other Applications of Applied Intelligent Systems: New Frontiers in Applied Artificial Intelligence, 2008, pp. 189-198.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00113">
<othercit>Office Action issued by the U.S. Patent Office on Jun. 18, 2013 in related U.S. Appl. No. 13/369,617.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00114">
<othercit>Notice of Allowance issued by the U.S. Patent Office on Jul. 11, 2013 in related U.S. Appl. No. 13/780,525.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00115">
<othercit>Notice of Allowance issued by the U.S. Patent Office on Aug. 14, 2013 in related U.S. Appl. No. 13/151,816.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>15</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>7</number-of-drawing-sheets>
<number-of-figures>7</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20130067426</doc-number>
<kind>A1</kind>
<date>20130314</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Fox</last-name>
<first-name>Brian Edward</first-name>
<address>
<city>Goffstown</city>
<state>NH</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Orlina</last-name>
<first-name>Joel</first-name>
<address>
<city>Silver Spring</city>
<state>MD</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Fox</last-name>
<first-name>Brian Edward</first-name>
<address>
<city>Goffstown</city>
<state>NH</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Orlina</last-name>
<first-name>Joel</first-name>
<address>
<city>Silver Spring</city>
<state>MD</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Posz Law Group, PLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Sonatype, Inc.</orgname>
<role>02</role>
<address>
<city>Fulton</city>
<state>MD</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Dao</last-name>
<first-name>Thuy</first-name>
<department>2192</department>
</primary-examiner>
<assistant-examiner>
<last-name>Berman</last-name>
<first-name>Stephen</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A computer system is provided, comprising: a transceiver; and a processor configured to facilitate: collecting and storing information related to a software project having one or more software artifacts, the information including: a project identifier, artifact identifiers for the artifacts used by the project, information about the temporal version for the artifacts, and contact information for a project user; collecting, from a repository, artifact metadata associated with the software artifacts, the artifact metadata including: information identifying the artifact, information about security risks associated with the artifact, information about a license associated with the artifact, or information indicative of a level of use or user rating of the artifact; periodically monitoring the metadata to determine whether there has been any actionable change in the artifact metadata; and notifying the project user using the contact information if it is determined that there has been an actionable change in the artifact metadata.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="190.33mm" wi="245.87mm" file="US08627270-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="250.70mm" wi="192.79mm" orientation="landscape" file="US08627270-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="248.41mm" wi="195.41mm" file="US08627270-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="252.05mm" wi="192.79mm" file="US08627270-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="210.23mm" wi="199.98mm" file="US08627270-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="220.73mm" wi="190.42mm" file="US08627270-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="243.16mm" wi="170.35mm" file="US08627270-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="250.70mm" wi="168.66mm" file="US08627270-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">TECHNICAL FIELD</heading>
<p id="p-0002" num="0001">The technical field relates in general to software development, and more specifically to providing information about software artifacts used in software development.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">All software developers, in whatever language and platform, whatever methodology, will realize that there is some software that they don't want to write and that already exists. However, there may be multiple artifacts that already exist and possibly do what the programmer needs to do. Developers that write their own software conventionally will use published artifacts as building blocks in writing code within a larger project, so as to avoid re-writing software which already exists.</p>
<p id="p-0004" num="0003">Complicating the problem of using existing artifacts is the fact that issues can arise with these artifacts over time (e.g., security defects, license changes, potential infringement of intellectual property) that a user might wish to address, and the existing artifact might change during the course of the development of a piece of software (e.g., the introduction of a new version of the artifact).</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0005" num="0004">Accordingly, one or more embodiments provide a computer system. The computer system includes a transceiver operable to transmit and receive communications over at least a portion of a network; and a processor cooperatively operable with the transceiver, and configured to facilitate: collecting and storing information related to a software project that uses one or more software artifacts, the information for the software project including: a project identifier for the project, artifact identifiers for any of the one or more artifacts used by the project, information about the temporal version for any of the one or more artifacts used by the project, and contact information for a user of the software project; collecting, from a software repository by communication over the transceiver, metadata associated with the one or more software artifacts, the metadata for each of the one or more software artifacts including: information identifying the respective artifact, information about security risks associated with the respective artifact, information about a license associated with the respective artifact, or information indicative of a level of use or user rating of the respective artifact; periodically monitoring the metadata to determine whether there has been any actionable change in the metadata associated with the one or more software artifacts; and notifying the user of the software project via the transceiver using the contact information if it is determined that there has been an actionable change in the metadata associated with the one or more software artifacts.</p>
<p id="p-0006" num="0005">In a further embodiment, the information identifying the respective artifact includes: a group identifier uniquely identifying a publisher of the respective artifact, an artifact identifier uniquely identifying the respective artifact within the publisher, and a version number uniquely indicating a temporal version of the respective artifact.</p>
<p id="p-0007" num="0006">In another embodiment, the information indicative of a level of use or user rating of the respective artifact includes at least one of: user-provided ranking information specific to the respective artifact obtained from a community of users to which the user belongs, or an indication of a number of users with the community who are also using the respective artifact, and the community of users to which the user belongs is determined by a profile of the user or the user project to which the user belongs as indicated by the profile of the user.</p>
<p id="p-0008" num="0007">In yet another embodiment, the processor is further configured to facilitate: interacting with a user to collect human-provided metadata including the information indicative of a level of use or user rating of the respective artifact community.</p>
<p id="p-0009" num="0008">In a still further embodiment, the artifact is in stored in the software repository according to the Open Source Definition, the software repository being an open source repository.</p>
<p id="p-0010" num="0009">In another embodiment the processor further includes a calendar database configured to determine when to periodically monitor the metadata to determine whether there has been any actionable change in the metadata associated with the one or more software artifacts.</p>
<p id="p-0011" num="0010">One or more further embodiments provide a computer-implemented method for monitoring a software project that includes one or more software artifacts for a user. The method includes collecting, from the software repository by communication over the transceiver, project metadata associated with a software project that use one or more software artifacts, the information for the software project including: a project identifier for the project, artifact identifiers for any of the one or more software artifacts used by the respective project, information about the temporal version for any of the one or more software artifacts used by the respective project, and contact information for a user of the software project; collecting, from a software repository by communication over a transceiver, artifact metadata associated with each of the one or more software artifacts, the artifact metadata including: information identifying the respective artifact, information regarding a level of use or user rating of the respective artifact, information regarding a security risk of the respective artifact, or information regarding a license of the respective artifact; periodically monitoring the artifact metadata to determine whether there has been any actionable change in the artifact metadata associated with the one or more software artifacts; and notifying the user of the software project via the transceiver using the contact information if it is determined that there has been an actionable change in the artifact metadata associated with the one or more software artifacts.</p>
<p id="p-0012" num="0011">One or more still further embodiments provide a non-transitory computer-readable medium including instructions for execution by a computer, the instructions including a computer-implemented method for providing a method for monitoring a software project. The instructions are for implementing: collecting, from the software repository by communication over the transceiver, project metadata associated with a software project that use one or more software artifacts, the information for the software project including: a project identifier for the project, artifact identifiers for any of the one or more software artifacts used by the respective project, information about the temporal version for any of the one or more software artifacts used by the respective project, and contact information for a user of the software project; collecting, from a software repository by communication over a transceiver, artifact metadata associated with each of the one or more software artifacts, the artifact metadata including: information identifying the respective artifact, information regarding a level of use or user rating of the respective artifact, information regarding a security risk of the respective artifact, or information regarding a license of the respective artifact; periodically monitoring the artifact metadata to determine whether there has been any actionable change in the artifact metadata associated with the one or more software artifacts; and notifying the user of the software project via the transceiver using the contact information if it is determined that there has been an actionable change in the artifact metadata associated with the one or more software artifacts.</p>
<p id="p-0013" num="0012">Moreover, the purpose of the foregoing summary is to enable the U.S. Patent and Trademark Office and the public generally, and especially the scientists, engineers and practitioners in the art who are not familiar with patent or legal terms or phraseology, to determine quickly from a cursory inspection the nature and essence of the technical disclosure of the application. The summary is neither intended to define the invention of the application, which is measured by the claims, nor is it intended to be limiting as to the scope of the invention in any way.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0014" num="0013">The accompanying figures, where like reference numerals refer to identical or functionally similar elements and which together with the detailed description below are incorporated in and form part of the specification, serve to further illustrate various exemplary embodiments and to explain various principles and advantages in accordance with the embodiments.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 1</figref> is a data flow diagram illustrating monitoring a software artifact for whether warnings need to be sent about matters of concern;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 2</figref> is a diagram illustrating portions of a computer and a software artifact;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram illustrating a project object model;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 4</figref> is a single user interface to allow a user to review potentially changeable parameters of concern related to a given artifact;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 5</figref> is a simple user interface to allow a user to update issues of concern with respect to a given artifact;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 6</figref> is a flow chart illustrating a procedure to monitor a project database for reportable issues; and</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 7</figref> is a flow chart illustrating a procedure to send a report to an owner of a software project regarding issues of concern relating to artifacts that project is using.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0022" num="0021">In overview, the present disclosure concerns software development, in which software code building blocks, sometimes referred to as binary or source code, have been published after a formal process of vetting and then being released for use as one of plural building blocks to be used in a complete piece of software. Such software development can utilize build management tools, for example that assist in controlling the software artifacts that are selected and/or are used in a project. More particularly, various inventive concepts and principles are embodied in systems, devices, and methods therein for providing information about the appropriateness of a software artifact for its intended use in a particular software development project.</p>
<p id="p-0023" num="0022">The instant disclosure is provided to further explain in an enabling fashion the best modes of performing one or more embodiments. The disclosure is further offered to enhance an understanding and appreciation for the inventive principles and advantages thereof, rather than to limit in any manner the invention. The invention is defined solely by the appended claims including any amendments made during the pendency of this application and all equivalents of those claims as issued.</p>
<p id="p-0024" num="0023">It is further understood that the use of relational terms such as first and second, and the like, if any, are used solely to distinguish one from another entity, item, or action without necessarily requiring or implying any actual such relationship or order between such entities, items or actions. It is noted that some embodiments may include a plurality of processes or steps, which can be performed in any order, unless expressly and necessarily limited to a particular order; i.e., processes or steps that are not so limited may be performed in any order.</p>
<p id="p-0025" num="0024">Much of the inventive functionality and many of the inventive principles when implemented, are best supported with or in software or integrated circuits (ICs), such as a digital signal processor and software therefore, and/or application specific ICs. It is expected that one of ordinary skill, notwithstanding possibly significant effort and many design choices motivated by, for example, available time, current technology, and economic considerations, when guided by the concepts and principles disclosed herein will be readily capable of generating such software instructions or ICs with minimal experimentation. Therefore, in the interest of brevity and minimization of any risk of obscuring principles and concepts, further discussion of such software and ICs, if any, will be limited to the essentials with respect to the principles and Concepts used by the exemplary embodiments.</p>
<heading id="h-0006" level="1">DEFINITIONS</heading>
<p id="p-0026" num="0025">The claims use the following terms which are defined to have the following meanings for the purpose of the claims herein.</p>
<p id="p-0027" num="0026">The term &#x201c;artifact&#x201d; or &#x201c;software artifact&#x201d; or &#x201c;software build artifact&#x201d; used herein is defined to be a specific version of an existing reusable software code building block, which is binary or source code, that has been published, for example as referred to in the open source model, to a publicly available repository, such that it was vetted, approved, indexed so it can be located, and formally released to the public, but is not a complete stand-alone finished product. The term &#x201c;artifact&#x201d;, &#x201c;software artifact&#x201d; or &#x201c;software build artifact&#x201d; is not used herein in the broad sense. A concrete example of an artifact is something like, e.g., Hibernate <b>3</b>, which is an object-relational mapper which allows the JAVA developer to interact with relational database as if using native object oriented code. Its Group ID is org.hibernate, its artifact ID is artifact-core, its version is 3.0. Less formally, the artifact can be understood to be a bit of code which a developer does not wish to write himself/herself and so the developer uses an artifact which is published in a repository. In the MAVEN world, for example, there is a known pre-defined process for publishing an artifact to the MAVEN central web-site or other publicly available repository.</p>
<p id="p-0028" num="0027">The term &#x201c;computer system&#x201d; or &#x201c;computer&#x201d; used herein denotes a device sometimes referred to as a computer, laptop, personal computer, personal digital assistant, notebook computer, personal assignment pad, server, client, mainframe computer, variations and equivalents thereof.</p>
<p id="p-0029" num="0028">The term &#x201c;metadata&#x201d; is defined to be data that describes the content and context of a file with which it is associated. Metadata that is associated with a software artifact can indicate a project to which the artifact belongs, a security of the artifact or a license that is associated with the artifact, among other things.</p>
<p id="p-0030" num="0029">&#x201c;Open source&#x201d; software is defined herein to be source code that allows distribution as source code as well as compiled form, with a well-publicized and indexed means of obtaining the source, optionally with a license that allows modifications and derived works.</p>
<p id="p-0031" num="0030">The term &#x201c;Open Source Definition&#x201d; is used herein to mean the Open Source Definition available from the Open Source Initiative, variations and evolutions thereof.</p>
<p id="p-0032" num="0031">The term &#x201c;project&#x201d; is used herein to indicate a pre-defined collection of related software artifacts which a group of users maintains; a project can be uniquely identified by a group ID, optionally with artifact ID, optionally with version number. A project has a unique project name, a URL specific to the project, and a sponsoring organization; a project tracks its activity including logging when an artifact in the project is used or updated and the unique identity of the user that used or updated the artifact. Examples of projects include the Mozilla Foundation (sponsoring organization) which maintains the Firefox (project name) web browser, the Eclipse Foundation which maintains the M2Eclipse software, the Apache Software Foundation which maintains Maven, as well as private companies such as Sonatype that maintain their projects such as Sonatype Professional. A project can be a parent or child of another project, in which case the child can inherit group ID, version number, developers and contributors, plugin lists, report lists, plugin executions, and plugin configuration from the parent.</p>
<p id="p-0033" num="0032">The term &#x201c;repository&#x201d; or &#x201c;software repository&#x201d; used herein are defined to mean an electronic storage system that stores software build artifacts and dependencies for later retrieval, to which artifacts are published in accordance with procedures which are well known to those in the field, so that artifacts made by one software developer are published to be available for further use by other software developers, to be incorporated as building blocks to build software products which can be executed; a repository can include a computer server by which the stored electronic copies of artifacts are made available for use by software developers to be incorporated as building blocks to build software products which can be executed; the repository has a unique identifier that indicates the software developer (an individual or a group) that contributed the artifact. A repository can be remote or local.</p>
<p id="p-0034" num="0033">The term &#x201c;software build&#x201d; used herein specifically is defined to mean a process as pre-defined in an executable build program of converting a plurality of artifacts obtained from a repository and combining the results into an executable stand-alone computer program or a software artifact for use in a further software build, including at least compiling artifacts and linking compiled artifacts and possibly binary artifacts from the repository, in a pre-determined order as defined in the build program.</p>
<p id="p-0035" num="0034">The term &#x201c;user&#x201d; is defined herein specifically to be a software developer, a line coder, a technical architect, a development lead, or a development manager who is running a team of one or more developers, any of which are working on a software deliverable; or a C-level individual (CIO, CSO, and the like); or an individual that sets or enforces governing standards for software deliverables such as for vulnerability or licensing or artifacts. The term &#x201c;user&#x201d; is not used herein in the broad, common sense. The user can be management level because management can have final veto power over the software components in the software deliverable resulting from a project. Typically, but not always, an individual developer will not have the final say over which artifacts are approved.</p>
<heading id="h-0007" level="1">END OF DEFINITIONS</heading>
<p id="p-0036" num="0035">The inventors faced the problem of making sense of the giant jumble that is open source software, and finding a best artifact for their purposes among the giant jumble of available artifacts, and continuing to monitor the status of these artifacts over time. However, the system described herein is applicable to any field of software development where the information is available from which a source or categorization of the artifact can be derived.</p>
<p id="p-0037" num="0036">Concerns of software developers in selecting artifacts can include the following questions, for example. Functionality&#x2014;does an available artifact do more than the artifact I have now? Does the artifact do exactly what I need it to do? Security&#x2014;will the artifact perform without being hacked? Applicability&#x2014;will the artifact perform for my intended audience? Is this an artifact that is in use by my peers, i.e., other people in my industry (which suggests a higher degree of trust and applicability for the intended goal).</p>
<p id="p-0038" num="0037">Furthermore, the answers to these questions may change over time. For example, an artifact that may have been considered the most appropriate artifact for addressing a particular function at the time of selection may be proven to be less effective than originally thought, or simply overshadowed by a newer artifact by the time a piece of software is completed. Similarly, an artifact might have no known security issues when it is first used, but has one or more security flaws identified over the course of time. Likewise, opinions of the artifact, and its use by peers, may decline over time indicating a lessened acceptance.</p>
<p id="p-0039" num="0038">A concrete example is open source artifacts that are primarily but not necessarily written in Java. There are hundreds of thousands of artifacts from which a developer can choose, but conventionally there is no set of guideposts to drive a user down a path of proper discovery, beyond traditional searching such as Google searches. Current techniques provide no scoring of artifacts, no ranking, and no set of key terms which are descriptive of one set of artifacts over another. Furthermore, once an artifact is chosen, there is no way of tracking that artifact to determine whether the qualities of the artifact used for the original selection have changed over time. In other words, there is no way of determining whether an artifact that was appropriate at the time it was selected remains appropriate when a piece of software goes to market, or after it has been in place in the market for a time.</p>
<p id="p-0040" num="0039">Conventionally, the process of building an executable computer program from software artifacts can be managed by a build tool, which is a computer program that coordinates and controls other programs to compile and link the various files which together comprise the executable computer program, in the correct order. A build tool can include preprocessing, compilation, linking, packaging, testing, and ultimate distribution of the executable computer program. A project management tool can provide a superset of features found in a build tool, and can facilitate communication among members of a working team. Examples of build tools and project management tools are Maven available at Apache Software Foundation (&#x201c;Apache&#x201d;), Apache Ant available from Apache, Builder available from Apache, Gradle available from Gradle Inc., Apache Ivy, and the like, variations and evolutions thereof. It is assumed that one of skill in this field is generally familiar with &#x201c;Maven: The Complete Reference&#x201d; (2010) published by Sonatype, Inc. Mountain View, Calif. which further describes some basic concepts.</p>
<p id="p-0041" num="0040">As further discussed herein below, various inventive principles and combinations thereof are advantageously employed to help developers that are writing their own software find information about appropriate artifacts for that particular developer.</p>
<p id="p-0042" num="0041">Further in accordance with exemplary embodiments, there is provided a method and system for scoring a software artifact based on quality, industry, community standards compliance, and/or user-defined criteria, and a method and system for monitoring the resulting scores over time. There is mechanism for machine-driven ingestion of metadata or information used to derive scores which is not human provided; a User Interface for collecting information which is human provided; and a mechanism for machine-driven monitoring of the derived scores over time. For example, metadata that is associated with the artifact about the activity of a project to which the artifact belongs can be collected, along with security associated with the artifact, or licensing associated with the artifact. The weighting of the artifact can be determined based on the collected metadata. Then, the weighted artifact (which has been weighted without regard to intended use by the user) can be compared to appropriateness with an intended use of the artifact by the user, so as to provide the score of the artifact specific to the user. A user in a different project with a different intended use can have a different score for the same artifact. The system can continue to collect metadata even after the artifact has been selected, and can periodically compare the metadata to the appropriateness with the intended use of the artifact by the user using some or all of the criteria used for the original selection. If the resulting score changes over time, the user can be informed. In the alternative, only selected critical criteria might be monitored, with a warning being sent only if these critical criteria indicate that the score would drop. In summary, a system and method to score a software artifact can be based on: quality of the artifact, industry in which it is used, and/or compliance with community or user-defined criteria for example. And the system may use some or all of these criteria to monitor the continuing effectiveness of the artifact for its intended use.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 1</figref> is a data flow diagram illustrating monitoring a software artifact for whether warnings need to be sent about matters of concern. As shown in <figref idref="DRAWINGS">FIG. 1</figref> data flows into a process to determine <b>160</b> whether a warning is required for an existing artifact; and data flows into a process to determine <b>170</b> the contact information regarding an artifact about which a warning should be sent. Data also flows from the identification of warnings to generate <b>170</b> the actual warning(s) and send them to a user <b>180</b>.</p>
<p id="p-0044" num="0043">Also illustrated in <figref idref="DRAWINGS">FIG. 1</figref> are a repository <b>121</b> with a project <b>123</b>, a community activity score database <b>141</b>, a database of identified license issues <b>143</b>, a version information database <b>145</b>, a database of identified security risks <b>147</b>, a level of software development database <b>149</b>, and an industry use information database <b>151</b>.</p>
<p id="p-0045" num="0044">The community activity score database <b>141</b> includes information regarding community activity scores for existing artifacts. A community activity score is a score determined by a desirable method that indicates the expected effectiveness of an artifact for its intended use based on a variety of information about the project and from the community of users.</p>
<p id="p-0046" num="0045">The database of identified license issues <b>143</b> includes information regarding identified license issues for existing artifacts. These can include artifacts that require a license, artifacts for which infringement is alleged and for which a license may be required in the future, or any other situation relevant to licenses.</p>
<p id="p-0047" num="0046">The version information database <b>145</b> includes information about current, and possibly past, versions of various artifacts. This could be as simple as a listing of the current version numbers of the artifacts in question, or may include additional information regarding past artifact versions, such as a listing of past versions, dates that versions changed, etc.</p>
<p id="p-0048" num="0047">The database of identified security risks <b>147</b> includes a list of any known security risks associated with each artifact. These could include a listing of known viruses or other malware associated with the artifacts, as well as any other known flaw that may relate to the security of the artifact.</p>
<p id="p-0049" num="0048">The level of software development database <b>149</b> includes an indication of the level of development of each artifact. This can provide an indicator of how far along in a full process of development each artifact has reached at any given time.</p>
<p id="p-0050" num="0049">The industry use information database <b>151</b> provides an indication of how much each artifact is actually in use in the industry. This may include an indication of the number of projects that use a given artifact, and may include further indications of which specific portions of the industry are using each artifact.</p>
<p id="p-0051" num="0050">The project <b>123</b> includes one or more artifacts <b>125</b>, a group identifier (ID) <b>127</b>, an artifact ID <b>129</b>, a version number <b>131</b>, a list of the contributors <b>133</b> of the artifacts, the associated license(s) <b>135</b> to which the artifacts in the project are subject, and project logs <b>137</b>.</p>
<p id="p-0052" num="0051">The artifacts <b>125</b> represent the actual artifacts or artifacts that are being used by the project <b>123</b>. The group ID <b>127</b>, artifact ID <b>129</b>, and version number <b>131</b> indicate identifiers for each artifact in the project <b>123</b> that respectively represent a group ID for each artifact, noting which of a plurality of groups the artifact is in, a unique artifact ID for each artifact, and a version number for each artifact. The list of the contributors <b>133</b> of the artifacts indicates which developers have contributed to each artifact in the project; the associated license(s) <b>135</b> list any licenses that the artifacts in the project are subject to; and the project logs <b>137</b> can be, for example, source code controls (e.g., log in, check-in, check-out, update, etc.) and/or project issue tracking logs, as is known in the industry.</p>
<p id="p-0053" num="0052">The premise of this disclosed embodiment is that a software developer wants to be able to use software modules/components (artifacts) that someone else has made publicly available, such as in one or more repositories <b>121</b> of one or more projects <b>123</b>. If the artifacts are open source, they should be free of charge. The developer will determine which of the artifacts of a particular type they want to use based on information about the quality of that artifact as well as other information such as who else might be using that artifact in their same industry or similar types of industry, a level of community compliance for the artifact, a rating of the quality of the artifact, any known security flaws are associated with the artifact, a version of the artifact, and what license(s) are associated with the artifact.</p>
<p id="p-0054" num="0053">As an example of &#x201c;similar type of industry,&#x201d; consider a user who is a software developer in banking and wants to know if someone else in banking or finance uses the same module. As another example, a developer of a Fortune 1000 company wants to know whether other Fortune 1000 companies use the same module. As another example of a similar type of industry, consider that the developer in a regulated industry such as pharmaceuticals will be interested whether other developers in an industry under the same type of regulations are using the artifact. An artifact previously used by software developers of a similar industry or type of company will give the user more confidence than if the same artifact is used by an unknown start-up company or a different type of company or in a different industry.</p>
<p id="p-0055" num="0054">Quality can be measured in a number of ways. One exemplary method is based on other users' feedback and/or reported bugs. Compliance with the community can reflect whether the artifact is widely used in a given same geography (e.g., Europe or Germany). Security flaws can represent known or potential dangers that the security of the artifact will be compromised. Version information can indicate the most up-to-date version of a given artifact, providing a warning of a need to upgrade to a newer version. A list of licenses associated with the artifact can identify whether it is necessary to purchase a license to use the software artifact, and if so, the parameters of the license. It could also indicate whether a patent or copyright holder is asserting rights against the artifact, whether or not that issue has been resolved</p>
<p id="p-0056" num="0055">In addition, a user may want to have some other set of metrics they can use to determine the score of an artifact so the user can decide whether or not they want to use that artifact. For example, a user might only desire to use artifacts that get a certain quality score level from user reviews, e.g., 3 or 4 star or better. Other metrics are also possible, as desired by the users of the artifacts.</p>
<p id="p-0057" num="0056">Furthermore, since software development, implementation, and use may take place over a long period of time, the software developer will also want to have a mechanism in place to account for any changes in these criteria that take place over time for any software artifact that has been chosen for use. In particular, it will be helpful if the software developer can become aware of any criteria that cause the artifact to become less desirable for use. This will allow the developer to address any new issues raised before they become a problem. If this occurs before release, then the artifact in question could be removed prior to sale. If it occurs after release, then a correction can be made using a patch, a later version could be altered to avoid use of the artifact, etc.</p>
<p id="p-0058" num="0057">For example, if the change in criteria involves a new potential security flaw, the developer can address the flaw before it becomes widely exploited. If the change in criteria is a reduced acceptance in the community, the developer can begin selection of a more appropriate artifact at an early time. If the change in criteria is a new license required for the artifact, then the developer can either obtain the license or begin a work-around to avoid the artifact prior to a lawsuit being filed. In general, advanced warning of a change in criteria will allow the developer time to address any problems before any matters reach a crisis point.</p>
<p id="p-0059" num="0058">As discussed below, such a method and system can include one or both of two parts: (1) updating artifact information, such as who is using the artifact, known security issues, known licensing issues, version information, quality, etc., and (2) monitoring information of an existing artifact to determine whether a warning is needed.</p>
<p id="p-0060" num="0059">In overview, metadata that the present system and method uses, of which a simplified representation is provided for example in <figref idref="DRAWINGS">FIG. 1</figref>, conveniently can be divided into three categories: (1) derived data, (2) community/contributed data, and (3) third party data. These are further discussed below.</p>
<p id="p-0061" num="0060">Derived data is data which is collected about activity of the artifacts. Derived data can be, for example, conventional logs of which artifacts are downloaded from the project to users. These logs <b>137</b> in the projects <b>123</b> can be analyzed to determine, for example, how frequently the artifact is downloaded, to what geographic regions the artifact is downloaded (using a known technique), to what company is the artifact downloaded (by performing a known reverse DNS lookups to figure out the actual companies who are doing the downloading and from that determine their industry and size from an automatically or manually produced list or organization information). As a concrete example, project activity may be directly derived or inferred from the source code control mechanism (SCM) associated with the project as well as the issue tracking systems that may be associated with the project. Also, projects conventionally collect information on how frequently an artifact is updated (reflected in the project logs <b>137</b>), who the committers are who contributed the artifact (listed in the contributors <b>133</b>), and what else the committers have contributed (obtained by reviewing contributors <b>133</b> lists in other projects). As is known, typically, a committer has digitally signed the contributed artifact so that the contributors <b>133</b> information is highly reliable.</p>
<p id="p-0062" num="0061">Community/contributed data can include, for example, reviews, scores, ranking, categorization, tagging. All of these are information that can be provided by users, for example, as artifact evaluations by humans about that artifact. This can be parallel to a review process provided in Amazon.com, Netflix and other web sites, and can be expanded to, e.g., &#x201c;users who use artifact X tend to use artifact Y.&#x201d;</p>
<p id="p-0063" num="0062">Third party data can be information pulled in from other sources and can be approximately matched to artifacts or information in the project about the artifacts. For example, data on artifact licenses can be obtained from a company that provides that type of information based on the licenses <b>135</b> associated with the artifacts, data on security of the artifact can be obtained from NIST logs or vulnerability information, and quality information can be obtained from the project logs themselves. Here, the third party data is represented by the publicized evaluations, e.g., CVE (common vulnerabilities and exposures information conventionally available from Mitre Corporation).</p>
<p id="p-0064" num="0063">Typically there is not a one-to-one correspondence between the third party data and a particular artifact. Since the convention of project group/artifact/version is used for the convenience of programmers and is generally not known to persons that ultimately use the final software product, the third party data does not refer to the project group/artifact/version. Therefore, the identity of the artifact(s) to which the third party data actually is relevant must be resolved (manually or by developing and referring to a list) against the identity of the software indicated in the third party data. For example, if the artifact comes from project FOO, the artifact name and number must be reconciled against the logs for that artifact name and number at project FOO.</p>
<p id="p-0065" num="0064">For example, the process to determine a blind weighting of a software artifact can obtain derived data about the artifact <b>125</b> from the names of contributors <b>133</b> of the artifact, license of the project, and project logs <b>137</b> which indicate how often and how recently the artifact is updated. The process can input community/contributed data, such as the artifact evaluations by humans indicating the subject evaluation of the humans. The process <b>101</b> can input third party data such as publicized evaluations, e.g., a CVE and can resolve the third party data software name and release (e.g., Microsoft 2007 1.0) to the project group/artifact/version. Optionally, the reputations of the contributor organization and author (such as determined by user reviews) can be further input into the process. This information can be collectively evaluated to provide a blind weighting, that is, a weighting that is &#x201c;blind&#x201d; because it is made without considering the user or the intended use. Various techniques are known for collecting rankings and evaluations, weighting the information, increasing/decreasing weightings and the like, and any desired technique can be used herein.</p>
<p id="p-0066" num="0065">However, over the course of time, the various derived data, community/contributed data, and third party data can change. For example, the frequency at which an artifact is downloaded may vary up or down; reviews and ranking may be revised as new data is gathered; new licensing issues may arise as new infringement assertions are made; additional security risks may be identified; and new releases of artifacts can become available. Each of these facts might be relevant to a user of the artifact. In particular, negative changes might influence a user to use a different artifact if the change would not be disruptive, to update the artifact to a newer version, or at the very least to take additional precautions (e.g., generate patches for new security risks, obtain a license if a new license issue arose, etc.).</p>
<p id="p-0067" num="0066">A user would therefore wish to know when significant parameters of the artifact changed over time. The current system achieves this result by maintaining a database of projects <b>123</b> and the artifacts <b>125</b> used in them, as well as databases of parameters that may change over time (e.g., the community activity score database <b>141</b>, the database of identified license issues <b>143</b>, the version information database <b>145</b>, the database of identified security risks <b>147</b>, the level of software development database <b>149</b>, and the industry use information database <b>151</b>.</p>
<p id="p-0068" num="0067">The disclosed system then periodically cross-references the artifacts <b>125</b> in use by the projects <b>123</b> in the repository <b>121</b> to determine whether any parameters have changed that warrant notification of the project's user. This can be done by comparing the date of creation of an artifact <b>125</b> used in the project <b>123</b> with a current date associated with the artifact <b>125</b>. Alternatively, individual dates can be associated with each element in the artifact <b>125</b> and these individual dates can be monitored to see if a newer artifact portion has been provided. The comparison process could also involve comparing a current version number with a version number stored with the artifact <b>125</b> to see if the current version of the artifact <b>125</b> is newer than the stored version of the artifact <b>125</b>.</p>
<p id="p-0069" num="0068">The data flows are illustrated herein by way of example to further understanding of the principles discussed here. Actual implementations can omit one or more portions of the data flows, and/or can include other data flows which are within the scope and spirit of the discussion herein.</p>
<p id="p-0070" num="0069">Referring now to <figref idref="DRAWINGS">FIG. 2</figref>, a diagram illustrating portions of a computer and a software artifact will be discussed and described. The computer <b>201</b> may include one or more controllers <b>203</b>, a processor <b>205</b>, a network interface <b>209</b> for communication with a network <b>207</b>, a memory <b>211</b>, a display <b>215</b> (optional), and/or a user input device such as a keyboard <b>217</b>. Alternatively, or in addition to the keyboard <b>217</b>, a user input device may comprise one or more of various known input devices, such as a keypad, a computer mouse, a touchpad, a touch screen, a trackball, and/or a keyboard. The display <b>215</b> may present information to the user by way of a conventional liquid crystal display (LCD) or other visual display, and/or by way of a conventional audible device (e.g., a speaker) for playing out audible messages.</p>
<p id="p-0071" num="0070">The processor <b>205</b> may comprise one or more microprocessors and/or one or more digital signal processors. The memory <b>211</b> may be coupled to the processor <b>205</b> and may comprise a read-only memory (ROM), a random-access memory (RAM), a programmable ROM (PROM), and/or an electrically erasable read-only memory (EEPROM). The memory <b>211</b> may include multiple memory locations for storing, among other things, an operating system, data and variables <b>241</b> for programs executed by the processor <b>205</b>; computer programs for causing the processor to operate in connection with various functions such as collecting <b>243</b> metadata for a software artifact, interacting <b>245</b> with user or users to collect human-provided metadata to update artifact metadata, identifying <b>247</b> an existing project, any artifacts it is using, and version numbers for the artifacts and entering into project database, comparing <b>249</b> the software artifact metadata to the identified artifacts in the existing project to identify any issues of concern with artifacts in the existing project, and sending <b>251</b> warnings to associated project owners regarding any identified issues of concern; an artifact database <b>253</b>; a project database <b>255</b>; and a database <b>257</b> for other information and/or instructions used by the processor <b>205</b>. The computer programs may be stored, for example, in ROM or PROM and may direct the processor <b>205</b> in controlling the operation of the computer <b>201</b>. Each of these functions is considered in more detail herein.</p>
<p id="p-0072" num="0071">The user may invoke functions accessible through the user input device such as the keyboard <b>217</b>. The user input device may comprise one or more of various known input devices, such as a keyboard (<b>217</b>, illustrated) and/or a pointing device, such as a mouse; the keyboard <b>215</b> may be supplemented or replaced with a scanner, card reader, or other data input device; and the pointing device may be a mouse, touch pad control device, track ball device, or any other type of pointing device.</p>
<p id="p-0073" num="0072">The display <b>215</b> is representative of a display that may present information to the user by way of a conventional liquid crystal display (LCD) or other visual display, and/or by way of a conventional audible device for playing out audible messages.</p>
<p id="p-0074" num="0073">Responsive to manual signaling from the user input device represented by the keyboard <b>217</b>, in accordance with instructions stored in memory <b>211</b>, and/or automatically upon receipt of certain information via the network interface <b>209</b>, the processor <b>205</b> may direct the execution of the stored programs.</p>
<p id="p-0075" num="0074">The computer <b>201</b> can access a repository <b>221</b>, <b>261</b> on which is stored one or more projects, e.g., Project P <b>223</b> and Project Q <b>263</b>. In the project <b>223</b> are one or more artifacts and a Group ID, artifact ID, and version (collectively, &#x201c;GAV&#x201d;), here represented by one artifact <b>225</b> and its GAV <b>227</b>. The project <b>223</b> also lists its contributors <b>229</b> and one or more licenses <b>231</b> that cover the artifacts in the project, and a project log <b>233</b> that includes other identifying information regarding the artifact <b>225</b>. Although the projects <b>221</b>, <b>261</b> are illustrated as accessed over a network, they may be configured to be remotely or locally accessible from the computer <b>201</b>, over a wired or wireless connection. An example of the repository <b>221</b> is Maven, available at Apache.</p>
<p id="p-0076" num="0075">The processor <b>205</b> may be programmed for collecting <b>243</b> metadata for a software artifact about project activity, security risk, or license information. For example, one or more artifacts <b>225</b> can be accessed on the repository; the information about the activity of the project <b>223</b> that the artifact is in can be collected from the project log <b>233</b> within the artifact's project information at the repository <b>221</b>, <b>261</b>; and information about the contributors, licenses, and the like for the project <b>223</b> which the artifact <b>225</b> is in can be collected from the repository. Techniques are known for accessing this information from a repository <b>221</b>, <b>261</b>.</p>
<p id="p-0077" num="0076">The processor <b>205</b> may be programmed for interacting <b>245</b> with user or users to collect human-provided metadata to update artifact metadata. A user interface may be provided to elicit textual descriptions of the artifact, to elicit the human's ranking of the artifact (e.g., numeric ranking, or up to five stars, or similar), or the like, as discussed further herein. Known techniques can be used to interact with a user to collect community rankings, although these techniques have not been used in connection with software artifacts <b>225</b>. The human-provided metadata can be stored together with an indication of the author that provided the data. The updating can be achieved by altering the contents of the artifact database <b>253</b>.</p>
<p id="p-0078" num="0077">The processor <b>205</b> may be programmed for identifying <b>247</b> an existing project, any artifacts it is using, and version numbers for the artifacts and entering this information into the project database <b>255</b>. This information can be obtained via a user interface (e.g., display <b>215</b> and keyboard <b>217</b>) or by automatic perusal of the information stored in repositories <b>221</b>, <b>261</b>.</p>
<p id="p-0079" num="0078">The processor <b>205</b> may be programmed for comparing <b>249</b> the software artifact metadata to the identified artifacts in the existing project to identify any issues of concern with artifacts in the existing project. This comparing <b>249</b> can be achieved by examining one or more identified issues identified in the software artifact metadata as being worthy of a warning if it changes. These could include a change in the licensing issues associated with the artifact, a change in the community rating of the artifact, a change in the version number of the artifact, a change in the list of known security issues associated with the artifact, etc. In some implementations the identification of issues of concern can result any change in these parameters. For example any change in licensing issues or known security risks could warrant a warning. In other implementations the identification of issues of concern can result from a change of these parameters in only one direction. For example only the addition of licensing issues or known security risks might warrant a warning. In such an implementation, the elimination of licensing issues or known security flaws would not warrant a warning.</p>
<p id="p-0080" num="0079">The identified artifacts in the existing project can be obtained from a project profile in the project database <b>255</b>. The project database <b>255</b> can be populated directly by a user, and/or can be inferred by scanning repositories to find out which project(s) <b>223</b>, <b>263</b> use which artifact(s).</p>
<p id="p-0081" num="0080">The processor <b>205</b> may be programmed for sending <b>251</b> warnings to associated project owners regarding any identified issues of concern. This sending <b>251</b> of warnings can be achieved using user information stored in the project database <b>255</b>. For example, the project database might include an email address to be used to provide such warnings to the user. The processor <b>205</b> may be programmed to periodically send an email message to that email address identifying a given project or artifact along with any issues of concern that have arisen regarding that project or artifact.</p>
<p id="p-0082" num="0081">The memory <b>211</b> may be programmed with an artifact database <b>253</b>. Here, the artifact database <b>253</b> is illustrated as being local to the computer <b>201</b>. Alternatively, the artifact database <b>253</b> can be provided remotely and/or distributed to two or more computers. An artifact profile in the artifact database <b>253</b> can store the information relating to that artifact provided by interacting with the user, such as the name or unique identity (e.g., GAV) or name of the artifact, and a list of potentially changeable parameters that could warrant the sending of a warning if they change (e.g., licensing issues, known security risks, community rating, etc.). The artifact database could also include information about the timing of data associated with the artifact. For example, the artifact database could include a time stamp indicating when each issue relating to the artifact was entered into the database. This would allow for later identification of what issues are &#x2018;new&#x2019; with respect to a given date and time.</p>
<p id="p-0083" num="0082">The memory <b>211</b> may be programmed with a project database <b>255</b>. Here, the project database <b>255</b> is illustrated as being local to the computer <b>201</b>. Alternatively, the project database <b>255</b> can be provided remotely and/or distributed to two or more computers. A project profile in the project database <b>255</b> can store the information relating to that project provided by interacting with the user, such as the information and method necessary to contact a user in the future (e.g., email address), the unique identity (e.g., GAV) or name of the project, and the name or unique identity of the artifact(s) used by the project.</p>
<p id="p-0084" num="0083">As will be understood in this field, besides the functions discussed above, the memory <b>211</b> can include other miscellaneous information in a misc. database <b>247</b>, along with the usual temporary storage and other instructions for other programs not considered herein.</p>
<p id="p-0085" num="0084">The computer <b>201</b> can accommodate one or more disk drives or removable storage (not illustrated). Typically, these might be one or more of the following: a flash memory, a floppy disk drive, a hard disk drive, a CD ROM, a digital video disk, an optical disk, and/or a removable storage device such as a USB memory stick, variations and evolutions thereof. The number and type of drives and removable storage may vary, typically with different computer configurations. Disk drives may be options, and for space considerations, may be omitted from the computer system used in conjunction with the processes described herein. The computer may also include a CD ROM reader and CD recorder, which are interconnected by a bus along with other peripheral devices supported by the bus structure and protocol (not illustrated). The bus can serves as the main information highway interconnecting other components of the computer, and can be connected via an interface to the computer. A disk controller (not illustrated) can interface disk drives to the system bus. These may be internal or external. The processor <b>205</b>, memory <b>211</b>, a disk drive and/or removable storage medium are referred to as &#x201c;computer-readable storage media&#x201d; and provide non-transitory storage of computer programs and data.</p>
<p id="p-0086" num="0085">It should be understood that <figref idref="DRAWINGS">FIG. 2</figref> is described in connection with logical groupings of functions or resources. One or more of these logical groupings may be omitted from one or more embodiments, for example, the functionality of interacting with the user <b>245</b> to collect the human-provided metadata can be omitted and/or performed on a different processor. Likewise, functions may be grouped differently, combined, or augmented without parting from the scope. Similarly the present description may describe various databases or collections of data and information. One or more groupings of the data or information may be omitted, distributed, combined, or augmented, or provided locally and/or remotely without departing from the scope.</p>
<p id="p-0087" num="0086">Referring now to <figref idref="DRAWINGS">FIG. 3</figref>, a block diagram illustrating a project object model will be discussed and described. The project, e.g., project X <b>355</b> includes one or more artifacts (here represented by Artifacts A and B <b>351</b>, <b>353</b>), the project log <b>343</b> for Project X, and metadata for the project X (here represented by POM X <b>301</b>) that identifies project information such as contributors <b>333</b> and licenses <b>335</b>. The illustrated example is a known Maven software (currently available at Apache) project object model, which provides a highly structured handling of projects and artifacts; a discussion of relevant portions is provided while other less relevant and known information is omitted. Maven is a build management tool that comprises a project object model (&#x201c;POM&#x201d;), a set of standards, a project lifecycle, a dependency management system, and logic for executing plugin goals at defined phases in a lifecycle.</p>
<p id="p-0088" num="0087">A &#x201c;Project Object Model&#x201d; (POM), e.g., POM X <b>301</b> is a file provided for a project <b>355</b> that describes configures and customizes an application and is associated with one or more artifacts by being included in the same directory as one or more artifacts. In different build tools or project management tools, the POM <b>301</b> is a file included in a project, e.g., project X <b>355</b>, which includes one or more artifacts (represented by artifact A and artifact B <b>351</b>, <b>353</b>); the POM can be a file with a pre-determined name: a Maven pom.xml file, a GNU Makefile, or an Ant build.xml file. The POM file is typically targeted to Java applications, building JAR artifacts, C# sources, or the like. A software artifact can be associated with a POM in alternative ways, for example, by including a link or identification of the associated POM.</p>
<p id="p-0089" num="0088">The POM <b>301</b> can contain description data and configuration data: POM relationships <b>303</b>, build setting <b>305</b>, general project information <b>307</b>, and build environment <b>309</b>. These are discussed in more detail. General project information <b>307</b> includes general data <b>331</b> (project's name, the URL for a project, the sponsoring organization), a list of developers and contributors <b>333</b>, and the license (or identifiers of licenses) for the project <b>355</b>.</p>
<p id="p-0090" num="0089">The build settings <b>305</b> for the project <b>355</b> customize the behavior of a build <b>319</b> by specifying location of directories <b>321</b>, extensions <b>323</b>, resources <b>325</b> and plugins <b>327</b>. Also, the build settings <b>305</b> can specify reporting <b>329</b> to be used for the POM <b>301</b>.</p>
<p id="p-0091" num="0090">The build environment <b>309</b> comprises settings and profiles that can be activated when the software comprising the artifacts <b>351</b> is built for use in different environments. For example, during development the built software is deployed to a development server, whereas in production developers the built software is deployed to a production server. This example provides build environment information <b>337</b>, Maven environment information <b>339</b>, and profiles <b>341</b> to be used in different builds. Techniques for executing a build of software are known.</p>
<p id="p-0092" num="0091">The POM relationships <b>303</b> include POM coordinates <b>311</b> that specify a group ID, an artifact ID, and a version number for the project <b>355</b> and for the POM <b>301</b>. In the conventional Maven system, group ID, artifact ID and version (GAV) uniquely identify each artifact. The group ID is meant to identify the individual or organization that published the artifact. The artifact ID uniquely identifies an artifact for the Group, and in accordance with known techniques indicates what functionality the artifact is addressed to; artifact IDs need not be unique for different groups. The version is the temporal axis for how an artifact changes in accordance with known techniques, e.g., Version 1.0 is least mature, and Version 8.2.3 is more mature. Collectively, the group ID, artifact ID and version number are sometimes referred to herein as the &#x201c;GAV&#x201d;, &#x201c;Maven coordinate&#x201d; or &#x201c;GAV coordinate&#x201d;. The GAV uniquely identifies an artifact and allows its dependencies and relationship to other artifacts to be tracked. The use of the GAV disambiguates amongst artifacts across various domains of different groups.</p>
<p id="p-0093" num="0092">Since each artifact <b>351</b>, <b>353</b> is associated with the metadata, i.e., the information in the POM <b>301</b>, the user can be provided with very targeted information. For example, a user can be informed that a particular artifact has not been updated for a long time or has security vulnerabilities to be fixed.</p>
<p id="p-0094" num="0093">The POM as used in Maven is discussed in &#x201c;MAVEN: The Complete Reference Guide&#x201d;, Edition 8 (2010). In a well-written POM, there is a block for &#x201c;description,&#x201d; &#x201c;project&#x201d;, &#x201c;URL&#x201d;, &#x201c;License&#x201d;, &#x201c;Issue tracking&#x201d;, &#x201c;author list&#x201d; and the like. Known techniques can be used to construct a POM.</p>
<p id="p-0095" num="0094">A project, e.g., project X <b>355</b> can have a parent, e.g., project Y <b>357</b>. Project Y <b>357</b> is illustrated to include representative artifact C <b>359</b> and a POM Y <b>361</b>. Values which are not specified in the POM in a child project can inherit values from the POM of a parent project, e.g., when general project information <b>307</b> is not specified in the POM X <b>301</b> of Project X <b>355</b>, the project X <b>355</b> can inherit the general project information specified in the POM Y <b>361</b> of the parent project Y <b>357</b>.</p>
<p id="p-0096" num="0095">Also included in a project <b>355</b> is a project log <b>343</b>. The project log <b>343</b> can perform known functions, such as recording source code check-in, who checked it in, why it was checked-in; recording source code check-out, who checked it out, why it was checked-out; recording update of an artifact, who updated it, from what sponsor, and why it was updated; recording a download of an artifact from the project, who downloaded it, and to where; tracking issues such as bugs and related fixes specifying artifacts which were fixed); and similar. Any and all of the foregoing are considered to be an activity. Typically the log includes a time stamp for each activity. This information may be divided between more than one file, which together can be considered to be a project log. Techniques for maintaining a project log are known in the industry.</p>
<p id="p-0097" num="0096">A different project, e.g., project Y <b>357</b> includes other artifacts (here represented by Artifact C <b>359</b>), the project log(not illustrated) for Project Y, and metadata for the project Y (here represented by POM Y <b>361</b>) that identifies project information such as contributors and licenses.</p>
<p id="p-0098" num="0097">A simple example of a POM follows:</p>
<p id="p-0099" num="0098">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>&#x3c;project&#x3e;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&#x3c;!-- model version is 4.0.0 for Maven 2.x POMs --&#x3e;</entry>
</row>
<row>
<entry/>
<entry>&#x3c;modelVersion&#x3e;4.0.0&#x3c;/modelVersion&#x3e;</entry>
</row>
<row>
<entry/>
<entry>&#x3c;!-- project coordinates, i.e. a group of values which uniquely</entry>
</row>
<row>
<entry/>
<entry>identify this project --&#x3e;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>&#x2003;&#x3c;groupId&#x3e;com.mycompany.app&#x3c;/groupId&#x3e;</entry>
</row>
<row>
<entry>&#x2003;&#x3c;artifactId&#x3e;my-app&#x3c;/artifactId&#x3e;</entry>
</row>
<row>
<entry>&#x2003;&#x3c;version&#x3e;1.0&#x3c;/version&#x3e;</entry>
</row>
<row>
<entry>&#x2003;&#x3c;!-- library dependencies --&#x3e;</entry>
</row>
<row>
<entry>&#x2003;&#x3c;dependencies&#x3e;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&#x3c;dependency&#x3e;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&#x3c;!-- coordinates of the required library --&#x3e;</entry>
</row>
<row>
<entry/>
<entry>&#x3c;groupId&#x3e;junit&#x3c;/groupId&#x3e;</entry>
</row>
<row>
<entry/>
<entry>&#x3c;artifactId&#x3e;junit&#x3c;/artifactId&#x3e;</entry>
</row>
<row>
<entry/>
<entry>&#x3c;version&#x3e;3.8.1&#x3c;/version&#x3e;</entry>
</row>
<row>
<entry/>
<entry>&#x3c;!-- this dependency is only used for running and compiling</entry>
</row>
<row>
<entry/>
<entry>tests --&#x3e;</entry>
</row>
<row>
<entry/>
<entry>&#x3c;scope&#x3e;test&#x3c;/scope&#x3e;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&#x3c;/dependency&#x3e;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&#x3c;/dependencies&#x3e;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>&#x3c;/project&#x3e;</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0100" num="0099">It is not necessary to use a POM structure according to Maven; alternative implementations of a project which include artifacts and a project log will be appreciated.</p>
<p id="p-0101" num="0100">The system can include a user interface for obtaining subjective information that people have about software artifacts which they are willing to share (referred to sometimes as &#x201c;crowd-sourcing&#x201d; or &#x201c;artifact evaluations by humans&#x201d;). The User Interface figures <figref idref="DRAWINGS">FIG. 4</figref> and <figref idref="DRAWINGS">FIG. 5</figref> disclose representative information that humans manually can provide about code. As will be appreciated, ratings provided by humans tend to be subjective.</p>
<p id="p-0102" num="0101"><figref idref="DRAWINGS">FIG. 4</figref> is a single User Interface to allow a user to review potentially changeable parameters of concern related to an artifact, and <figref idref="DRAWINGS">FIG. 5</figref> is also a simple User Interface to allow a user to update issues of concern with respect to a given artifact. Each of these is discussed below in more detail.</p>
<p id="p-0103" num="0102">Referring now to <figref idref="DRAWINGS">FIG. 4</figref>, a diagram identifying potentially changeable parameters of concern related to an artifact will be discussed and described. In <figref idref="DRAWINGS">FIG. 4</figref>, the user interface <b>401</b> interacts with a user to obtain an artifact name <b>405</b> (such as text title of artifact name, GAV, and/or the like) and a project name <b>410</b> (which can be the identifier or title of the project). The user interface <b>401</b> displays a review rating <b>415</b> of the artifact (e.g., a number of stars it's been given by community rating), a version number <b>420</b> of the artifact, a project community activity score <b>425</b> of the artifact, and a number of downloads <b>430</b> of the artifact. The user interface <b>401</b> can display a description <b>435</b> of the artifact previously input by the contributor of the artifact, as may be obtained from the artifact content, artifact metadata, or the artifact's project. The user interface <b>401</b> can also display known security risks <b>440</b> associated with the artifact and known license issues <b>445</b> associated with the artifact, each of which will have been previously entered by a user. In this interface, the user may be able to remove known security risks <b>440</b> or known license issues <b>445</b> as these issues are resolved. For example, if the current version of the artifact has corrected a security flaw, that flaw might be eliminated from the list of known security risks <b>440</b> associated with the artifact. Likewise, if a potentially infringed patent expires or is declared invalid, an associated entry on the list of known licensing issues <b>445</b> might be eliminated. However, the ability to delete these entries may be limited to administrators to maintain better data security.</p>
<p id="p-0104" num="0103">Referring now to <figref idref="DRAWINGS">FIG. 5</figref>, a diagram illustrating a user interface to allow a user to update issues of concern with respect to a given artifact will be discussed and described. In this instance, the user becomes aware of issues that may relate to the desirability or safety of a given artifact and desires to share this knowledge. The user interface <b>501</b> interacts with a user to obtain the unique name <b>505</b> of an artifact and the version number <b>510</b> of that artifact about which the user's information is related. This version number may or may not be the current version number. For example, the most current version of an artifact may be version 4.3, while a user has identified a security flaw in version 3.0. Since some projects may still currently be using version 3.0, the identification of issues of concern for this older version is still relevant.</p>
<p id="p-0105" num="0104">The user interface <b>501</b> can provide a security risk field <b>515</b> for the user to enter any new security risks identified with respect to the artifact and version identified in the user interface <b>501</b>. The user interface <b>501</b> can provide a license issue field <b>520</b> for the user to enter any new security risks identified with respect to the artifact and version identified in the user interface <b>501</b>. When the user has completed their update, a &#x201c;submit changes&#x201d; button <b>525</b> can be selected, causing the user's changes to be stored in the artifact database as human-provided meta-data for the artifact.</p>
<p id="p-0106" num="0105">Referring now to <figref idref="DRAWINGS">FIG. 6</figref>, a flow chart illustrating a procedure <b>600</b> to monitor a project database for reportable issues will be discussed and described. The procedure can advantageously be implemented on, for example, a processor of a controller, described in connection with <figref idref="DRAWINGS">FIG. 2</figref> or other apparatus appropriately arranged.</p>
<p id="p-0107" num="0106">As shown in <figref idref="DRAWINGS">FIG. 6</figref>, the procedure <b>600</b> begins by having the processor wait <b>610</b> until a scheduled monitoring time. This monitoring time can be at any desired frequency, e.g., daily, weekly, monthly, quarterly, etc. Different projects may employ different monitoring times, with some being more or less frequent than others.</p>
<p id="p-0108" num="0107">When the monitoring time arrives, the procedure <b>600</b> will access <b>620</b> the software project database, which contains one or more projects that require monitoring. It will determine <b>630</b> whether the software project database includes any projects that have not currently been checked for changes in reportable issues. If there are no projects that have not currently been checked, then the procedure <b>600</b> simply returns to waiting <b>610</b> for the next scheduled monitoring time.</p>
<p id="p-0109" num="0108">If, however, there are projects that have not currently been checked, then the procedure <b>600</b> sets <b>640</b> the next remaining unchecked project as a current software project and determines <b>650</b> whether the current software project requires monitoring. In some embodiments this can be performed by looking in a local project database to see whether the project has been reported as containing any artifacts that require monitoring. In other embodiments, this can be performed by connecting to a remote repository to determine whether the project actually contains any artifacts that require monitoring at the monitoring time.</p>
<p id="p-0110" num="0109">If the current unchecked software project in the project database does not require monitoring, the procedure <b>600</b> then returns to the project database to determine <b>630</b> whether the software database contains any unchecked projects.</p>
<p id="p-0111" num="0110">If the current unchecked software project in the project database does require monitoring, then the procedure <b>600</b> continues to consult <b>660</b> an issue tracking procedure to monitor the current software project and report any issues to a user. Once the issue tracking procedure completes tracking the current software project, the procedure <b>600</b> then returns to the project database to determine <b>630</b> whether the software database contains any unchecked projects.</p>
<p id="p-0112" num="0111">Referring now to <figref idref="DRAWINGS">FIG. 7</figref>, a flow chart illustrating a procedure <b>700</b> to send a report to an owner of a software project regarding issues of concern relating to artifacts that project is using will be discussed and described. This corresponds to the issue tracking procedure discussed with respect to the procedure <b>600</b> of <figref idref="DRAWINGS">FIG. 6</figref>. The procedure <b>700</b> can advantageously be implemented on, for example, a processor of a controller, described in connection with <figref idref="DRAWINGS">FIG. 2</figref> or other apparatus appropriately arranged.</p>
<p id="p-0113" num="0112">As shown in <figref idref="DRAWINGS">FIG. 7</figref>, the procedure <b>700</b> begins by identifying <b>710</b> a software project. This can be done by using a project name and version number or other project identifier. Once the software project is identified, the procedure <b>700</b> determines <b>720</b> what artifacts are contained in the software project. In some embodiments this can be performed by looking in a local project database to see what artifacts the project has been reported as containing any. In other embodiments, this can be performed by connecting to a remote repository to determine what artifacts the project actually contains. The procedure <b>700</b> then sets <b>730</b> the first artifact in the software project as the first artifact.</p>
<p id="p-0114" num="0113">The procedure <b>700</b> then consults <b>740</b> an issue tracker to determine if the current software artifact has any issues of concern. In one embodiment this operation can be performed by checking each artifact in the project to determine whether any of the reportable parameters have changed. In another embodiment, the operation could involve checking each artifact in the project to determine whether any of the reportable parameters have changed for the worse compared to the current artifact.</p>
<p id="p-0115" num="0114">If no issue of concern is identified with respect to the current artifact, then the procedure <b>700</b> advances to determine <b>770</b> whether there are any more artifacts in the current software project.</p>
<p id="p-0116" num="0115">If an issue of concern (e.g., a change in a reportable parameter) is identified, then the procedure <b>700</b> takes appropriate action <b>760</b> with respect to the current artifact. In one embodiment this includes preparing a report to the owner of the current project indicating the issue of concern. For example, this could be a report that indicates that a new version of the artifact has been released, that a new licensing issue has been raised, that a new security flaw has been identified, etc. Once appropriate action has been taken with respect to the current artifact, the procedure <b>700</b> advances to determine <b>770</b> whether there are any more artifacts in the current software project.</p>
<p id="p-0117" num="0116">If the procedure determines that there are more artifacts in the current software project, then it sets <b>780</b> the next artifact as the current artifact, and proceeds to consult <b>740</b> the issue tracker with respect to that artifact.</p>
<p id="p-0118" num="0117">If the procedure determines that there are no more artifacts in the current software project, then it proceeds to send <b>790</b> a report to the owner of the software project identifying all issues of concern. In some embodiments this can be a series of individual reports for each identified issue of concern. In other embodiments this report can be a concatenation of all identified issues of concern. In some embodiments when no issues of concern are identified the procedure <b>700</b> can omit this operation and take no action. In other embodiments when no issues of concern are identified the procedure <b>700</b> can send a report explicitly indicating that no issues of concern were identified.</p>
<p id="p-0119" num="0118">By employing these operations, a software user that makes use of the monitored artifacts can be given advanced warning of potentially troublesome issues related to the artifacts, or the existence of updated versions of the artifacts. Furthermore, this is likely done earlier than if the user had to perform the monitoring himself. This can be helpful since the issues of concern may be identified before they become critical, allowing the user the time to address the issues. For example, if one issue of concern is a newly identified security flaw, the software user may be able to deploy a patch before someone makes use of the flaw. In addition, if the project is not completed or not released, then it may even be possible to select a different artifact or a newer version of the artifact, which does not contain the identified flaw.</p>
<p id="p-0120" num="0119">The detailed descriptions which appear above may be presented in terms of program procedures executed on a computer or network of computers. These procedural descriptions and representations herein are the means used by those skilled in the art to most effectively convey the substance of their work to others skilled in the art.</p>
<p id="p-0121" num="0120">Further, an embodiment has been discussed in certain examples as if it is made available by a provider to a single customer with a single site. An embodiment may be used by numerous users, if preferred, and the users can be at one or more sites.</p>
<p id="p-0122" num="0121">The system used in connection herewith may rely on the integration of various components including, as appropriate and/or if desired, hardware and software servers, applications software, database engines, server area networks, firewall and SSL security, production back-up systems, and/or applications interface software.</p>
<p id="p-0123" num="0122">A procedure is generally conceived to be a self-consistent sequence of steps leading to a desired result. These steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored on non-transitory computer-readable media, transferred, combined, compared and otherwise manipulated. It proves convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like. It should be noted, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities.</p>
<p id="p-0124" num="0123">Further, the manipulations performed are often referred to in terms such as adding or comparing, which are commonly associated with mental operations performed by a human operator. While the present invention contemplates the use of an operator to access the invention, a human operator is not necessary, or desirable in most cases, to perform the actual functions described herein; the operations are machine operations.</p>
<p id="p-0125" num="0124">Various computers or computer systems may be programmed with programs written in accordance with the teachings herein, or it may prove more convenient to construct a more specialized apparatus to perform the required method steps. The required structure for a variety of these machines will appear from the description given herein.</p>
<p id="p-0126" num="0125">Furthermore, the communication networks of interest include those that transmit information in packets, for example, those known as packet switching networks that transmit data in the form of packets, where messages can be divided into packets before transmission, the packets are transmitted, and the packets are routed over network infrastructure devices to a destination where the packets are recompiled into the message. Such networks include, by way of example, the Internet, intranets, local area networks (LAN), wireless LANs (WLAN), wide area networks (WAN), and others. Protocols supporting communication networks that utilize packets include one or more of various networking protocols, such as TCP/IP (Transmission Control Protocol/Internet Protocol), Ethernet, X.25, Frame Relay, ATM (Asynchronous Transfer Mode), IEEE 802.11, UDP/UP (Universal Datagram Protocol/Universal Protocol), IPX/SPX (Inter-Packet Exchange/Sequential Packet Exchange), Net BIOS (Network Basic Input Output System), GPRS (general packet radio service), I-mode and other wireless application protocols, and/or other protocol structures, and variants and evolutions thereof. Such networks can provide wireless communications capability and/or utilize wireline connections such as cable and/or a connector, or similar.</p>
<p id="p-0127" num="0126">This disclosure is intended to explain how to fashion and use various embodiments in accordance with the invention rather than to limit the true, intended, and fair scope and spirit thereof. The invention is defined solely by the appended claims, as they may be amended during the pendency of this application for patent, and all equivalents thereof. The foregoing description is not intended to be exhaustive or to limit the invention to the precise form disclosed. Modifications or variations are possible in light of the above teachings. The embodiment(s) was chosen and described to provide the best illustration of the principles of the invention and its practical application, and to enable one of ordinary skill in the art to utilize the invention in various embodiments and with various modifications as are suited to the particular use contemplated. All such modifications and variations are within the scope of the invention as determined by the appended claims, as may be amended during the pendency of this application for patent, and all equivalents thereof, when interpreted in accordance with the breadth to which they are fairly, legally, and equitably entitled.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer-implemented method for monitoring a software project that includes one or more software artifacts for a user, comprising:
<claim-text>collecting, from the software repository by communication over the transceiver, project metadata associated with a software project that use one or more software artifacts, the project metadata including: a project identifier for the project, artifact identifiers for any of the one or more software artifacts used by the respective project, information about the temporal version for any of the one or more software artifacts used by the respective project, and contact information for a user of the software project;</claim-text>
<claim-text>collecting, from a software repository by communication over a transceiver, artifact metadata associated with each of the one or more software artifacts, the artifact metadata including: information identifying the respective artifact, information regarding a level of use or user rating of the respective artifact, information regarding a security risk of the respective artifact, or information regarding a license of the respective artifact;</claim-text>
<claim-text>periodically monitoring the artifact metadata to determine whether there has been any actionable change in the artifact metadata associated with the one or more software artifacts; and</claim-text>
<claim-text>notifying the user of the software project via the transceiver using the contact information if it is determined that there has been an actionable change in the artifact metadata associated with the one or more software artifacts,</claim-text>
<claim-text>wherein the information identifying the respective artifact includes:
<claim-text>a group identifier uniquely identifying a publisher of the respective artifact,</claim-text>
<claim-text>an artifact identifier uniquely identifying the respective artifact within the publisher, and</claim-text>
<claim-text>a version number uniquely indicating a temporal version of the respective artifact.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>,
<claim-text>wherein the information regarding a level of use or user rating of the respective artifact includes at least one of:
<claim-text>user-provided ranking information specific to the respective artifact obtained from a community of users to which the user belongs, or</claim-text>
<claim-text>an indication of a number of users within the community who are also using the respective artifact, and</claim-text>
</claim-text>
<claim-text>wherein the community of users to which the user belongs is determined by a profile of the user or the user project to which the user belongs as indicated by the profile of the user.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising
<claim-text>interacting with a user to collect human-provided artifact metadata including the information indicative of a level of use or user rating of the respective artifact community.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the artifact is stored in the software repository according to the Open Source Definition, the software repository being an open source repository.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising determining when to periodically monitor the artifact metadata to determine whether there has been any actionable change in the metadata associated with the one or more software artifacts.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A computer system, comprising:
<claim-text>a transceiver operable to transmit and receive communications over at least a portion of a network; and</claim-text>
<claim-text>a processor cooperatively operable with the transceiver, and configured to facilitate:
<claim-text>collecting and storing information related to a software project that uses one or more software artifacts, the information for the software project including: a project identifier for the project, artifact identifiers for any of the one or more artifacts used by the project, information about the temporal version for any of the one or more artifacts used by the project, and contact information for a user of the software project;</claim-text>
<claim-text>collecting, from a software repository by communication over the transceiver, metadata associated with the one or more software artifacts, the metadata for each of the one or more software artifacts including: information identifying the respective artifact, information about security risks associated with the respective artifact, information about a license associated with the respective artifact, or information indicative of a level of use or user rating of the respective artifact;</claim-text>
<claim-text>periodically monitoring the metadata to determine whether there has been any actionable change in the metadata associated with the one or more software artifacts; and</claim-text>
<claim-text>notifying the user of the software project via the transceiver using the contact information if it is determined that there has been an actionable change in the metadata associated with the one or more software artifacts,</claim-text>
</claim-text>
<claim-text>wherein the information identifying the respective artifact includes:
<claim-text>a group identifier uniquely identifying a publisher of the respective artifact,</claim-text>
<claim-text>an artifact identifier uniquely identifying the respective artifact within the publisher, and</claim-text>
<claim-text>a version number uniquely indicating a temporal version of the respective artifact.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The computer system of <claim-ref idref="CLM-00006">claim 6</claim-ref>,
<claim-text>wherein the information indicative of a level of use or user rating of the respective artifact includes at least one of:
<claim-text>user-provided ranking information specific to the respective artifact obtained from a community of users to which the user belongs, or</claim-text>
<claim-text>an indication of a number of users within the community who are also using the respective artifact, and</claim-text>
</claim-text>
<claim-text>wherein the community of users to which the user belongs is determined by a profile of the user or the user project to which the user belongs as indicated by the profile of the user.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The computer system of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the processor is further configured to facilitate:
<claim-text>interacting with a user to collect human-provided metadata including the information indicative of a level of use or user rating of the respective artifact community.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The computer system of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the artifact is in stored in the software repository according to the Open Source Definition, the software repository being an open source repository.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The computer system of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the processor further comprises a calendar database configured to determine when to periodically monitor the metadata to determine whether there has been any actionable change in the metadata associated with the one or more software artifacts.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A non-transitory computer-readable medium comprising instructions for execution by a computer, the instructions including a computer-implemented method for providing a method for monitoring a software project, the instructions for implementing:
<claim-text>collecting, from the software repository by communication over the transceiver, project metadata associated with a software project that use one or more software artifacts, the project metadata including: a project identifier for the project, artifact identifiers for any of the one or more software artifacts used by the respective project, information about the temporal version for any of the one or more software artifacts used by the respective project, and contact information for a user of the software project;</claim-text>
<claim-text>collecting, from a software repository by communication over a transceiver, artifact metadata associated with each of the one or more software artifacts, the artifact metadata including: information identifying the respective artifact, information regarding a level of use or user rating of the respective artifact, information regarding a security risk of the respective artifact, or information regarding a license of the respective artifact;</claim-text>
<claim-text>periodically monitoring the artifact metadata to determine whether there has been any actionable change in the artifact metadata associated with the one or more software artifacts; and</claim-text>
<claim-text>notifying the user of the software project via the transceiver using the contact information if it is determined that there has been an actionable change in the artifact metadata associated with the one or more software artifacts,</claim-text>
<claim-text>wherein the information identifying the respective artifact includes:
<claim-text>a group identifier uniquely identifying a publisher of the respective artifact,</claim-text>
<claim-text>an artifact identifier uniquely identifying the respective artifact within the publisher, and</claim-text>
<claim-text>a version number uniquely indicating a temporal version of the respective artifact.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The non-transitory computer-readable medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>,
<claim-text>wherein the information regarding a level of use or user rating of the respective artifact includes at least one of:
<claim-text>user-provided ranking information specific to the respective artifact obtained from a community of users to which the user belongs, or</claim-text>
<claim-text>an indication of a number of users within the community who are also using the respective artifact, and</claim-text>
</claim-text>
<claim-text>wherein the community of users to which the user belongs is determined by a profile of the user or the user project to which the user belongs as indicated by the profile of the user.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The non-transitory computer-readable medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the instructions are for further implementing:
<claim-text>interacting with a user to collect human-provided artifact metadata including the information indicative of a level of use or user rating of the respective artifact community.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The non-transitory computer-readable medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the artifact is stored in the software repository according to the Open Source Definition, the software repository being an open source repository.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The non-transitory computer-readable medium of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the instructions are for further implementing: determining when to periodically monitor the artifact metadata to determine whether there has been any actionable change in the metadata associated with the one or more software artifacts. </claim-text>
</claim>
</claims>
</us-patent-grant>
