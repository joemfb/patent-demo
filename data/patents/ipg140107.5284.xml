<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626385-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626385</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13421057</doc-number>
<date>20120315</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>114</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>7</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>701 36</main-classification>
<further-classification>701 337</further-classification>
</classification-national>
<invention-title id="d2e53">Systems and methods for analyzing machine performance</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5299452</doc-number>
<kind>A</kind>
<name>Caron et al.</name>
<date>19940400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification> 73129</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5744707</doc-number>
<kind>A</kind>
<name>Kull</name>
<date>19980400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6332354</doc-number>
<kind>B1</kind>
<name>Lalor et al.</name>
<date>20011200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6405117</doc-number>
<kind>B1</kind>
<name>Walenty et al.</name>
<date>20020600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>701 70</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2003/0137194</doc-number>
<kind>A1</kind>
<name>White et al.</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2005/0065677</doc-number>
<kind>A1</kind>
<name>Leblanc et al.</name>
<date>20050300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>JP</country>
<doc-number>2008222084</doc-number>
<date>20080900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>KR</country>
<doc-number>100336335</doc-number>
<date>20020500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>KR</country>
<doc-number>1020030091325</doc-number>
<date>20031200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>701 36</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>701 337</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>701 70</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>307 101</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification> 73121</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>340453</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>5</number-of-drawing-sheets>
<number-of-figures>5</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20130245883</doc-number>
<kind>A1</kind>
<date>20130919</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Humphrey</last-name>
<first-name>James Decker</first-name>
<address>
<city>Decatur</city>
<state>IL</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Humphrey</last-name>
<first-name>James Decker</first-name>
<address>
<city>Decatur</city>
<state>IL</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Finnegan, Henderson, Farabow, Garrett &#x26; Dunner LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Caterpillar Inc.</orgname>
<role>02</role>
<address>
<city>Peoria</city>
<state>IL</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Marc-Coleman</last-name>
<first-name>Marthe</first-name>
<department>3661</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A system for analyzing machine performance is disclosed. The system may have one or more processors and a memory. The memory may store instructions that, when executed, enable the one or more processors to identify an event for a machine that includes a desired output parameter value and send a command to a component of the machine. A command value associated with the command may be determined based on the desired output parameter value, one or more machine state parameter values, and a feedback control loop. The instructions may further enable the one or more processors to determine whether the machine requires maintenance by comparing the command value to one or more historical command values each determined based on a historical desired output parameter value and one or more historical machine state parameter values.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="208.28mm" wi="165.61mm" file="US08626385-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="208.20mm" wi="179.15mm" orientation="landscape" file="US08626385-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="228.43mm" wi="163.83mm" orientation="landscape" file="US08626385-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="249.26mm" wi="167.13mm" file="US08626385-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="257.47mm" wi="183.56mm" orientation="landscape" file="US08626385-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="209.30mm" wi="135.89mm" file="US08626385-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">TECHNICAL FIELD</heading>
<p id="p-0002" num="0001">The present disclosure relates generally to methods and systems for analyzing machine performance and more particularly, to methods and systems for determining machine maintenance schedules.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">Machines, such as loaders, dozers, tractors, compactors, and other types of machines may perform a variety of tasks, e.g., digging, loosening, carrying, drilling, compacting, etc., different materials. Certain machines may be automated to perform one or more of these tasks, e.g., without direct human intervention. Organizations may desire to have an ability to forecast when components of such machines (whether autonomous or not) should be scheduled for maintenance. Moreover, the organization may desire to be able to schedule such maintenance prior to machine or component failure.</p>
<p id="p-0004" num="0003">An exemplary system that may be used to determine maintenance schedules based on historical data is disclosed in U.S. Pat. No. 6,332,354 to Lalor et al. that issued on Dec. 25, 2001 (the '354 patent). The system in the '354 patent compares historical vehicle deceleration rates to current vehicle deceleration rates to assess current brake performance and determine brake maintenance schedules.</p>
<p id="p-0005" num="0004">Although the system of the '354 patent may be useful for assessing brake performance by comparing deceleration rates, the system may not fully account for different command values corresponding to commands applied to the system. That is, the system in the '354 patent may merely compare deceleration rates for a particular set of conditions without comparing variable input commands being applied, e.g., based on feedback control systems, etc. Further, the system of the '354 patent may compare the current deceleration rates of a single vehicle to its own historical deceleration rates without considering how the vehicle compares to similar vehicles in similar situations.</p>
<p id="p-0006" num="0005">The disclosed systems and methods for analyzing machine performance are directed to overcoming one or more of the problems set forth above and/or other problems of the prior art.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0007" num="0006">In one aspect, the present disclosure is directed to a computer-implemented method for analyzing machine performance. The method may include identifying an event for a machine that includes a desired output parameter value, and sending a command to a component of the machine. The command may have a command value determined based on the desired output parameter value, one or more machine state parameter values, and a feedback control loop. The method may also include determining that the machine requires maintenance by comparing the command value to one or more historical command values each determined based on a historical desired output parameter value and one or more historical machine state parameter values. The historical desired output value and the one or more historical machine state parameter values may each correspond to the desired output parameter value and the one or more machine state parameter values.</p>
<p id="p-0008" num="0007">In another aspect, the present disclosure is directed to a system for analyzing machine performance. The system may include one or more processors and a memory. The memory may store instructions that, when executed, enable the one or more processors to identify an event for a machine that includes a desired output parameter value and send a command to a component of the machine. The command may have a command value determined based on the desired output parameter value, one or more machine state parameter values, and a feedback control loop. The instructions may further enable the one or more processors to determine whether the machine requires maintenance by comparing the command value to one or more historical command values each determined based on a historical desired output parameter value and one or more historical machine state parameter values. The historical desired output value and the one or more historical machine state parameter values may each correspond to the desired output parameter value and the one or more machine state parameter values.</p>
<p id="p-0009" num="0008">In yet another aspect, the present disclosure is directed to another computer-implemented method for analyzing machine performance. The method may include identifying an event including a desired output parameter value for a machine included in a plurality of machines. The method may also include receiving a command value of a command sent to a component of the machine. The command value may have been determined based on the desired output parameter value, one or more machine state parameter values, and a feedback control loop. The method may further include determining that the machine requires maintenance based on the command value and one or more other command values generated by one or more other machines of the plurality of machines during corresponding events for the one or more other machines. The corresponding events may also include the desired output parameter value.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 1</figref> is a diagrammatic illustration of an exemplary disclosed performance analysis system that may be incorporated into a machine;</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 2</figref> is a diagrammatic illustration of another exemplary disclosed performance analysis system that may include a plurality of machines;</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 3</figref> is a flowchart depicting an exemplary disclosed method that may be performed by one or more components in the system of <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 4</figref> is an exemplary illustration of an exemplary disclosed maintenance projection technique that may be performed by one or more components in the systems of <figref idref="DRAWINGS">FIGS. 1 and 2</figref>; and</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart depicting an exemplary disclosed method that may be performed by one or more components in the system of <figref idref="DRAWINGS">FIG. 2</figref>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an exemplary performance analysis system <b>100</b> having a controller <b>110</b> connected via a network <b>190</b> to a global navigation satellite system (GNSS) device <b>120</b>, an inertial measurement unit (IMU) <b>130</b>, a speed sensor <b>140</b>, a brake sensor <b>150</b>, a fuel sensor <b>160</b>, a payload sensor <b>170</b> (collectively referred to as sensors <b>120</b>-<b>170</b>), and a database <b>180</b>. One or more of the components of system <b>100</b> may be included on a machine (not shown) such as an autonomous or non-autonomous loader, dozer, tractor, compactor, etc. For example, one or more of controller <b>110</b> and sensors <b>120</b>-<b>170</b> may be located on the machine. In certain embodiments, the machine may include multiple instances of each sensor. For example, the machine may include more than one GNSS device <b>120</b>, IMU <b>130</b>, etc. Moreover, while sensors <b>120</b>-<b>170</b> are shown in <figref idref="DRAWINGS">FIG. 1</figref>, system <b>100</b> may include any other type of sensor consistent with disclosed embodiments.</p>
<p id="p-0016" num="0015">As discussed in greater detail below, the components of system <b>100</b> may function together to analyze the performance of the machine and determine, e.g., based on a comparison of current machine performance to historical machine performance, whether and/or when the machine may require maintenance. For example, system <b>100</b> may analyze the performance of the machine during a particular event or set of events during which the machine performs some function, e.g., an acceleration event, a braking event, a turning event, etc. System <b>100</b> may then compare the performance of the machine during the event to the historical performance of the machine (or one or more other machines) during a corresponding event.</p>
<p id="p-0017" num="0016">In an exemplary embodiment where system <b>100</b> may be included in one or more autonomous machines, the machine may be programmed with an event schedule identifying the functions that the machine is to perform (e.g., identifying a sequence of events). Thus, system <b>100</b> may compare the performance of the machine during a particular event (e.g., during a particular scheduled braking event) to the performance of the machine (and/or one or more other machines) during historical events corresponding to the particular event (e.g., to times in the past when the machine and/or one or more other machines performed the same scheduled braking event during a previous execution of the event schedule). Other events, such as an emergency braking event, may not be scheduled, but system <b>100</b> may also compare similar non-scheduled events according to the embodiments discussed in greater detail below.</p>
<p id="p-0018" num="0017">The performance of the machine during a particular event may be measured by determining a command value of a command sent to one or more components of the machine in order to achieve a desired output parameter value associated with the event. For example, if the event is a braking event, the desired output parameter value for the event may be a particular deceleration value and/or stopping distance. System <b>100</b> may determine a command value required to achieve the deceleration value and/or stopping distance. For example, system <b>100</b> may determine a command value to be the brake line pressure required to achieve this desired output parameter value. Similarly, system <b>100</b> may determine a command value based on an electronic signal that corresponds to the brake line pressure (e.g., measured in terms of the current and/or voltage applied to a brake line pressure control input). In another example where the event is an acceleration event, system <b>100</b> may determine a fuel injection command value required to achieve a desired acceleration value. Other events may also be used to analyze machine performance, such as turning events or any other event that may correspond to any function performed by the machine. Also, for each event, one or more machine state parameters, such as the velocity, orientation, payload, etc., of the machine may also be taken into account when assessing machine performance, as discussed in greater detail below.</p>
<p id="p-0019" num="0018">Sensors <b>120</b>-<b>170</b> of system <b>100</b> may be positioned at different locations on the machine and may be configured to measure different parameters of the machine. For example, GNSS device <b>120</b> may include one or more GNSS receivers (e.g., global positioning system (GPS) receivers) capable of determining values for one or more machine state parameters (i.e., machine state parameter values). A machine state parameter value may include some information regarding the state of the machine. For example, GNSS device <b>120</b> may determine values for machine state parameters such as machine location, velocity, acceleration, orientation (e.g., elevation, bank, and/or heading), etc. GNSS device <b>120</b> may send one or more of these machine state parameter values to controller <b>110</b>. In certain embodiments, GNSS device <b>120</b> may determine and output values for several different machine state parameters. In other embodiments, GNSS device <b>120</b> may output values for a particular machine state parameter, such as location values, and controller <b>110</b> may calculate other machine state parameter values based on the location values. For example, controller <b>110</b> may calculate the velocity and acceleration values of the machine in one or more directions with respect to the machine (e.g., forward acceleration, lateral acceleration, etc.) using a series of machine location values measured by GNSS device <b>120</b> over time.</p>
<p id="p-0020" num="0019">Likewise, GNSS device <b>120</b> may include two or more GNSS receivers separated by known distances, and controller <b>110</b> may determine the orientation (e.g., elevation, bank, and/or heading) of the machine by comparing the outputs from the GNSS receivers. Elevation may be defined as a rotational angle of the machine measured about an axis extending along a lateral direction the machine, i.e., from side to side of the machine. For example, elevation may be the same as the grade or pitch of the machine. Bank may be defined as a rotational angle of the machine measured about an axis extending along a direction of forward motion of the machine, i.e., from front to back of the machine. For example, bank may be the same as the roll of the machine. Heading may be defined as the angle of the machine measured about an axis extending along a direction from the top of the machine to the bottom of the machine. For example, heading may be the same as the yaw of the machine.</p>
<p id="p-0021" num="0020">IMU <b>130</b> may include one or more accelerometers, gyroscopes, and/or pendulous-based inclinometers and may also be configured to determine one or more machine state parameter values. For example, IMU <b>130</b> may be configured to determine values for machine state parameters such as machine acceleration, orientation, etc. IMU <b>130</b> may likewise output one or more of these machine state parameter values to controller <b>110</b>. For example, IMU <b>130</b> may output acceleration and/or orientation parameter values to controller <b>110</b>. Controller <b>110</b> may also use certain machine state parameter values (e.g., acceleration) received from IMU <b>130</b> to determine other machine state parameter values (e.g., location, velocity, etc.).</p>
<p id="p-0022" num="0021">Speed sensor <b>140</b> may include one or more speed sensors, e.g., positioned on a wheel shaft of the machine (for wheel-based machines) or a track driving sprocket of the machine (for track-based machines). In certain embodiments, speed sensor <b>140</b> may include an encoder, such as a high precision speed encoder positioned on the wheel set to measure the rotational speed of the wheels and thus determine the velocity of the machine. Speed sensor <b>140</b> may also be configured to send data indicating a speed of the machine to controller <b>110</b>. As discussed, controller <b>110</b> may be capable of determining other information, e.g., acceleration, from a time series of speed data.</p>
<p id="p-0023" num="0022">Brake sensor <b>150</b> may include one or more devices capable of measuring a degree to which the brakes of the machine are being applied. For example, brake sensor <b>150</b> may include sensors that detect pressure in one or more brake lines or hoses of the machine. Brake sensor <b>150</b> may also be configured to send data that indicates the amount of pressure being applied in one or more of the brake lines or hoses to controller <b>110</b>.</p>
<p id="p-0024" num="0023">Fuel sensor <b>160</b> may include one or more sensors capable of measuring an amount of fuel being injected to an engine of the machine. For example, fuel sensor <b>160</b> may include sensors that detect a pressure, flow rate, and/or volume of fuel in a fuel line or hose that supplies fuel to the engine. Fuel sensor <b>160</b> may also be configured to send data corresponding to the amount (e.g., via pressure, flow rate, and/or volume) of fuel being applied to the engine to controller <b>110</b>.</p>
<p id="p-0025" num="0024">Payload sensor <b>170</b> may include one or more sensors capable of measuring a weight of the payload of the machine. For example, payload sensor <b>170</b> may be capable of measuring the weight of the material being moved by the machine. Payload sensor <b>170</b> may also be configured to send data corresponding to the weight of the payload being carried by the machine to controller <b>110</b>.</p>
<p id="p-0026" num="0025">Steering sensor <b>175</b> may include one or more sensors capable of measuring a steering angle and/or radius of curvature of a path of the machine. For example, steering sensor <b>170</b> may include one or more steering angle sensors mounted on a steering shaft of the machine and enabled to detect the steering angle. Steering sensor <b>175</b> may also include one or more force sensors, tire pressure sensors, and/or accelerometers that may be configured to measure data used to determine a steering angle of the machine.</p>
<p id="p-0027" num="0026">Database <b>180</b> may be configured to store data used by system <b>100</b> to analyze machine performance. For example, database <b>180</b> may store historical data related to different events of the machine and/or one or more other machines. In certain embodiments, database <b>180</b> may store the information corresponding to each event as a multidimensional data point. For example, for any braking event, database <b>180</b> may store a data point (C<sub>b</sub>, D<sub>d</sub>, v, &#x3b8;, P), where C<sub>b </sub>corresponds to the braking command value that was applied to achieve a desired deceleration value D<sub>d </sub>associated with the braking event when the machine is traveling at a velocity v, at an elevation angle &#x3b8;, and carrying a payload P. For example, as discussed above, a deceleration of the machine as well as velocity v, elevation angle &#x3b8; and payload weight P may be measured by one or more of sensors <b>120</b>-<b>170</b>. Controller <b>110</b> may receive this data from sensors <b>120</b>-<b>170</b>, construct a data point for the event, and store the data point in database <b>180</b>. Similarly, for an acceleration event, database <b>180</b> may store a data point (C<sub>f</sub>, A<sub>d</sub>, v, &#x3b8;, P), where C<sub>f </sub>corresponds to the fuel injection command value that was applied to achieve a desired acceleration value A<sub>d </sub>associated with the acceleration event when the machine is traveling at a velocity v, at an elevation angle &#x3b8;, and carrying a payload P. Likewise, for any turning event, database <b>180</b> may store a data point (C<sub>t</sub>, A<sub>c</sub>, v, &#x3b8;, &#x3c6;, P), where C<sub>t </sub>corresponds to a turning command (e.g., a radius of curvature) that results in a centripetal acceleration value A<sub>c </sub>when the machine is traveling at a velocity v, at an elevation angle &#x3b8;, at a bank angle &#x3c6;, and carrying a payload P. Of course, data points for any other type of event may also be stored in database <b>180</b>. Moreover, while data points are used as an exemplary format, those skilled in the art will appreciate that any other type of format, including arrays, tables, etc., may be used to store the data associated with the events.</p>
<p id="p-0028" num="0027">In certain embodiments, such as where the machine is an autonomous machine, database <b>180</b> may store data points for corresponding events together as a set of data points. For example, as discussed, the machine may perform certain events with regularity as part of an event schedule that defines the tasks performed by an autonomous machine. The event schedule may include a number of braking events, BE<sub>i</sub>, acceleration events AE<sub>i</sub>, etc., that are performed at particular times and/or locations within the event schedule. For example, if the machine is an autonomous machine that moves materials from one location to another, then the machine may include a braking event BE<sub>i </sub>before the machine dumps the material, and an acceleration event AE<sub>i </sub>after the machine dumps the material and moves to return to pick up additional material. In these embodiments, database <b>180</b> may store data points for corresponding events together. For example, database <b>180</b> may store the data points for all instances of a particular braking event BE<sub>2 </sub>together so that these data points may be used together to analyze machine performance.</p>
<p id="p-0029" num="0028">Database <b>180</b> may also store other information, such as the event schedule itself, or any other information that controller <b>110</b> may use to control the machine. For example, database <b>180</b> may store one or more threshold values as discussed in various embodiments below. Moreover, while database <b>180</b> is shown in <figref idref="DRAWINGS">FIG. 1</figref> as being separate from controller <b>110</b>, database <b>180</b> may also be incorporated together with controller <b>110</b>, such as in one or more memories and/or storages of controller <b>110</b>, as discussed below.</p>
<p id="p-0030" num="0029">Network <b>190</b> may include any one of or combination of wired or wireless networks. For example, network <b>190</b> may include wired networks such as twisted pair wire, coaxial cable, optical fiber, and/or a digital network. Network <b>190</b> may further include any network configured to enable communication via a CAN-bus protocol. Likewise, network <b>190</b> may include any wireless networks such as RFID, microwave or cellular networks or wireless networks employing, e.g., IEEE 802.11 or Bluetooth protocols. Additionally, network <b>190</b> may be integrated into any local area network, wide area network, campus area network, or the Internet.</p>
<p id="p-0031" num="0030">Controller <b>110</b> may include a processor <b>111</b>, a storage <b>112</b>, and a memory <b>113</b>. Controller <b>110</b> may include or be included in an electronic control unit of the machine, such as an engine control unit (ECU), for example. Controller <b>110</b> may be configured to analyze machine performance and determine whether and when a machine may require maintenance, as discussed below. Processor <b>111</b> may include one or more known processing devices, such as a microprocessor from the Pentium&#x2122; or Xeon&#x2122; family manufactured by Intel&#x2122;, the Turion&#x2122; family manufactured by AMD&#x2122; or any other type of processor. Storage <b>112</b> may include a volatile or non-volatile, magnetic, semiconductor, tape, optical, removable, nonremovable, or other type of storage device or computer-readable medium. Storage <b>112</b> may store programs and/or other information, such as performance analysis and/or maintenance scheduling programs, information related to historical machine performance, and/or any other information used to assess current machine performance, as discussed in greater detail below. Memory <b>113</b> may include one or more storage devices configured to store information used by controller <b>110</b> to perform certain functions related to disclosed embodiments.</p>
<p id="p-0032" num="0031">In one embodiment, memory <b>113</b> may include one or more machine performance analysis programs or subprograms loaded from storage <b>112</b> or elsewhere that, when executed by processor <b>111</b>, perform various procedures, operations, or processes consistent with the disclosed embodiments. For example, memory <b>113</b> may include one or more programs that enable controller <b>110</b> to, among other things, identify an event for a machine that includes a desired output parameter value, send a command to a certain component of a machine to achieve the desired output parameter value, assess the performance of the machine, and determine whether the machine requires maintenance by comparing the value of the command sent to the component of the machine with historical command values sent to the machine under similar circumstances.</p>
<p id="p-0033" num="0032">For example, memory <b>113</b> may include one or more programs that enable processor <b>111</b> to identify a braking event that includes a desired deceleration output parameter value, send a braking command indicative of a braking pressure to be applied to the brake lines of the machine, and assess the machine performance by comparing the braking command to previous braking commands sent when a corresponding event in the event schedule was completed sometime in the past. In these embodiments, as one or more components of the machine's braking system, such as the brake pads wear down, the braking command given to achieve the desired deceleration value may increase over time. Thus, by comparing the braking command to corresponding historical braking commands, in accordance with one or more embodiments discussed below, controller <b>110</b> may be able to determine if and when a particular machine requires maintenance.</p>
<p id="p-0034" num="0033">Likewise, in the example of an acceleration event, memory <b>113</b> may include one or more programs that enable processor <b>111</b> to identify the acceleration event including a desired acceleration output parameter value, send a fuel injection command indicative of an amount of fuel to be injected into an engine of the machine, and assess the machine performance by comparing the fuel injection command to previous fuel injection commands sent when a corresponding fuel injection event was completed in the past. As discussed, any other event executed by the machine, such as turning events, for example, also may be used to assess machine performance.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 2</figref> illustrates another exemplary performance analysis system <b>200</b> having machines <b>210</b><i>a</i>-<b>210</b><i>d </i>connected to a performance analyzer <b>220</b> via a network <b>290</b>. Machines <b>210</b><i>a</i>-<b>210</b><i>d </i>may be any type of machine capable of performing tasks such as digging, loosening, carrying, drilling, compacting, etc., different materials. Machines <b>210</b><i>a</i>-<b>210</b><i>d </i>may each include one or more components of system <b>100</b> and may include any of the functionalities described herein with respect to those components. For example, machines <b>210</b><i>a</i>-<b>210</b><i>d </i>may each include one or more of sensors <b>120</b>-<b>170</b> and/or controller <b>110</b>. While four machines <b>210</b><i>a</i>-<b>210</b><i>d </i>are shown in <figref idref="DRAWINGS">FIG. 2</figref>, system <b>200</b> may include any number of machines.</p>
<p id="p-0036" num="0035">In certain embodiments, machines <b>210</b><i>a</i>-<b>210</b><i>d </i>may be autonomous machines that operate as part of a fleet to perform tasks according to event schedules. For example, machines <b>210</b><i>a</i>-<b>210</b><i>d </i>may be configured to operate according to similar or identical event schedules, such that machines <b>210</b><i>a</i>-<b>210</b><i>d </i>each perform similar or identical tasks in a predetermined order, e.g., loading material at a particular location (which may include a braking event, a loading event, etc.), traveling to another location (which may include acceleration, turning, and/or braking events), unloading the material at the other location (which may include a braking event, a dumping event, etc.), etc.</p>
<p id="p-0037" num="0036">Machines <b>210</b><i>a</i>-<b>210</b><i>d </i>also may be configured to send data regarding tasks performed during a particular event to performance analyzer <b>220</b> via network <b>290</b>. For example, machines <b>210</b><i>a</i>-<b>210</b><i>d </i>may be configured to send command values, actual output parameter values, desired output parameter values, and/or machine state parameter values to performance analyzer <b>220</b> for a particular event. Thus, as discussed above, where the event is a braking event, one or more of machines <b>210</b><i>a</i>-<b>210</b><i>d </i>that are braking during the event may each send one or more of a braking command value C<sub>b</sub>, a desired deceleration value D<sub>d </sub>and/or an actual deceleration value D<sub>a</sub>, a velocity value v, an elevation angle &#x3b8;, and payload value P. Similarly, when the event is an acceleration event, machines <b>210</b><i>a</i>-<b>210</b><i>d </i>may each send one or more of a fuel injection command C<sub>f</sub>, a desired acceleration value A<sub>d </sub>and/or an actual acceleration value A<sub>a</sub>, a velocity value v, an elevation angle &#x3b8;, and payload value P. Likewise, when the event is a turning event, machines <b>210</b><i>a</i>-<b>210</b><i>d </i>may each send one or more of a turning command C<sub>t</sub>, an actual centripetal acceleration value A<sub>c</sub>, a velocity value v, an elevation angle &#x3b8;, a bank angle &#x3c6;, and payload value P. In certain embodiments, machines <b>210</b><i>a</i>-<b>210</b><i>d </i>may generate data points, e.g., using the data point formats discussed above, at their respective controllers <b>110</b>, and send the data points to performance analyzer <b>220</b>.</p>
<p id="p-0038" num="0037">Performance analyzer <b>220</b> may receive the data from machines <b>210</b><i>a</i>-<b>210</b><i>d </i>and analyze the data to determine if and when one or more of machines <b>210</b><i>a</i>-<b>210</b><i>d </i>may require maintenance. For example, performance analyzer <b>220</b> may compare the data received from machines <b>210</b><i>a</i>-<b>210</b><i>d </i>to historical data previously received from machines <b>210</b><i>a</i>-<b>210</b><i>d </i>and/or any other machines performing tasks in accordance with the event schedule to determine if and when one or more of machines <b>210</b><i>a</i>-<b>210</b><i>d </i>may require maintenance.</p>
<p id="p-0039" num="0038">As shown in <figref idref="DRAWINGS">FIG. 2</figref>, performance analyzer <b>220</b> may include a processor <b>221</b>, a storage <b>222</b>, and a memory <b>223</b>. Processor <b>221</b> may include one or more known processing devices, such as a microprocessor from the Pentium&#x2122; or Xeon&#x2122; family manufactured by Intel&#x2122;, the Turion&#x2122; family manufactured by AMD&#x2122; or any other type of processor. Storage <b>222</b> may include a volatile or non-volatile, magnetic, semiconductor, tape, optical, removable, nonremovable, or other type of storage device or computer-readable medium. Storage <b>222</b> may store programs and/or other information, such as information related to historical performance of one or more machines in the fleet and/or any other information used to assess current machine and/or fleet performance, as discussed in greater detail below. Memory <b>223</b> may include one or more storage devices configured to store information used by performance analyzer <b>220</b> to perform certain functions related to disclosed embodiments. In certain embodiments, storage <b>222</b> and/or memory <b>223</b> may store information similar to that discussed above with regard to database <b>180</b> for one or more of machines <b>210</b><i>a</i>-<b>210</b><i>d </i>in the fleet. That is, storage <b>222</b> and/or memory <b>223</b> may include the data points corresponding to one or more events for machines <b>210</b><i>a</i>-<b>210</b><i>d. </i></p>
<p id="p-0040" num="0039">In one embodiment, memory <b>223</b> may include one or more machine performance analysis programs or subprograms loaded from storage <b>222</b> or elsewhere that, when executed by processor <b>221</b>, perform various procedures, operations, or processes consistent with the disclosed embodiments. For example, memory <b>223</b> may include one or more programs that enable performance analyzer <b>220</b> to, among other things, identify an event for a machine <b>210</b><i>a </i>among a plurality of machines <b>210</b><i>a</i>-<b>210</b><i>d </i>that includes a desired output parameter value, receive a command value indicative of a command sent to a component of machine <b>210</b><i>a</i>, assess the performance of machine <b>210</b><i>a</i>, and determine whether machine <b>210</b><i>a </i>requires maintenance by comparing the command value to historical command values sent to one or more other machines <b>210</b><i>b</i>-<b>210</b><i>d </i>in the fleet under similar circumstances. For example, memory <b>223</b> may include one or more programs that enable processor <b>221</b> to identify a braking event for machine <b>210</b><i>a </i>that includes a desired deceleration output parameter value, receive a braking command value indicative of a braking command sent to a braking system of machine <b>210</b><i>a</i>, and assess the machine performance by comparing the braking command value to previous braking command values for one or more other machines <b>210</b><i>b</i>-<b>210</b><i>d </i>during the same event in the event schedule completed sometime in the past. As discussed, other events, such as acceleration and/or turning events may also be used to analyze machine performance.</p>
<p id="p-0041" num="0040">Network <b>290</b> may include any one of or combination of wired or wireless networks. For example, network <b>290</b> may include wired networks such as twisted pair wire, coaxial cable, optical fiber, and/or a digital network. Network <b>290</b> may further include any network configured to enable communication via a CAN-bus protocol. Likewise, network <b>290</b> may include any wireless networks such as RFID, microwave or cellular networks or wireless networks employing, e.g., IEEE 802.11 or Bluetooth protocols. Additionally, network <b>290</b> may be integrated into any local area network, wide area network, campus area network, or the Internet.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 3</figref> is a flowchart illustrating exemplary processes for analyzing machine performance, consistent with disclosed embodiments. The processes of <figref idref="DRAWINGS">FIG. 3</figref> may be performed by one or more components of system <b>100</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>, such as controller <b>110</b>, for example. System <b>100</b> may identify an event having a desired output parameter value (step <b>310</b>). For example, system <b>100</b> may identify an event included in an event schedule during which the machine that includes system <b>100</b> may perform one or more tasks. A braking event is used here as an example. However, those skilled in the art will understand that other events, such as an acceleration event, a turning event, etc., may also be used to analyze machine performance, consistent with the disclosed embodiments. The exemplary braking event may be associated with a desired braking deceleration value. That is, for the particular braking event, it may be desired that the machine decelerate at a particular rate. For example, different braking events may be associated with different desired output parameter values (e.g., different desired deceleration values)&#x2014;a scheduled braking event may have one desired deceleration value, while another braking event, such as an emergency braking event may have a different deceleration value. Likewise, different acceleration events may have different desired acceleration values.</p>
<p id="p-0043" num="0042">After identifying the event, system <b>100</b> may generate a preliminary command having a preliminary command value to be sent to a component of the machine, such as a braking system of the machine (step <b>320</b>). The preliminary command may be generated based on the desired output parameter value and one or more machine state parameter values. For example, system <b>100</b> may determine a command value to apply based on one or more control maps stored at database <b>180</b> and/or controller <b>110</b> that map suggested braking command values to different combinations of desired deceleration values and machine state parameter values. Using the braking event example, a control map stored at database <b>180</b> and/or controller <b>110</b> may correlate suggested braking command values to different combinations of desired deceleration values and machine state parameter values such as machine velocity, orientation, and payload. The control map may be represented as multidimensional functions that output a command value as a function of an output parameter value and set of machine state parameter values. The control map may also be represented as a set of sample data points representing exemplary combinations of output parameter values and machine state parameter values with corresponding exemplary command values. System <b>100</b> may then determine the preliminary command value for a particular event based on one or more closest data points in the control map, e.g., using one or more interpolation techniques.</p>
<p id="p-0044" num="0043">In still other embodiments, the control map of database <b>180</b> and/or controller <b>110</b> may include a preliminary command having a preliminary command value that corresponds to the particular event. Thus, for a particular braking event BE<sub>i</sub>, the control map may store a certain braking command value as the preliminary command value. Likewise, for another braking event BE<sub>i+1</sub>, the control map may store a different braking command value.</p>
<p id="p-0045" num="0044">System <b>100</b> may also use one or more feedback control loops to modify the command value applied in order to achieve the desired output parameter value (step <b>330</b>). For example, controller <b>110</b> may include one or more control loops, such as a proportional-integral-derivative (PID) control loop that modifies the command value being applied to the machine in order to achieve the desired output parameter value. In the braking event example, system <b>100</b> may monitor the deceleration of the machine after the preliminary command value is applied and compare the deceleration to the desired deceleration value (i.e. the desired output parameter value). Then, controller <b>110</b> may modify the command value such that the actual deceleration of the machine is equal to or approaches the desired deceleration value.</p>
<p id="p-0046" num="0045">System <b>100</b> may generate a command data point corresponding to the command value for the event (step <b>340</b>). For example, controller <b>110</b> may generate a data point that includes the final command value generated as a result of the feedback control loop. In certain embodiments, the data point may also include the desired output parameter value and one or more machine state parameter values. In the braking example, controller <b>110</b> may generate a data point (C<sub>b</sub>, D<sub>d</sub>, v, &#x3b8;, P), where C<sub>b </sub>corresponds to the braking command value that was applied to achieve a desired deceleration value D<sub>d </sub>associated with the braking event when the machine is traveling at a velocity v, at an elevation angle &#x3b8;, and carrying a payload P. As discussed above the actual deceleration of the machine as well as velocity v, elevation angle &#x3b8;, and payload weight P may be measured by one or more of sensors <b>120</b>-<b>170</b>. In the acceleration event example, controller <b>110</b> may generate a data point (C<sub>f</sub>, A<sub>d</sub>, v, &#x3b8;, P), where C<sub>f </sub>corresponds to the fuel injection command value that was applied to achieve a desired acceleration value A<sub>d </sub>associated with the acceleration event when the machine is traveling at a velocity v, at an elevation angle &#x3b8;, and carrying a payload P. For the turning event example, controller <b>110</b> may generate a data point (C<sub>t</sub>, A<sub>c</sub>, v, &#x3b8;, P), where C<sub>t </sub>corresponds to a turning command (e.g., a radius of curvature) that results in a centripetal acceleration value when the machine is traveling at a velocity v, at an elevation angle &#x3b8;, at a bank angle &#x3c6;, and carrying a payload P. As discussed above, these data points may be stored in database <b>180</b> which may be included as a part of or separately from controller <b>110</b>.</p>
<p id="p-0047" num="0046">The command values discussed above may be generated or otherwise determined by controller <b>110</b>. Alternatively or additionally, the command values may be determined by one or more sensors. For example, brake sensor <b>150</b> may determine a braking command C<sub>b</sub>, fuel sensor <b>160</b> may determine a fuel injection command C<sub>f</sub>, etc. Additionally, as discussed, several of sensors <b>120</b>-<b>170</b> may be capable of measuring acceleration values and/or measuring other values used to determine acceleration values of the machine, such as GNSS device <b>120</b>, IMU <b>130</b>, and speed sensor <b>140</b>. System <b>100</b> may use one or more of these sensors to determine the acceleration or deceleration for an event, e.g., by combining values from the sensors, choosing one sensor over another based on accuracy or trustworthiness, or any other method.</p>
<p id="p-0048" num="0047">System <b>100</b> may then use the data point generated in step <b>340</b> to determine if and when the machine may require maintenance (step <b>350</b>). For example, system <b>100</b> may determine if and when the machine may require maintenance by analyzing the data point generated in step <b>340</b> with respect to one or more historical data points that were generated previously. The historical data points may have been generated based on similar events executed by the same or different machines. For example, the historical data points may have been generated during the same event in a previous execution of the event schedule for the machine. System <b>100</b> may use one or more different analysis techniques to determine if and when the machine may require maintenance, as discussed below.</p>
<p id="p-0049" num="0048">One exemplary technique may include comparing the command value to a threshold command value for the event. For example, system <b>100</b> may store threshold command values for one or more of the events in an event schedule, e.g., in database <b>180</b> or elsewhere. In certain embodiments, the threshold command values may be predetermined based on specifications of the machine. In other embodiments, the threshold command values may be determined based on historical command values generated during previous events. For example, the threshold command value may be set to a value equal to a historical command value that was generated at or near the time when it was previously determined that the machine may require maintenance. In one embodiment, the threshold command value may be set to a value that is a certain percentage, such as 90%, of a historical command value that was generated at or near the time when a machine experienced downtime or some failure. According to this technique, system <b>100</b> may compare the command value to the threshold command value, and, if the command value exceeds the threshold command value, may determine that the machine may require maintenance.</p>
<p id="p-0050" num="0049">Another exemplary technique may include comparing a rate of change of the command values for a particular event to a threshold command value rate of change. For example, as discussed above, the events may be included in an event schedule. Thus, based on the event schedule, the machine may perform the particular event at regular intervals. Thus, as the machine performs the event during subsequent executions of the event schedule, system <b>100</b> may generate multiple command data points over time. Accordingly, system <b>100</b> may be able to calculate a rate of change of the command value applied for a certain event over time. Returning to the braking event example, the braking command value applied to achieve a desired deceleration value associated with a particular braking event may increase over time, e.g., based on wear in the brake pads. A larger-than-expected increase in the braking command value over time may indicate that the brake pads are wearing away faster than expected, and may thus signal that maintenance may be required sooner than expected, or may signal other problems, such as one or more faulty brake pads. Thus, system <b>100</b> may calculate the change in command values over time (e.g., may determine time derivatives for discrete command value points) and may compare the change in command values over time to a threshold command value rate of change. If the time rate of change of the command values for a particular event exceeds a threshold rate of change, then system <b>100</b> may determine that the machine may require maintenance.</p>
<p id="p-0051" num="0050">Another exemplary technique that may be performed by system <b>100</b> as a part of step <b>350</b> may include determining a trend in a time series of the command values for a particular event and determining if and when the machine requires maintenance based on the trend. For example, system <b>100</b> may analyze the trend in a time series of the command values by generating an equation that represents the trend in the time series of the command values, e.g., using one or more curve fitting techniques or algorithms. That is, system <b>100</b> may generate an equation to represent a time series of command values by fitting a curve defined by the equation to a time series of previously collected command values. For example, <figref idref="DRAWINGS">FIG. 4</figref> illustrates a time series of points <b>410</b><i>a</i>-<b>410</b><i>f </i>that each have a command value that was collected at a particular time, as illustrated by their positioning in the graph having command value axis <b>401</b> and time value axis <b>402</b>. System <b>100</b> may use one or more curve fitting algorithms to derive an equation for curve <b>420</b> that best fits the time series of points <b>410</b><i>a</i>-<b>410</b><i>f </i>representing the command values.</p>
<p id="p-0052" num="0051">System <b>100</b> may then use the equation for curve <b>420</b> to determine if and when the machine may require maintenance. For example, system <b>100</b> may determine a time <b>440</b> in the future when curve <b>420</b> representing the best fit equation exceeds a threshold command value <b>430</b>. Thus, system <b>100</b> may use the equation to extrapolate curve <b>420</b> to a time in the future in order to identify a projected machine maintenance date at which the value of the equation represented by curve <b>420</b> exceeds threshold command value <b>430</b>.</p>
<p id="p-0053" num="0052">Alternatively or additionally, system <b>100</b> may calculate a rate of change of the equation represented by curve <b>420</b> (i.e. may calculate a time-based derivative of curve <b>420</b>) at one or more times in the future and may determine a projected machine maintenance date based on the rate of change. For example, system <b>100</b> may include an expected command value trend rate of change. The expected command value trend rate of change may be based, e.g., on historical command value trend rates of change of other machines. For example, if the machine being analyzed is one machine within a fleet, then the expected command value trend rate of change may be determined based on a mean or median command value trend rate of change of one or more other machines in the fleet. System <b>100</b> may identify a projected machine maintenance date to be a date when a rate of change of the equation represented by curve <b>420</b> exceeds the expected command value trend rate of change by a threshold value. In certain embodiments, the threshold value may be based on the expected command value trend rate of change. For example, the threshold value may be a predetermined percentage of the expected command value trend rate of change, such as, 20%. Thus, system <b>100</b> may identify as the projected machine maintenance date a point of time in the future where the rate of change of curve <b>420</b> exceeds the expected command value trend rate of change by 20%.</p>
<p id="p-0054" num="0053">Another exemplary technique that may be performed by system <b>100</b> may take into account other values in addition to the command values, such as machine state parameter values, when analyzing machine performance. For example, as discussed, system <b>100</b> may include data points for different events, such as a data point (C<sub>b</sub>, D<sub>d</sub>, v, &#x3b8;, P) for a braking event, a data point (C<sub>f</sub>, A<sub>d</sub>, v, &#x3b8;, P) for an acceleration event, and a data point (C<sub>t</sub>, A<sub>c</sub>, v, &#x3b8;, &#x3c6;, P) for a turning event. When analyzing machine performance to determine whether the machine may require maintenance, system <b>100</b> may determine a distance between each data point and a multidimensional surface (optionally represented by a set of multidimensional points) that define an expected or desirable operational range for the machine. This multidimensional surface may be predefined, e.g., based on specifications of the machines, historical data of the fleet (e.g., previously collected data points), or a combination of both and may be stored in system <b>100</b>, e.g., in database <b>180</b> and/or controller <b>110</b>. System <b>100</b> may then determine that the machine requires maintenance when a difference between the data point for an event and the multidimensional surface exceeds a threshold value for that event. The threshold values for certain events may also be stored in system <b>100</b>.</p>
<p id="p-0055" num="0054">If, at step <b>350</b>, system <b>100</b> determines that the machine may require maintenance (step <b>350</b>, Yes), then system <b>100</b> may generate a maintenance notification (step <b>370</b>). If the machine is a non-autonomous machine, the maintenance notification may be sent to an operator of the machine. If the machine is an autonomous machine, the maintenance notification may be sent to a central controller, e.g., that controls operations for one or more autonomous machines. If, on the other hand, system <b>100</b> determines that the machine does not require maintenance (step <b>350</b>, No), then system <b>100</b> may not generate a maintenance notification (step <b>360</b>) and the process implemented by system <b>100</b> for that particular event may end.</p>
<p id="p-0056" num="0055">As discussed above, performance analyzer <b>220</b> may receive data from one or more of machines <b>210</b><i>a</i>-<b>210</b><i>d </i>in a fleet and analyze the data to determine if and when one or more of the machines require maintenance. <figref idref="DRAWINGS">FIG. 5</figref> is a flowchart that illustrates exemplary processes for analyzing machine performance, which may be performed by performance analyzer <b>220</b>, for example.</p>
<p id="p-0057" num="0056">Performance analyzer <b>220</b> may perform one or more of the steps included in <figref idref="DRAWINGS">FIG. 5</figref> each time a machine executes an event. Thus, for each event executed by a machine within a fleet of machines, performance analyzer <b>220</b> may analyze the performance of the machine, determine whether the machine may require maintenance, and/or determine a maintenance schedule for the fleet of machines. If machines <b>210</b><i>a</i>-<b>210</b><i>d </i>are part of a fleet of machines performing related tasks, then machines <b>210</b><i>a</i>-<b>210</b><i>d </i>may each execute the event schedules such that each machine <b>210</b><i>a</i>-<b>210</b><i>d </i>performs the events in the event schedule offset in time relative to the other machines. That is, when machine <b>210</b><i>a </i>is executing tasks for a particular event (e.g., braking event BE<sub>1</sub>) at a particular point in time in the event schedule, then machine <b>210</b><i>b </i>may be executing tasks for a different event (e.g., acceleration event AE<sub>2</sub>) at a different point in time in the event schedule. Thus, while machines may perform corresponding events at substantially the same time within an event schedule, the machines may execute the event schedule in a staggered fashion. This may allow the machines to work together to perform similar tasks without interfering with each other in the field. Performance analyzer <b>220</b> may perform the processes of <figref idref="DRAWINGS">FIG. 5</figref> for multiple machines in the fleet at the same time, analyzing command values for different events as they are executed by the machines in the fleet.</p>
<p id="p-0058" num="0057">Performance analyzer <b>220</b> may receive a command value of a command generated by one of machines <b>210</b><i>a</i>-<b>210</b><i>d </i>(e.g., machine <b>210</b><i>a</i>) during an event (step <b>510</b>). For example, as each machine completes tasks for an event (e.g., a braking event, an acceleration event, a turning event, etc.) in an event schedule, the machine may send data to performance analyzer <b>220</b> that is indicative of the commands sent to different components of the machine (e.g., a braking system, an engine system, a steering system, etc.). In addition to command values, this data may also include machine state parameter values indicative of a current state of the machine when the command was issued. For example, each machine may also send data corresponding to an acceleration, deceleration, velocity, position, orientation, payload weight, etc., of the machine. As discussed, this data may be sent to performance analyzer <b>220</b> as multidimensional data points that include the command value, a desired output parameter value, and/or one or more state parameter values.</p>
<p id="p-0059" num="0058">Performance analyzer <b>220</b> may compare the command value for the machine with command values for the other machines (step <b>520</b>). In certain embodiments, performance analyzer <b>220</b> may compare command values for a machine with command values for the other machines that correspond to the same event. For example, if machine <b>210</b><i>a </i>has executed a scheduled braking event BE<sub>2 </sub>that is part of the event schedule, performance analyzer <b>220</b> may compare the command value for braking event BE<sub>2 </sub>with the command values for the other machines in the fleet when they executed braking event BE<sub>2 </sub>during their event schedule.</p>
<p id="p-0060" num="0059">In some embodiments, performance analyzer <b>220</b> may compare the command values for corresponding events directly, without consideration of machine state parameter values such as machine velocity, machine payload, and/or machine orientation, because performance analyzer <b>220</b> may assume that these parameters are the same for corresponding events. In other embodiments, performance analyzer <b>220</b> may take into account the measured machine state parameter values in a variety of ways.</p>
<p id="p-0061" num="0060">According to one embodiment, performance analyzer <b>220</b> may compare machine state parameter values during the event for the machine being analyzed to historical machine state parameter values for other machines in the fleet during corresponding events. For example, performance analyzer <b>220</b> may compare the machine state parameter values to mean or median values of the historical machine state parameter values. If the machine state parameter value differs from the mean or median by less than a threshold value for that machine state parameter value, then performance analyzer <b>220</b> may assume that the machine state parameter values are equal and may directly compare the command values.</p>
<p id="p-0062" num="0061">According to another embodiment, performance analyzer <b>220</b> may store data points for different events, as discussed above. For example, for each braking event executed by a machine, performance analyzer <b>220</b> may store a data point (C<sub>b</sub>, D<sub>d</sub>, v, &#x3b8;, P) for that particular execution of the event. Likewise, performance analyzer <b>220</b> may store a data point (C<sub>f</sub>, A<sub>d</sub>, v, &#x3b8;, P) for acceleration events and a data point (C<sub>i</sub>, v, &#x3b8;, &#x3c6;, P) for turning events. Performance analyzer <b>220</b> may then determine a distance between each data point and a multidimensional surface (optionally represented by a set of multidimensional points) that define an expected or desirable operational range for the machines. This multidimensional surface may be predefined, e.g., based on specifications of the machines, historical data of the fleet (e.g., previously collected data points), or a combination of both.</p>
<p id="p-0063" num="0062">Performance analyzer <b>220</b> may then determine whether any of the machines may require maintenance (step <b>530</b>). Performance analyzer <b>220</b> may do so based on the comparison performed at step <b>520</b>. For example, performance analyzer <b>220</b> may use one or more of the techniques discussed above with respect to step <b>350</b> of <figref idref="DRAWINGS">FIG. 3</figref>, except that instead of using the historical data of the same machine (e.g., machine <b>210</b><i>a</i>) as a comparison, performance analyzer <b>220</b> may use the historical data from one or more other machines in the fleet. For example, performance analyzer <b>220</b> may compare the command value of machine <b>210</b><i>a </i>at an event to an average of the historical command values of one or more other machines in the fleet (and optionally also of historical command values of machine <b>210</b><i>a</i>) to the command value of machine <b>210</b><i>a</i>, and, if the difference between the command value and the average exceeds a threshold value, may determine that the machine requires maintenance.</p>
<p id="p-0064" num="0063">In embodiments where performance analyzer <b>220</b> stores data points for different events, as discussed above, performance analyzer <b>220</b> may determine that the machine requires maintenance when a difference between the data point for an event and the multidimensional surface exceeds a threshold value.</p>
<p id="p-0065" num="0064">Performance analyzer <b>220</b> may determine a maintenance schedule for the machine based on the status of one or more other machines in the fleet (step <b>540</b>). As discussed above, performance analyzer <b>220</b> may perform the processes of <figref idref="DRAWINGS">FIG. 5</figref> for each event executed by each machine, in certain embodiments. Thus, performance analyzer <b>220</b> may continuously analyze the performance of each machine and determine if each machine in the fleet requires maintenance. However, it may be impractical to send two or more machines off line for maintenance at the same time. Thus, performance analyzer <b>220</b> may determine maintenance schedules for the machines based on the status of all of the machines.</p>
<p id="p-0066" num="0065">For example, if performance analyzer <b>220</b> determines that machine <b>210</b><i>a </i>requires maintenance and also determines, at or around the same time, that machine <b>210</b><i>b </i>requires maintenance, then performance analyzer <b>220</b> may determine which machine should be scheduled for maintenance first.</p>
<p id="p-0067" num="0066">Performance analyzer <b>220</b> may take many factors into account when prioritizing the maintenance schedule of machines in the fleet. For example, performance analyzer <b>220</b> may determine that a certain system, such as the braking system, receives a maintenance priority over an engine system and/or a steering system. Thus, if machine <b>210</b><i>a </i>requires braking maintenance and machine <b>210</b><i>b </i>requires steering maintenance, then performance analyzer <b>220</b> may determine that machine <b>210</b><i>a </i>should receive maintenance first and machine <b>210</b><i>b </i>can receive maintenance after machine <b>210</b><i>a. </i></p>
<p id="p-0068" num="0067">Likewise, if both machines <b>210</b><i>a </i>and <b>210</b><i>b </i>require similar maintenance (e.g., both require braking maintenance), then performance analyzer <b>220</b> may schedule the machine with the higher command value for a particular event to receive maintenance first. In other words, if the command value for machine <b>210</b><i>a </i>for a braking event BE<sub>1 </sub>is higher than a command value for machine <b>210</b><i>b </i>for the same braking event BE<sub>1 </sub>under similar circumstances (e.g., similar vehicle speed, payload, and orientation), then performance analyzer <b>220</b> may determine that machine <b>210</b><i>a </i>should receive maintenance first because the higher command value may indicate a greater wear in the brake pads.</p>
<p id="h-0006" num="0000">Industrial Applicability</p>
<p id="p-0069" num="0068">The disclosed machine performance analysis systems and methods may be applicable to any type of machine, including autonomous and non-autonomous machines that perform tasks such as digging, loosening, carrying, drilling, compacting, etc., different materials, and may require maintenance from time to time. The disclosed machine performance analysis systems and methods may allow an organization to monitor the performance of one or more machines and leverage historical data to predict if and when a machine may require maintenance. By being able to predict maintenance times, the organization can reduce the downtime of a particular machine and also reduce instances of catastrophic failure, such as total braking loss.</p>
<p id="p-0070" num="0069">Systems and methods consistent with certain embodiments may receive command values related to commands sent to a component of a machine during a particular event, such as a braking event, acceleration event, turning event, etc. By analyzing these command values with respect to historical command values previously sent to the component of the machine and/or to corresponding components of other machines in a fleet during corresponding events, systems and methods consistent with certain embodiments may determine if and when the machine may require maintenance.</p>
<p id="p-0071" num="0070">It will be apparent to those skilled in the art that various modifications and variations can be made to the disclosed performance analysis system. Other embodiments will be apparent to those skilled in the art from consideration of the specification and practice of the disclosed performance analysis system. It is intended that the specification and examples be considered as exemplary only, with a true scope being indicated by the following claims and their equivalents.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer-implemented method for analyzing machine performance comprising:
<claim-text>identifying an event for a machine that includes a desired output parameter value;</claim-text>
<claim-text>sending a command to a component of the machine, the command having a command value determined based on the desired output parameter value, one or more machine state parameter values, and a feedback control loop; and</claim-text>
<claim-text>determining that the machine requires maintenance by comparing the command value to one or more historical command values each determined based on a historical desired output parameter value and one or more historical machine state parameter values, the historical desired output parameter value and the one or more historical machine state parameter values each corresponding to the desired output parameter value and the one or more machine state parameter values.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The computer-implemented method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the event is a braking event and the desired output parameter value is a desired deceleration value, the computer-implemented method further including:
<claim-text>sending a braking command to a braking mechanism of the machine, the braking command having a braking command value determined based on the desired deceleration value, a velocity value, an elevation value, a payload value, and the feedback control loop; and</claim-text>
<claim-text>determining that the machine requires maintenance by comparing the braking command value to a historical braking command value determined based on a historical desired deceleration value, a historical velocity value, a historical pitch value, and a historical payload value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The computer-implemented method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the event is an acceleration event and the desired output parameter value is a desired acceleration value, the computer-implemented method further including:
<claim-text>sending a fuel injection command to a fuel injection mechanism of the machine, the fuel injection command having a fuel injection command value determined based on the desired acceleration value, a velocity value, an elevation value, a payload value, and the feedback control loop; and</claim-text>
<claim-text>determining that the machine requires maintenance by comparing the fuel injection command value to a historical fuel injection command value determined based on a historical desired acceleration value, a historical velocity value, a historical elevation value, and a historical payload value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The computer-implemented method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining that the machine requires maintenance includes:
<claim-text>determining that the command value determined based on the desired output parameter value and the one or more machine state parameter values exceeds a threshold command value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The computer-implemented method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining that the machine requires maintenance includes:
<claim-text>determining a command value trend by comparing the command value to the one or more historical command values, the one or more historical command values each corresponding to a previous execution of the event by the machine; and</claim-text>
<claim-text>identifying a projected machine maintenance date based on the command value trend.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The computer-implemented method according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein determining the projected machine maintenance date includes:
<claim-text>generating an equation that represents the command value trend by applying one or more curve fitting algorithms to the command value and the one or more historical command values; and</claim-text>
<claim-text>identifying the projected machine maintenance date as a date when the equation representing the command value trend exceeds a threshold command value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The computer-implemented method according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein determining the projected machine maintenance date includes:
<claim-text>generating an equation that represents the command value trend by applying one or more curve fitting algorithms to the command value and the one or more historical command values;</claim-text>
<claim-text>comparing a rate of change of the equation representing the command value trend to a command value trend expected rate of change; and</claim-text>
<claim-text>identifying the projected machine maintenance date as a date when the rate of change of the equation representing the command value trend exceeds the command value trend expected rate of change by a threshold rate of change value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A system for analyzing machine performance comprising:
<claim-text>one or more processors; and</claim-text>
<claim-text>a memory storing instructions that, when executed, enable the one or more processors to:
<claim-text>identify an event for a machine that includes a desired output parameter value;</claim-text>
<claim-text>send a command to a component of the machine, the command having a command value determined based on the desired output parameter value, one or more machine state parameter values, and a feedback control loop; and</claim-text>
<claim-text>determine that the machine requires maintenance by comparing the command value to one or more historical command values each determined based on a historical desired output parameter value and one or more historical machine state parameter values, the historical desired output parameter value and the one or more historical machine state parameter values each corresponding to the desired output parameter value and the one or more machine state parameter values.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The system according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the event is a braking event and the desired output parameter value is a desired deceleration value, the instructions further enabling the one or more processors to:
<claim-text>send a braking command to a braking mechanism of the machine, the braking command having a braking command value determined based on the desired deceleration value, a velocity value, an elevation value, a payload value, and the feedback control loop; and</claim-text>
<claim-text>determine that the machine requires maintenance by comparing the braking command value to a historical braking command value determined based on a historical desired deceleration value, a historical velocity value, a historical elevation value, and a historical payload value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The system according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the event is an acceleration event and the desired output parameter value is a desired acceleration value, the instructions further enabling the one or more processors to:
<claim-text>send a fuel injection command to a fuel injection mechanism of the machine, the fuel injection command having a fuel injection command value determined based on the desired acceleration value, a velocity value, an elevation value, a payload value, and the feedback control loop; and</claim-text>
<claim-text>determine that the machine requires maintenance by comparing the fuel injection command value to a historical fuel injection command value determined based on a historical desired acceleration value, a historical velocity value, a historical elevation value, and a historical payload value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The system according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, the instructions further enabling the one or more processors to determine that the machine requires maintenance when the command value determined based on the desired output parameter value and the one or more machine state parameter values exceeds a threshold command value.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The system according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, the instructions further enabling the one or more processors to:
<claim-text>determine a command value trend by comparing the command value to the one or more historical command values, the one or more historical command values each corresponding to a previous execution of the event by the machine; and</claim-text>
<claim-text>identify a projected machine maintenance date based on the command value trend.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The system according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, the instructions further enabling the one or more processors to:
<claim-text>generate an equation that represents the command value trend by applying one or more curve fitting algorithms to the command value and the one or more historical command values; and</claim-text>
<claim-text>identify the projected machine maintenance date as a date when the equation representing the command value trend exceeds a threshold command value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The system according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, the instructions further enabling the one or more processors to:
<claim-text>generate an equation that represents the command value trend by applying one or more curve fitting algorithms to the command value and the one or more historical command values;</claim-text>
<claim-text>compare a rate of change of the equation representing the command value trend to a command value trend expected rate of change; and</claim-text>
<claim-text>identify the projected machine maintenance date as a date when the rate of change of the equation representing the command value trend exceeds the command value trend expected rate of change by a threshold rate of change value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The system according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, further including the machine, wherein the machine is an autonomous machine and include the one or more processors and the memory.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A computer-implemented method for analyzing machine performance among a plurality of machines, the computer-implemented method comprising:
<claim-text>identifying an event for a machine of the plurality of machines, the event including a desired output parameter value;</claim-text>
<claim-text>receiving a command value of a command sent to a component of the machine, the command value having been determined based on the desired output parameter value, one or more machine state parameter values, and a feedback control loop; and</claim-text>
<claim-text>determining that the machine requires maintenance based on the command value and one or more other command values generated by one or more other machines of the plurality of machines during corresponding events for the one or more other machines, the corresponding events including the desired output parameter value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The computer-implemented method according to <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the event for the machine and each of the corresponding events for the one or more other machines occur at substantially the same time within an autonomous machine event schedule.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The computer-implemented method according to <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the event is a braking event or an acceleration event.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The computer-implemented method according to <claim-ref idref="CLM-00016">claim 16</claim-ref>, the computer-implemented method further including:
<claim-text>calculating a command value rate of change of the machine based on historical command values of the machine during past occurrences of the event;</claim-text>
<claim-text>calculating command value rates of change of each of the one or more other machines based on historical command values of each of the one or more other machines during past executions of each of the corresponding events; and</claim-text>
<claim-text>determining that the machine requires maintenance based on a comparison of the command value rate of change of the machine with the command value rates of change of the one or more other machines.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The computer-implemented method according to <claim-ref idref="CLM-00019">claim 19</claim-ref>, the computer-implemented method further including:
<claim-text>determining that the machine requires maintenance when the command value rate of change of the machine exceeds a mean of the command value rates of change of the one or more other machines by a threshold amount. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
