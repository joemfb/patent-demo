<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625420-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625420</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13313773</doc-number>
<date>20111207</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>75</us-term-extension>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>26</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>370230</main-classification>
<further-classification>37039531</further-classification>
<further-classification>370401</further-classification>
</classification-national>
<invention-title id="d2e55">System and method for increasing granularity of prefix control in a computer network</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6725326</doc-number>
<kind>B1</kind>
<name>Patra et al.</name>
<date>20040400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6775737</doc-number>
<kind>B1</kind>
<name>Warkhede et al.</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6917618</doc-number>
<kind>B2</kind>
<name>Thubert et al.</name>
<date>20050700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6970971</doc-number>
<kind>B1</kind>
<name>Warkhede et al.</name>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6985483</doc-number>
<kind>B2</kind>
<name>Mehrotra et al.</name>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370389</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>8098578</doc-number>
<kind>B1</kind>
<name>Shah et al.</name>
<date>20120100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370230</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2003/0112755</doc-number>
<kind>A1</kind>
<name>McDysan</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370230</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2003/0174717</doc-number>
<kind>A1</kind>
<name>Zabarski et al.</name>
<date>20030900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370401</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2004/0013113</doc-number>
<kind>A1</kind>
<name>Singh et al.</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2004/0100950</doc-number>
<kind>A1</kind>
<name>Basu et al.</name>
<date>20040500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370389</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2004/0114568</doc-number>
<kind>A1</kind>
<name>Beverly</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370351</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2005/0111375</doc-number>
<kind>A1</kind>
<name>Ravindran et al.</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370252</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2005/0152332</doc-number>
<kind>A1</kind>
<name>Hannum et al.</name>
<date>20050700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370351</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2005/0232264</doc-number>
<kind>A1</kind>
<name>Wybenga et al.</name>
<date>20051000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370389</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2005/0254502</doc-number>
<kind>A1</kind>
<name>Choi</name>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2005/0257244</doc-number>
<kind>A1</kind>
<name>Joly et al.</name>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726  1</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00017">
<othercit>U.S. Appl. No. 60/679,184, filed May 9, 2005, entitled Systems and Methods for Use With Optimized Edge Routing, by Blair et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00018">
<othercit>Perlman, Radia, &#x201c;Interconnections Second Edition: Bridges, Routers, Switches, and Internetworking Protocols&#x201d;, Sections 12.1-12.3 pp. 299-321, Addison Wesley Longman, Inc. 2000.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00019">
<othercit>Rekhter, Y. et al., RFC 1771, &#x201c;A Border Gateway Protocol 4 (BGP-4)&#x201d;, Network Working Group, Mar. 1995, pp. 1-54.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00020">
<othercit>&#x201c;NetFlow Services Solutions Guide&#x201d;, Oct. 2004, pp. 1-72, Cisco Systems, Inc.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00021">
<othercit>&#x201c;NetFlow v9 Export Format&#x201d;, Cisco IOS Release, 2003, pp. 1-22, Cisco Systems, Inc.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00022">
<othercit>U.S. Appl. No. 10/980,550, filed Nov. 3, 2004, entitled Method and Apparatus for Automatically Optimizing Routing Operations at the Edge of a Network, by Shah et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00023">
<othercit>U.S. Appl. No. 10/631,682, filed Jul. 31, 2003, entitled Cost Minimization of Services Provided by Multiple Service Providers, by Jacobs et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00024">
<othercit>U.S. Appl. No. 11/113,629, filed Apr. 25, 2005, entitled Active Probe Path Management, by Blair et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00025">
<othercit>U.S. Appl. No. 11/113,582, filed Apr. 25, 2005, entitled Active Probe Target Management, by Metzger et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00026">
<othercit>U.S. Appl. No. 11/337,217, filed Jan. 20, 2006, entitled Link Policy Routing Based on Link Utilization, by Patel et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>26</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>370230</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370389</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370392</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370256</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370254</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370401</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>37039531</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>5</number-of-drawing-sheets>
<number-of-figures>5</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>11337195</doc-number>
<date>20060120</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>8098578</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13313773</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60679184</doc-number>
<date>20050509</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120120795</doc-number>
<kind>A1</kind>
<date>20120517</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Shah</last-name>
<first-name>Pritam</first-name>
<address>
<city>Fremont</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Jacobs</last-name>
<first-name>Philip C.</first-name>
<address>
<city>Boxborough</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Shah</last-name>
<first-name>Pritam</first-name>
<address>
<city>Fremont</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Jacobs</last-name>
<first-name>Philip C.</first-name>
<address>
<city>Boxborough</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Novak Druce Connolly Bove + Quigg LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Cisco Technology, Inc.</orgname>
<role>02</role>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Lai</last-name>
<first-name>Andrew</first-name>
<department>2411</department>
</primary-examiner>
<assistant-examiner>
<last-name>Ganguly</last-name>
<first-name>Sumitra</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">In one embodiment, a routing table of a router is populated with a plurality of prefixes. One or more performance characteristics of the plurality of prefixes are monitored. The router determines that a need exists to split a selected prefix of the plurality of prefixes. The router determines one or more boundaries upon which to split the selected prefix based on the monitored performance characteristics. The router then injects one or more more-specific prefixes into the routing table, each more-specific prefix referring to a smaller subset of nodes than the selected prefix, to split the selected prefix on the one or more boundaries to create a plurality of split prefixes. The split prefixes are controlled to optimize distribution of traffic.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="170.01mm" wi="111.34mm" file="US08625420-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="192.87mm" wi="116.67mm" orientation="landscape" file="US08625420-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="194.14mm" wi="167.89mm" orientation="landscape" file="US08625420-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="236.47mm" wi="163.41mm" orientation="landscape" file="US08625420-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="203.12mm" wi="119.21mm" orientation="landscape" file="US08625420-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="191.01mm" wi="124.97mm" file="US08625420-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">RELATED APPLICATION</heading>
<p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 11/337,195, now issued as U.S. Pat. No. 8,098,578, entitled SYSTEM AND METHOD FOR INCREASING GRANULARITY OF PREFIX CONTROL IN A COMPUTER NETWORK, filed by Shah et al., on Jan. 20, 2006, the contents of which are hereby incorporated in their entirety. U.S. patent application Ser. No. 11/337,195 claims the benefit of U.S. Provisional Application Ser. No. 60/679,184, entitled SYSTEMS AND METHODS FOR USE WITH OPTIMIZED EDGE ROUTING, filed by Blair et al. on May 9, 2005, the contents of which are hereby incorporated in their entirety.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">1. Field of the Invention</p>
<p id="p-0004" num="0003">The present invention relates to computer networks and more particularly to the control and management of prefixes in a computer network.</p>
<p id="p-0005" num="0004">2. Background Information</p>
<p id="p-0006" num="0005">A computer network is a geographically distributed collection of nodes interconnected by communication links and segments for transporting data between end nodes, such as personal computers and workstations (&#x201c;hosts&#x201d;). Many types of networks are available, with the types ranging from local area networks (LANs) to wide area networks (WANs). LANs typically connect the nodes over dedicated private communications links located in the same general physical location, such as a building or campus. WANs, on the other hand, typically connect geographically dispersed nodes over long-distance communications links, such as common carrier telephone lines, optical lightpaths, synchronous optical networks (SONET), or synchronous digital hierarchy (SDH) links. The Internet is an example of a WAN that connects disparate networks throughout the world, providing global communication between nodes on various networks. The nodes typically communicate over the network by exchanging discrete frames or packets of data according to predefined protocols, such as the Transmission Control Protocol/Internet Protocol (TCP/IP). In this context, a protocol consists of a set of rules defining how the nodes interact with each other. Computer networks may be further interconnected by an intermediate network node, such as a router, to extend the effective &#x201c;size&#x201d; of each network.</p>
<p id="p-0007" num="0006">Since management of interconnected computer networks can prove burdensome, smaller groups of computer networks may be maintained as routing domains or autonomous systems. The networks within an autonomous system (AS) are typically coupled together by conventional &#x201c;intradomain&#x201d; routers configured to execute intradomain routing protocols, and are generally subject to a common authority. To improve routing scalability, a service provider (e.g., an ISP) may divide an AS into multiple &#x201c;areas.&#x201d; It may be desirable, however, to increase the number of nodes capable of exchanging data; in this case, interdomain routers executing interdomain routing protocols are used to interconnect nodes of the various ASes. Moreover, it may be desirable to interconnect various ASes that operate under different administrative domains. As used herein, an AS or an area is generally referred to as a &#x201c;domain,&#x201d; and a node that interconnects different domains together is generally referred to as a &#x201c;border node&#x201d; or &#x201c;border router.&#x201d; In general, the autonomous system may be an enterprise network, a service provider or any other network or subnetwork. Furthermore, the autonomous system may be multi-homed, i.e., comprising a plurality of different peer (neighboring) connections to one or more other routing domains or autonomous systems.</p>
<p id="p-0008" num="0007">The administrative entity of an AS typically configures network nodes within the AS to route packets using predetermined intradomain routing protocols, or interior gateway protocols (IGPs), such as conventional link-state protocols and distance-vector protocols. These IGPs define the manner with which routing information and network-topology information is exchanged and processed in the AS. Examples of link-state and distance-vectors protocols known in the art are described in Sections 12.1-12.3 of the reference book entitled <i>Interconnections, Second Edition</i>, by Radia Perlman, published January 2000, which is hereby incorporated by reference as though fully set forth herein.</p>
<p id="p-0009" num="0008">Link-state protocols, such as the Open Shortest Path First (OSPF) protocol, use cost-based routing metrics to determine how data packets are routed in an AS. As understood in the art, a relative cost value may be associated with a network node to determine the relative ease/burden of communicating with that node. For instance, the cost value may be measured in terms of the average time for a data packet to reach the node, the amount of available bandwidth over a communication link coupled to the node, the monetary cost per amount of bandwidth, etc. Network nodes in the AS generate a set of cost values associated with their neighboring nodes. Each set of cost values is then &#x201c;advertised&#x201d; (flooded) to the other interconnected nodes. Using the advertised cost values, each node can generate a consistent &#x201c;view&#x201d; of the network topology, thereby enabling the nodes to determine lowest-cost routes within the AS.</p>
<p id="p-0010" num="0009">Distance-vector protocols, such as the Interior Gateway Routing Protocol (IGRP) or Routing Information Protocol (RIP), use distance-based routing metrics to determine how data packets are routed in an AS. A network node may associate a distance metric with each of its interconnected nodes in the AS. For example, the distance metric may be based on, e.g., a number of hops between a pair of nodes or an actual distance separating the nodes. Operationally, the network nodes determine distances to reachable nodes in the AS and communicate these distance metrics to their neighboring nodes. Each neighboring node augments the received set of distance metrics with its own distance measurements and forwards the augmented set of metrics to its neighbors. This process is continued until each node receives a consistent view of the network topology.</p>
<p id="p-0011" num="0010">An intermediate network node often stores its routing information in a routing table maintained and managed by a routing information base (RIB). The routing table is a searchable data structure in which network addresses are mapped to their associated routing information. However, those skilled in the art will understand that the routing table need not be organized as a table, and alternatively may be another type of searchable data structure. Although the intermediate network node's routing table may be configured with a predetermined set of routing information, the node also may dynamically acquire (&#x201c;learn&#x201d;) network routing information as it sends and receives data packets. When a packet is received at the intermediate network node, the packet's destination address may be used to identify a routing table entry containing routing information associated with the received packet. Among other things, the packet's routing information indicates the packet's next-hop address.</p>
<p id="p-0012" num="0011">A plurality of interconnected ASes may be configured to exchange routing and reachability information among neighboring interdomain routers of the systems in accordance with a predetermined external gateway protocol, such as the Border Gateway Protocol (BGP). The BGP protocol is well known and generally described in Request for Comments (RFC) 1771, entitled <i>A Border Gateway Protocol </i>4 (BGP-4), published March 1995, which is hereby incorporated by reference in its entirety. An adjacency is a relationship formed between selected neighboring (peer) routers for the purpose of exchanging routing information messages and abstracting the network topology. The routing information exchanged by BGP peer routers typically includes destination address prefixes, i.e., the portions of destination addresses used by the routing protocol to render routing (&#x201c;next hop&#x201d;) decisions. Examples of such destination addresses include IP version 4 (IPv4) and version 6 (IPv6) addresses. BGP generally operates over a reliable transport protocol, such as TCP, to establish a TCP connection/session. To implement the BGP protocol, each AS includes at least one border node through which it communicates with other, interconnected ASes. Because data packets enter and exit the AS through the border node, the border node is said to be located at the &#x201c;edge&#x201d; of the AS.</p>
<p id="p-0013" num="0012">The BGP protocol generally facilitates policy-based routing in which an administrative entity places restrictions on inter-AS routing operations. For example, the administrator of a company's AS may employ a BGP routing policy where network traffic leaving the AS is not permitted to enter a competitor's network, even if the competitor provides an otherwise acceptable routing path. BGP policies typically do not depend on the cost-based or distance-based routing metrics used with interior gateway protocols. Instead, the BGP policies rely on AS path-vector information. More specifically, the BGP protocol enables a plurality of interconnected ASes to exchange network topology information. Using this topology information, each AS can derive &#x201c;paths&#x201d; to the other reachable ASes, each path defining a logical sequence of ASes. For example, a path between an AS<b>1</b> and an AS<b>3</b> may be represented by the sequence {AS<b>1</b>, AS<b>2</b>, AS<b>3</b>} when only AS<b>2</b> intervenes. Based on the content of these AS sequences, the BGP protocol may filter those paths that do not coincide with the administrator's policies. As such, inter-AS routing operations are performed using only the &#x201c;best paths&#x201d; that satisfy the BGP policies.</p>
<p id="p-0014" num="0013">Because BGP policies are applied to sequences of ASes, the policies are not able to optimize inter-AS routing in other respects, such as optimizing bandwidth utilization or minimizing cost or distance metrics. Furthermore, interior gateway protocols cannot remedy these deficiencies in the BGP protocol because they do not scale well when applied to a large number of network nodes spanning multiple ASes. For instance, the process of exchanging cost-based or distance-based routing metrics among a large number of network nodes would not only consume an unreasonable amount of network bandwidth, but also would consume an unacceptable amount of processing resources for processing those metrics to generate a convergent view of the network topology.</p>
<p id="p-0015" num="0014">To address the limitations of conventional routing protocols, network administrators sometimes implement additional optimizations to improve network performance. For example, a load-balancing or cost-minimizing procedure may be used in conjunction with traditional routing protocols to redistribute data flows entering or exiting a multi-homed routing domain or AS. In some networks, border nodes located at edges of ASes, e.g., between an enterprise network and one or more Internet Service Providers (ISPs), may be configured as Optimized Edge Routers (OERs). Here each OER may be configured to periodically select an Optimal Exit Link (OEL) to each ISP for a given destination prefix (a monitored and/or controlled prefix) based on performance, load, cost, and service level agreements (SLAs) associated with connections to the ISP. Notably, a prefix, as defined generally herein, refers to a subset of nodes within the computer network. Ultimately, the end result for the enterprise network is improved Internet performance, better load distribution, and/or lower costs for Internet connections. These additional procedures may require the border nodes (OERs) to collect various network statistics associated with the data flows. An exemplary software application that may be used to collect the network statistics at the border nodes is NetFlow&#x2122; by Cisco Systems, Incorporated, which is described in more detail in the technical paper entitled <i>Netflow Services Solutions Guide</i>, published September 2002, and is hereby incorporated by reference as though fully set forth herein.</p>
<p id="p-0016" num="0015">Techniques that may be used to select the OEL for the monitored prefix include passive monitoring and/or active probing. Passive monitoring relies on gathering information from OERs learned from monitoring conventional user traffic, such as throughput, timing, latency, packet loss, reachability, etc. For example, selected interfaces at one or more network nodes monitor incoming and outgoing data flows and collect various statistics for the monitored flows. Notably, interfaces may include physical interfaces, such as a port on a network interface card, and/or logical interfaces, such as virtual private networks (VPN) implemented over multiple physical interfaces. Each node stores address prefixes and statistics for the monitored data flows, which may be periodically exported to a central management node (e.g., a &#x201c;collector&#x201d; or &#x201c;Master&#x201d;). The central management node is configured to receive prefixes and statistics (e.g., for those prefixes) from a plurality of different network nodes. A record format that may be used to export the raw prefixes and statistics is described in the technical paper entitled <i>Netflow v</i>9 <i>Export Format</i>, which is hereby incorporated by reference in its entirety. Further, a more sophisticated interaction (e.g., a filtered and/or pre-processed information exchange) between border nodes and a Master node is described in commonly owned copending U.S. patent application Ser. No. 10/980,550, now issued as U.S. Pat. No. 8,073,968, entitled METHOD AND APPARATUS FOR AUTOMATICALLY OPTIMIZING ROUTING OPERATIONS AT THE EDGE OF A NETWORK, filed by Shah et al. on Nov. 3, 2004, the contents of which are hereby incorporated in its entirety.</p>
<p id="p-0017" num="0016">Active probing, on the other hand, relies on probe packets to measure various performance parameters associated with accessing the monitored prefix from an originating node (source). Here, the originating node may generate multiple probe packets that are then forwarded via different exit interfaces (e.g., data links) on different paths to target nodes (targets) in the monitored (destination) prefix. Upon receiving the probe packets, the targets respond to the originating node, e.g., with return packets or other known probe responses. The originating node may eventually acquire the responses and use them to measure various parameters, such as delay, loss, jitter, and reachability, etc., associated with accessing the destination prefix via the different links.</p>
<p id="p-0018" num="0017">Once the relevant statistics are obtained (e.g., at the central management node), the collected parametric (performance) information (i.e., learned from passive monitoring or active probing) is analyzed, such as either manually by a network administrator or dynamically by a software script. The analyzed information may then be used to select an OEL from among the different exits that may be used to reach the destination prefix, and/or to determine whether the data flows may be more optimally distributed. For instance, suppose an administrator desires to make more efficient use of available network bandwidth and determines that a first network interface is under-utilized and a second interface is oversubscribed. In this case, at least some data flows at the second interface may be redirected to the first interface. To effectuate such a routing change, the administrator (or software process) may, for example, make static changes to the routing tables at the first and second interfaces or may re-assign local-preference values (or other priority values) associated with the data flows.</p>
<p id="p-0019" num="0018">The selection of an OEL or best path (e.g., for a particular prefix) is generally based on one or more policies. As defined herein, a policy is any defined rule that determines the use of resources within the network. A policy may be based on a user, a device, a subnetwork, a network, or an application. For example, a router may be configured with a policy defined to route traffic destined for a particular prefix over a best path having the shortest hop count to the prefix. Alternatively, the policy may be defined to route traffic from a type of application over a best path based on the shortest delay or round trip time (RTT). Those skilled in the art will understand that other policies may be defined, such as, e.g., reachability, lowest packet loss, best mean opinion score (MOS), which provides a numerical measure of the quality of human speech at the destination end of the circuit (e.g., for Voice over IP, or VoIP), bandwidth, utilization, etc. Also, policies may be defined to select a best exit based on cost. For example, a cost minimization policy technique is described in commonly-owned copending U.S. patent application Ser. No. 10/631,682, now issued as U.S. Pat. No. 7,257,560, entitled COST MINIMIZATION OF SERVICES PROVIDED BY MULTIPLE SERVICE PROVIDERS, filed by Jacobs et al. on Jul. 31, 2003, the contents of which are hereby incorporated in its entirety.</p>
<p id="p-0020" num="0019">In addition to defining rules used to select a best path, however, policies may also be defined to govern performance characteristics for a particular prefix. Once a best path has been selected, it is important to verify that the path maintains acceptable performance characteristics, and that the current path is still, in fact, the best path. For instance, while a certain performance characteristic for a particular prefix conforms to the defined policy (i.e., over the current path), the prefix is considered to be &#x201c;in-policy,&#x201d; and traffic remains on the current (best) path. These policies often take the form of an upper (or lower) threshold on a particular performance characteristic that should not be surpassed. For example, in the case of voice traffic (e.g., voice over IP, or VoIP), a policy may be defined indicating that the RTT should be less than 50 milliseconds (ms). If the measured RTT is, e.g., 40 ms, the prefix is considered to be in-policy. In the event, however, the performance characteristic for a particular prefix does not conform to the defined policy (e.g., 60 ms), the prefix is considered to be &#x201c;out-of-policy&#x201d; (OOP), and the node may be required to select an alternate path.</p>
<p id="p-0021" num="0020">One example policy that may be applied to links (or paths) is a link utilization threshold policy, as described in commonly-owned copending U.S. patent application Ser. No. 11/337,217, entitled LINK POLICY ROUTING BASED ON LINK UTILIZATION, filed by Patel et al. on even date herewith, the contents of which are hereby incorporated in its entirety. A link utilization threshold policy (&#x201c;link policy&#x201d;) may be used to define a threshold on the amount of traffic (traffic load) one or more links may carry. Also, a link policy may define a range among a plurality of links, where each of the links must maintain a traffic load that is within a certain percentage of the traffic load for the other links (e.g., for load balancing).</p>
<p id="p-0022" num="0021">Generally, links are fixed, in that they have a certain capability (e.g., bandwidth, cost, delay, etc.) and connectivity (e.g., physical connection from a first node to a second node). Because of this, when a link goes OOP, one available solution is to redirect traffic traversing that OOP link onto one or more other links that are currently in-policy. Once certain traffic, e.g., to one or more prefixes, has been redirected from the OOP link, the link may become in-policy with less traffic. One problem associated with redirecting prefixes between links is that occasionally the available prefixes are larger (e.g., utilize more bandwidth) than necessary to effectively (optimally) redirect traffic from a link to bring it in-policy. For instance, 10 Kilobytes per second (KBps) of traffic may need to be redirected from a link for policy reasons, but the smallest existing prefix in the routing table may utilize 20 KBps. Redirecting the entire 20 KBps prefix may be inefficient and/or sub-optimal when only 10 KBps needs to be redirected.</p>
<p id="p-0023" num="0022">In addition to policy-based reasons, system administrators may desire more granular prefix control for other purposes, as will be understood by those skilled in the art. Typically, the system administrator may manually configure smaller prefixes, but this process may be cumbersome and prone to errors. These smaller prefixes may not be configured optimally, such as based on real time traffic characteristics, but instead may be configured based on arbitrary boundaries decided by the system administrator, such as a number of nodes within the prefix. For instance, certain nodes within a prefix may generate more traffic utilization than other nodes, but those nodes may all fall within one of the smaller manually configured prefixes, thus not providing the &#x201c;granular&#x201d; control desired.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0024" num="0023">The present invention is directed to a technique for dynamically increasing the granularity of prefix control in a computer network. According to the novel technique, a routing table is populated with one or more reachable prefixes, e.g., learned or configured prefixes, and performance characteristics (e.g., bandwidth, cost, delay, etc.) of the prefixes are monitored. Upon determining that a need exists for more granular prefix control (i.e., smaller prefixes), one or more boundaries may be determined upon which to divide one or more of the prefixes based on the monitored characteristics and/or need. Once the one or more boundaries are determined, the one or more prefixes may be &#x201c;split&#x201d; accordingly, e.g., by injecting more specific prefixes into the routing table, thus providing more granular prefix control (i.e., by controlling the split prefixes).</p>
<p id="p-0025" num="0024">In accordance with one aspect of the present invention, the need for granular prefix control may be determined based on a configured need or a policy-based need. A configured need may arise when there is cause (e.g., as decided by a system administrator) for monitoring and/or controlling a subset of a larger prefix, such as for optimization, applying policies, load balancing, etc. A policy-based need, on the other hand, may arise when one or more pre-defined policy-based events (e.g., out-of-policy, &#x201c;OOP,&#x201d; events) occur that would more optimally require action on prefixes that are smaller (e.g., utilizing less total bandwidth) than existing prefixes in the routing table.</p>
<p id="p-0026" num="0025">In accordance with another aspect of the present invention, boundaries may be established based on monitored characteristics of the traffic associated with existing prefixes in the routing table. A monitoring process may be configured to dynamically determine the optimal number of boundaries and their logical locations, e.g., based on the determined need. In other words, based on the monitored characteristics (e.g., bandwidth utilization or throughput for the existing prefixes), it may be determined that more specific prefixes may be apportioned from the existing prefixes to meet a particular need. Also, a user (e.g., a system administrator) may define a desired number of prefixes, for which the monitoring process may attempt to learn a corresponding number of boundaries.</p>
<p id="p-0027" num="0026">In accordance with yet another aspect of the present invention, either the system administrator or a dynamic software process may split the one or more prefixes according to the established boundaries. Prefixes may be split by injecting at least one more specific prefix into the routing table, replacing the existing prefixes with at least two more specific prefixes, creating access control lists (ACLs), etc. Notably, prior to the creation and/or management of a route to a split prefix, a &#x201c;parent lookup&#x201d; into the routing table may be performed to ensure that the split prefix is reachable over the route (e.g., over a particular exit/link). Once the one or more split prefixes have been created, granularity of prefix control has therefore been increased. For instance, a more optimal amount of bandwidth may be redirected, different policies may be applied more specifically to smaller prefixes, smaller (split) prefixes may be routed over different links, etc.</p>
<p id="p-0028" num="0027">Advantageously, the novel technique dynamically increases the granularity of prefix control in a computer network. By splitting prefixes, the novel technique provides greater control over traffic flow in the network, which allows for more optimal routing, thereby meeting many needs of policy-based routing and other administrator configured requirements. Also, by selecting prefix boundaries based on monitored characteristics, the novel technique splits prefixes according to real time traffic performance, thus providing optimal control over the traffic. Further, the dynamic nature of the novel technique alleviates the need for cumbersome manual configuration.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0029" num="0028">The above and further advantages of the invention may be better understood by referring to the following description in conjunction with the accompanying drawings in which like reference numerals indicate identically or functionally similar elements, of which:</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 1</figref> is a schematic block diagram of an exemplary computer network that may be advantageously used with the present invention;</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 2</figref> is a schematic block diagram of an exemplary node that may be advantageously used with the present invention;</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 3</figref> is a schematic block diagram of an exemplary routing table that may be used in accordance with the present invention;</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 4</figref> is a schematic block diagram of the network in <figref idref="DRAWINGS">FIG. 1</figref> with split prefixes in accordance with the present invention; and</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart illustrating a procedure for dynamically increasing the granularity of prefix control in accordance with the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF AN ILLUSTRATIVE EMBODIMENT</heading>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 1</figref> is a schematic block diagram of an exemplary computer network <b>100</b> comprising an autonomous system (AS) AS<b>1</b> (e.g., an enterprise or content provider network) interconnected to one or more destination prefixes P<b>1</b>-Pn (e.g., within one or more content consumer networks), such as, e.g., via a wide area network (WAN) (e.g., one or more ISPs). Although AS<b>1</b> is illustratively an autonomous system, those skilled in the art will appreciate that AS<b>1</b> may be configured as one or more routing domains or other networks or subnetworks. AS<b>1</b> comprises one or more network nodes, including a set of communicating border nodes (illustratively, edge or border routers, BRs) BR<b>1</b> and BR<b>2</b>, through which client communications, such as data packet traffic, can pass into and out of the AS. For example, BR<b>1</b>-BR<b>2</b> permit communication from AS<b>1</b> to/from destination prefixes P<b>1</b>-Pn (e.g., via the WAN), such as through illustrative exits (links) <b>1</b> and <b>2</b> on BR<b>1</b>, and exits <b>3</b> and <b>4</b> on BR<b>2</b>. Routing operations at the border nodes BR<b>1</b>-BR<b>2</b> may be managed by an optimized edge routing (OER) &#x201c;Master&#x201d; node, which may be connected to the border nodes by, e.g., point-to-point links or a local area network. Also, BR<b>1</b>-BR<b>2</b> may be in communication with each other, such as through illustrative links (Link A) as shown. These examples are merely representative. Those skilled in the art will understand that any number of routers, nodes, links, and exits may be used in the computer network and connected in a variety of ways, and that the view shown herein is for simplicity.</p>
<p id="p-0036" num="0035">Data packets may be communicated by the AS, destination prefixes, and WAN using predefined network communication protocols such as the Transmission Control Protocol/Internet Protocol (TCP/IP), User Datagram Protocol (UDP), Asynchronous Transfer Mode (ATM) protocol, Frame Relay protocol, Internet Packet Exchange (IPX) protocol, etc. Routing decisions within an AS may rely on predetermined &#x201c;interior&#x201d; gateway protocols (IGPs), such as conventional link-state or distance-vector protocols. In addition, data packets containing network topology information may be exchanged among ASes using &#x201c;external&#x201d; gateway protocols, such as the Border Gateway Protocol (BGP).</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 2</figref> is a schematic block diagram of an exemplary node <b>200</b> that may be advantageously used with the present invention, such as, e.g., a border node (e.g., an edge router) or a master node. The node comprises a plurality of network interfaces <b>210</b><i>a</i>-<i>n </i>(e.g., line cards), a processor <b>220</b>, and a memory <b>240</b> interconnected by a system bus <b>250</b>. The network interfaces <b>210</b> contain the mechanical, electrical and signaling circuitry for communicating data over physical links coupled to the network <b>100</b>, and also may be adapted to process the incoming and outgoing data. The network interfaces may be further configured to transmit and/or receive data using a variety of different communication protocols, including, inter alia, TCP/IP, UDP, ATM, synchronous optical networks (SONET), wireless protocols, Frame Relay, Ethernet, Fiber Distributed Data Interface (FDDI), etc. Notably, a physical network interface <b>210</b> may also be used to implement one or more virtual network interfaces, such as for virtual private network (VPN) access, known to those skilled in the art. Both physical network interfaces and virtual network interfaces (e.g., routes out of an edge router) are referred to generally herein as &#x201c;exits&#x201d; or &#x201c;links.&#x201d;</p>
<p id="p-0038" num="0037">The memory <b>240</b> comprises a plurality of storage locations that are addressable by the processor <b>220</b> and the network interfaces <b>210</b> for storing software programs and data structures associated with the present invention. The processor <b>220</b> may comprise necessary elements or logic adapted to execute the software programs and manipulate the data structures, such as routing table <b>300</b>. An operating system <b>242</b> (e.g., the Internetworking Operating System, or IOS&#x2122;, of Cisco Systems, Inc.), portions of which are typically resident in memory <b>240</b> and executed by the processor, functionally organizes the router by, inter alia, invoking network operations in support of software processes and/or services executing on the router. These software processes and/or services may include Routing Information Base (RIB) <b>245</b>, OER/Master OER Process <b>246</b>, and routing services <b>247</b>. It will be apparent to those skilled in the art that other processor and memory means, including various computer-readable media, may be used to store and execute program instructions pertaining to the inventive technique described herein.</p>
<p id="p-0039" num="0038">Routing services <b>247</b> contain computer executable instructions executed by processor <b>220</b> to perform functions provided by one or more routing protocols, such as OSPF, IS-IS, IP, BGP, etc. These functions may be configured to manage a forwarding information database (not shown) containing, e.g., data used to make forwarding decisions. The RIB <b>245</b> maintains copies of routes (paths) provided by the routing protocols, such as IGP or BGP, in order to compute best paths/routes for installation into the routing table <b>300</b>, described below.</p>
<p id="p-0040" num="0039">According to the illustrative embodiment of the present invention, the OER/Master OER Process <b>246</b> is employed by an OER node (e.g., border routers BR<b>1</b>-BR<b>2</b>) and an OER Master node (e.g., an OER Master router or Master Controller), respectively. The Master OER process <b>246</b> executing on the OER Master node communicates with border routers BR<b>1</b>-BR<b>2</b> to request, among other things, the monitoring of a set of address prefixes. The OER processes <b>246</b> executing on the border routers monitor traffic at the edge of the AS <b>1</b> and respond with, inter alia, network statistics corresponding to the monitored prefixes. Illustratively, instances of the OER process <b>246</b> execute on the network interfaces <b>210</b> as OER processes <b>211</b><i>a</i>-<i>n </i>configured to measure various types of network statistics acquired from monitored traffic. These statistics are then forwarded from the OER processes <b>211</b><i>a</i>-<i>n </i>to the OER process <b>246</b>. The statistics may correspond to various traffic measurements, such as round-trip delay times, data throughput (i.e., the amount of data transferred or received), packet loss, reachability, etc. In general, the OER processes (notably, <b>246</b> and/or <b>211</b><i>a</i>-<i>n</i>) may measure any arbitrary traffic metric, including conventional cost-based and distance-based metrics. Further, the OER Process <b>246</b> and/or <b>211</b><i>a</i>-<i>n </i>may calculate statistical averages, variances, medians, etc. of a collection of traffic measurements.</p>
<p id="p-0041" num="0040">Techniques for learning address prefixes and collecting traffic statistics (passively monitoring) are described in commonly-owned copending U.S. patent application Ser. No. 10/980,550, now issued as U.S. Pat. No. 8,073,968, entitled METHOD AND APPARATUS FOR AUTOMATICALLY OPTIMIZING ROUTING OPERATIONS AT THE EDGE OF A NETWORK, filed by Shah et al. on Nov. 3, 2004, the contents of which are hereby incorporated in its entirety. Also, techniques for actively probing (managing paths and targets of active probe packets) are described in commonly-owned copending U.S. patent application Ser. No. 11/113,629, now issued as U.S. Pat. No. 7,619,982, entitled ACTIVE PROBE PATH MANAGEMENT, filed by Blair et al. on Apr. 25, 2005, and commonly owned copending U.S. patent application Ser. No. 11/113,582, now issued as U.S. Pat. No. 7,675,861, entitled ACTIVE PROBE TARGET MANAGEMENT, filed by Metzger et al. on Apr. 25, 2005, the contents of both of which are hereby incorporated in their entirety.</p>
<p id="p-0042" num="0041">The statistics from the OER Process <b>246</b> and/or <b>211</b><i>a</i>-<i>n </i>are then processed at the Master node in accordance with the Master OER process <b>246</b>. More specifically, the Master OER process <b>246</b> analyzes the statistics and determines whether the distribution of traffic entering and/or leaving the AS<b>1</b> (or a configured subset of AS<b>1</b>) can be optimized, e.g., according to one or more policies. If so, the Master OER process may redistribute traffic routed through the border nodes by, e.g., associating new BGP local-preference values with selected traffic or statically changing the routing table contents of the border nodes, as described in detail below. In that sense, the Master OER process selects optimal exit links (OELs) (&#x201c;best exits&#x201d;) to various destination prefixes. Notably, the Master OER process <b>246</b> may be distributed among a plurality of nodes, and thus need not reside in a single OER Master node. Also, it is not necessary for a single OER Master node to contain routing processes or routing tables, other than what is necessary for communication with the border nodes. Those skilled in the art will understand that while the OER Master node and OER node (e.g., a border router) are shown as separate nodes (e.g., in <figref idref="DRAWINGS">FIG. 1</figref>), the Master and OER node may be configured within the same node. For example, a single border router (e.g., a home office router) having multiple exits/paths may both monitor the quality of its exits and select the OEL itself.</p>
<p id="p-0043" num="0042">The present invention is directed to a technique for dynamically increasing the granularity of prefix control in a computer network. According to the novel technique, a routing table is populated with one or more reachable prefixes, e.g., learned or configured prefixes, and performance characteristics (e.g., bandwidth, cost, delay, etc.) of the prefixes are monitored. Upon determining that a need exists for more granular prefix control (i.e., smaller prefixes), one or more boundaries may be determined upon which to divide one or more of the prefixes based on the monitored characteristics and/or need. Once the one or more boundaries are determined, the one or more prefixes may be &#x201c;split&#x201d; accordingly, e.g., by injecting more specific prefixes into the routing table, thus providing more granular prefix control (i.e., by controlling the split prefixes).</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 3</figref> is a schematic block diagram of an exemplary routing table <b>300</b> that may be used in accordance with the present invention. Routing table <b>300</b> is illustratively stored in memory <b>240</b> and includes one or more entries <b>325</b>, each comprising a plurality of fields for storing a reachable destination address prefix <b>3305</b> (e.g., P<b>1</b>-PN), an exit (next-hop) interface <b>310</b> and next-hop address <b>315</b> to reach that destination, and optionally other information <b>320</b>, such as an associated metric (e.g., cost) of reaching the destination, local preference values, tags, etc. As noted, the routing table <b>300</b> is illustratively maintained and managed by RIB <b>245</b>. Accordingly, RIB <b>245</b> populates the routing table <b>300</b> with learned reachable prefixes based on received advertisements (e.g., IGP, BGP, etc.), and/or with configured reachable prefixes (e.g., input by a system administrator), as will be understood by those skilled in the art.</p>
<p id="p-0045" num="0044">Assume, for example, that a destination address prefix P<b>1</b> is reachable from border router BR<b>1</b> via exit <b>1</b> through a next-hop border router BR &#x201c;X&#x201d; in another AS (e.g., within the WAN). Destination address field <b>305</b> contains the reachable address P<b>1</b>, and the exit interface and next-hop field <b>310</b> and <b>315</b>, are populated with, e.g., exit <b>1</b> and a loopback address of node BR &#x201c;X&#x201d;, respectively. Note that a loopback address of the next-hop node may be used as the next-hop address for many reasons, including, a way to avoid depending upon the availability of network interfaces of that node. The other information field <b>320</b> may contain the cost of reaching P<b>1</b>, such as the cost of all links to the reachable address, or a local preference value, or a tag, etc., according to the configuration of the routing table (e.g., an IGP, BGP, or static routing table/entry), as will be understood by those skilled in the art. Other entries <b>325</b> may contain other reachable addresses and corresponding information as shown. Notably, one or more prefixes (e.g., P<b>7</b>) may have exits through other border routers, so their exit interfaces <b>310</b> may be an internal exit (e.g., Link A) to other border routers (e.g., BR<b>2</b>). Those skilled in the art will understand that routing table <b>300</b> is merely representative and is used for illustrative purposes herein, and that other tables, table configurations, or tables for other routing protocols may be used in accordance with the present invention.</p>
<p id="p-0046" num="0045">As will be understood by those skilled in the art, a prefix may generally describe a subset of nodes in a computer network. For example, a mask length (&#x201c;mask_length&#x201d;), often denoted as &#x201c;/N,&#x201d; is a representation of the number of most significant address bits shared by nodes within a certain address prefix. Therefore, a smaller number of shared significant bits creates a prefix (e.g., /8) that is larger than a prefix created from a larger number of shared significant bits (e.g., /24). As a simple example, assume two 32-bit address prefixes, 10.10.10.0/24, and 10.10.10.10/32. Here, the /24 prefix includes host addresses 10.10.10.1 through 10.10.10.254, sharing the same first 24 significant bits (note that 0 and 255 are special addresses), while the /32 prefix only includes host address 10.10.10.10, the only shared combination of all 32 bits. Because the /32 prefix describes a smaller subset of nodes (i.e., a node with the address 10.10.10.10) than the /24 prefix (i.e., 254 hosts), the /32 prefix is &#x201c;smaller&#x201d; than (i.e., is &#x201c;more specific than&#x201d;) the /24 prefix. Also, because the address prefix 10.10.10.10/32 (i.e., node 10.10.10.10) falls within the address prefix 10.10.10.10/24 (i.e., 10.10.10.1 through 10.10.10.254), the /24 prefix is said to be a &#x201c;parent prefix&#x201d; for the /32 prefix.</p>
<p id="p-0047" num="0046">Once the routing table <b>300</b> is populated with reachable address prefixes, the prefixes may be monitored, e.g., by OER/Master OER process <b>246</b>, as described above. For example, bandwidth utilization, available bandwidth, cost, delay, loss, mean opinion score (MOS), and round trip time (RTT) for each of the prefixes may be monitored. Notably, the reachable prefixes may be configured/learned as specific prefixes or as default routes, as will be understood by those skilled in the art. Moreover, the routes for the prefixes may be IGP routes, internal BGP (iBGP) routes, external BGP (eBGP) routes, static routes, etc., as will also be understood by those skilled in the art.</p>
<p id="p-0048" num="0047">In accordance with one aspect of the present invention, the need for granular prefix control may be determined based on a configured need or a policy-based need. A configured need may arise when there is cause (e.g., as decided by a system administrator) for monitoring and/or controlling a subset of a larger prefix. For instance, an administrator may wish to load balance traffic to a particular prefix over multiple available links, or perhaps may wish to have smaller prefixes, generally, such as for optimization (e.g., it may be more efficient to optimize smaller prefixes, as will be understood by those skilled in the art). Also, the administrator may wish to apply different policies to smaller prefixes for greater control. One example is where each of the smaller prefixes is routed over an exit link (e.g., possibly different exit links) based on the different policies, such as, e.g., placing higher restrictions on the prefix utilizing the most bandwidth, routing prefixes having more sensitive traffic (e.g., Voice over IP, VoIP) over exit links with more acceptable MOS values, etc. These examples of configured needs are merely representative examples, and those skilled in the art will understand that other configured needs not mentioned here may be used in accordance with the present invention.</p>
<p id="p-0049" num="0048">A policy-based need, on the other hand, may arise when one or more pre-defined policy-based events (e.g., out-of-policy, &#x201c;OOP,&#x201d; events) occur that would more optimally require action on prefixes that are smaller (e.g., utilizing less total bandwidth) than existing prefixes in the routing table. For example, in the event that 10 Kilobytes per second (KBps) of traffic needs to be redirected for policy reasons (e.g., surpassing a bandwidth utilization threshold), but the smallest existing prefix in the routing table utilizes 20 KBps, a need may exist to split that 20 KBps prefix into two separate prefixes, each at 10 KBps, so that one split prefix may be redirected accordingly. Also for example, a prefix may have become OOP based on a maximum allowable delay for a particular link. Specifically, one portion of a particular prefix may contain the offending delay values, and as such, it may be beneficial to redirect only that portion of the prefix to a more lenient link (i.e., with less strict delay policies). Other OOP events, such as, e.g., surpassing various thresholds, access restrictions, or even partial prefix reachability loss, etc., may also benefit from the ability to have smaller portions of a particular prefix upon which policy-based routing may be administered, as will be understood by those skilled in the art. These examples of policy-based needs are also merely representative examples, and those skilled in the art will also understand that other policy-based needs not mentioned here may be used in accordance with the present invention.</p>
<p id="p-0050" num="0049">In accordance with another aspect of the present invention, boundaries may be established based on monitored characteristics of the traffic associated with existing prefixes in the routing table. A monitoring process (e.g., OER/Master OER process <b>246</b>) may be configured to dynamically determine the optimal number of boundaries and their logical locations, e.g., based on the determined need. For instance, in the event that there is a need to redirect 10 KBps of traffic, the monitoring process may be configured to locate a more specific prefix that utilizes 10 KBps (or a plurality of more specific prefixes that total 10 KBps), and create appropriate boundaries for the more specific prefix(es). The boundary (or boundaries for multiple prefixes) and logical location of the located 10 KBps traffic defines the smaller prefix(es) that may be more optimally controlled, as described herein. In other words, based on the throughput to the existing prefixes (i.e., their bandwidth utilization), it may be determined that more specific prefixes may be apportioned from the existing prefixes to meet a particular need. For example, a prefix may exist in the routing table <b>300</b>, e.g., P<b>2</b>, that is 20.20.0.0/16 (either learned or configured). By monitoring the traffic to this prefix (e.g., by OER process <b>246</b>), it is determined that 20 KBps of traffic throughput (bandwidth) flow to the prefix, 10 KBps of which flow to a small subset of the prefix, e.g., to addresses from 20.20.20.1 through 20.20.20.254. A smaller prefix (with 10 KBps of traffic) may therefore be apportioned accordingly upon the prefix boundary and location corresponding to 20.20.20.0/24.</p>
<p id="p-0051" num="0050">Another, more general need is the need to efficiently optimize traffic. Assume, for example, that a prefix exists in the routing table <b>300</b>, e.g., P<b>3</b>, that is 10.10.0.0/16. During the monitoring of traffic, the monitoring process learns of distinct traffic flows to 10.10.1.1, 10.10.2.1, and 10.10.3.1. From these three traffic flows, then, the monitoring process may determine that three separate and more specific prefixes may be formed, whose logical locations may be 10.10.1.0/24, 10.10.2.0/24, and 10.10.3.0/24, respectively. In this way, boundaries for smaller prefixes may be formed based on detected real-time traffic characteristics in the computer network, and, as those skilled in the art will appreciate, the smaller prefixes formed in this way afford greater control over specific traffic flows, i.e., traffic flowing to each of the more specific prefixes once they are split, as described below. Note that the remaining addresses not contained within one of the three more specific prefixes continue to be referenced by the parent prefix, 10.10.0.0/16 (i.e., host addresses 10.10.4.1-10.10.254.254).</p>
<p id="p-0052" num="0051">Also, a user (e.g., a system administrator) may define a desired number of prefixes, for which the monitoring process may attempt to learn a corresponding number of boundaries. For example, the system administrator may wish to load balance traffic to a particular prefix across a known number of exit links from the network (e.g., Links <b>1</b>-<b>4</b> in AS<b>1</b>). Alternatively, the administrator may simply desire to have a certain number of smaller prefixes for greater control. In either of these cases, the monitoring process (e.g., OER process <b>246</b>) may attempt to learn that configured number of smaller prefixes. Notably, the resultant boundaries and locations of the smaller prefixes may be based on a desired need, as well. For instance, for load balancing, substantially equal bandwidth utilization prefixes may be desired, while other needs (e.g., distributing the top delay offenders) may result in other prefix divisions. Those skilled in the art will understand that the above examples for boundaries and reasons for the boundaries (both based on monitored characteristics and user configuration) are merely representative, and that other boundary reasons and/or configurations are possible in accordance with the present invention.</p>
<p id="p-0053" num="0052">In accordance with yet another aspect of the present invention, either the system administrator or a dynamic software process (e.g., OER/Master OER process <b>246</b>) may split the one or more prefixes according to the established boundaries. Illustratively, prefixes may be split by injecting at least one more specific prefix into the routing table. For instance, refer again to prefix P<b>2</b> from above, which is 20.20.0.0/16, and assume that the learned boundary for a desired 10 KBps of traffic falls at 20.20.20.0/24. By injecting the smaller, more specific prefix 20.20.20.0/24 (P<b>2</b><i>a</i>, within a dashed box) into the routing table <b>300</b>, the more specific prefix is preferred for traffic to any node within that prefix than the less specific parent prefix P<b>2</b>, as will be understood by those skilled in the art. This injection essentially &#x201c;splits&#x201d; the prefix P<b>2</b> into two parts, namely, into 20.20.20.0/24 (P<b>2</b><i>a</i>) and the remaining addresses in 20.20.0.0/16 (P<b>2</b>) not included in P<b>2</b><i>a </i>(e.g., host addresses 20.20.1.1-20.20.19.254, and 20.20.21.1-20.20.254.254). Accordingly, any traffic to a destination with addresses 20.20.20.1-20.20.20.254 (i.e., P<b>2</b><i>a</i>) may be routed over a different path and controlled independently from the parent prefix (P<b>2</b>).</p>
<p id="p-0054" num="0053">Alternatively, prefixes may be split by replacing an existing prefix with at least two more specific prefixes in the routing table <b>300</b>. For example, assume that a prefix P<b>4</b> exists in the routing table <b>300</b> (not shown) that is 30.30.30.0/24. Further assume that for a reason described above, the prefix P<b>4</b> is to be split on a single boundary that divides the prefix in half, e.g., to /25. Rather than simply inserting one more specific prefix as above, the alternative method would remove the original prefix P<b>4</b>, and subsequently replace it with two more specific prefixes, namely, 30.30.30.0/25 (P<b>4</b><i>a</i>) and 30.30.30.128/25 (P<b>4</b><i>b</i>). Notably, those skilled in the art will understand that the more specific prefixes should (e.g., must) cover substantially the same scope as the original existing prefix (P<b>4</b>), otherwise routing information to certain addresses may be lost from routing table <b>300</b>. Those skilled in the art will also understand that there may be reasons (e.g., network stability, default routing preferences, parent prefix control, etc.) that prohibit the replacement of an original existing prefix with at least two more specific prefixes.</p>
<p id="p-0055" num="0054">Other methods for splitting prefixes that will be understood by those skilled in the art may be used in accordance with the present invention, and the above examples are merely representative. For instance, access control lists (ACLs) may be created for certain potions of a parent prefix, assignments may be made to groups of nodes within a prefix (e.g., virtual private networks, VPNs), etc.</p>
<p id="p-0056" num="0055">Notably, prior to the creation and/or management of a route to a split prefix, a &#x201c;parent lookup&#x201d; operation into the routing may be performed to ensure that the split prefix is reachable over the route (e.g., over a particular exit/link). The parent lookup checks whether a parent prefix (and, consequently, a more specific split prefix) is currently reachable via a selected route in routing table <b>300</b>. For instance, if P<b>2</b> is reachable via both exits <b>1</b> and <b>2</b>, then split prefix P<b>2</b><i>a </i>is also reachable via both exits <b>1</b> and <b>2</b>. If the split prefix does have a parent prefix reachable via the selected route, the split prefix may be created/managed accordingly. Otherwise, such as in the case where P<b>2</b> is not reachable via exit <b>2</b> and the attempted route for the split prefix P<b>2</b><i>a </i>is via exit <b>2</b>, an error may be returned to the Master Controller (e.g., Master OER Process <b>246</b>), e.g., to update the route (best exit) selection or for investigation by a system administrator.</p>
<p id="p-0057" num="0056">Once one or more split prefixes have been created, the granularity of prefix control will therefore be increased. For instance, a more optimal amount of bandwidth may be redirected, different policies may be applied more specifically to smaller prefixes, smaller (split) prefixes may be routed over different links, etc. Those skilled in the art will understand that the split prefixes may be controlled (e.g., managed, optimized, advertised, redirected, etc.) in the same manner as conventional prefixes, in that they are conventional prefixes, but optimally created (split) in response to monitored characteristics and/or need for greater control. For example, refer to the case described above with reference to prefix P<b>2</b>. Originally, P<b>2</b> utilized 20 KBps of bandwidth on a link, which for some reason (e.g., surpassing a link utilization threshold) was OOP by 10 KBps. Since P<b>2</b> in this example was the smallest prefix available on the link, P<b>2</b> may now be split into P<b>2</b><i>a </i>with 10 KBps and the remaining 10 KBps on P<b>2</b> in accordance with the present invention. With the two 10 KBps prefixes, either one may be optimally redirected to another in-policy link accordingly.</p>
<p id="p-0058" num="0057">Briefly, <figref idref="DRAWINGS">FIG. 4</figref> is a schematic block diagram of the network <b>100</b> in <figref idref="DRAWINGS">FIG. 1</figref> with split prefixes in accordance with the present invention. For example, parent prefix P<b>2</b> discussed above has been split into P<b>2</b> and P<b>2</b><i>a</i>. Illustratively, P<b>2</b><i>a </i>is shown as part of P<b>2</b> because P<b>2</b><i>a </i>is a more specific prefix than P<b>2</b>, but is still included within the scope of parent prefix P<b>2</b>. Also, P<b>4</b><i>a </i>and P<b>4</b><i>b </i>are shown as separate split prefixes because, as discussed above, they replaced their parent prefix P<b>4</b> (not shown). Other split prefixes in other configurations may be possible, and as those skilled in the art will understand, the representations in <figref idref="DRAWINGS">FIG. 4</figref> are merely representative.</p>
<p id="p-0059" num="0058">Notably, routing information for the one or more split prefixes may be distributed from the node splitting the prefix (e.g., a BR or Master controller) into the surrounding network (AS<b>1</b>). Illustratively, the scope of distribution may be limited to within the local network (AS<b>1</b>), such as, e.g., for security and/or competitive purposes. However, those skilled in the art will understand that the distribution of routing information for the split prefixes may not be limited to the local network, and may be distributed to external networks (e.g., across the WAN) for other networks. The distribution may utilize any conventional protocols, such as IGP or BGP advertisements, or may utilize specific-use protocols, such as, e.g., a protocol used to communicate between OER nodes and an OER Master controller.</p>
<p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart illustrating a procedure for dynamically increasing the granularity of prefix control in accordance with the present invention. The procedure <b>500</b> starts at step <b>505</b>, and continues to step <b>510</b>, where a routing table (e.g., routing table <b>300</b>) is populated with one or more address prefixes, such as by configuration or learning, as described above. As step <b>515</b>, a monitoring process, such as OER/Master OER process <b>246</b>, monitors the performance characteristics of the prefixes. If a need exists for a more granular prefix control in step <b>520</b>, one or more boundaries upon which to divide one or more of the prefixes are determined based on the monitored characteristics and/or need in step <b>525</b>. Once the one or more boundaries are determined, one or more prefixes may be split in step <b>530</b> according to the boundaries to create one or more split prefixes, as described above. The split prefixes may then be controlled in step <b>535</b>, thus providing greater prefix control, i.e., control of dynamically created smaller prefixes on optimally determined boundaries. The procedure may then either end, or return to step <b>515</b> to continue monitoring performance characteristics for when another need arises in step <b>520</b>.</p>
<p id="p-0061" num="0060">Advantageously, the novel technique dynamically increases the granularity of prefix control in a computer network. By splitting prefixes, the novel technique provides greater control over traffic flow in the network, which allows for more optimal routing, thereby meeting many needs of policy-based routing and other administrator configured requirements. Also, by selecting prefix boundaries based on monitored characteristics, the novel technique splits prefixes according to real time traffic performance, thus providing optimal control over the traffic. Further, the dynamic nature of the novel technique alleviates the need for cumbersome manual configuration.</p>
<p id="p-0062" num="0061">While there has been shown and described an illustrative embodiment that dynamically increases the granularity of prefix control in a computer network, it is to be understood that various other adaptations and modifications may be made within the spirit and scope of the present invention. For example, the invention has been shown and described herein for use with OER processes. However, the invention in its broader sense is not so limited, and may, in fact, be used with other route optimization processes known to those skilled in the art. Also, while the invention has been shown and described using representative IPv4 32-bit addresses, the invention may, in fact, be used with IPv6 128-bit addresses, or other address formats, as will be understood by those skilled in the art.</p>
<p id="p-0063" num="0062">The foregoing description has been directed to specific embodiments of this invention. It will be apparent, however, that other variations and modifications may be made to the described embodiments, with the attainment of some or all of their advantages. For instance, it is expressly contemplated that the teachings of this invention can be implemented as software, including a computer-readable medium having program instructions executing on a computer, hardware, firmware, or a combination thereof. Also, electromagnetic signals may be generated to carry computer executable instructions that implement aspects of the present invention over, e.g., a wireless data link or a data network, such as the Internet. Accordingly this description is to be taken only by way of example and not to otherwise limit the scope of the invention. Therefore, it is the object of the appended claims to cover all such variations and modifications as come within the true spirit and scope of the invention.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method comprising:
<claim-text>populating a routing table of a router with a plurality of prefixes;</claim-text>
<claim-text>monitoring one or more performance characteristics of the plurality of prefixes in the routing table;</claim-text>
<claim-text>determining, by the router, that a need exists to split a selected prefix of the plurality of prefixes;</claim-text>
<claim-text>determining one or more boundaries upon which to split the selected prefix based on the monitored one or more performance characteristics;</claim-text>
<claim-text>injecting one or more more-specific prefixes into the routing table, each more-specific prefix referring to a smaller subset of nodes within a computer network than the selected prefix, the one or more more-specific prefixes chosen to split the selected prefix on the one or more boundaries to create a plurality of split prefixes; and</claim-text>
<claim-text>controlling the split prefixes to optimize distribution of traffic in the computer network.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the need is based on a desire to load balance traffic associated with the selected prefix over a plurality of links in the computer network.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the need is based on a desire to route different portions of the selected prefix based on different policies.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the need is based on one portion of the selected prefix becoming out of policy (OOP) for a particular policy, while one or more other portions of the selected prefix are still in policy for the particular policy.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the determining one or more boundaries determines a number of boundaries based upon the need.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more more-specific prefixes are a plurality of more-specific prefixes, and the injecting further comprises:
<claim-text>removing the selected prefix from the routing table.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more more-specific prefixes are preferred over the selected prefix, and the injecting further comprises:
<claim-text>maintaining the selected prefix in the routing table for use by traffic that is not associated with any of the one or more more-specific prefixes.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the controlling further comprises:
<claim-text>advertising the plurality of split prefixes to one or more other nodes in the computer network.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more performance characteristics comprise delay.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more performance characteristics comprise bandwidth utilization or availability.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>performing a parent lookup operation prior to injecting the one or more more-specific prefixes into the routing table.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. An apparatus comprising:
<claim-text>one or more network interfaces;</claim-text>
<claim-text>a processor coupled to the one or more network interfaces and configured to execute one or more software processes; and</claim-text>
<claim-text>a memory configured to store a routing table and an optimized edge routing (OER) process executable by the processor, the OER process when executed operable to:
<claim-text>monitor one or more performance characteristics of a plurality of prefixes maintained in the routing table and accessible over the one or more network interfaces;</claim-text>
<claim-text>determine one or more boundaries upon which to split a selected prefix based on the monitored one or more performance characteristics;</claim-text>
<claim-text>inject one or more more-specific prefixes into the routing table, each more-specific prefix to refer to a smaller subset of nodes within a computer network than the selected prefix, the one or more more-specific prefixes chosen to split the selected prefix on the one or more boundaries to create a plurality of split prefixes; and</claim-text>
<claim-text>control the split prefixes to optimize distribution of traffic in the computer network.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The apparatus of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the OER process when executed is further operable to:
<claim-text>determine that a need exists to split a selected prefix of the plurality of prefixes, the need based on a desire to load balance traffic associated with the selected prefix over a plurality of links in the computer network.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The apparatus of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the OER process when executed is further operable to:
<claim-text>determine that a need exists to split a selected prefix of the plurality of prefixes, the need based on one portion of the selected prefix becoming out of policy (OOP) for a particular policy while one or more other portions of the selected prefix are still in policy for the particular policy.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The apparatus of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the one or more more-specific prefixes are a plurality of more-specific prefixes, and wherein the OER process when executed is further operable to:
<claim-text>remove the selected prefix from the routing table in connection with the injection of the one or more more-specific prefixes into the routing table.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The apparatus of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the OER process when executed is further operable to:
<claim-text>in connection with the injection of the one or more more-specific prefixes into the routing table, maintain the selected prefix in the routing table for use by traffic that is not associated with any of the one or more more-specific prefixes.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The apparatus of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the OER process when executed is further operable to:
<claim-text>advertise the plurality of split prefixes to one or more other nodes in the computer network.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. Software stored on one or more non-transitory computer readable media, the software when executed operable to:
<claim-text>monitor one or more performance characteristics of a plurality of prefixes maintained in a routing table;</claim-text>
<claim-text>determine that a need exists to split a selected prefix of the plurality of prefixes;</claim-text>
<claim-text>determine one or more boundaries upon which to split the selected prefix based on the monitored one or more performance characteristics;</claim-text>
<claim-text>inject one or more more-specific prefixes into the routing table, each more-specific prefix referring to a smaller subset of nodes than the selected prefix, the one or more more-specific prefixes chosen to split the selected prefix on the one or more boundaries to create a plurality of split prefixes; and</claim-text>
<claim-text>control the split prefixes to optimize distribution of traffic.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The software stored on one or more non-transitory computer readable media of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the one or more more-specific prefixes are a plurality of more-specific prefixes, and the software operable to inject the one or more more-specific prefixes into the routing table is further operable to remove the selected prefix from the routing table.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The software stored on one or more non-transitory computer readable media of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the software operable to inject the one or more more-specific prefixes into the routing table is further operable to maintain the selected prefix in the routing table for use by traffic that is not associated with any of the one or more more-specific prefixes.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. A method comprising:
<claim-text>populating a routing table of a router with a plurality of prefixes;</claim-text>
<claim-text>monitoring one or more performance characteristics of the plurality of prefixes in the routing table;</claim-text>
<claim-text>determining, by the router, that a need exists to split a selected prefix of the plurality of prefixes;</claim-text>
<claim-text>determining, by the router, one or more boundaries upon which to split the selected prefix based on the monitored one or more performance characteristics; and</claim-text>
<claim-text>splitting the selected prefix on the one or more boundaries to create a plurality of split prefixes.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the one or more more-specific prefixes are a plurality of more-specific prefixes, and the splitting further comprises:
<claim-text>injecting the one or more more-specific prefixes into the routing table.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The method of <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein the injecting further comprises:
<claim-text>removing the selected prefix from the routing table.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The method of <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein the one or more more-specific prefixes are preferred over the selected prefix, and the injecting further comprises:
<claim-text>maintaining the selected prefix in the routing table.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref>, further comprising:
<claim-text>advertising the plurality of split prefixes to one or more other nodes in the computer network.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref>, further comprising:
<claim-text>performing a parent lookup operation prior to injecting the one or more more-specific prefixes into the routing table.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
