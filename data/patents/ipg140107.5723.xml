<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626826-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626826</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13043685</doc-number>
<date>20110309</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2010-110461</doc-number>
<date>20100512</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>137</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>16</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>709203</main-classification>
</classification-national>
<invention-title id="d2e71">Terminal apparatus, electronic apparatus, and access key assignment method and program</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5258748</doc-number>
<kind>A</kind>
<name>Jones</name>
<date>19931100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345172</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6993721</doc-number>
<kind>B2</kind>
<name>Rosin et al.</name>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715738</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7065188</doc-number>
<kind>B1</kind>
<name>Mei et al.</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>379 8823</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7379965</doc-number>
<kind>B2</kind>
<name>Sherwood et al.</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709203</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>7721222</doc-number>
<kind>B1</kind>
<name>Shaik</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715773</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2002/0107888</doc-number>
<kind>A1</kind>
<name>Chiu et al.</name>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707513</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2003/0115167</doc-number>
<kind>A1</kind>
<name>Sharif et al.</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2004/0199871</doc-number>
<kind>A1</kind>
<name>Lee</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715513</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2005/0193328</doc-number>
<kind>A1</kind>
<name>Agrawala et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715513</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2006/0209035</doc-number>
<kind>A1</kind>
<name>Jenkins et al.</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345172</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2007/0024589</doc-number>
<kind>A1</kind>
<name>Fux et al.</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345171</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2007/0080954</doc-number>
<kind>A1</kind>
<name>Griffin et al.</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345173</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2007/0168588</doc-number>
<kind>A1</kind>
<name>Elizarov et al.</name>
<date>20070700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710 67</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2007/0239425</doc-number>
<kind>A1</kind>
<name>Fux</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>704  3</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2009/0316202</doc-number>
<kind>A1</kind>
<name>Ueda</name>
<date>20091200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  115</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2010/0005463</doc-number>
<kind>A1</kind>
<name>Chang et al.</name>
<date>20100100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717178</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2010/0115159</doc-number>
<kind>A1</kind>
<name>Cookson</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710 67</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2010/0122213</doc-number>
<kind>A1</kind>
<name>Chen</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715827</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2010/0149592</doc-number>
<kind>A1</kind>
<name>Yoshida</name>
<date>20100600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  115</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2010/0251125</doc-number>
<kind>A1</kind>
<name>Kim et al.</name>
<date>20100900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715735</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2010/0333034</doc-number>
<kind>A1</kind>
<name>Carlson et al.</name>
<date>20101200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715835</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>JP</country>
<doc-number>2007-280028</doc-number>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>12</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>715513</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715827</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715835</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345172</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345173</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707  1</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707513</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709203</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>15</number-of-drawing-sheets>
<number-of-figures>18</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110282935</doc-number>
<kind>A1</kind>
<date>20111117</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Fujii</last-name>
<first-name>Hironori</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Fujii</last-name>
<first-name>Hironori</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Oblon, Spivak, McClelland, Maier &#x26; Neustadt, L.L.P.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Sony Corporation</orgname>
<role>03</role>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Hussain</last-name>
<first-name>Imad</first-name>
<department>2451</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A terminal apparatus includes a communication unit and a controller. The communication unit receives information of a web page from a web server. The controller extracts commands included in the information of the web page by analyzing the received information of the web page, and assigns access key functions to the extracted commands.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="182.63mm" wi="126.41mm" file="US08626826-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="172.64mm" wi="147.32mm" file="US08626826-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="188.64mm" wi="178.39mm" file="US08626826-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="202.95mm" wi="125.31mm" file="US08626826-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="211.16mm" wi="175.68mm" file="US08626826-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="200.24mm" wi="177.04mm" file="US08626826-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="270.34mm" wi="134.87mm" file="US08626826-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="260.86mm" wi="144.36mm" file="US08626826-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="194.73mm" wi="138.26mm" file="US08626826-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="222.67mm" wi="82.38mm" file="US08626826-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="106.26mm" wi="62.65mm" file="US08626826-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="275.84mm" wi="180.51mm" orientation="landscape" file="US08626826-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="189.31mm" wi="170.94mm" file="US08626826-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="193.38mm" wi="180.51mm" file="US08626826-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="204.98mm" wi="138.26mm" file="US08626826-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="134.87mm" wi="176.36mm" file="US08626826-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0002" num="0001">1. Field of the Invention</p>
<p id="p-0003" num="0002">The present invention relates to a technology for assigning access key functions to commands in a web page to be displayed on a screen by a web browser or commands or the like in a window to be displayed by a Graphical User Interface (GUI) application.</p>
<p id="p-0004" num="0003">2. Description of the Related Art</p>
<p id="p-0005" num="0004">For example, when commands such as &#x201c;OK button&#x201d; and &#x201c;Cancel button&#x201d; are displayed in a web page, access key functions may be assigned to the commands such as &#x201c;OK button&#x201d; and &#x201c;Cancel button&#x201d;.</p>
<p id="p-0006" num="0005">For example, when (O) appears next to characters &#x201c;OK&#x201d; of &#x201c;OK button&#x201d; displayed in a web page, it indicates that &#x201c;O&#x201d; input key on a keyboard is an access key to &#x201c;OK button&#x201d;. In this case, a user can select &#x201c;OK button&#x201d; by simultaneously pressing the &#x201c;O&#x201d; input key and other specific input key (e.g., Alt key), for example.</p>
<p id="p-0007" num="0006">In this way, when the access key function is assigned to the commands such as &#x201c;OK button&#x201d;, a user can select various commands by operating input keys on the keyboard without using a pointing device such as a mouse.</p>
<p id="p-0008" num="0007">Now, when an access key function is assigned to a command in a web page, an access key attribute of Hyper Text Markup Language (HTML) is employed. However, in fact, there exist a large number of web pages in which the access key attribute is not utilized. In this case, naturally, a user may not be able to utilize an access key function.</p>
<p id="p-0009" num="0008">In Japanese Patent Application Laid-open No. 2007-280028 (Paragraphs [0026] to [0033], [0040] to [0050], FIG. 3, FIG. 7; hereinafter, referred to as Patent Document 1), a technology that enables a user to arbitrarily set or change a shortcut key (access key) is provided. In the technology described in Patent Document 1, a user first enters setting/change of a shortcut key on a setting page of the shortcut key (access key) to be displayed on a screen of a client terminal. A web application 102 of an image forming apparatus 100 generates HTML data in which the setting/change of the shortcut key is reflected and provides it to the client terminal.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0010" num="0009">With the technology of Patent Document 1, a user can arbitrarily set or change a shortcut key (access key). However, in the technology described in Patent Document 1, it takes time and effort for the user to set/change the shortcut key, which is troublesome to the user.</p>
<p id="p-0011" num="0010">In light of the circumstances described above, it is desirable to provide a technology of a terminal apparatus or the like capable of automatically assigning access key functions to commands in a web page.</p>
<p id="p-0012" num="0011">According to an embodiment of the present invention, there is provided a terminal apparatus including a communication unit and a controller.</p>
<p id="p-0013" num="0012">The communication unit receives information of a web page from a web server.</p>
<p id="p-0014" num="0013">The controller extracts commands included in the information of the web page by analyzing the received information of the web page, and assigns access key functions to the extracted commands.</p>
<p id="p-0015" num="0014">According to the embodiment of the present invention, by the controller, commands are automatically extracted from information of a web page, and access key functions are automatically assigned to the extracted commands. This relieves a user of time and effort to set the access key functions.</p>
<p id="p-0016" num="0015">In the terminal apparatus mentioned above, the controller may judge a type of a key input device, and assign the access key functions to the extracted commands such that input keys which the key input device has function as access keys to the extracted commands.</p>
<p id="p-0017" num="0016">In the terminal apparatus, a type of a key input device is judged, and an input key which the key input device has functions as the access key of the extracted command. This enables the user to use the access key function irrespective of which type of key input device the key input device is.</p>
<p id="p-0018" num="0017">In the terminal apparatus, the controller may preferentially assign the access key functions to the commands of high priority of the extracted commands.</p>
<p id="p-0019" num="0018">For example, when there are not many input keys to be assigned commands, such as when a terminal apparatus is a mobile phone and a key input device is a numeric keypad, there are some cases in which it is difficult to assign access key functions to all of extracted commands. For example, when a key input device is a numeric keypad, and if more than 10 commands are extracted from information of a wage page, it is difficult to assign an access key function to all of the more than 10 commands.</p>
<p id="p-0020" num="0019">Thus, in the terminal apparatus, an access key function is preferentially assigned to a command of high priority. This enables appropriate assignment of access key functions to commands extracted from a web page.</p>
<p id="p-0021" num="0020">In the terminal apparatus mentioned above, the controller may preferentially assign the access key functions to the commands whose number of executions is large.</p>
<p id="p-0022" num="0021">Since a command whose number of executions is large is a command to be often used by a user, in the terminal apparatus, the access key function is preferentially assigned to the command used often. This enables operability of the access key by the user to be improved.</p>
<p id="p-0023" num="0022">In the terminal apparatus described above, the controller may preferentially assign the access key functions on the basis of a logical structure of a markup document of the web page.</p>
<p id="p-0024" num="0023">This enables assignment of access key functions in accordance with meaning of a markup document.</p>
<p id="p-0025" num="0024">In the terminal apparatus mentioned above, the controller may also assign the access key functions to the commands such that input keys by which characters highly relevant to wording of the commands are entered function as access keys of the commands.</p>
<p id="p-0026" num="0025">This makes it easier to understand correspondence between the commands and the input keys, thus enabling the user to use the access key function without a feeling of strangeness.</p>
<p id="p-0027" num="0026">In the terminal apparatus mentioned above, the key input device may also be a key input device for which an input method of characters to be entered by the input keys can be changed.</p>
<p id="p-0028" num="0027">In this case, the controller may also switch correspondence between the commands and the input keys depending on the change in the input method, when the characters to be entered by the input keys are changed due to the change of the input method.</p>
<p id="p-0029" num="0028">For example, when a key input device is a keyboard, an input method by entering English and an input method by entering Kana (Japanese character) may be changed. In the terminal apparatus, when the character input method is changed, correspondence between the commands and the input keys is changed. With this, even if the input method is changed, an input key which inputs a character highly relevant to wording of a command can function as an access key of the command.</p>
<p id="p-0030" num="0029">With this, since easiness to understand the correspondence between commands and input keys is maintained even if the input method is changed, a user can use the access key function without a feeling of strangeness.</p>
<p id="p-0031" num="0030">In the terminal apparatus mentioned above, the controller may judge whether the access key functions have already been assigned to the commands, by analyzing the information of the web page, newly assign the access key functions, separately from the access key functions which have already been assigned, to the commands in a case where the access key functions have already been assigned, and switches between a first mode which enables the access key functions which have already been assigned to the commands and a second mode which enables the access key functions which have been newly assigned to the commands, depending on an instruction from a user.</p>
<p id="p-0032" num="0031">This enables the user to arbitrarily switch between the first mode which enables the already assigned access key functions and the second mode which enables the newly assigned access key functions.</p>
<p id="p-0033" num="0032">In the terminal apparatus mentioned above, the controller may also assign the access key functions to the extracted commands such that the access key functions do not overlap browser access key functions which are assigned to commands of a browser for displaying the web page.</p>
<p id="p-0034" num="0033">This can prevent overlapping of the browser access key functions assigned to the commands of the browser and the access key functions assigned to the commands of the web page. This can prevent at least one of the browser access key functions and the access key functions from being disabled.</p>
<p id="p-0035" num="0034">In the terminal apparatus mentioned above, the controller may control display on a screen such that a table showing correspondence between the commands to which the access key functions have been assigned and the input keys is displayed on the screen.</p>
<p id="p-0036" num="0035">The correspondence between the commands and the input keys may vary when assignment of an access key function to the command is performed (for example, when the access key function is preferentially assigned to the command of high priority). In the terminal apparatus, since a table showing correspondence between the commands and the input keys is displayed on the screen, the user can check the correspondence mentioned above by viewing the table even if the correspondence between the commands and the input keys is changed.</p>
<p id="p-0037" num="0036">According to an embodiment of the present invention, there is provided an electronic apparatus including a controller.</p>
<p id="p-0038" num="0037">The controller extracts commands included in a graphical user interface (GUI) application by analyzing a data structure of the GUI application and assigns access key functions to the extracted commands.</p>
<p id="p-0039" num="0038">In the electronic apparatus according to the embodiment of the present invention, the controller automatically extracts commands from a data structure of the GUI application, and automatically assigns the access key functions to the extracted commands. This relieves the user of time and effort to set an access key function.</p>
<p id="p-0040" num="0039">According to an embodiment of the present invention, there is provided a method of assigning access key functions, the method including receiving web page information from a web server.</p>
<p id="p-0041" num="0040">Commands included in the web page information are extracted by analyzing the received web page information.</p>
<p id="p-0042" num="0041">The access key functions are assigned to the extracted commands.</p>
<p id="p-0043" num="0042">According to an embodiment of the present invention, there is provided a method of assigning access key functions, the method including extracting commands included in a graphical user interface (GUI) application by analyzing a data structure of the GUI application.</p>
<p id="p-0044" num="0043">The access key functions are assigned to the extracted command.</p>
<p id="p-0045" num="0044">As described above, according to the embodiments of the present invention, it is possible to provide a technology of a terminal apparatus or the like which can automatically assign access key functions to commands in a web page.</p>
<p id="p-0046" num="0045">These and other objects, features and advantages of the present invention will become more apparent in light of the following detailed description of best mode embodiments thereof, as illustrated in the accompanying drawings.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram showing a web system including a terminal apparatus according to one embodiment of the present invention;</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram showing an internal structure of a terminal apparatus (PC or mobile phone);</p>
<p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. 3</figref> is a flow chart showing operation of an access key assignment program (terminal apparatus);</p>
<p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram showing one example of a table showing correspondence between commands and input keys;</p>
<p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. 5</figref> is a diagram showing one example of HTML data rewritten by an assignment program;</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 6</figref> is a diagram showing how the rewritten HTML data in <figref idref="DRAWINGS">FIG. 5</figref> is displayed on a screen of a display by a web browser;</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 7</figref> is a diagram showing one example of a table showing correspondence between commands and input keys;</p>
<p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. 8</figref> is a flow chart showing processing of an assignment program in a terminal apparatus (mobile phone) according to another embodiment of the present invention;</p>
<p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. 9</figref> is a diagram showing one example of a window to be displayed on a screen of a display by the web browser;</p>
<p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. 10</figref> is a diagram showing one example of a window to be displayed on the screen by the web browser;</p>
<p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. 11</figref> is a flow chart showing processing of an assignment program in a terminal apparatus (mobile phone) according to still another embodiment of the present invention;</p>
<p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. 12</figref> is a diagram showing one example of a frequency-of-use table;</p>
<p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. 13</figref> is a diagram showing a list of correspondence between commands and input keys to be displayed on a screen;</p>
<p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. 14</figref> is a flow chart showing processing of an access key assignment program of a terminal apparatus (PC) according to still another embodiment of the present invention;</p>
<p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. 15</figref> is a diagram showing one example of a window to be displayed on the screen of the display by a web browser;</p>
<p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. 16</figref> is a block diagram showing an internal structure of an electronic apparatus;</p>
<p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. 17</figref> is a flow chart showing processing of the electronic apparatus (access key assignment program); and</p>
<p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. 18</figref> is a diagram showing one example of a window to be displayed on a screen by a GUI application.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DESCRIPTION OF PREFERRED EMBODIMENTS</heading>
<p id="p-0065" num="0064">Hereinafter, embodiments of the present invention will be described with reference to the drawings.</p>
<heading id="h-0005" level="1">First Embodiment</heading>
<p id="h-0006" num="0000">[Overall Configuration and Configuration of Each Part of a Web System]</p>
<p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram showing a web system including terminal apparatuses <b>10</b> according to a first embodiment of the present invention.</p>
<p id="p-0067" num="0066">As shown in <figref idref="DRAWINGS">FIG. 1</figref>, a web system <b>100</b> includes the terminal apparatuses <b>10</b> such as a personal computer (PC) <b>1</b> and a mobile phone <b>2</b>, and web servers <b>50</b>.</p>
<p id="p-0068" num="0067">The PCs <b>1</b> and the web servers <b>50</b> are connected to each other by way of a network <b>60</b> such as the Internet. The mobile phone <b>2</b> and the web servers <b>50</b> are mutually connected by way of a mobile phone base station <b>70</b> and the network <b>60</b>.</p>
<p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. 2</figref> is a bock diagram showing an internal structure of the terminal apparatus <b>10</b> (PC <b>1</b> or mobile phone <b>2</b>).</p>
<p id="p-0070" num="0069">As shown in <figref idref="DRAWINGS">FIG. 2</figref>, the terminal apparatus <b>10</b> has a central processing unit (CPU) <b>11</b> (controller), a read only memory (ROM) <b>12</b>, and a random access memory (RAM) <b>13</b>, which are mutually connected by way of a bus <b>14</b>.</p>
<p id="p-0071" num="0070">In addition, the terminal apparatus <b>10</b> has an input unit <b>16</b>, a display <b>17</b>, a storage <b>18</b>, and a communication unit <b>19</b>, which are connected by way of an input/output interface <b>15</b>.</p>
<p id="p-0072" num="0071">The CPU <b>11</b> accesses the RAM <b>13</b> as necessary, and controls each part of the terminal apparatus <b>10</b> in an integrated manner, while performing various types of arithmetic processing. The RAM <b>13</b> is used as a working area of CPU <b>11</b> or the like and temporarily stores an operating system (OS), various types of programs being run, various types of data being processed, or drawing data or the like.</p>
<p id="p-0073" num="0072">The ROM <b>12</b> is a nonvolatile memory which stores Basic Input/Output System (BIOS), a boot program, and the like. When power of the terminal apparatus <b>10</b> is turned on, the CPU <b>11</b> loads the OS stored in the storage <b>18</b> to the RAM <b>13</b> according to the BIOS and the boot program stored in the ROM <b>12</b>. With this, the terminal apparatus <b>10</b> functions as an information processing apparatus.</p>
<p id="p-0074" num="0073">The input unit <b>16</b> includes a pointing device such as a mouse. The input device <b>16</b> includes a key input device such as a keyboard or a numeric keypad.</p>
<p id="p-0075" num="0074">It should be noted that when the terminal apparatus <b>10</b> is a PC <b>1</b>, the key input device is typically a keyboard. When the terminal apparatus <b>10</b> is a mobile phone <b>2</b>, the key input device is typically a numeric keypad. The input unit <b>16</b> receives various types of operation from the user, and outputs the entered operation signal to the CPU <b>11</b>.</p>
<p id="p-0076" num="0075">The display <b>17</b> includes a thin film transistor (TFT) liquid crystal display or organic electro-luminescence (OEL) display, for example. The display <b>17</b> displays images on a screen on the basis of drawing data entered through the input/output interface <b>15</b>.</p>
<p id="p-0077" num="0076">The storage <b>18</b> includes a nonvolatile memory such as a hard disk drive (HDD) or a solid state drive (SSD), for example. The storage <b>18</b> stores an OS and various application programs such as a web browser <b>21</b> and an access key assignment program <b>22</b>, which is a characteristic of the present application.</p>
<p id="p-0078" num="0077">Although the web browser <b>21</b> may include Internet Explorer&#xae;, Firefox&#xae;, Google Chrome&#xae;, Safari&#xae;, Opera&#xae;, or the like, any of them may be used for the web browser <b>21</b>.</p>
<p id="p-0079" num="0078">The access key assignment program <b>22</b> is a program which runs, accompanying the web browser <b>21</b>. Following the access key assignment program <b>22</b>, the CPU <b>11</b> extracts commands from web page information (HTML data), and assigns access key functions to the extracted commands. Details of processing to be performed by CPU <b>11</b> on the basis of the access key assignment program <b>22</b> will be described later.</p>
<p id="p-0080" num="0079">The communication unit <b>19</b> includes a network interface, a modem, or the like. The communication unit <b>19</b> connects to the network <b>60</b>, and communicates with the web server <b>50</b> in accordance with the HTTP protocol. The terminal apparatus <b>10</b> transmits a request for web page transmission to the web server <b>50</b> by way of the communication unit <b>19</b>. The terminal apparatus <b>10</b> also receives text data such as HTML data or XHTML data of a web page transmitted from the web server <b>50</b> through the communication unit <b>19</b>.</p>
<p id="h-0007" num="0000">[Description of Operation]</p>
<p id="p-0081" num="0080">Operation of the terminal apparatus <b>10</b> according to this embodiment will be described hereinafter.</p>
<p id="p-0082" num="0081">It should be noted that in the following description, the operation is based on the web browser <b>21</b> or the access key assignment program <b>22</b>. However, all of operations to be described later will be performed under the control of the CPU <b>11</b>.</p>
<p id="p-0083" num="0082"><figref idref="DRAWINGS">FIG. 3</figref> is a flow chart showing the operation of the access key assignment program <b>22</b>.</p>
<p id="p-0084" num="0083">It should be noted that in the description of the first embodiment, a case in which the terminal apparatus <b>10</b> is a PC <b>1</b> and the key input device of the input unit <b>16</b> of the terminal apparatus <b>10</b> (PC <b>1</b>) is a keyboard will be described.</p>
<p id="p-0085" num="0084">First, the access key assignment program <b>22</b> (hereinafter referred to as an assignment program <b>22</b>) judges a type of key input device (step <b>101</b>). That is to say, in step <b>101</b>, the assignment program judges whether a type of the key input device of the input unit <b>16</b> is a keyboard, a numeric keypad, or any other key input device.</p>
<p id="p-0086" num="0085">As described above, in the first embodiment, the terminal apparatus <b>10</b> is the PC <b>1</b> and the key input device of the input unit <b>16</b> of the terminal apparatus <b>10</b> (PC <b>1</b>) is a keyboard. Therefore, in step <b>101</b>, it is judged that the type of key input device is a keyboard.</p>
<p id="p-0087" num="0086">If it is judged that the type of the key input device is a keyboard, the assignment program <b>22</b> then judges whether or not web page information has been received (step <b>102</b>).</p>
<p id="p-0088" num="0087">For example, when a window <b>30</b> (see <figref idref="DRAWINGS">FIG. 6</figref>) is displayed on the screen of the display <b>17</b>, a user enters uniform resource locator (URL) in a URL input column <b>33</b> (see <figref idref="DRAWINGS">FIG. 6</figref>) in the window <b>30</b>. In this case, the web browser <b>21</b> of the PC <b>1</b> accesses the web server <b>50</b> through the network <b>60</b>, following a HyperText Transfer Protocol (HTTP protocol), and requests acquisition of a web page corresponding to the URL. In response to the acquisition request, the web server <b>50</b> transmits the web page information in a HyperText Markup Language (HTML) or eXtensible HyperText Markup Language (XHTML) format to the PC <b>1</b>.</p>
<p id="p-0089" num="0088">With this, the web page information (HTML data) from the web server <b>50</b> is received (YES of step <b>102</b>).</p>
<p id="p-0090" num="0089">When the web page information (HTML data) is received, the assignment program <b>22</b> analyzes the web page information (HTML data) and extracts a command from the HTML data (step <b>103</b>).</p>
<p id="p-0091" num="0090">In step <b>103</b>, the assignment program <b>22</b> judges whether or not the HTML data includes &#x201c;a element&#x201d;, &#x201c;button element&#x201d;, &#x201c;input element&#x201d; or the like. Then, when the HTML data includes &#x201c;a element&#x201d;, &#x201c;button element&#x201d;, &#x201c;input element&#x201d; or the like, the assignment program <b>22</b> extracts &#x201c;a element&#x201d;, &#x201c;button element&#x201d;, &#x201c;input element&#x201d;, or the like as a command.</p>
<p id="p-0092" num="0091">In the description on <figref idref="DRAWINGS">FIG. 3</figref>, a case in which &#x201c;OK button&#x201d; and &#x201c;Cancel button&#x201d; are written in the received HTML data as &#x201c;input element&#x201d;, and two commands of &#x201c;OK&#x201d; and &#x201c;Cancel&#x201d; are extracted, for convenience, will be explained.</p>
<p id="p-0093" num="0092">After extracting a command, the assignment program <b>22</b> reads out a lookup table (hereinafter simply referred to as a table) showing correspondence between the commands and input keys, from the storage <b>18</b>.</p>
<p id="p-0094" num="0093"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram showing one example of a table showing correspondence between commands and input keys.</p>
<p id="p-0095" num="0094">As shown in <figref idref="DRAWINGS">FIG. 4</figref>, &#x201c;O&#x201d; input key is associated with &#x201c;OK&#x201d;, &#x201c;C&#x201d; with &#x201c;Cancel&#x201d;, &#x201c;F&#x201d; with &#x201c;File&#x201d;, &#x201c;E&#x201d; with &#x201c;Edit&#x201d;, &#x201c;V&#x201d; with &#x201c;View&#x201d;, &#x201c;T&#x201d; with &#x201c;Tool&#x201d;, and &#x201c;H&#x201d; with &#x201c;Help&#x201d;.</p>
<p id="p-0096" num="0095">As is clearly seen from <figref idref="DRAWINGS">FIG. 4</figref>, an input key (access key) which can enter the same character as an initial letter of wording of a command is associated with the command.</p>
<p id="p-0097" num="0096">In addition to the examples shown in <figref idref="DRAWINGS">FIG. 4</figref>, a large number of commands and input keys are mutually associated and tabulated.</p>
<p id="p-0098" num="0097">After reading out the table, the assignment program <b>22</b> refers to the read table, and assigns access key functions to extracted commands (step <b>105</b>).</p>
<p id="p-0099" num="0098">For example, when &#x201c;OK&#x201d; and &#x201c;Cancel&#x201d; are extracted as a command, the assignment program <b>22</b> assigns &#x201c;O&#x201d; input key to &#x201c;OK&#x201d; and &#x201c;C&#x201d; input key to &#x201c;Cancel&#x201d;, by referring to the table and rewriting the HTML data.</p>
<p id="p-0100" num="0099">In other words, in step <b>105</b>, the assignment program <b>22</b> assigns the access key functions to the respective commands &#x201c;OK&#x201d; and &#x201c;Cancel&#x201d; by utilizing an access key attribute and rewriting a part of the HTML data.</p>
<p id="p-0101" num="0100"><figref idref="DRAWINGS">FIG. 5</figref> is a diagram showing one example of the HTML data that has been rewritten by the assignment program <b>22</b>. In <figref idref="DRAWINGS">FIG. 5</figref>, a part surrounded by a broken line represents the part rewritten by the assignment program <b>22</b>.</p>
<p id="p-0102" num="0101">When the access key function is assigned to the command, the web browser <b>21</b> analyzes the rewritten HTML data, and displays a web page in a main display area <b>32</b> in the window <b>30</b>.</p>
<p id="p-0103" num="0102"><figref idref="DRAWINGS">FIG. 6</figref> is a diagram showing how the HTML data after having been rewritten shown in <figref idref="DRAWINGS">FIG. 5</figref> is displayed by the web browser <b>21</b> on the screen of the display <b>17</b>.</p>
<p id="p-0104" num="0103">In <figref idref="DRAWINGS">FIG. 6</figref>, under characters of &#x201c;Error! Continue processing?&#x201d;, &#x201c;OK&#x201d; button and &#x201c;Cancel&#x201d; button are displayed. In this case, (O) appears next to the characters &#x201c;OK&#x201d; of &#x201c;OK button&#x201d;, and (C) appears next to the characters &#x201c;Cancel&#x201d; of &#x201c;Cancel button&#x201d;.</p>
<p id="p-0105" num="0104">A user can select &#x201c;OK button&#x201d; by simultaneously pressing &#x201c;O&#x201d; input key and other specific input key (Alt key, for example) on a keyboard. The user can also select &#x201c;Cancel button&#x201d; by simultaneously pressing &#x201c;C&#x201d; input key and other specific input key (Alt key, for example).</p>
<p id="p-0106" num="0105">As described above, in the PC <b>1</b> according to this embodiment, even if no access key function is assigned to a command in a web page, the assignment program <b>22</b> automatically extracts commands and automatically assigns the access key functions to the extracted commands. Thus, in this embodiment, the user no longer has to do any work to set the access key function, which thus relieves the user of time and effort.</p>
<p id="p-0107" num="0106">In addition, in this embodiment, when commands are &#x201c;OK&#x201d; and &#x201c;Cancel&#x201d;, &#x201c;O&#x201d; input key and &#x201c;C&#x201d; input key, which can enter initial letters O and C of &#x201c;OK&#x201d; and &#x201c;Cancel&#x201d;, serve as access keys of the &#x201c;OK&#x201d; and &#x201c;Cancel&#x201d; commands.</p>
<p id="p-0108" num="0107">That is to say, in this embodiment, the input key which can enter the character highly relevant to wording of the command functions as the access key of the command. Since this makes it easier to understand correspondence between the commands and input keys, the user can utilize access key functions without a feeling of strangeness.</p>
<heading id="h-0008" level="1">Various Modified Examples of First Embodiment</heading>
<p id="p-0109" num="0108">In the description of the first embodiment, the case in which a table is read out from the storage <b>18</b> after commands are extracted from web page information (HTL data) has been described. However, the order of the command extraction and the table read-out may be inverse.</p>
<p id="p-0110" num="0109">In the description of the first embodiment, the case in which a table is read out from the storage <b>18</b> and an access key function is assigned to commands by referring to the table has been described. However, the table mentioned above may not necessarily be needed, and even if the table is not used, it is possible to assign the access key functions to the commands.</p>
<p id="p-0111" num="0110">In this case, for example, the assignment program <b>22</b> may extract an initial letter of a command extracted from web page information (HTML data), and rewrite the HTML data on the basis of the extracted initial letter. This enables assignment of the access key function to the command even without using the table.</p>
<p id="h-0009" num="0000">(Case in which an Input Method can be Changed)</p>
<p id="p-0112" num="0111">For example, when the key input device of the terminal apparatus <b>10</b> is a keyboard, an input method by entering English and an input method by entering Kana (Japanese character) may be changed.</p>
<p id="p-0113" num="0112">In a form in which the keyboard input method can be changed, correspondence between commands and input keys which function as access keys of commands may be switched in accordance with change in the input method.</p>
<p id="p-0114" num="0113">Processing of the assignment program <b>22</b> in this case will be described with reference to <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0115" num="0114">In this case, if it is judged in step <b>101</b> that a type of the key input device is a keyboard, the assignment program <b>22</b> also judges a keyboard input method.</p>
<p id="p-0116" num="0115">If it is judged that the keyboard input method is an English input method, the assignment program <b>22</b> performs the processing described in the first embodiment mentioned above.</p>
<p id="p-0117" num="0116">If it is judged that the keyboard input method is a Kana input method, on the other hand, in step <b>103</b>, the table shown in <figref idref="DRAWINGS">FIG. 7</figref> is read out. In the example shown in <figref idref="DRAWINGS">FIG. 7</figref>, &#x201c;O (in Kana)&#x201d; is associated with &#x201c;OK&#x201d;, &#x201c;Ki (in Kana)&#x201d; with &#x201c;Cancel&#x201d;, &#x201c;Hu (in Kana)&#x201d; with &#x201c;File&#x201d;, &#x201c;E (in Kana)&#x201d; with &#x201c;Edit&#x201d;, &#x201c;Hi (in Kana)&#x201d; with &#x201c;View&#x201d;, &#x201c;Tsu (in Kana)&#x201d; with &#x201c;Tool&#x201d;, and &#x201c;He (in Kana)&#x201d; with &#x201c;Help&#x201d;.</p>
<p id="p-0118" num="0117">After reading out the table shown in <figref idref="DRAWINGS">FIG. 7</figref>, the assignment program <b>22</b> refers to the table and assigns the access key functions to the commands (step <b>105</b>). In this case, the assignment program <b>22</b> rewrites the HTML data such that the input keys shown in the right column of <figref idref="DRAWINGS">FIG. 7</figref> function as the access keys of the commands.</p>
<p id="p-0119" num="0118">With this, for example, &#x201c;O (in Kana)&#x201d; input key is assigned to &#x201c;OK&#x201d; command as an access key, and &#x201c;Ki (in Kana)&#x201d; input key is assigned to &#x201c;Cancel&#x201d; command as an access key.</p>
<p id="p-0120" num="0119">In this case, the user can select &#x201c;OK button&#x201d; by simultaneously pressing &#x201c;O (in Kana)&#x201d; input key and a specific input key (Alt key, for example). In addition, the user can select &#x201c;Cancel button&#x201d; by simultaneously pressing &#x201c;Ki (in Kana)&#x201d; input key and a specific input key.</p>
<p id="p-0121" num="0120">With the processing as described above, even when the keyboard input method is changed, an input key which can input a character highly relevant to wording of a command functions as an access key of the command. With this, since easiness to understand the correspondence between a command and an input key is maintained even if the keyboard input method is changed, a user can use the access key function without a feeling of strangeness.</p>
<p id="p-0122" num="0121">It should be noted that although the description has been given here such that the keyboard input method is judged in step <b>101</b>, the keyboard input method may be judged every time web page information is received.</p>
<heading id="h-0010" level="1">Second Embodiment</heading>
<p id="p-0123" num="0122">A second embodiment of the present invention will be described hereinafter.</p>
<p id="p-0124" num="0123">In the first embodiment described above, the case in which the terminal apparatus <b>10</b> is the PC <b>1</b> and the key input device of the input unit <b>16</b> is the keyboard has been described. On the other hand, in the second embodiment, a case in which a terminal apparatus <b>10</b> is a mobile phone <b>2</b> and a key input device of an input unit <b>16</b> is a numeric keypad will be described.</p>
<p id="p-0125" num="0124"><figref idref="DRAWINGS">FIG. 8</figref> is a flow chart showing processing of an assignment program <b>22</b> in the terminal apparatus <b>10</b> (mobile phone <b>2</b>) according to the second embodiment.</p>
<p id="p-0126" num="0125">First, the assignment program <b>22</b> judges a type of a key input device (step <b>201</b>). Since a type of the key input device of the mobile phone <b>2</b> according to this embodiment is a numeric keypad, in step <b>201</b>, the assignment program <b>22</b> judges that the key input device is a numeric keypad.</p>
<p id="p-0127" num="0126">Then, the assignment program <b>22</b> judges whether or not web page information has been received (step <b>202</b>).</p>
<p id="p-0128" num="0127">For example, when a user enters URL in a URL input column <b>33</b> in a window <b>30</b> displayed on a screen of a display <b>17</b>, a web browser <b>21</b> accesses a web server <b>50</b> through a mobile phone base station <b>70</b> and a network <b>60</b>, and requests acquisition of the web page. With this, web page information is transmitted from the web server <b>50</b> and received by the mobile phone <b>2</b> (YES of step <b>202</b>).</p>
<p id="p-0129" num="0128">When the web page information (HTML data) has been received, the assignment program <b>22</b> analyzes the web page information (HTML data), and extracts commands (step <b>203</b>). For example, the assignment program <b>22</b> extracts &#x201c;a element&#x201d;, &#x201c;button element&#x201d;, &#x201c;input element&#x201d; or the like as commands in the HTML data.</p>
<p id="p-0130" num="0129">In the description of <figref idref="DRAWINGS">FIG. 8</figref>, a case in which &#x201c;OK button&#x201d; and &#x201c;Cancel button&#x201d; are included as &#x201c;input elements&#x201d; in the HTML data and &#x201c;OK&#x201d; and &#x201c;Cancel&#x201d; are extracted as a command, for convenience, will be described.</p>
<p id="p-0131" num="0130">After extracting the commands, the assignment program <b>22</b> rewrites the HTML data such that access key functions are assigned to the extracted commands, &#x201c;OK&#x201d;, and &#x201c;Cancel&#x201d; (step <b>204</b>). In this case, any one of input keys of 0 to 9 is assigned to each of &#x201c;OK&#x201d; and &#x201c;Cancel&#x201d; commands. For example, &#x201c;1&#x201d; input key is assigned to &#x201c;OK&#x201d; command, and &#x201c;2&#x201d; input key is assigned to &#x201c;Cancel&#x201d; command.</p>
<p id="p-0132" num="0131">When the access key functions are assigned to &#x201c;OK&#x201d; and &#x201c;Cancel&#x201d; commands (when the HTML data is rewritten), the web browser <b>21</b> analyzes the rewritten HTML data, and displays it on a screen of the display <b>17</b> of the mobile phone <b>2</b>.</p>
<p id="p-0133" num="0132"><figref idref="DRAWINGS">FIG. 9</figref> is a diagram showing one example of a window <b>30</b> to be displayed on the screen of the display <b>17</b> by the web browser <b>21</b>.</p>
<p id="p-0134" num="0133">In <figref idref="DRAWINGS">FIG. 9</figref>, (1) appears next to the characters &#x201c;OK&#x201d; of &#x201c;OK button&#x201d; and (2) appears next to the characters &#x201c;Cancel&#x201d; of &#x201c;Cancel button&#x201d;.</p>
<p id="p-0135" num="0134">In this case, a user can select &#x201c;OK button&#x201d; by pressing &#x201c;1&#x201d; input key of numeric keypad of the mobile phone <b>2</b>. The user can also select &#x201c;Cancel button&#x201d; by pressing &#x201c;2&#x201d; input key of the numeric keypad.</p>
<p id="p-0136" num="0135">As described above, in the mobile phone <b>2</b> according to the second embodiment of the present invention, similar effects to the first embodiment are achieved. That is to say, even if access key functions are not assigned to commands in a web page, the assignment program <b>22</b> automatically extracts commands and automatically assigns access key functions to the extracted commands. Therefore, a user no longer has to do any work to set an access key, which thus relieves the user of time and effort.</p>
<p id="p-0137" num="0136">In addition, in the second embodiment, a type of a key input device is judged and processing for assigning an access key function corresponding to a type of the key input device is performed. That is to say, processing for assigning access key functions, which can be entered by the numeric keypad, is performed. This also enables utilization of the access key function in the numeric keypad.</p>
<heading id="h-0011" level="1">Modified Example of Second Embodiment</heading>
<p id="p-0138" num="0137">Incidentally, in some cases of web page information (HTML data) to be transmitted from a web server <b>50</b>, access key functions have already been assigned by access key attributes to commands. However, even if the access key functions have already been assigned to the commands, it is difficult to use the access key functions in some cases, depending on a type of a key input device.</p>
<p id="p-0139" num="0138">For example, as in this embodiment, even if &#x201c;O&#x201d; input key is assigned as an access key to &#x201c;OK button&#x201d; when a key input device is the numeric keypad of the mobile phone <b>2</b>, there is no input key corresponding to &#x201c;O&#x201d; input key on the numeric keypad. In this case, the user may not be able to use the access key functions.</p>
<p id="p-0140" num="0139">In a case in which the access key function has been assigned to a command of a web page (HTML data) to be transmitted from the web server <b>50</b>, most of the assigned access key functions can be entered on the keyboard.</p>
<p id="p-0141" num="0140">Then, for example, if the access key functions that can be entered on the keyboard have already been assigned to commands in a web page, the mobile phone <b>2</b> (assignment program <b>22</b>) may perform assignment processing of access key functions which can be entered on the numeric keypad.</p>
<p id="p-0142" num="0141">For example, in step <b>203</b>, an element for which the access key attribute is specified is extracted as a command.</p>
<p id="p-0143" num="0142">In this case, the assignment program <b>22</b> may assign any one of the input keys, among the input keys of 0 to 9, to the extracted command (element for which the access key attribute has been specified) (step <b>204</b>).</p>
<p id="p-0144" num="0143"><figref idref="DRAWINGS">FIG. 10</figref> is a diagram showing one example of the window <b>30</b> to be displayed on the screen by the web browser <b>21</b> when such processing is performed.</p>
<p id="p-0145" num="0144"><figref idref="DRAWINGS">FIG. 10</figref> shows one example of a case in which &#x201c;1&#x201d; and &#x201c;2&#x201d; input keys are further assigned to &#x201c;OK button&#x201d; and &#x201c;Cancel button&#x201d;, respectively, in a case in which the access key functions of &#x201c;O&#x201d; and &#x201c;C&#x201d; input keys have already been assigned to &#x201c;OK button&#x201d; and &#x201c;Cancel button&#x201d;, respectively.</p>
<p id="p-0146" num="0145">It should be noted that <figref idref="DRAWINGS">FIG. 10</figref> shows an example in which &#x201c;1&#x201d; enclosed in a thick frame is displayed as overlay of &#x201c;OK button&#x201d; and &#x201c;2&#x201d; enclosed in a thick frame is displayed as overlay of &#x201c;Cancel button&#x201d;. In <figref idref="DRAWINGS">FIG. 10</figref>, by the digits of the input keys which function as the access keys being displayed as overlay of each button, the digits of the input keys are displayed in a more visible manner to users.</p>
<p id="p-0147" num="0146">The user can select &#x201c;OK button&#x201d; by pressing &#x201c;1&#x201d; input key of the mobile phone <b>2</b>, and can also select &#x201c;Cancel button&#x201d; by pressing &#x201c;2&#x201d; input key.</p>
<p id="p-0148" num="0147">With the processing mentioned above, even when access key functions which can be entered on the keyboard have already been assigned to commands of a web page (HTML data), assignment of the access key functions which can be entered by the numeric keys is implemented.</p>
<heading id="h-0012" level="1">Third Embodiment</heading>
<p id="p-0149" num="0148">A third embodiment of the present invention will be described hereinafter.</p>
<p id="p-0150" num="0149">In the third embodiment, a case in which similar to the second embodiment, a terminal apparatus <b>10</b> is a mobile phone <b>2</b>, and a key input device of the terminal apparatus <b>10</b> is a numeric keypad will be described.</p>
<p id="p-0151" num="0150">Now, as with the case in which the terminal apparatus <b>10</b> is the mobile phone <b>2</b> and the key input device is the numeric keypad, if there are not many input keys to which a command is assigned, access key functions may not be assigned to all of extracted commands.</p>
<p id="p-0152" num="0151">In the case of the numeric keypad, input keys to which a command is assigned are 10 keys of 0 to 9 input keys. Therefore, if more than 10 commands are extracted from information (HTML data) of a web page, for example, it may be impossible to assign access key functions to all of more than 10 commands.</p>
<p id="p-0153" num="0152">Hence, in the third embodiment, an access key function is preferentially assigned to a command of high priority.</p>
<p id="p-0154" num="0153"><figref idref="DRAWINGS">FIG. 11</figref> is a flow chart showing processing of an assignment program <b>22</b> in the terminal apparatus <b>10</b> (mobile phone <b>2</b>) according to the third embodiment.</p>
<p id="p-0155" num="0154">First, the assignment program <b>22</b> judges a type of a key input device (step <b>301</b>). In the third embodiment, since the key input device is a numeric keypad, it is judged that the key input device is a numeric keypad.</p>
<p id="p-0156" num="0155">Then, the assignment program <b>22</b> judges whether or not web page information (HTML data) has been received (step <b>302</b>). If the web page information has been received (YES of step <b>302</b>), the process proceeds to next step <b>303</b>.</p>
<p id="p-0157" num="0156">In step <b>303</b>, the assignment program <b>22</b> analyzes the received HTML data, and extracts &#x201c;a element&#x201d;, &#x201c;button element&#x201d;, &#x201c;input element&#x201d; or the like as commands.</p>
<p id="p-0158" num="0157">Now, a case in which <b>12</b> elements of &#x201c;File&#x201d;, &#x201c;Edit&#x201d;, &#x201c;View&#x201d;, &#x201c;Tool&#x201d;, &#x201c;Help&#x201d;, &#x201c;Paste&#x201d;, &#x201c;Copy&#x201d;, &#x201c;Cut&#x201d;, Save&#x201d;, &#x201c;Print&#x201d;, &#x201c;Close&#x201d;, and &#x201c;Open&#x201d; are extracted as commands, for convenience, in step <b>303</b> will be described.</p>
<p id="p-0159" num="0158">Then, the assignment program <b>22</b> reads out a lookup table (hereinafter referred to as frequency-of-use table) showing correspondence between commands and the number of executions of the commands from a storage <b>18</b> (step <b>304</b>).</p>
<p id="p-0160" num="0159"><figref idref="DRAWINGS">FIG. 12</figref> is a diagram showing one example of the frequency-of-use table.</p>
<p id="p-0161" num="0160">For example, as can be seen from <figref idref="DRAWINGS">FIG. 12</figref>, &#x201c;File&#x201d; command has been executed 513 times and &#x201c;Edit&#x201d; command has been executed 500 times.</p>
<p id="p-0162" num="0161">The frequency-of-use table shown in <figref idref="DRAWINGS">FIG. 12</figref> is managed by the assignment program <b>22</b>. The assignment program <b>22</b> updates the frequency-of-use table such that every time the command is executed once, the number of executions of the command increases by 1.</p>
<p id="p-0163" num="0162">It should be noted that the executions of the command used herein includes both a case in which the command is executed by the access key function and a case in which the command is executed by any other operation (when the command is executed by operation of an arrow key, for example).</p>
<p id="p-0164" num="0163">That is to say, every time the command is executed once, the assignment program <b>22</b> performs processing of increasing the number of executions of the command in the frequency-of-use table by 1, irrespective of whatever operation executes the command.</p>
<p id="p-0165" num="0164">After reading out the frequency-of-use table from the storage <b>18</b>, the assignment program <b>22</b> refers to the frequency-of-use table, and preferentially assigns the access key function to a command whose number of executions is large, out of the commands extracted from the HTML data (step <b>305</b>).</p>
<p id="p-0166" num="0165">For example, when the 12 commands of &#x201c;File&#x201d; to &#x201c;Open&#x201d; mentioned above are extracted from the HTML data, the assignment program <b>22</b> preferentially assigns the access key functions to 10 commands &#x201c;File&#x201d; to &#x201c;Print&#x201d; whose number of executions is large. In this case, the assignment program <b>22</b> assigns the access key functions to the 10 commands of &#x201c;File&#x201d; to &#x201c;Print&#x201d; by rewriting the HTML data.</p>
<p id="p-0167" num="0166">Any one input key of 0 to 9 input keys is assigned to each of the 10 commands. In this case, the 0 to 9 input keys may be assigned in the descending order of the number of executions of the commands. Alternatively, the 0 to 9 input keys may be randomly assigned to the commands.</p>
<p id="p-0168" num="0167">The user can execute the command by pressing any input key of the 0 to 9 input keys.</p>
<p id="p-0169" num="0168">With the processing shown in <figref idref="DRAWINGS">FIG. 11</figref>, in the third embodiment, the access key functions are preferentially assigned to the commands whose number of executions is large. With this, even in the key input device such as the numeric keypad which does not have many input keys, the access key functions can be appropriately assigned to the commands.</p>
<p id="p-0170" num="0169">In addition, from the standpoint of users, since the access key functions are preferentially assigned to commands which are used often, this can improve operability of the access key by the user.</p>
<heading id="h-0013" level="1">Various Modified Examples of Third Embodiment</heading>
<p id="p-0171" num="0170">In the description of the third embodiment, the case in which the access key functions are preferentially assigned to the commands whose number of executions is large has been described. However, assignment of the access key functions is not limited to this, the access keys may be preferentially assigned based on a logical structure of the HTML data (markup document) of a wage page.</p>
<p id="p-0172" num="0171">For example, a command in a &#x201c;menu&#x201d; element in the HTML data is a command which logically represents a menu in the web page. The access key functions may also be preferentially assigned to commands extracted from the &#x201c;menu&#x201d; element. For example, when &#x201c;File&#x201d;, &#x201c;Edit&#x201d;, &#x201c;View&#x201d;, &#x201c;Tool&#x201d;, and &#x201c;Help&#x201d; are extracted as commands from the &#x201c;menu&#x201d; element, the access key functions may be preferentially assigned to these commands.</p>
<p id="p-0173" num="0172">Alternatively, when any element for which an access key attribute is specified is extracted as a command, the access key function may be preferentially assigned to the command. That is to say, since the access key attribute is specified to a command to improve convenience by a person who created the HTML data, the access key function may be preferentially assigned to such a command.</p>
<p id="p-0174" num="0173">In this way, preferential assignment of access key functions on the basis of the logical structure of the HTML data enables assignment of access key functions in accordance with meaning of the HTML data.</p>
<p id="p-0175" num="0174">Alternatively, the assignment program <b>22</b> may perform assignment processing of the access key functions on the basis of both the number of executions and the logical structure.</p>
<p id="h-0014" num="0000">(Display of List)</p>
<p id="p-0176" num="0175">Incidentally, in the case of a form in which access key functions are preferentially assigned to commands of high priority, even in the same web page, commands which are to be assigned the access key functions or input keys which function as an access key of a command may differ. This may confuse users.</p>
<p id="p-0177" num="0176">Hence, for example, the assignment program <b>22</b> (or the web browser <b>21</b>) may perform processing of displaying on a screen a list showing correspondence between a command and an input key when, for example, any specific input key other than the numeric keys is pressed.</p>
<p id="p-0178" num="0177"><figref idref="DRAWINGS">FIG. 13</figref> is a diagram showing a list of correspondence between commands and input keys to be displayed on a screen.</p>
<p id="p-0179" num="0178">The user can check the correspondence between the commands and the input keys by pressing a specific input key and viewing the list shown in <figref idref="DRAWINGS">FIG. 13</figref>. This can prevent users from feeling confused.</p>
<heading id="h-0015" level="1">Fourth Embodiment</heading>
<p id="p-0180" num="0179">A fourth embodiment of the present invention will be described hereinafter.</p>
<p id="p-0181" num="0180">It should be noted that in a description of the fourth embodiment, a case in which similar to the first embodiment described above, a terminal apparatus <b>10</b> is a PC <b>1</b> and a key input device of an input unit <b>16</b> of the terminal apparatus <b>10</b> (PC <b>1</b>) is a keyboard will be described.</p>
<p id="p-0182" num="0181">Now, HTML data of a web page which the terminal apparatus <b>10</b> receives is divided into data in which no access key attribute is specified, data in which the access key attribute has already been specified for some commands, and data in which the access key attribute has already been specified for all the commands.</p>
<p id="p-0183" num="0182">In the fourth embodiment, it is judged which of the HTML data divided into the 3 types mentioned above the received HTML data is, and different processing is performed depending on which of the 3 types of data the received HTML data is.</p>
<p id="p-0184" num="0183"><figref idref="DRAWINGS">FIG. 14</figref> is a flow chart showing processing of an access key assignment program <b>22</b> of the terminal apparatus <b>10</b> (PC <b>1</b>) according to the fourth embodiment.</p>
<p id="p-0185" num="0184">First, the assignment program <b>22</b> judges a type of a key input device (step <b>401</b>). In the fourth embodiment, the terminal apparatus <b>10</b> is a PC <b>1</b> and the key input device is a keyboard. Thus, in step <b>401</b>, it is judged that the type of the key input device is a keyboard.</p>
<p id="p-0186" num="0185">Next, the assignment program <b>22</b> judges whether or not web page information (HTML data) has been received (step <b>402</b>). If HTML data has been received, the assignment program <b>22</b> analyzes the HTML data, and extracts commands (step <b>403</b>). In step <b>403</b>, the assignment program <b>22</b> extracts &#x201c;a element&#x201d;, &#x201c;button element&#x201d;, &#x201c;input element&#x201d; or the like as commands.</p>
<p id="p-0187" num="0186">Then, the assignment program <b>22</b> judges whether or not the access key functions are assigned to at least some commands of the extracted commands (step <b>404</b>).</p>
<p id="p-0188" num="0187">If it is not the case in which the access key functions are assigned to at least some commands of the extracted commands (NO of step <b>404</b>), the assignment program <b>22</b> proceeds to next step <b>405</b>. That is to say, if the access key functions have not been assigned to any of the extracted commands, the assignment program <b>22</b> proceeds to next step <b>405</b>.</p>
<p id="p-0189" num="0188">In step <b>405</b>, the assignment program <b>22</b> reads out a table, as shown in <figref idref="DRAWINGS">FIG. 4</figref> for example, showing correspondence between commands and input keys, from a storage <b>18</b>. Then, the assignment program <b>22</b> refers to the read table, and assigns the access key functions to all commands to which no access key functions has been assigned (step <b>406</b>). In this case, the assignment program <b>22</b> assigns the access key functions to the commands by rewriting the HTML data.</p>
<p id="p-0190" num="0189">For example, in step <b>403</b>, two commands &#x201c;OK&#x201d; and &#x201c;Cancel&#x201d; for which no access key attribute has been specified are extracted from the HTML data. In this case, the assignment program <b>22</b> judges that no access key function has been assigned to all the commands (NO of step <b>404</b>), and assigns &#x201c;O&#x201d; and &#x201c;C&#x201d; input keys to the &#x201c;OK&#x201d; and &#x201c;Cancel&#x201d; commands (step <b>405</b>, <b>406</b>) (see <figref idref="DRAWINGS">FIG. 6</figref>).</p>
<p id="p-0191" num="0190">It should be noted that processing of step <b>402</b>, NO of step <b>404</b>, and step <b>406</b> in the stated order is typically similar to the processing according to the first embodiment mentioned above.</p>
<p id="p-0192" num="0191">In step <b>404</b>, in a case in which the access key functions have been assigned to at least some commands (YES of step <b>404</b>), the assignment program <b>22</b> proceeds to step <b>407</b>.</p>
<p id="p-0193" num="0192">In step <b>407</b>, it is judged whether or not the access key functions have been assigned to all commands of the extracted commands.</p>
<p id="p-0194" num="0193">In a case in which the access key functions have not been assigned to all the commands (NO of step <b>407</b>) although the access key functions have been assigned to at least some commands (YES of step <b>404</b>), the assignment program <b>22</b> proceeds to step <b>408</b>.</p>
<p id="p-0195" num="0194">That is to say, if the access key functions are assigned to some commands of the commands extracted from the HTML data but no access key functions are assigned to some other commands, the assignment program <b>22</b> proceeds to step <b>408</b>.</p>
<p id="p-0196" num="0195">In step <b>408</b>, the assignment program <b>22</b> reads out the table as shown in <figref idref="DRAWINGS">FIG. 4</figref>, for example, from the storage <b>18</b>. After reading out the table, the assignment program <b>22</b> refers to the table, and assigns the access key functions to some commands to which no access key functions have been assigned.</p>
<p id="p-0197" num="0196">For example, in step <b>403</b>, &#x201c;OK&#x201d; and &#x201c;Cancel commands for which no access key attribute has been specified are extracted, and &#x201c;File&#x201d;, &#x201c;Edit&#x201d;, &#x201c;View&#x201d;, &#x201c;Tool&#x201d;, and &#x201c;Help&#x201d; commands for which the access key attribute has already been specified are extracted.</p>
<p id="p-0198" num="0197">In this case, the assignment program <b>22</b> judges that the access key functions have not been assigned to all the commands (NO of step <b>407</b>) although the access key functions have been assigned to at least some commands (YES of step <b>404</b>).</p>
<p id="p-0199" num="0198">Then, the assignment program <b>22</b> reads out the table as shown in <figref idref="DRAWINGS">FIG. 4</figref> from the storage <b>18</b> (step <b>408</b>), and assigns the access key functions to &#x201c;OK&#x201d; and &#x201c;Cancel&#x201d; commands for which the access key attribute has not been specified (step <b>409</b>). In this case, &#x201c;O&#x201d; input key and &#x201c;C&#x201d; input key are assigned to the &#x201c;OK&#x201d; command and the &#x201c;Cancel&#x201d; command, respectively.</p>
<p id="p-0200" num="0199">With such processing, the access key functions can be assigned appropriately to the HTML data in which the access key attribute has already been specified for some commands.</p>
<p id="p-0201" num="0200">In step <b>407</b>, if it is judged that the access key function has already been assigned to all commands extracted from the HTML data (YES of step <b>407</b>), the assignment program <b>22</b> proceeds to step <b>410</b>.</p>
<p id="p-0202" num="0201">In step <b>410</b>, the assignment program <b>22</b> reads out the table, for example, as shown in <figref idref="DRAWINGS">FIG. 4</figref> from the storage <b>18</b>.</p>
<p id="p-0203" num="0202">Then, the assignment program <b>22</b> refers to the table, and newly assigns the access key functions to all the commands, separately from the access key functions which have already been assigned (step <b>411</b>).</p>
<p id="p-0204" num="0203">Then, the assignment program <b>22</b> judges whether or not there has been an instruction for switching modes, from a user (step <b>412</b>).</p>
<p id="p-0205" num="0204">It should be noted that the modes refer to a first mode in which any access key functions which have already been assigned to the commands are enabled and a second mode in which the access key functions which have been newly assigned are enabled.</p>
<p id="p-0206" num="0205">For example, when the user gives an instruction to switch modes through a mouse or keyboard (YES of step <b>412</b>), the assignment program <b>22</b> switches the modes depending on the user's instructions (step <b>413</b>).</p>
<p id="p-0207" num="0206">In this case, the assignment program <b>22</b> switches the first mode to the second mode if the mode at the time when the user gives an instruction to switch the modes is the first mode. On the other hand, the assignment program <b>22</b> switches the second mode to the first mode if the mode at the time when the user gives an instruction to switch the modes is the second mode.</p>
<p id="p-0208" num="0207">In step <b>412</b>, if there is no user's instruction to switch modes (NO of step <b>412</b>), the assignment program <b>22</b> judges whether or not the web page information (HTML data) has been received (step <b>414</b>).</p>
<p id="p-0209" num="0208">If the web page information has not been received (NO of step <b>414</b>), the assignment program <b>22</b> returns to step <b>412</b> and judges whether or not there has been the user's instruction to switch the modes. On the other hand, if the web page information has been received (YES of step <b>414</b>), the assignment program <b>22</b> returns to step <b>403</b> and performs processing from step <b>403</b>.</p>
<p id="p-0210" num="0209">For example, in step <b>403</b>, two commands of &#x201c;OK&#x201d; and &#x201c;Cancel&#x201d; for which an access key attribute has been specified are extracted. In addition, according to the specification of the access key attribute, &#x201c;Y&#x201d; input key is assigned to &#x201c;ON&#x201d; command and &#x201c;N&#x201d; input key is assigned to &#x201c;Cancel&#x201d; command as the access keys.</p>
<p id="p-0211" num="0210">In this case, the assignment program <b>22</b> judges that the access key functions are assigned to at least some commands (YES of step <b>404</b>), and judges that the access key functions are assigned to all the commands (YES of step <b>407</b>).</p>
<p id="p-0212" num="0211">Then, the assignment program <b>22</b> refers to the table as shown in <figref idref="DRAWINGS">FIG. 4</figref>, and newly assigns &#x201c;O&#x201d; and &#x201c;C&#x201d; input keys to the &#x201c;OK&#x201d; and &#x201c;Cancel&#x201d; commands, separately from the access key functions which have already been assigned.</p>
<p id="p-0213" num="0212">Then, the assignment program <b>22</b> switches between the first mode and the second mode depending on a user's instruction to switch the modes (step <b>412</b>, step <b>413</b>).</p>
<p id="p-0214" num="0213">In the first mode, the user can select &#x201c;OK button&#x201d; by simultaneously pressing &#x201c;Y&#x201d; input key and other specific input key (Alt key, for example). The user can also select &#x201c;Cancel button&#x201d; by simultaneously pressing &#x201c;N&#x201d; input key and other specific input key.</p>
<p id="p-0215" num="0214">On the other hand, in the second mode, the user can select &#x201c;OK button&#x201d; by simultaneously pressing &#x201c;O&#x201d; input key and other specific input key (Alt key, for example). The user can also select &#x201c;Cancel button&#x201d; by simultaneously pressing &#x201c;C&#x201d; input key and other specific input key.</p>
<p id="p-0216" num="0215">With the processing mentioned above, since the user can arbitrarily switch between the first mode and the second mode, the user can select a mode he/she likes.</p>
<heading id="h-0016" level="1">Various Modified Examples</heading>
<p id="h-0017" num="0000">[Overlapping with the Access Key Function of the Browser <b>21</b>]</p>
<p id="p-0217" num="0216">Incidentally, there are some cases in which in assignment of access key functions to commands in a web page, overlapping with the access key functions assigned to the web browser <b>21</b> (browser access key function) is a problem. In particular, in a case in which a key input device is a keyboard, such a problem occurs.</p>
<p id="p-0218" num="0217">For example, as shown in <figref idref="DRAWINGS">FIG. 15</figref>, File (F), Edit (E), View (V), Tool (T), and Help (H) are displayed on an operation panel <b>31</b> in the window <b>30</b>. In this case, it is shown that &#x201c;F&#x201d;, &#x201c;E&#x201d;, &#x201c;V&#x201d;, &#x201c;T&#x201d;, and &#x201c;H&#x201d; input keys function as access keys, respectively for &#x201c;File&#x201d;, &#x201c;Edit&#x201d;, &#x201c;View&#x201d;, &#x201c;Tool&#x201d;, and &#x201c;Help&#x201d; commands.</p>
<p id="p-0219" num="0218">In such a case, if the &#x201c;F&#x201d; to &#x201c;H&#x201d; input keys are assigned to &#x201c;File&#x201d; to &#x201c;Help&#x201d; commands in the web page, at least one of the browser access key function and the access key function will be disabled.</p>
<p id="p-0220" num="0219">In this regard, the assignment program <b>22</b> may assign the access key functions to the commands in the web page so as not to overlap with the browser access key functions of the web browser <b>21</b>.</p>
<p id="p-0221" num="0220">For example, as shown in <figref idref="DRAWINGS">FIG. 15</figref>, &#x201c;FI&#x201d;, &#x201c;ED&#x201d;, &#x201c;VI&#x201d;, &#x201c;TO&#x201d;, and &#x201c;HE&#x201d; are assigned to &#x201c;File&#x201d;, &#x201c;Edit&#x201d;, &#x201c;View&#x201d; &#x201c;Tool&#x201d;, and &#x201c;Help&#x201d; commands in a web page. In this case, for example, the user can execute &#x201c;File&#x201d; command by simultaneously pressing &#x201c;F&#x201d; input key and &#x201c;I&#x201d; input key.</p>
<p id="p-0222" num="0221">This can prevent functions of at least one of the browser access key functions and the access functions from being disabled.</p>
<p id="p-0223" num="0222">In the example of <figref idref="DRAWINGS">FIG. 15</figref>, although the case in which two character input keys are used has been described, one character input key which does not overlap with the web browser <b>21</b> may also be used.</p>
<p id="h-0018" num="0000">[Other Examples of Terminal Apparatus]</p>
<p id="p-0224" num="0223">In each embodiment described above, the description has been given with the PC <b>1</b> and the mobile phone <b>2</b> as one example of the terminal apparatus <b>10</b>. However, the terminal apparatus <b>10</b> is not limited to the PC <b>1</b> or the mobile phone <b>2</b>. Typically, the terminal apparatus <b>10</b> has a communication unit <b>19</b>, and may be any terminal apparatus <b>10</b> as far as it can communicate with a web server <b>50</b> by the communication unit <b>19</b> by way of a network <b>60</b>.</p>
<p id="p-0225" num="0224">Other examples of the terminal apparatus <b>10</b> can include a game console, a portable game machine, a television set, or the like. It should be noted that if the terminal apparatus <b>10</b> is a game console or a portable game machine, input buttons or the like for game operation are to be assigned access key functions. In addition, if the terminal apparatus <b>10</b> is a television set, buttons or the like provided on a remote controller for operating the television set are to be assigned the access key functions.</p>
<p id="h-0019" num="0000">[GUI Application]</p>
<p id="p-0226" num="0225">In the examples described above, the terminal apparatus <b>10</b> in which the access key functions can be assigned to the commands in the web page has been described. The example described in each embodiment mentioned above, with partial changes, can be applied to an electronic apparatus <b>80</b> in which the access key functions can be assigned to commands of a graphical user interface (GUI) application <b>23</b>.</p>
<p id="p-0227" num="0226"><figref idref="DRAWINGS">FIG. 16</figref> is a block diagram showing an internal structure of the electronic apparatus <b>80</b>.</p>
<p id="p-0228" num="0227">Although the internal structure of the electronic apparatus <b>80</b> is typically similar to that of the terminal apparatus <b>10</b> mentioned above, a storage <b>18</b> stores the GUI application <b>23</b> instead of the web browser <b>21</b>. It should be noted that the electronic apparatus <b>80</b> may not be able to communicate with a web server <b>50</b>.</p>
<p id="p-0229" num="0228">Examples of the electronic apparatus <b>80</b> include a PC <b>1</b>, a mobile phone <b>2</b>, a game console, a portable game machine, and a television set.</p>
<p id="p-0230" num="0229"><figref idref="DRAWINGS">FIG. 17</figref> is a flow chart showing processing of the electronic apparatus <b>80</b> (access key assignment program <b>22</b>). In the description of <figref idref="DRAWINGS">FIG. 17</figref>, any point which is different from the first embodiment (<figref idref="DRAWINGS">FIG. 3</figref>) will be mainly described.</p>
<p id="p-0231" num="0230">It should be noted that a description will be given assuming that the electronic apparatus <b>80</b> is a PC <b>1</b> and a key input device is a keyboard.</p>
<p id="p-0232" num="0231">First, the assignment program <b>22</b> judges a type of the key input device (step <b>501</b>) and judges that the key input device is a keyboard.</p>
<p id="p-0233" num="0232">Then, the assignment program <b>22</b> judges whether or not the GUI application <b>23</b> has been executed (step <b>502</b>). If the GUI application <b>23</b> has been executed (YES of step <b>502</b>), the assignment program <b>22</b> analyzes a data structure of the GUI application <b>23</b>, and extracts any command (to which no access key function is assigned) (step <b>503</b>). In this case, for example, commands in a menu bar <b>41</b> in a window <b>40</b> (see <figref idref="DRAWINGS">FIG. 18</figref>) or buttons to be displayed in the window <b>40</b> are extracted as commands.</p>
<p id="p-0234" num="0233">It should be noted that a description of <figref idref="DRAWINGS">FIG. 17</figref> will be given, assuming that &#x201c;File&#x201d;, &#x201c;Edit&#x201d;, &#x201c;View&#x201d;, &#x201c;Tool&#x201d;, and &#x201c;Help&#x201d; are extracted as commands, for convenience.</p>
<p id="p-0235" num="0234">After extracting commands, the assignment program <b>22</b> reads out the table, for example, as shown in <figref idref="DRAWINGS">FIG. 4</figref> from the storage <b>18</b> (step <b>504</b>). Then, the assignment program <b>22</b> refers to the table, and assigns the access key functions to the extracted commands (step <b>505</b>).</p>
<p id="p-0236" num="0235">For example, when &#x201c;File&#x201d; to &#x201c;Help&#x201d; commands are extracted, the assignment program <b>22</b> changes a part of the data structure of the GUI application <b>23</b> so that &#x201c;F&#x201d; to &#x201c;H&#x201d; input keys function as access keys for &#x201c;File&#x201d; to &#x201c;Help&#x201d; commands.</p>
<p id="p-0237" num="0236"><figref idref="DRAWINGS">FIG. 18</figref> is a diagram showing one example of the window <b>40</b> to be displayed on the screen by the GUI application <b>23</b>.</p>
<p id="p-0238" num="0237">As shown in <figref idref="DRAWINGS">FIG. 18</figref>, File (F), Edit (E), View (V), Tool (T), and Help (H) are displayed on the menu bar <b>41</b> in the window <b>40</b>.</p>
<p id="p-0239" num="0238">The user can execute &#x201c;File&#x201d; command by simultaneously pressing, for example, &#x201c;F&#x201d; input key and other specific input key (Alt key, for example).</p>
<p id="p-0240" num="0239">With processing shown in <figref idref="DRAWINGS">FIG. 17</figref>, even if no access key function is assigned to the commands of the GUI application <b>23</b>, the assignment program <b>22</b> automatically extracts the commands and automatically assigns the access key functions to the extracted commands. Therefore, a user no longer has to do any work to set an access key function, which thus relieves the user of time and effort.</p>
<p id="p-0241" num="0240">In the description of <figref idref="DRAWINGS">FIG. 17</figref>, any point which is different from the first embodiment (<figref idref="DRAWINGS">FIG. 1</figref>) has been mainly described. However, the processing described in each embodiment and each modified example or the like mentioned above can all be applied as assignment processing of the access key functions to the commands of the GUI application <b>23</b>, by making partial changes.</p>
<p id="p-0242" num="0241">The present application contains subject matter related to that disclosed in Japanese Priority Patent Application JP 2010-110461 filed in the Japan Patent Office on May 12, 2010, the entire content of which is hereby incorporated by reference.</p>
<p id="p-0243" num="0242">It should be understood by those skilled in the art that various modifications, combinations, sub-combinations and alterations may occur depending on design requirements and other factors insofar as they are within the scope of the appended claims or the equivalents thereof.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A terminal apparatus, comprising:
<claim-text>a communication unit configured to receive information of a web page from a web server; and</claim-text>
<claim-text>a controller configured to extract commands included in the information of the web page by analyzing the received information of the web page, and assign access key functions to the extracted commands, wherein</claim-text>
<claim-text>the controller judges a type of a key input device, and assigns the access key functions to the extracted commands such that input keys which the key input device has function as access keys of the extracted commands,</claim-text>
<claim-text>the controller assigns the access key functions to the commands such that input keys by which characters highly relevant to wording of the commands are entered function as access keys of the commands,</claim-text>
<claim-text>the key input device is a key input device for which an input method of characters to be entered by the input keys can be changed, and</claim-text>
<claim-text>the controller switches correspondence between the commands and the input keys depending on the change in the input method, when the characters to be entered by the input keys are changed due to the change of the input method.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The terminal apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>the controller preferentially assigns the access key functions to the commands of high priority of the extracted commands.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The terminal apparatus according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein
<claim-text>the controller preferentially assigns the access key functions to the commands whose number of executions is large.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The terminal apparatus according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein
<claim-text>the controller preferentially assigns the access key functions on the basis of a logical structure of a markup document of the web page.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The terminal apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>the controller judges whether the access key functions have already been assigned to the commands, by analyzing the information of the web page, newly assigns the access key functions, separately from the access key functions which have already been assigned, to the commands in a case where the access key functions have already been assigned, and switches between a first mode which enables the access key functions which have already been assigned to the commands and a second mode which enables the access key functions which have been newly assigned to the commands, depending on an instruction from a user.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The terminal apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>the controller assigns the access key functions to the extracted commands such that the access key functions do not overlap with browser access key functions which are assigned to commands of a browser for displaying the web page.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The terminal apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>the controller controls display on a screen such that a table showing correspondence between the commands to which the access key functions have been assigned and the input keys is displayed on the screen.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. An electronic apparatus, comprising:
<claim-text>a controller configured to extract commands included in a graphical user interface (GUI) application by analyzing a data structure of the GUI application and assigns access key functions to the extracted commands, wherein</claim-text>
<claim-text>the controller judges a type of a key input device, and assigns the access key functions to the extracted commands such that input keys which the key input device has function as access keys of the extracted commands,</claim-text>
<claim-text>the controller assigns the access key functions to the commands such that input keys by which characters highly relevant to wording of the commands are entered function as access keys of the commands,</claim-text>
<claim-text>the key input device is a key input device for which an input method of characters to be entered by the input keys can be changed, and</claim-text>
<claim-text>the controller switches correspondence between the commands and the input keys depending on the change in the input method, when the characters to be entered by the input keys are changed due to the change of the input method.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A method of assigning access key functions, comprising:
<claim-text>receiving web page information from a web server;</claim-text>
<claim-text>extracting commands included in the web page information by analyzing the received web page information;</claim-text>
<claim-text>judging a type of key input device; and</claim-text>
<claim-text>assigning the access key functions to the extracted commands such that input keys which the key input device has function as access keys of the extracted commands, wherein</claim-text>
<claim-text>the assigning includes assigning the access key functions to the commands such that input keys by which characters highly relevant to wording of the commands are entered function as access keys of the commands,</claim-text>
<claim-text>the key input device is a key input device for which an input method of characters to be entered by the input keys can be changed, and</claim-text>
<claim-text>the assigning includes switching correspondence between the commands and the input keys depending on the change in the input method when the characters to be entered by the input keys are changed due to the change of the input method.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A method of assigning access key functions, comprising:
<claim-text>extracting commands included in a graphical user interface (GUI) application by analyzing a data structure of the GUI application;</claim-text>
<claim-text>judging a type of key input device; and</claim-text>
<claim-text>assigning the access key functions to the extracted commands such that input keys which the key input device has function as access keys of the extracted commands, wherein</claim-text>
<claim-text>the assigning includes assigning the access key functions to the commands such that input keys by which characters highly relevant to wording of the commands are entered function as access keys of the commands,</claim-text>
<claim-text>the key input device is a key input device for which an input method of characters to be entered by the input keys can be changed, and</claim-text>
<claim-text>the assigning includes switching correspondence between the commands and the input keys depending on the change in the input method when the characters to be entered by the input keys are changed due to the change of the input method.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A non-transitory computer-readable medium including a program causing a terminal apparatus to perform:
<claim-text>receiving web page information from a web server;</claim-text>
<claim-text>extracting commands included in the web page information by analyzing the received web page information;</claim-text>
<claim-text>judging a type of key input device; and</claim-text>
<claim-text>assigning access key functions to the extracted commands such that input keys which the key input device has function as access keys of the extracted commands, wherein</claim-text>
<claim-text>the assigning includes assigning the access key functions to the commands such that input keys by which characters highly relevant to wording of the commands are entered function as access keys of the commands,</claim-text>
<claim-text>the key input device is a key input device for which an input method of characters to be entered by the input keys can be changed, and</claim-text>
<claim-text>the assigning includes switching correspondence between the commands and the input keys depending on the change in the input method when the characters to be entered by the input keys are changed due to the change of the input method.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A non-transitory computer-readable medium including a program causing an electronic apparatus to perform:
<claim-text>extracting commands included in a graphical user interface (GUI) application by analyzing a data structure of the GUI application;</claim-text>
<claim-text>judging a type of key input device; and</claim-text>
<claim-text>assigning access key functions to the extracted commands such that input keys which the key input device has function as access keys of the extracted commands, wherein</claim-text>
<claim-text>the assigning includes assigning the access key functions to the commands such that input keys by which characters highly relevant to wording of the commands are entered function as access keys of the commands,</claim-text>
<claim-text>the key input device is a key input device for which an input method of characters to be entered by the input keys can be changed, and</claim-text>
<claim-text>the assigning includes switching correspondence between the commands and the input keys depending on the change in the input method when the characters to be entered by the input keys are changed due to the change of the input method.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
