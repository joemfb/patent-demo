<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08624925-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08624925</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12580956</doc-number>
<date>20091016</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>781</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>09</class>
<subclass>G</subclass>
<main-group>5</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>345647</main-classification>
<further-classification>345684</further-classification>
</classification-national>
<invention-title id="d2e53">Content boundary signaling techniques</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>2002/0167551</doc-number>
<kind>A1</kind>
<name>Steele et al.</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2005/0197763</doc-number>
<kind>A1</kind>
<name>Robbins et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2007/0132789</doc-number>
<kind>A1</kind>
<name>Ording et al.</name>
<date>20070600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345684</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2008/0168384</doc-number>
<kind>A1</kind>
<name>Platzer et al.</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2009/0070711</doc-number>
<kind>A1</kind>
<name>Kwak et al.</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2009/0073194</doc-number>
<kind>A1</kind>
<name>Ording</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345672</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2013/0222312</doc-number>
<kind>A1</kind>
<name>Wilson et al.</name>
<date>20130800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>JP</country>
<doc-number>2003330586</doc-number>
<kind>A</kind>
<date>20031100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00009">
<othercit>International Search Report and Written Opinion&#x2014;PCT/US2010/051280, ISA/EPO&#x2014;May 24, 2011.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>Koike Yet al., &#x201c;Timeslider: An Interface To Specify Time Point&#x201d;, UIST 97, 10th Annual Symposium On User Interface Software And Technology, Proceedings Of The ACM Symposium On User Interface Software And Technology, Banff, Alberta, Canada, Oct. 14-17, 1997, ACM Symposium On User Interface Software And Technolog, Oct. 17, 1997, pp. 43-44, XP009074765, DO1:10.1145/263407.263507, ISBN: 978-0-89791-881-7.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>44</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>8</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110090255</doc-number>
<kind>A1</kind>
<date>20110421</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Wilson</last-name>
<first-name>Diego A.</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Rogers</last-name>
<first-name>Sean S.</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Nielsen</last-name>
<first-name>Per O.</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Wilson</last-name>
<first-name>Diego A.</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Rogers</last-name>
<first-name>Sean S.</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Nielsen</last-name>
<first-name>Per O.</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Hagler</last-name>
<first-name>James T.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>QUALCOMM Incorporated</orgname>
<role>02</role>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Yang</last-name>
<first-name>Ryan R</first-name>
<department>2679</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Methods and devices provide a user interface that provides visual cues when a document pan or scroll has reached an end or boundary by distorting the document image in response to further user inputs. The image distortion functionality may include shrinking, stretching, accordion expansion, or bouncing of a document image. The degree of image distortion may be proportional to the distance that a user input would have the document move beyond the encountered boundary. When a boundary of a document image is reached during a rapid pan or scroll, a bouncing image distortion may be applied to the document image to inform the user that the document reached a boundary during the movement.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="118.11mm" wi="129.96mm" file="US08624925-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="261.28mm" wi="138.01mm" file="US08624925-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="251.46mm" wi="132.76mm" file="US08624925-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="257.47mm" wi="163.58mm" file="US08624925-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="259.93mm" wi="148.84mm" file="US08624925-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="253.92mm" wi="146.39mm" file="US08624925-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="180.76mm" wi="174.41mm" file="US08624925-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0002" num="0001">The present invention relates generally to computer user interface systems and more particularly to user systems providing image distortion functionality.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">Personal computing devices (e.g. cell phones, PDAs, laptops, gaming devices) provide users with increasing functionality and data storage. Personal computing devices serve as personal organizers, storage for documents, photographs, videos, and music, as well as portals to the Internet and electronic mail. In order to fit within the small displays of such devices, large documents (e.g., photographs, music files and contact lists) are typically displayed in a viewer that can present a portion of the document in a size large enough to be read and be controlled by scrolling or panning functions to reveal other portions. In order to view all or parts of a document image or sort through a list of digital files, typical graphical user interfaces permit users to use scroll or panning functions by making unidirectional movements of one finger on a touchscreen display, as implemented on mobile devices such as the Blackberry Storm&#xae;. However, because of the small size of the viewer in portable computing devices, the entire contents of document images do not generally fit in the display. Since only a portion of a large document is generally displayed in the viewer of a computing device, users may lose their position and orientation with respect to the entire document. As such, users may be unable to appreciate the boundaries of a document image based on the portion of a document image that is displayed on the viewer.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0004" num="0003">The various aspects include methods for implementing a user interface function on a computing device, including detecting an input of a document movement gesture on a user interface device (e.g., a touch event on a touch surface) of the computing device, determining a document image movement of a document displayed on the computing device based on the movement gesture input, determining whether a boundary of the document is reached based on the determined movement of the document image, and distorting an image of the document displayed on the computing device when a boundary of the document image is reached. Distorting the image of the document may involve one of stretching the document image, shrinking the document image, and bouncing the document image. Distorting the image of the document may include distorting the document image along an axis selected from a horizontal axis, a vertical axis, a diagonal axis, and both the horizontal and vertical axes. Distorting the image of the document image may include distorting the document image in an accordion style by inserting space between display image elements without distorting the display image elements. The aspect methods may be implemented on a computing device in which the user interface device is a touch surface, and the document image movement gesture input is a touch event detected on the touch surface. The aspect methods may be implemented on a computing device in which the user interface device is a touch surface, and the document image movement gesture input is a touch event detected on a touchscreen display. Distorting the image of the document image may include distorting the document image based on a distance that the touch event travels after the boundary of the document is reached. In a further aspect, the methods may further include initiating a rapid pan or scroll animation if the user input represents a flick gesture, determining whether an end of the rapid pan or scroll animation has been reached, and animating the distortion of the document image if the boundary of the document image is reached before the end of the rapid pan or scroll animation is reached. Such animating of the distortion of the document image may include animating a bouncing movement of the document image, or animating a bouncing movement and a compression distortion of the document image. In a further aspect, the methods may further include determining a distortion function to be applied to distort the document image, and calculating a distortion factor based on a distance the document image movement gesture input would move the document image touch event travels after the boundary is reached, in which distorting the document image includes applying the determined distortion function to the display image based on the calculated distortion factor. This aspect may further include determining whether a maximum level of display image distortion is reached, and reverting the display image back to its original form if the maximum level of display image distortion is reached.</p>
<p id="p-0005" num="0004">Another aspect is a computing device that includes a processor, a display coupled to the processor, and a user interface device (e.g., a touch surface, touch screen, computer mouse, trackball, etc.) coupled to the processor, in which the processor is configured with processor-executable instructions to perform operations of the various aspect methods.</p>
<p id="p-0006" num="0005">Another aspect is a computing device that includes means for accomplishing the functions involved in the operations of the various aspect methods.</p>
<p id="p-0007" num="0006">Another aspect is a computer readable storage medium having stored thereon computer-executable instructions configured to cause a computer to perform the processes of the various aspect methods.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0008" num="0007">The accompanying drawings, which are incorporated herein and constitute part of this specification, illustrate exemplary aspects of the invention. Together with the general description given above and the detailed description given below, the drawings serve to explain features of the invention.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 1A</figref> is a frontal view of a portable computing device showing a list document on a touchscreen display.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 1B</figref> is a frontal view of a portable computing device illustrating a list end distortion functionality activated by a finger moving in an up direction on a touchscreen display according to an aspect.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIGS. 2A and 2B</figref> are frontal views of a portable computing device illustrating a distortion functionality activated by a finger moving in an up direction on a touchscreen display according to another aspect.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 3</figref> is a process flow diagram of an aspect method for applying a distortion function to the display image.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 4</figref> is a process flow diagram of an aspect method for applying a bounce distortion function to the display image.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 5</figref> is a component block diagram of an example mobile computing device suitable for use with the various aspects.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 6</figref> is a component block diagram of an example portable computing device suitable for use with the various aspects.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0016" num="0015">The various aspects will be described in detail with reference to the accompanying drawings. Wherever possible, the same reference numbers will be used throughout the drawings to refer to the same or like parts. References made to particular examples and implementations are for illustrative purposes and are not intended to limit the scope of the invention or the claims.</p>
<p id="p-0017" num="0016">The word &#x201c;exemplary&#x201d; is used herein to mean &#x201c;serving as an example, instance, or illustration.&#x201d; Any implementation described herein as &#x201c;exemplary&#x201d; is not necessarily to be construed as preferred or advantageous over other implementations.</p>
<p id="p-0018" num="0017">As used herein, the terms &#x201c;personal electronic device,&#x201d; &#x201c;computing device&#x201d; and &#x201c;portable computing device&#x201d; refer to any one or all of cellular telephones, personal data assistants (PDAs), palm-top computers, notebook computers, personal computers, wireless electronic mail receivers and cellular telephone receivers (e.g., the Blackberry&#xae; and Treo&#xae; devices), multimedia Internet enabled cellular telephones (e.g., the Blackberry Storm&#xae;), and similar electronic devices that include a programmable processor, memory, and a connected or integral touch surface or other pointing device (e.g., a computer mouse). In an example aspect used to illustrate various aspects of the present invention, the computing device is a cellular telephone including an integral touchscreen display. However, this aspect is present merely as one example implementation of the various aspects, and as such is not intended to exclude other possible implementations of the subject matter recited in the claims.</p>
<p id="p-0019" num="0018">As used herein, a &#x201c;touchscreen&#x201d; is a touch sensing input device or a touch sensitive input device with an associated image display. As used herein, a &#x201c;touchpad&#x201d; is a touch sensing input device without an associated image display. A touchpad, for example, can be implemented on any surface of a computing device outside the image display area. Touchscreens and touchpads are generically referred to herein as a &#x201c;touch surface.&#x201d; Touch surfaces may be integral parts of a computing device, such as a touchscreen display, or a separate module, such as a touchpad, which can be coupled to the computing device by a wired or wireless data link. The terms touchscreen, touchpad and touch surface may be used interchangeably hereinafter.</p>
<p id="p-0020" num="0019">As used herein, a &#x201c;touch event&#x201d; refers to a detected user input on a touch surface that may include information regarding location or relative location of the touch. For example, on a touchscreen or touchpad user interface device, a touch event refers to the detection of a user touching the device and may include information regarding the location on the device being touched.</p>
<p id="p-0021" num="0020">As used herein, &#x201c;document&#x201d; or &#x201c;digital document&#x201d; refers to any of a variety of digital content in which at least of portion can be displayed as a document image on a display of a computing device. Examples of digital documents encompassed in the term &#x201c;document&#x201d; include, but are not limited to, digital photograph files (e.g., .tif, .JPG), document files (e.g., .pdf, .txt, etc.), word processing files (e.g., .doc, .rtf, etc.), graphics and drawing files (e.g., .vsd) spread sheet files (e.g., .xls), database files (e.g., .xml, .sql, etc.), contacts databases (e.g., address book application files maintained on cellular telephones), file listings, music library listings, and similar digital lists. Thus, the reference to &#x201c;document&#x201d; is not intended to limit claim scope to a written document, but encompass all forms of digital information that can be displayed consistent with the various aspects.</p>
<p id="p-0022" num="0021">As used herein, &#x201c;document image&#x201d; refers to the image that a computing device may generate based on the document contents for presentation on the display of the computing device. Examples of document images include, but are not limited to, digital photographs, displayed portions of a text or word processing document (i.e., excluding metadata and formatting data), displayed graphics and widgets presenting information contained in a database or list file, extended menu lists (e.g., a music listing), and the display generated from spread sheet files.</p>
<p id="p-0023" num="0022">As used herein, &#x201c;document boundary&#x201d; refers to any end, edge or boundary within the document beyond which a document image cannot extend. Examples of document boundaries include, but are not limited to, the beginning of a list, database, or text document, the end of a list, database, or text document, each edge of a digital photograph, and the first and last entry in a database record.</p>
<p id="p-0024" num="0023">Since an image of the entire contents of a document, such as a word processing document, picture image or a list of contacts, may not entirely fit in a touchscreen display of a computing device, most graphical user interfaces provide scrolling and panning functionality to enable the document image to be moved within the device view window. To allow users to move document images within a touchscreen display, a computing device may be configured to detect the tracing of touch gestures on the display and to move the document image with respect to the view window in response to the direction of the touch gestures. Typical document control gestures enabled on touchscreen computing devices include drag, pan, scroll, and &#x201c;flick&#x201d; gestures. In drag, pan and scroll gestures, the user touches the touchscreen and moves the touching finger in the desired direction of movement without raising the finger. For example, to view the entire content of a contact list, the content of which does not fit in a computing device touchscreen display frame, a user may trace a scroll gesture on the touchscreen to scroll down the list of contacts. The scrolling function allows a user to bring into the computing device display frame different parts of the content list and display it one portion at a time. In a flick gesture, the user touches a touch surface (e.g., a touchscreen), rapidly moves a finger up/down or left/right on the touchscreen and removes the finger in the same motion as if to flick the content in a particular direction. It should be appreciated that a flick gesture (or a user input equivalent to a flick gesture) may also be accomplished on other types of user input devices, such as by rapidly spin of a scroll wheel on a computer mouse or a rapid spin of a trackball. Thus, the reference to a flick gesture is not necessarily limited to a flick gesture executed on a touch surface (e.g., a touchscreen).</p>
<p id="p-0025" num="0024">Unlike standard personal computers, which trace the movement and boundaries of a document image by showing a display indicator such as a scrollbar on the computer display, many portable computing device displays do not include such display indicators. The absence of display indicators in portable computing device viewers frees valuable display &#x201c;real estate&#x201d; on which more of a display image may be shown. However, a portable computing device user who is trying to navigate through a large document (e.g., a long contact list) will often be unaware of the boundaries of the document (e.g., the top or the end of a list). For example, when scrolling down a list of emails by tracing a series of scroll gestures on the touchscreen display, a user may not be able to discern where the list begins or ends. When a user reaches the end of the email list not knowing that an end boundary is reached, the user may continue to trace scroll gestures in an attempt to continue scrolling through the list. When the list fails to respond to the scroll gestures because the end of the list has been reached, the user may wonder whether the computing device has frozen. The only way to confirm that the computing device is operating properly is to scroll in the other direction, which is an unnecessary motion. Such ambiguous operation at the end of a list or boundary of document may cause user frustration and confusion.</p>
<p id="p-0026" num="0025">The various aspect methods provide a user interface image distortion functionality which provides a visual cue or signal to inform computing device users when drag, pan, scroll, and flick gestures would move a document beyond the document's boundaries. This visual cue includes an intuitive distortion of the image as though the user's gesture were distorting a physical document. The computing device may be configured to detect when a document boundary is reached and a user gesture attempts to move the document beyond the boundary, and to distort the display image consistent with the user gesture. For example, when a user reaches the end of an email list while tracing a scroll gesture on a touchscreen display, the computing device may distort the displayed image of the last email items as if the list were a plastic sheet or an accordion stack of linked items. Thus, the various aspect methods provide an intuitive signal to users when their drag, pan, scroll, and flick gestures have reached a document boundary without having to display scroll bar indicators which occupy valuable display &#x201c;real estate.&#x201d;</p>
<p id="p-0027" num="0026">While the various aspects are described with reference examples implemented on computing devices equipped with touchscreen displays, the aspects and the claims are not limited to such implementations. The various aspects may be implemented in any computing device displaying document images that extend beyond the edges of the display window and receive user inputs from user input devices (e.g., a touch surface, computer mouse, track ball, etc.) for moving the document image with respect to the display window. The various aspects provide intuitive visual cues sufficient to obviate the need for scroll bar indicators, thereby increasing the display real estate available for displaying the document image. For example, a document image movement gesture, such as a drag, pan, scroll or flick may also be accomplished using a conventional computer mouse or track ball as is well known. Thus, the examples of executing drag, pan, scroll and flick gestures on a touchscreen user interface device refer to a particularly advantageous implementation of the aspects and are not intended to limit the scope of the claims to touchscreen user interface devices.</p>
<p id="p-0028" num="0027">In the various aspects, the image distortion functionality may be enabled as part of the graphical user interface (GUI) functionality or as part of an application (e.g., a contact list or photo viewer application). Automatic activation of the image distortion functionality within the GUI may be provided as part of an application. Also, the image distortion functionality may be provided as a default function within a GUI or application.</p>
<p id="p-0029" num="0028">In some aspects, the image distortion functionality may be manually enabled. A user may select and enable/activate the image distortion functionality manually by pressing a button or by activating an icon on a GUI display. For example, activation of the functionality may be assigned to a soft key, which the user may activate (e.g., by pressing or clicking) to launch the image distortion functionality. As another example, the image distortion functionality may be activated by a user command. For example, the user may use a voice command such as &#x201c;activate list end signal&#x201d; to enable the image distortion functionality. Once activated, the image distortion functionality may be used in the manner described herein.</p>
<p id="p-0030" num="0029">The image distortion functionality may respond to any form of user touch gesture implemented on the computing device touch surface. Since touchscreens are generally superimposed on a display image, in a particularly useful implementation the touch surface is a touchscreen display, thus enabling users to interact with the display image with the touch of a finger. In such applications, the user interacts with an image by touching the touchscreen display with a finger and tracing back and forth or up and down paths.</p>
<p id="p-0031" num="0030">The various aspects may distort a display image using different types of distortion, such as by shrinking, stretching or bouncing the image. For example, the computing device may distort the display image by uniformly stretching the content (referred to as a &#x201c;flat stretch&#x201d;), by logarithmically stretching portion of the content (i.e., referred to as a &#x201c;partial stretch&#x201d;), by stretching a portion of the image along one direction while shrinking a portion of the image along the perpendicular dimension (referred to as a &#x201c;local stretch&#x201d;), or by creating empty space between fixed size items (referred to as an &#x201c;accordion stretch&#x201d;).</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIGS. 1A and 1B</figref> illustrate a list end distortion functionality in which a uniform or flat stretch distortion is applied to a list document to inform a user that the end of a contacts list has been reached. As illustrated in <figref idref="DRAWINGS">FIG. 1A</figref>, a user may scroll through a list of contacts by tracing a finger <b>108</b> on the touchscreen surface <b>104</b> as shown by the dotted arrow <b>106</b>. The dotted arrow <b>106</b> is shown here only to illustrate the direction of the traced gesture. Since the display <b>102</b> of the computing device <b>100</b> does not include a display indicator to allow the user to determine the boundaries of the contacts list, the user may have no way to know when the end of the list has been reached.</p>
<p id="p-0033" num="0032">As illustrated in <figref idref="DRAWINGS">FIG. 1B</figref>, the computing device <b>100</b> may be configured to inform the user that the end of the list is reached by distorting the display image in response to further scroll (or other) user gestures. In the illustrated example the computing device <b>100</b> is configured to apply a uniform distortion to the display that uniformly stretches the display image along the direction of the scroll gesture as though the user is stretching an elastic material on which contact information is printed. Such visual distortion of the contacts list intuitively informs the user that the end of the list is reached and that the computing device is working properly even though the list is not scrolling further.</p>
<p id="p-0034" num="0033">To apply a uniform or flat stretching distortion, the computing device <b>100</b> may scale the display image uniformly. As such, uniform or flat stretching distortion factors may be applied to the display image along the direction of the user touch gestures. As illustrated in <figref idref="DRAWINGS">FIG. 1B</figref>, a user input gesture that attempts to move or scroll the document image beyond the document's end or boundary may stretch the document along the direction of the scroll. Other forms of distortion may also be applied. For example, a user input gesture that attempts to move or scroll beyond a document boundary may cause a stretch along the axis of the user touch gesture and a pinch or shrinkage along the perpendicular direction as might occur to an elastic fabric. In a further aspect, the distortion may be applied in an opposite direction such that if the user input gesture attempts to move the document image in a horizontal direction on the touchscreen display, the image is stretch along its vertical axis (i.e., its height), and if the user attempts to move the document in a vertical direction on the touchscreen display, the image may be stretch along its horizontal axis (i.e., its width). In a further aspect, if the user input gesture attempts to move the document in a diagonal scroll gesture (e.g., towards the corners of the touchscreen display), the image may be stretched along both the horizontal and vertical axes proportional to the angle of the traced touch gesture.</p>
<p id="p-0035" num="0034">In an aspect, the degree to which a display image is stretched is determined by a distortion factor that is calculated based upon the movement that would be imparted to the document image beyond the encountered boundary by the user's input gesture, such as a touch gesture on a touchscreen. The computing device <b>100</b> may be configured to calculate the distortion factor based on the distance that the user input gesture (e.g., touch event) would have the document move once a boundary is reached. For example, in <figref idref="DRAWINGS">FIG. 1B</figref>, the computer device <b>100</b> may detect the end of the contacts list and stretch the contact list based on the distance the user's finger <b>108</b> moves on the touchscreen <b>104</b> once the end of the contact list is reached. The farther the user's finger <b>108</b> moves on the touchscreen <b>104</b>, the greater the distortion factor, and the more the contact list image is distorted. When the user terminates the touch event the stretched display image automatically reverts back to its original form.</p>
<p id="p-0036" num="0035">The distortion factor may be applied to distort the display image proportionately. For example, when applying a stretch effect to the display image, the computing device <b>100</b> may be configured to distort a display image proportional to the distance that the document image movement gesture input would move the document image beyond the document boundary, such as the distance the touch event travels on the touchscreen <b>104</b> after the document boundary is reached. Thus, the longer the distance traveled by the touch event, the more severe the distortion of the display image.</p>
<p id="p-0037" num="0036">In an aspect, the computing device <b>100</b> may be configured to limit the extent to which a display image may be distorted. Once the display image reaches its maximum distorted shape, no further distortion may be applied. A stretched display image may also automatically revert back to its original form when the user terminates the touch event.</p>
<p id="p-0038" num="0037">The automatic reversion of display images back to their original shape may occur in different ways. For example, the automatic reversion may be an animated reversal of the distortion, or an animated under-damping. In an animated reversal the computing device <b>100</b> may be configured to animate the reversion of the image back to its original shape, as if undoing the stretching.</p>
<p id="p-0039" num="0038">The animated under-damping effect reflects the behavior of elastic systems. In nature, when elastic systems are released from tension they often do not stop upon reaching their original shapes, and instead continue bounce back and forth about the original shape before settling into their original states. For example, when an elastic band is stretched and released, the band moves towards its resting state but does not immediately find its original shape. As the band releases potential energy, the band may first shrink and stretch again for certain number of times before it is back to its original form. The computing device <b>100</b> may be configured to animate the image distortion transition so as to mimic such natural effects in order to provide the user with a perception of interacting with real world objects.</p>
<p id="p-0040" num="0039">As mentioned above, one type of image distortion that may be applied in various aspects is an accordion stretch which inserts space between image elements without changing the shapes of the elements themselves. This aspect is illustrated in <figref idref="DRAWINGS">FIGS. 2A and 2B</figref>. The accordion stretch distortion creates the appearance of stretching material that lies between the content elements (e.g., graphical widgets) of a document image. The appearance of stretchy &#x201c;goo,&#x201d; cords, or rubber material between fixed size image elements may provide the appearance of stretching the whole image without distorting the actual contents of the image.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 2A</figref> illustrates a contacts list being browsed by a user tracing scroll gestures with a finger <b>108</b>. The user may move the contacts list upwards by touching the touchscreen surface <b>104</b> of a computing device <b>100</b> using a finger <b>108</b>, and tracing an upward scroll gesture along the dotted arrow <b>106</b>. Similar to the computing device <b>100</b> shown in <figref idref="DRAWINGS">FIGS. 1A and 1B</figref>, the display <b>102</b> does not include a scroll bar indicator to inform the user about the boundaries of the contacts list. Therefore, the user may not know when the end of the list is reached.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 2B</figref> the accordion stretch image distortion behavior of the display when the bottom end of the contacts list is reached. <figref idref="DRAWINGS">FIG. 2B</figref> illustrates how the accordion stretch distortion does not change the shape of the contact list display elements (i.e., the contact names, pictures and phone numbers). Instead, the image appears to stretch the goo <b>112</b> that lies between the contact data display elements.</p>
<p id="p-0043" num="0042">Other stretch effects may also be applied in the same manner described above with respect to <figref idref="DRAWINGS">FIGS. 1 and 2</figref>. In an aspect, a computing device <b>100</b> may be configured to apply partial stretching effects to the display image, such that when a boundary of a document image is reached, only certain portions of the display image are stretched while the remainder is unchanged. For example, the portion of the display image that is stretched may be the portion that is between the touch location of the finger <b>108</b> and the reached boundary of the document image.</p>
<p id="p-0044" num="0043">In a further aspect, the display image may appear to be stretched using a local/logarithmic stretch method. In this style of stretching, the display image may appear stretched in a logarithmic fashion to allow the portion being stretched to smoothly transition into the portion of the document image that does not appear stretched.</p>
<p id="p-0045" num="0044">In a further aspect, the display image may be distorted by locally compressing its content. This distortion style may be applied, for example, when the entire document image fits within the display frame. As a user attempts to move the document image to one direction, the side of the document image in the direction of the movement may appear compressed while the other opposite side of the document image may appear stretched. For example, the entire list of contacts may fit within the display <b>102</b> of a computing device <b>100</b>. If a user attempts to move the contact list downwards by tracing a downward scroll gesture on the touchscreen surface <b>104</b>, the content of the contact list located below the touch location of the finger <b>108</b> may be compressed while the contents above the finger <b>108</b> may be stretched.</p>
<p id="p-0046" num="0045">In a further aspect, when a document boundary is reached during a rapid scroll, such as may occur following a flick gesture, the image may be distorted in a bounce effect to inform a user that a document image boundary has been reached. A rapid scroll typically occurs when a user traces a quick gesture to rapidly move through the contents of a document (e.g., a list) or pan a large image using fewer scroll gestures. Generally, the length of the scroll will depend on the speed and/or distance of the flick gesture. For example, a computing device <b>100</b> may be configured to determine the speed of a flick gesture traced on a touchscreen surface <b>104</b>, and based on the determined speed calculate an endpoint for the scroll or pan, such as a number of list elements that should be scroll or pixels that an image should move with respect to the display view window. A fast scroll gesture may result in the end of a list or the boundary of an image been reached before the calculated endpoint is reached. To inform the user that the flick gesture has reached the end of a list or a boundary of the document, the computing device <b>100</b> may be configured to bounce the image within the display to inform the user that the boundary was reached. In a bounce effect, the displayed image may appear to reach a limit in one direction, reversed direction a small amount and then reversed direction again before settling on the end of the document (e.g., displaying the last item in the list or the portion of an image encompassing the encountered a boundary).</p>
<p id="p-0047" num="0046">In the bounce effect, the computing device <b>100</b> may also apply the stretch or shrink effects described above with respect to <figref idref="DRAWINGS">FIGS. 1 and 2</figref>. For instance, once a boundary of a document image is reached during a rapid scroll and a bounce effect is applied, a stretch effect may also be applied in the direction of the movement of the document image. Thus, if the document image is moving downwards with respect to the display, when the bottom boundary is reached, the document image may compress like a ball striking the floor, rebound a small distance, and revert back to its original shape (i.e., simulating a bounce effect) before coming to a resting state. In other aspects, shrink effects and a combination of stretch and shrink effects may also be used to simulate bouncing effects. The number of rebounds and stretch cycles may be configured by an application developer to achieve a desired user experience.</p>
<p id="p-0048" num="0047">In a typical computing device, a processor may receive touch event updates from a touchscreen (or other type of touch surface) periodically, such as every few milliseconds. When a user touches the touchscreen, the processor may receive a &#x201c;touch down&#x201d; event notification in the next update from the touchscreen, and in each subsequent update from the touchscreen receive a touch location notification until a &#x201c;touch up&#x201d; event notification is received. Since the touch location information provided by the touchscreen occurs very frequently, a movement of a user's touch across the surface of the touchscreen will be detected by the processor as a sequence of touch locations which change over time.</p>
<p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. 3</figref> illustrates a process flow of an aspect method <b>300</b> for applying a distortion function to a displayed image in response to a scroll event beyond a document boundary. In method <b>300</b> at block <b>302</b>, a computing device <b>100</b> may be configured to detect a touch event on a touch surface or user input on another form of user interface device (e.g., a computer mouse or trackball), and determine whether a touch event was a touch up event (or release of a computer mouse button) at determination block <b>304</b>. If a touch up event is detected (i.e., determination block <b>304</b>=&#x201c;Yes&#x201d;), the computing device <b>100</b> may terminate the distortion function at block <b>306</b>. If the touch event was not a touch up event (i.e., determination block <b>304</b>=&#x201c;No&#x201d;), the computing device <b>100</b> may determine the document image movement that should be caused to happen based on the touch event (or other type of user interface input event) at block <b>308</b>. This may be accomplished by comparing the current touch location (or other type of user interface input event) received at block <b>302</b> to the previous touch location (or other type of user interface input event) which may be stored in memory. If the touch location has changed, this may indicate a drag, scroll, or flick gesture is being implemented to cause a movement in a displayed document (e.g., a scroll of a displayed list). At determination block <b>310</b>, the computing device <b>100</b> may determine whether a boundary of the displayed document image has been reached. If a boundary of the document image and not in reached (i.e., determination block <b>310</b>=&#x201c;No&#x201d;), the computing device <b>100</b> may perform normal graphical user interface (GUI) function associated with the determine document movement at block <b>312</b>, and return to block <b>302</b> to receive the next touchscreen touch location event (or other type of user interface input event). For example, if a boundary of a document image is not reached and the user is inputting a scroll down function, the computing device <b>100</b> may continue to scroll down the document image so long as the user's finger remains in contact with the touchscreen and continues to move.</p>
<p id="p-0050" num="0049">Once a boundary of the document image is reached (i.e., determination block <b>310</b>=&#x201c;Yes&#x201d;), the computing device <b>100</b> may determine a distortion that should be applied to the displayed image and, if appropriate, calculate a distortion factor to be used in distorting the image. The particular distortion to be applied to the displayed image may depend upon the application, the nature of the document, user settings and other information. As discussed above, a variety of different distortion functions may be applied to documents according to the various aspects. Thus, an application developer may specify a particular distortion function for particular types of documents. Also, users may be allowed to select a particular distortion function as part of their user settings. Thus, some users may prefer to have greater distortion applied to images so that it is easier to determine when a list and or document boundary has been reached, while some users may prefer to have little or no distortion applied. The amount of distortion to be applied may be determined by a distortion factor that may be calculated based on the distance that the user input gesture (e.g., a touch event) would have the document image move after a boundary of the document is reached, or the distance that an input gesture (e.g., a touch event) would cause a document to move beyond its boundary. Thus, the longer the touch event (or other type of user input), the greater the distortion that will be applied to the image. At block <b>314</b>, the computing device <b>100</b> may apply the determined distortion function to the display image in accordance with the calculated distortion factor. For instance, if the end of a contact list is reached while the user is tracing an upward scroll gesture, the computing device <b>100</b> may apply a distortion function, such as a stretching effect, to inform the user that the end of the document image is reached.</p>
<p id="p-0051" num="0050">The computing device continues to detect touch events (or touch computer mouse button presses, etc.) with each touchscreen update at block <b>302</b>. Thus, the degree of image distortion applied to the displayed image will continue to depend upon the user input gesture, such as the location of the user's finger on the touchscreen. If the user scrolls backward (i.e., away from the document boundary) without lifting a finger from the touchscreen (or touch surface, computer mouse, etc.), the amount of distortion applied to the displayed image at block <b>314</b> will be reduced. If the user lifts a finger off of the touchscreen (or touch surface, computer mouse, etc.), a touch up event will be detected at block <b>302</b>, which will be determined at determination block <b>304</b>, prompting an end of the distortion function at block <b>306</b>. Terminating the distortion function will allow the displayed image to return to normal. In an aspect, terminating the distortion function at block <b>306</b> may include animating the release of the distortion.</p>
<p id="p-0052" num="0051">In an optional aspect, at optional determination block <b>316</b>, the computing device <b>100</b> may be configured to determine when a maximum distortion level of the document image is defined by the calculated distortion factor and the determined distortion function. If the user continues a touch gesture (or other type of user interface input) after the image has been distorted a maximum amount, this may indicate that the user is actually executing a different type of GUI input (i.e., a gesture other than a drag, scroll or flick gesture) for which image distortion is not appropriate. A maximum distortion level depend upon other types of GUI touch gestures (or other type of user interface input) that may be executed and/or may be assigned to each document image to enable the computing device <b>100</b> to determine the extent to which the document image may be distorted. For example, an email list may have a maximum distortion level of 3 centimeter, so that once a boundary is reached, the computing device <b>100</b> may only distort the displayed email items based on the first 3 centimeter of a linear scroll gesture. If a touch event (or other type of user interface input) would cause more than the designated maximum distortion level, the computing device <b>100</b> may be configured to revert the image back to its original form, as may be appropriate for another type of touch gesture. If the maximum distortion of the image is reached (i.e., optional determination block <b>316</b>=&#x201c;Yes&#x201d;), the computing device <b>100</b> may revert the display image to its original form at optional block <b>318</b> before receiving the next touch event at block <b>302</b>. If a maximum distortion level is not reached (i.e., optional determination block <b>316</b>=&#x201c;No&#x201d;), the computing device <b>100</b> may continue the current level of distortion and receive the next touch event at block <b>302</b>.</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a process flow of another aspect method <b>400</b> for applying a distortion function during a rapid scroll or pan, as may occur in response to a flick gesture. In method <b>400</b> at block <b>302</b>, a computing device <b>100</b> may detect a touch event and determine whether the traced gesture is a flick gesture at determination block <b>404</b>. If the gesture is not a flick gesture (i.e., determination block <b>404</b>=&#x201c;No&#x201d;), the computing device <b>100</b> may proceed with the processing of method <b>300</b> described above with reference to <figref idref="DRAWINGS">FIG. 3</figref> by determine whether the touch event (or other type of user interface input) was a touch up event at determination block <b>304</b> (<figref idref="DRAWINGS">FIG. 3</figref>). If the gesture is determined to be a flick gesture (i.e., determination block <b>404</b>=&#x201c;Yes&#x201d;), the computing device <b>100</b> may determine how far the document will scroll or pan at block <b>406</b>. Methods for calculating the distance of a document movement or list scroll based upon a flick gesture are well known and may be used in method <b>400</b>.</p>
<p id="p-0054" num="0053">The computing device may be configured to animate the movement of the document in response to the flick gesture, such as by panning the document beneath the display view window or rapidly scrolling through a list of elements. This animation may be accomplished by sequentially determining the next display increment (e.g., the next item in the list) and generating a display including that increment until the rapid pan or scroll reaches a predicted end point. The determination of the next display increment may take into account deceleration factors so that the display appears fast at first but slows over time until the end of the rapid pan or scroll is reached. However, in a conventional computing device that does not include scroll bars in the display, a user may not be aware of when a list end or document boundary has been reached.</p>
<p id="p-0055" num="0054">To provide the user with a visual cue that the rapid document movement or scroll has encountered a document end or boundary, the computing device may test the document as it animates the movement. For example, at determination block <b>408</b>, the computing device <b>100</b> may determine whether the end of the rapid pan or scroll has been reached (i.e., that the document has come to the end of the travel indicated by the flick gesture). If the end of the pan or scroll has been reached (i.e., determination block <b>408</b>=&#x201c;Yes&#x201d;), the computing device <b>100</b> may continue normal processing by detect the next touch event at block <b>302</b>. If the end of the pan or scroll has not been reached (i.e., determination block <b>408</b>=&#x201c;No&#x201d;), this means that the animation should continue, so at block <b>410</b> the computing device <b>100</b> may determine the next display increment. As mentioned above, the determination of the next display increment may include determining a speed of the pan or scroll based upon factors such as the speed imparted by the flick gesture and simulated friction which imposes a deceleration effect in the animation. As the next display increment is determined, at determination block <b>414</b> the computing device <b>100</b> may determine whether a boundary of the document is reached in that display increment. For instance, the computing device <b>100</b> may determine whether the next display increment includes the end of an email list. If a boundary of the document has not been reached (i.e., determination block <b>414</b>=&#x201c;No&#x201d;), the computing device <b>100</b> may generate a display showing the next display increment at block <b>412</b>, and return to block <b>408</b> to again determine whether the end of the rapid pan or scroll has been reached.</p>
<p id="p-0056" num="0055">If a boundary of the document has been reached in the next display increment (i.e., determination block <b>414</b>=&#x201c;Yes&#x201d;), the computing device <b>100</b> may calculate a distortion factor to be applied to the display image in a bounce distortion animation at block <b>313</b>. The distortion factor may be based on the speed of the rapid pan or scroll when the boundary is encountered. Thus, if the boundary is encountered immediately after a rapid flick gesture when the document is animated as moving rapidly, the calculated distortion factor may be greater, and thus the amount of image distortion (e.g., the degree of stretching or amount of bounce) may be more severe, than if the boundary is encountered towards the end of the rapid pan or scroll animation when the document appears to be moving slowly. As mentioned above, the bounce distortion animation may include one or more bounces and one or more cycles of image stretching or compression. At block <b>416</b>, the computing device <b>100</b> may apply a bounce distortion animation to the display image in accordance with the calculated distortion factor. Once the bounce animation has ended, the computing device may return to normal GUI function by receiving the next touch event at block <b>302</b>.</p>
<p id="p-0057" num="0056">As would be appreciated by one of skill in the art, the methods <b>300</b> and <b>400</b> illustrated in <figref idref="DRAWINGS">FIGS. 3 and 4</figref> represent examples of how the image distortion functions of the various aspects could be implemented in a computing device. Any number of variations of the processes may be implemented without departing from the scope of the claims.</p>
<p id="p-0058" num="0057">The aspects described above may be implemented on any of a variety of computing devices <b>100</b>. Typically, such computing devices <b>100</b> will have in common the components illustrated in <figref idref="DRAWINGS">FIG. 5</figref>. For example, the computing devices <b>100</b> may include a processor <b>191</b> coupled to internal memory <b>192</b> and a touch surface input device <b>104</b> or display <b>102</b>. The touch surface input device <b>104</b> can be any type of touchscreen display <b>101</b>, such as a resistive-sensing touchscreen, capacitive-sensing touchscreen, infrared sensing touchscreen, acoustic/piezoelectric sensing touchscreen, or the like. The various aspects are not limited to any particular type of touchscreen display <b>101</b> or touchpad technology. Additionally, the computing device <b>100</b> may have an antenna <b>194</b> for sending and receiving electromagnetic radiation that is connected to a wireless data link and/or cellular telephone transceiver <b>195</b> coupled to the processor <b>191</b>. Computing devices <b>100</b> which do not include a touchscreen input device <b>104</b> (and thus typically do not have a display <b>102</b>) usually do include a key pad <b>196</b> or miniature keyboard, and menu selection keys or rocker switches <b>197</b>, which serve as pointing devices. The processor <b>191</b> may further be connected to a wired network interface <b>198</b>, such as a universal serial bus (USB) or FireWire&#xae; connector socket, for connecting the processor <b>191</b> to an external touchpad or touch surface on which the various aspects may also be applied.</p>
<p id="p-0059" num="0058">In some implementations, a touch surface can be provided in areas of the electronic device <b>100</b> outside of the touchscreen display <b>104</b> or display <b>102</b>. For example, the keypad <b>196</b> can include a touch surface with buried capacitive touch sensors. In other implementations, the keypad <b>196</b> may be eliminated so the touchscreen display <b>104</b> provides the complete GUI. In yet further implementations, a touch surface may be an external touchpad that can be connected to the computing device <b>100</b> by means of a cable to a cable connector <b>198</b>, or by a wireless transceiver (e.g., transceiver <b>195</b>) coupled to the processor <b>191</b>.</p>
<p id="p-0060" num="0059">The aspects described above may also be implemented within a variety of computing devices, such as a laptop computer <b>600</b> as illustrated in <figref idref="DRAWINGS">FIG. 6</figref>. Many laptop computers include a touch pad touch surface that serves as the computer's pointing device, and thus may receive drag, scroll and flick gestures similar to those implemented on mobile devices equipped with a touchscreen display. A laptop computer <b>600</b> will typically include a processor <b>601</b> coupled to volatile memory <b>602</b> and a large capacity nonvolatile memory, such as a disk drive <b>603</b>. The computer <b>600</b> may also include a floppy disc drive <b>604</b> and a compact disc (CD) drive <b>605</b> coupled to the processor <b>601</b>. The computer device <b>600</b> may also include a number of connector ports coupled to the processor <b>601</b> for establishing data connections or receiving external memory devices, such as a USB or FireWire&#xae; connector sockets or other network connection circuits <b>606</b> for coupling the processor <b>601</b> to a network. In a notebook configuration, the computer housing includes the touchpad <b>607</b>, keyboard <b>608</b> and the display <b>609</b> all coupled to the processor <b>601</b>. Other configurations of computing device may include a computer mouse or trackball coupled to the processor (e.g., via a USB input) as are well known.</p>
<p id="p-0061" num="0060">The computing device processor <b>191</b>, <b>601</b> may be any programmable microprocessor, microcomputer or multiple processor chip or chips that can be configured by software instructions (applications) to perform a variety of functions, including the functions of the various aspects described above. In some portable computing devices <b>100</b>, multiple processors <b>191</b> may be provided, such as one processor dedicated to wireless communication functions and one processor dedicated to running other applications. The processor may also be included as part of a communication chipset.</p>
<p id="p-0062" num="0061">The foregoing method descriptions and the process flow diagrams are provided merely as illustrative examples and are not intended to require or imply that the processes of the various aspects must be performed in the order presented. As will be appreciated by one of skill in the art the order of blocks and processes in the foregoing aspects may be performed in any order. Words such as &#x201c;thereafter,&#x201d; &#x201c;then,&#x201d; &#x201c;next,&#x201d; etc. are not intended to limit the order of the processes; these words are simply used to guide the reader through the description of the methods. Further, any reference to claim elements in the singular, for example, using the articles &#x201c;a,&#x201d; &#x201c;an&#x201d; or &#x201c;the&#x201d; is not to be construed as limiting the element to the singular.</p>
<p id="p-0063" num="0062">The various illustrative logical blocks, modules, circuits, and algorithm processes described in connection with the aspects disclosed herein may be implemented as electronic hardware, computer software, or combinations of both. To clearly illustrate this interchangeability of hardware and software, various illustrative components, blocks, modules, circuits, and algorithms have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application, but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.</p>
<p id="p-0064" num="0063">The hardware used to implement the various illustrative logics, logical blocks, modules, and circuits described in connection with the aspects disclosed herein may be implemented or performed with a general purpose processor, a digital signal processor (DSP), an application specific integrated circuit (ASIC), a field programmable gate array (FPGA) or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform the functions described herein. A general-purpose processor may be a microprocessor, but, in the alternative, the processor may be any conventional processor, controller, microcontroller, or state machine. A processor may also be implemented as a combination of computing devices, e.g., a combination of a DSP and a microprocessor, a plurality of microprocessors, one or more microprocessors in conjunction with a DSP core, or any other such configuration. Alternatively, some processes or methods may be performed by circuitry that is specific to a given function.</p>
<p id="p-0065" num="0064">In one or more exemplary aspects, the functions described may be implemented in hardware, software, firmware, or any combination thereof. If implemented in software, the functions may be stored on or transmitted over as one or more instructions or code on a computer-readable medium. The processes of a method or algorithm disclosed herein may be embodied in a processor-executable software module executed which may reside on a computer-readable medium. Computer-readable media includes both computer storage media and communication media including any medium that facilitates transfer of a computer program from one place to another. A storage media may be any available media that may be accessed by a computer. By way of example, and not limitation, such computer-readable media may comprise RAM, ROM, EEPROM, CD-ROM or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other medium that may be used to carry or store desired program code in the form of instructions or data structures and that may be accessed by a computer. Also, any connection is properly termed a computer-readable medium. For example, if the software is transmitted from a website, server, or other remote source using a coaxial cable, fiber optic cable, twisted pair, digital subscriber line (DSL), or wireless technologies such as infrared, radio, and microwave, then the coaxial cable, fiber optic cable, twisted pair, DSL, or wireless technologies such as infrared, radio, and microwave are included in the definition of medium. Disk and disc, as used herein, includes compact disc (CD), laser disc, optical disc, digital versatile disc (DVD), floppy disk, and blu-ray disc where disks usually reproduce data magnetically, while discs reproduce data optically with lasers. Combinations of the above should also be included within the scope of computer-readable media. Additionally, the operations of a method or algorithm may reside as one or any combination or set of codes and/or instructions stored on a machine readable medium and/or computer-readable medium, which may be incorporated into a computer program product.</p>
<p id="p-0066" num="0065">The foregoing description of the various aspects is provided to enable any person skilled in the art to make or use the present invention. Various modifications to these aspects will be readily apparent to those skilled in the art, and the generic principles defined herein may be applied to other aspects without departing from the scope of the invention. Thus, the present invention is not intended to be limited to the aspects shown herein, and instead the claims should be accorded the widest scope consistent with the principles and novel features disclosed herein.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for implementing a user interface function on a computing device, comprising:
<claim-text>detecting a document image movement gesture input on a user interface device of the computing device;</claim-text>
<claim-text>determining a document image movement of a document displayed on the computing device based on the movement gesture input;</claim-text>
<claim-text>determining whether a boundary of the document is reached based on the determined movement of the document image; and</claim-text>
<claim-text>distorting an image of the document displayed on the computing device when a boundary of the document image is reached, wherein distorting the image of the document includes distorting the document image in an accordion style by inserting space between display image elements without distorting the display image elements.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein distorting the image of the document further involves one of stretching the document image, shrinking the document image, and bouncing the document image.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein distorting the image of the document further includes distorting the document image along an axis selected from a horizontal axis, a vertical axis, a diagonal axis, and both the horizontal and vertical axes.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the user interface device is a touch surface; and</claim-text>
<claim-text>the document image movement gesture input is a touch event detected on the touch surface.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the touch surface is a touchscreen display.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein distorting the image of the document comprises distorting the document image based on a distance that the touch event travels after the boundary of the document is reached.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising:
<claim-text>initiating a rapid pan or scroll animation if the touch event represents a flick gesture;</claim-text>
<claim-text>determining whether an end of the rapid pan or scroll animation has been reached; and</claim-text>
<claim-text>animating the distortion of the document image if the boundary of the document image is reached before the end of the rapid pan or scroll animation is reached.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein animating the distortion of the document image comprises animating a bouncing movement of the document image.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein animating the distortion of the document image comprises animating a bouncing movement and a compression distortion of the document image.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>determining a distortion function to be applied to distort the document image; and</claim-text>
<claim-text>calculating a distortion factor based on a distance the document image movement gesture input would move the document image after the boundary is reached,</claim-text>
<claim-text>wherein distorting the document image comprises applying the determined distortion function to the display image based on the calculated distortion factor.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising:
<claim-text>determining whether a maximum level of display image distortion is reached; and</claim-text>
<claim-text>reverting the display image back to its original form if the maximum level of display image distortion is reached.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A computing device, comprising:
<claim-text>a processor;</claim-text>
<claim-text>a display coupled to the processor; and</claim-text>
<claim-text>a user input device coupled to the processor;</claim-text>
<claim-text>wherein the processor is configured with processor-executable instructions to perform operations comprising:
<claim-text>detecting a document image movement gesture input on a user interface device of the computing device;</claim-text>
<claim-text>determining a document image movement of a document displayed on the computing device based on the movement gesture input;</claim-text>
<claim-text>determining whether a boundary of the document is reached based on the determined movement of the document image; and</claim-text>
<claim-text>distorting an image of the document displayed on the computing device when a boundary of the document image is reached such that distorting the image of the document includes distorting the document image in an accordion style by inserting space between display image elements without distortion the display image elements.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The computing device of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the processor is configured with processor-executable instructions such that distorting the image of the document further involves one of stretching the document image, shrinking the document image, and bouncing the document image.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The computing device of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the processor is configured with processor-executable instructions such that distorting the image of the document further includes distorting the document image along an axis selected from a horizontal axis, a vertical axis, a diagonal axis, and both the horizontal and vertical axes.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The computing device of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein:
<claim-text>the user interface device is a touch surface; and</claim-text>
<claim-text>the document image movement gesture input is a touch event detected on the touch surface.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The computing device of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the touch surface is a touchscreen display.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The computing device of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the processor is configured with processor-executable instructions such that distorting the image of the document comprises distorting the document image based on a distance that the touch event travels image after the boundary of the document is reached.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The computing device of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the processor is configured with processor-executable instructions to perform operations further comprising:
<claim-text>initiating a rapid pan or scroll animation if the touch event represents a flick gesture;</claim-text>
<claim-text>determining whether an end of the rapid pan or scroll animation has been reached; and</claim-text>
<claim-text>animating the distortion of the document image if the boundary of the document image is reached before the end of the rapid pan or scroll animation is reached.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The computing device of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the processor is configured with processor-executable instructions such that animating the distortion of the document image comprises animating a bouncing movement of the document image.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The computing device of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the processor is configured with processor-executable instructions such that animating the distortion of the document image comprises animating a bouncing movement and a compression distortion of the document image.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The computing device of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the processor is configured with processor-executable instructions to perform operations further comprising:
<claim-text>determining a distortion function to be applied to distort the document image; and</claim-text>
<claim-text>calculating a distortion factor based on a distance the document image movement gesture input would move the document image after the boundary is reached,</claim-text>
<claim-text>wherein distorting the document image comprises applying the determined distortion function to the display image based on the calculated distortion factor.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The computing device of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the processor is configured with processor-executable instructions to perform operations further comprising:
<claim-text>determining whether a maximum level of display image distortion is reached; and</claim-text>
<claim-text>reverting the display image back to its original form if the maximum level of display image distortion is reached.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. A computing device, comprising:
<claim-text>means for displaying a document image;</claim-text>
<claim-text>means for detecting a document image movement gesture input;</claim-text>
<claim-text>means for determining a document image movement of a document displayed on the means for displaying a document image based on the movement gesture input;</claim-text>
<claim-text>means for determining whether a boundary of the document is reached based on the determined movement of the document image; and</claim-text>
<claim-text>means for distorting an image of the document displayed on the means for displaying a document image when a boundary of the document image is reached by distorting the document image in an accordion style by inserting space between display image elements without distorting the display image elements.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The computing device of <claim-ref idref="CLM-00023">claim 23</claim-ref>, wherein means for distorting the image of the document further comprises one of means for stretching the document image, means for shrinking the document image, and means for bouncing the document image.</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The computing device of <claim-ref idref="CLM-00023">claim 23</claim-ref>, wherein means for distorting the image of the document further comprises means for distorting the document image along an axis selected from a horizontal axis, a vertical axis, a diagonal axis, and both the horizontal and vertical axes.</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The computing device of <claim-ref idref="CLM-00023">claim 23</claim-ref>, wherein:
<claim-text>means for receiving a user interface input comprises means for receiving a user input touch on a surface; and</claim-text>
<claim-text>the document image movement gesture input is a touch event detected on the means for receiving a user input touch on a surface.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The computing device of <claim-ref idref="CLM-00026">claim 26</claim-ref>, wherein means for receiving a user input touch on a surface comprises means for receiving a user input touch on a display.</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. The computing device of <claim-ref idref="CLM-00026">claim 26</claim-ref>, wherein means for distorting the image of the document comprises means for distorting the document image based on a distance that the touch event travels after the boundary of the document is reached.</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. The computing device of <claim-ref idref="CLM-00026">claim 26</claim-ref>, further comprising:
<claim-text>means for initiating a rapid pan or scroll animation if the touch event represents a flick gesture;</claim-text>
<claim-text>means for determining whether an end of the rapid pan or scroll animation has been reached; and</claim-text>
<claim-text>means for animating the distortion of the document image if the boundary of the document image is reached before the end of the rapid pan or scroll animation is reached.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00030" num="00030">
<claim-text>30. The computing device of <claim-ref idref="CLM-00029">claim 29</claim-ref>, wherein means for animating the distortion of the document image comprises means for animating a bouncing movement of the document image.</claim-text>
</claim>
<claim id="CLM-00031" num="00031">
<claim-text>31. The computing device of <claim-ref idref="CLM-00029">claim 29</claim-ref>, wherein means for animating the distortion of the document image comprises means for animating a bouncing movement and a compression distortion of the document image.</claim-text>
</claim>
<claim id="CLM-00032" num="00032">
<claim-text>32. The computing device of <claim-ref idref="CLM-00023">claim 23</claim-ref>, further comprising:
<claim-text>means for determining a distortion function to be applied to distort the document image; and</claim-text>
<claim-text>means for calculating a distortion factor based on a distance the document image movement gesture input would move the document image after the boundary is reached,</claim-text>
<claim-text>wherein means for distorting the document image comprises means for applying the determined distortion function to the display image based on the calculated distortion factor.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00033" num="00033">
<claim-text>33. The computing device of <claim-ref idref="CLM-00032">claim 32</claim-ref>, further comprising:
<claim-text>means for determining whether a maximum level of display image distortion is reached; and</claim-text>
<claim-text>means for reverting the display image back to its original form if the maximum level of display image distortion is reached.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00034" num="00034">
<claim-text>34. A non-transitory computer-readable storage medium having stored thereon computer-executable instructions configured to cause a computer processor to perform operations, comprising:
<claim-text>detecting a document image movement gesture input on a user interface device;</claim-text>
<claim-text>determining a document image movement of a document based on the movement gesture input;</claim-text>
<claim-text>determining whether a boundary of the document is reached based on the determined movement of the document image; and</claim-text>
<claim-text>distorting an image of the displayed document when a boundary of the document image is reached such that distorting the image of the document includes the document image in an accordion style by inserting space between display image elements without distorting the display image elements.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00035" num="00035">
<claim-text>35. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00034">claim 34</claim-ref>, wherein the stored computer-executable instructions are configured such that distorting the image of the document further involves one of stretching the document image, shrinking the document image, and bouncing the document image.</claim-text>
</claim>
<claim id="CLM-00036" num="00036">
<claim-text>36. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00034">claim 34</claim-ref>, wherein the stored computer-executable instructions are configured such that distorting the image of the document further includes distorting the document image along an axis selected from a horizontal axis, a vertical axis, a diagonal axis, and both the horizontal and vertical axes.</claim-text>
</claim>
<claim id="CLM-00037" num="00037">
<claim-text>37. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00034">claim 34</claim-ref>, wherein the stored computer-executable instructions are configured such that the document image movement gesture input is a touch event detected on a touch surface.</claim-text>
</claim>
<claim id="CLM-00038" num="00038">
<claim-text>38. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00034">claim 34</claim-ref>, wherein the stored computer-executable instructions are configured such that the document image movement gesture input is a touch event detected on a touchscreen display.</claim-text>
</claim>
<claim id="CLM-00039" num="00039">
<claim-text>39. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00038">claim 38</claim-ref>, wherein the stored computer-executable instructions are configured such that distorting the image of the document comprises distorting the document image based on a distance that the touch event travels after the boundary of the document is reached.</claim-text>
</claim>
<claim id="CLM-00040" num="00040">
<claim-text>40. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00038">claim 38</claim-ref>, wherein the stored computer-executable instructions are configured to cause a computer to perform operations further comprising:
<claim-text>initiating a rapid pan or scroll animation if the touch event represents a flick gesture;</claim-text>
<claim-text>determining whether an end of the rapid pan or scroll animation has been reached; and</claim-text>
<claim-text>animating the distortion of the document image if the boundary of the document image is reached before the end of the rapid pan or scroll animation is reached.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00041" num="00041">
<claim-text>41. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00040">claim 40</claim-ref>, wherein the stored computer-executable instructions are configured such that animating the distortion of the document image comprises animating a bouncing movement of the document image.</claim-text>
</claim>
<claim id="CLM-00042" num="00042">
<claim-text>42. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00040">claim 40</claim-ref>, wherein the stored computer-executable instructions are configured such that animating the distortion of the document image comprises animating a bouncing movement and a compression distortion of the document image.</claim-text>
</claim>
<claim id="CLM-00043" num="00043">
<claim-text>43. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00034">claim 34</claim-ref>, wherein the stored computer-executable instructions are configured to cause a computer to perform operations further comprising:
<claim-text>determining a distortion function to be applied to distort the document image; and</claim-text>
<claim-text>calculating a distortion factor based on a distance the document image movement gesture input would move the document image after the boundary is reached,</claim-text>
<claim-text>wherein distorting the document image comprises applying the determined distortion function to the display image based on the calculated distortion factor.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00044" num="00044">
<claim-text>44. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00043">claim 43</claim-ref>, wherein the stored computer-executable instructions are configured to cause a computer to perform operations further comprising:
<claim-text>determining whether a maximum level of display image distortion is reached; and</claim-text>
<claim-text>reverting the display image back to its original form if the maximum level of display image distortion is reached.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
