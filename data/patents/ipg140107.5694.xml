<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626795-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626795</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12940991</doc-number>
<date>20101105</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>464</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>7</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>707795</main-classification>
<further-classification>707961</further-classification>
<further-classification>715243</further-classification>
</classification-national>
<invention-title id="d2e53">Dynamic data association</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6321158</doc-number>
<kind>B1</kind>
<name>DeLorme et al.</name>
<date>20011100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6766329</doc-number>
<kind>B1</kind>
<name>Nicholson</name>
<date>20040700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7111232</doc-number>
<kind>B1</kind>
<name>Bascom</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715209</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7181438</doc-number>
<kind>B1</kind>
<name>Szabo</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>7774378</doc-number>
<kind>B2</kind>
<name>Nelson</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707803</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2003/0167353</doc-number>
<kind>A1</kind>
<name>de Bonet et al.</name>
<date>20030900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709318</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2004/0054549</doc-number>
<kind>A1</kind>
<name>Chittenden et al.</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2006/0053382</doc-number>
<kind>A1</kind>
<name>Gardner et al.</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715764</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2007/0061266</doc-number>
<kind>A1</kind>
<name>Moore et al.</name>
<date>20070300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705 51</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2009/0216438</doc-number>
<kind>A1</kind>
<name>Shafer</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2009/0292465</doc-number>
<kind>A1</kind>
<name>Kaldewey et al.</name>
<date>20091100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2010/0075643</doc-number>
<kind>A1</kind>
<name>Cooper et al.</name>
<date>20100300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2010/0076994</doc-number>
<kind>A1</kind>
<name>Soroca et al.</name>
<date>20100300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707769</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2010/0082430</doc-number>
<kind>A1</kind>
<name>Ramer et al.</name>
<date>20100400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705 1449</main-classification></classification-national>
</us-citation>
</us-references-cited>
<number-of-claims>18</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>715249</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715243</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715764</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707953</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707961</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707602</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707737</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707769</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707795</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>9</number-of-drawing-sheets>
<number-of-figures>12</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120117462</doc-number>
<kind>A1</kind>
<date>20120510</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Jacobson</last-name>
<first-name>Eric</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Thomas</last-name>
<first-name>Les</first-name>
<address>
<city>Los Gatos</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Nelson</last-name>
<first-name>Peter</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Jacobson</last-name>
<first-name>Eric</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Thomas</last-name>
<first-name>Les</first-name>
<address>
<city>Los Gatos</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Nelson</last-name>
<first-name>Peter</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Fish &#x26; Richardson P.C.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Apple Inc.</orgname>
<role>02</role>
<address>
<city>Cupertino</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Vy</last-name>
<first-name>Hung T</first-name>
<department>2163</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Methods, program products, and systems implementing dynamic data association are described. Relations between a first data item and a second data item can be created in an ad hoc manner. The first data item can include a row of data in a table in a relational database. The second data item can include a row of data in the same table, in another table in the relational database, or a document outside the relational database. Configurable metadata can be created to link the first data item and the second data item. The link can be directional. The configurable metadata can include data specified by a user. The configurable metadata can be stored in one or more system tables in the relational database. The configurable metadata can be specific to the user, or to a work group of the user. The configurable metadata can change when the first data item or the second data item is modified.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="156.72mm" wi="147.66mm" file="US08626795-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="248.67mm" wi="181.36mm" orientation="landscape" file="US08626795-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="237.07mm" wi="167.22mm" orientation="landscape" file="US08626795-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="236.47mm" wi="211.41mm" file="US08626795-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="256.96mm" wi="196.09mm" orientation="landscape" file="US08626795-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="239.01mm" wi="210.14mm" file="US08626795-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="216.58mm" wi="206.25mm" file="US08626795-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="217.25mm" wi="185.84mm" file="US08626795-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="231.99mm" wi="170.43mm" file="US08626795-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="241.55mm" wi="183.30mm" orientation="landscape" file="US08626795-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">TECHNICAL FIELD</heading>
<p id="p-0002" num="0001">This disclosure relates generally to database architecture.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">A relational database can include a collection of relations, frequently known as tables. A table in the relational database can include a set of data elements or values that are organized using vertical columns and horizontal rows. The table can have a specified number of columns and a variable number of rows. Each column can have a data type that defines what category of data can be stored in the column. A row of a table can include one or more data fields. Each data field can correspond to a column, and have a data type that corresponds to the data type of the column. The type of a data column can be defined by a database schema, which can be a data model that defines how data in the relational database are represented or accessed.</p>
<p id="p-0004" num="0003">Data in various tables of a relational database can be related in a database join operation. A join operation can combine data fields from two tables by using values common to each of the two tables. A database join can require a condition, also known as a join predicate. A result of the database join can include data from the two tables as well as results of various operations (e.g., mathematical operations, logical operations, or string operations) between various data fields of the tables.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0005" num="0004">Methods, program products, and systems implementing dynamic data association are described. Relations between a first data item and a second data item can be created in an ad hoc manner. The first data item can include a row of data in a table in a relational database. The second data item can include a row of data in the same table, in another table in the relational database, or a document outside the relational database. Configurable metadata can be created to link the first data item and the second data item. The link can be unidirectional or bidirectional. The configurable metadata can include data specified by a user. The configurable metadata can be stored in one or more system tables in the relational database. The configurable metadata can be specific to the user, or to a work group of the user. The configurable metadata can change when the first data item or the second data item is modified.</p>
<p id="p-0006" num="0005">In some implementations, a method implementing dynamic data association can include providing for display in a user interface a view of a first data collection of a database. The first data collection can be formatted using a layout of the first data collection. The method can include receiving an input from the user interface to associate a first data item in the first data collection with one or more second data items of a second data collection. The method can include creating configurable metadata. The configurable metadata can relate the first data item and the one or more second data items. Upon receiving a selection of the first data item, at least one of the one or more second data items can be displayed. The displayed second data item can be formatted using the layout.</p>
<p id="p-0007" num="0006">In some implementations, a method implementing dynamic data association can include applying various notification mechanisms to the data association. In a collaborative database operating environment, a first user's change to an association on a first client can cause a notification to be sent to a second client for display. The second client can determine, based on the data association and the change, whether to request a data update.</p>
<p id="p-0008" num="0007">These and other implementations can be utilized to achieve one or more of the following advantages. Data can be associated in an ad hoc manner without requiring database operations. Thus, a user can be free to associate various data without having to define a database operation joining two tables or to change the data in the two tables. A database row can be associated with a document to allow flexible data management of both structured and unstructured data. Configurable metadata that relate a first data item and a second data item can include formatting information specifying ways the association is to be displayed, for example, by specifying a layout that can be applied to the association.</p>
<p id="p-0009" num="0008">The details of one or more implementations of dynamic data association are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of dynamic data association will become apparent from the description, the drawings, and the claims</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an exemplary user interface of dynamic data association.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 2</figref> is a graphical illustration of exemplary relations between associated data.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIGS. 3A and 3B</figref> illustrate exemplary user interfaces of creating a data association.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram illustrating an exemplary data structure for implementing dynamic data association.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIGS. 5A-5C</figref> illustrate exemplary data structures for storing configurable metadata.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 6</figref> illustrates exemplary notification operations of dynamic data association.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 7</figref> is block diagram illustrating an exemplary system implementing notification features and operations of dynamic data association.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 8</figref> is a flowchart illustrating exemplary processes of dynamic data association.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 9</figref> is a block diagram of an exemplary system architecture for implementing the dynamic data association features and operations.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<p id="p-0019" num="0018">Like reference symbols in the various drawings indicate like elements.</p>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<heading id="h-0006" level="1">Overview of Dynamic Data Association</heading>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 1</figref> illustrates exemplary user interface <b>100</b> of dynamic data association. User interface <b>100</b> that can include section <b>102</b> that lists one or more data sets (e.g., &#x201c;data set <b>1</b>&#x201d; and &#x201c;data set <b>2</b>&#x201d;). Each data set can correspond to a database, a document repository, or a collection. A collection can include a set of one or more data records. For example, a collection can include a database table or a set of data records retrieved in response to a search. Section <b>102</b> can be configured to accept a user input selecting a dataset to access. A selected data set can be highlighted (e.g., by using underline).</p>
<p id="p-0021" num="0020">User interface <b>100</b> can include record list section <b>104</b> that can display a list of records of the selected data set. The list of records can be selected based on one or more selection criteria (e.g., a selection criterion specified in a structured query language (SQL) query). Record list section <b>104</b> can receive user input to select a particular data item (e.g., a data record). User interface <b>100</b> can include main display pane <b>106</b> that can display details of the selected data record.</p>
<p id="p-0022" num="0021">Main display pane <b>106</b> can display information relating to the selected data item using a layout. The layout can specify display attributes of a data field, including, for example, location, size, font, and color. The layout can include a theme to be applied to data in the data set. Main display pane <b>106</b> can include display area <b>108</b> for displaying data items related to the selected data item. The data items displayed in display area <b>108</b> can include data items in the currently selected data set, data items in another data set, or data created on-spot. The data created on-spot can include, for example, a user-uploaded file to be associated with the selected data item, or a user-inserted row of data. The data items displayed in display area <b>108</b> can be formatted using a specified layout. The specified layout can include the layout for the currently selected data set or data item, a layout of the data set of the related items, or a layout specified for the association. For example, the data items displayed in display area <b>108</b> can be formatted using a current display theme. The columns in display area <b>108</b> can be formatted according to the layout.</p>
<p id="p-0023" num="0022">Dynamic data association can include relationships between collections or between a collection and a document. Association between collections can be created in pairs. The association can be created on a row-by-row basis. Configurable metadata can be displayed in display area <b>108</b>. For example, a name, a duration, a share property, a creator identifier, or a creation date of the association can be specified for the association. The association can be stored separately from the data sets. The association can be created between any types of records. For example, a record in a &#x201c;people&#x201d; collection can be associated with a document; a record in a &#x201c;client&#x201d; collection can be associated with a record in an &#x201c;event&#x201d; collection; a record in a &#x201c;people&#x201d; collection can be associated with a record in a &#x201c;client&#x201d; collection, and in turn, to a document.</p>
<p id="p-0024" num="0023">The selected data item (e.g., one of the data records shown in record list section <b>104</b>) can include a link to a document stored in a document repository. An image (e.g., a thumbnail) <b>110</b> of a portion of the document (e.g., a first page) can be displayed in main display pane <b>106</b>. Like record list section <b>104</b>, display area <b>108</b> can receive a selection input selecting one of the data items. That selected data item can be associated with a second document. An image <b>112</b> of a portion of the second document can be displayed in main display pane <b>106</b> according to the layout.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 2</figref> is a graphical illustration of exemplary relations between associated data. A database reporting program can provide user interface <b>200</b>. User interface <b>200</b> can include view <b>202</b> of data. The data in view <b>202</b> can include one or more data records of collection <b>204</b> of a relational database.</p>
<p id="p-0026" num="0025">A first data item (e.g., a data record) of collection <b>204</b> can be associated with another data item in collection <b>204</b>, a second data item in another collection <b>206</b>, or a third data item in document repository <b>208</b>. Collections <b>204</b> and <b>206</b> can relate to each other in a relational database, as represented by solid line <b>210</b>. The association (as represented by dashed line <b>212</b>) between the first data item and the second data item can be created independent of the existing relationship between collections <b>204</b> and <b>206</b>. For example, the association between the first data item and the second data item can be independent from a join operation that links collection <b>204</b> and collection <b>206</b>, from a fact table that links collection <b>204</b> and collection <b>206</b> (where collection <b>204</b> and collection <b>206</b> are dimension tables), or from access constraints prohibiting a user from creating a user table in the database linking collection <b>204</b> and collection <b>206</b>. The association can include configurable metadata <b>214</b>. Configurable metadata <b>214</b> can include various attributes of the association as described above. Likewise, association between the first data item and the third data item can include configurable metadata <b>216</b>, when collection <b>204</b> is unrelated to document repository <b>208</b>.</p>
<p id="p-0027" num="0026">Multiple levels of association can be created. For example, an association between the second data item and the third data item can be created. The association can include configurable metadata <b>218</b>. The associations between various data items can be created using a graphical user interface such as user interface <b>200</b>.</p>
<p id="p-0028" num="0027">The second and third data items, when associated, can be displayed in various views of user interface <b>200</b>. The views can include view <b>224</b> of the second data item, and view <b>226</b> of the third data item. The relations between the data items and their sources are represented by dotted arrows <b>232</b> and <b>234</b>. User interface <b>200</b> can provide directional navigation functions between the various views, as represented by directional links <b>228</b>, <b>220</b>, and <b>222</b>. Directional links <b>228</b>, <b>220</b>, and <b>222</b> can reflect a directional (including unidirectional or bidirectional) nature of an association. In a directional association, navigation from a source data item to a target data item can be enabled in user interface <b>200</b> (e.g., from view <b>224</b> to view <b>202</b>).</p>
<p id="p-0029" num="0028">A directional link can allow display of a target data item associated with a source data item when the collection containing the source data item is being selected for browsing in user interface <b>200</b>. Whether a data item is a source data item or a target data item can be specified in configuration metadata. For example, according to configurable metadata <b>214</b>, the first data item of collection <b>204</b> is a target data item, whereas the second data item of collection <b>206</b> is a source data item. Based on configurable metadata <b>212</b>, when collection <b>206</b> is viewed and when the second data item (source) is selected, the first data item can be displayed in view <b>202</b>. Conversely, when collection <b>204</b> is viewed and when the first data item (target) is selected, the second data item can be hidden from display, even though the first data item and the second data item are associated. A change made to the source data item can be reflected at the target data item. The association can be many-to-many.</p>
<p id="p-0030" num="0029">The second data item can be a source data item in relation to the first data item according to configurable metadata <b>214</b>, and a target data item in relation to the third data according to configurable metadata <b>218</b>. Moreover, links can be bidirectional, for example, as specified in configurable metadata <b>216</b>. In some implementations, a bidirectional link can be created by default.</p>
<heading id="h-0007" level="1">Creating a Data Association</heading>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIGS. 3A and 3B</figref> illustrate exemplary user interfaces for creating a data association. <figref idref="DRAWINGS">FIG. 3A</figref> illustrates exemplary user interface <b>300</b> for creating a data association. Creating the data association can include adding a relation between a first data item and one or more second data items in a collection. User interface <b>300</b> can include portion <b>302</b> that can list one or more data sets, first data item <b>306</b>, and main display pane <b>308</b>.</p>
<p id="p-0032" num="0031">User interface <b>300</b> can include control <b>310</b>, which can be configured to accept a user input for creating a data association for first data item <b>306</b>. Upon receiving the user input, add related data dialog <b>312</b> can be displayed. Displaying add related data dialog <b>312</b> can include providing a source selection dialog for selecting a data source for the data items to be added. The data source can include a collection, a document, or a search result.</p>
<p id="p-0033" num="0032">Add related data dialog <b>312</b> can display one or more data records from the data source. The data records can include data records in the data source that satisfy a condition. For example, the displayed data records can include one or more search results of a query. The query can include a SQL query defined by a user or one or more search terms specified by the user in search input area <b>314</b>. Any of the displayed data records can be selected. The selected data record can be designated as a second data item to be associated with the first data item.</p>
<p id="p-0034" num="0033">Add related data dialog <b>312</b> can include input area <b>316</b> for specifying various properties of the association between the first data item and the one or more second data items. For example, input area <b>316</b> can be used to specify an attribute of the association or a direction of the association, where neither the attribute nor the direction is stored in a collection in the database. Add related data dialog <b>312</b> can include control <b>318</b>. Control <b>318</b> (e.g., a button) can be configured to receive an input for adding a new record into the collection.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 3B</figref> illustrates exemplary user interface <b>320</b> for creating a new data record for data association. The new data record can be inserted into a collection specified by a user. User interface <b>320</b> can include create record dialog <b>322</b>. Create record dialog <b>322</b> can be created in response to an input received from control <b>318</b> as described in <figref idref="DRAWINGS">FIG. 3A</figref>. Create record dialog <b>322</b> can include exemplary input fields <b>324</b><i>a</i>, <b>324</b><i>b</i>, and <b>324</b><i>c</i>. Each of exemplary input fields <b>324</b><i>a</i>, <b>324</b><i>b</i>, and <b>324</b><i>c </i>can correspond to a data field of the collection into which a new record is going to be inserted. The record can be associated with first data item <b>306</b> after being created.</p>
<heading id="h-0008" level="1">Exemplary Data Structure</heading>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram illustrating exemplary data structure <b>400</b> for implementing dynamic data association. For convenience, the data structure will be described using relational database terms. Other implementations (e.g., an object-oriented data structures) are possible.</p>
<p id="p-0037" num="0036">Exemplary data structure <b>400</b> can include relation definition table <b>402</b>. Relation definition table <b>402</b> can be a system table including a definition of an association and attributes of the association. The attributes can include an identifier of a source collection, an identifier of a target collection, a name of the association, and other metadata. Relation definition table <b>402</b> can include an identifier of a reverse relation identifier, which can identify a reverse association of a current association. Relation definition table <b>402</b> can include a relation map identifier column that can be used to store an identifier of relation map <b>404</b><i>a. </i></p>
<p id="p-0038" num="0037">Relation map <b>404</b><i>a </i>can be a table that specifies a row-level map for an association. A row level map can map a row in a source collection to a row in a target collection. Data structure <b>400</b> can include multiple relation maps (e.g., <b>404</b><i>a </i>and <b>404</b><i>b</i>). Each relation map can be identified by a name that includes a string (e.g., &#x201c;relation_map_&#x201d;) and an identifier. Each relation entry defined in relation definition table <b>402</b> can correspond to a relation map. A relation entry pair (a relation entry and a reverse of the relation entry) can correspond to a same relational map. If both relation entries in the relation entry pair are deleted, the corresponding relation map can be dropped.</p>
<p id="p-0039" num="0038">Data structure <b>400</b> can include relation presentation table <b>406</b>. Relation presentation table <b>406</b> can include visible columns of a source collection as identified by the source collection identifier in relation definition table <b>402</b>.</p>
<p id="p-0040" num="0039">Data structure can include form object <b>410</b>. Form object <b>410</b> can be used to specify display characteristics of the related collections. Form object <b>410</b> can include a relation identifier identifying an entry in relation definition table <b>402</b>.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIGS. 5A-5C</figref> illustrate exemplary data structures for storing configurable metadata. The metadata can include system data for managing the associations, as well as user configurable data. The system data can be specific to a tenancy, which can include a work group of one or more clients. Association metadata operations can allow association operations including, for example, adding, deleting, and updating association between collections. By default, a user-defined collection can automatically be associated with documents, tags, and notes.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 5A</figref> illustrates example association metadata table <b>502</b>. Association metadata table <b>502</b> can include columns that correspond to a source collection identifier, a target collection identifier, a creation date and time, and an update date and time. Other columns can be included.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 5B</figref> illustrates data structure <b>520</b> for associating columns of collections. A data item in a source collection can be associated with specified columns of a row of data in a target collection. The specified columns can be represented in association column table <b>522</b> and column metadata table <b>524</b>. Association column table <b>522</b> can include data columns for storing a collection identifier and a column identifier in the collection. Each row of data in association column table <b>522</b> can be associated with one or more rows of data in column metadata table <b>524</b>. Column metadata table <b>524</b> can include columns for storing an identifier of the collection to which a column belongs, a data type identifier for identifying a data type of the column, a name of the column, and an internal identifier of the column.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 5C</figref> illustrates data structure <b>540</b> for associating rows of collections. Row association table <b>542</b> can include columns for storing a source collection identifier, a source row identifier, a target collection identifier, and a target row identifier. The source collection identifier can identify source collection <b>544</b>. The source row identifier can identify a row in source collection <b>544</b>. The target collection identifier can identify target collection <b>546</b>. The target row identifier can identify a row in target collection <b>546</b>. In a bidirectional association, two rows can be created in row association table <b>542</b>, one pointing from a source row to target row and the other pointing from a target row to source row.</p>
<p id="p-0045" num="0044">A client having read and write privileges to a source collection and a target collection can insert, update, or delete a row association between the source collection and the target collection. Inserting, deleting, and updating the row association can include updating row association table <b>542</b>. Inserting a new row association can include inserting a record in row association table <b>542</b> associating a source row ID with a target row ID. To reflect the insertion, the client can refresh an associated view or update displayed content via notification. Updating an association can include changing row content of a source row or a target row. To reflect the update, the client can refresh an associated view or update displayed content via notification. In some implementations where an association is bidirectional, deleting a row from either the source collection or the target collection can automatically delete all associations with that row. In addition, the association itself can be deleted, in which case the server can delete all associations. To reflect the deletion, the client can refresh an associated view or update displayed content via notification.</p>
<heading id="h-0009" level="1">Exemplary Dynamic Data Association Operations</heading>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 6</figref> illustrates exemplary notification operations of dynamic data association. Client <b>602</b> can interact with a server to perform various operations on association metadata <b>604</b> and row associations <b>606</b>.</p>
<p id="p-0047" num="0046">The server can maintain association metadata <b>604</b> that relates to all associations. Each tenancy can correspond to a distinct set of association metadata <b>604</b>. Operations on association metadata <b>604</b> can include create association operation <b>608</b>. Create association operation <b>608</b> can include a function call using a session identifier, a source collection identifier, and a target collection identifier as arguments. On success, the function can return an instance of an association object. One or more associations can be created between a source collection and a target collection. Operations on association metadata <b>604</b> can include delete association operation <b>610</b>. Delete association operation <b>610</b> can include a function call using the association object as an argument. If the source collection or target collection is dropped, associations involving the source collection or target collection can be deleted.</p>
<p id="p-0048" num="0047">Operations on association metadata <b>604</b> can include retrieve association operation <b>612</b>. Retrieve association operation <b>612</b> can include a function call using a session identifier and a source collection identifier as arguments. The function call can return a list of one or more association objects. Operations on association metadata <b>604</b> can include operation <b>614</b> for retrieving associations via paging. Operation <b>614</b> can include a function call using a query handle, a source collection identifier, and a session identifier as arguments. The query handle can include an identifier of a query that can retrieve results in pages. The function call of operation <b>614</b> can additionally use a query object, a query option object, and an order object as arguments. The query object can specify a query for retrieving data including row identifiers. The query option object can specify which portion of a result set of the query is to be retrieved as a page. The order object can specify a sort order.</p>
<p id="p-0049" num="0048">Operations on association metadata <b>604</b> can include get or set association columns operation <b>616</b>. Get or set association columns operation <b>616</b> can be used to set up columns that comprise an association view. A get association columns operation can be used to retrieve a set of one or more columns of the target collection that are associated with the source collection. The columns can be displayed in the association view. The get association columns operation can include a function call using arguments including a session identifier and an association identifier. A set association column operation can include a function call using arguments including a session identifier, an association identifier, a collection identifier, and a list of columns.</p>
<p id="p-0050" num="0049">Once association metadata <b>604</b> are setup, row associations <b>606</b> can be set up by associating a row from a source collection to a row in a target collection. Operations on row associations <b>606</b> can include retrieve associated rows operation <b>620</b>, which can retrieve all associated rows based on a source collection identifier, a target collection identifier, and a source row identifier. The retrieved rows can include column fields that are set up in the associated view as associated columns.</p>
<p id="p-0051" num="0050">Operations on row associations <b>606</b> can include retrieve associated rows by row ID operation <b>622</b>. Retrieve associated rows by row ID operation <b>622</b> can be used to retrieve associated rows based on a source collection identifier, a target collection identifier, a source row identifier, and one or more target row identifiers. The retrieved rows can include column fields that are set up in the associated view as associated columns.</p>
<p id="p-0052" num="0051">Operations on row associations <b>606</b> can include add associated rows operation <b>624</b> and delete associated rows operation <b>628</b>. Add associated rows operation <b>624</b> can include a function call using arguments including a session identifier, source collection identifier, a target collection identifier, a source row identifier, and one or more target row identifiers. Likewise, delete associated rows operation <b>628</b> can include a function call using arguments including a session identifier, source collection identifier, a target collection identifier, a source row identifier, and one or more target row identifiers.</p>
<p id="p-0053" num="0052">Operations on row associations <b>606</b> can include get notification update on association operation <b>630</b>. Get notification update on association operation <b>630</b> can be used to get notifications set for row IDs about updates of rows in a source collection. The row association between a source row ID and a target row can also change. The change can include an update of a target row, a deletion of a target row, an insertion of a row association, or a deletion of a row association. A notification log can be maintained for the association. The notification log can include entries of various events causing row association to change. As an association is added or deleted, a new entry is inserted into the notification log. Get notification update on association operation <b>630</b> can return a query result object including a notification handle. The notification handle can include a point-in-time marker of the notification log for the association. The notification handle can be used to query the association log to retrieve updates for target rows that have changed since the point in time. The notification handle can be updated upon each get notification update on association operation <b>630</b>. Get notification update on association operation <b>630</b> can include a function call using parameters including a session identifier, a source collection identifier, a source row identifier, and a notification handle. The result of the function call can include a list of one or more row identifiers of rows that have been updated, and a new notification handle.</p>
<p id="p-0054" num="0053">Operations on row associations <b>606</b> can include query collection rows operation <b>632</b>. Implementations of query collection rows operation <b>632</b> can include lazy fetch and eager fetch. In a lazy fetch mode, the query can return collection rows. Associated rows can be fetched using another query. In eager fetch mode, the query can return collection rows as well as rows associated with the collection rows. A specifiable parameter can be used to configure query collection rows operation <b>632</b> to operate in the eager mode or the lazy mode.</p>
<heading id="h-0010" level="1">Exemplary Notification</heading>
<p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. 7</figref> is block diagram illustrating exemplary system <b>700</b> implementing notification features and operations of dynamic data association. System <b>700</b> can include client <b>702</b> and server <b>704</b> connected through a communications network.</p>
<p id="p-0056" num="0055">Client <b>702</b> can submit a data request to server <b>704</b>. The data request can include a query and a query context. Server <b>704</b> can store row IDs of an entire result set of the query in paging cache <b>706</b>. Server <b>704</b> can send only a portion of the row IDs to the client. The portion can be determined by a page size specified in the query context by client <b>702</b>. Client <b>702</b> can fetch multiple pages for the same query as the client navigates through pages of the result set.</p>
<p id="p-0057" num="0056">Client <b>702</b> can request notification when rows retrieved by the query are updated. Client <b>702</b> can request that server <b>704</b> send a notification to client <b>702</b> when row IDs already sent to client <b>702</b> are updated. Server <b>704</b> can maintain a data (e.g., a &#x201c;fetch&#x201d; flag) in a data structure that stores the row IDs. When client <b>702</b> fetches a page, server <b>704</b> can walk through the cached row IDs and mark those pages fetched by the client as fetched. When client <b>702</b> requests a notification, server <b>704</b> can filter the row IDs using the fetch flag.</p>
<p id="p-0058" num="0057">Server <b>704</b> can track which row is updated in notification log <b>708</b>. Notification log <b>708</b> can store row IDs in association with event types in a time-based series of notification entries. The notification entries can be entered when an event occurs on a row. Server <b>704</b> can send a marker indicating where the last notification occurred in the time-based series to client <b>702</b> as a notification handle, as part of the notification. Server <b>704</b> can update the marker each time a notification is sent.</p>
<p id="p-0059" num="0058">Client <b>702</b> can request a notification on a collection to include updates on rows of data associated with the collection. To request the notification, client <b>702</b> can invoke a function on server <b>704</b> using parameters including a list of one or more collection identifiers, a list of one or more notification handles, a list of one or more query handles, and a list of notification types. A query handle can specify a query that corresponds to a paged result set. A notification type can specify what types of events (e.g., an insertion, a deletion, an update, or any combination of the above) are to be notified. The notification type can serve as a filter of the notification.</p>
<p id="p-0060" num="0059">Server <b>704</b> can store association context information in notification log <b>708</b>. Association context information can include information of an association that allows server <b>704</b> to notify client <b>702</b> when a new association is created, when an association is deleted, or when an association is updated. The information can be tracked in a source row ID data field and a source collection identifier data field in a notification entry The data fields can allow client <b>702</b> to filter that notification by the source row identifier or the source collection identifier.</p>
<heading id="h-0011" level="1">Exemplary Processes of Dynamic Data Association</heading>
<p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. 8</figref> is flowchart illustrating exemplary process <b>800</b> of dynamic data association. A system including one or more computing devices can provide (<b>802</b>) for display in a user interface a view of a first data collection of a database. The first data collection can be formatted using a layout of the first data collection.</p>
<p id="p-0062" num="0061">The system can receive (<b>804</b>) an input from the user interface to associate a first data item in the first data collection with one or more second data items of a second data collection. Receiving the input can include receiving a direction of access. The direction of access can specify a source data item (e.g., the first data item) and one or more destination data items (e.g., the second data items) where navigation is permitted from the source data item to the destination data item. The direction of access can additionally specify that the layout of the first data collection is to be applied to the one or more second data items. The direction of access can include a unidirectional link or a bidirectional link. The association can be self-referential, where the one or more second items can be in the first data collection. In some implementations, the second data collection can be structurally different from the first data collection. For example, the second data collection can include a document repository storing unstructured data.</p>
<p id="p-0063" num="0062">The system can create (<b>806</b>) configurable metadata for associating the first data item and the one or more second data items. The configurable metadata can include an association of data identifiers that relates the first data item and the one or more second data items. Creating the configurable metadata can include identifying a first data identifier (e.g., a row identifier) of the first data item and a second data identifier of each of the one or more second data items. Creating the configurable metadata can further include associating the first data identifier and the second data identifier with the direction of access specified in the input.</p>
<p id="p-0064" num="0063">Upon receiving of the first data item, the system can provide (<b>808</b>) for display at least one of the one or more second data items. The second data item can be formatted using the layout of the first data collection.</p>
<p id="p-0065" num="0064">In some implementations, process <b>800</b> can include receiving, from the user interface, an update event of the second data item displayed in the user interface. The update event can include a modification of the second data item. The system can submit a refresh request to a server in response to the update event. In some implementations, process <b>800</b> can include updating the displayed second data item upon receiving, from a server, a refresh notification indicating that the second data item has been remotely modified.</p>
<p id="p-0066" num="0065">In some implementations, the configurable metadata can include a notification threshold (e.g., 1,000 rows). The notification threshold can be used to determine when to update all data in an association simultaneously and when to update the data in the association using paging. Process <b>800</b> can include receiving, from a server, a refresh notification. The refresh notification can indicate that at least one of the one or more second data items has been modified remotely. The system can determine that a count (e.g., 2,500 rows) of second data items indicated as modified in the refresh notification exceeds the notification threshold. Upon the determination, the system can determine that the at least one of the one or more second data items is being displayed, for example, by identifying the portion of the rows that are currently displayed. The system can request, from the server, an update of the least one of the one or more second data items being displayed. The notification threshold can be user-configurable.</p>
<p id="p-0067" num="0066">In some implementations, the system can share configurable metadata within a work group (e.g., a tenancy). The work group can include one or more users. Process <b>800</b> can include removing the at least one of the one or more second data items from display upon receiving a refresh notification indicating that the configurable metadata have been removed by a user in the work group</p>
<heading id="h-0012" level="1">Exemplary System Architecture</heading>
<p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. 9</figref> is a block diagram of an exemplary system architecture <b>900</b> for implementing the features and operations of dynamic data association. Other architectures are possible, including architectures with more or fewer components. In some implementations, architecture <b>900</b> includes one or more processors <b>902</b> (e.g., dual-core Intel&#xae; Xeon&#xae; Processors), one or more output devices <b>904</b> (e.g., LCD), one or more network interfaces <b>906</b>, one or more input devices <b>908</b> (e.g., mouse, keyboard, touch-sensitive display) and one or more computer-readable mediums <b>912</b> (e.g., RAM, ROM, SDRAM, hard disk, optical disk, flash memory, etc.). These components can exchange communications and data over one or more communication channels <b>910</b> (e.g., buses), which can utilize various hardware and software for facilitating the transfer of data and control signals between components.</p>
<p id="p-0069" num="0068">The term &#x201c;computer-readable medium&#x201d; refers to any medium that participates in providing instructions to processor <b>902</b> for execution, including without limitation, non-volatile media (e.g., optical or magnetic disks), volatile media (e.g., memory) and transmission media. Transmission media includes, without limitation, coaxial cables, copper wire and fiber optics.</p>
<p id="p-0070" num="0069">Computer-readable medium <b>912</b> can further include operating system <b>914</b> (e.g., Mac OS&#xae; server, Windows&#xae; NT server), network communication module <b>916</b>, database interface <b>920</b>, layout <b>930</b>, formatter <b>940</b>, and data buffers <b>950</b>. Database interface <b>920</b> can provide one or more interfaces between a server computer and a client computer and interfaces between a relational database and other application program. Layout <b>930</b> can provide formatting information for data items being viewed. Formatter <b>940</b> can layout <b>930</b> to various data items, including source data items and target data items in an association. Data buffers <b>950</b> can include a data identifier buffer and a data record buffer used in paging and notification. The data identifier buffers can store one or more data identifiers (including target row IDs in an association) that are paged. The data record buffer can store actual data being displayed.</p>
<p id="p-0071" num="0070">Operating system <b>914</b> can be multi-user, multiprocessing, multitasking, multithreading, real time, etc. Operating system <b>914</b> performs basic tasks, including but not limited to: recognizing input from and providing output to devices <b>904</b> and <b>908</b>; keeping track and managing files and directories on computer-readable mediums <b>912</b> (e.g., memory or a storage device); controlling peripheral devices; and managing traffic on the one or more communication channels <b>910</b>. Network communications module <b>916</b> includes various components for establishing and maintaining network connections (e.g., software for implementing communication protocols, such as TCP/IP, HTTP, etc.). Database interface <b>920</b> can include interface to various databases including relational databases.</p>
<p id="p-0072" num="0071">Architecture <b>900</b> can be included in any device capable of hosting a database application program. Architecture <b>900</b> can be implemented in a parallel processing or peer-to-peer infrastructure or on a single device with one or more processors. Software can include multiple software components or can be a single body of code.</p>
<p id="p-0073" num="0072">The described features can be implemented advantageously in one or more computer program products that are executable on a programmable system including at least one programmable processor coupled to receive data and instructions from, and to transmit data and instructions to, a data storage system, at least one input device, and at least one output device. A computer program is a set of instructions that can be used, directly or indirectly, in a computer to perform a certain activity or bring about a certain result. A computer program can be written in any form of programming language (e.g., Objective-C, Java), including compiled or interpreted languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment.</p>
<p id="p-0074" num="0073">Suitable processors for the execution of a program of instructions include, by way of example, both general and special purpose microprocessors, and the sole processor or one of multiple processors or cores, of any kind of computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memories for storing instructions and data. Generally, a computer will also include, or be operatively coupled to communicate with, one or more mass storage devices for storing data files; such devices include magnetic disks, such as internal hard disks and removable disks; magneto-optical disks; and optical disks. Storage devices suitable for tangibly embodying computer program instructions and data include all forms of non-volatile memory, including by way of example semiconductor memory devices, such as EPROM, EEPROM, and flash memory devices; magnetic disks such as internal hard disks and removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, ASICs (application-specific integrated circuits).</p>
<p id="p-0075" num="0074">To provide for interaction with a user, the features can be implemented on a computer having a display device such as a CRT (cathode ray tube), LCD (liquid crystal display), or plasma monitor for displaying information to the user and a keyboard and a pointing device such as a mouse or a trackball by which the user can provide input to the computer.</p>
<p id="p-0076" num="0075">The features can be implemented in a computer system that includes a back-end component, such as a data server, or that includes a middleware component, such as an application server or an Internet server, or that includes a front-end component, such as a client computer having a graphical user interface or an Internet browser, or any combination of them. The components of the system can be connected by any form or medium of digital data communication such as a communication network. Examples of communication networks include, e.g., a LAN, a WAN, and the computers and networks forming the Internet.</p>
<p id="p-0077" num="0076">The computer system can include clients and servers. A client and server are generally remote from each other and typically interact through a network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.</p>
<p id="p-0078" num="0077">A number of implementations of the invention have been described. Nevertheless, it will be understood that various modifications can be made without departing from the spirit and scope of the invention. Accordingly, other implementations are within the scope of the following claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method executed by one or more computing devices, the method comprising:
<claim-text>providing for display in a user interface a view of a data collection of a database, the data collection being defined by a schema of the database and being related to other data collections in the database according to the schema, the data collection being formatted using a layout of the data collection;</claim-text>
<claim-text>receiving an input from the user interface to associate a data item in the data collection with a document stored in a document repository that is outside of the database and is configured to store the document independent of a database schema;</claim-text>
<claim-text>creating configurable metadata, the configurable metadata including an association between the data item and the document, the association allowing a user to navigate, in the view, from the data item inside of the database to the document outside of the database; and</claim-text>
<claim-text>upon receiving a selection of data item, providing for display at least a portion of the document, the portion of the document being formatted using the layout.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, where receiving the input includes receiving a direction of access, the direction of access specifying that the layout of the data collection is to be applied to the document.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, where the association is represented in the direction of access.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, where the direction of access includes a unidirectional link or bidirectional link.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the association between the data item and the document is created independent of a database join between the data item and the document.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the document is represented using a thumbnail image in the user interface.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the document repository is configured to store unstructured data.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>receiving, from the user interface, an update event of the document; and</claim-text>
<claim-text>in response to the update event, submitting a refresh request to a server.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising updating a representation of the document upon receiving a refresh notification indicating that the document has been remotely modified.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the configurable metadata includes a configurable notification threshold.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising sharing the configurable metadata within a work group, the work group including one or more users.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising removing a representation of the document from display upon receiving a refresh notification indicating that the configurable metadata have been removed by a user in the work group.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A computer program product stored on a storage device, the product operable to cause one or more processors to perform operations comprising:
<claim-text>providing for display in a user interface a view of a data collection of a database, the data collection being defined by a schema of the database and being related to other data collections in the database according to the schema, the data collection being formatted using a layout of the first data collection;</claim-text>
<claim-text>receiving an input from the user interface to associate a data item in the data collection with a document stored in a document repository that is outside of the database and is configured to store the document independent of a database schema;</claim-text>
<claim-text>creating configurable metadata, the configurable metadata including an association between the data item and the document, the association allowing a user to navigate, in the view, from the data item inside of the database to the document outside of the database; and</claim-text>
<claim-text>upon receiving a selection of data item, displaying at least a portion of the document, the portion of the document being formatted using the layout.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The product of <claim-ref idref="CLM-00013">claim 13</claim-ref>, where receiving the input includes receiving a direction of access, the direction of access specifying that the layout of the data collection is to be applied to the document.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The product of <claim-ref idref="CLM-00014">claim 14</claim-ref> where the association is represented in the direction of access.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A system comprising:
<claim-text>one or more processors configured to perform operations comprising:
<claim-text>providing for display in a user interface a view of a data collection of a database, the data collection being defined by a schema of the database and being related to other data collections in the database according to the schema, the data collection being formatted using a layout of the first data collection;</claim-text>
<claim-text>receiving an input from the user interface to associate a data item in the data collection with a document stored in a document repository that is outside of the database and is configured to store the document independent of a database schema;</claim-text>
<claim-text>creating configurable metadata, the configurable metadata including an association between the data item and document, the association allowing a user to navigate, in the view, from the data item inside of the database to the document outside of the database; and</claim-text>
</claim-text>
<claim-text>upon receiving a selection of data item, displaying at least a portion of the document, the displayed portion of the document being formatted using the layout.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, the operations further comprising updating a representation of the document upon receiving a refresh notification indicating that the document has been remotely modified.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising sharing the configurable metadata within a work group including one or more users. </claim-text>
</claim>
</claims>
</us-patent-grant>
