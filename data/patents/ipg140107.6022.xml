<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627145-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627145</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12974619</doc-number>
<date>20101221</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>11</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>714 30</main-classification>
</classification-national>
<invention-title id="d2e43">High volume recording of instrumentation data varying instrumentation volumes to prevent data loss</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6397354</doc-number>
<kind>B1</kind>
<name>Ertekin</name>
<date>20020500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 34</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7555682</doc-number>
<kind>B2</kind>
<name>Swoboda</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 45</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7627784</doc-number>
<kind>B1</kind>
<name>Allen et al.</name>
<date>20091200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 30</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>8407529</doc-number>
<kind>B2</kind>
<name>Horley et al.</name>
<date>20130300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 45</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2011/0107146</doc-number>
<kind>A1</kind>
<name>Bose et al.</name>
<date>20110500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 32</main-classification></classification-national>
</us-citation>
</us-references-cited>
<number-of-claims>7</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>714 30</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>7</number-of-drawing-sheets>
<number-of-figures>10</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61289509</doc-number>
<date>20091223</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20130151901</doc-number>
<kind>A1</kind>
<date>20130613</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Swoboda</last-name>
<first-name>Gary L.</first-name>
<address>
<city>Sugarland</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Swoboda</last-name>
<first-name>Gary L.</first-name>
<address>
<city>Sugarland</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Bassuk</last-name>
<first-name>Lawrence J.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>Brady, III</last-name>
<first-name>Wade J.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="03" rep-type="attorney">
<addressbook>
<last-name>Telecky, Jr.</last-name>
<first-name>Frederick J.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Texas Instruments Incorporated</orgname>
<role>02</role>
<address>
<city>Dallas</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Bonzo</last-name>
<first-name>Bryce</first-name>
<department>2113</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">This invention is an apparatus and method for monitoring an electronic apparatus. At least one capture unit captures data to be monitored. A repeater corresponding to each capture unit repeats the captured data. A first-in-first-out buffer corresponding to each capture unit temporarily stores the captured data. The buffered data supplies a utilization unit. Captured data may be merged after repeating. The capture unit may be in a different voltage domain than the repeater, buffer and utilization unit.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="100.16mm" wi="81.70mm" file="US08627145-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="181.86mm" wi="166.88mm" file="US08627145-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="210.48mm" wi="164.93mm" orientation="landscape" file="US08627145-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="189.23mm" wi="93.90mm" file="US08627145-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="110.91mm" wi="80.69mm" file="US08627145-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="128.61mm" wi="132.93mm" file="US08627145-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="191.09mm" wi="136.48mm" file="US08627145-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="73.41mm" wi="135.81mm" file="US08627145-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CLAIM OF PRIORITY</heading>
<p id="p-0002" num="0001">This application claims priority under 35 U.S.C. 119(e)(1) to U.S. Provisional Application No. 61/289,509 filed Dec. 23, 2009.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">TECHNICAL FIELD OF THE INVENTION</heading>
<p id="p-0003" num="0002">The technical field of this invention is emulation and debug of electronic systems.</p>
<heading id="h-0003" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0004" num="0003">Advanced wafer lithography and surface-mount packaging technology are integrating increasingly complex functions at both the silicon and printed circuit board level of electronic design. Diminished physical access to circuits for test and emulation is an unfortunate consequence of denser designs and shrinking interconnect pitch. Designed-in testability is needed so the finished product is both controllable and observable during test and debug. Any manufacturing defect is preferably detectable during final test before a product is shipped. This basic necessity is difficult to achieve for complex designs without taking testability into account in the logic design phase so automatic test equipment can test the product.</p>
<p id="p-0005" num="0004">In addition to testing for functionality and for manufacturing defects, application software development requires a similar level of simulation, observability and controllability in the system or sub-system design phase. The emulation phase of design should ensure that a system of one or more ICs (integrated circuits) functions correctly in the end equipment or application when linked with the system software. With the increasing use of ICs in the automotive industry, telecommunications, defense systems, and life support systems, thorough testing and extensive real-time debug becomes a critical need.</p>
<p id="p-0006" num="0005">Functional testing, where the designer generates test vectors to ensure conformance to specification, still remains a widely used test methodology. For very large systems this method proves inadequate in providing a high level of detectable fault coverage. Automatically generated test patterns are desirable for full testability, and controllability and observability. These are key goals that span the full hierarchy of test from the system level to the transistor level.</p>
<p id="p-0007" num="0006">Another problem in large designs is the long time and substantial expense involved in design for test. It would be desirable to have testability circuitry, system and methods that are consistent with a concept of design-for-reusability. n this way, subsequent devices and systems can have a low marginal design cost for testability, simulation and emulation by reusing the testability, simulation and emulation circuitry, systems and methods that are implemented in an initial device. Without a proactive testability, simulation and emulation plan, a large amount of subsequent design time would be expended on test pattern creation and upgrading.</p>
<p id="p-0008" num="0007">Even if a significant investment were made to design a module to be reusable and to fully create and grade its test patterns, subsequent use of a module may bury it in application specific logic. This would make its access difficult or impossible. Consequently, it is desirable to avoid this pitfall.</p>
<p id="p-0009" num="0008">The advances of IC design are accompanied by decreased internal visibility and control, reduced fault coverage and reduced ability to toggle states, more test development and verification problems, increased complexity of design simulation and continually increasing cost of CAD (computer aided design) tools. In the board design the side effects include decreased register visibility and control, complicated debug and simulation in design verification, loss of conventional emulation due to loss of physical access by packaging many circuits in one package, increased routing complexity on the board, increased costs of design tools, mixed-mode packaging, and design for produceability. In application development, some side effects are decreased visibility of states, high speed emulation difficulties, scaled time simulation, increased debugging complexity, and increased costs of emulators. Production side effects involve decreased visibility and control, complications in test vectors and models, increased test complexity, mixed-mode packaging, continually increasing costs of automatic test equipment and tighter tolerances.</p>
<p id="p-0010" num="0009">Emulation technology utilizing scan based emulation and multiprocessing debug was introduced more than 10 years ago. In 1988, the change from conventional in circuit emulation to scan based emulation was motivated by design cycle time pressures and newly available space for on-chip emulation. Design cycle time pressure was created by three factors. Higher integration levels, such as increased use of on-chip memory, demand more design time. Increasing clock rates mean that emulation support logic causes increased electrical intrusiveness. More sophisticated packaging causes emulator connectivity issues. Today these same factors, with new twists, are challenging the ability of a scan based emulator to deliver the system debug facilities needed by today's complex, higher clock rate, highly integrated designs. The resulting systems are smaller, faster, and cheaper. They have higher performance and footprints that are increasingly dense. Each of these positive system trends adversely affects the observation of system activity, the key enabler for rapid system development. The effect is called &#x201c;vanishing visibility.&#x201d;</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 1</figref> illustrates the trend in visibility and control over time and greater system integration in accordance with the prior art. Application developers prefer the optimum visibility level illustrated in <figref idref="DRAWINGS">FIG. 1</figref>. This optimum visibility level provides visibility and control of all relevant system activity. The steady progression of integration levels and increases in clock rates steadily decrease the actual visibility and control available over time. These forces create a visibility and control gap, the difference between the optimum visibility and control level and the actual level available. Over time, this gap will widen. Application development tool vendors are striving to minimize the gap growth rate. Development tools software and associated hardware components must do more with less resources and in different ways. Tackling this ease of use challenge is amplified by these forces.</p>
<p id="p-0012" num="0011">With today's highly integrated System-On-a-Chip (SOC) technology, the visibility and control gap has widened dramatically over time. Traditional debug options such as logic analyzers and partitioned prototype systems are unable to keep pace with the integration levels and ever increasing clock rates of today's systems. As integration levels increase, system buses connecting numerous subsystem components move on chip, denying traditional logic analyzers access to these buses. With limited or no significant bus visibility, tools like logic analyzers cannot be used to view system activity or provide the trigger mechanisms needed to control the system under development. A loss of control accompanies this loss in visibility, as it is difficult to control things that are not accessible.</p>
<p id="p-0013" num="0012">To combat this trend, system designers have worked to keep these buses exposed. Thus the system components were built in a way that enabled the construction of prototyping systems with exposed buses. This approach is also under siege from the ever-increasing march of system clock rates. As the central processing unit (CPU) clock rates increase, chip to chip interface speeds are not keeping pace. Developers find that a partitioned system's performance does not keep pace with its integrated counterpart, due to interface wait states added to compensate for lagging chip to chip communication rates. At some point, this performance degradation reaches intolerable levels and the partitioned prototype system is no longer a viable debug option. In the current era production devices must serve as the platform for application development.</p>
<p id="p-0014" num="0013">Increasing CPU clock rates are also limiting availability of other simple visibility mechanisms. Since the CPU clock rates can exceed the maximum I/O state rates, visibility ports exporting information in native form can no longer keep up with the CPU. On-chip subsystems are also operated at clock rates that are slower than the CPU clock rate. This approach may be used to simplify system design and reduce power consumption. These developments mean simple visibility ports can no longer be counted on to deliver a clear view of CPU activity. As visibility and control diminish, the development tools used to develop the application become less productive. The tools also appear harder to use due to the increasing tool complexity required to maintain visibility and control. The visibility, control, and ease of use issues created by systems-on-a-chip tend to lengthen product development cycles.</p>
<p id="p-0015" num="0014">Even as the integration trends present developers with a tough debug environment, they also present hope that new approaches to debug problems will emerge. The increased densities and clock rates that create development cycle time pressures also create opportunities to solve them. On-chip, debug facilities are more affordable than ever before. As high speed, high performance chips are increasingly dominated by very large memory structures, the system cost associated with the random logic accompanying the CPU and memory subsystems is dropping as a percentage of total system cost. The incremental cost of several thousand gates is at an all time low. Circuits of this size may in some cases be tucked into a corner of today's chip designs. The incremental cost per pin in today's high density packages has also dropped. This makes it easy to allocate more pins for debug. The combination of affordable gates and pins enables the deployment of new, on-chip emulation facilities needed to address the challenges created by systems-on-a-chip.</p>
<p id="p-0016" num="0015">When production devices also serve as the application debug platform, they must provide sufficient debug capabilities to support time to market objectives. Since the debugging requirements vary with different applications, it is highly desirable to be able to adjust the on-chip debug facilities to balance time to market and cost needs. Since these on-chip capabilities affect the chip's recurring cost, the scalability of any solution is of primary importance. &#x201c;Pay only for what you need&#x201d; should be the guiding principle for on-chip tools deployment. In this new paradigm, the system architect may also specify the on-chip debug facilities along with the remainder of functionality, balancing chip cost constraints and the debug needs of the product development team.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 2</figref> illustrates a prior art emulator system <b>100</b> including four emulator components. These four components are: a debugger application program <b>110</b>; a host computer <b>120</b>; an emulation controller <b>130</b>; and on-chip debug facilities <b>140</b>. <figref idref="DRAWINGS">FIG. 2</figref> illustrates the connections of these components. Host computer <b>120</b> is connected to an emulation controller <b>130</b> external to host <b>120</b>. Emulation controller <b>130</b> is also connected to target system <b>140</b>. The user preferably controls the target application on target system <b>140</b> through debugger application program <b>110</b>.</p>
<p id="p-0018" num="0017">Host computer <b>120</b> is generally a personal computer. Host computer <b>120</b> provides access the debug capabilities through emulator controller <b>130</b>. Debugger application program <b>110</b> presents the debug capabilities in a user-friendly form via host computer <b>120</b>. The debug resources are allocated by debug application program <b>110</b> on an as needed basis, relieving the user of this burden. Source level debug utilizes the debug resources, hiding their complexity from the user. Debugger application program <b>110</b> together with the on-chip trace and triggering facilities provide a means to select, record, and display chip activity of interest. Trace displays are automatically correlated to the source code that generated the trace log. The emulator provides both the debug control and trace recording function.</p>
<p id="p-0019" num="0018">The debug facilities are preferably programmed using standard emulator debug accesses through a JTAG or similar serial debug interface. Since pins are at a premium, the preferred embodiment of the invention provides for the sharing of the debug pin pool by trace, trigger, and other debug functions with a small increment in silicon cost. Fixed pin formats may also be supported. When the pin sharing option is deployed, the debug pin utilization is determined at the beginning of each debug session before target system <b>140</b> is directed to run the application program. This maximizes the trace export bandwidth. Trace bandwidth is maximized by allocating the maximum number of pins to trace.</p>
<p id="p-0020" num="0019">The debug capability and building blocks within a system may vary. Debugger application program <b>100</b> therefore establishes the configuration at runtime. This approach requires the hardware blocks to meet a set of constraints dealing with configuration and register organization. Other components provide a hardware search capability designed to locate the blocks and other peripherals in the system memory map. Debugger application program <b>110</b> uses a search facility to locate the resources. The address where the modules are located and a type ID uniquely identifies each block found. Once the IDs are found, a design database may be used to ascertain the exact configuration and all system inputs and outputs.</p>
<p id="p-0021" num="0020">Host computer <b>120</b> generally includes at least 64 Mbytes of memory and is capable of running Windows 95, SR-2, Windows NT, or later versions of Windows. Host computer <b>120</b> must support one of the communications interfaces required by the emulator. These may include: Ethernet 10T and 100T, TCP/IP protocol; Universal Serial Bus (USB); Firewire IEEE 1394; and parallel port such as SPP, EPP and ECP.</p>
<p id="p-0022" num="0021">Host computer <b>120</b> plays a major role in determining the real-time data exchange bandwidth. First, the host to emulator communication plays a major role in defining the maximum sustained real-time data exchange bandwidth because emulator controller <b>130</b> must empty its receive real-time data exchange buffers as fast as they are filled. Secondly, host computer <b>120</b> originating or receiving the real-time data exchange data must have sufficient processing capacity or disc bandwidth to sustain the preparation and transmission or processing and storing of the received real-time data exchange data. A state of the art personal computer with a Firewire communication channel (IEEE 1394) is preferred to obtain the highest real-time data exchange bandwidth. This bandwidth can be as much as ten times greater performance than other communication options.</p>
<p id="p-0023" num="0022">Emulation controller <b>130</b> provides a bridge between host computer <b>120</b> and target system <b>140</b>. Emulation controller <b>130</b> handles all debug information passed between debugger application program <b>110</b> running on host computer <b>120</b> and a target application executing on target system <b>140</b>. A presently preferred minimum emulator configuration supports all of the following capabilities: real-time emulation; real-time data exchange; trace; and advanced analysis.</p>
<p id="p-0024" num="0023">Emulation controller <b>130</b> preferably accesses real-time emulation capabilities such as execution control, memory, and register access via a 3, 4, or 5 bit scan based interface. Real-time data exchange capabilities can be accessed by scan or by using three higher bandwidth real-time data exchange formats that use direct target to emulator connections other than scan. The input and output triggers allow other system components to signal the chip with debug events and vice-versa. Bit I/O allows the emulator to stimulate or monitor system inputs and outputs. Bit I/O can be used to support factory test and other low bandwidth, non-time-critical emulator/target operations. Extended operating modes are used to specify device test and emulation operating modes. Emulator controller <b>130</b> is partitioned into communication and emulation sections. The communication section supports host communication links while the emulation section interfaces to the target, managing target debug functions and the device debug port. Emulation controller <b>130</b> communicates with host computer <b>120</b> using one of industry standard communication links outlined earlier herein. The host to emulator connection is established with off the shelf cabling technology. Host to emulator separation is governed by the standards applied to the interface used.</p>
<p id="p-0025" num="0024">Emulation controller <b>130</b> communicates with the target system <b>140</b> through a target cable or cables. Debug, trace, triggers, and real-time data exchange capabilities share the target cable, and in some cases, the same device pins. More than one target cable may be required when the target system <b>140</b> deploys a trace width that cannot be accommodated in a single cable. All trace, real-time data exchange, and debug communication occurs over this link. Emulator controller <b>130</b> preferably allows for a target to emulator separation of at least two feet. This emulation technology is capable of test clock rates up to 50 MHZ and trace clock rates from 200 to 300 MHZ, or higher. Even though the emulator design uses techniques that should relax target system <b>140</b> constraints, signaling between emulator controller <b>130</b> and target system <b>140</b> at these rates requires design diligence. This emulation technology may impose restrictions on the placement of chip debug pins, board layout, and requires precise pin timings. On-chip pin macros are provided to assist in meeting timing constraints.</p>
<p id="p-0026" num="0025">The on-chip debug facilities offer the developer a rich set of development capability in a two tiered, scalable approach. The first tier delivers functionality utilizing the real-time emulation capability built into a CPU's mega-modules. This real-time emulation capability has fixed functionality and is permanently part of the CPU while the high performance real-time data exchange, advanced analysis, and trace functions are added outside of the core in most cases. The capabilities are individually selected for addition to a chip. The addition of emulation peripherals to the system design creates the second tier functionality. A cost-effective library of emulation peripherals contains the building blocks to create systems and permits the construction of advanced analysis, high performance real-time data exchange, and trace capabilities. In the preferred embodiment five standard debug configurations are offered, although custom configurations are also supported. The specific configurations are covered later herein.</p>
<p id="p-0027" num="0026">Clock rates of cores generating program and data trace have increased. This generates higher trace information volumes. A sophisticated trace protocol must be used in most cases to describe the program activity. This protocol may generate large volumes of data over short periods. Current trace architectures merge this data with other sources such as other cores as it is generated, with this logic operating at a lower frequency than the cores. When instantaneous volumes occur, the system is incapable of handling this volume and data is lost. Additionally units generating trace data should not have to consider the data volume of other units they may be deployed with. This would be the case where units would locally buffer data. This buffering would increase the power consumption of the chip as this buffering may be located in an area that prevents them from being turned off to conserve power.</p>
<heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0028" num="0027">This invention is an apparatus and method for monitoring an electronic apparatus. At least one capture unit captures data to be monitored. A repeater corresponding to each capture unit repeats the captured data. A first-in-first-out buffer corresponding to each capture unit temporarily stores the captured data. The buffered data supplies a utilization unit. Captured data may be merged after repeating. The capture unit may be in a different voltage domain than the repeater, buffer and utilization unit.</p>
<p id="p-0029" num="0028">The repeater enables the buffer to be remote from high speed logic generating the captured data. This permits a higher operating frequency at high speed logic where interconnect dominates the operating frequency and adding area increases interconnect length. The buffers reduce or eliminate loss of data. The remote location of the buffers minimizes impact on the high speed logic operating frequency.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0030" num="0029">These and other aspects of this invention are illustrated in the drawings, in which:</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 1</figref> illustrates the visibility and control of typical integrated circuits as a function of time due to increasing system integration;</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 2</figref> illustrates a prior art emulation system to which this invention is applicable;</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 3</figref> illustrates in block diagram form a typical integrated circuit employing configurable emulation capability of the prior art;</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a first prior art emulation data gathering system;</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 5</figref> illustrates another prior art emulation data gathering system;</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 6</figref> illustrates a first embodiment of this invention;</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 7</figref> illustrates a second embodiment of this invention including merged data streams;</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 8</figref> illustrates a first embodiment of the repeater circuit of <figref idref="DRAWINGS">FIGS. 6 and 7</figref>;</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 9</figref> illustrates waveforms of <figref idref="DRAWINGS">FIG. 8</figref>; and</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 10</figref> illustrates a second embodiment of the repeater circuit of <figref idref="DRAWINGS">FIGS. 6 and 7</figref>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS</heading>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an example of one on-chip debug architecture embodying target system <b>140</b>. The architecture uses several module classes to create the debug function. One of these classes is event detectors including bus event detectors <b>210</b>, auxiliary event detectors <b>211</b> and counters/state machines <b>213</b>. A second class of modules is trigger generators including trigger builders <b>220</b>. A third class of modules is data acquisition including trace collection <b>230</b> and formatting. A fourth class of modules is data export including trace export <b>240</b>, and real-time data exchange export <b>241</b>. Trace export <b>240</b> is controlled by clock signals from local oscillator <b>245</b>. Local oscillator <b>245</b> will be described in detail below. A final class of modules is scan adaptor <b>250</b>, which interfaces scan input/output to CPU core <b>201</b>. Final data formatting and pin selection occurs in pin manager and pin micros <b>260</b>.</p>
<p id="p-0042" num="0041">The size of the debug function and its associated capabilities for any particular embodiment of a system-on-chip may be adjusted by either deleting complete functions or limiting the number of event detectors and trigger builders deployed. Additionally, the trace function can be incrementally increased from program counter trace only to program counter and data trace along with ASIC and CPU generated data. The real-time data exchange function may also be optionally deployed. The ability to customize on-chip tools changes the application development paradigm. Historically, all chip designs with a given CPU core were limited to a fixed set of debug capability. Now, an optimized debug capability is available for each chip design. This paradigm change gives system architects the tools needed to manage product development risk at an affordable cost. Note that the same CPU core may be used with differing peripherals with differing pin outs to embody differing system-on-chip products. These differing embodiments may require differing debug and emulation resources. The modularity of this invention permits each such embodiment to include only the necessary debug and emulation resources for the particular system-on-chip application.</p>
<p id="p-0043" num="0042">The real-time emulation debug infrastructure component is used to tackle basic debug and instrumentation operations related to application development. It contains all execution control and register visibility capabilities and a minimal set of real-time data exchange and analysis such as breakpoint and watchpoint capabilities. These debug operations use on-chip hardware facilities to control the execution of the application and gain access to registers and memory. Some of the debug operations which may be supported by real-time emulation are: setting a software breakpoint and observing the machine state at that point; single step code advance to observe exact instruction by instruction decision making; detecting a spurious write to a known memory location; and viewing and changing memory and peripheral registers.</p>
<p id="p-0044" num="0043">Real-time emulation facilities are incorporated into a CPU mega-module and are woven into the fabric of CPU core <b>201</b>. This assures designs using CPU core <b>201</b> have sufficient debug facilities to support debugger application program <b>110</b> baseline debug, instrumentation, and data transfer capabilities. Each CPU core <b>201</b> incorporates a baseline set of emulation capabilities. These capabilities include but are not limited to: execution control such as run, single instruction step, halt and free run; displaying and modifying registers and memory; breakpoints including software and minimal hardware program breakpoints; and watchpoints including minimal hardware data breakpoints.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 4</figref> illustrates an embodiment of the prior art. <figref idref="DRAWINGS">FIG. 4</figref> illustrates a single unit <b>411</b> and a single local storage or output <b>412</b>. Unit <b>411</b> supplies emulation or debug data captured from the monitored system as described above and identification (ID) information to local storage or output <b>412</b>. Local storage or output <b>412</b> stores this data and ID information for further use. Local storage or output <b>412</b> supplies a back pressure signal to unit <b>411</b>. Unit <b>411</b> is subject to the back pressure signal to control the rate of the data supplied. This is useful at times such as when a receiving external device is not ready for more data and local storage or output <b>412</b> has reached its storage capacity.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an additional embodiment of the prior art. <figref idref="DRAWINGS">FIG. 5</figref> illustrates a more complex system than shown in <figref idref="DRAWINGS">FIG. 4</figref>. <figref idref="DRAWINGS">FIG. 5</figref> illustrates plural units <b>511</b>, <b>512</b> and <b>513</b> which supply captured emulation or debug data. Units <b>511</b> and <b>512</b> supply captured data to first merge unit <b>514</b> which combines the two data streams. First merge unit <b>514</b> supplies a back pressure signal to each of units <b>511</b> and <b>512</b> as described above.</p>
<p id="p-0047" num="0046">The merged data stream output of first merge unit <b>514</b> supplies second merge unit <b>515</b>. First merge unit <b>514</b> is subject to a back pressure signal from second merge unit <b>515</b>. Unit <b>513</b> supplies captured emulation and debug data directly to second merge unit <b>515</b>. Unit <b>513</b> is subject to a back pressure signal from second merge unit <b>515</b>. Second merge unit <b>515</b> merges the composite data stream from first merge unit <b>514</b> and the data stream from unit <b>513</b> into another merged data stream. Second merge unit <b>515</b> supplies this further merged data stream to local storage of output <b>516</b> and is subject to a back pressure signal from local storage or output <b>516</b>.</p>
<p id="p-0048" num="0047">Summarizing the current art, units present their instrumentation data along with source identification information to either a storage or output mechanism (<figref idref="DRAWINGS">FIG. 4</figref>) or to a more complicated merge system before presentation to a storage or output mechanism (<figref idref="DRAWINGS">FIG. 5</figref>). In each of these prior art techniques the instrumentation data generally includes source identification information. The local storage or output may apply back pressure to the source to control the rate of data supply. This data transfer is generally synchronous and sometimes crosses voltage domains.</p>
<p id="p-0049" num="0048">The clock rate of monitored systems generating instrumentation data is generally higher that the clock rate used to transmit this data. Thus the source can generate more data than can be absorbed by the destination. When merging many sources as shown in <figref idref="DRAWINGS">FIG. 5</figref> collisions of peak loads generated by multiple sources cannot be handled without losing data. Generally increasing the data transfer bus width does not solve this problem.</p>
<p id="p-0050" num="0049">In a system where debug is desired, it is often desirable to collect information about system operation with hardware monitors of central processing units (CPUs), direct memory access units (DMAs) and other units. The information generated by these units may be merged into a single stream of instrumentation data. These units may occasionally generate enough information to saturate the stream of instrumentation data without regard to other units sharing the stream. It is also possible that units will simultaneously generate peak output loading. In the prior art data is lost unless units sufficiently buffer data near the source of their instrumentation data.</p>
<p id="p-0051" num="0050">This invention handles the peak loads and collisions between the loads of multiple sources without power and performance impacts using repeaters. The transfer of instrumentation data is unidirectional. This transfer includes a clock along with data, data size and a valid indication which be propagate toward the local storage or output. One or more repeaters are placed in the path from the unit to the local storage or output. The repeater(s) maintain the high speed timing relationship of the clock, data, data size and valid indication as they are propagated at high data rate from the units to the asynchronous FIFOs.</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an embodiment of this invention corresponding generally to the prior art illustrated in <figref idref="DRAWINGS">FIG. 4</figref>. Power domain A <b>610</b> includes unit <b>611</b>. Unit <b>611</b> captures emulation and debug data from the monitored system. Unit <b>611</b> transmits data, data size and valid indicators across a power domain divide into power domain B <b>620</b> to one or more repeaters <b>621</b>. Repeater(s) <b>621</b> maintain the high speed timing relationship of the clock, data, data size and valid indication as transmitted to asynchronous first-in-first-out (FIFO) <b>622</b>. Unit <b>611</b> is responsive to a back pressure signal from asynchronous FIFO <b>622</b>. Asynchronous FIFO <b>622</b> supplies the data and attached identification (ID) information to local storage or output <b>623</b>.</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 7</figref> illustrates an embodiment of this invention including data stream merging like the prior art illustrated in <figref idref="DRAWINGS">FIG. 5</figref>. Power domain A <b>710</b> includes units <b>711</b>, <b>712</b> and <b>713</b>. Unit <b>711</b> captures emulation and debug data from the monitored system. Unit <b>711</b> transmits data, data size and valid indicators across a power domain divide into power domain B <b>720</b> to one or more repeaters <b>721</b>. Repeater(s) <b>721</b> maintain the high speed timing relationship of the clock, data, data size and valid indication as transmitted to asynchronous first-in-first-out (FIFO) <b>724</b>. Unit <b>711</b> is responsive to a back pressure signal from asynchronous FIFO <b>724</b>. Asynchronous FIFO <b>724</b> supplies the data and attached identification (ID) information to merge unit <b>727</b>. Unit <b>712</b> captures emulation and debug data and transmits data, data size and valid indicators across a power domain divide into power domain B <b>720</b> to one or more repeaters <b>722</b>. Repeater(s) <b>722</b> maintain the high speed timing relationship of the clock, data, data size and valid indication as transmitted to asynchronous first-in-first-out (FIFO) <b>725</b>. Unit <b>712</b> is responsive to a back pressure signal from asynchronous FIFO <b>725</b>. Asynchronous FIFO <b>725</b> supplies the data and attached identification (ID) information to merge unit <b>727</b>. Unit <b>713</b> captures emulation and debug data from the monitored system. and transmits data, data size and valid indicators across a power domain divide into power domain B <b>720</b> to one or more repeaters <b>723</b>. Repeater(s) <b>723</b> maintain the high speed timing relationship of the clock, data, data size and valid indication as transmitted to asynchronous first-in-first-out (FIFO) <b>726</b>. Unit <b>713</b> is responsive to a back pressure signal from asynchronous FIFO <b>726</b>. Asynchronous FIFO <b>726</b> supplies the data and attached identification (ID) information to merge unit <b>727</b>. Merge unit <b>727</b> is further responsive to conventional inputs to merge these conventional inputs into the data stream. Merge unit <b>727</b> supplies the data and ID information to local storage and output <b>728</b>.</p>
<p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. 8</figref> illustrates a first embodiment of the repeaters. Each repeater <b>810</b> and <b>820</b> receives data_in, size_in, valid_in and clk_in and outputs data_out, size_out, valid_out and clk_out. Each bit of data_in and size_in is supplied to the D input of a flip-flop. <figref idref="DRAWINGS">FIG. 8</figref> illustrates representative flip-flops <b>811</b> and <b>821</b>. The valid_in bit is supplied to the D input of respective flip-flops <b>812</b> and <b>822</b>. The clk_in signal is supplied to each clock input of flip-flops <b>811</b>, <b>812</b>, <b>821</b> and <b>822</b>. Each bit of data_out and size_out is generated by the Q output of a flip-flop. <figref idref="DRAWINGS">FIG. 8</figref> illustrates representative flip-flops <b>811</b> and <b>821</b>. The valid_out bit is generated by the Q output put of respective flip-flops <b>812</b> and <b>822</b>. Thus each signal of the data, data size and valid indication is synchronized to the clock by a corresponding flip-flop.</p>
<p id="p-0055" num="0054">Clk_in is also supplied to the clock input of a cross-coupled flip-flop <b>813</b> (<b>823</b>). The Q output of flip-flop <b>813</b> (<b>823</b>) supplies an inverting D input of flip-flop <b>813</b> (<b>823</b>) and a D input of flip-flop <b>814</b> (<b>824</b>). The Q output of flip-flop <b>813</b> (<b>823</b>) is a signal clk_tog<sub>&#x2014;</sub>0. This signal toggles at half the rate of clk_in. Flip-flop <b>814</b> (<b>824</b>) generates a second signal clk_tog<sub>&#x2014;</sub>1. The signal clk_tog<sub>&#x2014;</sub>1 has the same frequency as clk_tog<sub>&#x2014;</sub>0 with a trailing phase due to delays in the flip-flops. See <figref idref="DRAWINGS">FIG. 9</figref>. Exclusive NOR gate <b>815</b> (<b>825</b>) recovers the original clock frequency and generates clk_out. This recovers the original rise/fall time of the clock for the next unit.</p>
<p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. 10</figref> illustrates an alternative repeater circuit. In <figref idref="DRAWINGS">FIG. 10</figref> flip-flops <b>1011</b> (<b>1021</b>) and <b>1012</b> (<b>1022</b>) correspond to respective flip-flops <b>811</b> (<b>821</b>) and <b>812</b> (<b>822</b>) of <figref idref="DRAWINGS">FIG. 8</figref>. A single inverter <b>1013</b> (<b>1023</b>) takes the place of two flip-flops and a Exclusive NOR gate of <figref idref="DRAWINGS">FIG. 8</figref>. Depending upon the routing, inverter <b>1013</b> (<b>1023</b>) may provide all the clock regularization needed.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A monitoring subsystem in an electronic apparatus comprising:
<claim-text>a plurality of capture units capturing data to be monitored having a output to supply said captured data;</claim-text>
<claim-text>a repeater corresponding to each of said plurality of capture units having an input connected to said output of said corresponding capture unit and an output for repeating said captured data;</claim-text>
<claim-text>at least one first-in-first-out buffer corresponding to each of said plurality of capture units having an input connected to said output of said corresponding repeater unit and an output, said first-in-first-out buffer temporarily storing said captured data;</claim-text>
<claim-text>a first merge unit having inputs connected to said output of said first-in-first-out buffers corresponding to said plurality of capture units and an output of a merged data stream connected to said input of said utilization unit; and</claim-text>
<claim-text>a utilization unit having an input connected to said output of said first-in-first-out buffer.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. A monitoring subsystem in an electronic apparatus comprising:
<claim-text>at least one capture unit capturing data to be monitored having a output to supply said captured data, said captured data including a plurality of data bits, a plurality of size bits indicating a number of said data bits and a clock signal;</claim-text>
<claim-text>a repeater corresponding to each of said at least one capture unit having an input connected to said output of said corresponding capture unit and an output for repeating said captured data, each repeater including a flip-flop having a D input receiving a corresponding one of said data bits and said data size bits, a clock input receiving said clock signal and a Q output generating a corresponding repeated signal;</claim-text>
<claim-text>a first-in-first-out buffer corresponding to each of said at least one capture unit having an input connected to said output of said corresponding repeater unit and an output, said first-in-first-out buffer temporarily storing said captured data; and</claim-text>
<claim-text>a utilization unit having an input connected to said output of said first-in-first-out buffer.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The electronic apparatus of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein:
<claim-text>each repeater further includes
<claim-text>a first flip-flop having an inverting D input, a clock input receiving said clock signal and a Q output connected to said D input,</claim-text>
<claim-text>a second flip-flop having a D input connected to said Q output of said first flip-flop, a clock input receiving said clock signal and a Q output, and</claim-text>
<claim-text>an exclusive NOR gate having a first input connected to said Q output of said first flip-flop, a second input connected to said Q output of said second flip-flop and an output generating a repeated clock signal.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The electronic apparatus of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein:
<claim-text>each repeater further includes an inverter having an input receiving said clock signal and an output generating a repeated clock signal.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. A monitoring subsystem in an electronic apparatus comprising:
<claim-text>at least one capture unit capturing data to be monitored having a output to supply said captured data;</claim-text>
<claim-text>a repeater corresponding to each of said at least one of capture unit having an input connected to said output of said corresponding capture unit and an output for repeating said captured data;</claim-text>
<claim-text>a first-in-first-out buffer corresponding to each of said at least one capture unit having an input connected to said output of said corresponding repeater unit and an output, said first-in-first-out buffer temporarily storing said captured data;</claim-text>
<claim-text>a utilization unit having an input connected to said output of said first-in-first-out buffer;</claim-text>
<claim-text>said at least one capture unit is disposed in a first voltage domain; and</claim-text>
<claim-text>said repeater, first-in-first-out buffer and said utilization device are disposed in a second voltage domain different from said first voltage domain.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A method of monitoring an electronic apparatus comprising the steps of:
<claim-text>capturing plural streams of data to be monitored;</claim-text>
<claim-text>repeating each stream of said captured data;</claim-text>
<claim-text>buffering said repeated data in a first-in-first-out buffer;</claim-text>
<claim-text>merging buffered repeated data from plural first-in-first-out buffers; and</claim-text>
<claim-text>utilizing said buffered data from an output of said first-in-first-out buffer.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein:
<claim-text>each stream of data includes a plurality of data bits, a plurality of size bits indicating a number of the data bits and a clock signal; and</claim-text>
<claim-text>wherein said buffering step includes synchronizing the plurality of data bits and the plurality of size bits to said clock signal. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
