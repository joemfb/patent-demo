<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626724-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626724</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12021330</doc-number>
<date>20080129</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>1162</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>7</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>707693</main-classification>
</classification-national>
<invention-title id="d2e53">Method for automated design of row compression on tables in a relational database</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5534861</doc-number>
<kind>A</kind>
<name>Chang et al.</name>
<date>19960700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>341 79</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5918225</doc-number>
<kind>A</kind>
<name>White et al.</name>
<date>19990600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6292894</doc-number>
<kind>B1</kind>
<name>Chipman et al.</name>
<date>20010900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713168</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6321218</doc-number>
<kind>B1</kind>
<name>Guay et al.</name>
<date>20011100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>7154416</doc-number>
<kind>B1</kind>
<name>Savage</name>
<date>20061200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>341 51</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7171427</doc-number>
<kind>B2</kind>
<name>Witkowski et al.</name>
<date>20070100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>7246111</doc-number>
<kind>B1</kind>
<name>Chaware et al.</name>
<date>20070700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>7370043</doc-number>
<kind>B1</kind>
<name>Shelton et al.</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>7467145</doc-number>
<kind>B1</kind>
<name>Castellanos et al.</name>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2003/0093408</doc-number>
<kind>A1</kind>
<name>Brown et al.</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  2</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2005/0132161</doc-number>
<kind>A1</kind>
<name>Makela et al.</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711170</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2005/0234927</doc-number>
<kind>A1</kind>
<name>Bande et al.</name>
<date>20051000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2006/0184338</doc-number>
<kind>A1</kind>
<name>Lightstone et al.</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>702182</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2007/0112549</doc-number>
<kind>A1</kind>
<name>Lau et al.</name>
<date>20070500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>703 13</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2008/0040348</doc-number>
<kind>A1</kind>
<name>Lawande et al.</name>
<date>20080200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  7</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2009/0043792</doc-number>
<kind>A1</kind>
<name>Barsness et al.</name>
<date>20090200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707101</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00017">
<othercit>Table Compression in Oracle9i. Release2. An Oracle White Paper, May 2002.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00018">
<othercit>Daniel C. Zilio, Jun Rao, Sam Lightstone, Guy Lohman, Adam Storm, Christian Garcia-Arellano, Scott Fadden, DB2 design advisor: integrated automatic physical database design, Proceedings of the Thirtieth international conference on Very large data bases, p. 1087-1097, Aug. 31-Sep. 3, 2004, Toronto, Canada.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00019">
<othercit>Balakrishna R. Iyer , David Wilhite, Data Compression Support in Databases, Proceedings of the 20th International Conference on Very Large Data Bases, p. 695-704, Sep. 12-15, 1994.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00020">
<othercit>Goetz Graefe, Leonard D. Shapiro. Data Compression and Database Performance. In Proceedings of the Symposium on Applied Computing, 1991.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00021">
<othercit>Compression Analysis Procedure Written by Glen Blood (Revised on Apr. 6, 2004). http://web.archive.org/web/20040713090159/http://www.teradataforum.com/I040410a.htm.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00022">
<othercit>Meikel Poess , Dmitry Potapov, Data compression in Oracle, Proceedings of the 29th international conference on Very large data bases, p. 937-947, Sep. 9-12, 2003, Berlin, Germany.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00023">
<othercit>Graefe, G.; Shapiro, L.D., &#x201c;Data compression and database performance,&#x201d; Applied Computing, 1991., [Proceedings of the 1991] Symposium on , vol., No., pp. 22,27, Apr. 3-5, 1991 doi: 10.1109/SOAC.1991.143840.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00024">
<othercit>Table Compression in Oracle Database 10g Release 2. An Oracle White Paper May 2005.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00025">
<othercit>Hu Tian-lei et al , &#x201c;Automatic relational database compression scheme design based on swarm evolution&#x201d;, Dec. 11, 2005; www zju.edu cn/jzus; www springerlink com.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00026">
<othercit>Timos K Sellis, &#x201c;Multiple-Query Optimization&#x201d;; ACM Transactions on Database Systems, vol. 13, No. 1, Mar. 1988, pp. 23-52.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00027">
<othercit>Victor Chang, et al , &#x201c;Row Compression in DB2 9: Analysis of a DSS Database Environment&#x201d;, Oct. 2006.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00028">
<othercit>&#x201c;Oracle Backup and Recovery&#x201d;; Jan. 28, 2008 http://www oracle com/technology/deploy/availability/htdocs/BR<sub>&#x2014;</sub>Overview htm?<sub>&#x2014;</sub>template=/ocom/pr.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00029">
<othercit>&#x201c;IBM DB2 Database for Linux, Unix, and Windows Information Center&#x201d;, Jan. 17, 2008 http://publib boulder ibm com/infocenter/db21uw/v9/topic/com.ibm db2 udb doe/welcome htm.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00030">
<othercit>&#x201c;Introducing DB2 9, Part 1: Data Compression in DB2&#x201d;; Ray Ahuja, May 24, 2006; http://www ibm com/developerworks/db2/library/techarticle/dm-0605ahuja/.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>707693</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>3</number-of-drawing-sheets>
<number-of-figures>4</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20090193041</doc-number>
<kind>A1</kind>
<date>20090730</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Hornibrook</last-name>
<first-name>John</first-name>
<address>
<city>Markham</city>
<country>CA</country>
</address>
</addressbook>
<residence>
<country>CA</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Mignet</last-name>
<first-name>Laurent S.</first-name>
<address>
<city>New Delhi</city>
<country>IN</country>
</address>
</addressbook>
<residence>
<country>IN</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Minor</last-name>
<first-name>William R.</first-name>
<address>
<city>Markham</city>
<country>CA</country>
</address>
</addressbook>
<residence>
<country>CA</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Negi</last-name>
<first-name>Sumit</first-name>
<address>
<city>New Delhi</city>
<country>IN</country>
</address>
</addressbook>
<residence>
<country>IN</country>
</residence>
</us-applicant>
<us-applicant sequence="005" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Zilio</last-name>
<first-name>Daniele C.</first-name>
<address>
<city>Georgetown</city>
<country>CA</country>
</address>
</addressbook>
<residence>
<country>CA</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Hornibrook</last-name>
<first-name>John</first-name>
<address>
<city>Markham</city>
<country>CA</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Mignet</last-name>
<first-name>Laurent S.</first-name>
<address>
<city>New Delhi</city>
<country>IN</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Minor</last-name>
<first-name>William R.</first-name>
<address>
<city>Markham</city>
<country>CA</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Negi</last-name>
<first-name>Sumit</first-name>
<address>
<city>New Delhi</city>
<country>IN</country>
</address>
</addressbook>
</inventor>
<inventor sequence="005" designation="us-only">
<addressbook>
<last-name>Zilio</last-name>
<first-name>Daniele C.</first-name>
<address>
<city>Georgetown</city>
<country>CA</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Ryan, Mason &#x26; Lewis, LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>International Business Machines Corporation</orgname>
<role>02</role>
<address>
<city>Armonk</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Timblin</last-name>
<first-name>Robert</first-name>
<department>2157</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A workload specification is obtained for the database. Based on the workload specification, candidate ones of the tables are identified and ranked. Compression impact is evaluated for the candidate ones of the tables. A design for the database is developed, specifying at least one of: (i) which of the tables should be compressed, and (ii) which of the tables should not be compressed.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="171.70mm" wi="193.04mm" file="US08626724-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="224.87mm" wi="185.08mm" orientation="landscape" file="US08626724-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="203.54mm" wi="176.70mm" orientation="landscape" file="US08626724-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="135.55mm" wi="155.45mm" file="US08626724-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION(S)</heading>
<p id="p-0002" num="0001">The present application is related to a commonly assigned U.S. application Ser. No. 12/021,365 entitled &#x201c;System and Computer Program Product for Automated Design of Row Compression on Tables in a Relational Database,&#x201d;, and filed on even date herewith, the disclosure of which is incorporated by reference herein in its entirety.</p>
<heading id="h-0002" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0003" num="0002">The present invention relates to the electrical, electronic and computer arts, and, more particularly, to relational databases and the like.</p>
<heading id="h-0003" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0004" num="0003">Row compression is an interesting feature that was introduced in IBM DB2&#xae; brand computer software version 9 (registered mark of International Business Machines Corporation, Armonk, N.Y., USA) (&#x201c;IBM&#x201d;). To summarize, DB2&#xae; software creates a dictionary of values for each compressed table, and compresses each row, replacing the value by a mapped value in the dictionary. The result is a huge saving, in terms of disk storage requirements, and therefore in total cost of operations/ownership. The IBM DB2 Database for Linux, UNIX, and Windows Information Center, http://publib.boulder.ibm.com/infocenter/db2luw/v9/indexjsp, expressly incorporated herein by reference in its entirety for all purposes, describes row compression. <figref idref="DRAWINGS">FIG. 1</figref> shows example rows <b>100</b>. Row <b>102</b> lists the name, department, salary, city, state, and postal &#x201c;zip&#x201d; code for employee &#x201c;Fred,&#x201d; while row <b>104</b> lists similar information for employee &#x201c;John.&#x201d; <figref idref="DRAWINGS">FIG. 2</figref> shows uncompressed data storage at <b>202</b> and compressed data storage at <b>204</b>. A dictionary is shown at <b>206</b>. &#x201c;Dept 500&#x201d; is replaced by mapped value 01 while &#x201c;Plano, Tex. 24355&#x201d; is replaced by mapped value 02.</p>
<p id="p-0005" num="0004">As a row needs to be uncompressed before being used by the internal query processor, additional central processing unit (CPU) cost is required to perform any queries on the compressed table. In &#x201c;Row Compression in DB2 9: Analysis on DSS and OLTP Database Environments,&#x201d; Y. H Lee, N. Bissoon, and V. Chang, July 2006, available at http://www3.software.ibm.com/ibmdl/pub/software/dw/dm/db2/dm-0610chang/Row_Compression.pdf, expressly incorporated herein by reference in its entirety for all purposes, the authors present comparative results of decision support system (DSS) and on-line transaction processing (OLTP) workload on an uncompressed and compressed database, using standard metrics. Their analysis concludes that even though some queries of the workload show an improvement in execution time (in the compressed case over the uncompressed case), there are other queries for which the execution time increases. This effect is more pronounced in the case of DSS workloads. Therefore, even though the gain in terms of storage saving is clear, the overall performance of a workload in a database using row compression has to be analyzed carefully.</p>
<p id="p-0006" num="0005">As with most of the major database manager software packages, DB2&#xae; software has a value compression mechanism. Value compression provides an alternate method of representing the internal storage format of a data row. The disk storage savings depends on the table column definition. In this situation, NULLs and zero-length data that have been assigned to defined variable-length data types (VARCHAR, VARGRAPHICS, LONG VARCHAR, LONG VARGRAPHIC, BLOB, CLOB, and DBCLOB) will not be stored on disk. Row compression is different from value compression. Row compression does not depend on the table column definition. It replaces common byte patterns in a data row with shorter symbol strings. The storage savings are greater than the savings provided with value compression. DB2&#xae; universal data base (UDB) software implements row compression.</p>
<heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0007" num="0006">Principles of the present invention provide techniques for an automated design of row compression on tables in a relational database. In one aspect, an exemplary method (which can be computer implemented) for such compression includes the steps of obtaining a workload specification for the database; based on the workload specification, identifying and ranking candidate ones of the tables; evaluating compression impact for the candidate ones of the tables; and developing a design for the database, specifying at least one of: (i) which of the tables should be compressed, and (ii) which of the tables should not be compressed.</p>
<p id="p-0008" num="0007">One or more embodiments of the invention or elements thereof can be implemented in the form of a computer product including a computer usable medium with computer usable program code for performing the method steps indicated. Furthermore, one or more embodiments of the invention or elements thereof can be implemented in the form of a system/apparatus including a memory and at least one processor that is coupled to the memory and operative to perform exemplary method steps. Yet further, in another aspect, one or more embodiments of the invention or elements thereof can be implemented in the form of means for carrying out one or more of the method steps described herein; the means can include hardware module(s), software module(s), or a combination of hardware and software modules.</p>
<p id="p-0009" num="0008">These and other features, aspects and advantages of the present invention will become apparent from the following detailed description of illustrative embodiments thereof, which is to be read in connection with the accompanying drawings.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 1</figref> shows exemplary rows in a database, as known in the prior art;</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 2</figref> presents a comparison of compressed and uncompressed data storage, as known from the prior art;</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 3</figref> shows an exemplary block and data flow diagram, according to an aspect of the invention; and</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 4</figref> depicts a computer system that may be useful in implementing one or more aspects and/or elements of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS</heading>
<p id="p-0014" num="0013">One or more embodiments of the invention provide a method and system/apparatus that helps the data base administrator (DBA) determine which tables in the database should be row compressed in order to gain desirable, and preferably maximum, improvements in the overall workload query execution time. The recommended configurations will suggest which tables in the database should be row compressed.</p>
<p id="p-0015" num="0014">Disk storage systems can often be the most expensive components of a database solution. For large warehouses or databases with huge volumes of data, the cost of the storage subsystem can easily exceed the combined cost of the hardware server and the data server software. The existing approach (herein referred to as the baseline case) is to compress all the tables in the database to gain maximum benefit in terms of disk space usage. This choice (of compressing all the tables) can be sub optimum from the overall workload execution point of view. When considering the use of row compression, it is important to take the CPU and disk input/output (I/O) utilization of the system into account. Since there is additional overhead when compressing and expanding rows in the tables, it is to be expected that row compression will require more CPU resources.</p>
<p id="p-0016" num="0015">One or more inventive embodiments help the DBA to systematically explore which set of tables should be subjected to compression by factoring in both these concerns, namely, disk space savings, and the effect of compression on overall workload execution time.</p>
<p id="p-0017" num="0016">One exemplary apparatus implements an exemplary method using several inputs from the database manager. One exemplary implementation of an inventive apparatus can be realized inside database design advisor software, such as DB2&#xae; Design Advisor software <b>302</b>, as depicted in <figref idref="DRAWINGS">FIG. 3</figref> (DB2&#xae; Design Advisor software is a non-limiting example). In one or more embodiments, one input is a workload specification, detailing specific queries and the frequency of execution of each, as shown at <b>304</b>. An output includes a set of tables to compress, the compression of which may result in speeding-up the processing of the workload given in the input. The output may be in the form of a design (which may be said to be suggested by the design advisor), as shown at <b>314</b>.</p>
<p id="p-0018" num="0017">By way of example and not limitation, different embodiments can employ the following two scenarios. Depending under which scenario the method is used, the output will be different.</p>
<p id="p-0019" num="0018">Scenario A:</p>
<p id="p-0020" num="0019">In this setting, the DBA has set all tables in the database for compression. When run in this setting, an exemplary embodiment of the method, for a given workload, recommends which tables should not be compressed, considering the adverse effect compression (due to CPU overhead) will have on the overall workload execution time. The method also outputs the gains forgone, in terms of disk space savings, if the recommendation from the advisor is adopted. In essence, in this approach, I/O and CPU costs are modeled for candidates with respect to the base line case, that is, the case where all tables are selected for compression (as used herein, including the claims, CPU costs refer to time expended in processing).</p>
<p id="p-0021" num="0020">Scenario B:</p>
<p id="p-0022" num="0021">In this case, no tables are set for compression. When run in this setting, an exemplary embodiment of the method, for a given workload, recommends which tables should be compressed, to minimize the overall penalty incurred in terms of CPU overheads (due to compression) and to maximize I/O utilization. The I/O and CPU cost are modeled by simulating the compression of one table at a time and checking if the result is the one expected to meet the input criteria.</p>
<p id="p-0023" num="0022">Note that &#x201c;minimizing,&#x201d; &#x201c;maximizing,&#x201d; and so on are within the context of one or more exemplary embodiments, and in general terms, one or more embodiments of the invention can be used to enhance performance without necessarily achieving minima or maxima of certain criteria.</p>
<p id="p-0024" num="0023">In addition to design advisor <b>302</b>, <figref idref="DRAWINGS">FIG. 3</figref> depicts &#x201c;DB2 server&#x201d; <b>360</b>, it being understood that the server could run other database programs besides the DB2&#xae; program. Server <b>360</b> may in one embodiment include a query optimizer module <b>362</b>. Data flows between advisor <b>302</b> and optimizer <b>362</b> are indicated by arrows <b>320</b>, <b>322</b>. Data flows between advisor <b>302</b> and inspect tool <b>364</b> are indicated by arrows <b>324</b>, <b>326</b>.</p>
<p id="p-0025" num="0024">One or more embodiments of the invention provide a model for (i) detecting candidate tables that should not be compressed, and (ii) estimating the workload benefit and storage benefit forgone for the given candidates.</p>
<p id="p-0026" num="0025">As indicated by arrow <b>320</b>, under Scenario A, queries from the workload obtained in step <b>304</b> are fed to a MQO (Multiple Query Optimization) routine <b>362</b> that extracts frequent sub-expressions from queries in the workload. In the MQO technique, the QGM (Query Graph Model) is traversed bottom up. Common and/or similar sub expressions are identified. If required, expressions are generalized; and compensation can be performed, if data needs to be adjusted&#x2014;for example, back-joins and/or predicate adjustment. In one or more instances, pertinent rules for the MQO technique are as follows: base table boxes refer to the same data sources, and expressions must be derivable from generalized expressions. The skilled artisan is familiar with MQO per se, from, for example, the reference: T. Sellis, &#x201c;Multiple Query Optimization&#x201d;, ACM Trans. on Database Systems, 13(1), March 1988, and, given the teachings herein, can employ MQO in connection with one or more embodiments of the invention.</p>
<p id="p-0027" num="0026">Referring again to data flow arrow <b>320</b>, under Scenario B, queries from the workload are run in a mode such as the &#x201c;DB2 Explain&#x201d; mode. In this mode, detailed access plans and optimizer estimates are generated for individual queries, in step <b>362</b>. These access plans are used to find the most frequently accessed tables, the number of rows read, and the associated I/O &#x26; CPU costs.</p>
<p id="p-0028" num="0027">In step <b>308</b>, tables extracted from the workload (indicated by arrow <b>322</b>) are sorted on &#x201c;frequency of occurrence in workload&#x201d; and I/O-CPU costs. Tables that are part of the top-n sub-expressions are candidates for &#x201c;no-compression.&#x201d; Tables that are accessed as part of queries with UPDATE, INSERT or DELETE statements are weighted and/or penalized (W) more:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>R</i><sub>J</sub><i>=Freq</i>(<i>T</i><sub>J</sub>)*<i>W</i>*Function(I/O,CPU)&#x2003;&#x2003;(1)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0029" num="0028">The skilled artisan will appreciate that Function (I/O, CPU) utilizes catalog simulation to model the gains obtained by compressing a particular set of tables.</p>
<p id="p-0030" num="0029">In step <b>310</b>, choose the top-k tables, based on the frequency computed in step <b>308</b>. Each recommendation is a possible configuration, as illustrated in the example below. Consider an example of a &#x201c;Top-3 List&#x201d;:</p>
<p id="h-0007" num="0000">R<sub>A</sub>=(A, B)=&#x3e;compress all tables except A and B</p>
<p id="h-0008" num="0000">R<sub>B</sub>=(B, Z)=&#x3e;compress all tables except B and Z</p>
<p id="h-0009" num="0000">R<sub>C</sub>=(A, Z, P)=&#x3e;compress all tables except A, Z and P</p>
<p id="p-0031" num="0030">By employing catalog simulation, it is possible to estimate the performance benefits that can be realized by each of the above configurations over the baseline case (baseline case: all tables of the database are set for compression). In this setting, each query in the workload is re-optimized in a special mode, whereby the structured query language (SQL) optimizer <b>312</b> simulates the effect of compression on all candidates, thus providing a cost estimate (total execution time) for the workload, as indicated at arrow <b>326</b>.</p>
<p id="p-0032" num="0031">With reference to arrow <b>324</b>, the DB2&#xae; program provides the INSPECT tool (step <b>364</b>) in order to help one determine the compression ratio estimate for a particular table or data set. Of course, other, similar tools can also be employed. Using the tool, calculate the storage space gain if all tables of the database are compressed, that is, for the baseline case. By using available tools, compute the different statistics and compression ratio for the tables that were selected in step <b>310</b>. One non-limiting example of such a tool is given below, to estimate the compression ratio of one table: &#x201c;db2 inspect rowcompestimate table name &#x3c;table name&#x3e; results keep &#x3c;filename&#x3e;&#x201d;</p>
<p id="p-0033" num="0032">Turning now to data flow arrow <b>326</b>, insert the statistics generated in step <b>364</b> to the catalog tables, and measure the performance improvements for each configuration individually, as indicated by arrow <b>328</b>.</p>
<p id="p-0034" num="0033">Exemplary output from the preceding technique follows:</p>
<p id="h-0010" num="0000">//Baseline Case</p>
<p id="h-0011" num="0000">S<sub>Base</sub>=( )&#x2192;compress all tables&#x2192;</p>
<p id="p-0035" num="0000">
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0034">Estimated Disk Space Saving=X %</li>
        <li id="ul0002-0002" num="0035">Total Execution time=Y secs
<br/>
S<sub>RL</sub>=(A, B)=&#x3e;compress all tables except A and B
</li>
        <li id="ul0002-0003" num="0036">Estimated Disk Space Saving=X % minus %[disk space saving gained from compressing A and B]</li>
        <li id="ul0002-0004" num="0037">Total Execution time=A % improvement over baseline Case
<br/>
S<sub>RM</sub>=(B, Z)=&#x3e;compress all tables except B and Z&#x2192;
</li>
        <li id="ul0002-0005" num="0038">Estimated Disk Space Saving=X % minus %[disk space saving gained from compressing B and Z]</li>
        <li id="ul0002-0006" num="0039">Total Execution time=B % improvement over baseline Case
<br/>
S<sub>RP</sub>=(A, Z, P)=&#x3e;compress all tables except A, Z and P&#x2192;
</li>
        <li id="ul0002-0007" num="0040">Estimated Disk Space Saving=X % minus %[disk space saving gained from compressing A, Z and P]</li>
        <li id="ul0002-0008" num="0041">Total Execution time=C % improvement over baseline Case</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0036" num="0042">In this particular example, the total execution time for each set other than the baseline assumes a given percentage improvement over the baseline case. It should be noted that in some instances, there could be a degradation compared to the baseline case; that is, in some situations, it may be optimal to compress all tables.</p>
<p id="p-0037" num="0043">An exemplary method is now disclosed to pick the tables to compress from the list of candidate uncompressed tables described above, in particular, with regard to Scenario A. Given the teachings herein, the skilled artisan can readily derive a method for Scenario B, using the same principles.</p>
<p id="p-0038" num="0044">Once the set of candidate tables are collected in step <b>310</b>, further pruning of this list can be undertaken by considering only the top nth tables. Consider the first table of the list and simulate the workload on a catalog on which the chosen table is compressed. Store the overall workload cost as well as the estimated storage gain. If the workload cost is lower than the cost computed on the previous step, mark this table as &#x201c;compressible&#x201d;; otherwise, skip it. Then, re-compute the list of candidate tables as in Scenario A, and repeat the same process until no gains are obtained or the list of tables' candidate has been exhausted.</p>
<p id="p-0039" num="0045">One or more embodiments of the invention can be implemented within a design advisor <b>302</b>, such as the IBM DB2&#xae; Design Advisor software tool. The aforementioned IBM DB2&#xae; UDB has a design advisor feature that allows a user to automatically make physical database design decisions, such as which indexes, materialized views, clustering or partitioning should exist on the database. There are many more design choices that exist for physical database design, and design advisor programs may be extended to add these other decisions. One such feature is the selection of which tables to compress. Thus, one or more embodiments of the invention serve as a description of the compression selection, which could be added to a design advisor program.</p>
<p id="p-0040" num="0046">Following appropriate steps of the design advisor, first, one or more embodiments of the invention collect the different tables involved in the workload by using the query optimizer, as shown at blocks <b>304</b>, arrow <b>320</b>, block <b>362</b>, and arrow <b>322</b>. Then, using, for example, one of the methods described above, iterate on the set of solutions by involving the query optimizer <b>362</b> to estimate the cost of the workload for each solution, as indicated by block <b>312</b>, arrow <b>328</b>, and block <b>362</b>. Finally, by comparing the different solutions, the design advisor <b>302</b> proposes a new design, as at block <b>314</b>, by enumerating a set of tables which, if compressed, will meet the constraint(s) that were input, such as workload speed-up or space gain.</p>
<p id="p-0041" num="0047">Thus, it will be appreciated that one or more embodiments of the invention provide a method and system/apparatus to recommend which tables of a database should be compressed under the following constraints: (i) a given schema, and (ii) a given workload. In some instances, the method and apparatus accept, in input, a given performance percentage that the user is willing to pay or to expect when compression is applied, and/or a storage capacity that the new configuration should comply with (or, stated differently, conform to). In addition to, or in lieu of, such constraints, other input constraints can also be applied. Thus, one or more inventive embodiments recommend which tables of a database should be compressed, given a workload and a set of constraint(s) (in some instances, the set of constraints can also be empty). It should be noted that, as used herein, including the claims, &#x201c;compression impact&#x201d; is intended to refer to both (i) the impact that would occur from not compressing a given table, in the case where compression is initially assumed for all tables, and (ii) the impact that would occur from compressing a given table, in the case where it is initially assumed that all tables are not compressed.</p>
<p id="p-0042" num="0048">Exemplary System and Article of Manufacture Details</p>
<p id="p-0043" num="0049">A variety of techniques, utilizing dedicated hardware, general purpose processors, firmware, software, or a combination of the foregoing may be employed to implement the present invention or components thereof. One or more embodiments of the invention, or elements thereof, can be implemented in the form of a computer product including a computer usable medium with computer usable program code for performing the method steps indicated. Furthermore, one or more embodiments of the invention, or elements thereof, can be implemented in the form of an apparatus including a memory and at least one processor that is coupled to the memory and operative to perform exemplary method steps.</p>
<p id="p-0044" num="0050">One or more embodiments can make use of software running on a general purpose computer or workstation. With reference to <figref idref="DRAWINGS">FIG. 4</figref>, such an implementation might employ, for example, a processor <b>402</b>, a memory <b>404</b>, and an input/output interface formed, for example, by a display <b>406</b> and a keyboard <b>408</b>. The term &#x201c;processor&#x201d; as used herein is intended to include any processing device, such as, for example, one that includes a CPU (central processing unit) and/or other forms of processing circuitry. Further, the term &#x201c;processor&#x201d; may refer to more than one individual processor. The term &#x201c;memory&#x201d; is intended to include memory associated with a processor or CPU, such as, for example, RAM (random access memory), ROM (read only memory), a fixed memory device (for example, hard drive), a removable memory device (for example, diskette), a flash memory and the like. In addition, the phrase &#x201c;input/output interface&#x201d; as used herein, is intended to include, for example, one or more mechanisms for inputting data to the processing unit (for example, mouse), and one or more mechanisms for providing results associated with the processing unit (for example, printer). The processor <b>402</b>, memory <b>404</b>, and input/output interface such as display <b>406</b> and keyboard <b>408</b> can be interconnected, for example, via bus <b>410</b> as part of a data processing unit <b>412</b>. Suitable interconnections, for example via bus <b>410</b>, can also be provided to a network interface <b>414</b>, such as a network card, which can be provided to interface with a computer network, and to a media interface <b>416</b>, such as a diskette or CD-ROM drive, which can be provided to interface with media <b>418</b>.</p>
<p id="p-0045" num="0051">Accordingly, computer software including instructions or code for performing the methodologies of the invention, as described herein, may be stored in one or more of the associated memory devices (for example, ROM, fixed or removable memory) and, when ready to be utilized, loaded in part or in whole (for example, into RAM) and executed by a CPU. Such software could include, but is not limited to, firmware, resident software, microcode, and the like.</p>
<p id="p-0046" num="0052">Furthermore, the invention can take the form of a computer program product accessible from a computer-usable or computer-readable medium (for example, media <b>418</b>) providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description, a computer usable or computer readable medium can be any apparatus for use by or in connection with the instruction execution system, apparatus, or device. The medium can store program code to execute one or more method steps set forth herein.</p>
<p id="p-0047" num="0053">The medium can be an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system (or apparatus or device) or a propagation medium. Examples of a computer-readable medium include a semiconductor or solid-state memory (for example memory <b>404</b>), magnetic tape, a removable computer diskette (for example media <b>418</b>), a random access memory (RAM), a read-only memory (ROM), a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk-read only memory (CD-ROM), compact disk-read/write (CD-R/W) and DVD.</p>
<p id="p-0048" num="0054">A system, preferably a data processing system, suitable for storing and/or executing program code will include at least one processor <b>402</b> coupled directly or indirectly to memory elements <b>404</b> through a system bus <b>410</b>. The memory elements can include local memory employed during actual execution of the program code, bulk storage, and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.</p>
<p id="p-0049" num="0055">Input/output or I/O devices (including but not limited to keyboards <b>408</b>, displays <b>406</b>, pointing devices, and the like) can be coupled to the system either directly (such as via bus <b>410</b>) or through intervening I/O controllers (omitted for clarity).</p>
<p id="p-0050" num="0056">Network adapters such as network interface <b>414</b> may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems, cable modem and Ethernet cards are just a few of the currently available types of network adapters.</p>
<p id="p-0051" num="0057">In any case, it should be understood that the components illustrated herein may be implemented in various forms of hardware, software, or combinations thereof, for example, application specific integrated circuit(s) (ASICS), functional circuitry, one or more appropriately programmed general purpose digital computers with associated memory, and the like. Given the teachings of the invention provided herein, one of ordinary skill in the related art will be able to contemplate other implementations of the components of the invention.</p>
<p id="p-0052" num="0058">It will be appreciated and should be understood that the exemplary embodiments of the invention described above can be implemented in a number of different fashions. Given the teachings of the invention provided herein, one of ordinary skill in the related art will be able to contemplate other implementations of the invention. Indeed, although illustrative embodiments of the present invention have been described herein with reference to the accompanying drawings, it is to be understood that the invention is not limited to those precise embodiments, and that various other changes and modifications may be made by one skilled in the art without departing from the scope or spirit of the invention.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for recommending row compression on tables in a relational database, said method comprising the steps of:
<claim-text>obtaining a workload specification for said database;</claim-text>
<claim-text>based on said workload specification, identifying and ranking candidate ones of said tables;</claim-text>
<claim-text>evaluating a compression impact on a workload execution time for each of said candidate ones of said tables, wherein said evaluating comprises, for each of said candidate ones of said tables:
<claim-text>simulating the workload specification on said database under a configuration wherein a first table of said candidate ones of said tables is compressed and each other table of said candidate ones of said tables is not compressed;</claim-text>
<claim-text>determining an estimated workload execution time based on said simulating;</claim-text>
<claim-text>comparing said estimated workload execution time to a baseline workload execution time under a configuration wherein each of said candidate ones of said tables is not compressed; and</claim-text>
<claim-text>identifying the first table as a table that should be compressed if the estimated execution time is an improvement over the baseline workload execution time; and</claim-text>
</claim-text>
<claim-text>developing a design for said database, specifying one of: (i) which of said tables should be compressed based on said evaluation, and (ii) which of said tables should not be compressed based on said evaluation.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising obtaining a specification of a given performance penalty a user is willing to accept when compression is applied to given ones of said tables.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein said developing step is based, at least in part, on compliance with said workload specification.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein said workload specification is expressed as a percentage value comparing performance with said compression to performance without said compression.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising obtaining a storage capacity which said design must comply with, wherein said developing step is based, at least in part, on compliance with said storage capacity.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>obtaining a specification of a given performance penalty a user is willing to accept when compression is applied to given ones of said tables; and</claim-text>
<claim-text>obtaining a storage capacity which said design must comply with;</claim-text>
<claim-text>wherein said developing step is based, at least in part, on compliance with said specification and compliance with said storage capacity.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>said workload comprises queries; and</claim-text>
<claim-text>said identifying and ranking step in turn comprises:
<claim-text>feeding said queries to a query optimization routine which extracts frequent sub-expressions therefrom; and</claim-text>
<claim-text>sorting said tables based at least on frequency of occurrence in said workload and input-output and central processing unit costs.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>said workload comprises queries; and</claim-text>
<claim-text>said identifying and ranking step in turn comprises:
<claim-text>running said queries in an explain mode to obtain detailed access plans and optimizer estimates for individual ones of said queries; and</claim-text>
<claim-text>sorting said tables based at least on frequency of occurrence in said workload and input-output and central processing unit costs.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A computer program product comprising a computer readable recordable storage apparatus including computer usable program code for recommending row compression on tables in a relational database, said computer program product including:
<claim-text>computer usable program code for obtaining a workload specification for said database;</claim-text>
<claim-text>computer usable program code for, based on said workload specification, identifying and ranking candidate ones of said tables;</claim-text>
<claim-text>computer usable program code for evaluating a compression impact on a workload execution time for each of said candidate ones of said tables, wherein said evaluating comprises, for each of said candidate ones of said tables:
<claim-text>simulating the workload specification on said database under a configuration wherein a first table of said candidate ones of said tables is compressed and each other table of said candidate ones of said tables is not compressed;</claim-text>
<claim-text>determining an estimated workload execution time based on said simulating;</claim-text>
<claim-text>comparing said estimated workload execution time to a baseline workload execution time under a configuration wherein each of said candidate ones of said tables is not compressed; and</claim-text>
<claim-text>identifying the first table as a table that should be compressed if the estimated execution time is an improvement over the baseline workload execution time; and</claim-text>
</claim-text>
<claim-text>computer usable program code for developing a design for said database, specifying one of: (i) which of said tables should be compressed based on said evaluation, and (ii) which of said tables should not be compressed based on said evaluation.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The computer program product of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising computer usable program code for obtaining a specification of a given performance penalty a user is willing to accept when compression is applied to given ones of said tables.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The computer program product of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein said computer usable program code for developing bases said design, at least in part, on compliance with said workload specification.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The computer program product of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein said workload specification is expressed as a percentage value comparing performance with said compression to performance without said compression.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The computer program product of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:
<claim-text>computer usable program code for obtaining a specification of a given performance penalty a user is willing to accept when compression is applied to given ones of said tables; and</claim-text>
<claim-text>computer usable program code for obtaining a storage capacity which said design must comply with;</claim-text>
<claim-text>wherein said computer usable program code for developing bases said design, at least in part, on compliance with said specification and compliance with said storage capacity.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. A system for recommending row compression on tables in a relational database, said system comprising:
<claim-text>a memory; and</claim-text>
<claim-text>at least one processor, coupled to said memory, and operative to:
<claim-text>obtain a workload specification for said database;</claim-text>
<claim-text>based on said workload specification, identify and rank candidate ones of said tables;</claim-text>
<claim-text>evaluate a compression impact on a workload execution time for each of said candidate ones of said tables, wherein said evaluating comprises, for each of said candidate ones of said tables:
<claim-text>simulating the workload specification on said database under a configuration wherein a first table of said candidate ones of said tables is compressed and each other table of said candidate ones of said tables is not compressed;</claim-text>
<claim-text>determining an estimated workload execution time based on said simulating;</claim-text>
<claim-text>comparing said estimated workload execution time to a baseline workload execution time under a configuration wherein each of said candidate ones of said tables is not compressed; and</claim-text>
<claim-text>identifying the first table as a table that should be compressed if the estimated execution time is an improvement over the baseline workload execution time; and</claim-text>
</claim-text>
<claim-text>develop a design for said database, specifying one of: (i) which of said tables should be compressed based on said evaluation, and (ii) which of said tables should not be compressed based on said evaluation.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein said processor is further operative to obtain a specification of a given performance penalty a user is willing to accept when compression is applied to given ones of said tables.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein said processor is operative to develop said design based, at least in part, on compliance with said workload specification.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein said workload specification is expressed as a percentage value comparing performance with said compression to performance without said compression.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein said processor is further operative to:
<claim-text>obtain a specification of a given performance penalty a user is willing to accept when compression is applied to given ones of said tables; and</claim-text>
<claim-text>obtain a storage capacity which said design must comply with;</claim-text>
<claim-text>wherein said processor is operative to develop said design based, at least in part, on compliance with said specification and compliance with said storage capacity.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said evaluating further comprises, for each of said candidate ones of said tables:
<claim-text>simulating the workload specification on said database under a configuration wherein a first table of said candidate ones of said tables is not compressed and each other table of said candidate ones of said tables is compressed;</claim-text>
<claim-text>determining an estimated workload execution time based on said simulating;</claim-text>
<claim-text>comparing said estimated workload execution time to a baseline workload execution time under a configuration wherein each of said candidate ones of said tables is compressed; and</claim-text>
<claim-text>identifying the first table as a table that should be compressed if the estimated execution time is an improvement over the baseline workload execution time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein said evaluating further comprises, for each of said candidate ones of said tables:
<claim-text>simulating the workload specification on said database under a configuration wherein a first table of said candidate ones of said tables is not compressed and each other table of said candidate ones of said tables is compressed;</claim-text>
<claim-text>determining an estimated workload execution time based on said simulating;</claim-text>
<claim-text>comparing said estimated workload execution time to a baseline workload execution time under a configuration wherein each of said candidate ones of said tables is compressed; and</claim-text>
<claim-text>identifying the first table as a table that should be compressed if the estimated execution time is an improvement over the baseline workload execution time.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
