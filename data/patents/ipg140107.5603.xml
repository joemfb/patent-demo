<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626704-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626704</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13005799</doc-number>
<date>20110113</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2010-019578</doc-number>
<date>20100129</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>314</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>17</main-group>
<subgroup>30</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>707602</main-classification>
<further-classification>707756</further-classification>
<further-classification>707E17005</further-classification>
<further-classification>707E17022</further-classification>
</classification-national>
<invention-title id="d2e71">Map update data supply device and method</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>7082443</doc-number>
<kind>B1</kind>
<name>Ashby</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2004/0135705</doc-number>
<kind>A1</kind>
<name>Umezu et al.</name>
<date>20040700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2009/0248758</doc-number>
<kind>A1</kind>
<name>Sawai et al.</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2010/0312757</doc-number>
<kind>A1</kind>
<name>Meschenmoser et al.</name>
<date>20101200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>EP</country>
<doc-number>1385102</doc-number>
<kind>A2</kind>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>JP</country>
<doc-number>2002296042</doc-number>
<kind>A</kind>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>JP</country>
<doc-number>2004178248</doc-number>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>JP</country>
<doc-number>2004212273</doc-number>
<kind>A</kind>
<date>20040700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>JP</country>
<doc-number>2004271576</doc-number>
<kind>A</kind>
<date>20040900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>JP</country>
<doc-number>2007240492</doc-number>
<kind>A</kind>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>JP</country>
<doc-number>2008-089852</doc-number>
<kind>A</kind>
<date>20080400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>JP</country>
<doc-number>2009157227</doc-number>
<kind>A</kind>
<date>20090700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>WO</country>
<doc-number>2008055729</doc-number>
<kind>A1</kind>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00014">
<othercit>Otto et al., &#x201c;Information Society Technologies. Actual and dynamic MAP for transport telematic applications (Project No. IST-2011-34141; Deliverable No. D 3.2)&#x2014;ActMAP Specification,&#x201d; ACTMAP, Oct. 2004.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00015">
<othercit>Otto H U et al: &#x201c;The actmap approach-specifications of incremental map updates for advanced in-vehicle applications,&#x201d; 2005, www.teleatlas.com.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00016">
<othercit>EP Search Report for EP 11150239, mailed Jun. 8, 2011.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>12</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>16</number-of-drawing-sheets>
<number-of-figures>26</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110191285</doc-number>
<kind>A1</kind>
<date>20110804</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Sawai</last-name>
<first-name>Kimiyoshi</first-name>
<address>
<city>Okazaki</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Sawai</last-name>
<first-name>Kimiyoshi</first-name>
<address>
<city>Okazaki</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Lowe Hauptman &#x26; Ham, LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Aisin Aw Co., Ltd.</orgname>
<role>03</role>
<address>
<city>Aichi-ken</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Girma</last-name>
<first-name>Anteneh</first-name>
<department>2157</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A map update data supply device and method includes an update map database of per section versions of an update data file, and a request update data extraction unit for extracting a request update section and an update data file. A safeguard update data extraction unit extracts a safeguard update section to safeguard a road network connection between adjacent sections. An integrated data generation unit integrates all versions of the update data file for each extracted request update section and generates a request update integrated data file. The integrated data generation unit integrates, per safeguard update section, versions of the update data file up to the update safeguard version for each extracted safeguard update section, and generates a safeguard update integrated data file. An integrated data supply unit supplies the generated request update integrated data file and the safeguard update integrated data file to a navigation device.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="177.21mm" wi="111.34mm" file="US08626704-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="259.50mm" wi="183.90mm" file="US08626704-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="239.69mm" wi="152.48mm" file="US08626704-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="247.40mm" wi="176.19mm" file="US08626704-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="132.25mm" wi="122.17mm" file="US08626704-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="255.69mm" wi="186.52mm" orientation="landscape" file="US08626704-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="256.37mm" wi="169.16mm" file="US08626704-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="249.94mm" wi="178.14mm" file="US08626704-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="257.64mm" wi="155.11mm" orientation="landscape" file="US08626704-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="255.69mm" wi="179.41mm" orientation="landscape" file="US08626704-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="198.63mm" wi="169.16mm" file="US08626704-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="256.37mm" wi="169.84mm" file="US08626704-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="185.84mm" wi="171.70mm" file="US08626704-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="250.53mm" wi="180.68mm" file="US08626704-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="244.77mm" wi="165.95mm" orientation="landscape" file="US08626704-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="249.26mm" wi="124.29mm" file="US08626704-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="191.60mm" wi="110.24mm" file="US08626704-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<p id="p-0002" num="0001">The disclosure of Japanese Patent Application No. 2010-019578 filed on Jan. 29, 2010 is incorporated herein by reference in its entirety.</p>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">Embodiments described herein are of a map update data supply device and uses thereof. Although the device has several uses, the device is described for supplying data for updating map data to a navigation device having map data.</p>
<heading id="h-0002" level="1">DESCRIPTION OF THE RELATED ART</heading>
<p id="p-0004" num="0003">Heretofore known art partially updates the content of map data for a road map or the like that is used by a navigation device. For example, in order to maintain a newly built road up to portions that connect to existing main roads as one data group, a device described in Japanese Patent Application Publication No. JP-A-2004-178248 includes a data group table that stores a series of link members that constitute the new road. The navigation device may request an update of some sections of map data that is divided into a plurality of sections. At such time, if the new road stored in the data group table also extends into other sections besides those for which an update is requested, update information of the new road is fully provided to the navigation device by referring to the data group table.</p>
<p id="p-0005" num="0004">A break in a road between adjacent sections can thus be prevented, even when update information is provided for only some sections of map data as specified by the navigation device. Therefore, even after an update of only some sections, a route search can be appropriately performed and the appearance of a map display can also be improved.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0006" num="0005">According to the device described in JP-A-2004-178248, the data group table is configured so as to store a series of link members that constitute a new road. However, if, for example, there are many new roads or a new road extends for a long distance, the quantity of information for the link members registered in the data group table and the like grows larger, and the volume of data in the data group table also increases.</p>
<p id="p-0007" num="0006">Further, since the data group table is configured to store a series of link members that constitute a new road, when a pre-existing road changes in relation to the new road in a section other than the section for which an update is requested, an appropriate update cannot be performed regarding the changed location. As a consequence, a connection relationship between the new road and the pre-existing road may not be correct, and could result in an inability to appropriately perform a route search or other operation.</p>
<p id="p-0008" num="0007">In order to reduce the volume of update data supplied to the navigation device, a configuration may be used in which only difference update data regarding a changed location is supplied for map data included in the navigation device. In such case, if update data for a road extending into a section other than the section for which an update is requested spans a plurality of versions of difference update data, it is difficult to generate the data group table mentioned above.</p>
<p id="p-0009" num="0008">In addition, when supplying difference update data, a plurality of versions of difference update data may also be transmitted for the same section. In such case, transmitting the plurality of versions of difference update data without modification will result in duplicate data among the different versions being supplied. Consequently, the volume of data supplied increases and the processing load of the navigation device also increases accordingly due to the duplicate update processing performed.</p>
<p id="p-0010" num="0009">Each of the inventors learned that is thus desirable to realize a map update data supply device and a map update data supply program which safeguard a road network connection between a section to be updated and another section when a difference update of map data in a navigation device is performed, and also reduce the time and processing load required for updating map data while keeping a volume of data in an update data file to be supplied to the navigation device small.</p>
<p id="p-0011" num="0010">In order to achieve the above, a map update data supply device, according to disclosed embodiments, supplies data for updating a map database to a navigation device that has the map database, with the map database including at least road network information and divided into a plurality of sections. At least one embodiment of the map update data supply device includes: an update map database that manages per section versions of an update data file for difference updating the map database, and stores per section versions of the update data file; a request update data extraction unit that, based on an update request from the navigation device, extracts a request update section that is a section subjected to a difference update, and extracts for each request update section up to the latest version of the update data file to be supplied to the navigation device; a safeguard update data extraction unit that, if all the request update sections are updated up to the latest version, extracts a safeguard update section that is a section requiring an update to safeguard a road network connection between adjacent sections, and extracts for each safeguard update section the update data file up to an update safeguard version, which is a version requiring an update to safeguard the road network connection; an integrated data generation unit that integrates per request update section up to the latest version of all the update data files for each request update section extracted by the request update data extraction unit and generates a request update integrated data file that serves as a data file for one difference update, and integrates per safeguard update section up to the update safeguard version of the update data file for each safeguard update section extracted by the safeguard update data extraction unit and generates a safeguard update integrated data file that serves as a data file for one difference update; and an integrated data supply unit that supplies to the navigation device the request update integrated data file and the safeguard update integrated data file generated by the integrated data extraction unit.</p>
<p id="p-0012" num="0011">According to the above embodiment, the update data files for difference updating to a plurality of versions up to the latest version for each request update section are integrated per request update section to generate a data file for one difference update, which is supplied to the navigation device. Therefore, compared to supplying a plurality of versions of the update data file unchanged, the volume of data and the number of data files to be supplied can be reduced.</p>
<p id="p-0013" num="0012">In addition, the safeguard update section that requires updating to safeguard a road network connection between sections adjacent to the request update section range, and up to the update safeguard version of the update data file, are extracted and supplied to the navigation device. It is thus possible to resolve road network connection discontinuity between adjacent sections around the request update section, which occurs from updating the map database with respect to the request update section, and the road network connection can be safeguarded. At such time, to update the safeguard update section, the update data file, up to the update safeguard version that requires updating to safeguard the road network, is extracted and updated instead of up to the latest version of the update data file. Therefore, the update safeguard version becomes increasingly older than the latest version the farther the section is from the request update section range, and the section range in which the safeguard update sections spread out in a chain manner can thus be narrowed. Consequently, the number of versions of the update data file for the safeguard update sections and the safeguard update section ranges can be kept to the minimum required. In addition, the volume of update data for network safeguarding can be suppressed.</p>
<p id="p-0014" num="0013">The update data files for difference updating to a plurality of versions up to the update safeguard version for each safeguard update section are integrated per safeguard update section to generate a data file for one difference update, which is supplied to the navigation device. Therefore, compared to supplying a plurality of versions of the update data file unchanged, the volume of data and the number of data files to be supplied can be reduced.</p>
<p id="p-0015" num="0014">Thus, up to the latest version of update data for the request update section requested by the navigation device is supplied; and for around the request update section, the minimum section range and version of update data that enables safeguarding of the road network is supplied, which improves the convenience and reliability of the navigation device. Further, the number of data files and volume of data supplied to the navigation device can be reduced. Therefore, the distribution time and communication cost when distributing data from the map update data supply device to the navigation device can be reduced, and the update time of the map database in the navigation device can also be reduced, thus improving the convenience of map updating in the navigation device.</p>
<p id="p-0016" num="0015">In at least one embodiment, each section of the map database is generated from a set of a plurality of data units respectively associated with identification codes. In addition, the update data file in at least one embodiment includes update data that makes any one of an addition, a modification, and a deletion per data unit. The integrated data generation unit, for all versions of the update data file extracted per section, in some embodiments integrates a plurality of versions of update data in which a data unit that did not exist before an update is added and ultimately deleted, such that an update of that particular data unit is not performed; integrates a plurality of versions of update data in which the content of a data unit that existed before an update is modified and ultimately deleted as one piece of data for performing an update that deletes that particular data unit; and integrates a plurality of versions of update data in which a data unit that did not exist before an update is added and modified as one piece of data for performing an update that adds that particular data unit.</p>
<p id="p-0017" num="0016">According to some embodiments, consideration is given to the significance of an update history that spans a plurality of versions of update data for performing additions, modifications, and deletions with respect to each data unit associated with an identification code. Since update data is integrated as one piece of any one of addition, modification and deletion update data, the volume of data and quantity of update data for each data unit can be reduced.</p>
<p id="p-0018" num="0017">At least one embodiment further includes a management database that manages a current version of each section in the map database for each of a plurality of navigation devices. In such an embodiment, the request update data extraction unit extracts for each request update section all versions of the update data file that are newer than the current version managed by the management database, up to the latest version stored in the update map database; and the safeguard update data extraction unit extracts for each safeguard update section all versions of the update data file that are newer than the current version, up to the update safeguard version.</p>
<p id="p-0019" num="0018">According to some embodiments, the current version per section of the update data file supplied to each of a plurality of navigation devices is managed by the management database. Therefore, all required versions newer than the current version can be appropriately extracted for each request update section and safeguard update section. The map update data supply device is thus able to suppress the duplication and extraction of versions already supplied to each navigation device. Therefore, the volume of data and number of update data files to be supplied depending on the navigation device can be minimized. Therefore, the distribution time and communication cost when distributing data from the map update data supply device to each navigation device can be reduced, and the update time of the map database in each navigation device can also be reduced.</p>
<p id="p-0020" num="0019">In at least one embodiment, each section of the map database is generated from a set of a plurality of data units respectively associated with identification codes, and the update data file has per data unit an update yes/no flag for every data item included in the data unit.</p>
<p id="p-0021" num="0020">According to some embodiment, the navigation device can use the update yes/no flag to recognize a data item that does not need updating. Therefore, the map database is not updated with respect to data items that do not need updating, and the update time of the map database in the navigation device can be reduced.</p>
<p id="p-0022" num="0021">In at least one embodiment, the update data file has post-update data for only a data item for which the update yes/no flag indicates there is an update.</p>
<p id="p-0023" num="0022">According to some embodiments, the update data file need only have post-update data for a data item that requires updating based on the update yes/no flag. Therefore, data for a data item that does not require updating can be excluded from a data unit to be updated, and the volume of data in each data unit can be reduced. Therefore, the distribution time when distributing data from the map update data supply device to each navigation device can be reduced, and the update time of the map database in each navigation device and communication cost can also be reduced.</p>
<p id="p-0024" num="0023">In at least one embodiment, each section of the map database is generated from a set of a plurality of data units respectively associated with identification codes, and as the data unit includes road data that corresponds to roads that connect intersection points. Update data that adds the road data preferably includes attribute data that is associated with a new identification code corresponding to that particular road data, with the attribute data further including data for a start point intersection and an end point intersection. In addition, in some embodiments, update data that modifies the road data includes post-update attribute data that is associated with the identification code corresponding to that particular road data, with the attribute data not including data for the start point intersection and the end point intersection.</p>
<p id="p-0025" num="0024">According to at least one embodiment, the update data includes data for a start point intersection and an end point intersection when adding road data, but does not include data for a start point intersection and an end point intersection when modifying road data. It is thus possible to reduce the volume of data depending on whether the form of updating is adding or modifying road data. Therefore, the distribution time and communication cost when distributing data from the map update data supply device to each navigation device can be reduced, and the update time of the map database in each navigation device can also be reduced.</p>
<p id="p-0026" num="0025">In at least one embodiment, a safeguard version table is further provided that stores, as a safeguard version and associated with a section group that is a combination of a section and a section adjacent thereto in the update map database, a version of the update data file for a section when safeguarding of a road network connection between the sections that constitute the section group is desired; and the safeguard update data extraction unit extracts the safeguard update section based on the safeguard version table, the request update section and the latest version of the request update section, extracts the update safeguard version for each safeguard update section, and extracts up to the update safeguard version of the update data file.</p>
<p id="p-0027" num="0026">According to at least the above embodiment, the safeguard version table used stores the safeguard version information as associated with the section group. Therefore, in some embodiments, processing that searches the safeguard version table is used to extract the safeguard update section and the update safeguard version. Thus, the computation load of the update data supply device can be reduced, and a shorter update data supply time and a lower cost update data supply device can also be achieved.</p>
<p id="p-0028" num="0027">A map update data supply program, according to some embodiments, supplies data for updating a map database to a navigation device that has the map database, with the map database including at least road network information and divided into a plurality of sections. In at least one embodiment, the map update data supply program executes in a computer the steps of: using an update map database that manages per section versions of an update data file for difference updating the map database, and stores per section versions of the update data file; extracting, based on an update request from the navigation device, a request update section that is a section subjected to a difference update, and extracting for each request update section up to the latest version of the update data file to be supplied to the navigation device; extracting, if all the request update sections are updated up to the latest version, a safeguard update section that is a section requiring an update to safeguard a road network connection between adjacent sections, and extracting for each safeguard update section the update data file up to an update safeguard version, which is a version requiring an update to safeguard the road network connection; integrating per request update section up to the latest version of all the update data files for each request update section extracted at the request update data extraction step and generating a request update integrated data file that serves as a data file for one difference update, and integrating per safeguard update section up to the update safeguard version of the update data file for each safeguard update section extracted at the safeguard update data extraction step and generating a safeguard update integrated data file that serves as a data file for one difference update; and supplying to the navigation device the request update integrated data file and the safeguard update integrated data file generated at the integrated data extraction step.</p>
<p id="p-0029" num="0028">According to at least the above embodiment, a plurality of versions up to the latest version of the update data file for the request update section is integrated per request update section to generate a data file for one difference update, which is supplied to the navigation device. Therefore, the volume of data and the number of data files to be supplied can be reduced.</p>
<p id="p-0030" num="0029">In some embodiments, the safeguard update section and up to the update safeguard version of the update data file are also extracted and supplied. It is thus possible to resolve road network connection discontinuity between adjacent sections around the request update section, and the road network connection can be safeguarded. To update the safeguard update section, an update data file up to an update safeguard version that is at least older than the latest version is extracted and supplied. Therefore, the section range in which the safeguard update sections spread out in a chain manner can be narrowed, and the safeguard update section ranges and the number of update data files for the safeguard update section can be kept to the minimum required.</p>
<p id="p-0031" num="0030">In addition, a plurality of versions, up to the update safeguard version of the update data file for the safeguard update section, is integrated per safeguard update section to generate a data file for one difference update, which is supplied to the navigation device. Therefore, the volume of data and the number of data files to be supplied can be reduced.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of a map update data supply device according to at least one embodiment of the disclosure;</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram of a navigation device according to an embodiment of the disclosure herein;</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 3</figref> is an explanatory drawing for explaining the constitution of update map data;</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 4</figref> is a drawing that shows an example of a version table;</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 5</figref> is a drawing depicting map data included in the navigation device;</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 6</figref> is a drawing that shows an example of a data format of update data;</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 7</figref> is a drawing that shows an example of a management data table;</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 8</figref> depicts a determination method of a safeguard version;</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIGS. 9A</figref>, <b>9</b>B, and <b>9</b>C depict an extraction method of the safeguard update section and the update safeguard version;</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 10</figref> depicts an extraction method of the safeguard update section and the update safeguard version;</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 11</figref> depicts the generation method of an integrated data file;</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 12</figref> depicts the generation method of the integrated data file;</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIGS. 13A and 13B</figref> depict an operation and effect of an embodiment of the disclosure herein;</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 14</figref> depicts map data included in the navigation device;</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 15</figref> is a flowchart that shows generation and transmission processing of an integrated data file fa performed by the map update data supply device;</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 16</figref> is a flowchart that shows processing performed by a request update data extraction unit;</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 17</figref> is a flowchart that shows processing performed by a safeguard update data extraction unit;</p>
<p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. 18</figref> is a flowchart that shows processing performed by an integrated data generation unit;</p>
<p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. 19</figref> is a flowchart that shows processing performed by the integrated data generation unit;</p>
<p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. 20</figref> is a flowchart that shows processing performed by a database update unit;</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 21</figref> is a flowchart that shows processing performed by a version table update unit;</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 22</figref> is a flowchart that shows processing performed by a management database update unit; and</p>
<p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. 23</figref> is a flowchart that shows operation processing for map updating in the navigation device.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF THE EMBODIMENTS</heading>
<p id="p-0055" num="0054">Embodiments are described on the basis of the drawings. <figref idref="DRAWINGS">FIG. 1</figref> is a block diagram that schematically shows the constitution of a map update data supply device <b>1</b> according to an embodiment. <figref idref="DRAWINGS">FIG. 2</figref> is a block diagram that schematically shows the constitution of a navigation device <b>2</b> according to the embodiment. The map update data supply device <b>1</b> and the navigation device <b>2</b> include communication devices <b>6</b>, <b>46</b>, respectively, and are connected in a manner that allows the transmission and reception of data through various types of communication networks. The map update data supply device <b>1</b> and the navigation device <b>2</b> configure a map data update system overall. The map update data supply device <b>1</b> supplies to the navigation device <b>2</b> an integrated data file fa for difference updating a map database DB<b>3</b>. The navigation device <b>2</b> that received the integrated data file fa updates the map database DB<b>3</b> on the basis of the integrated data file fa. The features of the map update data supply device <b>1</b> and the navigation device <b>2</b> according to at least one embodiment will be explained in detail below.</p>
<p id="h-0006" num="0000">1. Navigation Device <b>2</b></p>
<p id="p-0056" num="0055">As shown in <figref idref="DRAWINGS">FIG. 2</figref>, the navigation device <b>2</b> includes the map database DB<b>3</b>, a control device <b>41</b>, an own position detection device <b>42</b>, a display device <b>43</b>, a voice output device <b>44</b>, an input device <b>45</b>, and the communication device <b>46</b>. The control device <b>41</b> includes a navigation computation unit <b>47</b>, an update request generation unit <b>48</b>, a map data update unit <b>49</b>, and a communication control unit <b>50</b>. Here, the navigation computation unit <b>47</b> implements basic guidance functions of the navigation device <b>2</b>. Basic guidance functions of the navigation device <b>2</b> include functions such as displaying a surrounding map of the own position or a specified position, calculating a route from a departure point to a destination, providing route guidance to a destination, performing map matching to correct the own position on a road, and searching for a destination. The control device <b>41</b> of the navigation device <b>2</b> is configured to include computational processing devices such as a CPU, and a storage medium such as a RAM or a ROM for storing software (programs), data, and the like. Each unit <b>47</b> to <b>50</b> included in the control device <b>41</b> has as its core member a computational processing device of the control device <b>41</b>. Each functional portion for performing various types of processing on data that is input can be implemented by one of hardware, software, and both hardware and software. In addition, the map database DB<b>3</b> may be stored in a rewritable storage medium such as a hard disk drive or a flash memory, for example.</p>
<p id="p-0057" num="0056">The navigation device <b>2</b> includes a map data update program that is a program for updating map data. The map data update program has steps that correspond to processes performed by the units included in the navigation device <b>2</b>. The map data update program causes the computational processing devices, for example computers included in the navigation device <b>2</b>, to execute each step, whereby each process is executed. Although it may not be especially noted in the following descriptions, the map data update program has steps that correspond to the processes performed by the navigation device <b>2</b>. The features of the respective parts of the navigation device <b>2</b> will be described below in succession.</p>
<p id="h-0007" num="0000">1-1. Map Database DB<b>3</b></p>
<p id="p-0058" num="0057">The map database DB<b>3</b> stores map data Mb, which is map data for navigation purposes to be referenced by the navigation computation unit <b>27</b> in order to realize guidance functions of the navigation device <b>2</b>.</p>
<p id="p-0059" num="0058">The map data Mb within the map database DB<b>3</b> has as its applicable range of map data an entire area within which navigation is performed (e.g., all of Japan). The map data Mb is divided into m&#xd7;n (m and n being natural numbers) to form sections p. In at least one embodiment, as shown in <figref idref="DRAWINGS">FIG. 3</figref>, the sections p are set as rectangles of an identical size. The map database DB<b>3</b> of the navigation device <b>2</b> has information on various types of objects; for example, the layout and form of roads, intersections, and paint markers and traffic signals provided along roads, as well as structures such as buildings (residential, office, etc.), bridges and tunnels, natural objects such as rivers and coastlines, and administrative districts. An update data file Ma that will be described later is a data file for difference updating the information within the map database DB<b>3</b>. <figref idref="DRAWINGS">FIG. 5</figref> is an explanatory drawing for explaining the content of information included the map database DB<b>3</b>. Note that objects other than roads and intersections are omitted in <figref idref="DRAWINGS">FIG. 5</figref>. As shown in <figref idref="DRAWINGS">FIG. 5</figref>, the map data Mb within the map database DB<b>3</b> has information on objects such as a plurality of roads and the like that exist within each section p and span between a plurality of sections p. It should be noted that, although not shown in the drawing, the map data Mb also has, in some cases, information on various types of objects other than roads, and these objects may span between adjacent sections p. For the purposes of simplifying the description below, information on the especially critical &#x201c;road&#x201d; among the various types of objects mentioned above will be used as an example of the content of map data supplied to the navigation device <b>2</b>.</p>
<p id="p-0060" num="0059">The map database DB<b>3</b> for each section p in the navigation device <b>2</b> is constituted from a set of a plurality of data units DU respectively associated with identification codes. Various types of data are included in the map data Mb, such as road data, intersection data, restriction data, guidance data, connection data, and branch guidance data. The plurality of data units DU associated with identification codes are constituted per data type.</p>
<p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. 14</figref> is an explanatory drawing for explaining the constitution of the map data Mb stored in the map database DB<b>3</b>. As shown in <figref idref="DRAWINGS">FIG. 14</figref>, the map data Mb includes main map data Mb<b>1</b>, route calculation data Mb<b>2</b>, and route guidance data Mb<b>3</b>. Here, the main map data Mb<b>1</b> is divided into a plurality of layers in accordance with the level of detail of stored information on objects such as roads. In some embodiments, the main map data Mb<b>1</b> in order from bottom to top has three layers, a layer <b>1</b>, a layer <b>2</b>, and a layer <b>3</b>. A lower layer here includes more detailed information on objects such as roads. Each layer of the main map data Mb<b>1</b> is divided into a plurality of sections p. In this case, a higher layer is set with sections p that correspond to a wider area. Therefore, one section p of a higher layer includes an area that corresponds to a plurality of sections p of a lower layer. Each layer of the main map data Mb<b>1</b> includes information on a road network that is constituted from a plurality of links (roads) and a plurality of nodes (intersections). The main map data Mb<b>1</b> is referenced by the navigation computation unit <b>27</b> when displaying a surrounding map of the own position or a specified position, performing map matching to correct the own position on the road, and the like.</p>
<p id="p-0062" num="0061">The route calculation data Mb<b>2</b> is associated with the main map data Mb<b>1</b>, and has information on the cost, travel requirements, node correspondence relationships with a higher layer, and the like for each link constituting the road network. The route calculation data Mb<b>2</b> is referenced by the navigation computation unit <b>27</b> when calculating a route from a departure point to a destination. The route guidance data Mb<b>3</b> is associated with the main map data Mb<b>1</b>, and has information on images, speech, and the like required when providing route guidance from a departure point to a destination. Accordingly, the route guidance data Mb<b>3</b> is referenced by the navigation computation unit <b>27</b> when providing route guidance to a destination.</p>
<p id="p-0063" num="0062">As described above, in the main map data Mb<b>1</b> of the map data Mb, the size of the real-world area corresponding to one section p differs depending on the layer. In the present example, the size of the real-world area included in each section p of the layer <b>1</b> in the main map data Mb<b>1</b> corresponds to the size of the area of each section p in the update data file Ma. Therefore, the integrated data file fa supplied by the map update data supply device <b>1</b> is a data file in units of sections that correspond to the section p of the layer <b>1</b> in the main map data Mb<b>1</b>. Based on the layer <b>1</b> data in the main map data Mb<b>1</b> after difference updating on the basis of the integrated data file fa, the layers <b>2</b> and <b>3</b> in the main map data Mb<b>1</b> as well as the route calculation data Mb<b>2</b> and the route guidance data Mb<b>3</b> are generated and updated by the map data update unit <b>49</b>.</p>
<p id="h-0008" num="0000">1-2. Own Position Detection Device <b>42</b></p>
<p id="p-0064" num="0063">The own position detection device <b>42</b> detects the current position of the navigation device <b>2</b>. Therefore, although not shown in the drawings, the own position detection device <b>42</b> is configured to include a GPS receiver, a heading sensor, and a distance sensor, for example. Based on information acquired from these, the own position detection device <b>42</b> acquires information on coordinates, a direction of travel, and the like that indicate the current position, and outputs such information to the control device <b>41</b>. In the control device <b>41</b>, based on the map data Mb and own position information detected by the own position detection device <b>42</b>, the navigation computation unit <b>47</b> executes processing to display the own position, perform map matching, and the like.</p>
<p id="h-0009" num="0000">1-3. Display device <b>43</b>, voice output device <b>44</b>, input device <b>45</b>, and communication device <b>46</b></p>
<p id="p-0065" num="0064">The display device <b>43</b> is configured to include a liquid crystal display. The voice output device <b>44</b> is configured to include a speaker and an amplifier. The display device <b>43</b> and the voice output device <b>44</b> are controlled and operated by the navigation computation unit <b>47</b>, and respectively output a display and speech for displaying the own position, calculating a route between two points, providing route guidance, searching for a destination, and the like. The input device <b>45</b> is configured to include a touch panel that is integrated with the display device <b>43</b>, operation switches, and a remote controller. The input device <b>45</b> accepts operational input from a user, and outputs the content of such operational input to the control device <b>41</b>. The communication device <b>46</b> has a configuration that enables communication with and the transmission and reception of data to and from the communication device <b>6</b> of the map update data supply device <b>1</b> through various types of known wired or wireless communication networks.</p>
<p id="h-0010" num="0000">1-4. Control Device <b>41</b></p>
<p id="p-0066" num="0065">As mentioned above, the control device <b>41</b> includes the navigation computation unit <b>47</b>, the update request generation unit <b>48</b>, the map data update unit <b>49</b>, and the communication control unit <b>50</b>. The navigation computation unit <b>47</b>, as described earlier, implements basic guidance functions of the navigation device <b>2</b> such as displaying a surrounding map of the own position or a specified position, calculating a route from a departure point to a destination, providing route guidance to a destination, performing map matching to correct the own position on a road, and searching for a destination. Although not shown in the drawings, in at least some embodiments, the navigation computation unit <b>47</b> has five application programs that serve as navigation operation programs: a display program, a map matching program, a route calculation program, a guidance program, and a search program. The operation processes of the navigation device <b>2</b> performed by these application programs are known, and will therefore not be explained in detail here. Also note that the map data Mb is referenced and used in the application programs.</p>
<p id="p-0067" num="0066">The update request generation unit <b>48</b> generates an update request fb, which is formed of an update request map range <b>51</b> and identification information, to be transmitted to the map update data supply device <b>1</b>. The update request generation unit <b>48</b> determines the update request map range <b>51</b> and generates the update request fb, which is used to request the integrated data file fa for the update request map range <b>51</b> from the map update data supply device <b>1</b>. In some embodiments, the update request map range <b>51</b> includes a map range currently requested and a map range that is highly likely to be requested in the future. It should be noted that the map range may be a section range. For example, the update request map range <b>51</b> may correspond to a map range within a prescribed radial distance from a position registered as a home position, or a map range that includes the surroundings of the current own position detected by the own position detection device <b>42</b>, the surroundings of a destination, the surroundings of a route set to a destination, or the like. When determining the above-described update request map range <b>51</b>, the map range is in some embodiments configured as a minimum required range, e.g., the map range to be updated around the home position is set wide while the map range to be updated around a route to a destination is set narrow.</p>
<p id="p-0068" num="0067">If a request to perform update processing for a map specified by the user of the navigation device <b>2</b> is received, the thus specified map range is set as the update request map range <b>51</b>. In this case, the update request map range <b>51</b> corresponds to an administrative section range or the like, such as one, two, or more prefectures specified by the user. The update request fb is generated as a data file that includes information for specifying the update request map range <b>51</b>, e.g., map coordinate information, central coordinate information and radial distance information, and specified city and metropolitan information. Alternatively, if the map range is a section range, the update request fb is generated as a data file that includes section ID information and the like, which are used in common with the update data file Ma of the map update data supply device <b>1</b>.</p>
<p id="p-0069" num="0068">The identification information includes information required by the map update data supply device <b>1</b> to specify the navigation device <b>2</b> and the content of update data supplied in the past. In at least one embodiment, the identification information includes an identification code such as a serial number of the navigation device <b>2</b>, as well as information on the latest supply date of update data and the like. In the identification information, the navigation device <b>2</b> may also include latest version information of the sections p for which update data was supplied.</p>
<p id="p-0070" num="0069">The map data update unit <b>49</b> difference updates the map data Mb based on the integrated data file fa supplied by the map update data supply device <b>1</b>. As will be described later, in at least one embodiment, the integrated data files fa are files that include map data for difference updating a request update section <b>23</b> that is determined based on the update request map range <b>51</b>, and a safeguard update section <b>24</b> that is a surrounding section range of the request update section <b>23</b>. Accordingly, the map data update unit <b>49</b> updates the map data Mb by difference updating the map data of the section p that corresponds to the request update section <b>23</b> and the safeguard update section <b>24</b> in the layer <b>1</b> of the main map data Mb<b>1</b> of the map data Mb, based on the map data of the request update section <b>23</b> and the safeguard update section <b>24</b> included in the integrated data file fa.</p>
<p id="p-0071" num="0070">The communication control unit <b>50</b> performs an operation control of the communication device <b>46</b>. Specifically, the communication control unit <b>50</b> controls communication between the navigation device <b>2</b> and the map update data supply device <b>1</b> using the communication device <b>46</b>, and causes the communication device <b>46</b> to perform operations to transmit the update request fb to the map update data supply device <b>1</b>, receive the integrated data file fa transmitted from the map update data supply device <b>1</b>, and the like.</p>
<p id="h-0011" num="0000">2. Map Update Data Supply Device <b>1</b></p>
<p id="p-0072" num="0071">As shown in <figref idref="DRAWINGS">FIG. 1</figref>, the map update data supply device <b>1</b> includes an update map database DB<b>1</b>, a management database DB<b>2</b>, a safeguard version table SVT, a control device <b>3</b>, an input device <b>4</b>, a display device <b>5</b>, and the communication device <b>6</b>. The control device <b>3</b> includes a database update unit <b>7</b>, a version table update unit <b>8</b>, a management database update unit <b>9</b>, a request update data extraction unit <b>10</b>, a safeguard update data extraction unit <b>11</b>, an integrated data generation unit <b>12</b>, an integrated data supply unit <b>13</b>, and a communication control unit <b>14</b>. Here, the control device <b>3</b> is configured to include computational processing devices such as a CPU, and a storage medium such as a RAM or a ROM for storing software (programs), data, and the like. Each unit <b>7</b> to <b>14</b> included in the control device <b>3</b> has as its core member a computational processing device of the control device <b>3</b>. Each functional portion for performing various types of processing on data that is input can be implemented by one of hardware, software, and both hardware and software. In addition, in at least some embodiments, the update map database DB<b>1</b>, the management database DB<b>2</b>, and the safeguard version table SVT are stored in a rewritable storage medium such as a hard disk drive or a flash memory, for example.</p>
<p id="p-0073" num="0072">The map update data supply device <b>1</b> includes a map update data supply program that is a program for supplying map update data. The map update data supply program has steps that correspond to processes performed by the units included in the map update data supply device <b>1</b>. The map update data supply program causes the computational processing devices, e.g., computers, included in the map update data supply device <b>1</b> to execute each step, whereby each process is executed. Although it may not be especially noted in the following descriptions, the map update data supply program has steps that correspond to the processes performed by the map update data supply device <b>1</b>. The constitutions of the respective parts of the map update data supply device <b>1</b> will be described below in succession.</p>
<p id="h-0012" num="0000">2-1. Update Map Database DB<b>1</b></p>
<p id="p-0074" num="0073">The update map database DB<b>1</b> manages per section p versions of the update data file Ma for difference updating the map database DB<b>3</b>, and also stores per section p versions of the update data file Ma. In at least one embodiment, a section ID (A<b>1</b>, A<b>2</b>, etc.) is set for each section p, and the versions of the sections p are managed per section ID as shown in <figref idref="DRAWINGS">FIG. 3</figref>. A version upgrade per section p is performed each time new information is input by the input device <b>4</b>, and the update data file Ma for difference updating the section p is newly generated by the database update unit <b>7</b>. The update data files Ma are stored and managed in the update map database DB<b>1</b>, together with the section ID and version information. In at least one embodiment, the oldest update data file Ma for difference updating first created for the initial map database DB<b>3</b> is designated as version <b>1</b> (Ver. <b>1</b>). The version is upgraded to version <b>2</b> (Ver. <b>2</b>), version <b>3</b> (Ver. <b>3</b>) and so forth each time the update data file Ma is generated for a section ID based on new information. In the present embodiment, the latest version of the section p is recorded in a version table VT stored in the update map database DB<b>1</b> to facilitate searching. The version table VT is updated when a new version of the update data file Ma for the section p is generated. In the present example, as shown in <figref idref="DRAWINGS">FIG. 4</figref>, the version table VT is a data table that records the latest version of each section ID. According to the example shown in <figref idref="DRAWINGS">FIG. 4</figref>, the latest version of the sections A<b>1</b> and A<b>2</b> is currently <b>6</b>, the latest version of a section A<b>3</b> is <b>4</b>, and the latest version of a section A<b>4</b> is <b>3</b>. Note that, although at least one embodiment is provided with the version table VT, the update data file Ma stored in the update map database DB<b>1</b> may be searched in order to search for the latest version of the section p instead of providing the version table VT. In addition, the version information may be managed together with information related to the date each version of the update data file Ma was generated.</p>
<p id="p-0075" num="0074">The update data file Ma for the section p, which is a data file for difference updating the map database DB<b>3</b> for the section p, is constituted from an accumulation of update data for difference updating that makes additions, modifications, and deletions per data unit DU. <figref idref="DRAWINGS">FIG. 6</figref> shows a data format example of deletion, addition, and modification update data. Here, <figref idref="DRAWINGS">FIG. 6</figref> shows in particular critical road data among the various types of data included in the map database DB<b>3</b>, which will be described in detail below.</p>
<p id="p-0076" num="0075">The deletion update data has identification code data that specifies the identification code of the data unit DU to be deleted. The identification code is a road ID in the road data. In the present example, the data size of the identification code is 4 bytes. Supplying the deletion update data having specific identification code data to the navigation device <b>2</b> results in the navigation device <b>2</b> deleting from the map database DB<b>3</b> the data unit DU of the specific identification code.</p>
<p id="p-0077" num="0076">The addition update data includes all data required to form one data unit DU in the map database DB<b>3</b>. In at least one embodiment, the addition update data is constituted from an identification code and attribute data. Here, the attribute data is data related to a subject matter specified by the identification code. The attribute data in the addition update data is constituted from all data related to the subject matter specified by the identification code. In the road data example shown in <figref idref="DRAWINGS">FIG. 6</figref>, in addition to the road ID that is the identification code of the data unit DU, the addition update data includes as data items of the attribute data: a road type; a start point intersection ID; an end point intersection ID; various flags; a yes/no flag for an extension data flag; a road length; a classification, width, etc.; and a one-way flag. The data items of the attribute data in the present example respectively have data sizes of 1, 4, 4, 2, 2, 2, 4, and 1 byte, as shown in <figref idref="DRAWINGS">FIG. 6</figref>. The overall data size of the addition update data is 24 bytes, which is the sum of the 4 bytes of the identification code and the 20 bytes of the attribute data.</p>
<p id="p-0078" num="0077">Here, the data items of the attribute data in the road data are described. The road type refers to data that specifies a road classification such as expressway or local road, and in the present example, the road type is expressed in 2 bits. Given that the road data is data on roads that connect intersections, the start point intersection ID and the end point intersection ID refer to data for specifying intersections that are respectively the start point and end point of a road. Here, the term intersection is used in the broadest sense as a point that segmentalizes a road and has certain specific coordinates; however, the intersection is not necessarily a point at which two or more roads cross. It should be noted that the attribute data of each intersection ID is stored in intersection data that is separate from the road data, and the intersection data is constituted from a data unit DU associated with the intersection ID, which is also the identification code. If an intersection addition is to be made in accordance with the addition update data of the road data, addition update data for the intersection data is generated. Next, the various flags are flag data that expresses whether any of various types of roads applies, e.g., whether a road is a motor road, a toll road, a bridge, or a tunnel, which are allocated per bit of the various flags data. The extension data yes/no flag is flag data that expresses whether various types of extension data are present or absent, e.g., the presence/absence of VICS data, the presence/absence of a railroad crossing, the presence/absence of seasonal restriction data, and the presence/absence of road numbers, which are allocated per bit of the extension data yes/no flag data. The various types of extension data are stored separate from the road data, and include restriction data, guidance data, and the like. The road length is data on the length of a road from the start point intersection to the end point intersection. The classification, width, etc. are data that expresses the detailed classification, width, and the like of a road. The one-way flag is flag data that expresses whether only one-way traffic is allowed, the type of one-way traffic, and the like. Note that the flag is binary data that expresses 0 or 1, or the like. In the present example, the flag is binary data expressed by a 0 or 1 in the bit of each column when the data is expressed in binary notation. One-byte flag data has eight bits and represents a maximum of eight flags. In addition, the data items of the attribute data may be set according to data type, such as road data, intersection data, restriction data, and guidance data, and thus set as various types of common data items.</p>
<p id="p-0079" num="0078">The modification update data has identification code data that specifies the data unit DU of the identification code to be modified, and attribute data that is used to modify various types of data within the data unit DU. In at least one embodiment, as attribute data, the modification update data has an update yes/no flag that expresses whether there is an update per data item of the attribute data subject to modification, and post-update data for each data item of the attribute data subject to modification. In the road data example shown in <figref idref="DRAWINGS">FIG. 6</figref>, in addition to the road ID that is the identification code of the data unit DU, the modification update data includes: an update yes/no flag; various flags serving as data of the data items of the attribute data subject to modification; a yes/no flag for an extension data flag; a road length; a classification, width, etc.; and a one-way flag. According to the present example, the update yes/no flag is flag data that expresses whether there is an update of each data item per bit, and has a data size of one byte. The allocation of data items per bit are as follows. Various flags are bit <b>2</b>; the yes/no flag for the extension data flag is bit <b>3</b>; the road length is bit <b>4</b>; the classification, width, etc. is bit <b>5</b>; and the one-way flag is bit <b>6</b>. Note that, in the present example, the road type data is allocated by effectively utilizing bits <b>0</b> and <b>1</b>, which are extra bits not allocated with flag data out of the one byte used for the update yes/no flag.</p>
<p id="p-0080" num="0079">Update data that modifies the road data includes the data items of the post-update attribute data. This does not include the data items of the start point intersection ID and the end point intersection ID associated with the road ID, which is the identification code corresponding to that particular road data. Therefore, compared to the addition update data, the volume of modification update data can be reduced because the modification update data excludes the data items of the start point intersection ID and the end point intersection ID from the attribute data. As described above, the road data is data on roads that connect intersections of two specific IDs, so an update that modifies the road data does not include modifications of the start point intersection ID and the end point intersection ID. In order to modify the start point intersection ID and the end point intersection ID of the road data, an update to delete the road data is first performed, and then an update to add road data with the modified start point intersection ID and end point intersection ID is performed. When performing an update to add road data that modifies the start point intersection ID or the end point intersection ID, the road ID that is the identification code changes.</p>
<p id="p-0081" num="0080">In at least one embodiment, the modification update data of the road data, regardless of whether there is an update of each data item of the attribute data, includes the data of all data items, which are all data items with a potential to be updated, except for the start point intersection ID and the end point intersection ID. Thus, as shown in <figref idref="DRAWINGS">FIG. 6</figref>, the overall data size of the modification update data is 16 bytes, which is the sum of the 4 bytes of the identification code and the 12 bytes of the attribute data formed of the data items and the update yes/no flag. The volume of modification update data is less than 24 bytes, which is the data size of the addition update data.</p>
<p id="p-0082" num="0081">In at least one embodiment, navigation device <b>2</b> is configured so as to update the map database DB<b>3</b> with regard to only the data items for which there is an update, based on the supplied update yes/no flag data. Accordingly, the update time of the map database in the navigation device can be decreased.</p>
<p id="p-0083" num="0082">In an embodiment, a configuration is used in which the modification update data includes the data of all data items except for the start point intersection ID and the end point intersection ID, regardless of whether there is an update of each data item of the attribute data. However, a configuration may be used in which the modification update data includes the post-update data of only the data items for which the update yes/no flag indicates there is an update. With such a configuration, the data size of the modification update data can be further reduced. Moreover, in this case, the modification update data may be constituted without the update yes/no flag.</p>
<p id="h-0013" num="0000">2-2. Management Database DB<b>2</b></p>
<p id="p-0084" num="0083">The management database DB<b>2</b> manages the current versions of the sections p in the map database DB<b>3</b> for each of a plurality of navigation devices <b>2</b>. When the update data file Ma is supplied to the navigation device <b>2</b>, the management database DB<b>2</b> is updated by the management database update unit <b>9</b> using the supplied version of the section p. In an embodiment, the management database DB<b>2</b> stores a management data table DT that is generated per navigation device <b>2</b>. As shown in <figref idref="DRAWINGS">FIG. 7</figref>, the management data table DT records a current version per section ID, and records an identification code such as the serial number of the navigation device <b>2</b> together with identification information such as the latest supply date. It should be noted that the current version is the newest version among the versions of the update data file for the section p supplied in the past.</p>
<p id="p-0085" num="0084">Thus, the map update data supply device <b>1</b> uses the management database DB<b>2</b> to self-manage the versions of the update data file Ma that are supplied to the navigation device <b>2</b>. Therefore, the map update data supply device <b>1</b> can reduce the communication time to acquire the current version information of the map database DB<b>3</b> for each section p from each navigation device <b>2</b> through communication, and decrease the data update time of the navigation device <b>2</b>.</p>
<p id="h-0014" num="0000">2-3. Safeguard Version Table SVT</p>
<p id="p-0086" num="0085">The safeguard version table SVT stores, as a safeguard version va and associated with a section group g that is a combination of the section p and a section p adjacent thereto of the update map database DB<b>1</b>, a version of the update data file Ma for the section p when it is necessary to safeguard a road network connection between the sections p that constitute the section group g.</p>
<p id="p-0087" num="0086">In other words, when the update data file Ma is generated for a road that pertains to a road network connection between adjacent sections p, the versions of the update data file Ma for those particular sections p at such time are cumulatively recorded in the safeguard version table SVT as the safeguard versions va of the sections p in the section group g formed of the two adjacent sections p.</p>
<p id="p-0088" num="0087">The safeguard version table SVT is thus provided as storing the safeguard version va associated with the section group g. Therefore, using a simple process to search the safeguard version table SVT, it is possible to determine the necessity of a network safeguard for the section group g and extract an update safeguard version uva. In addition, the computation load of the update data supply device <b>1</b> can be reduced. The safeguard version table SVT also cumulatively records the safeguard version va up to the present for the section group g. Therefore, as described later, the safeguard version table SVT is used, in some embodiments, to extract a safeguard update section <b>24</b> back to a past safeguard version va. It is thus possible to narrow a section range in which the safeguard update sections <b>24</b> spread out in a chain manner, and execute extraction using a simple process.</p>
<p id="p-0089" num="0088">Referring to <figref idref="DRAWINGS">FIG. 8</figref>, one embodiment of a method of updating the safeguard version table SVT will be described. Note that the series of processes pertaining to <figref idref="DRAWINGS">FIG. 8</figref> are executed by the version table update unit <b>8</b> and the database update unit <b>7</b>. In the section group g that has a section Al and a section A<b>2</b>, as shown in <figref idref="DRAWINGS">FIG. 8</figref>, there is a road r<b>1</b> that spans between the two adjacent sections p in the initial map database DB<b>3</b>. In the update data file Ma with a creation date of Jun. 12, 2000, in the section A<b>1</b>, a road r<b>2</b> that does not span between two adjacent sections p is newly added. Version <b>1</b> of the update data file Ma for performing a difference update that adds the road data of the road r<b>2</b> is thus generated. Meanwhile, with the same creation date of Jun. 12, 2000, in the section A<b>2</b>, a road r<b>3</b> that does not span between two adjacent sections p is newly added, and version <b>1</b> of the update data file Ma for performing a difference update that adds the road data of the road r<b>3</b> is thus generated. Here, for ease of understanding, <figref idref="DRAWINGS">FIG. 8</figref> shows the map data of the section A<b>1</b> and the section A<b>2</b> concerning the same creation date arranged side by side. Next, with a creation date of Jun. 30, 2000, in the section A<b>2</b>, a road r<b>4</b> that does not span between two sections p is newly added. The update data file Ma that is upgraded to version <b>2</b>, which adds the road data of the road r<b>4</b>, is generated accordingly.</p>
<p id="p-0090" num="0089">Note that since none of the roads r<b>2</b>, r<b>3</b>, and r<b>4</b> added on Jun. 12, 2000 and Jun. 30, 2000 are roads that span between adjacent sections p, there is no need for a network safeguard. Accordingly, the generated update data file Ma for the section p that adds no road data of a road spanning between adjacent sections p is an update data file Ma that does not require a network safeguard. Consequently, the version of such an update data file Ma is not used as the safeguard version va.</p>
<p id="p-0091" num="0090">Next, with a creation date of Jul. 15, 2000, a road r<b>5</b> that spans between the section Al and the section A<b>2</b>, i.e., two adjacent sections p, is newly added. Thus, the update data file Ma that is upgraded to version <b>2</b>, which adds the road data of the road r<b>5</b>, and the update data file Ma that is upgraded to version <b>3</b>, which adds the road data of the road r<b>5</b>, are generated for the section Al and the section A<b>2</b>, respectively. The added road r<b>5</b> spans between sections p, and is thus a road that pertains to a road network connection between adjacent sections p and requires a network safeguard. In view of the addition of a road that spans between adjacent sections p as described above, the generated update data files Ma for the adjacent sections p pertaining to this road are update data files Ma that require a network safeguard. Consequently, these versions of the update data files Ma are used as the safeguard versions va. The safeguard versions va of the adjacent sections p are additionally recorded in the safeguard version table SVT as the safeguard versions va of the section group g formed of the adjacent sections p. In the example of <figref idref="DRAWINGS">FIG. 8</figref>, with regard to the section group g formed of the sections A<b>1</b> and A<b>2</b>, a safeguard version group (A<b>1</b>: <b>2</b>, A<b>2</b>: <b>3</b>) that sets the safeguard version va of the section A<b>1</b> as <b>2</b> and the safeguard version va of section A<b>2</b> as <b>3</b> is additionally recorded in the safeguard version table SVT.</p>
<p id="p-0092" num="0091">Next, with a creation date of Aug. 15, 2000, in the section A<b>1</b>, a road r<b>6</b> that does not span between two sections p is newly added, and the update data file Ma that is upgraded to version <b>3</b> and adds the road data of the road r<b>6</b> is generated accordingly. With a creation date of Oct. 21, 2000, a road r<b>7</b> that spans between the section A<b>1</b> and the section A<b>2</b>, i.e., two adjacent sections p, is newly added, and a road r<b>8</b> that does not span between two sections p is newly added in the section A<b>2</b>. For the section A<b>1</b>, the update data file Ma that is upgraded to version <b>4</b>, which adds the road data of the road r<b>7</b>, is generated; for the section A<b>2</b>, the update data file Ma that is upgraded to version <b>4</b>, which adds the road data of the road r<b>7</b> and the road r<b>8</b>, is generated. As described above, since an update data file that pertains to a road that spans between adjacent sections p is generated, a network safeguard is necessary. Therefore, using the versions of the update data files Ma for the sections p as the safeguard version, the safeguard version group (A<b>1</b>: <b>4</b>, A<b>2</b>: <b>4</b>) is additionally recorded in the safeguard version table SVT.</p>
<p id="h-0015" num="0000">2-4. Input Device <b>4</b>, Display Device <b>5</b>, and Communication Device <b>6</b></p>
<p id="p-0093" num="0092">Next, returning to <figref idref="DRAWINGS">FIG. 1</figref>, the input device <b>4</b>, the display device <b>5</b>, and the communication device <b>6</b> of the map update data supply device <b>1</b> will be described. The input device <b>4</b> is configured to include various types of devices for input, such as a keyboard, a mouse, a touch panel, and a scanner. Using the input device <b>4</b>, an operator can perform an update input that adds, modifies, or deletes map information to upgrade the versions of the update data file Ma. The display device <b>5</b> is configured to include a liquid crystal display, a CRT display, or the like. When the operator uses the input device <b>4</b> to perform an operation, the display device <b>5</b> can display the status of the update data file Ma, and the content of an update operation thereof The communication device <b>6</b> has a configuration that enables communication with and the transmission and reception of data to and from the communication device <b>46</b> of the navigation device <b>2</b> through various types of known wired or wireless communication networks. The Internet, a wired or wireless public telephone network, a wired or wireless LAN (Local Area Network), or a private network, for example, may be used as a communication network. Alternatively, the exchange of data between the map update data supply device <b>1</b> and the navigation device <b>2</b> is preferably performed through separate communication devices such as a personal computer or a storage medium such as various types of memories and disks.</p>
<p id="h-0016" num="0000">2-5. Control Device <b>3</b></p>
<p id="p-0094" num="0093">As described above, the control device <b>3</b> includes the database update unit <b>7</b>, the version table update unit <b>8</b>, the management database update unit <b>9</b>, the request update data extraction unit <b>10</b>, the safeguard update data extraction unit <b>11</b>, the integrated data generation unit <b>12</b>, and the communication control unit <b>14</b>.</p>
<p id="h-0017" num="0000">2-5-1. Database Update Unit <b>7</b></p>
<p id="p-0095" num="0094">The database update unit <b>7</b> performs processing on the update input that adds, modifies, and deletes map information through the input device <b>4</b>. In addition, the database update unit <b>7</b> performs, based on the update input, processing that generates a new version of the update data file Ma for difference updating, and stores the update data file Ma together with the version information in the update map database DB<b>1</b>. At such time, the generated new version of the update data file Ma is considered to be the latest generated version for the section p, and the latest version corresponding to that particular section p stored in the version VT is updated accordingly.</p>
<p id="h-0018" num="0000">2-5-2. Version Table Update Unit <b>8</b></p>
<p id="p-0096" num="0095">The version table update unit <b>8</b> performs, when the database update unit <b>7</b> generates new versions of the update data files Ma requiring a network safeguard for two adjacent sections p as described above, processing that associates the new versions, as the safeguard versions va of the adjacent sections p, with the section group g formed of the two adjacent sections p, and cumulatively records these in the safeguard version table SVT.</p>
<p id="h-0019" num="0000">2-5-3. Management Database Update Unit <b>9</b></p>
<p id="p-0097" num="0096">The management database update unit <b>9</b> performs, when the information of the update data file Ma is supplied to the navigation device <b>2</b>, processing that updates the management database DB<b>2</b> based on the supplied version information of the section p. In the present example, the management database update unit <b>9</b> updates the management data table DT provided in the navigation device <b>2</b> using the section ID of the supplied update data file Ma, and the version thereof. If the section ID to be updated already exists in the management data table DT, only the version is updated; however, if the section ID to be updated does not already exist in the management data table DT, the section ID and the version are added. When updating the management data table DT, the management database update unit <b>9</b> also updates identification information such as the identification code of the navigation device <b>2</b> and the supply date of the update data, which are included in the update request fb from the navigation device <b>2</b>.</p>
<p id="h-0020" num="0000">2-5-4. Request Update Data Extraction Unit <b>10</b></p>
<p id="p-0098" num="0097">The request update data extraction unit <b>10</b>, based on the update request fb from the navigation device <b>2</b>, performs processing that extracts the request update section <b>23</b> that is a section subjected to a difference update, and extracts for each request update section <b>23</b> up to the latest version of the update data file Ma to be supplied to the navigation device <b>2</b>.</p>
<p id="p-0099" num="0098">First, the request update data extraction unit <b>10</b>, based on the update request fb from the navigation device <b>2</b>, performs processing to extract the request update section <b>23</b> that is a section subject to a difference update. In at least one embodiment, the update request fb includes the update request map range <b>51</b>, which is a map range for which the navigation device <b>2</b> is requesting the supply of the update data file Ma. The update request map range <b>51</b> includes a preset map range or a map range specified by the user of the navigation device <b>2</b>. For example, a map range within a prescribed radial distance from a position registered as the home of the user of the navigation device <b>2</b>, an administrative section range such as one, two, or more prefectures specified by the user, or a map range that includes the surroundings of the current own position detected by the own position detection device <b>42</b>, the surroundings of a destination, the surroundings of a route set to a destination, or the like. Here, the map range may be a section range. In the present example, from the update request map range <b>51</b> included in the update request fb from the navigation device <b>2</b>, the request update data extraction unit <b>10</b> extracts the request update section <b>23</b> that is a section p for which there exists map data such as road data subject to a difference update.</p>
<p id="p-0100" num="0099">The request update data extraction unit <b>10</b> then performs processing to extract up to the latest version of the update data file Ma that is to be supplied to the navigation device <b>2</b> for each request update section <b>23</b>. In some embodiments, the request update data extraction unit <b>10</b> extracts for each request update section <b>23</b> all versions of the update data file Ma that are newer than the current version managed by the management database DB<b>2</b>, up to the latest version stored in the update map database DB<b>1</b>.</p>
<p id="p-0101" num="0100">The map update data supply device <b>1</b> is thus able to suppress the duplication and extraction of versions already supplied to each navigation device <b>2</b>. Therefore, the volume of data and number of update data files Ma to be supplied depending on the navigation device <b>2</b> can be minimized.</p>
<p id="p-0102" num="0101">More specifically, based on an identification code of the navigation device <b>2</b> such as the serial number and identification information such as the latest supply date which are included in the update request fb from the navigation device <b>2</b>, the request update data extraction unit <b>10</b> specifies the management data table DT that matches the navigation device <b>2</b> that originated the update request fb, from the management data tables DT of the plurality of navigation devices <b>2</b> managed in the management database DB<b>2</b>. The request update data extraction unit <b>10</b> then extracts the current version of the update data file Ma already supplied to the navigation device <b>2</b> for each request update section <b>23</b> from the specified management data table DT. Next, the request update data extraction unit <b>10</b> extracts the latest version for each request update section <b>23</b> from the version table VT of the update map database DB<b>1</b>. The request update data extraction unit <b>10</b> subsequently extracts all versions of the difference update data file Ma that are newer than the current version in the navigation device <b>2</b>, up to the latest version stored in the update map database DB<b>1</b>. The extracted versions become update versions of the update data to be supplied.</p>
<p id="p-0103" num="0102">The identification information included in the update request fb from the navigation device <b>2</b> may not match the identification information stored in the management database DB<b>2</b>, and the data of the navigation device <b>2</b> that originated the update request fb may not be stored in the management database DB<b>2</b>. In such case, the map update data supply device <b>1</b> requests that the navigation device <b>2</b> transmit to the map update data supply device <b>1</b> the current version of the update data file Ma for the section p already supplied to the navigation device <b>2</b>. Based on the data received from the navigation device <b>2</b>, the request update data extraction unit <b>10</b> extracts the current version for each request update section <b>23</b> of the navigation device <b>2</b> from the update map database DB<b>1</b>. Note that this data exchange is performed by the communication control unit <b>14</b> and the communication device <b>6</b>.</p>
<p id="p-0104" num="0103">In some embodiments, data having the same format as the management data table DT stored in the management database DB<b>2</b> is transmitted from the navigation device <b>2</b>, and the management database update unit <b>9</b> performs processing to add the received management data table DT of the navigation device <b>2</b> to the management database DB<b>2</b>. Thereafter, the request update data extraction unit <b>10</b> extracts the current version managed in the management database DB<b>2</b> for each request update section <b>23</b> as described above.</p>
<p id="p-0105" num="0104">For a first update of the navigation device <b>2</b> or for a first update of the navigation device <b>2</b> after its data has been initialized, the navigation device <b>2</b> includes information in the update request fb that indicates the update is a first update. Consequently, the request update data extraction unit <b>10</b> does not use the information in the management database DB<b>2</b> and sets the initial version (version <b>0</b>) stored in the update map database DB<b>1</b> for each request update section <b>23</b> as the current version. Note that after the update data is supplied, the management database update unit <b>9</b> performs processing to add the management data table DT of that particular navigation device <b>2</b> to the management database DB<b>2</b>.</p>
<p id="p-0106" num="0105">Next, the request update data extraction unit <b>10</b> extracts for each request update section <b>23</b> all versions of the update data file Ma that are newer than the extracted current version from the update map database DB<b>1</b>, up to the latest version stored in the update map database DB<b>1</b>.</p>
<p id="h-0021" num="0000">2-5-5. Safeguard Update Data Extraction Unit <b>11</b></p>
<p id="p-0107" num="0106">The safeguard update data extraction unit <b>11</b> performs processing that extracts the safeguard update section <b>24</b>, which is a particular section p that requires updating to safeguard a road network connection between adjacent sections p, when all the request update sections <b>23</b> are updated to the latest version; and extracts for each safeguard update section <b>24</b> the update data file Ma up to the update safeguard version uva, which is a particular version that requires updating to safeguard a road network connection.</p>
<p id="p-0108" num="0107">Updating a particular safeguard update section <b>24</b> creates a need to update the section p adjacent to that safeguard update section <b>24</b> for network safeguarding, and causes the safeguard update sections <b>24</b> to spread out in a chain manner. However, in at least one embodiment, for the update of the safeguard update section <b>24</b>, rather than up to the latest version of the update data file Ma, the safeguard update data extraction unit <b>11</b> extracts the update data file Ma up to the update safeguard version uva, which is a version that needs updating to safeguard the road network. Therefore, the update safeguard version uva of each section p becomes increasingly older than the latest version the farther the section p is from the request update section range <b>22</b>, and the section range in which the safeguard update sections <b>24</b> spread out in a chain manner can thus be narrowed.</p>
<p id="p-0109" num="0108">In an embodiment, based on the safeguard version table SVT, the request update section <b>23</b>, and the latest version of the request update section <b>23</b>, the safeguard update data extraction unit <b>11</b> extracts the safeguard update section <b>24</b>, extracts the update safeguard version uva for each safeguard update section <b>24</b>, and extracts up to the update safeguard version uva of the update data file Ma.</p>
<p id="p-0110" num="0109">More specifically, in at least one embodiment, an adjacent section group is the section group g that is formed of: the extraction update section <b>31</b>, which is an update section extracted by the request update data extraction unit <b>10</b> or the safeguard update data extraction unit <b>11</b>; and an adjacent section <b>26</b>, which is the section p that is adjacent to that particular extraction update section <b>31</b>. The safeguard version table SVT is searched for the adjacent section group. The adjacent section group is extracted if there are any safeguard versions va of the extraction update section <b>31</b> of the adjacent section group that are newer than the current version and respectively match versions up to a post-update version (the latest version of the request update section <b>23</b>, or the newest update safeguard version uva of the safeguard update section <b>24</b>). The adjacent section <b>26</b> of the extracted adjacent section group is then extracted as the safeguard update section <b>24</b>. The safeguard version va of the adjacent section <b>26</b> that corresponds as a safeguard version group to the latest safeguard version va among the matching safeguard versions va of the extraction update section <b>31</b> is extracted as the update safeguard version uva of the extracted safeguard update section <b>24</b>.</p>
<p id="p-0111" num="0110">Here, the current version of the section p is extracted from the management data table DT of the navigation device <b>2</b>, and the latest version of the section p is extracted from the version table VT.</p>
<p id="p-0112" num="0111">It should also be noted that the post-update version is the newest version among the versions of the update data file supplied for the section p.</p>
<p id="p-0113" num="0112">Processing is subsequently performed that sets a newly extracted safeguard update section <b>24</b>, and an already extracted safeguard update section <b>24</b> from which a newer update safeguard version uva is extracted as extraction update sections <b>31</b> that are extracted update sections. The newest safeguard version uva of each extraction update section <b>31</b> is set as the post-update version. As described above, an adjacent section group is extracted again, and the safeguard update section <b>24</b> and the update safeguard version uva are extracted. This recursive extraction processing is repeatedly executed until no newer update safeguard versions uva are extracted from the new safeguard update section <b>24</b> and the already extracted safeguard update section <b>24</b>, and the safeguard update sections <b>24</b> spreading out in a chain manner and the update safeguard versions uva thereof are extracted. Processing is next performed that, for the safeguard update section <b>24</b> for which a plurality of update safeguard versions uva is extracted, sets the newest update safeguard version uva as the final update safeguard version uva of that particular safeguard update section <b>24</b>, and extracts the update data file.</p>
<p id="p-0114" num="0113">Note that the processing that extracts the safeguard update section <b>24</b> and the update safeguard version uva thereof is not limited to processing in which the request update section <b>23</b> is set as the extraction update section <b>31</b>, and may be used in more general processing that extracts the safeguard update section <b>24</b> and the update safeguard version uva to safeguard a surrounding network of a prescribed section p to be updated to a prescribed version, which is set as the extraction update section <b>31</b>.</p>
<p id="p-0115" num="0114">According to such processing, the current and older safeguard versions va are already supplied and the network safeguarded. Because there is no need to update for network safeguarding, the update safeguard version uva newer than the current version is extracted. In addition, the update safeguard version uva is extracted based on the latest safeguard version va out of the safeguard versions va respectively matching all versions up to the newest version (post-update version) among the supplied versions. Accordingly, if the request update section <b>23</b> is updated to the latest version, the update safeguard version uva is set as a version that needs updating to safeguard a road network connection between adjacent sections. Because the adjacent section <b>26</b>, for which such an update safeguard version uva exists, is extracted as the safeguard update section <b>24</b>, if the request update section <b>23</b> is updated to the latest version, the safeguard update section <b>24</b> becomes a section that needs updating to safeguard a road network connection between adjacent sections.</p>
<p id="p-0116" num="0115">In some embodiments, first, the request update section <b>23</b> that is an update section extracted by the request update data extraction unit <b>10</b> is set as the extraction update section <b>31</b>. An adjacent section group is extracted that is the section group g formed of the extraction update section <b>31</b> and the section p, which is adjacent to the extraction update section <b>31</b> and not a separate request update section <b>23</b>. Accordingly, an end request update section <b>25</b>, which is at least one request update section <b>23</b> positioned at an end of the request update section range <b>22</b>, is set as the extraction update section <b>31</b>. The adjacent section <b>26</b> is the section p that is not a request update section <b>23</b>, and is adjacent to the end request update section <b>25</b>. The section group g is formed of the extraction update section <b>31</b> and the adjacent section <b>26</b>, and is extracted as an adjacent section group. The safeguard version table SVT is searched for the adjacent section group. The adjacent section <b>26</b> of the adjacent section group is extracted as the safeguard update section <b>24</b> if there are any safeguard versions va of the extraction update section <b>31</b> of the adjacent section group that are newer than the current version and respectively match versions up to the latest version. The safeguard version va of the adjacent section <b>26</b> that corresponds as a safeguard version group to the latest safeguard version va among the matching safeguard versions va of the extraction update section <b>31</b> is extracted as the update safeguard version uva of the extracted safeguard update section <b>24</b>.</p>
<p id="p-0117" num="0116">In the example shown in <figref idref="DRAWINGS">FIG. 9A</figref>, the section A<b>1</b> is set as the end request update section <b>25</b> and the extraction update section <b>31</b> of the request update section <b>23</b>. The section A<b>2</b> is extracted as the adjacent section <b>26</b>. The section group g formed of the section A<b>1</b> and the section A<b>2</b> is extracted as an adjacent section group. Here, as shown in <figref idref="DRAWINGS">FIG. 9B</figref>, the current versions of the sections A<b>1</b>, A<b>2</b>, A<b>3</b>, and A<b>4</b> are <b>1</b>, <b>1</b>, <b>2</b>, and <b>2</b>, respectively, and the latest versions are <b>8</b>, <b>6</b>, <b>6</b>, and <b>5</b>, respectively. The safeguard version table SVT shown in <figref idref="DRAWINGS">FIG. 9C</figref> is searched for the adjacent section group formed of the section A<b>1</b> and the section A<b>2</b>. A determination is made regarding whether there are any safeguard versions va of the section A<b>1</b>, which is the extraction update section <b>31</b> of the adjacent section group, that are newer than the current version <b>1</b> and respectively match versions <b>2</b> to <b>8</b> up to the latest version <b>8</b>. As shown in <figref idref="DRAWINGS">FIG. 9C</figref>, the safeguard versions for the section A<b>1</b> are <b>1</b>, <b>3</b>, <b>5</b>, and <b>7</b>. The versions <b>3</b>, <b>5</b>, and <b>7</b> match. Therefore, the section A<b>2</b> that is the adjacent section <b>26</b> of the adjacent section group is extracted as the safeguard update section <b>24</b>. The safeguard version va of <b>5</b> of the adjacent section <b>26</b> that corresponds as a safeguard version group to the latest safeguard version va of <b>7</b> among the matching safeguard versions va of <b>3</b>, <b>5</b>, and <b>7</b> of the extraction update section <b>31</b>, i.e., section A<b>1</b>, is extracted as the update safeguard version uva of the safeguard update section <b>24</b>. In other words, the section A<b>2</b> is extracted as the safeguard update section <b>24</b>. and the update safeguard version uva of the section A<b>2</b> is <b>5</b>.</p>
<p id="p-0118" num="0117">Updating the safeguard update section <b>24</b> extracted from the adjacent section <b>26</b> up to the update safeguard version uva creates a need to also update the section p adjacent to this safeguard update section <b>24</b> for network safeguarding, and causes the safeguard update sections <b>24</b> to spread out in a chain manner. The safeguard update data extraction unit <b>11</b> extracts the safeguard update sections <b>24</b> spreading out in a chain manner, and also extracts the update safeguard version uva of each safeguard update section <b>24</b>.</p>
<p id="p-0119" num="0118">For this reason, next, the extracted safeguard update section <b>24</b> is set as the extraction update section <b>31</b>, which is an extracted update section. The section p adjacent to that particular update section <b>31</b> is extracted as the adjacent section <b>26</b>. The section g formed of the extraction update section <b>31</b> and the adjacent section <b>26</b> is extracted as an adjacent section group. The safeguard version table SVT is searched for the adjacent section group. The adjacent section <b>26</b> of the adjacent section group is extracted as the safeguard update section <b>24</b> if there are any safeguard versions va of the extraction update section <b>31</b> that are newer than the current version and respectively match versions up to the update safeguard version uva. The safeguard version va of the adjacent section <b>26</b> that corresponds as a safeguard version group to the latest safeguard version va among the matching safeguard versions va of the extraction update section <b>31</b> is extracted as the update safeguard version uva of the extracted safeguard update section <b>24</b>.</p>
<p id="p-0120" num="0119">Processing is performed that sets a newly extracted safeguard update section <b>24</b>, and an already extracted safeguard update section <b>24</b> from which a newer update safeguard version uva is extracted as extraction update sections <b>31</b> that are extracted update sections. Adjacent section groups thereof are then extracted, and the safeguard update section <b>24</b> and the update safeguard version uva are similarly extracted. Such processing is repeated until no newer update safeguard versions uva are extracted from the new safeguard update section <b>24</b> and the already extracted safeguard update section <b>24</b>, and the safeguard update sections <b>24</b> spreading out in a chain manner and the update safeguard versions uva thereof are extracted.</p>
<p id="p-0121" num="0120">Thus, using as a basis the safeguard version va that matches versions up to the update safeguard version uva of an extraction safeguard update section, i.e., the extracted safeguard update section <b>24</b>, the safeguard update data extraction unit <b>11</b> extracts the update safeguard version uva of the safeguard update section <b>24</b> adjacent to the extraction safeguard update section and extracted in a chain manner. Therefore, the safeguard version va used as a basis becomes at least older than the update safeguard version uva of the extraction safeguard update section. Consequently, the update safeguard version uva extracted in a chain manner becomes increasingly older than the latest version the farther the section p is from the request update section range <b>22</b>, and the section range in which the safeguard update sections <b>24</b> spread out in a chain manner can thus be narrowed.</p>
<p id="p-0122" num="0121">Alternatively, using as a basis the safeguard version va that matches a version newer than the current version, the safeguard update data extraction unit <b>11</b> extracts the update safeguard version uva of the safeguard update section <b>24</b> adjacent to the extraction safeguard update section and extracted in a chain manner. Therefore, the safeguard version va used as a basis becomes at least newer than the current version of the extraction safeguard update section. Consequently, the update safeguard version uva extracted in a chain manner is limited to a version newer than the current version, and the section range in which the safeguard update sections <b>24</b> spread out in a chain manner can thus be narrowed.</p>
<p id="p-0123" num="0122">In the example shown in <figref idref="DRAWINGS">FIG. 9A</figref>, the section A<b>2</b> that is the extracted safeguard update section <b>24</b> is set as the extraction update section <b>31</b>. The section A<b>3</b> is extracted as the adjacent section <b>26</b>. The section group g formed of the section A<b>2</b> and the section A<b>3</b> is extracted as an adjacent section group. The safeguard version table SVT shown in <figref idref="DRAWINGS">FIG. 9C</figref> is searched for the adjacent section group formed of the section A<b>2</b> and the section A<b>3</b>. A determination is made regarding whether there are any safeguard versions va of the section A<b>2</b>, which is the extraction update section <b>31</b> of the adjacent section group, that are newer than the current version <b>1</b> and respectively match versions <b>2</b> to <b>5</b> up to <b>5</b>, which is the update safeguard version uva of the section A<b>2</b>. As shown in <figref idref="DRAWINGS">FIG. 9C</figref>, the safeguard versions for the section A<b>2</b> are <b>1</b>, <b>4</b>, and <b>6</b>. The version <b>4</b> matches. Therefore, the section A<b>3</b> that is the adjacent section <b>26</b> of the adjacent section group is extracted as the safeguard update section <b>24</b>. Given the matching safeguard version va of <b>4</b>, the safeguard version va of <b>3</b> of the adjacent section <b>26</b> that corresponds as a safeguard version group to the latest safeguard version va of <b>4</b> of the extraction update section <b>31</b> is extracted as the update safeguard version uva of the safeguard update section <b>24</b>. In other words, the section A<b>3</b> is extracted as the safeguard update section <b>24</b>, and the update safeguard version uva of the section A<b>3</b> is <b>3</b>.</p>
<p id="p-0124" num="0123">Next, the section A<b>3</b>, which is the extracted safeguard update section <b>24</b>, is set as the extraction update section <b>31</b>. The section A<b>4</b> is extracted as the adjacent section <b>26</b>. The section g formed of the section A<b>3</b> and the section A<b>4</b> is extracted as an adjacent section group, and similarly, the safeguard update section <b>24</b> and the update safeguard version uva are extracted. In other words, the safeguard version table SVT shown in <figref idref="DRAWINGS">FIG. 9C</figref> is searched for the adjacent section group formed of the section A<b>3</b> and the section A<b>4</b>. A determination is made regarding whether there are any safeguard versions va of the section A<b>3</b>, which is the extraction update section <b>31</b> of the adjacent section group, that are newer than the current version <b>2</b> and respectively match versions up to <b>3</b>, which is the update safeguard version uva of the section A<b>3</b>. As shown in <figref idref="DRAWINGS">FIG. 9C</figref>, the safeguard versions for the section A<b>3</b> are <b>2</b>, <b>4</b>, and <b>5</b>. No version matches, and therefore, the safeguard update section <b>24</b> is not extracted. In the example shown in <figref idref="DRAWINGS">FIG. 9A</figref>, there are no other adjacent section groups, so the processing to extract the safeguard update section <b>24</b> and the update safeguard version uva is ended.</p>
<p id="p-0125" num="0124">Accordingly, in the example shown in <figref idref="DRAWINGS">FIGS. 9A to 9C</figref>, the sections A<b>2</b> and A<b>3</b> are extracted as safeguard update sections <b>24</b>, and the update safeguard versions uva of <b>5</b> and <b>3</b> are respectively extracted. As shown in <figref idref="DRAWINGS">FIGS. 9A to 9C</figref> and <figref idref="DRAWINGS">FIG. 10</figref>, the update safeguard version uva of each section p becomes increasingly older than the latest version the farther the section p is from the request update section range <b>22</b>. In addition, the update safeguard version uva of each section p is limited to a version newer than the current version, so the section range in which the safeguard update sections <b>24</b> spread out in a chain manner can be narrowed.</p>
<p id="p-0126" num="0125">Meanwhile, in the case where the adjacent section <b>26</b> of the adjacent section group is extracted as the safeguard update section <b>24</b> if there are any safeguard versions va that match all versions up to the latest version, rather than up to the post-update version, the section A<b>4</b> in the example shown in <figref idref="DRAWINGS">FIGS. 9A to 9C</figref> and <figref idref="DRAWINGS">FIG. 10</figref> is also set as the safeguard update section <b>24</b>, and the section range in which the safeguard update sections <b>24</b> spread out in a chain manner becomes broader.</p>
<p id="p-0127" num="0126">Further, according to some embodiments, the safeguard update data extraction unit <b>11</b> extracts all versions of the update data file Ma that are newer than the current version up to the update safeguard version uva for each safeguard update section <b>24</b>.</p>
<p id="p-0128" num="0127">The map update data supply device <b>1</b> is thus able to suppress the duplication and extraction of versions already supplied to each navigation device <b>2</b>. Therefore, the volume of data and number of update data files Ma to be supplied depending on the navigation device <b>2</b> can be minimized.</p>
<p id="h-0022" num="0000">2-5-6. Integrated Data Generation Unit <b>12</b></p>
<p id="p-0129" num="0128">The integrated data generation unit <b>12</b> performs processing that integrates per request update section <b>23</b> all versions up to the latest version of the update data file Ma for each request update section <b>23</b> extracted by the request update data extraction unit <b>10</b>, and generates a request update integrated data file <b>33</b> that serves as a data file for one difference update. In addition, the integrated data generation unit <b>12</b> performs processing that integrates per safeguard update section <b>24</b> the versions up to the update safeguard version uva of the update data file Ma for each safeguard update section <b>24</b> extracted by the safeguard update data extraction unit <b>11</b>, and generates a safeguard update integrated data file <b>34</b> that serves as a data file for one difference update.</p>
<p id="p-0130" num="0129">In other words, for each request update section <b>23</b> and safeguard update section <b>24</b>, a plurality of versions of the update data file Ma for difference updating up to the latest version or the update safeguard version uva is integrated per section p, and a data file for one difference update is generated and supplied to the navigation device <b>2</b>. Thus, compared to supplying a plurality of versions of the update data file Ma unchanged, the volume of data and the number of data files to be supplied can be reduced.</p>
<p id="p-0131" num="0130">More specifically, in some embodiments, the integrated data generation unit <b>12</b> targets all versions of the update data file Ma extracted for the section p. For example, the integrated data generation unit <b>12</b> integrates a plurality of versions of update data, wherein a data unit DU that did not exist before an update is added and ultimately deleted, such that an update of that particular data unit DU is not performed (an integration pattern for no integrated data). In addition, a plurality of versions of update data, wherein the content of a data unit DU that existed before an update is modified and ultimately deleted, is integrated as one piece of data for performing an update that deletes that particular data unit DU (an integration pattern for deletion). A plurality of versions of update data, wherein a data unit DU that did not exist before an update is added and has its content modified, is integrated as one piece of data for performing an update that adds that particular data unit DU (an integration pattern for addition). A plurality of versions of update data, wherein a data unit DU that existed before an update is ultimately modified, is integrated as one piece of modification update data (an integration pattern for modification).</p>
<p id="p-0132" num="0131">A specific integration process of update data is described below.</p>
<p id="p-0133" num="0132">In an embodiment, the integrated data generation unit <b>12</b> performs processing that extracts all the update sections, that is, all the request update sections <b>23</b> and safeguard update sections <b>24</b>; and generates per extracted update section the request update integrated data file <b>33</b> and the safeguard update integrated data file <b>34</b>, which are data files for performing one difference update and which integrate all versions of the update data file Ma to be supplied. This integration processing extracts per update section all identification codes that exist for all update versions of the update data file Ma to be supplied, and extracts per extracted identification code all existing update versions of update data. The integrated data generation unit <b>12</b> then performs processing that determines the integration pattern of all update data for each identification code, in consideration of the significance of an update history that spans all update versions and is a history of addition, modification, and deletion update content; and integrates all update data for the identification code as one piece of any one of addition, modification, and deletion update data, or as without update data. For each update section, the integrated data generation unit <b>12</b> generates one difference update data file of the post-integration update data generated for each identification code, which serves as the integrated data file fa for the update section.</p>
<p id="p-0134" num="0133">Next, the specific processes of integration pattern determination processing and integrated data generation processing based on an addition, modification, and deletion update history per identification code will be described.</p>
<p id="p-0135" num="0134">Referring to Cases <b>1</b> to <b>3</b> of <figref idref="DRAWINGS">FIGS. 11 and 12</figref>, among all the update data that exists for each identification code, the first update content that is the update content of the oldest version of update data is an addition; and the last update content that is the update content of the newest version of update data is a deletion. In such case, as described above, the plurality of versions of update data add a data unit DU that did not exist before an update and ultimately delete the data unit DU. Processing is thus performed to integrate the plurality of versions of update data such that the data unit DU of that particular identification code is not updated (the integration pattern for no integrated data). In other words, for that identification code, none of the plurality of versions of update data are added to the integrated data file.</p>
<p id="p-0136" num="0135">Meanwhile, referring to Cases <b>4</b> and <b>5</b> of <figref idref="DRAWINGS">FIG. 12</figref>, the first update content is a modification and the last update content is a deletion for each identification code. In such case, as described above, the plurality of versions of update data modify the content of a data unit DU that existed before an update and ultimately delete the data unit DU. Processing is thus performed that integrates the plurality of versions of update data as one piece of deletion update data for performing an update that deletes that particular data unit DU (an integration pattern for deletion). In some embodiments, processing is performed to generate deletion update data for only that particular identification code.</p>
<p id="p-0137" num="0136">Referring to Cases <b>9</b> and <b>10</b> of <figref idref="DRAWINGS">FIG. 12</figref>, the first update content is an addition and the last update content is a modification for each identification code. In such cases, as described above, the plurality of versions of update data add a data unit DU that did not exist before an update and modify its content. Processing is thus performed that integrates the plurality of versions of update data as one piece of addition update data for performing an update that adds that particular data unit DU (an integration pattern for addition). In some embodiments, processing is performed that subjects the first addition update data, which includes the attribute data of all data items required for constituting one data unit DU, to difference updates using each version of update data in the order of older version first, starting from the second oldest version of update data among the respective update data that exists for each identification code up to the newest version of update data; and generates addition update data that is the integrated update data after such difference updating of the update data. Such difference updating is executed by updating the pre-update data of each data item that pertains to a modification of the update data to the post-update data. In the present example, only a data item for which there is an update is difference updated using the update yes/no flag data included in the modification update data. Using the update yes/no flag shortens the generation time of the integrated update data.</p>
<p id="p-0138" num="0137">In the road data example, regardless of whether there is a modification of each data item, the modification update data includes the data of all data items with a potential to be updated, except for the start point intersection ID and the end point intersection ID. Therefore, the difference updating described above is not performed, and the integrated addition update data is generated using the data of all data items except for the intersection IDs in the last update data. In other words, processing is performed to generate addition update data that is constituted from the identification code; the start point intersection ID and the end point intersection ID included in the first update data that is addition update data; and all data items except for the intersection IDs of the last update data that is modification update data. There is no need to perform a difference update for each data item, so the generation time of the integrated update data can be shortened. Furthermore, in some embodiments, a modification of the road data that changes the start point intersection ID or the end point intersection ID becomes a deletion and addition of the road data with the changed identification code. Therefore, the intersection IDs of all update data for each identification code are not modified and remain uniform. Accordingly, there is no need to search all update data for each identification code and extract the intersection ID, and the start point intersection ID and the end point intersection ID included in the addition update data that is the first update data is used in the integrated update data. Therefore, the generation time of the integrated update data can be shortened.</p>
<p id="p-0139" num="0138">Referring to Case <b>8</b> of <figref idref="DRAWINGS">FIG. 12</figref>, the first update content is a modification and the last update content is a modification for the identification code. In such case, as described above, the plurality of versions of update data ultimately modify a data unit DU that existed before an update. Processing is thus performed that integrates the plurality of versions of update data as one piece of modification update data for performing an update that modifies that particular data unit DU (an integration pattern for modification).</p>
<p id="p-0140" num="0139">In at least one embodiment, processing is performed that subjects the first modification update data to difference updates using each version of update data in the order of older version first, starting from the second oldest version of update data among the respective update data that exists for each identification code up to the newest version of update data; and generates modification update data that is the integrated update data after such difference updating of the update data. Such difference updating is executed by updating the pre-update data of each data item that pertains to a modification of the update data to the post-update data. If no pre-update data exists for a data item subject to a modification, data for the post-modification data item is added and updated.</p>
<p id="p-0141" num="0140">In some embodiments, only a data item for which there is an update is difference updated using the update yes/no flag data included in the modification update data. Using the update yes/no flag shortens the generation time of the integrated update data.</p>
<p id="p-0142" num="0141">In the road data example, as described above, the modification update data, regardless of whether there is a modification of each data item, includes the data of all data items with a potential to be updated, except for the start point intersection ID and the end point intersection ID. Therefore, the difference updating described above is not performed, and the integrated modification update data is generated using the data of all data items except for the intersection IDs in the last update data. With regard to the update yes/no flag, an update yes/no flag that is the product of searching per data item the update yes/no flags of all update data for each identification code and setting data items with at least one update as having an update (ORing (merging) all flags for each data item with respect to having an update) is used as an integrated modification update flag. Note that when there are deletions and additions (when there is update data without an update yes/no flag) in versions between the first and last versions of update data, an update yes/no flag that indicates all data items as having an update is used in the integrated update data. In the case of such additions and deletions as well, as described above, the start point intersection ID and the end point intersection ID are not modified. Therefore, the intersection IDs can be excluded from the integrated update data and the modification update data used.</p>
<p id="p-0143" num="0142">In other words, processing is performed to generate modification update data that is constituted from the identification code; all data items except for the intersection IDs of the last update data that is the modification update data; and the merged update yes/no flag. There is no need to perform a difference update for each data item, so the generation time of the integrated update data can be shortened. In addition, the processing load for flag merging is considerably smaller than that for difference updating the data of each data item.</p>
<p id="p-0144" num="0143">Thus, the integration pattern can be determined by simply determining the first and last update content of all update data for the identification code, which reduces the integration processing computation load. Similar to the road data, the modification update data includes the data of all data items with a potential to be updated. There is thus no need to perform a difference update of all versions of the update data to generate the integrated update data. Accordingly, the last update data can be set unchanged as the data of the integrated update data, thus reducing the integration processing computation load and shortening the update data supply time.</p>
<p id="p-0145" num="0144">The update data stored in the update database DB<b>1</b> that is pre-integration update data is constituted so as to include the data of all data items with a potential to be updated. Conversion processing is performed so that the integrated update data format includes the data of only the data items to be updated instead of all data items. An integrated data file may be constituted from the post-conversion processing update data and supplied to the navigation device <b>2</b>. During such conversion processing, the update yes/no flag can be used to extract the data items to be updated, so the conversion processing computation load can be kept low. With such a configuration, there is no need for difference updating as described above in the integration processing performed within the map update data supply device <b>1</b>. Therefore, the integration processing computation load can be reduced and the update data supply time shortened. Meanwhile, the volume of update data to be supplied can be decreased, and a reduction in the distribution time and communication cost can also be achieved.</p>
<p id="p-0146" num="0145">Next, using the examples shown in <figref idref="DRAWINGS">FIGS. 11 and 12</figref>, a reduction effect on the supply data size that is achieved by integrating the plurality of versions of update data for a particular identification code will be described. Here, especially crucial road data is used as an example in the following description.</p>
<p id="p-0147" num="0146"><figref idref="DRAWINGS">FIG. 11</figref> depicts a reduction in the supply data size that is achieved by integration processing, based on an integration pattern (integration pattern for no integrated data) that integrates a plurality of versions of update data, wherein a data unit DU of a particular identification code that did not exist before an update is added and ultimately deleted, such that an update of that particular data unit DU is not performed. In the example of <figref idref="DRAWINGS">FIG. 11</figref>, the map data Mb in the navigation device <b>2</b> before an update is initial data, and the data unit DU of the road data with an identification code <b>10</b> (ID: <b>10</b>) does not exist. After the map update data supply device <b>1</b> receives the update request fb from the navigation device <b>2</b>, the map update data supply device <b>1</b> extracts versions <b>1</b> to <b>3</b> of addition, modification, and deletion update data for the identification code <b>10</b>, and supplies all extracted update data information to the navigation device <b>2</b>.</p>
<p id="p-0148" num="0147">The respective data sizes of the addition, modification, and deletion update data, which are respective update versions of update data, are 24, 16, and 4 bytes, as mentioned earlier. If integration processing according to some embodiments is not performed, it is necessary to transmit each update version of all the update data. The transmission data has a total data size of 44 bytes, and constitutes update data for three difference updates. However, if in some embodiments integration processing is performed, the update data for the identification code <b>10</b> is ultimately deleted after being added. Therefore, no update is performed. In other words, the plurality of versions of update data is integrated such that no update is performed, i.e., there is no update data. As a consequence, there is no update data to be transmitted and the data size is 0 bytes. Accordingly, integration processing achieves a considerable reduction in the volume of transmission data and the number of times difference update processing is performed in the navigation device <b>2</b>.</p>
<p id="p-0149" num="0148">supply data size that is achieved with each integration pattern will be described.</p>
<p id="p-0150" num="0149"><figref idref="DRAWINGS">FIG. 12</figref> shows, in a case where versions <b>1</b> to <b>4</b> are extracted as update versions, a history of update content for versions <b>1</b> to <b>4</b> of update data for a particular identification code, wherein examples of the update history that correspond to each integration pattern are shown in Cases <b>1</b> to <b>10</b>. Specific update content is set per version as examples of combinations, wherein a circle (O) indicates that an update of that particular update content is performed, and a dash (&#x2014;) indicates that an update of all update content including that particular update content is not performed. Here, the update content of version <b>1</b> is an addition, version <b>2</b> is a modification, version <b>3</b> is a modification, and version <b>4</b> is a deletion.</p>
<p id="p-0151" num="0150">Cases <b>1</b> to <b>3</b> illustrate the integration pattern (integration pattern for no integrated data) shown in <figref idref="DRAWINGS">FIG. 11</figref> that integrates a plurality of versions of update data, wherein a data unit DU for a particular identification code that did not exist before an update is added and ultimately deleted, such that there is no update data. Cases <b>4</b> and <b>5</b> illustrate the integration pattern (integration pattern for deletion) that integrates a plurality of versions of update data, wherein a data unit DU for a particular identification code that existed before an update is modified and ultimately deleted, as one piece of deletion update data. Case <b>8</b> illustrates the integration pattern (integration pattern for modification) that integrates a plurality of versions of update data, wherein a data unit DU for a particular identification code that existed before an update is ultimately modified, as one piece of modification update data. Cases <b>9</b> and <b>10</b> illustrate the integration pattern (integration pattern for addition) shown in <figref idref="DRAWINGS">FIG. 11</figref> that integrates a plurality of versions of update data, wherein a data unit DU for a particular identification code that did not exist before an update is added and ultimately modified, as one piece of addition update data. Note that, for comparison purposes, Cases <b>6</b>, <b>7</b>, and <b>11</b> only have one version of deletion, modification, and addition update data, respectively, and illustrate examples where integration is not necessary. In such cases, there is obviously no reduction effect on the supply data size.</p>
<p id="p-0152" num="0151">The right half of the table in <figref idref="DRAWINGS">FIG. 12</figref> shows the effect achieved based on whether integration processing is performed for each case. The right half of the table shows, in the case of no integration processing, the number of updates (quantity of update data to be supplied), i.e., the number of times processing for required difference updates is performed in the navigation device <b>2</b>, and also shows the total data size of the update data to be supplied. In the case of integration processing, the update content of the one piece of update data to be generated, the number of updates, and the total data size is shown.</p>
<p id="p-0153" num="0152">As shown in <figref idref="DRAWINGS">FIG. 12</figref>, performing integration processing achieves a considerable reduction in the number of updates (quantity of update data) and the total data size over all integration patterns. In addition, as evidenced by Cases <b>2</b>, <b>5</b>, and <b>10</b>, a larger number of versions to be integrated results in a greater reduction effect. Accordingly, integration processing achieves a considerable reduction in the volume of transmission data and the number of times difference update processing is performed in the navigation device <b>2</b>.</p>
<p id="p-0154" num="0153">Next, an outline of an operation and effect of the present embodiment will be given using the examples shown in <figref idref="DRAWINGS">FIGS. 13A and 13B</figref>.</p>
<p id="p-0155" num="0154"><figref idref="DRAWINGS">FIG. 13A</figref> shows extracted update data files Ma before integration processing is performed (in the case of no integration). <figref idref="DRAWINGS">FIG. 13B</figref> shows integrated data files after integration processing is performed in the example of <figref idref="DRAWINGS">FIG. 13A</figref>.</p>
<p id="p-0156" num="0155">In the example of <figref idref="DRAWINGS">FIG. 13A</figref>, for each request update section <b>23</b> of the request update section range <b>22</b> extracted based on the update request fb, all versions up to the latest version of the update data file Ma, which are newer than the already supplied update data file, are extracted as an update data file to be supplied. For each surrounding safeguard update section <b>24</b> of the safeguard update section range to be updated for network safeguarding, all versions up to the update safeguard version uva of the update data file Ma, which are newer than the already supplied update data file, are extracted as an update data file to be supplied. At such time, to update the safeguard update section <b>24</b>, the update data file Ma up to the update safeguard version uva that needs updating to safeguard the road network is extracted and used to update instead of up to the latest version of the update data file. Therefore, the update safeguard version uva becomes increasingly older than the latest version the farther the section is from the request update section range, and the section range in which the safeguard update sections <b>24</b> spread out in a chain manner can thus be narrowed. Consequently, the number of versions of the update data file Ma for the safeguard update sections <b>24</b> and the safeguard update section ranges can be kept to a minimum. In addition, the volume of update data for network safeguarding can be suppressed.</p>
<p id="p-0157" num="0156">Thus, up to the latest version of update data for the request update section <b>23</b> requested by the navigation device <b>2</b> is supplied; and for around the request update section <b>23</b>, the minimum section range and version of update data that enables safeguarding of the road network is supplied, which improves the convenience and reliability of the navigation device <b>2</b>. Further, the number of data files and volume of data supplied to the navigation device <b>2</b> can be reduced.</p>
<p id="p-0158" num="0157">The plurality of versions of update data files Ma shown in <figref idref="DRAWINGS">FIG. 13A</figref> that is extracted per section p is integrated into one integrated data file. For integration, as described above, all update data for the identification code is integrated as one piece of any one of addition, modification, and deletion update data in consideration of the significance of an update history of additions, modifications, and deletions. Accordingly, the number of data files and volume of data supplied to the navigation device <b>2</b> can be reduced. As shown in <figref idref="DRAWINGS">FIG. 13B</figref>, the plurality of versions of update data files shown in <figref idref="DRAWINGS">FIG. 13A</figref> for each update section before integration processing can be considerably reduced into one integrated data file through integration processing.</p>
<p id="p-0159" num="0158">Therefore, the distribution time and communication cost when distributing data from the map update data supply device <b>1</b> to the navigation device <b>2</b> can be reduced, and the update time of the map database DB<b>3</b> in the navigation device <b>2</b> can also be reduced, thus improving the convenience of map updating in the navigation device <b>2</b>.</p>
<p id="h-0023" num="0000">2-5-7. Communication Control Unit <b>14</b></p>
<p id="p-0160" num="0159">The communication control unit <b>14</b> performs an operation control of the communication device <b>6</b>. Specifically, the communication control unit <b>14</b> controls communication between the navigation device <b>2</b> and the map update data supply device <b>1</b> using the communication device <b>6</b>, and causes the communication device <b>6</b> to perform operations for receiving the data of the update request fb transmitted from the navigation device <b>2</b>, transmitting the integrated data file fa constituted from request update integrated data file <b>33</b> and the safeguard update integrated data file <b>34</b> to the navigation device <b>2</b>, and the like. Thus, in some embodiments, the communication control unit <b>14</b> and the communication device <b>6</b> constitute the integrated data supply unit <b>13</b> that supplies the integrated data file fa to the navigation device <b>2</b>.</p>
<p id="h-0024" num="0000">3. Operation Processing of Map Update Data Supply Device <b>1</b></p>
<p id="p-0161" num="0160">Next, the processing of the map update data supply device <b>1</b> that operates in accordance with the map update data supply program will be described based on flowcharts. The following processing performed by the units <b>7</b> to <b>14</b> provided in the map update data supply device <b>1</b> will be explained: processing that generates and supplies the integrated data file fa in response to a map database DB<b>3</b> update request from the navigation device <b>2</b>; and during such processing, processing that extracts request update data, processing that extracts safeguard update data, processing that generates integrated data from such update data, and processing that updates various databases.</p>
<p id="h-0025" num="0000">3-1. Integrated Data File fa Generation/Transmission Processing</p>
<p id="p-0162" num="0161"><figref idref="DRAWINGS">FIG. 15</figref> is a flowchart that shows processing performed by the map update data supply device <b>1</b> to generate and supply the integrated data file fa. As shown in <figref idref="DRAWINGS">FIG. 15</figref>, if there is an update request from the navigation device <b>2</b>, that is, if the map update data supply device <b>1</b> receives the update request fb (#<b>11</b>: Yes), the request update data extraction unit <b>10</b> performs processing to extract the request update section <b>23</b> based on the update request fb, and up to the latest version of the update data file Ma for the request update section <b>23</b> (#<b>12</b>).</p>
<p id="p-0163" num="0162">The processing at #<b>12</b> extracts the request update section <b>23</b> based on the update request fb from the navigation device <b>2</b>, and extracts for each request update section <b>23</b> up to the latest version of the update data file Ma to be supplied to the navigation device <b>2</b>. This processing will be described in more detail later based on a flowchart in <figref idref="DRAWINGS">FIG. 16</figref>.</p>
<p id="p-0164" num="0163">Next, the map update data supply device <b>1</b> uses the safeguard update data extraction unit <b>11</b> to perform processing that extracts the safeguard update section <b>24</b> and the update safeguard version uva of the safeguard update section <b>24</b>; and extracts up to the update safeguard version uva of the update data file Ma for the safeguard update section <b>24</b> (#<b>13</b>).</p>
<p id="p-0165" num="0164">The processing at #<b>13</b> extracts the safeguard update section <b>24</b>, which is a particular section p that needs updating to safeguard a road network connection between adjacent sections p, when all the request update sections <b>23</b> are updated to the latest version; and extracts for each safeguard update section <b>24</b> the update data file Ma up to the update safeguard version uva, which is a particular version that needs updating to safeguard a road network connection. This processing will be described in more detail later based on a flowchart in <figref idref="DRAWINGS">FIG. 17</figref>.</p>
<p id="p-0166" num="0165">The map update data supply device <b>1</b> subsequently uses the integrated data generation unit <b>12</b> to perform processing that generates the request update integrated data file <b>33</b> and the safeguard update integrated data file <b>34</b> (#<b>14</b>).</p>
<p id="p-0167" num="0166">The processing integrates per request update section <b>23</b> all versions up to the latest version of the update data file Ma for each request update section <b>23</b> extracted by the request update data extraction unit <b>10</b>, and generates the request update integrated data file <b>33</b> that serves as a data file for one difference update; and integrates per safeguard update section <b>24</b> the versions up to the update safeguard version uva of the update data file Ma for each safeguard update section <b>24</b> extracted by the safeguard update data extraction unit <b>11</b>, and generates the safeguard update integrated data file <b>34</b> that serves as a data file for one difference update. This processing will be described in more detail later based on flowcharts in <figref idref="DRAWINGS">FIGS. 18 and 19</figref>.</p>
<p id="p-0168" num="0167">Next, the map update data supply device <b>1</b> uses the communication control unit <b>14</b> and the communication device <b>6</b> that constitute the integrated data supply unit <b>13</b> to perform processing that supplies the request update integrated data file <b>33</b> and the safeguard update integrated data file <b>34</b> to the navigation device <b>2</b> (#<b>15</b>). Thus, as described above, the integrated data file fa is supplied to the navigation device <b>2</b>.</p>
<p id="p-0169" num="0168"><figref idref="DRAWINGS">FIG. 16</figref> is a flowchart that shows the processing performed by the request update data extraction unit <b>10</b> at #<b>12</b>, wherein based on the update request fb, the request update section <b>23</b> and up to the latest version of the update data file Ma for the request update section <b>23</b> are extracted.</p>
<p id="p-0170" num="0169">First, as described above, the request update data extraction unit <b>10</b> performs processing to determine whether the update is a first update based on the update request fb from the navigation device <b>2</b> (#<b>21</b>). If not a first update (#<b>21</b>: No), the management database DB<b>2</b> is searched for the management data table DT that matches the navigation device <b>2</b> that originated the update request fb, as described above (#<b>22</b>). If there is a matching management data table DT (#<b>23</b>: Yes), the current version of the request update section <b>23</b> is extracted from the management data table DT specified in the search.</p>
<p id="p-0171" num="0170">The request update data extraction unit <b>10</b> subsequently performs processing to extract all versions of the update data file Ma that are newer than the current version for the request update section <b>23</b>, up to the latest version stored in the update map database DB<b>1</b> (#<b>24</b>).</p>
<p id="p-0172" num="0171">However, if the update is a first update (#<b>21</b>: Yes), the current version is set as the initial version (version <b>0</b>) at #<b>24</b>, and the processing at #<b>24</b> is performed to extract the update data file Ma.</p>
<p id="p-0173" num="0172">In addition, if there is no matching management data table DT (#<b>23</b>: No), as described above, the map update data supply device <b>1</b> performs processing to request that the navigation device <b>2</b> that originated the update request fb transmit the current version already supplied to the navigation device <b>2</b> (#<b>25</b>). If the current version data is received from the navigation device <b>2</b> (#<b>26</b>: Yes), the processing at #<b>24</b> is performed to extract the update data file Ma, based on the received current version.</p>
<p id="h-0026" num="0000">3-3. Processing Performed by Safeguard Update Data Extraction Unit <b>11</b></p>
<p id="p-0174" num="0173"><figref idref="DRAWINGS">FIG. 17</figref> is a flowchart that shows the processing performed by the safeguard update data extraction unit <b>11</b> at #<b>13</b>, wherein the safeguard update section <b>24</b> and the update safeguard version uva of the safeguard update section <b>24</b> are extracted, and up to the update safeguard version uva of the update data file Ma for the safeguard update section <b>24</b> is extracted.</p>
<p id="p-0175" num="0174">First, as described above, the safeguard update data extraction unit <b>11</b> performs processing to extract the adjacent section <b>26</b> next to the request update section range <b>22</b>, which is a section range of the request update sections <b>23</b>, and also extracts an adjacent section group thereof (#<b>31</b>).</p>
<p id="p-0176" num="0175">The safeguard update data extraction unit <b>11</b> subsequently performs processing to extract the safeguard update section <b>24</b> from the adjacent section <b>26</b> by searching for the extracted adjacent section group in the safeguard version table SVT based on the post-update version, as described above; and extract the update safeguard version uva for each safeguard update section <b>24</b> (#<b>32</b>).</p>
<p id="p-0177" num="0176">If a new safeguard update section <b>24</b> is extracted at #<b>32</b> (#<b>33</b>: Yes), as described above, processing is performed to extract the adjacent section <b>26</b> next to the newly extracted safeguard update section <b>24</b>, and the adjacent section group thereof (#<b>35</b>). At #<b>32</b> again, processing is performed to extract the safeguard update section <b>24</b> from the adjacent section <b>26</b> by searching for the adjacent section group in the safeguard version table SVT based on the post-update version; and extract the update safeguard version uva for each safeguard update section <b>24</b>. This recursive processing is repeatedly executed until no new safeguard update sections <b>24</b> and update safeguard versions uva are extracted, so that the safeguard update sections <b>24</b> spreading out in a chain manner and the update safeguard versions uva thereof are extracted.</p>
<p id="p-0178" num="0177">If there are no longer any new safeguard update sections <b>24</b> or update safeguard versions uva to be extracted as described above (#<b>33</b>: No), processing is performed to extract up to the update safeguard version uva of the update data file Ma for the safeguard update section <b>24</b> (#<b>34</b>).</p>
<p id="h-0027" num="0000">3-4. Processing Performed by Integrated Data Generation Unit <b>12</b></p>
<p id="p-0179" num="0178"><figref idref="DRAWINGS">FIGS. 18 and 19</figref> are flowcharts that show processing performed by the integrated data generation unit <b>12</b> at #<b>14</b> to generate the request update integrated data file <b>33</b> and the safeguard update integrated data file <b>34</b>.</p>
<p id="p-0180" num="0179">In these flowcharts, consideration is given to the significance of an update history that spans a plurality of versions of update data for performing additions, modifications, and deletions with respect to each data unit DU associated with an identification code in the present embodiment. Processing that integrates update data as one piece of any one of addition, modification and deletion update data, or as without update data will be described based on these flowcharts.</p>
<p id="p-0181" num="0180">First, as described above, the integrated data generation unit <b>12</b> performs processing to set one update section out of all the request update sections <b>23</b> and safeguard update sections <b>24</b>, which are update sections, as a processing section (#<b>41</b>).</p>
<p id="p-0182" num="0181">If a plurality of versions of the update data file Ma exists for the set processing section (#<b>42</b>: Yes), processing is performed to extract all identification codes for which all update versions of the update data file Ma exist (#<b>43</b>).</p>
<p id="p-0183" num="0182">Processing is then performed to set one identification code out of all the extracted identification codes as a processing identification code (#<b>45</b>). If update data for the set processing identification code exists throughout all update versions of the update data file Ma (#<b>46</b>: Yes), processing is performed to integrate the update data as described below (#<b>47</b> to #<b>52</b>).</p>
<p id="p-0184" num="0183">Among all the update data that exists for the processing identification code, if the first update content that is the update content of the oldest version of update data is an addition (#<b>47</b>: Yes), and the last update content that is the update content of the newest version of update data is a deletion (#<b>48</b>: Yes), the plurality of versions of update data add a data unit DU that did not exist before an update and ultimately delete the data unit DU, as described above. In such case, the update data is integrated such that the data unit DU of that particular identification code is not updated. In other words, none of the plurality of versions of update data for the processing identification code are added to a temporary integrated data file, which will ultimately become an integrated data file for the processing section, and the integration processing is ended.</p>
<p id="p-0185" num="0184">If the first update content for the processing identification code is a modification (#<b>47</b>: No) and the last update content is a deletion (#<b>51</b>: No), the plurality of versions of update data modify the content of a data unit DU that existed before an update and ultimately delete the data unit DU, as described above. In such case, processing is performed that integrates the update data as one piece of deletion update data for performing an update that deletes that particular data unit DU (#<b>51</b>). In the present embodiment, processing is performed to generate deletion update data for only the processing identification code.</p>
<p id="p-0186" num="0185">If the first update content for the processing identification code is an addition (#<b>47</b>: Yes) and the last update content is a modification (#<b>48</b>: No), the plurality of versions of update data add a data unit DU that did not exist before an update and modify its content, as described above. In such case, processing is performed that integrates the update data as one piece of addition update data for performing an update that adds that particular data unit DU (#<b>50</b>). In the road data example of the present embodiment, as described above, processing is performed to generate addition update data that is constituted from the processing identification code; the start point intersection ID and the end point intersection ID included in the first update data that is addition update data; and all data items except for the intersection IDs of the last update data that is modification update data (#<b>50</b>).</p>
<p id="p-0187" num="0186">If the first update content for the processing identification code is a modification (#<b>47</b>: No) and the last update content is a modification (#<b>49</b>: No), processing is performed that integrates the update data as one piece of modification update data for performing an update that modifies that particular data unit DU (#<b>52</b>). In the road data example of the present embodiment, as described above, processing is performed to generate modification update data that is constituted from the processing identification code; all data items except for the intersection IDs of the last update data that is the modification update data; and the merged update yes/no flag (#<b>52</b>).</p>
<p id="p-0188" num="0187">Processing is then performed that adds the update data from the integration processing described above to a temporary integrated data file that will ultimately become the integrated data file for the processing section (#<b>53</b>).</p>
<p id="p-0189" num="0188">However, if there is not a plurality of versions and only one version of the update data exists for the processing identification code (#<b>46</b>: No), the integration processing described above is not performed, and instead processing is performed that adds the one version of update data to the temporary integrated data file (#<b>53</b>).</p>
<p id="p-0190" num="0189">If there are any unprocessed identification codes remaining after integration processing of the set processing identification code is ended (#<b>54</b>: Yes), the routine returns to #<b>45</b> and one unprocessed identification code is set as the processing identification code. The integration processing described above is then performed for the set processing identification code, and integrated update data is generated and added to the temporary integrated data file. This recursive integration processing is repeatedly executed for the set processing section until there are no unprocessed identification codes left. Integrated update data for all identification codes that must be supplied for the set processing section is stored in the temporary integrated data file. Processing is subsequently performed that stores, in an integrated data file for the set processing section, the temporary integrated data file that completely stores the update data for all identification codes that must be supplied (#<b>55</b>). At such time, if the processed update data file was extracted by the request update data extraction unit <b>10</b>, the temporary integrated data file is stored in the request update integrated data file <b>33</b>. However, if the processed update data file was extracted by the safeguard update data extraction unit <b>11</b>, the temporary integrated data file is stored in the safeguard update integrated data file <b>34</b>. Thereafter, the temporary integrated data file is reset in order to store data for the next set processing section (#<b>56</b>).</p>
<p id="p-0191" num="0190">If there are any unprocessed update sections remaining after integration processing of the set processing section is ended (#<b>57</b>: Yes), the routine returns to #<b>41</b> and one unprocessed update section is set as the processing section. The integration processing described above is then performed for the set processing section, and after integration the temporary integrated data file is generated and stored in the integrated data file for the set processing section. This recursive integration processing is repeatedly executed for all the update sections until there are no unprocessed update sections left, and the request update integrated data file <b>33</b> or the safeguard update integrated data file <b>34</b> is generated for all the update sections that must be supplied.</p>
<p id="h-0028" num="0000">3-5. Processing Performed by Database Update Unit <b>7</b></p>
<p id="p-0192" num="0191"><figref idref="DRAWINGS">FIG. 20</figref> is a flowchart that shows processing performed by the database update unit <b>7</b> to update the update data file Ma and the version table VT stored in the update database DB<b>1</b>. As shown in <figref idref="DRAWINGS">FIG. 20</figref>, the database update unit <b>7</b> determines whether there is update input through the input device <b>4</b> that adds, modifies, or deletes map information in order to upgrade the version of the update data file Ma (#<b>61</b>). If there is update input for the update data file Ma (#<b>61</b>: Yes), based on the content of the update input, the map update data supply device <b>1</b> uses the database update unit <b>7</b> to generate a new version of the update data file Ma for difference updating per section p. The update data file is additionally stored in the update map database DB<b>1</b> (#<b>62</b>).</p>
<p id="p-0193" num="0192">Using the generated new version of the update data file Ma, the database update unit <b>7</b> performs processing to update the latest version of the generated section p stored in the version table VT (#<b>63</b>).</p>
<p id="h-0029" num="0000">3-6. Processing Performed by Version Table Update Unit <b>8</b></p>
<p id="p-0194" num="0193"><figref idref="DRAWINGS">FIG. 21</figref> is a flowchart that shows processing performed by the version table update unit <b>8</b> to update the safeguard version table SVT.</p>
<p id="p-0195" num="0194">As shown in <figref idref="DRAWINGS">FIG. 21</figref>, if the database update unit <b>7</b> generates new versions of the update data file Ma requiring a network safeguard for two adjacent sections p as described above (#<b>71</b>: Yes), the version table update unit <b>8</b> performs processing to associate the new versions, as the safeguard versions va of the adjacent sections p, with the section group g formed of the two adjacent sections p, and cumulatively record these in the safeguard version table SVT (#<b>72</b>).</p>
<p id="h-0030" num="0000">3-7. Processing Performed by Management Database Update Unit <b>9</b></p>
<p id="p-0196" num="0195"><figref idref="DRAWINGS">FIG. 22</figref> is a flowchart that shows processing performed by the management database update unit <b>9</b> to update a plurality of management data tables DT that is stored in the management database DB<b>2</b> and corresponds to each navigation device <b>2</b>.</p>
<p id="p-0197" num="0196">As shown in <figref idref="DRAWINGS">FIG. 22</figref>, if supply of the information of the update data file Ma to the navigation device <b>2</b> is completed as described above (#<b>81</b>: Yes), the management database update unit <b>9</b> performs processing to update the current version that is the latest update version of the section p in the management data table DT provided per navigation device <b>2</b>, using the update version of the section p in the supplied update data file Ma (#<b>82</b>).</p>
<p id="h-0031" num="0000">4. Operation Processing for Map Updating in Navigation Device <b>2</b></p>
<p id="p-0198" num="0197">Next, the processing of the navigation device <b>2</b> that is operated in accordance with the map data update program will be described based on a flowchart. Here, when updating the map data Mb stored in the map database DB<b>3</b>, the navigation device <b>2</b> uses the update request generation unit <b>48</b> to generate the update request fb and transmit the update request fb to the map update data supply device <b>1</b>. The navigation device <b>2</b> subsequently acquires the integrated data file fa, which is generated by the map update data supply device <b>1</b> after receiving the update request fb. Based on the integrated data file fa, the navigation device <b>2</b> updates the map data Mb.</p>
<p id="p-0199" num="0198">As shown in <figref idref="DRAWINGS">FIG. 23</figref>, the navigation device <b>2</b> determines whether the map update processing has started (#<b>91</b>). The map update processing is started, for example, if the navigation device <b>2</b> regularly performs the map update processing at a preset timing, if the map data Mb is referenced by the navigation computation unit <b>27</b> in a manner that satisfies a prescribed condition, or if there is a request operation to start the map update processing from the user of the navigation device <b>2</b>.</p>
<p id="p-0200" num="0199">If the map update processing is started (#<b>91</b>: Yes), the navigation device <b>2</b> uses the update request generation unit <b>48</b> to perform processing that determines the update request map range <b>51</b> to be transmitted to the map update data supply device <b>1</b> as described above (#<b>92</b>), and generates the update request fb that is constituted from the update request map range <b>51</b> and the identification information (#<b>93</b>). Next, the navigation device <b>2</b> uses the communication control unit <b>50</b> to control the communication device <b>46</b> so as to transmit the update request fb generated at #<b>93</b> to the map update data supply device <b>1</b> (#<b>94</b>). In the map update data supply device <b>1</b>, after receiving the update request fb, processing is performed to generate the request update integrated data file <b>33</b> and the safeguard update integrated data file <b>34</b> as described above, and supply these data files to the navigation device <b>2</b>. If the navigation device <b>2</b> does not receive the integrated data file fa from the map update data supply device <b>1</b> before the elapse of a prescribed time (#<b>95</b>: No), the navigation device <b>2</b> determines a communication abnormality and transmits the update request fb again (#<b>94</b>).</p>
<p id="p-0201" num="0200">If the navigation device <b>2</b> receives the integrated data file fa from the map update data supply device <b>1</b> (#<b>95</b>: Yes), the integrated data file fa are acquired (#<b>96</b>). The navigation device <b>2</b> then uses the map data update unit <b>49</b> to perform a difference update of the map data Mb based on the integrated data file fa (#<b>97</b>). As described above, in some embodiments, the integrated data files fa are files that include update data for difference updating the update section, wherein the update section is constituted from the request update section <b>23</b> that is set based on the update request map range <b>51</b>, and the safeguard update section <b>24</b> that is used for network safeguarding. Therefore, the map data update unit <b>49</b> updates the map data Mb at #<b>97</b> by difference updating the map data of the section p corresponding to the update section in the layer <b>1</b> of the main map data Mb<b>1</b> of the map data Mb, based on the update data for difference updating included in the integrated data file fa. After performing the above, the operation processing for map updating in the navigation device <b>2</b> is ended.</p>
<p id="p-0202" num="0201">Embodiments of the map update data supply device and map update data supply program, disclosed above, may be used to supply data for updating map data to a navigation device having map data.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A map update data supply device that is connectable to a navigation device that includes a map database via a communication network, the map update supply device being configured to supply data for updating the map database to the navigation device, the map database including at least road network information and being divided into a plurality of sections, the map update data supply device comprising:
<claim-text>a storage device including an update map database configured to
<claim-text>manage versions of an update data file for updating a difference in the map database for each of the sections, and</claim-text>
<claim-text>store the update data file of each of the versions for each of the sections; and</claim-text>
</claim-text>
<claim-text>a control device including
<claim-text>a request update data extraction unit configured to, based on an update request from the navigation device,
<claim-text>extract a request update section that is a section for updating the difference, and</claim-text>
<claim-text>extract, for each request update section, the update data file of up to a latest version,</claim-text>
</claim-text>
<claim-text>a safeguard update data extraction unit configured to, if all request update sections are updated up to the latest version,
<claim-text>extract a safeguard update section that is a section needed to be updated to ensure a road network connection between adjacent sections, and</claim-text>
<claim-text>extract, for each safeguard update section, the update data file of up to an update safeguard version that is a version needed to be updated to ensure the road network connection,</claim-text>
</claim-text>
<claim-text>an integrated data generation unit configured to
<claim-text>generate a request update integrated data file for a single time of difference update by integrating, for each request update section, all versions up to the latest version of the update data file for each request update section extracted by the request update data extraction unit, and</claim-text>
<claim-text>generate a safeguard update integrated data file for a single time of difference update by integrating, for each safeguard update section, the update data file up to the update safeguard version for each safeguard update section extracted by the safeguard update data extraction unit, and</claim-text>
</claim-text>
<claim-text>an integrated data supply unit configured to supply, to the navigation device, the request update integrated data file and the safeguard update integrated data file generated by the integrated data extraction unit.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The map update data supply device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>a set of a plurality of data units respectively associated with identification codes constitutes the map database of each of the sections,</claim-text>
<claim-text>the update data file includes update data that includes any one of an addition, a modification, and a deletion for each of the data units, and</claim-text>
<claim-text>the integrated data generation unit is configured to, for all versions of the update data file extracted for each of the sections,
<claim-text>integrate a plurality of versions of update data in which a first data unit that had not existed before an update has been added and finally deleted, in such a manner that an update of the first data unit is not performed,</claim-text>
<claim-text>integrate a plurality of versions of update data in which a content of a second data unit that had existed before an update has been modified and finally deleted, as one piece of data for performing an update to delete the second data unit, and</claim-text>
<claim-text>integrate a plurality of versions of update data in which a third data unit that had not existed before an update has been added and modified, as one piece of data for performing an update to add the third data unit.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The map update data supply device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>a management database configured to manage a current version of each of the sections in the map database for each of a plurality of navigation devices, wherein</claim-text>
<claim-text>the request update data extraction unit is configured to extract, for each request update section, all versions of the update data file that are newer than the current version managed by the management database and up to the latest version stored in the update map database, and</claim-text>
<claim-text>the safeguard update data extraction unit is configured to extract, for each safeguard update section, all versions of the update data file that are newer than the current version and up to the update safeguard version.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The map update data supply device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>a set of a plurality of data units respectively associated with identification codes constitutes the map database of each of the sections, and</claim-text>
<claim-text>the update data file has, for each data unit, an update flag for each data item included in the data unit.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The map update data supply device according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the update data file has post-update data for only a data item for which the update flag indicates there is an update.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The map update data supply device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>a set of a plurality of data units respectively associated with identification codes constitutes the map database of each of the sections, each of the data units including road data corresponding to a road that connects intersection points,</claim-text>
<claim-text>update data configured to add the road data includes attribute data including a start point intersection and an end point intersection in association with a new identification code corresponding to the road data, and</claim-text>
<claim-text>update data configured to modify the road data includes post-update attribute data not including the start point intersection and the end point intersection in association with a new identification code corresponding to the road data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The map update data supply device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>a safeguard version table configured to store, as a safeguard version, in association with a section group that is a combination of a section and a section adjacent thereto in the update map database, a version of the update data file of each of the sections when safeguarding of a road network connection between the sections that constitute the section group is required, wherein</claim-text>
<claim-text>the safeguard update data extraction unit is configured to
<claim-text>extract the safeguard update section based on the safeguard version table, the request update section, and a latest version of the request update section,</claim-text>
<claim-text>extract the update safeguard version for each safeguard update section, and</claim-text>
<claim-text>extract the update data file up to the update safeguard version.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A map update data supply method of a map update data supply device supplying data for updating a map database to a navigation device, the map database including at least road network information and being divided into a plurality of sections, the map update data supply method being executed by a control device included in the map update data supply device, the method comprising:
<claim-text>executing, utilizing a computational processing device, a map update data supply method, the map update data supply method including:
<claim-text>managing an update map database that manages, for each of the sections, versions of an update data file for updating a difference in the map database, and storing the update data file of each of the versions for each of the sections;</claim-text>
<claim-text>extracting, based on an update request from the navigation device, a request update section that is a section for updating the difference, and extracting the update data file of up to a latest version to be supplied to the navigation device for each request update section;</claim-text>
<claim-text>extracting, when all request update sections are updated up to the latest version, a safeguard update section that is a section needed to be updated to ensure a road network connection between adjacent sections, and extracting for each safeguard update section, the update data file of up to an update safeguard version that is a version needed to be updated to ensure the road network connection;</claim-text>
<claim-text>integrating, for each request update section, all versions up to the latest version of the update data files for each request update section, and generating a request update integrated data file for a single time of difference update;</claim-text>
<claim-text>integrating, for each safeguard update section, the update data file up to the update safeguard version for each safeguard update section, and generating a safeguard update integrated data for a single time of difference update; and</claim-text>
<claim-text>supplying, to the navigation device, the request update integrated data file and the safeguard update integrated data file.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A non-transitory computer readable media including program instructions, which when executed by a processor cause the processor to perform:
<claim-text>managing an update map database that manages, for respective section versions of an update data file for updating a difference in a map database, and storing the update data file of the versions for the respective sections;</claim-text>
<claim-text>extracting, based on an update request from a navigation device, a request update section that is a section for updating the difference, and extracting the update data file of up to a latest version to be supplied to the navigation device for each request update section;</claim-text>
<claim-text>extracting, when all request update sections are updated up to the latest version, a safeguard update section that is a section needed to be updated to ensure a road network connection between adjacent sections, and extracting for each safeguard update section, the update data file of up to an update safeguard version that is a version needed to be updated to ensure the road network connection;</claim-text>
<claim-text>integrating, for each request update section, all versions up to the latest version of the update data files for each request update section, and generating a request update integrated data file for a single time of difference update;</claim-text>
<claim-text>integrating, for each safeguard update section, the update data file up to the update safeguard version for each safeguard update section, and generating a safeguard update integrated data for a single time of difference update; and</claim-text>
<claim-text>supplying, to the navigation device, the request update integrated data file and the safeguard update integrated data file.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The map update data supply device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the control device includes a central processing unit and a storage medium.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The map update data supply method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the control device includes a central processing unit and a storage medium.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The map update data supply method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the control device includes a central processing unit and a storage medium, and wherein at least one of the actions of the map update data supply method is executed using at least one of the central processing unit or storage medium.</claim-text>
</claim>
</claims>
</us-patent-grant>
