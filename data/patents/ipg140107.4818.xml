<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625911-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625911</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13379405</doc-number>
<date>20100609</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="regional">
<country>EP</country>
<doc-number>09305587</doc-number>
<date>20090623</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>121</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>K</subclass>
<main-group>9</main-group>
<subgroup>36</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>382232</main-classification>
<further-classification>382154</further-classification>
<further-classification>382225</further-classification>
<further-classification>382233</further-classification>
</classification-national>
<invention-title id="d2e71">Compression of 3D meshes with repeated patterns</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6898320</doc-number>
<kind>B2</kind>
<name>Han et al.</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382232</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>8000540</doc-number>
<kind>B2</kind>
<name>Ahn et al.</name>
<date>20110800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382232</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>8254705</doc-number>
<kind>B2</kind>
<name>Ahn et al.</name>
<date>20120800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382232</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00004">
<othercit>S.P. Mudur etal: &#x201c;3D Compression of Engineering Models for Cooperative Computing Applications&#x201d;, Int'l Conf. on Infrastructure for E-Business. Jan. 21, 2002. pp. 1-10.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00005">
<othercit>R. Amjoun etal: &#x201c;Encoding Animated Meshes in Local Coordinates&#x201d;, Cyberworlds, IEEE, 2007, Oct. 24, 2007, pp. 437-446.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00006">
<othercit>K. Cai etal: &#x201c;Exploiting repeated patterns for efficient compression of massive models&#x201d; Proc. of the 8th Int'l Conf. on Virtual Reality Continuum, Dec. 14, 2009, pp. 145-150.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00007">
<othercit>P. Rungta: &#x201c;Domain Based Lossless Text Compression-Report&#x201d;, Oct. 18, 2007, pp. 1-8.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00008">
<othercit>Search Report dated Sep. 9, 2010.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>17</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>382232</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382233</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382244</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382245</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382240</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382225</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382251</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382243</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382118</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382170</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345418</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345419</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345420</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345423</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345427</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345581</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375 E7083</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>703  1</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>708512</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>4</number-of-drawing-sheets>
<number-of-figures>7</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120106858</doc-number>
<kind>A1</kind>
<date>20120503</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Cai</last-name>
<first-name>Kang Ying</first-name>
<address>
<city>Beijing</city>
<country>CN</country>
</address>
</addressbook>
<residence>
<country>CN</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Jin</last-name>
<first-name>Yu</first-name>
<address>
<city>Beijing</city>
<country>CN</country>
</address>
</addressbook>
<residence>
<country>CN</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Chen</last-name>
<first-name>Zhi Bo</first-name>
<address>
<city>Beijing</city>
<country>CN</country>
</address>
</addressbook>
<residence>
<country>CN</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Cai</last-name>
<first-name>Kang Ying</first-name>
<address>
<city>Beijing</city>
<country>CN</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Jin</last-name>
<first-name>Yu</first-name>
<address>
<city>Beijing</city>
<country>CN</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Chen</last-name>
<first-name>Zhi Bo</first-name>
<address>
<city>Beijing</city>
<country>CN</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Myers Wolin LLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Thomson Licensing</orgname>
<role>03</role>
<address>
<city>Issy-les-Moulineaux</city>
<country>FR</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Do</last-name>
<first-name>Anh</first-name>
<department>2666</department>
</primary-examiner>
</examiners>
<pct-or-regional-filing-data>
<document-id>
<country>WO</country>
<doc-number>PCT/EP2010/058048</doc-number>
<kind>00</kind>
<date>20100609</date>
</document-id>
<us-371c124-date>
<date>20111220</date>
</us-371c124-date>
</pct-or-regional-filing-data>
<pct-or-regional-publishing-data>
<document-id>
<country>WO</country>
<doc-number>WO2010/149492</doc-number>
<kind>A </kind>
<date>20101229</date>
</document-id>
</pct-or-regional-publishing-data>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">3D models of the engineering class usually have a large number of connected components, with small numbers of large triangles, often with arbitrary connectivity. To enable compact storage and fast transmission of large 3D mesh models, an efficient compression strategy specially designed for 3D mesh models is provide. A method for encoding a 3D mesh model comprises determining and clustering repeating components, normalizing the components, wherein scaling factors are clustered and orientation axes are clustered, encoding the connected components using references to the clusters, and entropy encoding the connected components.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="74.25mm" wi="158.50mm" file="US08625911-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="215.90mm" wi="189.48mm" file="US08625911-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="184.15mm" wi="214.63mm" file="US08625911-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="247.57mm" wi="194.48mm" file="US08625911-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="178.99mm" wi="174.33mm" file="US08625911-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<p id="p-0002" num="0001">This application claims the benefit, under 35 U.S.C. &#xa7;365 of International Application PCT/EP2010/058048, filed Jun. 9, 2010, which was published in accordance with PCT Article 21(2) on Dec. 29, 2010 in English and which claims the benefit of European patent application No. 09305587.9, filed Jun. 23, 2009.</p>
<heading id="h-0001" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0003" num="0002">This invention relates to a method and an apparatus for improved compression and decompression of 3D models, and particularly for large 3D models.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0004" num="0003">Large 3D engineering models like architectural designs, chemical plants and mechanical CAD (computer-aided design) designs are increasingly being deployed in various virtual world applications, such as Second Life&#x2122; and Google Earth&#x2122; In most engineering models there are a large number of small to medium sized connected components, each having up to a few hundred polygons on average. Moreover, this type of models has a number of geometric features that is repeated in various positions, scales and orientations, such as the &#x201c;Meeting room&#x201d; shown in <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0005" num="0004">Various algorithms have been proposed to compress 3D meshes efficiently since the early 1990s. Most of the existing 3D mesh compression algorithms work best for smooth surfaces with dense meshes of small triangles. However, large 3D models of the engineering class usually have a large number of connected components, with small numbers of large triangles, often with arbitrary connectivity. The architectural and mechanical CAD models typically have many non-smooth surfaces making these methods less suitable. Moreover, most of the earlier efforts deal with each connected component separately. In fact, the encoder performance can be greatly increased by removing the redundancy in the representation of repeating geometric feature patterns. To enable compact storage and fast transmission of large 3D engineering models, an efficient compression strategy specially designed for 3D mesh models (e.g. of engineering models) is needed. A good compression method for large 3D engineering models should be able to automatically discover the repeating geometry feature patterns and to effectively encode the necessary information for reconstructing the original model from the discovered geometry feature patterns.</p>
<p id="p-0006" num="0005">[SBM01]<sup>1 </sup>proposed a method for automatically discovering repeating geometric features in large 3D engineering models. However, [SBM01] does not provide a complete compression scheme for 3D mesh models, particularly engineering models. Further, [SBM01] uses PCA (Principal Component Analysis) of positions of vertices of a component. As a consequence, components with same geometry and different connectivity will have same mean and same orientation axes. Further, [SBM01] is not suitable for detecting repeating patterns in various scales. Two components that differ only in scale (i.e. size) will not be recognized as repeating features of the same equivalence class. Further, it is desirable to compress the encoded data even more than described in [SBM01]. <sup>1</sup>[SBM01]: D. Shikhare, S. Bhakar and S. P. Mudur. &#x201c;Compression of Large 3D Engineering Models using Automatic Discovery of Repeating Geometric Features&#x201d;, 6th International Fall Workshop on Vision, Modeling and Visualization (VMV2001), Nov. 21-23, 2001, Stuttgart, Germany</p>
<p id="p-0007" num="0006">Thus, the method of [SBM01] needs further improvement.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0008" num="0007">The present invention provides an efficient compression method and corresponding apparatus, especially for 3D meshes that consist of many small to medium sized connected components and have geometric features that repeat in various positions, scales and orientations, such as 3D engineering models.</p>
<p id="p-0009" num="0008">According to the invention, a method for encoding a 3D mesh model comprises the following steps: A first step is automatically analyzing the 3D mesh model, wherein repeating components are determined and classified into pattern clusters, a mean of each component is determined, and then the component is normalized, wherein the normalizing comprises determining scaling factors and classifying the scaling factors into scaling factor clusters, and determining orientation axes and clustering the orientation axes into orientation axis clusters. A second step is assigning unique cluster identifiers to the pattern clusters, scaling factor clusters and orientation axis clusters. A third step is encoding the connected components, wherein the connected components are compared to the pattern clusters, scaling factor clusters and orientation axis clusters, thereby obtaining a pattern cluster identifier, scale factor cluster identifier, scale factor residual, orientation axis cluster identifier and orientation residual. A further step is entropy encoding each connected component as represented by a pattern cluster identifier, scale factor cluster identifier, scale factor residual, orientation axis cluster identifier and orientation residual.</p>
<p id="p-0010" num="0009">According to the invention, a method for decoding a 3D mesh model comprises following steps: Entropy decoding of received data, extracting a pattern cluster identifier and transformation information, wherein the transformation information comprises transformation cluster identifiers and transformation residuals, reconstructing a pattern according to the pattern cluster identifier, reconstructing transformation information according to the transformation cluster identifiers and transformation residuals, and transforming the reconstructed pattern according to the reconstructed transformation information.</p>
<p id="p-0011" num="0010">An apparatus for encoding 3D mesh models comprises analyzing means or analyzer, assigning means, first encoding means (e.g. encoder) for encoding the connected components and second encoding means being an entropy encoder. The analyzing means is suitable for automatically analyzing the 3D mesh model, wherein repeating components are determined and classified into pattern clusters, a mean of each component is determined, and then the component is normalized, wherein the normalizing comprises determining scaling factors and classifying the scaling factors into scaling factor clusters, and determining orientation axes and clustering the orientation axes into orientation axis clusters. The assigning means is suitable for assigning unique cluster identifiers to the pattern clusters, scaling factor clusters and orientation axis clusters. The encoding means is suitable for encoding the connected components, wherein the connected components are compared to the pattern clusters, scaling factor clusters and orientation axis clusters, thereby obtaining a pattern cluster identifier, scale factor cluster identifier, scale factor residual, orientation axis cluster identifier and orientation residual. The entropy encoder is suitable for entropy encoding each connected component as represented by a pattern cluster identifier, scale factor cluster identifier, scale factor residual, orientation axis cluster identifier and orientation residual.</p>
<p id="p-0012" num="0011">An apparatus for decoding 3D mesh models, as disclosed in claim <b>6</b>, comprises an entropy decoder, data extraction means (e.g. de-multiplexer), pattern reconstruction means, trans-formation information reconstruction means and transforming means. The entropy decoder is suitable for entropy decoding received data. The data extraction means is suitable for extracting a pattern cluster identifier and transformation information, the transformation information comprising transformation cluster identifiers and transformation residuals. The pattern reconstruction means is suitable for reconstructing a pattern according to the pattern cluster identifier. The transformation information reconstruction means for reconstructing transformation information according to the transformation cluster identifiers and transformation residuals, and the transforming means is suitable for transforming the reconstructed pattern according to the reconstructed transformation information.</p>
<p id="p-0013" num="0012">A signal according to the invention comprises data of an encoded 3D mesh model, the data comprising at least one pattern cluster identifier and transformation information, wherein the transformation information comprises transformation cluster identifiers and transformation residuals.</p>
<p id="p-0014" num="0013">Advantageous embodiments of the invention are disclosed in the dependent claims, the following description and the figures.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0015" num="0014">Exemplary embodiments of the invention are described with reference to the accompanying drawings, which show in <figref idref="DRAWINGS">FIG. 1</figref> an exemplary 3D model (&#x201c;Meeting room&#x201d;) with many repeating features;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 2</figref> the structure of encoding;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 3</figref> the structure of decoding;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 4</figref> the principle of kd-tree geometry coding in the 2D case;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 5</figref> an exemplary component for which it is particularly advantageous to use the &#x201c;quadratic error matrix&#x201d; method;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 6</figref> exemplary encoding of a component; and</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 7</figref> exemplary reconstruction of a component.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0022" num="0021">The present invention provides an efficient compression method for large 3D engineering models. Such models are often composed of several partitions, so-called &#x201c;connected components&#x201d;. The method comprises automatically discovering and removing the redundancy in the representation of repeating geometric feature patterns. In one embodiment, the repeating geometry patterns are discovered by normalizing the connected components, and then comparing the normalized components to each other. In one embodiment, all the connected components that are equivalent after normalization can be regarded as instances of one geometry pattern. In principle, equivalent components are clustered. A cluster may refer to only some, or to all components of a 3D model. Then each connected component can be represented by an identifier, such as an alphanumeric ID, of the corresponding geometry pattern (or clustering class) and the transformation information which can reconstruct the component from the geometry pattern. This transformation information may exemplary comprise one or more of scale factors, mean (or center), orientation axes (or rotation information), or shift information. In principle, also others are possible. Geometry patterns can be compressed by any (particularly any mature) 3D mesh compression method.</p>
<p id="p-0023" num="0022">In one embodiment, the transformation information comprises at least the mean, orientation axes and scale factors of the corresponding component. In one embodiment, the orientation axes for each component may be in 3 different dimensions, e.g. x-axis, y-axis and z-axis. In one embodiment, the orientation axes of all connected components are clustered based on k-means clustering. In one embodiment, also the scale factors of all connected components are clustered based on k-means clustering. In one embodiment, the means are compressed by organizing them using a space tree, such as &#x201c;k-d Tree&#x201d;: each leaf node records the geometry pattern ID, cluster IDs of orientation axes and cluster IDs of scale factors.</p>
<p id="p-0024" num="0023">The present invention provides an efficient and complete compression scheme for 3D meshes consisting of many connected components and having lots of repeating geometric features, such as 3D engineering models. One key aspect of the invention is to discover and remove the redundancy in the representation of repeating geometric feature patterns. Another key aspect of the invention is to effectively compress the information that is necessary for reconstructing the original model from the discovered geometry feature patterns. One advantageous effect of the invention is that, compared with known methods, the amount of data describing a 3D mesh model is reduced. One advantageous effect is that the encoding gives more exact data, i.e. allows a more exact reconstruction. Therefore, encoding may provide enhanced quality, transmission and storage require less bandwidth, and/or decoding may be accelerated. Thus, the invention has advantages for encoding, transmission, storage and reconstruction of 3D models.</p>
<p id="p-0025" num="0024">Block diagrams of the proposed encoder and decoder are shown in <figref idref="DRAWINGS">FIGS. 2 and 3</figref>.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 2</figref> shows an encoder for 3D mesh models, according to one embodiment of the invention. The connected components are distinguished by a triangle transversal block <b>100</b>. A normalization block <b>101</b> normalizes each connected component. In one embodiment, the normalization is based on a technique described in the European patent application EP09305527<sup>2 </sup>which discloses a method for encoding a 3D mesh model comprising one or more components. The normalization technique of EP09305527 comprises steps of determining for a component an orthonormal basis in 3D space, wherein each vertex of the component is assigned a weight which is determined from coordinate data of said vertex and coordinate data of other vertices that belong to the same triangle, encoding object coordinate system information of the component, normalizing the orientation of the component relative to a world coordinate system, quantizing the vertex positions, and encoding the quantized vertex positions. In further embodiments, other normalization techniques may be used. <sup>2</sup>PA090034</p>
<p id="p-0027" num="0026">According to one aspect of the invention, both the orientation and scale of each connected component are normalized. [SBM01] only discloses normalizing the component orientation, and is therefore not suitable for discovering repeating features in various scales.</p>
<p id="p-0028" num="0027">In <figref idref="DRAWINGS">FIG. 2</figref>, block <b>102</b> matches the normalized components for discovering the repeated geometry patterns. In principle, the matching method of [SBM01] can be used. Each connected component in the input model can be represented by the ID of the corresponding geometry pattern and the transformation information for reconstructing it from the geometry pattern. Preferably, the transformation information includes the geometry pattern representative for a cluster, three orientation axes and scale factors of the corresponding connected component. The mean (i.e. the center of the representative geometry pattern) is not transmitted, but recalculated at the decoder.</p>
<p id="p-0029" num="0028">The geometry patterns can be compressed by any mature 3D mesh encoder, such as the Edgebreaker encoder [R99]<sup>3</sup>. Also other mesh encoders can be used in the encoder block <b>103</b>. Considering the large number of connected components in complex 3D models, the component information also consumes lots of storage. In one aspect, the present invention provides an efficient compression method for the component information. <sup>3</sup>[R99]: J. Rossignac. Edgebreaker: &#x201c;Connectivity compression for triangle meshes&#x201d;, IEEE Transactions on Visualization and Computer Graphics, Vol. 5, No. 1, pp. 47-61, January-March 1999</p>
<p id="p-0030" num="0029">It has been noticed that there often are some dominant orientations among all the connected components in large 3D engineering models. Thus, cluster analysis is a proper choice to encode the orientation axes <b>105</b>. While any clustering algorithm may in principle be used, k-means [MQ67]<sup>4 </sup>is one of the simplest and most effective unsupervised learning algorithms that solve clustering problems. The procedure follows a simple and easy way to classify a given data set through a certain number of clusters. However, k being the number of clusters needs to be decided beforehand, which is usually not easy. <sup>4</sup>[MQ67]: J. B. MacQueen. &#x201c;Some Methods for classification and Analysis of Multivariate Observations&#x201d;, <i>Proceedings of </i>5-<i>th Berkeley Symposium on Mathematical Statistics and Probability</i>, Berkeley, University of California Press, 1:281-297, 1967.</p>
<p id="p-0031" num="0030">In order to overcome this limitation, Block <b>105</b> performs k-means based cluster analysis as follows:</p>
<p id="p-0032" num="0031">Suppose &#x3b1; is a user defined threshold.
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0032">Step 1: Set k as a small number, e.g. k=4.</li>
    <li id="ul0001-0002" num="0033">Step 2: Classify the data set by k-means clustering.</li>
    <li id="ul0001-0003" num="0034">Step 3: Check each cluster. Suppose n is the number of clusters whose variance is bigger than &#x3b1;.
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0035">if (n&#x3e;0) then {k=k+n; Go to Step 2} else END.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0033" num="0036">In one embodiment, orientation axes and scale factors are clustered using the above cluster analysis method respectively. The representative of each cluster defines a mode of orientation axis/scale factor. Orientation axes/scale factors can be predicted by a corresponding mode.</p>
<p id="p-0034" num="0037">Compression techniques that employ tree decomposition based on cell subdivisions is extremely efficient for processing discrete points. Block <b>104</b> uses e.g. a kd-tree based compression algorithm like [OG00]<sup>5 </sup>to encode the means of all connected components. This algorithm subdivides with each iteration a cell into two child cells and encodes the number of vertices in one of the two child cells, as shown in <figref idref="DRAWINGS">FIG. 4</figref> and described in more detail below. If the parent cell contains p vertices, the number of vertices in one of the child cells can be encoded using log<sub>2</sub>(p+1) bits with an arithmetic coder. This subdivision is recursively applied, until each non-empty cell is small enough to contain only one vertex and enables a sufficiently precise reconstruction of the vertex position. More details are given below. Besides kd-tree, in another embodiment octree based compression can also be used to compress all the means of connected components [PK05]<sup>6</sup>. Note that in one embodiment the means (i.e. the center of the components) as such are not transmitted, but recalculated at the decoder. <sup>5</sup>[OG00]: O. Devillers, P. Gandoin. &#x201c;Geometric compression for interactive transmission&#x201d;, in: IEEE Visualization, 2000, pp. 319-326<sup>6</sup>[PK05] Jingliang Peng, C.-C. Jay Kuo, &#x201c;Geometry-guided progressive lossless 3D mesh coding with octree (OT) decomposition&#x201d;, ACM SIGGRAPH (ACM Transactions on Graphics 24(3)), 609-616, 2005</p>
<p id="p-0035" num="0038">In one embodiment, each leaf node contains the following information of a component:
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0000">
    <ul id="ul0004" list-style="none">
        <li id="ul0004-0001" num="0039">geometry pattern ID</li>
        <li id="ul0004-0002" num="0040">IDs of the respective orientation axis cluster and the prediction residual;</li>
        <li id="ul0004-0003" num="0041">IDs of the respective scale factor cluster and the prediction residual.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0036" num="0042"><figref idref="DRAWINGS">FIG. 3</figref> shows a decoder, according to one embodiment of the invention. An encoded bit-stream is first entropy decoded <b>200</b>, wherein different portions of data are obtained. One portion of the data is input to an Edgebreaker decoder <b>201</b> for obtaining geometry patterns. One portion of the data, including the representative of a geometry pattern cluster, is input to a kd-tree based decoder <b>202</b>, which provides the mean (i.e. center) of each connected component. The mean, together with the other component information (pattern ID, orientation axes and scale factors) are delivered to a recovering block. The recovering block for recovering repeating components has a first block <b>203</b> for restoring normalized connected components, a second block <b>204</b> for restoring connected components (including the non-repeating connected components) and a third block <b>205</b> for assembling the connected components. In one embodiment, the decoder calculates the mean of each repeating pattern before restoring its instances. In a further block (not shown in <figref idref="DRAWINGS">FIG. 3</figref>), the complete model is assembled from the connected components.</p>
<p id="p-0037" num="0043">According to one aspect of the invention, the entropy decoder <b>200</b> decodes also the orientation axis information. According to another aspect of the invention, the restoring of the connected components uses the mean, the geometry pattern ID, IDs of the respective orientation axis cluster and the orientation axis prediction residual, and IDs of the respective scale factor cluster and the scale factor prediction residual of each connected component. That is, e.g. for restoring the connected components size, the scale factor information (comprising a scale factor cluster ID and a prediction residual for each scale factor) is entropy decoded <b>200</b>, the raw scale factor according to the cluster ID is generated and updated by the prediction residual, and the resulting scale factor used for scaling the model (in the respective dimension). The orientation axis decoding is handled in the same way.</p>
<p id="p-0038" num="0044">The cluster reference values for each cluster (e.g. the geometric data of a pattern representing a pattern cluster) may be compressed and transmitted in the encoder, and received and decompressed in the decoder. In another embodiment, the decoder can obtain the cluster reference data from another data source using unique identifiers, eg. from the Internet. For example, the connectivity data of a particular exemplary pattern P<b>1</b> represented by a pattern cluster PC<b>1</b> may be encoded, transmitted and decoded. Thus, the decoder can reconstruct a pattern instance identified by reference to the pattern cluster PC<b>1</b> by using the received pattern P<b>1</b>, scaling and rotating it according to scale information and orientation information, and move it to its destination according to the respective mean information. This is shown in <figref idref="DRAWINGS">FIG. 7</figref>. In one embodiment, there may be an additional step of adding residual data of the particular instance of the pattern before scaling and rotating (if the instance is not an exact copy of the reference pattern). In another embodiment, where the instances of a pattern cluster are exact copies of a component, no residual geometry data are used.</p>
<p id="p-0039" num="0045"><figref idref="DRAWINGS">FIG. 6</figref> shows encoding steps of one embodiment of the invention. In principle, there are steps of determining a connected component <b>602</b>, normalizing the component <b>604</b>, and expressing <b>616</b> the normalized component, its orientation axes and scale factors relative to reference values (cluster representatives). The normalizing step <b>604</b> comprises determining the center (i.e. mean) of the component, moving the center to the center of the world coordinate system (transversal shift), rotating the component around 1, 2 or 3 axes, and scaling the component in 1, 2 or 3 dimensions.</p>
<p id="p-0040" num="0046">In one embodiment of the invention, a bit-stream with a compressed 3D mesh model comprises:
<ul id="ul0005" list-style="none">
    <li id="ul0005-0001" num="0000">
    <ul id="ul0006" list-style="none">
        <li id="ul0006-0001" num="0047">some bits to indicate the number of geometry patterns;</li>
        <li id="ul0006-0002" num="0048">for each geometry pattern, some bits to indicate the length of the compressed mesh data size; bits to show the compressed geometry pattern (e.g. cluster reference data);</li>
        <li id="ul0006-0003" num="0049">some bits to indicate the number of orientation axis modes;</li>
        <li id="ul0006-0004" num="0050">bits to show the details of each orientation axis mode (e.g. cluster reference data);</li>
        <li id="ul0006-0005" num="0051">some bits to indicate the number of scale factor modes;</li>
        <li id="ul0006-0006" num="0052">bits to show the details of each scale factor mode (e.g. cluster reference data);</li>
        <li id="ul0006-0007" num="0053">bits for recording the kd-tree;</li>
        <li id="ul0006-0008" num="0054">bits to show the geometry pattern ID and orientation axis mode ID of each leaf node of kd-tree.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0041" num="0055">The bit-stream can be further encoded by an entropy codec.</p>
<p id="p-0042" num="0056">It is to be noted that in principle the compression according to the invention may be used for components that are expressed by reference to a pattern cluster, but also for other components that have individual patterns and no reference to any pattern cluster.</p>
<p id="p-0043" num="0057">The present invention provides an improved method for compressing large 3D engineering models by discovering repeating geometry feature patterns and efficiently removing the redundancy therein. In one embodiment, the transformation information for reconstructing the original mesh from the geometry patterns is compressed based on cluster analysis and a kd-tree based codec.</p>
<p id="p-0044" num="0058"><figref idref="DRAWINGS">FIG. 4</figref> shows an illustrative example of the kd-tree geometry coding in the 2D case. Given n 2D points with integer coordinates of b bits, the starting cell is a rectangular bounding box of size 2<sup>b</sup>&#xd7;2<sup>b</sup>. The algorithm starts by encoding the total number of points n on an arbitrary fixed number of bits (for example 32). Then it starts the main loop, which consists in subdividing the current cell in two halves along the horizontal axis and then coding the number of points contained in one of them (e.g. the left one) on an optimal number of bits: if the parent cell contains p points, the number of points in the halfcell, which can take the p+1 values 0, 1, . . . , p, will be coded on log<sub>2</sub>(p+1) bits using arithmetic coding. The number of points contained in the second half-cell does not have to be explicitly encoded, since it can be deduced from the total number and the number transmitted for the first half-cell, after which each one of the two resulting cells is subdivided along the vertical axis according to the same rule. The process depicted in <figref idref="DRAWINGS">FIG. 4</figref> iterates until there is no non-empty cell greater than 1&#xd7;1. As shown on <figref idref="DRAWINGS">FIG. 4</figref>, the corresponding coding sequence consists only of the numbers of points: 7, 4, 2, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, . . . . The positions of these points are encoded in the order of the output. As the algorithm progresses, the cell size decreases and the transmitted data lead to a more accurate localization. A leaf node is a non-empty cell with the size 1&#xd7;1. Each leaf node only contains one geometry pattern (the representative or mean of the geometry pattern cluster).</p>
<p id="p-0045" num="0059">It is to be noted that the word &#x201c;mean&#x201d; may be used in different meanings herein: as the center of a component, or as a component that represents a geometry pattern cluster. Generally, mean of a pattern (i.e. its center) is not transmitted, as it can be calculated by the decoder. On the other hand, the mean of an instance (i.e. representative of a cluster of repeating instances), which is a geometry pattern, is transmitted. The representatives of the repeating instances are compactly transmitted by organizing them, in one embodiment, into a kd-tree.</p>
<p id="p-0046" num="0060">In one embodiment, when normalizing a component, the present invention uses the &#x201c;quadric error matrix&#x201d; (QEM) method, while [SBM01] uses PCA of vertex positions. The QEM method is described in detail below, and further in [GH98]<sup>7</sup>. As the QEM method depends on not only the vertex positions but also on the triangles of the mesh, it can give more precise orientation axes and mean than PCA of vertex positions. Thus, the accuracy of the present invention is enhanced as compared with the prior art systems. The decoder needs to calculate the mean of each pattern before restoring its instances. <sup>7</sup>Michael Garland, Paul Heckbert: &#x201c;Simplifying Surfaces with Color and Texture using Quadratic Error Metrics&#x201d;, Carnegie Mellon University 1998</p>
<p id="p-0047" num="0061">The QEM of a connected component is defined by all its triangles. Thus, by using the QEM, the mean and orientation axes of each component depend on not only the geometry but also connectivity of the component. For the component shown in <figref idref="DRAWINGS">FIG. 5</figref>, the quadric error matrix can give the unique orientation axes. However, PCA of vertex positions when used for normalizing orientation, can not do the same thing, as it can not distinguish the component from another component (e.g. a pure cylinder) with the same vertex positions. Thus, the quadric error matrix is a better choice for normalization of connected components.</p>
<p id="p-0048" num="0062">In the following, advantages of an exemplary embodiment of the present invention over prior art, particularly [SBM01], are described.</p>
<p id="p-0049" num="0063">Both the orientation and scale of each connected component are normalized in the present invention. Prior art, such as [SBM01], normalizes only the component orientation and can therefore not discover the repeating features in various scales. In [SBM01] it is mentioned that if the dimensions of the oriented bounding boxes (OBBs) of the two meshes do not match, then no further matching is performed.</p>
<p id="p-0050" num="0064">Further, [SBM01] cannot compress transformation information. However, the present invention provides a complete solution for compressing the transformation information, including the position, orientation axes and scaling factors. For restoring a connected component from the corresponding pattern, the transformation information is required. In one embodiment, the transformation information of one connected component includes the position (for translation, 3 floating point values), orientation axes (for rotation, 4 floating point values) and scale factors (3 floating point values). Thus, the uncompressed transformation information for a connected component includes 10 floating point values. As there are usually a large number of connected components, it is an advantage of the present invention that it will significantly decrease the compression ratio of the transformation information of all connected components. And due to the data structure or a mode indication, the decoder can detect it.</p>
<p id="p-0051" num="0065">Since [SBM01] mentions that a repeated instance of a pattern having k vertices requires three integers and seven floating point numbers, and this scheme of encoding begins to yield compression for a repeating pattern of four or more vertices, it is clear that transformation information, at least scale factors, are not clustered or compressed in [SBM01], and therefore a less efficient compression scheme is employed than in the present invention.</p>
<p id="p-0052" num="0066">Further, the present invention may use quadric error matrix method to align components during discovery of repeating patterns. Thus, components with same geometry and different connectivity will have different mean and orientation axes. [SBM01] uses PCA of positions of vertices of the component, so that components with same geometry and different connectivity will have same mean and orientation axes.</p>
<p id="p-0053" num="0067">During pair-wise component matching, both algorithms only compare the positions of vertices after transformation. Thus different components with same geometry and different topology can be distinguished (not in [SBM01]). An enhanced decoder according to the invention calculates the mean and orientation of a pattern to restore its repeating instances.</p>
<p id="p-0054" num="0068">Further, for the degeneration cases of PCA (described above with reference to <figref idref="DRAWINGS">FIG. 5</figref>), the solution of the two methods is different, i.e. the present invention is superior to the solution of [SBM01].</p>
<p id="p-0055" num="0069">Further, in the present invention, the position of all the repeating instances are compressed by a kd-tree based algorithm as described in [OG00]. Further, in the present invention, the orientation axes of the repeating instances are compressed by k-means based clustering analysis. Further, in the present invention, the scale factors of the repeating instances are compressed by k-means based clustering analysis.</p>
<p id="p-0056" num="0070">In one embodiment of the method, signal or apparatus, the transformation information comprises geometric data of a component that is representative for a cluster. In one embodiment of the method, signal or apparatus, the center of the representative geometry pattern is not transmitted, but recalculated at the decoder.</p>
<p id="p-0057" num="0071">In one embodiment of the encoding method, the clustering of at least the orientation axes and the scale factors uses an enhanced k-means clustering method with steps of performing k-means clustering based on an initial parameter k, wherein multiple clusters result;
<ul id="ul0007" list-style="none">
    <li id="ul0007-0001" num="0072">for each of the clusters, determining a variance and comparing the determined variance with an initial variance threshold;</li>
    <li id="ul0007-0002" num="0073">determining the number n of clusters in which the determined variance is higher than the threshold; and</li>
    <li id="ul0007-0003" num="0074">while in one or more clusters the determined variance is higher than the threshold, increasing the parameter k and repeating the steps of performing k-means clustering, based on the increased parameter k, determining for each cluster a variance and comparing the variance with the variance threshold, until the determined variance is below the threshold in all clusters.</li>
</ul>
</p>
<p id="p-0058" num="0075">In one embodiment of the apparatus for encoding, where the clustering of at least the orientation axes and the scale factors uses an enhanced k-means clustering, the apparatus comprises
<ul id="ul0008" list-style="none">
    <li id="ul0008-0001" num="0076">clustering means for performing k-means clustering based on an initial parameter k, wherein multiple clusters result; variance determining means for determining, for each of the clusters, a variance and comparator for comparing the determined variance with an initial variance threshold;</li>
    <li id="ul0008-0002" num="0077">analyzing means for determining the number n of clusters in which the determined variance is higher than the threshold;</li>
    <li id="ul0008-0003" num="0078">and an adder for increasing the parameter k, while in one or more clusters the determined variance is higher than the threshold, wherein the k-means clustering can be repeated based on the increased parameter k until the determined variance is below the threshold in all clusters.</li>
</ul>
</p>
<p id="p-0059" num="0079">In one embodiment, the parameter k is increased by the number n of clusters that have a variance higher than the threshold.</p>
<p id="p-0060" num="0080">In one embodiment, the method for decoding further comprises a step of calculating a mean or center of a component, wherein the transforming is applied to the center. In one embodiment, the decoder further comprises calculating means for calculating a mean or center of a component, wherein the transforming means applies its transforming to the center.</p>
<p id="p-0061" num="0081">In one embodiment of the method for encoding, the step of determining the mean of a component comprises iterative kd-tree based compression with steps of assorting the vertices of the component according to their coordinates in an initial cell, subdividing with each iteration a cell into two child cells, encoding the number of vertices in one of the two child cells and applying the subdivision recursively until each non-empty cell is small enough to contain only one vertex. In one embodiment of the encoder, the means for determining the mean of a component performs iterative kd-tree based compression and has means for assorting the vertices of the component according to their coordinates in an initial cell, means for subdividing with each iteration a cell into two child cells, means for encoding the number of vertices in one of the two child cells and control means for applying the subdivision recursively until each non-empty cell is small enough to contain only one vertex.</p>
<p id="p-0062" num="0082">In one embodiment of the method for encoding, the normalizing step <b>604</b> comprises determining the center of the component, moving the center to the center of the world coordinate system in a transversal shift, rotating the component around 1, 2 or 3 axes, and scaling the component in 1, 2 or 3 dimensions. In one embodiment of the apparatus for encoding, the normalizing means comprises calculating means for determining the center of the component, moving the center to the center of the world coordinate system in a transversal shift, rotating the component around 1, 2 or 3 axes, and scaling the component in 1, 2 or 3 dimensions.</p>
<p id="p-0063" num="0083">In one embodiment of the encoding, a quadric error matrix method is used to align components during discovery of repetitive patterns.</p>
<p id="p-0064" num="0084">In one embodiment of the encoding, the uncompressed transformation information for a connected component includes ten floating point values.</p>
<p id="p-0065" num="0085">In one embodiment, the method for decoding further comprises a step of calculating the mean of each repeating component before restoring its instances, wherein a kd-tree based calculation method is used for calculating the mean. In one embodiment, the apparatus for decoding further comprises calculating means for calculating the mean of each repeating component before restoring its instances, wherein a kd-tree based calculation method is used for calculating the mean.</p>
<p id="p-0066" num="0086">In one embodiment, the method for decoding further comprises an additional step of adding residual data of the particular instance of the pattern before scaling and rotating. In one embodiment, the apparatus for decoding further comprises an additional adding means for adding residual data of the particular instance of the pattern before scaling and rotating.</p>
<p id="p-0067" num="0087">In one embodiment, the method for decoding further comprises an additional step of calculating the mean and orientation of a pattern before restoring its repeating instances. In one embodiment, the apparatus for decoding further comprises calculation means for calculating the mean and orientation of a pattern before restoring its repeating instances.</p>
<p id="p-0068" num="0088">Thus, the present invention solves all above-mentioned problems and shortcomings of the prior art. For example, [SBM01] does not provide a solution for compressing the necessary information for restoring a connected component from the corresponding geometry pattern. Considering the large size of connected components that a 3D engineering model usually has, this kind of information will also consume a big amount of storage.</p>
<p id="p-0069" num="0089">It will be understood that the present invention has been described purely by way of example, and modifications of detail can be made without departing from the scope of the invention.</p>
<p id="p-0070" num="0090">While there has been shown, described, and pointed out fundamental novel features of the present invention as applied to preferred embodiments thereof, it will be understood that various omissions and substitutions and changes in the apparatus and method described, in the form and details of the devices disclosed, and in their operation, may be made by those skilled in the art without departing from the spirit of the present invention. Although the present invention has been disclosed with regard to 3D engineering mesh models, one skilled in the art would recognize that the method and devices described herein may be applied to any 3D models. It is expressly intended that all combinations of those elements that perform substantially the same function in substantially the same way to achieve the same results are within the scope of the invention. Substitutions of elements from one described embodiment to another are also fully intended and contemplated.</p>
<p id="p-0071" num="0091">Each feature disclosed in the description and the claims and drawings may be provided independently or in any appropriate combination. Features may, where appropriate be implemented in hardware, software, or a combination of the two. Reference numerals appearing in the claims are by way of illustration only and shall have no limiting effect on the scope of the claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for encoding a 3D mesh model that comprises a plurality of repeating connected components, the method being executed by an apparatus for encoding 3D mesh models and comprising:
<claim-text>automatically analyzing the 3D mesh model, wherein the repeating components are determined, a center of each component is determined, the components are normalized and then classified into pattern clusters and a representative element of each pattern cluster is determined, wherein the normalizing comprises determining positions, determining scaling factors and classifying the scaling factors into scaling factor clusters, and determining orientation axes and clustering the orientation axes into orientation axis clusters;</claim-text>
<claim-text>assigning unique cluster identifiers to the pattern clusters, scaling factor clusters and orientation axis clusters;</claim-text>
<claim-text>encoding the representative element of each pattern cluster;</claim-text>
<claim-text>encoding the components, wherein the components are compared to the pattern clusters, scaling factor clusters and orientation axis clusters, thereby obtaining at least a pattern cluster identifier, scale factor cluster identifier, scale factor residual, orientation axis cluster identifier and orientation residual;</claim-text>
<claim-text>entropy encoding each component as represented by its respective pattern cluster identifier, position, scale factor cluster identifier, scale factor residual, orientation axis cluster identifier and orientation residual.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the components in a pattern cluster have repeating geometry patterns and are discovered after said normalizing.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the clustering of at least the orientation axes and the scale factors uses an enhanced k-means clustering method with steps of
<claim-text>performing k-means clustering based on an initial parameter k, wherein multiple clusters result;</claim-text>
<claim-text>for each of the clusters, determining a variance and comparing the determined variance with an initial variance threshold;</claim-text>
<claim-text>determining the number n of clusters in which the determined variance is higher than the threshold;</claim-text>
<claim-text>while in one or more clusters the determined variance is higher than the threshold, increasing the parameter k and repeating the steps of performing k-means clustering, based on the increased parameter k, determining for each cluster a variance and comparing the variance with the variance threshold, until the determined variance is below the threshold in all clusters.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the parameter k of the k-means clustering is increased by the number n of clusters that have a variance higher than the threshold.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein for said step of determining for each component a center comprises iterative kd-tree based compression with steps of assorting the vertices of the component according to their coordinates in an initial cell, subdividing with each iteration a cell into two child cells, encoding the number of vertices in one of the two child cells and applying the subdivision recursively until each non-empty cell is small enough to contain only one vertex.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the normalizing step comprises moving the center of a component to the center of the world coordinate system in a transversal shift, rotating the component around 1, 2 or 3 axes, and scaling the component in 1, 2 or 3 dimensions.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the transformation information comprises geometric data defining the pattern of a component that is representative for a cluster.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the center of a component is not transmitted, but recalculated during decoding.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A method for decoding a 3D mesh model, the method being executed by an apparatus for decoding 3D mesh models and comprising:
<claim-text>entropy decoding received data;</claim-text>
<claim-text>extracting a pattern cluster identifier and transformation information, the transformation information comprising one or more transformation cluster identifiers and one or more transformation residuals, wherein the transformation cluster identifiers comprise at least one of: an identifier of a scale factor cluster, an identifier of an orientation axis cluster, and an identifier of a position cluster or shift cluster;</claim-text>
<claim-text>reconstructing a pattern according to the pattern cluster identifier;</claim-text>
<claim-text>reconstructing transformation information according to the transformation cluster identifiers and transformation residuals, the transformation information comprising at least one of a scale factor, an orientation axis and a position; and</claim-text>
<claim-text>transforming the reconstructed pattern according to the reconstructed transformation information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the transformation information comprise a scale factor cluster identifier, a scale factor residual, an orientation axis cluster identifier and an orientation axis residual.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising a step of calculating a center of a component, wherein the transforming is applied to the center.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising a step of adding residual data of the particular instance of the pattern before scaling and rotating.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the transformation information comprises geometric data defining the pattern of a component that is representative for a cluster.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the center of a component is not transmitted, but recalculated during decoding.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. An apparatus for encoding a 3D mesh model that comprises a plurality of repeating connected components being connected components with repeating geometric features, the apparatus comprising
<claim-text>analyzing means for automatically analyzing the 3D mesh model, wherein repeating components are determined, a center of each component is determined, the components are normalized and then classified into pattern clusters and a representative element of each pattern cluster is determined, wherein the normalizing comprises determining positions, determining scaling factors and classifying the scaling factors into scaling factor clusters, and determining orientation axes and clustering the orientation axes into orientation axis clusters;</claim-text>
<claim-text>assigning means for assigning unique cluster identifiers to the pattern clusters, scaling factor clusters and orientation axis clusters;</claim-text>
<claim-text>encoding means for encoding the representative element of each pattern cluster and for encoding the components, wherein the components are compared to the pattern clusters, scaling factor clusters and orientation axis clusters, thereby obtaining a pattern cluster identifier, scale factor cluster identifier, scale factor residual, orientation axis cluster identifier and orientation residual;</claim-text>
<claim-text>entropy encoder for entropy encoding each component as represented by a pattern cluster identifier, position, scale factor cluster identifier, scale factor residual, orientation cluster identifier and orientation residual.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. An apparatus for decoding 3D mesh models, comprising
<claim-text>entropy decoder for entropy decoding received data;</claim-text>
<claim-text>data extraction means for extracting a pattern cluster identifier and transformation information, the transformation information comprising one or more transformation cluster identifiers and one or more transformation residuals, wherein the transformation cluster identifiers comprise at least one of: an identifier of a scale factor cluster, an identifier of an orientation axis cluster, and an identifier of a position cluster or shift cluster;</claim-text>
<claim-text>pattern reconstruction means for reconstructing a pattern according to the pattern cluster identifier;</claim-text>
<claim-text>transformation information reconstruction means for reconstructing transformation information according to the transformation cluster identifiers and transformation residuals, the transformation information comprising at least one of a scale factor, an orientation axis and a position; and</claim-text>
<claim-text>transforming means for transforming the reconstructed pattern according to the reconstructed transformation information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. A non-transitory storage medium having recorded thereon a computer program that when executed on a computer causes the computer to execute a method for encoding a 3D mesh model that comprises a plurality of repeating connected components, the method comprising:
<claim-text>automatically analyzing the 3D mesh model, wherein the repeating components are determined, a center of each component is determined, the components are normalized and then classified into pattern clusters and a representative element of each pattern cluster is determined, wherein the normalizing comprises determining positions, determining scaling factors and classifying the scaling factors into scaling factor clusters, and determining orientation axes and clustering the orientation axes into orientation axis clusters;</claim-text>
<claim-text>assigning unique cluster identifiers to the pattern clusters, scaling factor clusters and orientation axis clusters;</claim-text>
<claim-text>encoding the representative element of each pattern cluster;</claim-text>
<claim-text>encoding the components, wherein the components are compared to the pattern clusters, scaling factor clusters and orientation axis clusters, thereby obtaining at least a pattern cluster identifier, scale factor cluster identifier, scale factor residual, orientation axis cluster identifier and orientation residual;</claim-text>
<claim-text>entropy encoding each component as represented by its respective pattern cluster identifier, position, scale factor cluster identifier, scale factor residual, orientation axis cluster identifier and orientation residual.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
