<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627226-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627226</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12177652</doc-number>
<date>20080722</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>848</us-term-extension>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20130101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>3</main-group>
<subgroup>048</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>715785</main-classification>
<further-classification>715248</further-classification>
<further-classification>715253</further-classification>
<further-classification>715784</further-classification>
<further-classification>715788</further-classification>
<further-classification>715789</further-classification>
</classification-national>
<invention-title id="d2e55">Dynamic web page arrangement</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5799292</doc-number>
<kind>A</kind>
<name>Hekmatpour</name>
<date>19980800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5838326</doc-number>
<kind>A</kind>
<name>Card et al.</name>
<date>19981100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715775</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5847709</doc-number>
<kind>A</kind>
<name>Card et al.</name>
<date>19981200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715850</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5848396</doc-number>
<kind>A</kind>
<name>Gerace</name>
<date>19981200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>5867678</doc-number>
<kind>A</kind>
<name>Amro et al.</name>
<date>19990200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>5973663</doc-number>
<kind>A</kind>
<name>Bates et al.</name>
<date>19991000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6012098</doc-number>
<kind>A</kind>
<name>Bayeh et al.</name>
<date>20000100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6069625</doc-number>
<kind>A</kind>
<name>Nielsen</name>
<date>20000500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6078916</doc-number>
<kind>A</kind>
<name>Culliss</name>
<date>20000600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6088032</doc-number>
<kind>A</kind>
<name>Mackinlay</name>
<date>20000700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715848</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6154205</doc-number>
<kind>A</kind>
<name>Carroll et al.</name>
<date>20001100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>6182133</doc-number>
<kind>B1</kind>
<name>Horvitz</name>
<date>20010100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709223</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>6337697</doc-number>
<kind>B1</kind>
<name>Kim</name>
<date>20020100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715784</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>6338096</doc-number>
<kind>B1</kind>
<name>Ukelson</name>
<date>20020100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>6401094</doc-number>
<kind>B1</kind>
<name>Stemp et al.</name>
<date>20020600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>6412012</doc-number>
<kind>B1</kind>
<name>Bieganski et al.</name>
<date>20020600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>6486892</doc-number>
<kind>B1</kind>
<name>Stern</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>6487541</doc-number>
<kind>B1</kind>
<name>Aggarwal et al.</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>6489968</doc-number>
<kind>B1</kind>
<name>Ortega et al.</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>6523022</doc-number>
<kind>B1</kind>
<name>Hobbs</name>
<date>20030200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>6597314</doc-number>
<kind>B1</kind>
<name>Beezer et al.</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715812</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>6597379</doc-number>
<kind>B1</kind>
<name>Morris et al.</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>6665659</doc-number>
<kind>B1</kind>
<name>Logan</name>
<date>20031200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>6734886</doc-number>
<kind>B1</kind>
<name>Hagan et al.</name>
<date>20040500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>6750850</doc-number>
<kind>B2</kind>
<name>O'Leary</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>6785671</doc-number>
<kind>B1</kind>
<name>Bailey et al.</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00027">
<document-id>
<country>US</country>
<doc-number>6976210</doc-number>
<kind>B1</kind>
<name>Silva et al.</name>
<date>20051200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00028">
<document-id>
<country>US</country>
<doc-number>6996784</doc-number>
<kind>B2</kind>
<name>Haitani et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00029">
<document-id>
<country>US</country>
<doc-number>7107226</doc-number>
<kind>B1</kind>
<name>Cassidy et al.</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00030">
<document-id>
<country>US</country>
<doc-number>7653614</doc-number>
<kind>B2</kind>
<name>Smith</name>
<date>20100100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00031">
<document-id>
<country>US</country>
<doc-number>2003/0053420</doc-number>
<kind>A1</kind>
<name>Duckett et al.</name>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00032">
<document-id>
<country>US</country>
<doc-number>2003/0065770</doc-number>
<kind>A1</kind>
<name>Davis et al.</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00033">
<document-id>
<country>US</country>
<doc-number>2006/0136589</doc-number>
<kind>A1</kind>
<name>Konig et al.</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00034">
<document-id>
<country>US</country>
<doc-number>2008/0134044</doc-number>
<kind>A1</kind>
<name>Bates et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00035">
<document-id>
<country>US</country>
<doc-number>2008/0134064</doc-number>
<kind>A1</kind>
<name>Bates et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00036">
<othercit>Stefan Muenz, Selfhtml, Version 7.0, Apr. 27, 1998, with machine translation of selected sections from http://web.archive.org/web/20020808101148/selfaktuell.teamone.de/archiv/doku/7.0/selfhtml.htm.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00037">
<othercit>Office Action history of U.S. Appl. No. 12/016,074, dates ranging from Jun. 9, 2010 to Feb. 24, 2011.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00038">
<othercit>Office Action history of U.S. Appl. No. 09/574,157, dates ranging from Aug. 13, 2003 to May 7, 2009.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00039">
<othercit>Office Action History of U.S. Appl. No. 12/016,063, dates ranging from Jun. 16, 2010 to Feb. 16, 2011.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00040">
<othercit>Bates, Cary L. et al., US Patent Application entitled &#x201c;Method and Apparatus for Dynamic Web Page Arrangement&#x201d;, U.S. Appl. No. 09/574,157, filed May 18, 2000.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>707  3</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707  5</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715738</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715200</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715205-210</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715243-253</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715705-708</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715760</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715764</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715765</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715767</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715781</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715784-789</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>9</number-of-drawing-sheets>
<number-of-figures>15</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>09574157</doc-number>
<date>20000518</date>
</document-id>
<parent-status>ABANDONED</parent-status>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>12177652</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20080282176</doc-number>
<kind>A1</kind>
<date>20081113</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Bates</last-name>
<first-name>Cary Lee</first-name>
<address>
<city>Rochester</city>
<state>MN</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Majd</last-name>
<first-name>Mahdad</first-name>
<address>
<city>Rochester</city>
<state>MN</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Santosuosso</last-name>
<first-name>John Matthew</first-name>
<address>
<city>Rochester</city>
<state>MN</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Bates</last-name>
<first-name>Cary Lee</first-name>
<address>
<city>Rochester</city>
<state>MN</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Majd</last-name>
<first-name>Mahdad</first-name>
<address>
<city>Rochester</city>
<state>MN</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Santosuosso</last-name>
<first-name>John Matthew</first-name>
<address>
<city>Rochester</city>
<state>MN</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Patterson &#x26; Sheridan LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>International Business Machines Corporation</orgname>
<role>02</role>
<address>
<city>Armonk</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Iturralde</last-name>
<first-name>Enrique</first-name>
<department>2179</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A browser renders a page for display according to user habits. When a user interacts with a page associated with a network address, an entry is made in a file that associates the element on the page of the user interaction with the network address. When the page is visited again, the file is checked to see if any entry exists. If an entry exists and the stored user interaction is still relevant for that page, the page is rendered so that the location the user interacted with is provided at the top of the display, or the element is re-arranged, as in the case of a table, or both re-positioning and re-arranging occurs. Such page rendering reduces the need for the user to scroll through the page to view the desired information.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="167.89mm" wi="210.99mm" file="US08627226-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="251.71mm" wi="182.20mm" orientation="landscape" file="US08627226-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="224.03mm" wi="155.11mm" file="US08627226-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="217.68mm" wi="172.55mm" orientation="landscape" file="US08627226-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="249.00mm" wi="165.18mm" file="US08627226-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="190.50mm" wi="143.51mm" orientation="landscape" file="US08627226-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="235.12mm" wi="161.04mm" file="US08627226-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="197.87mm" wi="170.26mm" file="US08627226-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="233.26mm" wi="158.75mm" file="US08627226-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="230.12mm" wi="149.10mm" file="US08627226-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This is a continuation of U.S. patent application Ser. No. 09/574,157 filed May 18, 2000, now abandoned which is herein incorporated by reference in its entirety.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">1. Field of the Invention</p>
<p id="p-0004" num="0003">The present invention relates to information systems. More particularly, the invention relates to a browser that renders a page to a display according to prior user activity on that page.</p>
<p id="p-0005" num="0004">2. Background of the Related Art</p>
<p id="p-0006" num="0005">Information systems, such as the Internet, provide users with access to a large amount of information. Many users of such systems employ a web browser or similar program to find the information they are interested in. Typically, the user selects, loads, and displays electronic documents, such as Hypertext Markup Language (&#x201c;HTML&#x201d;) documents, utilizing software called a browser, which is typically stored in memory in the user's (client) computer. HTML documents displayed by the browser generally contain areas that, when selected by a user, cause the browser to load and display other HTML documents, allow the user to enter information, or enable other user interaction. A selectable area, such as a hypertext link, may be textual, graphic, or generally any designated area of a displayed HTML document. Hypertext links, for example, are associated with a network address, such as a Uniform Resource Locator (&#x201c;URL&#x201d;), of a destination HTML document that is loaded and displayed when the link is selected by the user.</p>
<p id="p-0007" num="0006">One problem with electronic documents, such as HTML documents, is that the display type and the page formatting can affect the displayed output viewable by the user. HTML documents are typically displayed on any of a variety of display devices, such as Cathode Ray Tubes (&#x201c;CRT's&#x201d;) or liquid crystal displays. Sometimes an entire HTML page can be displayed, other times the user might have to &#x201c;scroll&#x201d; the display, that is, select that portion of the page the user wants to view that is not currently shown, by providing input from a user input device. For example, an HTML page might be loaded so that the top of the page appears at the top of the display, with a bottom portion of the page not being shown.</p>
<p id="p-0008" num="0007">The user can typically manipulate arrow keys, a mouse, scroll wheel or similar device to scroll down the page. Sometimes the width or length of the HTML page exceeds the display area, and a user might have to scroll across or down the screen to view the desired information. The need to scroll to the desired viewing area may be compounded when electronic documents designed for one type of display, such as a desk-top computer display, are viewed on a smaller display, such as the display of a cell phone, which may have only about 11 lines. Unfortunately, the user input devices provided with devices that have small displays are often more cumbersome to use than other scrolling devices, such as track balls or &#x201c;mice&#x201d; provided with desk-top systems.</p>
<p id="p-0009" num="0008">Therefore, there is a need for an apparatus and a method for reducing or eliminating the need to scroll a page.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0010" num="0009">In one embodiment of the invention, a computer-readable, signal-bearing medium containing a program for rendering an electronic document to a display is provided. The program, when read and executed by a computer, gets an electronic address associated with the electronic document. The program then evaluates a data structure to determine if a user has interacted with the electronic document. The data structure contains at least an entry for a user interaction field on the electronic document. If the user has interacted with the electronic document, the program determines if the user interaction field exists on the electronic document. If the user interaction field exists on the electronic document, the program renders the electronic document to the display so that the user interaction field is viewable on the display.</p>
<p id="p-0011" num="0010">In another embodiment another computer-readable, signal-bearing medium containing a program for rendering an electronic document to a display is provided. The program, when read and executed by a computer, gets an electronic address associated with the electronic document. Then the program determines if a first data structure includes a first user interaction type associated with the electronic document or a second user interaction type associated with the electronic document. If the first data structure includes the first user interaction type, the program determines if a first entry for the first user interaction type is present in a second data structure. If the first entry is not present in the second data structure, the program determines if a second entry for the second user interaction type is present in a third data structure. If the second entry is present, the program determines if a user interaction field associated the second entry exists on the electronic document. If the user interaction field exists on the electronic document, the program renders the electronic document to the display so that the user interaction field is viewable on the display.</p>
<p id="p-0012" num="0011">In another embodiment, a method for rendering a document to be displayed on a networked display device is provided. The method retrieves an electronic document according to a network address. The method then determines if an entry associated with the electronic document exists in a data structure, the entry including a user interaction field. If the entry exists, the method determines if the user interaction field appears on the electronic document. If the user interaction field appears on the electronic document, the method renders a page to display the user interaction field in a viewable area of the networked display device.</p>
<p id="p-0013" num="0012">In another embodiment, another method for rendering an electronic document to be displayed on a networked display device is provided. The method retrieves the electronic document according to a network address and then determines if a first entry associated with the electronic document exists in a data structure, the first entry including a first user interaction field and a first count. If the first entry exists in the data structure, the method determines if the first user interaction field appears on the electronic document. If the first user interaction field appears on the electronic document, the method moves the first user interaction field from a first current location on the electronic document to a viewable portion of the display. The method also determines if the data structure includes a second entry associated with the electronic document, the second entry including a second user interaction field and a second count. If the second entry exists in the data structure, the method determines if the second user interaction field appears on the electronic document. If the second user interaction field appears on the electronic document, the method moves the second user interaction field from a second current location on the page to the viewable portion of the display, wherein the second user interaction field is displayed above the first user interaction field if the second count is greater than the first count.</p>
<p id="p-0014" num="0013">In another embodiment, a method for storing user interaction habits with an electronic document is provided. The method gets a first user interaction with the electronic document and a network address associated with the page. The method then determines if the first user interaction is a first user interaction type. If the first user interaction is the first user interaction type, the method gets electronic document field data associated with the first user interaction and stores the electronic document field data according to the first user interaction type and the network address. The method increments and stores a count associated with the first user interaction.</p>
<p id="p-0015" num="0014">In another embodiment, a configurable client computer for use in a client-server computer system is provided. The client computer includes a display and a browser capable of rendering electronic documents to the display. The browser can access user habit data in association with electronic document address data. A renderer invoked by the browser is able to render a selected electronic document to the display according to the user habit data.</p>
<p id="p-0016" num="0015">In another embodiment, a configurable client computer for use in a client-server computer system is provided. The client computer includes a display capable of displaying, at most, a first number of lines and a browser capable of rendering electronic documents to the display. The browser can access user habit data in association with page address data. A renderer evaluates the user habit data in a data file to render a selected electronic document to the display by rearranging elements on the selected electronic document according to the user habit data.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0017" num="0016">The teachings of the present invention can be readily understood by considering the following detailed description in conjunction with the accompanying drawings, in which:</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 1</figref> is a simplified block diagram of a client-server computer system according to an embodiment of the present invention.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 2</figref><i>a </i>is a simplified flow chart of a portion of a browser according to an embodiment of the present invention.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 2</figref><i>b </i>is a simplified representation of a page renderer file.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 3</figref> is a simplified flow chart of a process to store data for user habits with a page.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 4</figref><i>a </i>is a simplified flow chart of a page renderer process using page alteration.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 4</figref><i>b </i>is a simplified flow chart of a page renderer process using page positioning.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 5</figref><i>a </i>is a simplified flow chart of an embodiment of a table renderer process.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 5</figref><i>b </i>is a simplified representation of a data structure of a table file entry.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 6</figref><i>a </i>is a simplified representation of a table of information and links as might be shown on a display of a networked device as a portion of an electronic document.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 6</figref><i>b </i>is an exemplary table shown on a display of a networked device according to the operation of an embodiment of the present invention.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 6</figref><i>c </i>is a portion of the exemplary table not displayed on networked device according to the operation of an embodiment of the present invention.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 7</figref><i>a </i>is a simplified flow chart of an embodiment of a link renderer process.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 7</figref><i>b </i>is a simplified representation of a data structure of a link-taken file entry.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 8</figref><i>a </i>is a simplified flow chart of an embodiment of a data-entered process.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 8</figref><i>b </i>is a simplified representation of a data structure of a data-entered file entry.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<p id="p-0033" num="0032">To facilitate understanding, identical reference numerals have been used, where possible, to designate identical elements that are common to the figures.</p>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT</heading>
<p id="p-0034" num="0033">The present invention relates to adapting a displayed page according to user activity. A page is typically downloaded from a server computer (&#x201c;server&#x201d;) to a client computer (&#x201c;client&#x201d;). A browser in the client computer renders the page according to information received from the server. Page information can be sent from the server to the client in a variety of formats, such as HTML, hand-held device markup language (&#x201c;HDML&#x201d;), wireless application protocol (&#x201c;WAP&#x201d;), or other format. For simplicity of discussion, HTML pages will be used for purposes of illustration only.</p>
<p id="p-0035" num="0034">As will be described in detail below, aspects of the preferred embodiment pertain to specific method steps implementable on computer systems. In an alternative embodiment, the invention may be implemented as a computer program-product for use with a computer system. The programs defining the functions of the preferred embodiment can be delivered to a computer via a variety of signal-bearing media, which include, but are not limited to, (i) information stored on a non-writable storage medium (e.g., read-only memory (&#x201c;ROM&#x201d;) devices within a computer such as a ROM or compact-disk ROM (&#x201c;CD-ROM&#x201d;) readable by a CD-ROM drive); (ii) alterable information stored on writable storage media (e.g., floppy disks within a diskette drive or a hard-disk drive); or (iii) information conveyed to a computer by a communications medium, such as through a computer or telephone network, including wireless communications. Such signal-bearing media, when carrying computer-readable instructions that direct the functions of the present invention, represent alternative embodiments of the present invention.</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 1</figref> depicts a data processing system <b>100</b> in which the preferred embodiment may be implemented. In general, the data processing system <b>100</b> includes a client computer <b>122</b> and at least one server computer <b>124</b> (additional servers <b>124</b><i>a</i>-<b>124</b><i>n </i>are shown). The client computer <b>122</b> and the server computer <b>124</b> may be components of the same computer system or may be separate components connected via a network <b>126</b>, such as the Internet. The network may be a wire or cable directly electronically coupling the client to the server, or may include a wireless transmission portion, such as are used with cell phones and other &#x201c;wireless&#x201d; devices. Accordingly, it is understood that the client might include other components, such as a receiver and modem (i.e., &#x201c;wireless modem&#x201d;).</p>
<p id="p-0037" num="0036">The client computer <b>122</b> includes a Central Processing Unit (&#x201c;CPU&#x201d;) <b>128</b> connected via a bus <b>130</b> to memory <b>132</b>, storage <b>134</b>, input device <b>136</b> and output device <b>138</b>. The input device <b>136</b> can be any device to give input to the client computer <b>122</b>. For example, a keyboard, keypad, light pen, touch screen, button, mouse, track ball or speech recognition unit could be used. The output device <b>138</b> is preferably any conventional display screen, such as liquid-crystal displays (&#x201c;LCDs&#x201d;) or cathode-ray tubes (&#x201c;CRTs&#x201d;) and, although showing separately from the input device <b>136</b>, the output device <b>138</b> and input device <b>136</b> could be combined. The output device generally includes a viewable portion <b>139</b> that a user can read from. For example, a display screen with an integrated touch screen, and a display with an integrated keyboard, or a speech recognition unit combined with a text speech converter could be used.</p>
<p id="p-0038" num="0037">While memory <b>132</b> is shown as a single entity, it should be understood that memory <b>132</b> may in fact comprise a plurality of modules, and that the memory <b>132</b> may exist at multiple levels, from high speed registers and caches to lower speed but larger DRAM and SRAM chips. The memory <b>132</b> contains a browser program <b>140</b> that, when executed on the CPU <b>128</b>, provides support for navigating between the various servers <b>124</b>, <b>124</b><i>a</i>-<b>124</b><i>n</i>, for locating addresses at one or more of the servers, for entering date into data fields, and other functions, such as page rendering. The contents of memory <b>132</b> can be loaded from and stored to the storage <b>134</b> as CPU <b>128</b> has a need for it.</p>
<p id="p-0039" num="0038">In one embodiment, storage <b>134</b> is non-volatile memory, such as non-volatile random access memory (&#x201c;RAM&#x201d;), flash memory, magnetic memory or optical storage. In some embodiments, it could be ordinary RAM. Although storage <b>134</b> is shown as a single unit, it could be any combination of fixed and/or removable storage devices, such as fixed disc drives, floppy disc drives, tape drives, removable memory cards or optical storage. Memory <b>132</b> and storage <b>134</b> could be part of one virtual address space spanning multiple primary and secondary storage devices. The storage <b>134</b> contains various data structures and, as shown in <figref idref="DRAWINGS">FIG. 1</figref>, storage <b>134</b> contains data files <b>141</b><i>a</i>, <b>141</b><i>b</i>, <b>141</b><i>c </i>(and possibly others). The data files store, among other data, user habit information and are used in rendering a page for display.</p>
<p id="p-0040" num="0039">In a particular embodiment, a page renderer data file <b>141</b> has a datum entry if a particular type of datum or data is contained in other data files <b>141</b><i>a</i>, <b>141</b><i>b</i>, <b>141</b><i>c</i>. The other data files store user interaction habits for various types of user interactions with an electronic document. For example, a first data file <b>141</b><i>a </i>could be a table interaction file, a second data file <b>141</b><i>b </i>could be a link interaction file, and a third data file <b>141</b><i>c </i>could be a data entered interaction file. If a user interaction comprising a table interaction, a link interaction, or a data entry interaction occurs, the respective data file records information about the user interaction with the electronic document and provides an entry, i.e., a key, to a data field (see <figref idref="DRAWINGS">FIG. 2</figref><i>b</i>, reference numeral <b>224</b>) of the page renderer data file <b>141</b>. The next time the user interacts with the electronic document, the page renderer data file initiates a page renderer process. Those skilled in the art will appreciate that these data files and their inter-relation are exemplary only. For example, the key could be generated during an evaluation step of a process (e.g., when a user interaction is evaluated to determine if it belongs to a type relating to page rendering), or concurrently with the creation of an entry for the interaction data file.</p>
<p id="p-0041" num="0040">Each server computer <b>124</b> generally comprises a CPU <b>142</b>, memory <b>144</b>, and storage <b>146</b> to one another by a bus <b>148</b>. It is understood that this block diagram is simplified for purposes of illustration, and that the actual server components might be physically separated, and that the server might include other components, such as displays and input devices, which are not shown. The memory <b>144</b> includes random access memory and/or other writable memory sufficiently large to hold the necessary programming and data structures that are located on the server computer <b>124</b> according to a network information address, e.g., a URL.</p>
<p id="p-0042" num="0041">As shown, the memory <b>144</b> includes a hyper-text transfer protocol (&#x201c;HTTP&#x201d;) server process <b>145</b> adapted to service requests from the client computer <b>122</b> regarding HTML documents, which can be called from storage and/or memory, and example of which is the electronic document <b>147</b> in memory <b>144</b>. The HTTP server process <b>145</b> is merely illustrative and other protocols known and unknown in the art are contemplated by embodiments of the invention. The programming and data structures may be accessed and executed by the CPU <b>142</b> as needed. The storage <b>146</b> is provided for long-term storage of implementation code and data needed during operation. Although a specific hardware configuration is shown for data processing system <b>100</b>, embodiments of the present invention include any hardware configuration that allows the browsing of documents, regardless of whether the computer system is a complicated, multi-user computing apparatus, a single-user workstation, or a network appliance that does not have non-volatile storage of its own.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 2</figref><i>a </i>is a simplified flow chart of a browser process <b>200</b> that occurs as a user operates the browser. The process starts (step <b>202</b>) by launching the browser program (<figref idref="DRAWINGS">FIG. 1</figref>, reference numeral <b>140</b>). During operation, the user initiates various actions, or the browser calls actions, or the browser program or external programs (e.g., server program(s)) (step <b>204</b>) may provide actions. For purposes of illustration, such actions will be called &#x201c;events.&#x201d; For example, an event might be to render a page downloaded from a server or stored in the memory of the client. The browser then determines (step <b>206</b>) if the event is to render a page. If so, the browser proceeds to a page renderer process at step <b>208</b>. If the event is something other than to render a page, the browser continues in its execution and handles the event (step <b>210</b>) before returning to the get the next event.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 2</figref><i>b </i>is a simplified representation of a page renderer file <b>220</b> that is used in a page renderer process. The page renderer file is stored as a data file, for example data file <b>141</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>. The page render file includes a network address <b>222</b> for an electronic document and a type <b>224</b>. For purposes of discussion, the electronic document will be referred to as a &#x201c;page.&#x201d; The type represents a type of previous user interaction with the electronic document that invokes the page renderer process to present the document on a display according to user habits of interacting with the document.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 3</figref> is a simplified flow chart of a computer program process <b>300</b> to store user interaction habits with a page. The process starts (step <b>302</b>) when a user interacts with a currently displayed page. The user can interact with pages in a variety of fashions, such as to scroll the page vertically or horizontally, to scroll through a table in the page, to enter data into a data entry field on the page, or to select a link on the page, among other actions. The process gets the user interaction (step <b>304</b>) and the network address, e.g., URL, associated with the page being displayed (step <b>306</b>). Getting the URL provides correlation information for entry into the page renderer file.</p>
<p id="p-0046" num="0045">The process <b>300</b> then determines which type of user interaction has occurred. For purposes of illustration, the first determination (step <b>308</b>) is whether the user is interacting with a table. If the answer is YES, then the process gets the table name, table row, and table column (step <b>310</b>). With the information received from step <b>310</b>, the process then adds or updates data in the table renderer file (step <b>312</b>). The table renderer file may contain entries relating to the URL, the table name, the table row, the table column, and a count indicating user activity or user habits on the page, for example. After updating or adding data in the table renderer file (step <b>312</b>), the process <b>300</b> returns to get another user interaction (step <b>304</b>), if any.</p>
<p id="p-0047" num="0046">If the user has not yet interacted with the page, the process adds an entry to the table renderer file if the user interaction is a type the process records for page rendering purposes. Updating occurs if there are already entries in the table renderer file prior to the present user interaction. Incrementing a count associated with each page and type of user interaction is one way the table renderer file is updated. Thus, the count represents how many times the user has interacted with a location on a displayed page over a period of time, i.e., the user's interaction habits. The count field might fill up eventually, or might represent stale user habit data. Thus, the count field may have additional attributes, such as when the user interaction occurred. Another program, running in the background, for example, could keep the count representative of current user habits by degrading the count over time.</p>
<p id="p-0048" num="0047">If, at step <b>308</b>, the user interaction is not with a table, then the process <b>300</b> determines if the user is interacting with a link (step <b>314</b>). If the user interaction is with a link, then the process gets the link taken (step <b>316</b>) and adds to or updates the link file (step <b>318</b>) with entries for the network address, the link taken, and an associated count for that link on that page. After adding to or updating the data in the link renderer file, the process returns to the get another user interaction (step <b>304</b>), if any.</p>
<p id="p-0049" num="0048">If the user interaction was not to take a link from the displayed page, then the process <b>300</b> proceeds to determine if the user interaction was to enter data (step <b>320</b>). If the user entered data, then the process gets page field information, such as the HTML element name, where the user entered data (step <b>322</b>) and adds to or updates data in a data entered renderer file (step <b>324</b>). The data entered renderer file may contain, for example, the network address, page element name associated with the data entry field, and a count. After adding or updating the data in the data entered renderer file, the process <b>300</b> returns to get another user interaction (step <b>304</b>), if any.</p>
<p id="p-0050" num="0049">If the user interaction was not to enter data, then the process <b>300</b> could proceed to further decision nodes with similar branching operations for other types of user interaction(s) <b>321</b>. For example, a user might simply scroll down or across a page, and the process might record how many rows or columns are scrolled. After the types of entries have been evaluated, the process returns to get the next user interaction (step <b>304</b>), if any.</p>
<p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. 4</figref><i>a </i>is a simplified flow chart of a page renderer process <b>400</b> according to an embodiment of the present invention. This page renderer process alters a page display according to user habits. Referring briefly again to <figref idref="DRAWINGS">FIG. 2</figref><i>a</i>, step <b>206</b>, if the browser encounters an event that invokes page rendering, the page renderer process <b>400</b> is started (step <b>402</b>). The page renderer process gets the network address (step <b>404</b>), such as a URL, of the page to be rendered and evaluates whether there are any entries in the page renderer file (step <b>406</b>). If there are no entries in the page renderer file, the page is formatted (step <b>408</b>) and rendered (step <b>410</b>), after which the page renderer process is done (step <b>412</b>), and returns to the main browser program (step <b>414</b>).</p>
<p id="p-0052" num="0051">There would not be an entry in the page renderer file, for example, if the user had not previously visited the page, or if he had previously visited the page but had not further interacted with the page, or if he had previously interacted with the page, but not in a way that would create an entry in the page renderer file for that page. If there is an entry for that page in the page renderer file, the page renderer process <b>400</b> proceeds to determine the type of entry. In a particular embodiment, the page renderer file has an entry (i.e., key or TRUE flag) if any one of a specific type of user interaction has previously occurred with that page. One of skill in the art will recognize that the order shown is exemplary only, and other orders of decisions and related actions could be taken. Additionally, other types of entries (user interactions) could be made, which would have additional associated process flows.</p>
<p id="p-0053" num="0052">Referring again briefly to <figref idref="DRAWINGS">FIG. 1</figref>, the data files <b>141</b><i>a</i>, <b>141</b><i>b</i>, <b>141</b><i>c</i>, store page renderer information relating to user habits. The sum of the individual data files are collectively referred to as the &#x201c;page renderer file&#x201d; <b>141</b>. If an entry is present in any of the data files that make up the page renderer file, then the page renderer process proceeds to step <b>416</b>, which evaluates whether there is an entry in the table renderer file (e.g., reference numeral <b>141</b><i>a </i>in <figref idref="DRAWINGS">FIG. 1</figref>). If there is an entry in the table renderer file, then the page renderer process <b>400</b> proceeds to a table renderer process (step <b>418</b>). After the table renderer process is complete or if there is no entry in the table renderer file, the page renderer process <b>400</b> proceeds to the next step <b>420</b>.</p>
<p id="p-0054" num="0053">At step <b>420</b>, the page renderer process <b>400</b> evaluates whether there is an entry in a link renderer file (e.g., reference numeral <b>141</b><i>b </i>in <figref idref="DRAWINGS">FIG. 1</figref>). If there is an entry in the link renderer file, then the page renderer process proceeds to the link renderer process (step <b>422</b>). After the link renderer process is complete or if there is no entry in the link renderer file, the page renderer process <b>400</b> proceeds to the next step <b>424</b>.</p>
<p id="p-0055" num="0054">At step <b>424</b>, the page renderer process <b>400</b> evaluates whether there is an entry in a data entered file (e.g., reference numeral <b>141</b><i>c </i>in <figref idref="DRAWINGS">FIG. 1</figref>). If there is an entry in the data entered renderer file, then the page renderer process <b>400</b> proceeds to a table entered renderer process (step <b>426</b>). After the data entered renderer process is complete, the page renderer process formats the page (step <b>428</b>) and renders the page (step <b>430</b>).</p>
<p id="p-0056" num="0055">The steps of formatting and rendering the page may alter the page, such as by placing a particular line or lines of the document at the top of the page, may re-arrange elements of the page, such as lines of a table displayed on the page, may alter the page in a combination of ways, or otherwise put the page to the display according to the page renderer process <b>400</b>. After formatting and rendering the page (steps <b>428</b> and <b>430</b>), the page renderer process is done (step <b>412</b>) and returns to the main browser program (step <b>414</b>).</p>
<p id="p-0057" num="0056">If there are entries in more than one renderer file, the process can be structured so that the last-evaluated entry is what determines page rendering. In other words, if there is a link taken entry and a data entered entry in the respective data files, the page is rendered to show the data entry field at the top of the displayed page because it is the last type of user interaction evaluated.</p>
<p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. 4</figref><i>b </i>is a simplified flow chart of a page renderer process <b>450</b> according to another embodiment of the present invention. This page renderer process positions a page on a display according to user habits. Referring briefly again to <figref idref="DRAWINGS">FIG. 2</figref><i>a</i>, step <b>206</b>, if the browser encounters an event that invokes page rendering, the page renderer process <b>450</b> starts (step <b>402</b>&#x2032;). The page renderer process <b>450</b> gets the network address (step <b>404</b>&#x2032;), such as a URL, of the page to be rendered and evaluates whether there is an entry in the page renderer file (step <b>406</b>&#x2032;), which would indicate a user had previously interacted with that page in a particular fashion. If there is no entry, the page is formatted (step <b>408</b>&#x2032;) and rendered (step <b>410</b>&#x2032;) to the display. The page renderer process is then done (step <b>412</b>&#x2032;) and the page renderer process <b>450</b> returns to the main browser program (step <b>414</b>&#x2032;).</p>
<p id="p-0059" num="0058">If there is an entry in the page renderer file, then the page renderer process continues to a page positioning step <b>452</b>. Those skilled in the art will appreciate that the decision node <b>406</b>&#x2032; of <figref idref="DRAWINGS">FIG. 4</figref><i>b </i>and <b>406</b> of <figref idref="DRAWINGS">FIG. 4</figref><i>a </i>could be combined, with an additional branch being added to the decision node depending on the type of page rendering desired according to the user interaction type. Similarly, the processes might share common steps, such as standard formatting <b>408</b>, <b>408</b>&#x2032; and rendering <b>410</b>, <b>410</b>&#x2032;, for example.</p>
<p id="p-0060" num="0059">The page positioning step <b>452</b> recalls user-habit page positioning data which could be stored in the page renderer file or another data structure, such as a page positioning data file. For example, if the user, after loading the page, scrolls the page to view a particular region of the page, a page positioning data file stores a page element or elements associated with the viewed page.</p>
<p id="p-0061" num="0060">The region of the page that the user views typically depends on the display size and page size. An entry in the page renderer file counts, for example, how many times the user has scrolled to a particular position (generally indicated by the top displayed line) on a particular page, which would provide a user interaction field in the entry for the page renderer file. Thus, different counts are associated with the times the user has scrolled to different lines of the page. The user interaction position on the electronic document is determined by the number of lines scrolled or by HTML elements, for example. Such data provides user interaction field data to locate a position of an electronic document with which the user has interacted.</p>
<p id="p-0062" num="0061">The page positioning step <b>452</b> selects the entry in the page renderer file with the highest count, and provides page positioning information for formatting (step <b>454</b>) and rendering (step <b>456</b>) the page. The page positioning information includes information such as a number or lines to be scrolled from an initial position, HTML elements associated with a line or lines of the page (such as line breaks), or similar information that directs the process to re-position the displayed page so that the user views the line he has most often scrolled to.</p>
<p id="p-0063" num="0062">The operation of the process shown in <figref idref="DRAWINGS">FIG. 4</figref><i>b </i>is different from the operation of the process shown in <figref idref="DRAWINGS">FIG. 4</figref><i>a </i>in that the displayed page is not re-arranged in the process of <b>4</b><i>b</i>, but merely positioned so that the most interacted with portion of the page is shown at or near the top of the display, thus reducing or eliminating the need to scroll to that location on the page. It is specifically understood that the processes illustrated in <figref idref="DRAWINGS">FIGS. 4</figref><i>a </i>and <b>4</b><i>b </i>could be combined. For example, the process <b>400</b> shown in <figref idref="DRAWINGS">FIG. 4</figref><i>a </i>can re-arrange a table, and the process <b>450</b> shown in <figref idref="DRAWINGS">FIG. 4</figref><i>b </i>can place the re-arranged table at the top of the displayed page.</p>
<p id="p-0064" num="0063">User interaction with a displayed page may change the page according to conventional browser operation, such as when the user scrolls the page or enters data. The present invention, in comparison, stores data relating to user interaction habits and renders a page according to those habits the next time the user visits that page. In other words, while the user is interacting with a displayed page, the present invention is gathering statistics.</p>
<p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. 5</figref><i>a </i>is a simplified flow chart of a table renderer process <b>500</b> illustrating one embodiment of step <b>418</b> of <figref idref="DRAWINGS">FIG. 4</figref><i>a</i>. The table renderer process <b>500</b> orders the data in the table renderer file by the count field (&#x201c;count&#x201d;) (step <b>502</b>). The count identifies the row of the table the user has interacted with the most. For each entry in the table renderer file (step <b>504</b>), the table renderer process gets the entry (i.e., the stored prior user interaction and associated URL) (step <b>506</b>). The table renderer process <b>500</b> evaluates (step <b>508</b>) whether the requested page still contains (would display) the table row that is stored in the table renderer file. If the row does not still exist in the table, then the table renderer process returns to get the next entry in the table renderer file and does not change how the page will be displayed. If the data row still exists in the table, the table renderer process removes the data row from its current table position (step <b>510</b>) and moves the table row to the top of the table (step <b>512</b>), additionally, the table row can be positioned at the top of the requested page. After processing the last entry in the table render file, the process <b>500</b> is exited at step <b>514</b>.</p>
<p id="p-0066" num="0065">In a particular embodiment, the table renderer process <b>500</b> arranges the entries in the table renderer file so that the lowest count is at the &#x201c;top&#x201d; of the file list (i.e., the first-evaluated entry) and the highest count is at the bottom of the list. In this fashion, as the table renderer process evaluates the entries in the table renderer file, the entry with the highest count is evaluated last, thus displaying the table row with the highest count at the top of the table. Prior entries would be temporarily positioned at the top of the table, but the ultimate top row of the table would reflect the highest count.</p>
<p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. 5</figref><i>b </i>is a simplified representation of a data structure of a table renderer file entry <b>520</b>. The data structure includes a network address <b>522</b>, a table name <b>524</b>, a row <b>526</b> of the table, a column <b>528</b> of the table, and a count <b>530</b>. The row and column entries provide user interaction fields to associate a position of the electronic document with the user interaction. The table renderer file could include other fields, such a time field representing how long a user stays on a row of the table.</p>
<p id="p-0068" num="0067"><figref idref="DRAWINGS">FIGS. 6</figref><i>a</i>-<b>6</b><i>c </i>are simplified representations of tables displayed on a user's display illustrating operation of an embodiment of the present invention. <figref idref="DRAWINGS">FIG. 6</figref><i>a </i>is a simplified example of a table that might be displayed on an HTML page. All entries in the table could be selectable to link the table entry with the stock name, chart of stock price, and recent news, for example. The entries in the table are one type of page element, as are links, data entry fields, and line breaks, among others. A page is typically made up of several elements that the user can interact with in various ways. The user might enter data into a field, take a link, or scroll to a particular position on the page, the position being defined according to page elements such as a line number.</p>
<p id="p-0069" num="0068">For purposes of discussion, it is assumed that the display could not show the entire table, but rather that the display can show only four lines of the table. However, the present invention also applies to situations where the entire table can be shown on a display. For example, even though the display can show the entire table, it may be desirable to have the highest-count row displayed at the top of the table, or to have a requested page rendered so that the display shows the most-requested line of the page at the top of the display. It is further assumed that the user is interested in linking to information relating to HWP and INTC, and visits these links frequently by scrolling to them and selecting the links, and that the user never interacts with the row relating to JMAR. With conventional browsers, the user would typically scroll down the page to find the table, at which point only the first four lines would be displayed (i.e., IBM, JMAR, SUNW, and VCAI). The user would typically then have to continue scrolling if he wanted to view the row containing HWP, for example.</p>
<p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. 6</figref><i>b </i>shows the lines that would be on the client's display when the user subsequently requests the page containing the table. A browser according to an embodiment of the present invention renders the page to display the previously visited information in a selected arrangement. First, the browser displays the page at a point showing the table. Second, the browser re-arranges the table to display the rows having information on HWP and INTC at the top of the table. <figref idref="DRAWINGS">FIG. 6</figref><i>c </i>shows the lines that the browser would not display, including JMAR, which has dropped to the bottom row of the table. The user could scroll the page down to view these rows of the table, if desired. Similarly, the invention can re-arrange other items on a page, such as links, images, or headlines. Furthermore, the browser could track the overall time spent by the user at various points of a URL and initially position the client display to show the part of the URL that the user has spent the most time on. Such time data could decide row or other entry priority if the counts for two rows are the same, for example.</p>
<p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. 7</figref><i>a </i>is a simplified flow chart of a link renderer process <b>700</b> showing one embodiment of step <b>422</b> of <figref idref="DRAWINGS">FIG. 4</figref><i>a</i>. The page renderer process <b>400</b> of FIG. <b>4</b><i>a </i>invokes the link renderer process <b>700</b> when the user selects a page and the link renderer file has an entry associated with that page. The link renderer process <b>700</b> evaluates each entry in the link renderer file (step <b>702</b>) by getting an entry (step <b>704</b>) and evaluating if the page still displays the link associated with the entry (step <b>706</b>).</p>
<p id="p-0072" num="0071">If the link does not still exist on the page, then the link renderer process <b>700</b> returns to get the next entry in the link renderer file, and does not re-arrange the display field (i.e., portion of the displayed page) or re-position the page. If the link still exists on the page, the link renderer process removes the link from its current position (step <b>708</b>) and moves the link to the top of the displayed page (step <b>710</b>). After processing the last entry in the link render file, the process <b>700</b> exits at step <b>712</b>.</p>
<p id="p-0073" num="0072"><figref idref="DRAWINGS">FIG. 7</figref><i>b </i>is a simplified representation of a data structure of a link-taken file entry <b>720</b>. The entry includes a network address <b>722</b> associated with the page on which the link occurred when the user interacted with the link, the link taken by the user <b>724</b>, and a count <b>726</b>.</p>
<p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. 8</figref><i>a </i>is simplified flow chart of a data entered renderer process <b>800</b> showing one embodiment of step <b>426</b> of <figref idref="DRAWINGS">FIG. 4</figref><i>a</i>. The page renderer process <b>400</b> of <figref idref="DRAWINGS">FIG. 4</figref><i>a </i>invokes the data entered renderer process <b>800</b> when a user selects a page and the data entered renderer file has an entry associated with that page. The data entered renderer process <b>800</b> evaluates each entry (step <b>802</b>) in the data entered renderer file by getting an entry (step <b>804</b>) and evaluating if a data entry field, such as an HTML element, associated with the entry still appears on the current (requested) page (step <b>806</b>).</p>
<p id="p-0075" num="0074">If the data entry field does not still exist on the page, then the data entered renderer process <b>800</b> returns to get the next entry in the data entered renderer file, and does not re-arrange the displayed page. If the data entry field still exists on the page, then the data entered renderer process removes the data entry field from its position on the formatted page (step <b>808</b>) and moves the data entry field to the top of the page (step <b>810</b>). After processing the last entry in the data entered file, the process <b>800</b> exits at step <b>812</b>. <figref idref="DRAWINGS">FIG. 8</figref><i>b </i>is a simplified representation of a data structure of a data-entered file entry <b>820</b>. The data-entered file entry includes a network address <b>822</b>, a data entry field identifier, such as an HTML element name, <b>824</b> and a count <b>826</b>. While the present invention has been described with respect to the preferred and alternative embodiments, it will be understood by those skilled in the art that various changes in detail may be made therein without departing from the spirit, scope, and teaching of the invention. For example, in a further embodiment, each of the renderer processes could include a device query step to determine the number of lines available for display and further modify the rendering of the displayed page. In yet a further embodiment, the display resolution could be stored for use in the page rendering process as part of the as-provided client. Accordingly, the herein disclosed invention is to be limited only as specified in the following claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A client computer for use in a networked system, the computer comprising:
<claim-text>a display having a viewable area; and</claim-text>
<claim-text>browsing and rendering software configured to at least:
<claim-text>display a browser window in the display, the browser window containing a scroll bar,</claim-text>
<claim-text>receive prompts from a user to access pages having network addresses located on server computers of the networked system, the pages each having a displayable size exceeding the viewable area of the display and a default layout; and</claim-text>
<claim-text>when prompted by the user to access a given page at a specified network address:
<claim-text>retrieve the given page from the specified network address on the respective server computer;</claim-text>
<claim-text>access user interaction data located on the client computer and associated with the specified network address, the user interaction data describing previous user interaction with an element of the given page via the browser; and</claim-text>
<claim-text>render the given page to the browser window in the display by repositioning the given page according to the user interaction data from a default position so that the element is moved into the viewable area of the display and wherein, after the given page is rendered, the scroll bar is positioned to allow the user to scroll the given page upwards to bring a top portion of the given page from an unviewable position into the viewable area of the display, and wherein the default layout of the given page is maintained while being scrolled.</claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The computer of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the browsing and rendering software repositions the element to a page location at a top position of the display.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The computer of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the element of a given page is selected from the group consisting of a table, a link, a data entry field, and a scroll bar.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The computer of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein accessing user interaction data further comprises:
<claim-text>getting a first user interaction with the element of the given page;</claim-text>
<claim-text>determining if the first user interaction is a first user interaction type; and</claim-text>
<claim-text>if the first user interaction is the first user interaction type:
<claim-text>getting at least an electronic document element datum associated with the first user interaction, and</claim-text>
<claim-text>storing the electronic document element datum; and</claim-text>
</claim-text>
<claim-text>storing a first count associated with the electronic document element datum, wherein the count represents a number of user interactions of the first user interaction type with the element of the given page.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The computer of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the first user interaction type is selected from the group consisting of interaction with a table, interaction with a link, interaction with a data entry field, and scrolling.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The computer of <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising steps, after storing the first count, of:
<claim-text>getting a second user interaction with a different element of the given page;</claim-text>
<claim-text>determining if the second user interaction is the first user interaction type;</claim-text>
<claim-text>if the second user interaction is not the first user interaction type:
<claim-text>evaluating if the second user interaction is a second user interaction type; and</claim-text>
</claim-text>
<claim-text>if the second user interaction is the second user interaction type:
<claim-text>getting at least a second electronic document element datum associated with the second user interaction;</claim-text>
<claim-text>storing the second electronic document element datum; and</claim-text>
<claim-text>incrementing a second count associated with the second electronic document element datum, wherein the second count represents a number of user interactions of the second user interaction type with the different element of the given page.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The computer of <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising steps, after storing the first count, of:
<claim-text>getting a second user interaction with a different element of the given page;</claim-text>
<claim-text>determining if the second user interaction is the first user interaction type; and</claim-text>
<claim-text>if the second user interaction is the first user interaction type of user interaction:
<claim-text>getting at least a second electronic document element datum associated with the second user interaction;</claim-text>
<claim-text>storing the second electronic document element datum; and</claim-text>
</claim-text>
<claim-text>incrementing a second count associated with the second electronic document element datum, wherein the second count represents a number of user interactions of the first user interaction type with the different element of the given page.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The computer of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein repositioning the given page according to the user interaction data further comprises determining a greater count value as between a value of the first count a value of the second count so that the element associated with the greater count value is moved into the viewable area of the display.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A method for using user interaction data on a client computer, the method comprising:
<claim-text>displaying a viewable area of a display using a browser having a scroll bar;</claim-text>
<claim-text>receiving a prompt from a user to access a page having a network address located on a server computer of the networked system, the page having a displayable size exceeding the viewable area of the display and a default layout; and</claim-text>
<claim-text>after receiving the prompt by the user to access the page at a specified network address:
<claim-text>retrieving the page from the specified network address on the respective server computer,</claim-text>
<claim-text>accessing user interaction data located on the client computer, the user interaction data describing previous user interaction with an element of the page,</claim-text>
<claim-text>rendering the page to the display by repositioning the page according to the user interaction data so that the element is moved into the viewable area of the display and a top portion of the page is moved into an unviewable position, and</claim-text>
<claim-text>responsive to user manipulation of the scroll bar after the page is rendered, scrolling the page upwards to bring the top portion of the page from the unviewable position into the viewable area of the display, and wherein the default layout of the given page is maintained while being scrolled.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the element of a given page is selected from the group consisting of a table, a link, a data entry field, and a scroll bar.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein repositioning moves the element into a top position of the viewable area of the display.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein accessing user interaction data further comprises:
<claim-text>getting a first user interaction with the element of the page;</claim-text>
<claim-text>determining if the first user interaction is a first user interaction type; and</claim-text>
<claim-text>if the first user interaction is the first user interaction type:
<claim-text>getting at least an electronic document element datum associated with the first user interaction, and</claim-text>
<claim-text>storing the electronic document element datum; and</claim-text>
</claim-text>
<claim-text>storing a first count associated with the electronic document element datum, wherein the count represents a number of user interactions of the first user interaction type with the element of the page.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising steps, after storing the first count, of:
<claim-text>getting a second user interaction with a different element of the page;</claim-text>
<claim-text>determining if the second user interaction is the first user interaction type; and</claim-text>
<claim-text>if the second user interaction is the first user interaction type of user interaction:
<claim-text>getting at least a second electronic document element datum associated with the second user interaction;</claim-text>
<claim-text>storing the second electronic document element datum; and</claim-text>
</claim-text>
<claim-text>incrementing a second count associated with the second electronic document element datum, wherein the second count represents a number of user interactions of the first user interaction type with the different element of the page.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein repositioning the page according to the user interaction data further comprises determining a greater count value as between a value of the first count a value of the second count so that the element associated with the greater count value is moved into the viewable area of the display.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A method for using user interaction data on a client computer, the method comprising:
<claim-text>displaying a viewable area of a display using a browser having a scroll bar;</claim-text>
<claim-text>receiving a prompt to access pages having network addresses located on server computers of the networked system, the pages each having a displayable size exceeding the viewable area of the display and a default layout; and</claim-text>
<claim-text>after receiving the prompt to access a given page:
<claim-text>retrieving the page from the specified network address on the respective server computer,</claim-text>
<claim-text>accessing user interaction data located on the client computer, the user interaction data describing previous user interaction with an element of the given page,</claim-text>
<claim-text>rearranging the given page from the default layout to a rearranged layout according to the user interaction data, thereby creating a rearranged page which ensures that the element is placed in the viewable area of the display when the rearranged page is rendered, and wherein all content of the given page is contained in the rearranged page, and</claim-text>
<claim-text>rendering the rearranged page to the display, wherein the element is in the viewable area of the display.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the element of a given page is selected from the group consisting of a table, a link, a data entry field, and a scroll bar.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising responsive to user manipulation of the scroll bar after the rearranged page is rendered, scrolling the rearranged page, and wherein the rearranged layout of the rearranged page is maintained while being scrolled.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein accessing user interaction data further comprises:
<claim-text>getting a first user interaction with the element of the given page;</claim-text>
<claim-text>determining if the first user interaction is a first user interaction type; and</claim-text>
<claim-text>if the first user interaction is the first user interaction type:
<claim-text>getting at least an electronic document element datum associated with the first user interaction, and</claim-text>
<claim-text>storing the electronic document element datum; and</claim-text>
</claim-text>
<claim-text>storing a first count associated with the electronic document element datum, wherein the count represents a number of user interactions of the first user interaction type with the element of the given page.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method of <claim-ref idref="CLM-00018">claim 18</claim-ref>, further comprising steps, after storing the first count, of:
<claim-text>getting a second user interaction with a different element of the given page;</claim-text>
<claim-text>determining if the second user interaction is the first user interaction type; and</claim-text>
<claim-text>if the second user interaction is the first user interaction type of user interaction:
<claim-text>getting at least a second electronic document element datum associated with the second user interaction;</claim-text>
<claim-text>storing the second electronic document element datum; and</claim-text>
</claim-text>
<claim-text>incrementing a second count associated with the second electronic document element datum, wherein the second count represents a number of user interactions of the first user interaction type with the different element of the given page.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The method of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein rearranging the given page from the default layout to the rearranged layout according to the user interaction data further comprises determining a greater count value as between a value of the first count a value of the second count so that the element associated with the greater count value is moved into the viewable area of the display. </claim-text>
</claim>
</claims>
</us-patent-grant>
