<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626729-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626729</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12568608</doc-number>
<date>20090928</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>511</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>17</main-group>
<subgroup>30</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>707696</main-classification>
<further-classification>707720</further-classification>
<further-classification>707E17053</further-classification>
</classification-national>
<invention-title id="d2e53">Database index monitoring system</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5960423</doc-number>
<kind>A</kind>
<name>Chaudhuri et al.</name>
<date>19990900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6266658</doc-number>
<kind>B1</kind>
<name>Adya et al.</name>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7730045</doc-number>
<kind>B2</kind>
<name>Barsness et al.</name>
<date>20100600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707696</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2007/0130107</doc-number>
<kind>A1</kind>
<name>Waas et al.</name>
<date>20070600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2007/0130130</doc-number>
<kind>A1</kind>
<name>Chan et al.</name>
<date>20070600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  3</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2007/0136386</doc-number>
<kind>A1</kind>
<name>Burger</name>
<date>20070600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707200</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2008/0307009</doc-number>
<kind>A1</kind>
<name>Anderson et al.</name>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707200</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2010/0250504</doc-number>
<kind>A1</kind>
<name>Balasubramanian et al.</name>
<date>20100900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707696</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00009">
<othercit>Oracle8i SQL Reference, Release 8.1.5, 1999, pp. 1-4.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>Obtaining Index Usage Information; obtained at http://www.sql-server-performance.com/articles/per/Obtaining<sub>&#x2014;</sub>Index<sub>&#x2014;</sub>Usage<sub>&#x2014;</sub>Information<sub>&#x2014;</sub>p1.aspx.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00011">
<othercit>SQL Server Magazine: Tracking Index Usage; obtained at http://www.sqlmag.com/Articles/ArticleID/38789/38789.html?Ad=1.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00012">
<othercit>How to get index uage information in SQL Server; obtained at http://www.mssqltips.com/tip.asp?tip=1239.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00013">
<othercit>Counting index usage inside SQL; obtained at http://www.rampant-books.com/t<sub>&#x2014;</sub>oracle<sub>&#x2014;</sub>counting<sub>&#x2014;</sub>index<sub>&#x2014;</sub>usage<sub>&#x2014;</sub>sql.htm.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00014">
<othercit>Managing Indexes; obtained at https://cs.senecac.on.ca/&#x2dc;nconkic/DBAI<sub>&#x2014;</sub>les12<sub>&#x2014;</sub>Rev1<sub>&#x2014;</sub>1.ppt.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00015">
<othercit>Techniques for optimizing I/O; obtained at http://netra.montana.edu/docs/sas/Ircon/z1091089.htm.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00016">
<othercit>Obtaining Index Usage Information; obtained at http://www.sql-server-performance.com/articles/per/Obtaining<sub>&#x2014;</sub>Index<sub>&#x2014;</sub>Usage<sub>&#x2014;</sub>Information<sub>&#x2014;</sub>p1.aspx, Jan. 5, 2009.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00017">
<othercit>SQL Server Magazine: Tracking Index Usage; obtained at http://www.sqlmag.com/Articles/ArticleID/38789/38789.html?Ad=1, May 5, 2009.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00018">
<othercit>How to get index uage information in SQL Server; obtained at http://www.mssqltips.com/tip.asp?tip=1239, May 5, 2009.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00019">
<othercit>Counting index usage inside SQL; obtained at http://www.rampant-books.com/t<sub>&#x2014;</sub>oracle<sub>&#x2014;</sub>counting<sub>&#x2014;</sub>index<sub>&#x2014;</sub>usage<sub>&#x2014;</sub>sql.htm, May 3, 2009.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00020">
<othercit>Managing Indexes; obtained at https://cs.senecac.on.ca/&#x2dc;nconkic/DBAI<sub>&#x2014;</sub>les12<sub>&#x2014;</sub>Rev1<sub>&#x2014;</sub>1.ppt, 2001.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00021">
<othercit>Techniques for optimizing I/O; obtained at http://netra.montana.edu/docs/sas/Ircon/z1091089.htm, May 5, 2009.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>9</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>707696</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707720</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707E17053</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>5</number-of-drawing-sheets>
<number-of-figures>5</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110078135</doc-number>
<kind>A1</kind>
<date>20110331</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Whitehead</last-name>
<first-name>John Martin</first-name>
<address>
<city>San Ramon</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Vadali</last-name>
<first-name>Subrahmanyeswar</first-name>
<address>
<city>Dublin</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Kishan</last-name>
<first-name>Kalur Sai</first-name>
<address>
<city>San Ramon</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Whitehead</last-name>
<first-name>John Martin</first-name>
<address>
<city>San Ramon</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Vadali</last-name>
<first-name>Subrahmanyeswar</first-name>
<address>
<city>Dublin</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Kishan</last-name>
<first-name>Kalur Sai</first-name>
<address>
<city>San Ramon</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Trellis IP Law Group, PC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Oracle International Corporation</orgname>
<role>02</role>
<address>
<city>Redwood Shores</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Phillips, III</last-name>
<first-name>Albert</first-name>
<department>2155</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">An index monitoring system for selectively removing an index, where the index is used in a computerized database search. An example method implemented by the system includes displaying a list of indexes on the display device; providing an indication of an index usage criterion associated with each of two or more of the indexes, where the index usage criterion is derived at least in part from prior execution of a particular database query statement; displaying on the display device an indication of the particular database query statement; and optionally accepting a signal from a user-input device to remove an index.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="155.36mm" wi="222.67mm" file="US08626729-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="223.01mm" wi="165.78mm" orientation="landscape" file="US08626729-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="205.32mm" wi="139.28mm" orientation="landscape" file="US08626729-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="208.28mm" wi="149.01mm" orientation="landscape" file="US08626729-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="212.09mm" wi="125.56mm" orientation="landscape" file="US08626729-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="208.03mm" wi="162.98mm" orientation="landscape" file="US08626729-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">Databases are employed in various demanding applications, including Customer Relationship Management (CRM), search engines, corporate billing applications, and so on. Such applications demand versatile databases and accompanying mechanisms that can quickly access, insert, and modify data (called input/output or I/O operations) in the databases with minimal use of computing resources.</p>
<p id="p-0003" num="0002">For the purposes of the present discussion, a database may be any collection of data. As database size increases, increased emphasis is placed on efficient database design to minimize computing resources and time required to perform I/O operations. I/O operations are often performed by Data Manipulation Languages (DMLs), such as Structured Query Language (SQL). Such I/O operations are often implemented via software running on a database server that communicates with the database.</p>
<p id="p-0004" num="0003">Fast and efficient I/O operations are particularly important in large database applications, such as may exist in a production database environment with many databases. For example, an Oracle Customer Relationship Management On Demand (CRMOD) production environment may include several databases, including Oracle Online Transaction Processing (OLTP) and Online Analytical Processing (OLAP) databases.</p>
<p id="p-0005" num="0004">To reduce the time to access, retrieve, or modify data in a database, the data therein is often organized by indexes. For the purposes of the present discussion, a database index may be any structure or mechanism for arranging data in a database to facilitate access to the data.</p>
<p id="p-0006" num="0005">Database indexes often correspond to a subset of data in a given table of a database. The data subset corresponding to an index is often copied to a separate database structure, wherein the data is organized to facilitate I/O operations performed by DML statements. Certain simple indexes may correspond to one or more columns or rows of a database table. Indexes may also store results of certain functions or conditional expressions specifying a predetermined characteristic of database records or fields, e.g., fields with certain date ranges, value ranges, instances of capital letters, etc.</p>
<p id="p-0007" num="0006">Indexes may be implemented via various data structures, such as balanced trees, B+ trees, hashes, and so on, to facilitate retrieving specific data from a database. An example phonebook database includes a table with several rows, where each row contains information describing a particular individual listed in the phone book. Without use of an index, retrieval of all persons with a given last name, for example, may require a search of all rows of the database, i.e., a full table scan. However, use of a B-tree index organized by last name could enable finding individuals with a given last name by a simple traversal of the tree until the leaf corresponding to the last name is found.</p>
<p id="p-0008" num="0007">The computing resources used and the speed with which a database may be queried via DML statements are affected by the number of indexes in the database table being operated on. The time required to implement bulk data loads into a database often increases substantially as the number of indexes employed by the database increases. In addition, database indexes must often be maintained every time data is updated or modified. Accordingly unused indexes or rarely used indexes may burden database I/O operations.</p>
<p id="p-0009" num="0008">Fast database performance often relies substantially upon good database design. Unfortunately, database designers may not anticipate all the ways a database may be used, and the database may be less efficient for certain applications than for others. Hence, it is often difficult to anticipate which indexes will not be used for a given application, and database performance suffers accordingly.</p>
<p id="p-0010" num="0009">Alternatively, query optimizers can be employed to improve database I/O processing efficiency, such as the speed with which a query is performed based on indexes existing in a given database. An example query optimizer obtains information about certain database indexes in view of a given set of queries (called a workload). The query optimizer returns index information to facilitate implementing queries according to some processing sequence, called an execution plan. Each execution plan may have a certain cost in terms of estimated computing resource usage. Generally, the selected plan is associated with the lowest cost. Alternatively, a temporary dataset containing only needed variables is created in preparation for a given query. Unfortunately, the performance of such query optimizers is also degraded by the existence of many unused or otherwise not useful indexes.</p>
<p id="p-0011" num="0010">The art generally lacks systems or methods to efficiently determine exactly what indexes are being used, how they are being used, whether the index should be removed from the database, and mechanisms for removing particular indexes.</p>
<heading id="h-0002" level="1">SUMMARY</heading>
<p id="p-0012" num="0011">An example index monitoring system is adapted to selectively remove an index from a database, where the index is used for computerized database searches. The system implements a method, which includes displaying a list of indexes on a display device; providing an indication of an index usage criterion associated with each of two or more of the indexes, where the index usage criterion is derived in part from prior execution of a particular database query statement or other DML statement; and displaying on the display device an indication of the particular database query statement or DML statement. The results of performing these foregoing acts can further result in accepting a signal from a user-input device to remove an index.</p>
<p id="p-0013" num="0012">In a specific embodiment, the index usage criterion includes how many times database query statements use the index. The display further indicates a period of time during which the index was used. This time period may be included in the usage criterion. The usage criterion may be further based upon whether the index was used for a first time during the period of time; the type of the particular database query statement that used the index; how many times any one or more database query statements accessed the index; how many times a particular type of database query statement accessed the index; whether the database query statement resulted in a full table scan; query statement performance; and so on. Such index and query statement characterizations may be displayed via the display device. The query statement may be implemented via a Structured Query Language (SQL) statement.</p>
<p id="p-0014" num="0013">Certain embodiments disclosed herein may facilitate tracking certain characteristics of one or more indexes, including how often a given index is used, what statements use or have used the index, and index status, such as WATCH, KEEP, NEW, DROPPED, NEVER USED, used X times within a predetermined time interval, and so on. Such index characteristics may facilitate determining ways to restructure query statements or other I/O statements to use more desirable indexes; may facilitate determining statements that have performed full table scans, resulting in decreased database performance; may facilitate troubleshooting DML, e.g., SQL, performance issues; may facilitate research into statement execution behavior, such as unexpected behavior or execution plan changes; and so on.</p>
<p id="p-0015" num="0014">By facilitating detection and removal or modification of unused or relatively not useful database indexes and corresponding DML statements used to access the statements, database performance may be significantly enhanced. Furthermore, database designers may be better informed as to how to improve future database design.</p>
<p id="p-0016" num="0015">A further understanding of the nature and the advantages of particular embodiments disclosed herein may be realized by reference of the remaining portions of the specification and the attached drawings.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram illustrating a first example embodiment of a system for facilitating tracking database index usage and removing certain indexes based on one or more predetermined criteria.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 2</figref> is a flow diagram of a first example method adapted for use with the system of <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 3</figref> is a flow diagram of a second example method adapted for use with the system of <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram illustrating a second example embodiment of a system for monitoring database index usage.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 5</figref> is a flow diagram of a third example method adapted for use with the system of <figref idref="DRAWINGS">FIG. 4</figref>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION OF EMBODIMENTS</heading>
<p id="p-0022" num="0021">Although the description has been described with respect to particular embodiments thereof, these particular embodiments are merely illustrative, and not restrictive. For example, while certain embodiments disclosed herein are discussed with respect to database applications, those skilled in the art may adapt such embodiments to other applications, such as computer code, where indexes are used to group certain functionality to facilitate access thereof, without departing from the scope of the present teachings.</p>
<p id="p-0023" num="0022">For clarity, certain well-known components, such as hard drives, processors, the Internet, Internet Service Providers (ISPs), firewalls, power supplies, and so on, have been omitted from the figures. However, those skilled in the art with access to the present teachings will know which components to implement and how to implement them to meet the needs of a given application</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram illustrating a first example embodiment of a system <b>10</b> for facilitating tracking database index usage and removing certain indexes based on one or more predetermined criteria. The example system <b>10</b> includes a first database server <b>12</b> and a second database server <b>14</b> in communication with a client computer <b>16</b>. In the present embodiment, the database servers <b>12</b>, <b>14</b> represent computers upon which database software and software for performing I/O operations on the databases run. Alternatively, the term &#x201c;database server&#x201d; may refer to the particular software used to perform database I/O operations.</p>
<p id="p-0025" num="0024">For illustrative purposes, the first server <b>12</b> is shown including one or more application databases <b>17</b>, which are employed to store data for a particular application. A set of one or more index monitoring databases <b>22</b> store information pertaining to indexes used by the application databases <b>17</b>. The various databases <b>17</b>, <b>22</b> may be implemented via one or more tables and may include one or more indexes associated therewith. A first set of server jobs <b>18</b> communicates with the application databases <b>17</b> and the index monitoring databases <b>22</b>. Note that the various databases <b>17</b>, <b>22</b> may be called by different names in different applications, and the names used herein, e.g., application databases and index monitoring databases, are not intended to be restrictive. For example, the index monitoring databases <b>22</b> may be implemented via a single database to table and may include additional functionality beyond monitoring indexes or monitoring statement execution pertaining to the indexes.</p>
<p id="p-0026" num="0025">In the present example embodiment, the client computer <b>16</b> runs one or more User Interface (U/I) applications <b>30</b>, which communicate with the first set of one or more server jobs <b>18</b> running on the first server <b>12</b>. U/I applications <b>30</b> further communicate with a second set of one or more server jobs <b>24</b> running on the second server <b>14</b>. Alternatively, or in addition, the U/I applications <b>30</b> may communicate directly with the databases <b>17</b>, <b>22</b>, <b>26</b>, <b>28</b> as needed. The second server <b>14</b> further includes one or more repository databases <b>26</b> for storing index information associated with the applications databases <b>17</b> to facilitate I/O operations on index data without burdening the first server <b>12</b>. I/O operations on index information stored in the repository databases <b>26</b> may be performed via one or more jobs included in the second set of server jobs <b>24</b>. The second server <b>14</b> further includes an archive database <b>28</b>, which may be used to selectively archive records and fields of the repository databases <b>26</b>. Note that while the databases <b>17</b>, <b>22</b>, <b>26</b>, <b>28</b> are shown spread among two servers, more or fewer servers may be employed to accommodate the databases <b>17</b>, <b>22</b>, <b>26</b>, <b>28</b> without departing from the scope of the present teachings.</p>
<p id="p-0027" num="0026">The client computer <b>16</b> further includes U/I hardware <b>34</b>, <b>36</b>, including a user-input device <b>34</b>, such as a keyboard and/or mouse, and so on, and a display <b>36</b>, which communicate with the U/I applications <b>30</b>. The display <b>36</b> and U/I applications <b>30</b> are adapted to display various index information stored in the repository databases <b>26</b>. In the present example embodiment, the index information includes an index list <b>38</b>, index usage information <b>40</b>, index status <b>42</b>, information about query statements <b>44</b> used to access the various indexes, and any additional index-removal criteria. For the purposes of the present discussion, index information may be any information describing or characterizing an index, such as how the index is used, what statements use the index, when the index is used, and so on.</p>
<p id="p-0028" num="0027">The index list <b>38</b> may include a list of identifiers corresponding to different indexes. The index usage information <b>40</b> may include various statistics, such as indications of time periods during which indexes were used, how many times a given index is used in a predetermined time period, the number of times a particular query statement accessed the index, and so on. The query statement information <b>44</b> may include information about types of query statements were used to access a particular index, performance characteristics of a given query statement, whether a given query statement executed a full table scan of one or more tables of one or more of the applications databases <b>16</b>, and so on. The index status information <b>42</b> may include various status identifiers describing each index. Examples of status identifiers include WATCH, KEEP, NEW, DROPPED, NEVER USED, used X times within a predetermined time interval, and so on.</p>
<p id="p-0029" num="0028">Note that while the present embodiment is discussed with respect to query statements, such as SQL query statements or another DML query statements, information about other types of statements may also be maintained and tracked. For example, statements other than queries, such as statements that use a given index to update or modify database fields, may be tracked and displayed via the database <b>36</b>.</p>
<p id="p-0030" num="0029">In operation, the index monitoring databases <b>22</b> analyze operations of the application databases <b>16</b> to determine index usage information and corresponding DML statement execution information and then store the resulting information in the databases <b>22</b>. One or more jobs or applications included in the first set of server jobs <b>18</b> may facilitate populating the index monitoring databases <b>22</b> with index information derived from analysis of the application databases <b>17</b>. In addition, the first set of server jobs <b>18</b> may include instructions for periodically exporting data stored in the index monitoring databases <b>22</b> to the second server <b>24</b>. The first set of server jobs <b>18</b> may also include instructions for interfacing the U/I applications to the databases <b>17</b>, <b>22</b> to facilitate I/O operations initiated by the U/I applications <b>30</b>.</p>
<p id="p-0031" num="0030">The second server jobs <b>24</b> may include instructions for facilitating importing, into the repository databases <b>26</b>, data exported from the index monitoring databases <b>22</b>. The second server jobs <b>24</b> may further include instructions for maintaining the repository databases <b>26</b> and periodically archiving data therefrom into the archive database <b>28</b>. The second set of server jobs <b>24</b> may also include instructions for interfacing the U/I applications <b>30</b> to the databases <b>26</b>, <b>28</b> to facilitate I/O operations initiated by the U/I applications <b>30</b>.</p>
<p id="p-0032" num="0031">Exact details of computer code included in the first server jobs <b>18</b> and the second server jobs <b>24</b> are application specific. Those skilled in the art with access to the present teachings may readily implement appropriate jobs to meet the needs of a given application without undue experimentation. For example, in certain applications, it may be desirable to execute database truncations, log deletions, data deletions, databases summarizations, data importations, certain periodically scheduled purging operations, and so on, depending upon the application. In the present embodiment, the first set of server jobs <b>18</b> includes history table truncation, table extraction, periodic, e.g., daily data updates to the index monitoring databases <b>22</b>, and so on.</p>
<p id="p-0033" num="0032">After index usage data and corresponding statement usage data is exported to the repository databases <b>26</b>, code executed via the U/I applications <b>30</b> running on the client computer <b>16</b> selectively displays portions of the data <b>38</b>, <b>40</b>, <b>42</b>, <b>44</b> via the display device <b>36</b>. With reference to the displayed data <b>38</b>, <b>40</b>, <b>42</b>, <b>44</b>, a user may ascertain, based on certain predetermined criteria, which indexes to remove, discard, modify, and so on. Functionality, e.g., instructions, included in the U/I applications <b>30</b> may further facilitate displaying predetermined criteria <b>46</b>, based on the displayed data <b>38</b>, <b>40</b>, <b>42</b>, <b>44</b>, for deleting or removing an index from the applications databases <b>16</b>. With reference to the displayed data <b>38</b>, <b>40</b>, <b>42</b>, <b>44</b> and established criteria <b>46</b>, a user may employ the user-input device <b>34</b> go generate a signal to the U/I applications <b>30</b>. In the present example embodiment, the U/I applications <b>30</b> include instructions, e.g., software, adapted to receive a signal from the U/I device <b>34</b> and then optionally remove an index from the applications databases <b>16</b> if one or more index-removal criteria <b>46</b> are met. Examples of index removal criteria include an index that has never been used or that results in poor performance of DML statements that use the index. The removal criteria <b>46</b> may include an identification flag, which flags corresponding indexes for removal.</p>
<p id="p-0034" num="0033">Note that details of the removal criteria <b>46</b> are application specific, as certain applications may allow less stringent removal criteria than others. For example, certain applications may benefit by removal of indexes that satisfy different criterion, such as indexes that cause DML performance problems, and so on. Some criteria may be applicable to certain applications and not for others. Those skilled in the art with access to the present teachings may readily determine appropriate index removal/modification criteria to meet the needs of a given application.</p>
<p id="p-0035" num="0034">The U/I applications <b>30</b> may employ DML, such as one or more SQL statements, to selectively retrieve data from the repository databases <b>26</b> and to modify the applications databases <b>16</b>, such as by removing indexes. Note that index-removal criteria <b>46</b> may be based on one or more data fields corresponding to the index usage <b>40</b>, index status <b>42</b>, query-statement information <b>44</b>, and so on.</p>
<p id="p-0036" num="0035">While the present embodiment is discussed with respect to databases coupled to or included in multiple servers, embodiments are not limited thereto. For example, an embodiment may be implemented on a single server or a single computer, which may run database software and U/I applications sufficient to monitor database index usage and to enable selective removal of database indexes based on predetermined criteria and in response to receipt of a signal from a user-input device.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 2</figref> is a flow diagram of a first example method adapted for use with the system of <figref idref="DRAWINGS">FIG. 1</figref>. The method includes a first step <b>52</b>, which involves displaying a list of indexes on a display device.</p>
<p id="p-0038" num="0037">A second step <b>54</b> includes providing an indication of an index usage criterion associated with each of two or more of the indexes. In the present embodiment, the index usage criterion is derived at least in part from prior execution of a particular database query statement or other DML statement. For example, a criterion for removal of an index may include an indication that a particular index has not been used within a particular time interval by a particular DML statement, such as a particular SQL query statement. An indication of such usage criterion may include a list of indexes and usage information associated with each particular index.</p>
<p id="p-0039" num="0038">A third step <b>56</b> includes employing the display device to display an indication of the particular database query statement. The indication of a particular database query statement may include a list of query statement usage information corresponding to each index. The usage information may indicate which query statements were used to access which indexes.</p>
<p id="p-0040" num="0039">A fourth step <b>58</b> includes optionally accepting a signal from the user-input device, such as a keyboard coupled to a client computer or coupled to a database server, to remove an index. Note, with reference to the system <b>10</b> of <figref idref="DRAWINGS">FIG. 1</figref>, that the client computer <b>16</b> may be implemented via one or more of the servers <b>12</b>, <b>14</b> without departing from the scope of the present teachings.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 3</figref> is a flow diagram of a second example method <b>60</b> adapted for use with the system of <figref idref="DRAWINGS">FIG. 1</figref>. The method <b>60</b> includes an initial displaying step <b>62</b>, which includes displaying a list of indexes or identifiers associated therewith on a display device.</p>
<p id="p-0042" num="0041">In a subsequent indicating step <b>64</b>, an indication of certain predetermined characteristics of a particular DML database query statement used to access a given index is displayed. The predetermined characteristics may include whether the query statement has performed a full table scan and may further include indications of query statement performance.</p>
<p id="p-0043" num="0042">A subsequent providing step <b>66</b> includes providing an indication of an index usage criterion associated with each of two or more of the indexes. The index usage criterion may be based upon how many times a given index has been used in a predetermined time interval; what DML statement(s) have used the given index; and/or may be based upon predetermined characteristics of DML statements used.</p>
<p id="p-0044" num="0043">Finally, an accepting step <b>68</b> includes optionally accepting a signal from the user-input device to remove an index based on the index usage criterion.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram illustrating a second example embodiment <b>70</b> of a system for monitoring database index usage in accordance with a particular application. The second system <b>70</b> includes a production server <b>72</b> and a portal server <b>74</b> in communication with a client computer <b>16</b>.</p>
<p id="p-0046" num="0045">The production server <b>72</b> includes a second set of application databases <b>77</b>, which may be implemented via one or more Oracle databases. An Oracle Automatic Workload Repository (AWR) system communicates with the application databases <b>77</b> and maintains one or more AWR tables <b>82</b>. The AWR tables <b>82</b> include Database Administrator (DBA) history tables that include information pertaining to indexes used by the application databases <b>77</b>.</p>
<p id="p-0047" num="0046">A first set of index monitoring jobs <b>78</b> communicates with the AWR <b>80</b> and includes instructions for extracting data from the AWR tables <b>82</b> and populating index monitoring files <b>92</b>. The index monitoring files <b>92</b> include data for constructing index monitoring tables represented by one or more daily history databases <b>86</b>, which include an index list <b>88</b>, index usage information <b>90</b>, and so on.</p>
<p id="p-0048" num="0047">The first set of index jobs <b>78</b> further includes instructions for periodically, e.g., daily, exporting the index monitoring files <b>92</b> to the portal server <b>74</b>. For illustrative purposes, the portal server <b>74</b> is shown including imported index monitoring files <b>100</b>, Operations (OPS) tables <b>106</b>, index usage archive tables <b>108</b>, and a second set of index monitoring jobs <b>104</b>, which may intercommunicate. The second set of index monitoring jobs <b>104</b> communicates with the imported index monitoring files <b>100</b>, OPS history tables <b>106</b>, and index usage archive tables <b>108</b>.</p>
<p id="p-0049" num="0048">The second set of index monitoring jobs <b>104</b> may include routines for updating and summarizing the imported index monitoring files <b>100</b> and then importing the resulting files to the OPS history tables <b>106</b> and populating them with index usage information, statement usage information associated with each index, and so on. The second set of jobs <b>104</b> may further include jobs for selectively archiving data from the OPS history tables in the index usage archive tables <b>108</b>; for performing predetermined periodic table maintenance, and so on.</p>
<p id="p-0050" num="0049">Exact functionality implemented via the first set of jobs <b>78</b> and the second set of jobs <b>104</b> is application specific. The jobs <b>78</b>, <b>104</b> may include additional or less functionality than that disclosed herein without departing from the scope of the present teachings. Furthermore, the duration of time over which index information is maintained in the OPS history tables <b>106</b> is application specific, and may be more than 100 days in certain applications.</p>
<p id="p-0051" num="0050">In operation, the AWR <b>80</b> periodically obtains and maintains database index information from the application databases <b>77</b>. This information is then periodically retrieved into the index monitoring files <b>92</b> and then exported to the OPS history tables <b>106</b> on the portal server <b>74</b>. Index information and corresponding statement access information may then be periodically retrieved, such as via one or more SQL query statements executed via the client computer <b>16</b>. A user may employ software running on the client computer <b>16</b> to observe index usage information and then remove database indexes from the application database <b>77</b> as needed to enhance database performance.</p>
<p id="p-0052" num="0051">The client computer <b>16</b> may employ various index usage criteria to facilitate determining which indexes should be removed. The criteria may be based on various index characteristics and/or characteristics of statements used to access the indexes, including but not limited to one or more of the following: how many times the particular database query statement use the index; a period of time during which the index was used; whether the index was used for a first time during the period of time; the type of the particular database query statement; how may times the particular database query statement accessed the index; how many times a particular type of database query statement accessed the index; whether the database query statement that resulted in a full table scan; and/or query statement performance. Such index and query statement characterizations may be displayed via a display of the client computer <b>16</b>. The query statements may be implemented via a Structured Query Language (SQL) statement or other DML.</p>
<p id="p-0053" num="0052">Conventionally, existing index monitoring systems may indicate that an index has been used or not. However, existing index monitoring systems typically do not facilitate determining whether an index is a viable candidate for removal from a database table and do not facilitate removal of the index from the database. The present embodiment may regularly draw and summarize index usage information from important AWR DBA history tables and then store the resulting information in one or more tables table, such as in the OPS history tables <b>106</b>, for further access, such as by the client computer <b>16</b>. A user of the client computer <b>16</b> may use software running on the client computer <b>16</b> that references the stored data to obtain important index information. The index information may indicate, for example, which indexes have never been used, which indexes were used for the first time during a particular time period, which indexes in a &#x2018;WATCH&#x2019; status were used during a particular time period, what SQL statement was it that caused a particular index to be used one time in the past 30 days, what plan did the SQL statement use, whether there is a way to restructure the SQL to use a more desirable index, what SQL statement(s) executed unexpected full table scan(s), whether a particular SQL statement develops a performance problem, and so on.</p>
<p id="p-0054" num="0053">Such information may facilitate analyzing, database performance based on frequency amount of index usage, which SQL statements cause an index to be used, and how often the SQL statements are executed, based on any new indexes added to the system, and so on. Furthermore, indexes may be analyzed based on status. For example, an index with a status of KEEP may be excluded from further usage tracking and summarization, but existing usage information may be maintained if needed. Such analysis may facilitate determining whether to remove or modify a database index. Note that index removal and modification may be automatic without departing from the scope of the present teachings.</p>
<p id="p-0055" num="0054">The embodiment of <figref idref="DRAWINGS">FIG. 4</figref> may be particularly useful for large database applications, such as the Oracle CRM On Demand product. Improvements in database indexing resulting from use of an embodiment disclosed herein may substantially improve database performance for a particular application. Furthermore, various embodiments disclosed herein may facilitate informing database designers and engineers as to which indexes have proven useful, and which indexes are degrading database performance while providing minimal benefit. This may facilitate improving future database design.</p>
<p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. 5</figref> is a flow diagram of a third example method <b>120</b> adapted for use with the system of <figref idref="DRAWINGS">FIG. 4</figref>. The example method <b>120</b> includes an initial index usage tracking step <b>122</b>, which includes tracking index usage history via an application, such as Oracle Automatic Workload Repository (AWR), and storing index usage history via a first set of one or more tables via a first database in communication with a first server.</p>
<p id="p-0057" num="0056">A subsequent extraction step <b>124</b> includes periodically extracting index usage history information from the first set of one or more database tables, and storing the results in a second set of one or more tables.</p>
<p id="p-0058" num="0057">A subsequent exporting step <b>126</b> includes selectively exporting the second set of one or more tables to a second database in communication with a second server.</p>
<p id="p-0059" num="0058">Next, a maintenance step <b>128</b> includes performing predetermined maintenance on the data associated with the second database. The second database is accessible via one or more queries that are adapted to access index usage information from the second database.</p>
<p id="p-0060" num="0059">Finally, an archiving step <b>130</b> includes periodically archiving data in the second database.</p>
<p id="p-0061" num="0060">While certain embodiments have been discussed with respect to mechanisms for indexes that are candidates for removal and then removing the indexes from a database, embodiments are not limited thereto. For example, an embodiment, whereby an index is not removed, but instead modified or otherwise adjusted is possible, without departing from the scope of the present teachings.</p>
<p id="p-0062" num="0061">Any suitable programming language can be used to implement the routines of particular embodiments including C, C++, Java, assembly language, etc. Different programming techniques can be employed such as procedural or object oriented. The routines can execute on a single processing device or multiple processors. Although the steps, operations, or computations may be presented in a specific order, this order may be changed in different particular embodiments. In some particular embodiments, multiple steps shown as sequential in this specification can be performed at the same time.</p>
<p id="p-0063" num="0062">Particular embodiments may be implemented in a computer-readable storage medium for use by or in connection with the instruction execution system, apparatus, system, or device. Particular embodiments can be implemented in the form of control logic in software or hardware or a combination of both. The control logic, when executed by one or more processors, may be operable to perform that which is described in particular embodiments.</p>
<p id="p-0064" num="0063">Particular embodiments may be implemented by using a programmed general purpose digital computer, by using application specific integrated circuits, programmable logic devices, field programmable gate arrays, optical, chemical, biological, quantum or nanoengineered systems, components and mechanisms may be used. In general, the functions of particular embodiments can be achieved by any means as is known in the art. Distributed, networked systems, components, and/or circuits can be used. Communication, or transfer, of data may be wired, wireless, or by any other means.</p>
<p id="p-0065" num="0064">It will also be appreciated that one or more of the elements depicted in the drawings/figures can also be implemented in a more separated or integrated manner, or even removed or rendered as inoperable in certain cases, as is useful in accordance with a particular application. It is also within the spirit and scope to implement a program or code that can be stored in a machine-readable medium to permit a computer to perform any of the methods described above.</p>
<p id="p-0066" num="0065">As used in the description herein and throughout the claims that follow, &#x201c;a&#x201d;, &#x201c;an&#x201d;, and &#x201c;the&#x201d; includes plural references unless the context clearly dictates otherwise. Also, as used in the description herein and throughout the claims that follow, the meaning of &#x201c;in&#x201d; includes &#x201c;in&#x201d; and &#x201c;on&#x201d; unless the context clearly dictates otherwise.</p>
<p id="p-0067" num="0066">Thus, while particular embodiments have been described herein, latitudes of modification, various changes, and substitutions are intended in the foregoing disclosures, and it will be appreciated that in some instances some features of particular embodiments will be employed without a corresponding use of other features without departing from the scope and spirit as set forth. Therefore, many modifications may be made to adapt a particular situation or material to the essential scope and spirit.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>We claim:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method performed by a server computer comprising:
<claim-text>executing, using the server computer, a set of jobs to analyze operations of application databases and to populate index monitoring files, with the index monitoring files including an index list, index status information, query statement information and index usage information;</claim-text>
<claim-text>outputting the index list, using the server computer and in response to a request from a client computer, for display on a display device of the client computer, with the index list including a list of identifiers corresponding to different indexes;</claim-text>
<claim-text>outputting the query statement information, using the server computer and in response to a request from the client computer, for display on the display device of the client computer, with the query statement information being about types of query statement used to access a particular index, performance characteristics of a given query statement, and whether a given query statement executed a full table scan of one or more tables of one or more application databases;</claim-text>
<claim-text>outputting the index status information, using the server computer and in response to a request from the client computer, for display on the display device of the client computer, with the index status information including status identifiers describing each index;</claim-text>
<claim-text>outputting the index usage information, using the server computer and in response to a request from the client computer, for display on the display device of the client computer, with the index usage information for a particular index including one or more of information about how many times database query statements used the particular index, a period of time during which the particular index was used, whether the particular index was used for a first time during the period of time, the type of a particular database query statement that used the particular index, how many times any one or more database query statements accessed the particular index, how many times a particular type of database query statement accessed the particular index, whether the particular database query statement resulted in a full table scan, and query statement performance; and</claim-text>
<claim-text>outputting index removal criteria information, using the server computer and in response to a request from the client computer, for display on the display device of the client computer, with the removal criteria information based on one or more of the index list, index usage information, index status information or query statement information and with the index removal criteria information listing pre-determined criteria based on frequency of use of an index and performance of queries that use the index.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the index status information includes watch, keep, new, dropped, never used and used x times status identifiers.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the database query statement is compliant with a Structured Query Language (SQL) format.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the database query statement is compliant with an Oracle SQL format.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>accepting a signal from the client computer to remove an index.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> further including outputting, using the server computer, a flag for display on the display device of the client computer, with the flag indicating an index to be removed based on a displayed removal criterion.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. An apparatus including:
<claim-text>a processing system including a processor, display and input/output device;</claim-text>
<claim-text>a non-transitory processor-readable storage device including instructions executable by the processor for:</claim-text>
<claim-text>executing a set of jobs to analyze operations of application databases and to populate index monitoring files, with the index monitoring files including an index list, index status information, query statement information and index usage information;</claim-text>
<claim-text>outputting the index list, in response to a request from a client computer, for display on a display device of the client computer, with the index list including a list of identifiers corresponding to different indexes;</claim-text>
<claim-text>outputting the query statement information, in response to a request from the client computer, for display on the display device of the client computer, with the query statement information being about types of query statement used to access a particular index, performance characteristics of a given query statement, and whether a given query statement executed a full table scan of one or more tables of one or more application databases;</claim-text>
<claim-text>outputting the index status information, in response to a request from the client computer, for display on the display device of the client computer, with the index status information including status identifiers describing each index;</claim-text>
<claim-text>outputting the index usage information, in response to a request from the client computer, for display on the display device of the client computer, with the index usage information for a particular index including one or more of information about how many times database query statements used the particular index, a period of time during which the particular index was used, whether the particular index was used for a first time during the period of time, the type of a particular database query statement that used the particular index, how many times any one or more database query statements accessed the particular index, how many times a particular type of database query statement accessed the particular index, whether the particular database query statement resulted in a full table scan, and query statement performance; and</claim-text>
<claim-text>outputting the index list, removal criteria information, in response to a request from the client computer, for display on the display device of the client computer, with the removal criteria information based on one or more of the index list, index usage information, index status information or query statement information and with the index removal criteria information listing pre-determined criteria based on frequency of use of an index and performance of queries that use the index.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref> further including outputting, for display on the display device of the client computer, a flag indicating an index to be removed based on a displayed removal criterion.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A non-transitory processor-readable storage device including instructions executable by a server computer, the non-transitory processor-readable storage device including one or more instructions for:
<claim-text>executing a set of jobs to analyze operations of application databases and to populate index monitoring files, with the index monitoring files including an index list, index status information, query statement information and index usage information;</claim-text>
<claim-text>outputting the index list in response to a request from a client computer, for display on a display device of the client computer, with the index list including a list of identifiers corresponding to different indexes;</claim-text>
<claim-text>outputting the query statement information, in response to a request from the client computer, for display on the display device of the client computer, with the query statement information being about types of query statement used to access a particular index, performance characteristics of a given query statement, and whether a given query statement executed a full table scan of one or more tables of one or more application databases;</claim-text>
<claim-text>outputting the index status information, in response to a request from the client computer, for display on the display device of the client computer, with the index status information including status identifiers describing each index;</claim-text>
<claim-text>outputting the index usage information, in response to a request from the client computer, for display on the display device of the client computer, with the index usage information for a particular index including one or more of information about how many times database query statements used the particular index, a period of time during which the particular index was used, whether the particular index was used for a first time during the period of time, the type of a particular database query statement that used the particular index, how many times any one or more database query statements accessed the particular index, how many times a particular type of database query statement accessed the particular index, whether the particular database query statement resulted in a full table scan and query statement performance; and</claim-text>
<claim-text>outputting index removal criteria information, in response to a request from the client computer, for display on the display device of the client computer, with the removal criteria information based on one or more of the index list, index usage information, index status information or query statement information and with the index removal criteria information listing pre-determined criteria based on frequency of use of an index and performance of queries that use the index.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
