<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627274-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627274</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13084034</doc-number>
<date>20110411</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>304</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>9</main-group>
<subgroup>44</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>717104</main-classification>
<further-classification>717105</further-classification>
</classification-national>
<invention-title id="d2e53">Software tool and method for generating a virtual appliance</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6415023</doc-number>
<kind>B2</kind>
<name>Iggulden</name>
<date>20020700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>37910203</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6882712</doc-number>
<kind>B1</kind>
<name>Iggulden et al.</name>
<date>20050400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>37910203</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7257804</doc-number>
<kind>B2</kind>
<name>Baecker et al.</name>
<date>20070800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717124</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>8074218</doc-number>
<kind>B2</kind>
<name>Eilam et al.</name>
<date>20111200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>718  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>8209288</doc-number>
<kind>B2</kind>
<name>Friedman et al.</name>
<date>20120600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707638</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>8245222</doc-number>
<kind>B2</kind>
<name>Chalupa et al.</name>
<date>20120800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717174</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>8250215</doc-number>
<kind>B2</kind>
<name>Stienhans et al.</name>
<date>20120800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709227</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>8281307</doc-number>
<kind>B2</kind>
<name>Arnold et al.</name>
<date>20121000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>718  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>8495512</doc-number>
<kind>B1</kind>
<name>Lappas et al.</name>
<date>20130700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715764</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2004/0205691</doc-number>
<kind>A1</kind>
<name>Poole et al.</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717100</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2006/0230314</doc-number>
<kind>A1</kind>
<name>Sanjar et al.</name>
<date>20061000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 26</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2007/0011650</doc-number>
<kind>A1</kind>
<name>Hage et al.</name>
<date>20070100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717104</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2007/0055972</doc-number>
<kind>A1</kind>
<name>Brown et al.</name>
<date>20070300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717174</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2007/0078988</doc-number>
<kind>A1</kind>
<name>Miloushev et al.</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709227</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2008/0163194</doc-number>
<kind>A1</kind>
<name>Dias et al.</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717174</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2009/0217244</doc-number>
<kind>A1</kind>
<name>Bozak et al.</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2009/0217263</doc-number>
<kind>A1</kind>
<name>Gebhart et al.</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>718  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2009/0249279</doc-number>
<kind>A1</kind>
<name>Bourdon</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717101</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2009/0249284</doc-number>
<kind>A1</kind>
<name>Antosz et al.</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717104</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2009/0249287</doc-number>
<kind>A1</kind>
<name>Patrick</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717107</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2009/0300151</doc-number>
<kind>A1</kind>
<name>Friedman et al.</name>
<date>20091200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709222</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>2009/0300604</doc-number>
<kind>A1</kind>
<name>Barringer</name>
<date>20091200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717178</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>2009/0300641</doc-number>
<kind>A1</kind>
<name>Friedman et al.</name>
<date>20091200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>718104</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>2010/0257523</doc-number>
<kind>A1</kind>
<name>Frank</name>
<date>20101000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>718  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>2011/0126207</doc-number>
<kind>A1</kind>
<name>Wipfel et al.</name>
<date>20110500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>718104</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>2011/0154441</doc-number>
<kind>A1</kind>
<name>Oh et al.</name>
<date>20110600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726  3</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00027">
<othercit>VMware Studio, http://www.vmware.com/appliances/getting-started/learn/vmware<sub>&#x2014;</sub>studio.html, Mar. 15, 2011.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00028">
<othercit>Virtual Appliance Marketplace, http://www.vmware.com/appliances/directory/, Mar. 15, 2011.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>13</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>4</number-of-drawing-sheets>
<number-of-figures>6</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120260229</doc-number>
<kind>A1</kind>
<date>20121011</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Peraza</last-name>
<first-name>David</first-name>
<address>
<city>Miami</city>
<state>FL</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Rojas</last-name>
<first-name>Hypatia</first-name>
<address>
<city>Round Rock</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Schwichtenberg</last-name>
<first-name>Frank</first-name>
<address>
<city>Natick</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Peraza</last-name>
<first-name>David</first-name>
<address>
<city>Miami</city>
<state>FL</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Rojas</last-name>
<first-name>Hypatia</first-name>
<address>
<city>Round Rock</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Schwichtenberg</last-name>
<first-name>Frank</first-name>
<address>
<city>Natick</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Martin &#x26; Associates LLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>Martin</last-name>
<first-name>Derek P.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>International Business Machines Corporation</orgname>
<role>02</role>
<address>
<city>Armonk</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Wong</last-name>
<first-name>Don</first-name>
<department>2198</department>
</primary-examiner>
<assistant-examiner>
<last-name>Wu</last-name>
<first-name>Daxin</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A virtual appliance construction tool allows a user to select using a user interface functional information for a virtual appliance to generate a functional model of the virtual appliance. A knowledge base of configuration units is then queried to determine which configuration units are needed to satisfy the functional model. Note the configuration units include not only functional information, but virtualization information as well. The configuration units are then packaged into a virtual appliance blueprint, which is used to generate a certified virtual appliance. In this manner the user need not have extensive knowledge or training regarding virtualization because the virtualization information is selected automatically based on which configuration units provide the function specified by the user.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="110.24mm" wi="103.72mm" file="US08627274-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="250.11mm" wi="189.82mm" file="US08627274-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="144.02mm" wi="146.64mm" file="US08627274-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="233.60mm" wi="137.08mm" file="US08627274-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="212.51mm" wi="151.55mm" file="US08627274-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">1. Technical Field</p>
<p id="p-0003" num="0002">This disclosure generally relates to computer systems, and more specifically relates to the generation of a virtual appliance such as an open virtualization appliance (OVA) that may be deployed in a cloud computing environment.</p>
<p id="p-0004" num="0003">2. Background Art</p>
<p id="p-0005" num="0004">Cloud computing has become an area of emphasis for software and website providers. Cloud computing is a general term for presenting computation, software, data access, and storage services in a manner that the end-user has no knowledge of the physical location and configuration of the system that delivers the services. Cloud computing relies heavily on virtualized resources. Thus, for software to be deployed in a cloud computing environment, the software is generally described as running on one or more virtual servers. When the user executes the software, the user has no idea the location or number of physical servers that deliver the virtualized software.</p>
<p id="p-0006" num="0005">The term &#x201c;virtual appliance&#x201d; has been used to describe a virtual software image designed to run on a virtualization platform. A typical virtual appliance includes a group of master disk images and metadata describing the virtual systems needed to boot and run the software stack stored in the disk images. A virtual appliance is usually constructed to host a single software application. A virtual appliance thus represents a new way of deploying network software applications. The disk images and metadata describing the virtual appliance may be provided in Open Virtualization Format (OVF). OVF is an open standard for packaging and distributing virtual appliances to be run by a hypervisor. An OVF package generally consists of several files (virtual systems disk images and an OVF file describing the virtual system) placed in one directory. The OVF package may be compressed as a single file known as an Open Virtualization Appliance (OVA).</p>
<p id="p-0007" num="0006">Known methods for constructing a virtual appliance required a user to provide or specify both the functional information as well as the virtualization information to create the virtual appliance. This requires the user to have substantial expertise not only in the software application, but in virtualization as well. The prior art provides no way for a user with functional expertise for software to construct a virtual appliance without also having the virtualization expertise. As a result, the only users who currently create virtual appliances are those who have detailed expertise and knowledge regarding both the software to be deployed and virtualization. This greatly limits the people who can construct virtual appliances.</p>
<heading id="h-0002" level="1">BRIEF SUMMARY</heading>
<p id="p-0008" num="0007">A virtual appliance construction tool includes a user interface that allows a user to select functional features in the user interface that determine functional requirements for a virtual appliance. The functional features presented in the user interface are limited by the functional features available in a knowledge base of configuration units. Each configuration unit includes both functional information and virtualization information. The user selects functional features in the user interface, which defines a functional model. The knowledge base of configuration units is then queried to retrieve all configuration units that correspond to the functional features in the functional model that were selected by the user in the user interface. The configuration units are then packaged into a virtual appliance blueprint that may be used to generate the virtual appliance. Note the blueprint includes both the functional information and the virtualization information in each selected configuration unit, but the user only had to select the functional features in the user interface. In this manner a user with little experience in virtualization may create a virtual appliance using the virtual appliance construction tool. This greatly expands the number of users who can create virtual appliances.</p>
<p id="p-0009" num="0008">The foregoing and other features and advantages will be apparent from the following more particular description, as illustrated in the accompanying drawings.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWING(S)</heading>
<p id="p-0010" num="0009">The disclosure will be described in conjunction with the appended drawings, where like designations denote like elements, and:</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of an apparatus that includes a virtual appliance (VA) construction tool that is used to construct a VA blueprint that includes both functional information and virtualization information without requiring a user to select or specify virtualization information;</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 2</figref> is a flow diagram of a prior art method for manually generating a certified virtual appliance;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 3</figref> is a flow diagram of a method for generating a certified VA using a VA construction tool;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram showing one suitable representation of a VA blueprint;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 5</figref> is a flow diagram of a method to define both functional information and virtualization information for software in a configuration unit that is stored in a knowledge base; and</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 6</figref> is a flow diagram of a method for generating a VA blueprint that includes both functional information and virtualization information based on a user's selection of only functional information in the graphical user interface (GUI).</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0017" num="0016">The claims and disclosure herein provide a virtual appliance construction tool that allows a user to select using a user interface functional information for a virtual appliance to generate a functional model of the virtual appliance. A knowledge base of configuration units is then queried to determine which configuration units are needed to satisfy the functional model. Note the configuration units include not only functional information, but virtualization information as well. The configuration units are then packaged into a virtual appliance blueprint, which is used to generate the certified virtual appliance. In this manner the user need not have extensive knowledge or training regarding virtualization information because the virtualization information is selected automatically based on which configuration units provide the function specified by the user.</p>
<p id="p-0018" num="0017">Referring to <figref idref="DRAWINGS">FIG. 1</figref>, a computer system <b>100</b> is one suitable implementation of a computer system that includes a virtual appliance construction tool. Computer system <b>100</b> is an IBM eServer System x computer system. However, those skilled in the art will appreciate that the disclosure herein applies equally to any computer system, regardless of whether the computer system is a complicated multi-user computing apparatus, a single user workstation, or an embedded control system. As shown in <figref idref="DRAWINGS">FIG. 1</figref>, computer system <b>100</b> comprises one or more processors <b>110</b>, a main memory <b>120</b>, a mass storage interface <b>130</b>, a display interface <b>140</b>, and a network interface <b>150</b>. These system components are interconnected through the use of a system bus <b>160</b>. Mass storage interface <b>130</b> is used to connect mass storage devices, such as local mass storage device <b>155</b>, to computer system <b>100</b>. One specific type of local mass storage device <b>155</b> is a readable and writable CD-RW drive, which may store data to and read data from a CD-RW <b>195</b>.</p>
<p id="p-0019" num="0018">Main memory <b>120</b> preferably contains data <b>121</b>, an operating system <b>122</b>, a virtual appliance (VA) construction tool <b>123</b>, and a configuration unit (CU) knowledge base <b>127</b>. Data <b>121</b> represents any data that serves as input to or output from any program in computer system <b>100</b>. Operating system <b>122</b> is a multitasking operating system. VA construction tool <b>123</b> is a software tool that is used to generate a VA blueprint <b>126</b>. The VA construction tool <b>123</b> includes a graphical user interface (GUI) <b>124</b> that allows a user to select or otherwise specify functional information for a virtual appliance. In the most preferred implementation, the GUI only presents to the user functional information that is present in the configuration unit (CU) knowledge base <b>127</b>, thereby constraining the user's selection to functions that are in the CU knowledge base <b>127</b>. The user's selections of functional information form a VA functional model <b>125</b>, which includes all the functional information selected by the user for the virtual appliance. The VA functional model is then used to query the CU knowledge base <b>127</b>. Note the CU knowledge base <b>127</b> includes multiple configuration units <b>128</b> that each includes functional information <b>129</b> and virtualization information <b>131</b>. The VA construction tool <b>123</b> determines which configuration units in the CU knowledge base <b>127</b> correspond to the functions specified by the user in the GUI, retrieves the corresponding CUs, and creates a virtual appliance blueprint <b>126</b> that includes the corresponding CUs. Note the VA blueprint <b>126</b> includes the applicable CUs, which include both functional information and virtualization information. In this manner, a user may select only functional information in the GUI, and the VA construction tool <b>123</b> will generate from the user's selection a VA blueprint <b>126</b> that includes both functional information and virtualization information, without the user having to specify any virtualization information. Because no virtualization expertise is needed to select functional information, the VA construction tool <b>123</b> expands the number of users who can generate virtual appliances to any user who can specify the functional requirements for the virtual appliance.</p>
<p id="p-0020" num="0019">Computer system <b>100</b> utilizes well known virtual addressing mechanisms that allow the programs of computer system <b>100</b> to behave as if they only have access to a large, contiguous address space instead of access to multiple, smaller storage entities such as main memory <b>120</b> and local mass storage device <b>155</b>. Therefore, while data <b>121</b>, operating system <b>122</b>, VA construction tool <b>123</b>, and CU knowledge base <b>127</b> are shown to reside in main memory <b>120</b>, those skilled in the art will recognize that these items are not necessarily all completely contained in main memory <b>120</b> at the same time. It should also be noted that the term &#x201c;memory&#x201d; is used herein generically to refer to the entire virtual memory of computer system <b>100</b>, and may include the virtual memory of other computer systems coupled to computer system <b>100</b>.</p>
<p id="p-0021" num="0020">Processor <b>110</b> may be constructed from one or more microprocessors and/or integrated circuits. Processor <b>110</b> executes program instructions stored in main memory <b>120</b>. Main memory <b>120</b> stores programs and data that processor <b>110</b> may access. When computer system <b>100</b> starts up, processor <b>110</b> initially executes the program instructions that make up operating system <b>122</b>. Processor <b>110</b> also executes the VA construction tool <b>123</b>.</p>
<p id="p-0022" num="0021">Although computer system <b>100</b> is shown to contain only a single processor and a single system bus, those skilled in the art will appreciate that a virtual appliance construction tool may be practiced using a computer system that has multiple processors and/or multiple buses. In addition, the interfaces that are used preferably each includes separate, fully programmed microprocessors that are used to off-load compute-intensive processing from processor <b>110</b>. However, those skilled in the art will appreciate that these functions may be performed using I/O adapters as well.</p>
<p id="p-0023" num="0022">Display interface <b>140</b> is used to directly connect one or more displays <b>165</b> to computer system <b>100</b>. These displays <b>165</b>, which may be non-intelligent (i.e., dumb) terminals or fully programmable workstations, are used to provide system administrators and users the ability to communicate with computer system <b>100</b>. Note, however, that while display interface <b>140</b> is provided to support communication with one or more displays <b>165</b>, computer system <b>100</b> does not necessarily require a display <b>165</b>, because all needed interaction with users and other processes may occur via network interface <b>150</b>.</p>
<p id="p-0024" num="0023">Network interface <b>150</b> is used to connect computer system <b>100</b> to other computer systems or workstations <b>175</b> via network <b>170</b>. Network interface <b>150</b> broadly represents any suitable way to interconnect electronic devices, regardless of whether the network <b>170</b> comprises present-day analog and/or digital techniques or via some networking mechanism of the future. Network interface <b>150</b> preferably includes a combination of hardware and software that allow communicating on the network <b>170</b>. Software in the network interface <b>150</b> preferably includes a communication manager that manages communication with other computer systems <b>175</b> via network <b>170</b> using a suitable network protocol. Many different network protocols can be used to implement a network. These protocols are specialized computer programs that allow computers to communicate across a network. TCP/IP (Transmission Control Protocol/Internet Protocol) is an example of a suitable network protocol that may be used by the communication manager within the network interface <b>150</b>.</p>
<p id="p-0025" num="0024">As will be appreciated by one skilled in the art, aspects of the present invention may be embodied as a system, method or computer program product. Accordingly, aspects of the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a &#x201c;circuit,&#x201d; &#x201c;module&#x201d; or &#x201c;system.&#x201d; Furthermore, aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.</p>
<p id="p-0026" num="0025">Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.</p>
<p id="p-0027" num="0026">A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.</p>
<p id="p-0028" num="0027">Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.</p>
<p id="p-0029" num="0028">Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the &#x201c;C&#x201d; programming language, Streams Processing language, or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).</p>
<p id="p-0030" num="0029">Aspects of the present invention are described herein with reference to flowchart illustrations and/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and/or block diagrams, and combinations of blocks in the flowchart illustrations and/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks.</p>
<p id="p-0031" num="0030">These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function/act specified in the flowchart and/or block diagram block or blocks.</p>
<p id="p-0032" num="0031">The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks.</p>
<p id="p-0033" num="0032">The methods disclosed herein may be performed as part of providing a web-based service. Such a service could include, for example, offering the method to online users in exchange for payment.</p>
<p id="p-0034" num="0033">Referring to <figref idref="DRAWINGS">FIG. 2</figref>, a prior art method <b>200</b> for generating a virtual appliance begins by the virtual appliance (VA) designer (user) using known physical-to-virtual software tools to specify manually both the functional information and virtualization information to create a virtual appliance (step <b>210</b>). One or more virtual servers are then built for the virtual appliance (step <b>220</b>). Note the virtual servers comprise what is termed an &#x201c;image&#x201d; for the virtual appliance. The virtual appliance is then packaged (step <b>230</b>), and validated (step <b>240</b>). The end result is a certified virtual appliance that is ready to be deployed.</p>
<p id="p-0035" num="0034">As alluded to above in the Background Art section, the existing physical-to-virtual tools used by the VA designer in step <b>210</b> require substantial expertise on the part of the VA designer to create the virtual appliance. While <figref idref="DRAWINGS">FIG. 2</figref> relates to generation of a virtual appliance from scratch, there are also other known methods for generating a virtual appliance, such as capturing a running workload using virtual-to-virtual tools. All of the known methods for generating a virtual appliance suffer from the same problem, namely, the user building the virtual appliance must have extensive knowledge and expertise relating to the function of the software, as well as expertise relating to virtualization of the software. The disclosure and claims provide a software tool that allows a user that is relatively unfamiliar with virtualization to generate a virtual appliance that includes the needed virtualization information by simply specifying the functional information for the virtual appliance, as discussed in detail below.</p>
<p id="p-0036" num="0035">Referring to <figref idref="DRAWINGS">FIG. 3</figref>, a method <b>300</b> allows a user to generate a certified virtual appliance without explicitly specifying any virtualization information for the virtual appliance. The VA designer uses the VA construction tool (<b>123</b> in <figref idref="DRAWINGS">FIG. 1</figref>) to generate a VA blueprint (<b>126</b> in <figref idref="DRAWINGS">FIG. 1</figref>) based on selecting or otherwise specifying functional information in the GUI (step <b>310</b>). The virtual servers (image) are then built for the virtual appliance based on the virtual appliance blueprint (step <b>320</b>). The virtual appliance is then packaged (step <b>330</b>) and validated (step <b>340</b>). The result is a certified virtual appliance. Note, however, the virtual appliance was built without the VA designer explicitly specifying any virtualization information in step <b>310</b>, as described below with reference to <figref idref="DRAWINGS">FIGS. 5 and 6</figref>.</p>
<p id="p-0037" num="0036">One suitable implementation is shown in <figref idref="DRAWINGS">FIG. 4</figref> for the virtual appliance blueprint <b>126</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>. The virtual appliance blueprint <b>126</b> preferably includes a plurality of configuration units <b>128</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>. For the specific example shown in <figref idref="DRAWINGS">FIG. 4</figref>, we assume the VA blueprint <b>126</b> includes N configuration units, shown in <figref idref="DRAWINGS">FIG. 4</figref> as configuration unit A, configuration unit B, . . . , configuration unit N. Each configuration unit includes corresponding functional information and virtualization information. Thus, configuration unit A <b>128</b>A includes functional information <b>129</b>A and virtualization information <b>131</b>A; configuration unit B <b>128</b>B includes functional information <b>129</b>B and virtualization information <b>131</b>B; through configuration unit N <b>128</b>N that includes functional information <b>129</b>N and virtualization information <b>131</b>N. The VA blueprint <b>126</b> is constructed based on the VA designer's selection of functional information in the GUI, but because the virtualization information is included with the functional information in each configuration unit, all information needed to create the virtual appliance is present in the VA blueprint <b>126</b>.</p>
<p id="p-0038" num="0037">The VA construction tool and methods disclosed herein require a knowledge base of configuration units that each includes functional information and virtualization information. Referring to <figref idref="DRAWINGS">FIG. 5</figref>, a configuration unit (CU) is defined that includes functional information and virtualization information (step <b>510</b>). The configuration unit is then stored in the CU knowledge base (step <b>520</b>). Step <b>510</b> in <figref idref="DRAWINGS">FIG. 5</figref> is preferably performed by the provider of the software. Thus, both the functional information and the virtualization information can be provided by an expert who has sufficient information to generate the configuration unit. While this expert is preferably someone who works for the company providing the software, this expert could also be a third party person who has sufficient expertise to define the configuration unit.</p>
<p id="p-0039" num="0038">As used herein, the term &#x201c;functional information&#x201d; includes any information that describes function of a software application within the virtual appliance. Examples of suitable functional information include the name of the software, the software vendor, the software version, compatible operating systems, other software dependencies, etc. As used herein, the term &#x201c;virtualization information&#x201d; includes any information relating to virtualization of the software application within the virtual appliance, which may include metadata that describes how to package the software application within the virtual appliance. Examples of suitable virtualization information include software activation properties in a virtual machine, hypervisor, disk format, drivers supported by the virtualization layer, interrelationships between virtual machines (for the case of a multi-virtual machine virtual appliance), reference to the activation engine program that will run on a host virtual machine, open virtual format transport type, etc.</p>
<p id="p-0040" num="0039">The CU knowledge base <b>127</b> shown in <figref idref="DRAWINGS">FIG. 1</figref> could be a local database, could be a remote database, or could be any suitable collection of data stored in any suitable manner or location. In one specific implementation, the CU knowledge base could include a collection of databases publicly accessible via the Internet. Thus, each software vendor could provide its own CU knowledge base for its own products. In the alternative, several knowledge bases could exist that each includes different configuration units. If this is the case, different knowledge bases could be interrogated to select and retrieve configuration units for a given virtual appliance.</p>
<p id="p-0041" num="0040">One suitable implementation for step <b>310</b> in <figref idref="DRAWINGS">FIG. 3</figref> is shown as method <b>310</b> in <figref idref="DRAWINGS">FIG. 6</figref>. The VA designer specifies using the GUI a functional model for the virtual appliance (step <b>610</b>). In the most preferred implementation, the selections available to the VA designer are constrained by the configuration units available in the CU knowledge base to assure a virtual appliance blueprint can be generated from existing configuration units. In an alternative implementation, the VA designer may specify functions that are not included in any existing configuration unit, which would then require the VA designer or someone else define a new configuration unit for the specified functions. Because a goal of the VA construction tool <b>123</b> is to allow defining a virtual appliance without requiring extensive knowledge of virtualization, the preferred implementation limits the choices in the GUI to the functions provided by the configuration units in the CU knowledge base. The VA construction tool automatically selects configuration units from the CU knowledge base that correspond to the functional model for the virtual appliance (step <b>620</b>). Both the functional information and the virtualization information for the configuration units selected in step <b>620</b> are then retrieved to generate the virtual appliance blueprint (step <b>630</b>). At this point, step <b>310</b> in <figref idref="DRAWINGS">FIG. 3</figref> is complete, and steps <b>320</b>, <b>330</b> and <b>340</b> may be performed as described above to generate a certified virtual appliance that is ready to be deployed. In the most preferred implementation, the virtual appliance is an Open Virtualization Appliance (OVA).</p>
<p id="p-0042" num="0041">The disclosure and claims are directed to a virtual appliance construction tool that allows a user to select using a GUI functional information for a virtual appliance to generate a functional model of the virtual appliance. A knowledge base of configuration units is then queried to determine which configuration units are needed to satisfy the functional model. Note the configuration units include not only functional information, but virtualization information as well. The configuration units are then packaged into a virtual appliance blueprint, which is used to generate a certified virtual appliance. In this manner the user need not have extensive knowledge or training regarding virtualization because the virtualization information is selected automatically based on which configuration units provide the function specified by the user.</p>
<p id="p-0043" num="0042">One skilled in the art will appreciate that many variations are possible within the scope of the claims. Thus, while the disclosure is particularly shown and described above, it will be understood by those skilled in the art that these and other changes in form and details may be made therein without departing from the spirit and scope of the claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An apparatus comprising:
<claim-text>at least one processor;</claim-text>
<claim-text>a memory coupled to the at least one processor;</claim-text>
<claim-text>a knowledge base residing in the memory, the knowledge base comprising a plurality of configuration units, each configuration unit including functional information and corresponding virtualization information, wherein the functional information specifies software function and the corresponding virtualization information specifies metadata that describes how to package the software function within a virtual appliance; and</claim-text>
<claim-text>a virtual appliance construction tool residing in the memory and executed by the at least one processor, the virtual appliance construction tool providing a user interface that allows a user to specify functional information in the user interface corresponding to the functional information stored in the plurality of configuration units in the knowledge base, wherein the user specifies the functional information in the user interface and does not select or otherwise specify in the user interface the corresponding virtualization information, the virtual appliance construction tool generating from the user-specified functional information in the user interface a virtual appliance functional model, querying the knowledge base to determine which configuration units have functional information that corresponds to the virtual appliance functional model without regard to the corresponding virtualization information, retrieving from the knowledge base both the functional information and the corresponding virtualization information for the configuration units that correspond to the virtual appliance functional model, and generating a virtual appliance blueprint that includes the configuration units that correspond to the virtual appliance functional model.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein a certified virtual appliance is generated from the virtual appliance blueprint.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the virtual appliance is an open virtualization appliance (OVA).</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the user specifies the functional information in the user interface by making a plurality of selections in the user interface.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. A computer-implemented method executed by at least one processor for generating a virtual appliance, the method comprising the steps of:
<claim-text>providing a knowledge base comprising a plurality of configuration units, each configuration unit including functional information and corresponding virtualization information, wherein the functional information specifies software function and the corresponding virtualization information specifies metadata that describes how to package the software function within a virtual appliance;</claim-text>
<claim-text>providing a virtual appliance construction tool that performs the steps of:
<claim-text>providing a user interface that allows a user to specify functional information in the user interface corresponding to the functional information stored in the plurality of configuration units in the knowledge base, wherein the user specifies the functional information in the user interface and does not select or otherwise specify in the user interface the corresponding virtualization information;</claim-text>
<claim-text>generating from the user-specified functional information in the user interface a virtual appliance functional model;</claim-text>
<claim-text>querying the knowledge base to determine which configuration units have functional information that corresponds to the virtual appliance functional model without regard to the corresponding virtualization information;</claim-text>
<claim-text>retrieving from the knowledge base both the functional information and the corresponding virtualization information for the configuration units that correspond to the virtual appliance functional model; and</claim-text>
<claim-text>generating a virtual appliance blueprint that includes the configuration units that correspond to the virtual appliance functional model.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref> further comprising the step of generating a certified virtual appliance from the virtual appliance blueprint.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref> wherein the virtual appliance is an open virtualization appliance (OVA).</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref> wherein the user specifies the functional information in the user interface by making a plurality of selections in the user interface.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref> wherein the method is performed as part of a web-based service that includes performing the method to an online user in exchange for payment.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. An article of manufacture comprising software stored on a non-transitory computer readable storage medium, the software comprising:
<claim-text>a virtual appliance construction tool that provides a user interface that allows a user to specify functional information in the user interface corresponding to functional information stored in a plurality of configuration units in a knowledge base, each configuration unit including the functional information and corresponding virtualization information, wherein the functional information specifies software function and the corresponding virtualization information specifies metadata that describes how to package the software function within a virtual appliance, wherein the user specifies the functional information in the user interface and does not select or otherwise specify in the user interface the corresponding virtualization information, the virtual appliance construction tool generating from the user-specified functional information in the user interface a virtual appliance functional model, querying the knowledge base to determine which configuration units have functional information that corresponds to the virtual appliance functional model without regard to the corresponding virtualization information, retrieving from the knowledge base both the functional information and the corresponding virtualization information for the configuration units that correspond to the virtual appliance functional model, and generating a virtual appliance blueprint that includes the configuration units that correspond to the virtual appliance functional model.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The article of manufacture of <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein a certified virtual appliance is generated from the virtual appliance blueprint.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The article of manufacture of <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein the virtual appliance is an open virtualization appliance (OVA).</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The article of manufacture of <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein the user specifies the functional information in the user interface by making a plurality of selections in the user interface. </claim-text>
</claim>
</claims>
</us-patent-grant>
