<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627054-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627054</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12981441</doc-number>
<date>20101229</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>364</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>177</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>9</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>9</main-group>
<subgroup>24</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>11</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>713  2</main-classification>
<further-classification>713  1</further-classification>
<further-classification>713100</further-classification>
<further-classification>714 15</further-classification>
</classification-national>
<invention-title id="d2e53">Method and apparatus to create single firmware image for multiple server platforms</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5768568</doc-number>
<kind>A</kind>
<name>Inui et al.</name>
<date>19980600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710 16</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6356965</doc-number>
<kind>B1</kind>
<name>Broyles et al.</name>
<date>20020300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6385682</doc-number>
<kind>B1</kind>
<name>Emerson et al.</name>
<date>20020500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6490637</doc-number>
<kind>B1</kind>
<name>Shih</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710  8</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6496858</doc-number>
<kind>B1</kind>
<name>Frailong et al.</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6560704</doc-number>
<kind>B2</kind>
<name>Dieterman et al.</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713100</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6792479</doc-number>
<kind>B2</kind>
<name>Allen et al.</name>
<date>20040900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710 10</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>7856549</doc-number>
<kind>B2</kind>
<name>Wheeler</name>
<date>20101200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2002/0087724</doc-number>
<kind>A1</kind>
<name>Datta et al.</name>
<date>20020700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2003/0233450</doc-number>
<kind>A1</kind>
<name>Carley</name>
<date>20031200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2005/0091360</doc-number>
<kind>A1</kind>
<name>Chen et al.</name>
<date>20050400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2005/0149924</doc-number>
<kind>A1</kind>
<name>Komarla et al.</name>
<date>20050700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717176</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2005/0188070</doc-number>
<kind>A1</kind>
<name>Tripathi et al.</name>
<date>20050800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2005/0257040</doc-number>
<kind>A1</kind>
<name>Choi et al.</name>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2008/0021978</doc-number>
<kind>A1</kind>
<name>Maynard et al.</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2008/0037553</doc-number>
<kind>A1</kind>
<name>Gilmartin et al.</name>
<date>20080200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2008/0184022</doc-number>
<kind>A1</kind>
<name>Peacock</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713  2</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2009/0282284</doc-number>
<kind>A1</kind>
<name>Naohiro et al.</name>
<date>20091100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2010/0005283</doc-number>
<kind>A1</kind>
<name>Ha</name>
<date>20100100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2010/0115253</doc-number>
<kind>A1</kind>
<name>Lipsky et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2010/0180031</doc-number>
<kind>A1</kind>
<name>Cacheria et al.</name>
<date>20100700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>2011/0055824</doc-number>
<kind>A1</kind>
<name>Benari</name>
<date>20110300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>2011/0202983</doc-number>
<kind>A1</kind>
<name>Pope et al.</name>
<date>20110800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>2011/0276625</doc-number>
<kind>A1</kind>
<name>Shah</name>
<date>20111100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>2011/0292807</doc-number>
<kind>A1</kind>
<name>Shah et al.</name>
<date>20111200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>2011/0296130</doc-number>
<kind>A1</kind>
<name>Abe et al.</name>
<date>20111200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>29</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>3</number-of-drawing-sheets>
<number-of-figures>3</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120173858</doc-number>
<kind>A1</kind>
<date>20120705</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Ayanam</last-name>
<first-name>Varadachari Sudan</first-name>
<address>
<city>Suwanee</city>
<state>GA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Parthiban</last-name>
<first-name>Baskar</first-name>
<address>
<city>Johns Creek</city>
<state>GA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Ayanam</last-name>
<first-name>Varadachari Sudan</first-name>
<address>
<city>Suwanee</city>
<state>GA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Parthiban</last-name>
<first-name>Baskar</first-name>
<address>
<city>Johns Creek</city>
<state>GA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Morris, Manning &#x26; Martin, LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>Xia, Esq.</last-name>
<first-name>Tim Tingkang</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>American Megatrends, Inc.</orgname>
<role>02</role>
<address>
<city>Norcross</city>
<state>GA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Bae</last-name>
<first-name>Ji H</first-name>
<department>2115</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">According to one aspect, a computer-implemented method for managing a computer system is disclosed. In one embodiment, the computer system includes a processor that is programmed to cause the computer system to perform specific functions. The functions include: initializing a management controller operating on a management platform; detecting preloaded identification data containing a predetermined manufacturer-specific platform identifier; if no preloaded identification data is detected, determining the platform identifier based on GPIO settings, firmware data, EEPROM data, and/or sensor detection; detecting preloaded hardware data containing operating parameters for hardware components operating on the management platform and operatively coupled to the management controller; if no preloaded hardware data is detected, determining the operating parameters according to the platform identifier; causing the management controller to initialize the hardware components according to the platform identifier and operating parameters; and, flashing initialization data containing the platform identifier and operating parameters to a system memory.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="161.63mm" wi="229.28mm" file="US08627054-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="240.96mm" wi="172.72mm" orientation="landscape" file="US08627054-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="253.24mm" wi="196.68mm" orientation="landscape" file="US08627054-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="247.48mm" wi="179.24mm" file="US08627054-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0002" num="0001">The present invention generally relates to management of computer systems, and more particularly to detection and identification of a platform, and platform monitoring during run time.</p>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">A baseboard management controller (BMC) is a specialized microcontroller embedded on the motherboard of a computer, generally a server. The BMC manages the interface between system management software and platform hardware. Various types of sensors can be built into a computer system and the BMC can read the sensors to determine specific parameters related to operation of the computer system, such as temperature, cooling fan speeds, power status, and operating system (OS) status. The BMC is operative to monitor the sensors and can send alerts to a system administrator via a network if one or more of the parameters are outside of predetermined ranges or limits. An administrator can remotely communicate with the BMC to take corrective action, for example resetting or power cycling the system.</p>
<p id="p-0004" num="0003">A server manufacturer may design similar hardware but with varying configurations, for instance a 1U versus a 2U system. Differences can be in the platform sensors and porting, for example differing numbers of fans and/or LEDs. There is a need for a BMC as a platform management device to support not only generic features but also to have the capability to handle platform-specific differences. Further, there is a need for the BMC to be capable of handling the platform detection and the platform monitoring during run time.</p>
<p id="p-0005" num="0004">Therefore, a heretofore unaddressed need still exists in the art to address the aforementioned deficiencies and inadequacies.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0006" num="0005">In one aspect, the present invention relates to a computer-implemented method for managing a computer system having a processor that is programmed to cause the computer system to perform functions according to operational steps of the method. According to one embodiment, the execution of a boot loader is initiated, from firmware stored in a system memory, to initialize a management controller operating on a management platform. Preloaded identification data is detected, where the preloaded identification data contains a predetermined manufacturer-specific platform identifier (&#x201c;platform ID&#x201d;) that corresponds to the management platform. If no preloaded identification data is detected, then the platform ID is determined based on one or more of GPIO settings on the management controller, firmware data, EEPROM data, and sensor detection. Detection of preloaded hardware data is performed, where the hardware data contains operating parameters for a plurality of hardware components that operate on the management platform and that are operatively coupled to the management controller. In one embodiment the plurality of hardware components includes a network interface means and the host computer is managed by a remote management computer running a management client application, via network communication link that is coupled to the management computer and the network interface means.</p>
<p id="p-0007" num="0006">If no preloaded hardware data is detected, then operating parameters are determined according to the platform ID. The management controller initializes the hardware components according to the platform ID and particular operating parameters. Initialization data containing the platform ID and the operating parameters is flashed to the system memory. In one embodiment, flashing initialization data includes combining the platform ID and operating parameters into a single flash image and flashing the single flash image to the firmware. The flashed single flash image is configured such that it can be used by the boot loader in a subsequent iteration of initializing the management controller.</p>
<p id="p-0008" num="0007">In one embodiment, the management controller is a baseboard management controller (&#x201c;BMC&#x201d;) of a managed host computer that has the plurality of hardware components. The hardware components operate in the management platform and are communicatively coupled to the BMC. The BMC is communicatively coupled to a remote management computer that is operative to control functions performed by the BMC and to communicate data associated with operations of the hardware components via one or more network connections.</p>
<p id="p-0009" num="0008">In one embodiment, detecting the platform ID based on GPIO settings includes reading predetermined strapping values from one or more dedicated GPIO pins of the management controller. The step of detecting the platform ID based on firmware data includes reading the platform ID from stored data in the firmware. Detecting the platform ID based on EEPROM data includes reading the platform ID from stored data in an EEPROM device that is operatively associated with the host computer. The step of determining the platform ID based on sensor detection is performed if the platform ID cannot be determined based on at least one of GPIO settings, firmware data, and EEPROM data.</p>
<p id="p-0010" num="0009">Determining the platform ID based on sensor detection includes detecting one or more active sensors that are operatively coupled to the management controller and that are operative to monitor the operation of one or more of the hardware components based on the operating parameters. Each of a plurality of different manufacturer-specific platform IDs is definable by a particular configuration of sensors, such that the platform ID is determinable based on the detected active sensors. The platform ID is then determined based on the detected one or more active sensors. In one embodiment, the one or more active sensors include at least one of a temperature sensor, power status sensor, and network interface sensor.</p>
<p id="p-0011" num="0010">According to another aspect, the present invention relates to a computer-readable medium with stored computer-executable instructions which, when executed by a programmable processor of a computer system, cause the computer system to perform specific functions. According to one embodiment, the functions include initiating the execution of a boot loader from firmware stored in a system memory, to initialize a management controller that operates on a management platform. The functions further include detecting preloaded identification data containing a predetermined manufacturer-specific platform ID corresponding to the management platform. The functions also include, if no preloaded identification data is detected, determining the platform ID based on one or more of GPIO settings on the management controller, firmware data, EEPROM data, and sensor detection. The functions additionally include detecting preloaded hardware data containing operating parameters for a plurality of hardware components that operate on the server management platform and that are operatively coupled to the management controller. If no preloaded hardware data is detected, then the operating parameters are determined according to the platform ID. In one embodiment, the hardware components include a network interface means and the host computer is managed by a remote management computer running a management client application, via a network connection that is operatively connected to the host computer and the management controller.</p>
<p id="p-0012" num="0011">The functions also include causing the management controller to initialize the hardware components according to the platform ID and operating parameters, and flashing the initialization data containing the platform ID and operating parameters to the system memory.</p>
<p id="p-0013" num="0012">In one embodiment, detecting the platform ID based on GPIO settings includes reading predetermined strapping values from one or more dedicated GPIO pins of the management controller. Detecting the platform ID based on firmware data includes reading the platform ID from stored data in the firmware that is operatively associated with the host computer. Detecting the platform ID based on EEPROM data includes reading the platform ID from stored data on an EEPROM device that is operatively associated with the host computer. Determining the platform ID based on sensor detection is performed if the platform ID cannot be determined based on at least one of GPIO settings, firmware data, and EEPROM data.</p>
<p id="p-0014" num="0013">Determining the platform ID based on sensor detection includes detecting one or more active sensors that are operatively coupled to the management controller and that are operative to monitor the operation of one or more of the hardware components based on the operating parameters. Each of a plurality of different manufacturer-specific platform IDs is definable by a particular configuration of sensors, and the platform ID is then determined based on the detected one or more sensors. In one embodiment, the one or more sensors include a temperature sensor, power status sensor, and network interface sensor.</p>
<p id="p-0015" num="0014">In yet another aspect, the present invention relates to a computer system. According to one embodiment, the computer system includes a management controller, system memory with a firmware, a plurality of hardware components operating on a management platform and operatively coupled to the management controller, and a programmable processor. The processor is programmed to cause the computer system to initiate the execution of a boot loader from the firmware. The boot loader is operative to initialize the management controller to operate on the management platform. The processor is further programmed to detect preloaded identification data containing a predetermined manufacturer-specific platform ID corresponding to the management platform. The processor is also programmed to, if no preloaded identification data is detected, determine the platform ID based on one or more of the GPIO settings on the management controller, firmware data, EEPROM data, and sensor detection. The processor is further programmed to detect preloaded hardware data containing operating parameters for the hardware components and, if no preloaded hardware data is detected, determine the operating parameters according to the platform ID. Also, the processor is programmed to cause the management controller to initialize the hardware components according to the platform ID and operating parameters, and to flash the initialization data containing the platform ID and operating parameters to the system memory.</p>
<p id="p-0016" num="0015">In one embodiment, the firmware has a flash firmware image that is utilized by the boot loader to initialize the management controller. Flashing the initialization data containing the platform ID and operating parameters to the system memory includes combining the platform ID and operating parameters to form a single flash image and flashing the single flash image to the system memory such as to replace a prior firmware image. The stored single flash image is configured such as to be usable by the boot loader in a subsequent iteration of initializing the management controller.</p>
<p id="p-0017" num="0016">Detecting the platform ID based on GPIO settings includes reading predetermined strapping values from one or more dedicated GPIO pins of the management controller. Detecting the platform ID based on firmware data includes reading the platform ID from stored data in the firmware. Detecting the platform ID based on EEPROM data includes reading the platform ID from stored data on an EEPROM device that is operatively associated with the managed host computer. Determining the platform ID based on sensor detection includes detecting the sensors of a plurality of sensors that are active to monitor the condition of at least one of the hardware components, based on the operating parameters. The plurality of sensors are operatively coupled to the management controller, and, in one embodiment, include one or more of a temperature sensor, power status sensor, network interface sensors, and cooling means status sensor.</p>
<p id="p-0018" num="0017">In one embodiment, the hardware components include one or more of a power regulation means, network interface means, and cooling means. The platform ID is definable by configuration data corresponding to active sensors. The configuration data includes one or more of the number, arrangement, and operating parameters of the sensors, and determining the platform ID includes matching the configuration data with a corresponding stored one of a plurality of different defined platform IDs.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0019" num="0018">The accompanying drawings illustrate one or more embodiments of the invention and, together with the written description, serve to explain the principles of the invention. Wherever possible, the same reference numbers are used throughout the drawings to refer to the same or like elements of an embodiment, and wherein:</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 1</figref> schematically shows a computer system with a management controller and hardware components operating on a management platform, according to one embodiment of the present invention.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 2</figref> is a flow chart illustrating operational steps of a computer-implemented method for managing a computer system, according to one embodiment of the present invention; and</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 3</figref> schematically shows architecture of a computer system according to one or more embodiments of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0023" num="0022">The present invention is more particularly described in the following examples that are intended as illustrative only since numerous modifications and variations therein will be apparent to those skilled in the art. Various embodiments of the invention are now described in detail. Referring to the drawings, like numbers indicate like components throughout the views. As used in the description herein and throughout the claims that follow, the meaning of &#x201c;a&#x201d;, &#x201c;an&#x201d;, and &#x201c;the&#x201d; includes plural reference unless the context clearly dictates otherwise. Also, as used in the description herein and throughout the claims that follow, the meaning of &#x201c;in&#x201d; includes &#x201c;in&#x201d; and &#x201c;on&#x201d; unless the context clearly dictates otherwise.</p>
<p id="p-0024" num="0023">The description will be made as to the embodiments of the present invention in conjunction with the accompanying drawings in <figref idref="DRAWINGS">FIGS. 1-3</figref>. According to one aspect, the present invention relates to a computer system. According to one embodiment, the computer system <b>100</b> has a management controller <b>112</b>, a system memory <b>120</b> with a firmware <b>122</b>, and a plurality of hardware components <b>114</b>, <b>116</b>, and <b>134</b> that operate on a management platform and are operatively coupled to the management controller <b>112</b>. As shown, a programmable processor (&#x201c;CPU&#x201d;) <b>118</b> is also provided.</p>
<p id="p-0025" num="0024">The programmable processor <b>118</b> is programmed to cause the computer system <b>100</b> to perform functions according to operational steps of a method. In one embodiment, the functions performed include initiating the execution of a boot loader <b>124</b> from firmware <b>122</b> stored in a system memory <b>120</b>, to initialize a management controller <b>112</b> operating on a management platform. The functions further include detecting preloaded identification data containing a predetermined manufacturer-specific platform ID corresponding to the management platform.</p>
<p id="p-0026" num="0025">If no preloaded identification data is detected, then the platform ID is determined based on at least one of GPIO settings on the management controller <b>112</b>, firmware data stored in firmware <b>122</b>, EEPROM data stored on an EEPROM device, and sensor detection. The functions also include detecting preloaded hardware data containing operating parameters for a plurality of hardware components <b>114</b>, <b>116</b>, <b>134</b> operating on the server management platform and operatively coupled to the management controller <b>112</b>. If no preloaded hardware data is detected, the operating parameters are determined according to the platform ID. The functions performed additionally include causing the management controller <b>112</b> to initialize the plurality of hardware components <b>114</b>, <b>116</b>, <b>134</b> according to the platform ID and operating parameters, and flashing the initialization data containing the platform ID and operating parameters to the system memory <b>120</b>.</p>
<p id="p-0027" num="0026">In one embodiment the management controller <b>112</b> is a baseboard management controller (BMC) of a managed host computer <b>110</b> having the plurality of hardware components <b>114</b>, <b>116</b>, and <b>134</b>. The plurality of hardware components <b>114</b>, <b>116</b>, and <b>134</b> operate on the management platform and are communicatively coupled to the BMC <b>112</b>. The BMC <b>112</b> is communicatively connected to a remote management computer <b>150</b> that is operative to control functions performed by the BMC <b>112</b> and to communicate data associated with operations of the plurality of hardware components <b>114</b>, <b>116</b>, and <b>134</b>, via at least one network connection. As shown in <figref idref="DRAWINGS">FIG. 1</figref>, communication link <b>102</b> is communicatively coupled with one or both of the first network interface <b>114</b> and second network interface <b>116</b>, and is also connected to network <b>140</b>. Communication link <b>104</b> is communicatively coupled with the remote management computer <b>150</b> and is connected to the network <b>140</b>.</p>
<p id="p-0028" num="0027">In one embodiment, the firmware <b>122</b> of system memory <b>120</b> contains a flashed firmware image that is utilized by the boot loader <b>124</b> to initialize the management controller <b>112</b>. The firmware image contains initialization data with the platform ID and operating parameters associated with functions performed by the plurality of hardware components <b>114</b>, <b>116</b>, and <b>134</b> A plurality of sensors <b>132</b> are operatively coupled to the management controller <b>112</b> and are operative to monitor the condition of at least one of the plurality of hardware components <b>114</b>, <b>116</b>, <b>134</b> based on the operating parameters. The plurality of hardware components <b>114</b>, <b>116</b>, <b>134</b> includes a power regulation means <b>134</b>, network interface means <b>114</b>, <b>116</b>, and cooling means (not shown). In one embodiment, sensors <b>132</b> are operable to be detected as active sensors running on the management platform. The sensors <b>132</b> include one or more of a temperature sensor, power status sensor, and network interface sensor. The plurality of hardware components <b>114</b>, <b>116</b>, and <b>134</b> includes a first network interface means <b>114</b> and a second network interface means <b>116</b>, and the host computer <b>110</b> is managed by a remote management computer <b>150</b> running a management client application <b>152</b>, via network communication links <b>102</b> and <b>104</b>, which are operatively coupled to one or both of the first network interface means <b>114</b> and second network interface means <b>116</b>. The communication links are communicatively connected to a network <b>140</b>.</p>
<p id="p-0029" num="0028">In another aspect, the present invention relates to computer-implemented method for managing a computer system. According to one embodiment, a processor of a computer system is programmed to cause the computer system to perform operational steps of a method. Now referring specifically to the embodiment shown in <figref idref="DRAWINGS">FIG. 2</figref>, the method <b>200</b> includes the step <b>201</b> of initiating the execution of a boot loader from firmware stored in a system memory, to initialize a management controller operating on a management platform.</p>
<p id="p-0030" num="0029">In one embodiment, upon boot the management controller checks to determine if platform detection and loading of platform sensor data has already been performed. The management platform has a particular, predetermined manufacturer-specific platform ID. In one embodiment, determining if detection and platform sensor data loading has already been performed includes checking to determine if SDR.dat is present and, if not present, performing platform detection and loading platform sensor data. In another embodiment, determining if detection and sensor data loading has already been performed includes checking for a specific platform ID in a pre-set non-volatile memory location and, if a platform ID is not present, performing platform detection and loading platform sensor data. With regard to loading platform sensor data, in one embodiment the management controller has a master list of platform porting information in a configuration file called SDRMaster.dat. This configuration file is demarcated using platform IDs, for example as follows:</p>
<p id="p-0031" num="0030"><chemistry id="CHEM-US-00001" num="00001">
<img id="EMI-C00001" he="24.13mm" wi="69.85mm" file="US08627054-20140107-C00001.TIF" alt="embedded image" img-content="chem" img-format="tif"/>
</chemistry>
</p>
<p id="p-0032" num="0031">In one embodiment, once the management platform ID is available, the sensor configuration file is parsed using the platform ID and the necessary platform sensor data is read to be utilized for performing platform initialization, for example setting fan speed and/or blinking LEDs.</p>
<p id="p-0033" num="0032">Referring again to <figref idref="DRAWINGS">FIG. 2</figref>, from step <b>201</b> operation proceeds to step <b>203</b>, where it is determined if the platform ID can be detected from preloaded identification data. If the platform ID cannot be detected at step <b>203</b>, then operation proceeds to steps <b>207</b> and <b>209</b>, where it is determined if the platform ID can be detected from settings on one or more GPIO pins of the management controller. If the platform ID cannot be detected at steps <b>207</b> and <b>209</b>, then operation proceeds to steps <b>211</b> and <b>213</b>, where it is determined if the platform ID can be detected from data stored in firmware. If the platform ID cannot be detected at steps <b>211</b> and <b>213</b>, then operation proceeds to steps <b>215</b> and <b>217</b>, where it is determined if the platform ID can be detected from data stored on an EEPROM that is operationally coupled to the management controller. If the platform ID cannot be detected at steps <b>215</b> and <b>217</b>, then operation proceeds to steps <b>219</b>, <b>221</b>, and <b>223</b>, where sensor detection is performed.</p>
<p id="p-0034" num="0033">Those skilled in the art will recognize that the order of progression from preloaded identification data, GPIO settings, firmware data, EEPROM data, or sensor detection can be varied from the order shown according to the embodiment of <figref idref="DRAWINGS">FIG. 2</figref> without departing from the scope of the present invention. Further, those skilled in the art will recognize that each of these detection methods can alternatively be performed simultaneously rather than along a serial progression. Still further, those skilled in the art will recognize that the platform ID can be determined based on more than one of these detection methods used in conjunction, for example where one detection method may be able to detect data containing information that partially contributes to determining the platform ID and another detection method is able to contribute the complimentary information such that the sum of the information leads to the determination of the platform ID.</p>
<p id="p-0035" num="0034">According to the embodiment of the method <b>200</b> shown in <figref idref="DRAWINGS">FIG. 2</figref>, once the platform ID is detected from one of preloaded identification data, GPIO pin settings, firmware data, EEPROM data, or sensor detection data, then operation proceeds to step <b>225</b>, where it is determined if operating parameters can be detected from preloaded hardware data. The operating parameters correspond to parameters for functions performed by a plurality of hardware components that operate on the management platform and are operatively coupled to the management controller. If operating parameters cannot be detected from preloaded hardware data, then operation proceeds to step <b>225</b> and <b>229</b>, where it is determined if the operating parameters can be determined based on the detected platform ID. Once the operating parameters are determined based on from one of steps <b>227</b> and <b>229</b>, then operation proceeds to <b>231</b>, where the management controller is caused to initialize the plurality of hardware components according to the platform ID and operating parameters. From step <b>231</b>, operation proceeds to step <b>233</b>, where initialization data containing the platform ID and operating parameters is flashed to the system memory.</p>
<p id="p-0036" num="0035">According to one embodiment, the steps <b>207</b> and <b>209</b> of detecting the platform ID based on GPIO settings include reading predetermined strapping values from one or more dedicated GPIO pins of the management controller. Hardware strapping is a method by which hardware lines can be set to a predetermined level (value) during manufacturing. A management controller such as a BMC is itself a processor with many GPIO pins available for various purposes. Hardware strapping utilizes some of these GPIOs for platform detection. Depending on the number of platforms intended to be manufactured, a specific number of GPIOs can be chosen. For example, two GPIOs can be used for manufacturing four platforms. The number of platforms can be set to follow 2<sup>n</sup>, where n is the number of GPIOs. During hardware manufacturing, the dedicated platform detection GPIOs of the management controller can be pre-programmed to a known value based on an individual platform.</p>
<p id="p-0037" num="0036">The steps <b>211</b> and <b>213</b> of detecting the platform ID based on firmware data include reading the platform ID from stored data in the firmware <b>122</b>. In a computer server, the BMC and a BIOS are two key components that are operative to communicate with each other to transfer necessary information. A system BIOS using a low pin count (LPC) bus is a common means for communication. BIOS development is also platform dependent, and accordingly some server manufacturers embed the platform ID. The BIOS can send out the platform ID via LPC interface to the management controller, and the management controller then utilizes the platform ID.</p>
<p id="p-0038" num="0037">Detecting the platform ID based on EEPROM data, corresponding to steps <b>215</b> and <b>217</b>, includes reading the platform ID from stored data on an EEPROM device that is operatively associated with the host computer.</p>
<p id="p-0039" num="0038">The steps <b>219</b>, <b>221</b>, and <b>223</b> of determining the platform ID based on sensor detection are performed if the platform ID cannot be determined based on one or more of the GPIO settings, firmware data, and EEPROM data. In one embodiment, the management controller has a list of unique sensors and platform IDs for each of a plurality of platforms. Upon boot, the management controller attempts to access/probe) each of the sensors and, if access is successful to any one of the sensors, the management controller utilizes the corresponding platform ID. The probe logic can be tailored based on the number of the platforms and sub-platforms. Exemplary logic is as follows:</p>
<p id="p-0040" num="0039">If Sensor A succeeds, then if Sensor A1 succeeds&#x2192;Platform A1, else&#x2192;Platform A2;</p>
<p id="p-0041" num="0040">If Sensor A fails, then if Sensor B1 succeeds&#x2192;Platform B1, else&#x2192;Platform B2.</p>
<p id="p-0042" num="0041">Step <b>219</b> corresponds to detecting one or more active sensors that are operatively coupled to the management controller and that are operative to monitor the operation of one or more of a plurality of hardware components based on the operating parameters. Steps <b>221</b> and <b>223</b> correspond to determining the platform ID based on the one or more detected active sensors, where each of a plurality of different manufacturer-specific platform IDs is definable by a particular configuration of sensors. In one embodiment, the type, arrangement, configuration and/or other detectable characteristics of the active sensors are matched with known characteristics that are exclusively associated with one specific platform, thereby resulting in determination of the platform ID.</p>
<p id="p-0043" num="0042">In one embodiment, the sensors that are operable to be detected as active sensors include one or more of a temperature sensor, power status sensor, and network interface sensor. The plurality of hardware components includes a first network interface means and a second network interface means, and the host computer is managed by a remote management computer running a management client application, via network communication links that are operatively coupled to one or both of the first network interface means and second network interface means. The communication links are communicatively connected to a network.</p>
<p id="p-0044" num="0043">In one embodiment, the step <b>233</b> of writing initialization data includes combining the platform ID and operating parameters into a single flash image and flashing the single flash image to the firmware. The single flashed image is configured such that it is able to be utilized by the boot loader in one or more subsequent iterations of performing the functions according to method <b>200</b>. In one embodiment, parsed sensor data is copied to a file called SDR.dat. Subsequent management controller boot operations utilize SDR.dat for platform initialization. During a first boot of the management controller, this file is empty. In another embodiment, the platform ID is written to a pre-set non-volatile memory that is readable for future boot operations for the management controller.</p>
<p id="p-0045" num="0044">In yet another aspect, the present invention relates to a computer-readable medium having stored thereon computer-executable instructions which, when executed by a programmable processor of a computer system, cause the computer system to perform a plurality of functions. In one embodiment, the functions include initiating the execution of a boot loader from firmware stored in a system memory to initialize a management controller operating on a management platform, and detecting preloaded identification data containing a predetermined manufacturer-specific platform ID corresponding to the management platform. The functions also include, if no preloaded identification data is detected, determining the platform ID based on one or more of GPIO settings on the management controller, firmware data, EEPROM data, and sensor detection. Additionally, the functions include detecting preloaded hardware data containing operating parameters for a plurality of hardware components operating on the server management platform and operatively coupled to the management controller. In one embodiment, the plurality of hardware components includes a network interface means, and the host computer is managed by a remote management computer running a management client application, via communication links operatively connected to the host computer and the management controller.</p>
<p id="p-0046" num="0045">The functions further include, if no preloaded hardware data is detected, determining the operating parameters according to the platform ID and causing the management controller to initialize the plurality of hardware components according to the platform ID and operating parameters. Still further, the functions performed include flashing the initialization data containing the platform ID and operating parameters to the system memory.</p>
<p id="p-0047" num="0046">In one embodiment, the function of detecting the platform ID based on GPIO settings includes reading predetermined strapping values from at least one dedicated GPIO pin of the management controller. The function of detecting the platform ID based on firmware data includes reading the platform ID from stored data in the firmware that is operatively associated with the host computer. The function of detecting the platform ID based on firmware data includes reading the platform ID from stored data in the firmware that is operatively associated with the host computer. The function of detecting the platform ID based on EEPROM data includes reading the platform ID from stored data in an EEPROM device that is operatively associated with the host computer.</p>
<p id="p-0048" num="0047">The function of determining the platform ID based on sensor detection is performed if the platform ID cannot be determined based on one or more of GPIO settings, firmware data, and EEPROM data. The function of determining the platform ID based on sensor detection includes detecting one or more active sensors that are operatively coupled to the management controller and operative to monitor the operation of one or more of the plurality of hardware components based on the operating parameters, where each of a plurality of different manufacturer-specific platform IDs is definable by a particular configuration of sensors. In one embodiment, the type, arrangement, configuration and/or other detectable characteristics of the detected active sensors are matched with known characteristics that are exclusively associated with one specific platform, thereby resulting in determination of the platform ID.</p>
<p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. 3</figref> schematically shows computer architecture for various computing systems utilized according to one or more embodiments of the present invention. Those skilled in the art will recognize that although the embodiments described herein are discussed in the context of server computers, other types of computing devices may be utilized. Further, those skilled in the art will also recognize that the architecture shown in <figref idref="DRAWINGS">FIG. 3</figref> may be utilized to embody a managed host computer or management client computer.</p>
<p id="p-0050" num="0049">The architecture shown in <figref idref="DRAWINGS">FIG. 3</figref> corresponds to a computer <b>300</b> having a baseboard, or &#x201c;motherboard&#x201d;, which is a printed circuit board to which components or devices may be connected by way of a system bus or other electrical communication path. In one embodiment, a central processing unit (&#x201c;CPU&#x201d;) <b>322</b> operates in conjunction with a chipset <b>352</b>. The CPU <b>322</b> is a standard central processor that performs arithmetic and logical operations necessary for the operation of the computer. The chipset <b>352</b> includes a north bridge <b>324</b> and a south bridge <b>326</b>, where the north bridge <b>324</b> provides an interface between the CPU <b>322</b> and the remainder of the computer <b>300</b>. The north bridge <b>324</b> also provides an interface to a random access memory (&#x201c;RAM&#x201d;) used as the main memory <b>354</b> in the computer <b>300</b> and, optionally, to an onboard graphics adapter <b>330</b>. The north bridge <b>324</b> may also include functionality for providing networking functions through a gigabit Ethernet adapter <b>328</b>. The gigabit Ethernet adapter <b>328</b> is operative to connect the computer <b>300</b> to another computer via a network. Connections which may be made by the network adapter <b>328</b> include LAN or WAN connections. As shown, the north bridge <b>324</b> is connected to the south bridge <b>326</b>.</p>
<p id="p-0051" num="0050">The south bridge <b>326</b> is operative to control many of the input/output functions of the computer <b>300</b>. In particular, the south bridge <b>326</b> may provide one or more universal serial bus (&#x201c;USB&#x201d;) ports <b>332</b>, an Ethernet controller <b>360</b>, and one or more general purpose input/output (&#x201c;GPIO&#x201d;) pins <b>334</b>. The south bridge <b>326</b> may also provide a bus for interfacing peripheral card devices such as a graphics adapter <b>362</b>. In one embodiment, the bus comprises a peripheral component interconnect (&#x201c;PCI&#x201d;) bus. The south bridge <b>326</b> may also provide a system management bus <b>364</b> for use in managing the various components of the computer <b>300</b>, and a power management module <b>356</b>.</p>
<p id="p-0052" num="0051">The south bridge <b>326</b> is also operative to provide one or more interfaces for connecting mass storage devices to the computer <b>300</b>. For instance, according to an embodiment, the south bridge <b>326</b> includes a serial advanced technology attachment (&#x201c;SATA&#x201d;) adapter for providing one or more serial ATA ports <b>336</b>. The serial ATA ports <b>336</b> may be, in turn, connected to one or more mass storage devices storing an operating system <b>340</b> and application programs <b>342</b>, such as the SATA disk drive <b>338</b>. Those skilled in the art will recognize that an operating system <b>340</b> has a set of programs that control operations of a computer and allocation of resources. An application program is software that runs on top of the operating system software, or other runtime environment, and uses computer resources to perform application specific tasks desired by the user.</p>
<p id="p-0053" num="0052">The mass storage devices connected to the south bridge <b>326</b>, and their associated computer-readable media, provide non-volatile storage for the computer <b>300</b>. Although the description of computer-readable media contained herein refers to a mass storage device, such as a hard disk or CD-ROM drive, those skilled in the art will recognize that computer-readable media can be any available media that can be accessed by the computer <b>300</b>. Computer-readable media may comprise computer storage media and communication media. Computer storage media includes volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer-readable instructions, data structures, program modules or other data. Computer storage media includes RAM, ROM, EPROM, EEPROM, flash memory or other solid state memory technology, CD-ROM, DVD, HD-DVD, BLU-RAY, or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by the computer.</p>
<p id="p-0054" num="0053">A low pin count (&#x201c;LPC&#x201d;) interface may also be provided by the south bridge for connecting a &#x201c;Super I/O&#x201d; device <b>370</b>. The Super I/O device <b>370</b> is responsible for providing a number of input/output ports, including a keyboard port, a mouse port, a serial interface <b>372</b>, a parallel port, and other types of input/output ports. The LPC interface may also connect a computer storage media such as a ROM or a flash memory such as a NVRAM <b>348</b> for storing the firmware <b>350</b> that includes program code containing the basic routines that are operative to start up the computer <b>300</b> and to transfer information between elements within the computer <b>300</b>.</p>
<p id="p-0055" num="0054">As described briefly above, the south bridge <b>326</b> may include a system management bus <b>364</b>. The system management bus <b>364</b> may include a baseboard management controller (&#x201c;BMC&#x201d;) <b>366</b>. In general, the BMC <b>366</b> is a microcontroller that monitors operation of the computer system <b>300</b>. In a more specific embodiment, the BMC <b>366</b> monitors health-related aspects associated with the computer system <b>300</b>, such as the temperature of one or more components of the computer system <b>300</b>, speed of rotational components (e.g., spindle motor, CPU Fan, etc.) within the system, the voltage across or applied to one or more components within the system <b>300</b>, and the available or used capacity of memory devices within the system <b>300</b>. To accomplish these monitoring functions, the BMC <b>366</b> is communicatively connected to one or more components by way of the management bus <b>364</b>. In an embodiment, these components include sensor devices for measuring various operating and performance-related parameters within the computer system <b>300</b>.</p>
<p id="p-0056" num="0055">The management bus <b>364</b> is used by the BMC <b>366</b> to request and/or receive various operating and performance-related parameters from one or more components, which are also communicatively connected to the management bus <b>364</b>. For instance, in one embodiment, the management bus <b>364</b> communicatively connects the BMC <b>366</b> to a CPU temperature sensor and a CPU fan (not shown in <figref idref="DRAWINGS">FIG. 3</figref>), thereby providing a means for the BMC <b>366</b> to monitor and/or control operation of these components. The BMC <b>366</b> may be directly connected to sensors <b>368</b>. The serial ports <b>372</b> and the Ethernet controller <b>360</b> may be utilized to establish a connection with the BMC <b>366</b>.</p>
<p id="p-0057" num="0056">It should be appreciated that the computer <b>300</b> may comprise other types of computing devices, including hand-held computers, embedded computer systems, personal digital assistants, and other types of computing devices known to those skilled in the art. It is also contemplated that the computer <b>300</b> may not include all of the components shown in <figref idref="DRAWINGS">FIG. 3</figref> and/or may include other components that are not explicitly shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0058" num="0057">The foregoing description of the exemplary embodiments of the invention has been presented only for the purposes of illustration and description and is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in light of the above teaching.</p>
<p id="p-0059" num="0058">The embodiments were chosen and described in order to explain the principles of the invention and their practical application so as to activate others skilled in the art to utilize the invention and various embodiments and with various modifications as are suited to the particular use contemplated. Alternative embodiments will become apparent to those skilled in the art to which the present invention pertains without departing from its spirit and scope. Accordingly, the scope of the present invention is defined by the appended claims rather than the foregoing description and the exemplary embodiments described therein.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-chemistry idref="CHEM-US-00001" cdx-file="US08627054-20140107-C00001.CDX" mol-file="US08627054-20140107-C00001.MOL"/>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A management controller-implemented method, the management controller managing a host computer system, the method comprising:
<claim-text>initiating, at a processor of the management controller, execution of a first management platform by executing a boot loader that is configured to load the first management platform;</claim-text>
<claim-text>detecting, at the management controller, whether sensor data exists in firmware data of the management controller and whether a predetermined manufacturer-specific platform identifier identifying a management platform exists in a non-volatile memory location of the management controller;</claim-text>
<claim-text>in response to the condition that no sensor data and no platform identifier is detected, determining the platform identifier based on at least one of GPIO pin settings on the management controller, information received from BIOS of the host computer, and detection of one or more sensors each unique to a respective particular management platform;</claim-text>
<claim-text>selecting a set of sensor data from a configuration file based on the determined platform identifier; and</claim-text>
<claim-text>loading the first management platform and initializing the first management platform with the selected set of sensor data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the management controller is a baseboard management controller of the managed host computer having a plurality of hardware components, the plurality of hardware components operating on the first management platform and communicatively coupled to the baseboard management controller, and the baseboard management controller communicatively coupled to a remote management computer that is operative to control functions performed by the management controller and communicate data associated with operations of the plurality of hardware components via at least one network connection.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein detecting the platform identifier based on GPIO pin settings comprises reading predetermined strapping values from at least one dedicated GPIO pin of the management controller.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein detecting whether the platform identifier exists in a non-volatile memory location comprises reading the platform identifier from stored data in an EEPROM device.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining the platform identifier based on detection of the one or more unique sensors is performed if the platform identifier cannot be determined based on at least one of GPIO pin settings and the information received from the BIOS.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining the platform identifier based on detection of the one or more unique sensors comprises detecting at least one active sensor that is operatively coupled to the management controller and that is operative to monitor the operation of at least one of a plurality of hardware components based on operating parameters.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the at least one active sensor comprises at least one of a temperature sensor, power status sensor, and network interface sensor.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising determining the platform identifier based on the detected at least one active sensor, wherein each of a plurality of different manufacturer-specific platform identifiers is definable by a particular configuration of sensors.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the host computer system comprises a plurality of hardware components, the plurality of hardware components comprising a network interface and the host computer is managed by a remote management computer running a management client application, via network communication link coupled to the management computer and the network interface.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising: copying the selected sensor data to the firmware data of the management controller.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising: writing the determined platform identifier to the non-volatile memory location of the management controller.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A non-transitory computer-readable medium having stored thereon computer-executable instructions which, when executed by a programmable processor of a computer system, cause the computer system to perform functions comprising:
<claim-text>initiating, at a processor of the management controller, execution of a first management platform by executing a boot loader that is configured to load the first management platform;</claim-text>
<claim-text>detecting, at the management controller, whether sensor data exists in firmware data of the management controller and whether a predetermined manufacturer-specific platform identifier identifying a management platform exists in a non-volatile memory location of the management controller;</claim-text>
<claim-text>in response to the condition that no sensor data and no platform identifier is detected, determining the platform identifier based on at least one of GPIO pin settings on the management controller, information received from BIOS of the host computer, and detection of one or more sensors each unique to a respective particular management platform;
<claim-text>selecting a set of sensor data from a configuration file based on the determined platform identifier; and</claim-text>
<claim-text>loading the first management platform and initializing the first management platform with the selected set of sensor data.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The non-transitory computer-readable medium of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein detecting the platform identifier based on GPIO pin settings comprises reading predetermined strapping values from at least one dedicated GPIO pin of the management controller.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The non-transitory computer-readable medium of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein detecting whether the platform identifier exists in a non-volatile memory location comprises reading the platform identifier from stored data on an EEPROM device.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The non-transitory computer-readable medium of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein determining the platform identifier based on detection of the one or more unique sensors is performed if the platform identifier cannot be determined based on at least one of GPIO pin settings and the information received from the BIOS.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The non-transitory computer-readable medium of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein determining the platform identifier based on detection of the one or more unique sensors comprises detecting at least one active sensor that is operatively coupled to the management controller and that is operative to monitor the operation of at least one of a plurality of hardware components based on operating parameters.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The non-transitory computer-readable medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the at least one active sensor comprises at least one of a temperature sensor, power status sensor, and network interface status sensor.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The non-transitory computer-readable medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising determining the platform identifier based on the detected at least one active sensor, wherein each of a plurality of different manufacturer-specific platform identifiers is definable by a particular configuration of sensors.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The non-transitory computer-readable medium of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the computer system comprises a plurality of hardware components, the plurality of hardware components comprising a network interface and the host computer is managed by a remote management computer running a management client application, via a network connection operatively connected to the host computer and the management controller.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. A computer system, comprising:
<claim-text>a management controller;</claim-text>
<claim-text>a system memory comprising a firmware;</claim-text>
<claim-text>a plurality of hardware components operating on a first management platform and operatively coupled to the management controller; and</claim-text>
<claim-text>a programmable processor that is programmed to cause the computer system to:
<claim-text>initiate execution of the first management platform by executing a boot loader from the firmware, the boot loader being configured to load the first management platform;</claim-text>
<claim-text>detect whether sensor data exists in firmware data of the management controller and whether a predetermined manufacturer-specific platform identifier identifying a management platform exists in a non-volatile memory location of the management controller;</claim-text>
<claim-text>in response to the condition that no sensor data and no platform identifier is detected, determine the platform identifier based on at least one of GPIO pin settings on the management controller, information received from BIOS of the host computer, and detection of one or more sensors each unique to a respective particular management platform;
<claim-text>select a set of sensor data from a configuration file based on the determined platform identifier; and</claim-text>
<claim-text>load the first management platform and initializing the first management platform with the selected set of sensor data.</claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The computer system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the programmable processor is programmed to copy the selected sensor data to the firmware data of the management controller.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The computer system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the programmable processor is programmed to write the determined platform identifier to the non-volatile memory location of the management controller.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The computer system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein detecting the platform identifier based on GPIO pin settings comprises reading predetermined strapping values from at least one dedicated GPIO pin of the management controller.</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The computer system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein detecting whether the platform identifier exists in a non-volatile memory location comprises reading the platform identifier from stored data on an EEPROM device.</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The computer system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein determining the platform identifier based on detection of the one or more unique sensors comprises detecting a plurality of sensors that are active to monitor the condition of the plurality of hardware components.</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The computer system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, further comprising a plurality of sensors operatively coupled to the management controller and that are operative to monitor conditions of the plurality of hardware components.</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The computer system of <claim-ref idref="CLM-00026">claim 26</claim-ref>, wherein the plurality of hardware components comprises at least one of a power management module, network interface, and cooling fan.</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. The computer system of <claim-ref idref="CLM-00027">claim 27</claim-ref>, wherein the plurality of sensors comprises at least one of a temperature sensor, power status sensor, network interface sensor, and cooling status sensor.</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. The computer system of <claim-ref idref="CLM-00026">claim 26</claim-ref>, wherein the platform identifier is definable by configuration data corresponding to active sensors, the configuration data comprising at least one of the number, arrangement, and operating parameters of the sensors, and wherein determining the platform identifier comprises matching the configuration data with a corresponding stored one of a plurality of different defined platform identifiers.</claim-text>
</claim>
</claims>
</us-patent-grant>
