<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626475-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626475</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13184293</doc-number>
<date>20110715</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>347</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>17</main-group>
<subgroup>50</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>703  2</main-classification>
<further-classification>703  6</further-classification>
<further-classification>703 22</further-classification>
<further-classification>703 24</further-classification>
<further-classification>700 29</further-classification>
<further-classification>702187</further-classification>
</classification-national>
<invention-title id="d2e53">System and method for accessing a multiphysics modeling system via a design system user interface</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5408638</doc-number>
<kind>A</kind>
<name>Sagawa et al.</name>
<date>19950400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6349272</doc-number>
<kind>B1</kind>
<name>Phillips</name>
<date>20020200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6810370</doc-number>
<kind>B1</kind>
<name>Watts, III</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7519518</doc-number>
<kind>B2</kind>
<name>Langemyr et al.</name>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>7539688</doc-number>
<kind>B2</kind>
<name>Sezgin et al.</name>
<date>20090500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7596474</doc-number>
<kind>B2</kind>
<name>Langemyr et al.</name>
<date>20090900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>7623991</doc-number>
<kind>B1</kind>
<name>Langemyr et al.</name>
<date>20091100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>7818730</doc-number>
<kind>B1</kind>
<name>Ryan et al.</name>
<date>20101000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>717140</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>8301286</doc-number>
<kind>B2</kind>
<name>Babu et al.</name>
<date>20121000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>700 98</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>8341270</doc-number>
<kind>B2</kind>
<name>Mazzaferri et al.</name>
<date>20121200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709227</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>8355407</doc-number>
<kind>B2</kind>
<name>Wookey et al.</name>
<date>20130100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>370401</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2006/0146057</doc-number>
<kind>A1</kind>
<name>Blythe</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>345506</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2007/0043546</doc-number>
<kind>A1</kind>
<name>Fontes et al.</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2007/0075450</doc-number>
<kind>A1</kind>
<name>Belegundu et al.</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>264 401</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2008/0177518</doc-number>
<kind>A1</kind>
<name>Krishnamoorthy et al.</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>703  9</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2010/0121472</doc-number>
<kind>A1</kind>
<name>Babu et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>700104</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2010/0332355</doc-number>
<kind>A1</kind>
<name>Lopez et al.</name>
<date>20101200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>705 271</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00018">
<othercit>&#x201c;FEMLAB 2.2: New Features. &#xa9; 2001&#x201d;; Printed from http://www.technician.ac.il/-leonidb/BurteinSite/Femib22About.htm.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00019">
<othercit>&#x201c;FEMLAB&#xae; Installation and New Features Guide&#x201d;; Version 2.3 Nov. 2002.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00020">
<othercit>Anderson, D.G.; &#x201c;Iterative Procedures for Nonlinear Integral Equations&#x201d;; <i>Journal of the ACM</i>; vol. 12; issue 4; Oct. 1965.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00021">
<othercit>Brenner et al.; &#x201c;The Mathematical Theory of Finite Element Methods&#x201d;; <i>Springer-Verlag </i>1-12 (1994), The Finite Element Method: 1-12.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00022">
<othercit>Canova et al.; &#x201c;Integral Solution of Nonlinear Magnetostatic Filed Problems&#x201d;; IEEE Transactions on Magnetics; May 2001; vol. 37; No. 3; pp. 1070-1077.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00023">
<othercit>Dahlquist, et al.; &#x201c;Numerical Methods&#x201d;; <i>Prentice Hall</i>; 284-355 (1974); Interpolation: 284-285; Linear Solver: 146-172; Time-Dependent Solver: 347-355; and Eigenvalue Solver: 208-211; Damped Newton Method: 248-253.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00024">
<othercit>Davenport et al.; &#x201c;Computer Algebra Systems and Algorithms for Algebraic; Computation&#x201d;; <i>Academic Press </i>28-32; (1993) Symbolic Differentiation: 28-32.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00025">
<othercit>Eyheramendy et al.; &#x201c;Object-orientated Finite Elements II. A Symbolic Environment for Automatic Programming&#x201d;; <i>Computer Methods in Applied Mechanics and Engineering</i>; 132; pp. 277-304; (1996).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00026">
<othercit>Felippa et al.; &#x201c;Partitioned Anaylsis of Coupled Mechanical Systems&#x201d;; <i>Department of Aerospace Engineering Sciences and Center for Aerospace Structures, University of Colorado at Boulder</i>, Report No. CU-CAS-99-06; 31 pages; (1999).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00027">
<othercit>FEMLAB; &#x201c;Chemical Engineering <i>MODULE</i>&#x201d;; For Use With Matlab WINDOWS, UNIX, LINUX, MACINTOSH; Version 2.2; Copyright 1994-2001 by COMSOL AB.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00028">
<othercit>FEMLAB; &#x201c;Electromagnetics Module&#x201d;; For Use With Matlab WINDOWS, UNIX, LINUX, MACINTOSH; Version 2.2; Copyright 1994-2001 by COMSOL AB.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00029">
<othercit>FEMLAB; &#x201c;Installation Guide&#x201d;;For Use With Matlab WINDOWS, UNIX, LINUX, MACINTOSH; Version 2.2; Copyright 1994-2001 by COMSOL AB.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00030">
<othercit>FEMLAB; &#x201c;Model Library,&#x201d; For Use With MATLAB V5, WINDOWS 95/98, WINDOWS NT; Unix; Version 1.0 (Copyright 1994-1998 by COMSOL AB).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00031">
<othercit>FEMLAB; &#x201c;Model Library&#x201d;; For Use With Matlab WINDOWS, UNIX, LINUX, MACINTOSH; Version 2.2; Copyright 1994-2001 by COMSOL AB.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00032">
<othercit>FEMLAB; &#x201c;Reference Manual, &#x201d; for User With MATLAB V5, WINDOWS 95/98, WINDOWS NT, Unix, Version 1.0  (Copyright 1994-1998 by COMSOL AB).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00033">
<othercit>FEMLAB; &#x201c;Structural Mechanics Engineering Module&#x201d;; For Use With FEMLAB (Copyright 1994-1998).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00034">
<othercit>FEMLAB; &#x201c;User's Guide and Instruction&#x201d;; For Use With Matlab WINDOWS, UNIX, LINUX, MACINTOSH; Version 2.2; Copyright 1994-2001 by COMSOL AB.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00035">
<othercit>FEMLAB; &#x201c;User's Guide and Introduction&#x201d;; For Use With MATLAB V5, WINDOWS 95/98, WINDOWS NT; Unix, Version 1.0 (Copyright 1994-1998 by COMSOL AB).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00036">
<othercit>FEMLAB; Referenced Manual; For Use With Matlab WINDOWS, UNIX, LINUX, MACINTOSH; Version 2.2; Copyright 1994-2001 by COMSOL AB.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00037">
<othercit>Frey et al.; &#x201c;Mesh Generation, Application to Finite Elements&#x201d;; <i>Hermes</i>; Paris 88-90; (2000) Mesh Search: 88-90.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00038">
<othercit>George et al.; &#x201c;Delaunay Triangulation and Meshing&#x201d;; <i>Herme</i>;, Paris 33-238 (1998) Delaunay triangulation: 33-46, 50-59; Constrained triangulation: 73-99; and Parametric surface meshing: 161-173; Optimizations: 215-238.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00039">
<othercit>Jentsch et al.; &#x201c;Non-local Approach in Mathematical Problems of Fluid-Structure Interaction&#x201d;; <i>Mathematical Methods in the Applied Sciences</i>; 22; pp. 13-42; (1999).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00040">
<othercit>Jerome; &#x201c;Numerical Approximation of PDE System Fixed Point Maps via Newton's Method&#x201d;; Department of Mathematics Northwestern University; pp. 1-21; (1991).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00041">
<othercit>Johnson, C.; &#x201c;Numerical Solution of Partial Differential Equations by the Finite Element Method&#x201d;; <i>Studentlitteratur</i>; 14-18 (1987) Test Function 14-18.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00042">
<othercit>Mathworks, Inc.; &#x201c;Partial Differential Equation Toolbox: User's Guide&#x201d;; For Use with MATLAB&#xa9; (Copyright 1984-1997 THE MATHWORKS, INC.).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00043">
<othercit>Persson, P.; &#x201c;Implementation of Finite Element-Based Navier-Stokes Solver 2.094-Project&#x201d;; Apr. 25, 2002; http://www.mit.edu/-persson/nsfem<sub>&#x2014;</sub>report.pdf.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00044">
<othercit>Rao, P.; &#x201c;An Efficient Scalable Finite Element Model for Simulating large Scale Hydrodynamic Flows&#x201d;; 16<sup>th </sup>ASCE Engineering Mechanics Conf.; Jul. 16-18, 2003 Printed Jan. 10, 2007.htp://www.ce.washington.edu/emO3/proceedings/authorindex.htm.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00045">
<othercit>Ribeiro, P.; &#x201c;Non-linear Forced Vibrations of Thin/Thick Beams and Plates by the Finite Element and Shooting Method&#x201d;; Computers and Structures; May 2004; vol. 82; pp. 1413-1423.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00046">
<othercit>Saitz, J.; &#x201c;Newton-Raphson Method and Fixed-Point Technique in Finite Element Computation of Magnetic Field Problems in Media with Hysteresis&#x201d;; IEEE Transactions on Magnetics; May 1999; vol. 35; No. 3; pp. 1398-1401.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00047">
<othercit>Stroustrup: &#x201c;The C++ Programming Language&#x201d;; <i>Addison-Wesley Publishing Company</i>; pp. 133-134, p. 152, pp. 169-170, pp. 191-193; (1986).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00048">
<othercit>Von Estorff et al.; &#x201c;On Fem-Bem Coupling for Fluid-Structure Interaction Analyses in the Time Domain&#x201d;; <i>International Journal for Numerical Methods in Engineering</i>; vol. 31; pp. 1151-1168; (1991).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00049">
<othercit>Wilks; &#x201c;Primer on Object-Oriented Programming,&#x201d;; http:/www.eimc.brad.ac.uk/java/tutorial/Project1/ooprim.htm(1996).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00050">
<othercit>Zienkiewicz et al.; &#x201c;The Coupling of the Finite Elements Method and Boundary Solution Procedures&#x201d;; <i>International Journal for Numerical Methods in Engineering</i>, vol. 11; pp. 355-375; (1977).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00051">
<othercit>Zienkiewicz et al.; &#x201c;<i>The Finite Method, Third Edition</i>&#x201d;, McGraw-Hill book Company (UK) Limited; pp. 42-51 and pp. 178-195; (1977).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00052">
<othercit>Zienkiewicz et al.; &#x201c;The Finite Element Method&#x201d;; <i>McGraw-Hill </i>1:23-177; Basis Function: 23-26; Quadrature Formulas, Gauss Points, Weights: 175-177.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00053">
<othercit>Rao, P. &#x201c;An Efficient Scalable Finite Element Model for Simulating large Scale Hydrodynamic Flows&#x201d;, 16<sup>th </sup>ASCE Engineering Mechanics Conf., Jul. 16-18, 2003, Printed Jan. 10, 2007, retrieved from http://www.ce.washington.edu/em03/proceedings/authorindex.htm, 8 pages total, pp. 1-8.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00054">
<othercit>Persson, P. &#x201c;Implementation of Finite Element-Based Navier-Stokes Solver 2.094-Project&#x201d;, Apr. 25, 2002, retrieved from http://www.mit.edu/-persson/nsfem<sub>&#x2014;</sub>report.pdf, 26 pages total, pp. 1-25.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00055">
<othercit>Mathworks, Inc., &#x201c;Partial Differential Equation Toolbox: User's Guide,&#x201d; For Use with MATLAB, Computer Solutions Europe AB, &#xa9; 1984-1997, first printing Aug. 1995, 288 pages total, pp. 1-2 to 5-97.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00056">
<othercit>Wilks, M., &#x201c;Primer on Object-Oriented Programming,&#x201d; retrieved from http:/www.eimc.brad.ac.uk/java/tutorial/Project1/ooprim.htm, written in 1996, printed May 29, 2004, 5 pages total, p. 1 of 3 to 3 of 3 and 1 of 2 to 2 of 2.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00057">
<othercit>FEMLAB, &#x201c;Reference Guide,&#x201d; for Use With MATLAB V5, WINDOWS 95/98, WINDOWS NT, UNIX, Version 1.0, &#xa9; 1994-1998, COMSOL AB, first printing Jul. 1998, 105 pages total, pp. 3-2 to 3-103.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00058">
<othercit>FEMLAB, &#x201c;User's Guide and Introduction,&#x201d; For Use With MATLAB V5, WINDOWS 95/98, WINDOWS NT, Unix, Version 1.0, &#xa9;1994-1998, COMSOL AB, first printing Jul. 1998, 134 pages total, pp. 1-2 to 1-123.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00059">
<othercit>FEMLAB, &#x201c;Model Library,&#x201d; For Use With Matlab V5, WINDOWS 95/98, WINDOWS NT, UNIX, Version 1.0, &#xa9; 1994-1998, COMSOL AB, first printing Jul. 1998, 170 pages total, pp. 2-2 to 2-168.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00060">
<othercit>FEMLAB, &#x201c;Structural Mechanics Engineering Module,&#x201d; For Use With FEMLAB, (&#xa9; 1994-1998, COMSOL AB, first printing Jul. 1998, 382 pages total, pp. 1-2 to 6-141.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00061">
<othercit>FEMLAB, &#x201c;Installation Guide,&#x201d; For Use With MATLAB, WINDOWS, UNIX, LINUX, MACINTOSH; Version 2.2; &#xa9; 1994-2001, third printing Nov. 2001, COMSOL AB, 42 pages total, pp. 6-2 to 6-30.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00062">
<othercit>FEMLAB, &#x201c;Reference Manual,&#x201d; For Use With MATLAB, WINDOWS, UNIX, LINUX, MACINTOSH; Version 2.2; 01994-2001, second printing Nov. 2001, COMSOL AB, 192 pages total, pp. 3-2 to 3-180.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00063">
<othercit>FEMLAB, &#x201c;Chemical Engineering Module,&#x201d; For Use With Matlab, WINDWOWS, UNIX, LINUX, MACINTOSH; Version 2.2; &#xa9; 1994-2001, third printing Nov. 2001, COMSOL AB, 240 pages total, pp. 1-2 to 3-29.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00064">
<othercit>FEMLAB, &#x201c;Model Library,&#x201d; For Use With Matlab, WINDOWS, UNIX, LINUX, MACINTOSH; Version 2.2; 01994-2001, COMSOL AB, second printing Nov. 2001, 420 pages total, pp. 2-2 to 2-406.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00065">
<othercit>FEMLAB, &#x201c;User's Guide and Introduction,&#x201d; For Use With MATLAB, WINDOWS, UNIX, LINUX, MACINTOSH; Version 2.2; &#xa9; 1994-2001, second printing Nov. 2001, COMSOL AB, 410 pages total, pp. 1-2 to 1-388.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00066">
<othercit>FEMLAB, &#x201c;Electromagnetics Module,&#x201d; For Use With Matlab, WINDOWS, UNIX, LINUX, MACINTOSH; Version 2.2; &#xa9; 1994-2001, COMSOL AB, second printing Nov. 2001, 366 pages total, pp. 1-2 to 4-6.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00067">
<othercit>FEMLAB, &#x201c;Installation and New Features Guide,&#x201d; Version 2.3, &#xa9; 1994-2002, COMSOL AB, fourth printing Jun. 2002, 67 pages total, pp. 6-2 to 6-50.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00068">
<othercit>FEMLAB 2.2: New Features, retrieved from http://www.technician.ac.il-leonidb/BurteinSite/Femib22About.htm, &#xa9; 2001, printed on Jul. 20, 2005, 4 pages total, pp. 1 of 4 to 4 of 4.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00069">
<othercit>Anderson, D.G. &#x201c;Iterative Procedures for Nonlinear Integral Equations.&#x201d; Journal of the ACM. vol. 12, issue 4, Oct. 1965, 17 pages total, pp. 1 of 3 to 3 of 3 and pp. 547 to 560.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00070">
<othercit>File History: Langemyr et al., U.S. Appl. No. 90/009,728, which is a reexamination of U.S. 7,596,474, which is a parent to U.S. Appl. No. 12/487,762; on-line documents through Feb. 7, 2012, retrieved from http://portal.uspto.gov/external/portal/pair; 732 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00071">
<othercit>Nilsson, Bernt &#x201c;Beta Edition of COMSOL Multiphysics Version 4.0 Released at Fifth Annual COMSOL Conference,&#x201d; Oct. 16, 2009, 5 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00072">
<othercit>COMSOL AB &#x201c;Introduction to COMSOL Multiphysics,&#x201d; Version 4.0, 1998-2010, Apr. 2010, 53 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00073">
<othercit>COMSOL AB &#x201c;Introduction to COMSOL Multiphysics,&#x201d; Version 4.0a, 1998-2010, Jun. 2010, 97 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00074">
<othercit>COMSOL AB &#x201c;COMSOL Quick Start,&#x201d; Version 4.0 Beta 2, 1998-2010, Feb. 2010, 36 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00075">
<othercit>COMSOL AB &#x201c;COMSOL Quick Start,&#x201d; Version 4.0, 1998-2009, Oct. 2009, 36 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00076">
<othercit>E. Fontes &#x26; L. Langemyr, &#x201c;COMSOL V4 presentation,&#x201d; Sep. 2009, 18 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00077">
<othercit>COMSOL Multiphysics, CAD Import Module, User's Guide, Version 4.0, dated Oct. 2009, 56 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00078">
<othercit>COMSOL, Introduction to LiveLink&#x2122; for SolidWorks&#xae;, Version 4.2, dated May 2011, 26 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00079">
<othercit>COMSOL, LiveLink&#x2122; for SolidWorks&#xae;, User's Guide, Version 4.2, dated May 2011, 69 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00080">
<othercit>COMSOL Multiphysics, LiveLink&#x2122; for Inventor&#xae;, User's Guide, Version 4.0, dated Apr. 2010, 62 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00081">
<othercit>COMSOL Multiphysics, LiveLink&#x2122; for Matlab&#xae;, User's Guide, Version 4.0, dated Apr. 2010, 102 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00082">
<othercit>COMSOL Multiphysics, LiveLink&#x2122; for Pro/ENGINEER&#xae;, User's Guide, Version 4.0, dated Apr. 2010, 62 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00083">
<othercit>COMSOL Multiphysics, LiveLink&#x2122; for SolidWorks&#xae;, User's Guide, Version 4.0, dated Apr. 2010, 62 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00084">
<othercit>COMSOL Multiphysics&#xae;, Comsol API Reference Guide, Version 4.0 Beta 1, dated Oct. 2009, 440 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00085">
<othercit>COMSOL Multiphysics&#xae;, Reference Guide, Version 4.0, dated Apr. 2010, 426 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00086">
<othercit>COMSOL Multiphysics&#xae;, User's Guide, Version 4.0 Beta 1, dated Oct. 2009, 492 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00087">
<othercit>E. Fontes &#x26; L. Langemyr, COMSOL V4 presentation, Sep. 2009, 18 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00088">
<othercit>COMSOL Java API, Reference Guide, Version 4.2, dated May 2011, 651 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00089">
<othercit>COMSOL Multiphysics&#xae;, Physics Interface Builder User's Guide, Version 4.2 Beta, dated May 2011, 144 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>703  2</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>703  6</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>703 22</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>703 24</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>700 29</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>702187</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>37</number-of-drawing-sheets>
<number-of-figures>38</number-of-figures>
</figures>
<us-related-documents>
<continuation-in-part>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>12981404</doc-number>
<date>20101229</date>
</document-id>
<parent-status>PENDING</parent-status>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13184293</doc-number>
</document-id>
</child-doc>
</relation>
</continuation-in-part>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61290839</doc-number>
<date>20091229</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61360038</doc-number>
<date>20100630</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61377841</doc-number>
<date>20100827</date>
</document-id>
</us-provisional-application>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Fontes</last-name>
<first-name>Eduardo</first-name>
<address>
<city>Valentuna</city>
<country>SE</country>
</address>
</addressbook>
<residence>
<country>SE</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Langemyr</last-name>
<first-name>Lars</first-name>
<address>
<city>Stockholm</city>
<country>SE</country>
</address>
</addressbook>
<residence>
<country>SE</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Bertilsson</last-name>
<first-name>Daniel</first-name>
<address>
<city>Vallentuna</city>
<country>SE</country>
</address>
</addressbook>
<residence>
<country>SE</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Forsell</last-name>
<first-name>Anders</first-name>
<address>
<city>Stockholm</city>
<country>CH</country>
</address>
</addressbook>
<residence>
<country>CH</country>
</residence>
</us-applicant>
<us-applicant sequence="005" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Kannala</last-name>
<first-name>Johan</first-name>
<address>
<city>Tumba</city>
<country>CH</country>
</address>
</addressbook>
<residence>
<country>CH</country>
</residence>
</us-applicant>
<us-applicant sequence="006" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Normark</last-name>
<first-name>Tomas</first-name>
<address>
<city>Bromma</city>
<country>CH</country>
</address>
</addressbook>
<residence>
<country>CH</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Fontes</last-name>
<first-name>Eduardo</first-name>
<address>
<city>Valentuna</city>
<country>SE</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Langemyr</last-name>
<first-name>Lars</first-name>
<address>
<city>Stockholm</city>
<country>SE</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Bertilsson</last-name>
<first-name>Daniel</first-name>
<address>
<city>Vallentuna</city>
<country>SE</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Forsell</last-name>
<first-name>Anders</first-name>
<address>
<city>Stockholm</city>
<country>CH</country>
</address>
</addressbook>
</inventor>
<inventor sequence="005" designation="us-only">
<addressbook>
<last-name>Kannala</last-name>
<first-name>Johan</first-name>
<address>
<city>Tumba</city>
<country>CH</country>
</address>
</addressbook>
</inventor>
<inventor sequence="006" designation="us-only">
<addressbook>
<last-name>Normark</last-name>
<first-name>Tomas</first-name>
<address>
<city>Bromma</city>
<country>CH</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Nixon Peabody LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Comsol AB</orgname>
<role>03</role>
<address>
<city>Stockholm</city>
<country>SE</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Phan</last-name>
<first-name>Thai</first-name>
<department>2128</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Systems and methods for controlling settings of a design system include receiving, via a communications interface, identifying data associated with a multiphysics modeling system. Instructions are transmitted via the communication interface or another interface. The instructions include model settings related to a multiphysics model at least partially residing in the multiphysics modeling system. Model results are received that are at least partially derived from the transmitted model settings. At least a portion of the received model results are displayed in a graphical user interface associated with the design system.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="259.16mm" wi="164.25mm" file="US08626475-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="150.54mm" wi="158.83mm" file="US08626475-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="161.80mm" wi="141.65mm" file="US08626475-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="121.58mm" wi="123.87mm" file="US08626475-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="233.26mm" wi="125.90mm" file="US08626475-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="171.03mm" wi="122.60mm" file="US08626475-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="238.25mm" wi="140.38mm" file="US08626475-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="208.53mm" wi="174.33mm" file="US08626475-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="211.50mm" wi="136.74mm" file="US08626475-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="205.91mm" wi="132.08mm" file="US08626475-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="221.06mm" wi="170.01mm" file="US08626475-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="164.42mm" wi="131.49mm" file="US08626475-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="146.30mm" wi="151.89mm" file="US08626475-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="207.60mm" wi="188.81mm" file="US08626475-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="186.52mm" wi="153.84mm" file="US08626475-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="146.64mm" wi="150.88mm" file="US08626475-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="243.50mm" wi="198.37mm" orientation="landscape" file="US08626475-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="231.65mm" wi="164.42mm" file="US08626475-20140107-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="207.60mm" wi="193.38mm" file="US08626475-20140107-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="175.26mm" wi="184.49mm" file="US08626475-20140107-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="259.00mm" wi="195.75mm" orientation="landscape" file="US08626475-20140107-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="211.50mm" wi="181.53mm" file="US08626475-20140107-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00022" num="00022">
<img id="EMI-D00022" he="221.74mm" wi="176.28mm" file="US08626475-20140107-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00023" num="00023">
<img id="EMI-D00023" he="249.09mm" wi="193.72mm" file="US08626475-20140107-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00024" num="00024">
<img id="EMI-D00024" he="255.02mm" wi="139.36mm" file="US08626475-20140107-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00025" num="00025">
<img id="EMI-D00025" he="259.67mm" wi="163.41mm" file="US08626475-20140107-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00026" num="00026">
<img id="EMI-D00026" he="262.30mm" wi="152.57mm" file="US08626475-20140107-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00027" num="00027">
<img id="EMI-D00027" he="256.62mm" wi="156.21mm" file="US08626475-20140107-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00028" num="00028">
<img id="EMI-D00028" he="253.66mm" wi="195.07mm" file="US08626475-20140107-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00029" num="00029">
<img id="EMI-D00029" he="197.02mm" wi="165.69mm" file="US08626475-20140107-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00030" num="00030">
<img id="EMI-D00030" he="248.41mm" wi="157.82mm" orientation="landscape" file="US08626475-20140107-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00031" num="00031">
<img id="EMI-D00031" he="211.84mm" wi="187.11mm" orientation="landscape" file="US08626475-20140107-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00032" num="00032">
<img id="EMI-D00032" he="221.40mm" wi="152.91mm" orientation="landscape" file="US08626475-20140107-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00033" num="00033">
<img id="EMI-D00033" he="244.18mm" wi="121.24mm" orientation="landscape" file="US08626475-20140107-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00034" num="00034">
<img id="EMI-D00034" he="216.15mm" wi="184.83mm" orientation="landscape" file="US08626475-20140107-D00034.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00035" num="00035">
<img id="EMI-D00035" he="226.06mm" wi="167.05mm" orientation="landscape" file="US08626475-20140107-D00035.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00036" num="00036">
<img id="EMI-D00036" he="217.42mm" wi="167.05mm" orientation="landscape" file="US08626475-20140107-D00036.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00037" num="00037">
<img id="EMI-D00037" he="207.26mm" wi="162.48mm" file="US08626475-20140107-D00037.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is a continuation-in-part of U.S. application Ser. No. 12/981,404, filed Dec. 29, 2010, which claims priority to and the benefits of U.S. Provisional Application No. 61/290,839, filed on Dec. 29, 2009, U.S. Provisional Application No. 61/360,038, filed Jun. 30, 2010, and U.S. Provisional Application No. 61/377,841, filed on Aug. 27, 2010, the disclosures of each of the foregoing applications being hereby incorporated by reference herein in their entireties.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0003" num="0002">The present invention relates generally to systems and methods for modeling and simulation, and more particularly, to model tree structures for a multiphysics modeling system.</p>
<heading id="h-0003" level="1">BACKGROUND</heading>
<p id="p-0004" num="0003">Computer design systems are used to develop product designs and include graphical user interfaces. Computer design systems may be complemented with packages analyzing a single aspect of a design, such as, structural analysis in conjunction with computer-aided design systems. It would be desirable to have design systems that can operate in more complex environments.</p>
<heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0005" num="0004">According to one aspect of the present disclosure, a method for controlling settings of a design system is executable on one or more processing units associated with the design system. The method comprises the acts of receiving, via a communications interface, identifying data associated with a multiphysics modeling system. Instructions are transmitted, via the communication interface or another interface. The instructions include model settings related to a multiphysics model at least partially residing in the multiphysics modeling system. Model results are received that are at least partially derived from the transmitted model settings. At least a portion of the received model results are displayed in a graphical user interface associated with the design system.</p>
<p id="p-0006" num="0005">According to another aspect of the present disclosure, a method for dynamically controlling a multiphysics modeling system is executable on one or more processing units associated with the multiphysics modeling system. The method comprises the acts of detecting, via a first interface, input data associate with a design system. Instructions are received via the first interface or a second interface. The instructions include settings related to a multiphysics model associated with the multiphysics modeling system. A solution is determined for the multiphysics model at least partially based on the received instructions. The solution is transmitted to the first interface or the second interface. The solution is configured for display within a design system user interface associated with the design system.</p>
<p id="p-0007" num="0006">According to yet another aspect of the present disclosure, a method comprises receiving a signal via a communications interface. The signal is associated with a multiphysics modeling system. Instructions are sent to the communications interface or another interface that include settings related to a multiphysics model associated with the multiphysics modeling system. Multiphysics model results are received that are derived from the settings. The multiphysics model result are displayed in a design system user interface.</p>
<p id="p-0008" num="0007">According to another aspect of the present disclosure, a method for controlling settings of a design system is executable on one or more processors associated with the design system. The method comprises the acts of establishing a communications link between the design system and an associated multiphysics modeling system. Instructions are transmitted via the communications link or another link that include settings related to a multiphysics model associated with the multiphysics modeling system. Multiphysics model results are received that are derived from the settings.</p>
<p id="p-0009" num="0008">According to yet another aspect of the present disclosure, a method for dynamically controlling a multiphysics modeling system is executable on one or more processors associated with the multiphysics modeling system. The comprises the acts of establishing one or more communications channels between the multiphysics modeling system and an associated design system. Instructions are received via the one or more communications channels. The instructions include settings related to a multiphysics model associated with the multiphysics modeling system. The multiphysics model results may be displayed in a design system user interface.</p>
<p id="p-0010" num="0009">According to further aspects of the present disclosure, one or more non-transitory computer readable media are encoded with instructions, which when executed by at least one processor associated with a design system or a multiphysics modeling system, causes the at least one processor to perform the above methods.</p>
<p id="p-0011" num="0010">Additional aspects of the present disclosure will be apparent to those of ordinary skill in the art in view of the detailed description of various embodiments, which is made with reference to the drawings, a brief description of which is provided below.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0012" num="0011">Features and advantages of the present disclosure will become more apparent from the following detailed description of exemplary embodiments thereof taken in conjunction with the accompanying drawings in which:</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an exemplary aspect of a computer system.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 2</figref> illustrates an exemplary aspect of software that may reside and be executed in one of the hosts of <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an exemplary aspect of a graphical user interface for specifying space dimensions.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 4</figref> illustrates an exemplary aspect of a graphical user interface for specifying physics interface(s).</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an exemplary aspect of a graphical user interface for specifying study type(s).</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an exemplary aspect of a graphical user interface for specifying physical properties for an exemplary physics interface.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 7</figref> illustrates an exemplary aspect of a graphical user interface for modifying partial differential equation (s).</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 8</figref> illustrates an exemplary aspect of a graphical user interface for setting material propert(ies) for a domain in a multiphysics model.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 9</figref> illustrates an exemplary aspect of a graphical user interface for setting physical boundary condition(s) for an exemplary physics interface.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 10</figref> illustrates an exemplary aspect of a graphical user interface for modifying partial differential equation boundary condition(s).</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 11</figref> illustrates an exemplary aspect of a graphical user interface for a setting window associated with a study step used to solve a study including partial differential equations.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 12</figref> illustrates an exemplary model tree including a primary node with secondary nodes.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIGS. 13-15</figref> are flowcharts of steps for an exemplary aspect for specifying and solving systems of partial differential equations in a multiphysics modeling system.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 16</figref> illustrates an exemplary aspect of a design system interface for communicating with and accessing model settings of an associated multiphysics modeling system.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 17</figref> illustrates an exemplary aspect of communications in a bidirectional link between a design system and a multiphysics modeling system.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 18</figref> illustrates an exemplary graphical user interface in a multiphysics modeling system for establishing a link to a design system.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 19</figref> illustrates exemplary dynamic link library operations for a bidirectional link between a multiphysics modeling system and a design system.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 20</figref> illustrates an exemplary aspect of a bridge connection for communications between a design system and a multiphysics modeling system.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 21</figref> illustrates an exemplary aspect of a bridge connection for communicating between a multiphysics modeling system and a design system user interface.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 22</figref> illustrates an exemplary aspect for dynamically controlling, via a bidirectional link, parametric and geometric features between a design system and a multiphysics modeling system.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 23</figref> illustrates another exemplary aspect for dynamically controlling, via a bidirectional link, parametric and geometric features between a design system and a multiphysics modeling system.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 24</figref> illustrates another exemplary aspect for dynamically controlling, via a bidirectional link, parametric and geometric features and associativity operations to set physical properties and boundary conditions in a multiphysics modeling system.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 25</figref> illustrates an exemplary graphical user interface in a multiphysics modeling system for dynamically controlling features between the multiphysics modeling system and a design system.</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 26</figref> illustrates an exemplary process for defining variations of parameters controlling geometric features in a design system.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 27</figref> illustrates an exemplary graphical user interface for defining parameter variations.</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 28</figref> illustrates an exemplary process for generating a model tree within a multiphysics modeling system.</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 29</figref> illustrates an exemplary process for forming and solving a system of partial differential equations in a multiphysics modeling system based on operations represented in a model tree.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 30</figref> illustrates an exemplary aspect of a model tree for forming and solving multiphysics problems in a multiphysics modeling system.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 31</figref> illustrates an exemplary aspect of a physics node of a model node for a model tree that includes operations for generating physical quantities and boundary conditions for a multiphysics problem.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 32</figref> illustrates an exemplary aspect of a window for a node of a model tree for entering settings that define model operations for a multiphysics problem.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 33</figref> illustrates an exemplary aspect of a physics node of a model node that has an additional node for describing selected physical quantities for a multiphysics problem.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 34</figref> illustrates an exemplary aspect of a physics node of a model node describing operations representing contributions to the physical quantities of a multiphysics problem.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 35</figref> illustrates an exemplary window for adding contributions to the physical quantities associated with a physics node.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 36</figref> illustrates an exemplary model tree having a plurality of nodes including the identification of exclusive operation(s) associated with a selected node.</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 37</figref> illustrates an exemplary model tree having a plurality of nodes including the identification of non-exclusive operation(s) associated with a selected node.</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 38</figref> illustrates an exemplary aspect of a model tree including a plurality of model nodes for which settings of each of the model nodes can be accessed to allow the formation and solving of a multiphysics problem on a multiphysics modeling system.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<p id="p-0049" num="0048">While the present disclosure is susceptible to various modifications and alternative forms, specific embodiments have been shown by way of example in the drawings and will be described in detail herein. It should be understood, however, that the invention is not intended to be limited to the particular forms disclosed. Rather, the invention is to cover all modifications, equivalents, and alternatives falling within the spirit and scope of the invention as defined by the appended claims.</p>
<heading id="h-0006" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0050" num="0049">While the present disclosure is susceptible of embodiment in many different forms, there is shown in the drawings and will herein be described in detail various aspects of the invention with the understanding that the present disclosure is to be considered as an exemplification of the principles of the invention and is not intended to limit the broad aspects of the invention to the aspects illustrated.</p>
<p id="p-0051" num="0050">Computer systems may be used for performing a variety of different tasks. One aspect for using a computer system includes executing one or more computer programs stored on computer readable media (e.g., temporary or fixed memory, magnetic storage, optical storage, electronic storage, flash memory, other storage media). A computer program may include instructions which, when executed by a processor, perform one or more tasks. In certain embodiments, a computer system executes machine instructions, as may be generated, for example, in connection with translation of source code to machine executable code, to perform modeling and simulation, and/or problem solving tasks. One technique, which may be used to model and simulate physical phenomena or physical processes, is to represent various physical properties and quantities, of the physical phenomena or physical processes being modeled and simulated, in terms of variables and equations or in other quantifiable forms that may be processed by a computer system. In turn, these equations or other quantifiable forms may be solved by a computer system configured to solve for one or more variables associated with the equation, or the computer may be configured to solve a problem using other received input parameters.</p>
<p id="p-0052" num="0051">It is contemplated that computer programs for modeling and simulating physical phenomena or physical processes may provide many advantages particularly as the complexity of the physical phenomena or physical processes being modeled and simulated increases. For example, in certain embodiments a user can combine one or more physical phenomena into a multiphysics model. To further illustrate this example, a user may combine phenomena described by chemical kinetics and fluid mechanics, electromagnetic phenomena and structural mechanics, or other physics phenomena. Such multiphysics models may also involve multiple physical processes. For example, a process may be combined that includes an amplifier powering an actuator, where both the amplifier and the actuator are a part of one multiphysics model. Multiphysics modeling can also include solving coupled systems of partial differential equations (PDEs). Exemplary multiphysics modeling systems include the COMSOL&#xae; 4.1 or COMSOL Multiphysics&#xae; simulation software operating on a computer system, as such software is available from COMSOL, Inc. of Burlington, Mass. Additional exemplary aspects of multiphysics modeling systems are described in U.S. patent application Ser. No. 10/042,936, filed on Jan. 9, 2002, now issued as U.S. Pat. No. 7,596,474, U.S. patent application Ser. No. 09/995,222, filed on Nov. 27, 2001, now issued as U.S. Pat. No. 7,519,518, and U.S. patent application Ser. No. 09/675,778, filed on Sep. 29, 2000, now issued as U.S. Pat. No. 7,623,991, the disclosures of which are each hereby incorporated by reference herein in their entireties.</p>
<p id="p-0053" num="0052">An automatic technique for combining the one or more physical phenomena may be desirable such that the combination of the phenomena together may be modeled and accordingly represented in terms of coupled physical properties and quantities described by variables in systems of PDEs. It may also be desirable for the automatic technique to provide for selectively solving for one or more variables associated with the system of PDEs and/or for solving the variables associated with one or more of the individual PDEs. This can allow for different techniques to be utilized for solving a system of PDEs associated with a singular or coupled physical quantit(ies) and/or physical propert(ies).</p>
<p id="p-0054" num="0053">It may be desirable in certain embodiments to model the physical quantities of coupled multiple processes using different sets of PDEs, defined for different geometries and/or in different coordinate systems, to represent the different coupled multiple processes. It is contemplated that in certain embodiments, systems of PDEs defined for multiple geometries can be desirable. PDEs can provide an efficient and flexible arrangement for defining various couplings between the PDEs within a single geometry, as well as, between different geometries.</p>
<p id="p-0055" num="0054">It is contemplated that computer systems on which multiphysics modeling systems operate, such as the modeling systems described herein, can include networked computers or processors. In certain embodiments, processors may be operating directly on the multiphysics modeling system user's computer, and in other embodiments, a processor may be operating remotely. For example, a user may provide various input parameters at one computer or terminal located at a certain location. Those parameters may be processed locally on the one computer or they may be transferred over a local area network or a wide area network, to another processor, located elsewhere (e.g., another room, another building, another city) that is configured to process the input parameters. The second processor may be associated with a server connected to the Internet (or other network) or the second processor can be several processors connected to the Internet (or other network), each handling select function(s) for developing and solving a problem on the multiphysics modeling system. It is further contemplated that the results of the processing by the one or more processors can then be assembled at yet another server or processor. It is also contemplated that the results may be assembled back at the terminal or computer where the user is situated. The terminal or computer where the user is situated can then display the solution of the multiphysics modeling system to the user via a display (e.g., a transient display) or in hard copy form (e.g., via a printer). Alternatively or in addition, the solution may be stored in a memory associated with the terminal or computer, or the solution may be stored on another server that the user may access to obtain the solution from the multiphysics modeling system.</p>
<p id="p-0056" num="0055">It is contemplated that in certain embodiments a product or process may be in the development or feasibility stage where it is being designed or analyzed. The product or process being developed or analyzed may need to be assessed for use in complex environment(s) involving several physical properties and quantities. It can be desirable to solve complex multiphysics problems by systematically varying parametric and geometric features in a computer-based design system. Other desirable features may include, for example, having a computer-based system for solving complex multiphysics problems in which the settings for the physical properties and boundary conditions, located in a memory and used to form multiphysics models and/or solve multiphysics problems, can be accessed directly from the design system. For example, access can occur through an interface between the design system and the multiphysics modeling system or an interface within one of the design system or the multiphysics modeling system. It is contemplated that the interface may be virtual or reside in a permanent memory. It is also contemplated the interface may at least partially include physical hardware components that may or may not also include computer program components for allowing useful interactions between the design system and the multiphysics modeling system.</p>
<p id="p-0057" num="0056">Referring now to <figref idref="DRAWINGS">FIG. 1</figref>, an exemplary aspect of a computer system is illustrated that may be used with the methods described elsewhere herein. The computer system <b>110</b> includes a data storage system <b>112</b> connected to host systems <b>114</b><i>a</i>-<b>114</b><i>n </i>through communication medium <b>118</b>. In this embodiment of the computer system <b>110</b>, the &#x201c;n&#x201d; hosts <b>114</b><i>a</i>-<b>114</b><i>n </i>may access the data storage system <b>112</b>, for example, in performing input/output (I/O) operations. The communication medium <b>118</b> may be any one of a variety of networks or other type of communication connections as known to those skilled in the art. For example, the communication medium <b>118</b> may be the Internet, an intranet, or other network connection by which the host systems <b>114</b><i>a</i>-<b>114</b><i>n </i>may access and communicate with the data storage system <b>112</b>, and may also communicate with others included in the computer system <b>110</b>.</p>
<p id="p-0058" num="0057">Each of the host systems <b>114</b><i>a</i>-<b>114</b><i>n </i>and the data storage system <b>112</b> included in the computer system <b>110</b> may be connected to the communication medium <b>118</b> by any one of a variety of connections as may be provided and supported in accordance with the type of communication medium <b>118</b>. The processors included in the host computer systems <b>114</b><i>a</i>-<b>114</b><i>n </i>and the data manager system <b>116</b> may be any one of a variety of commercially available single or multi-processor system, such as an Intel-based processor, IBM mainframe, server, or other type of commercially available processor able to support incoming traffic in accordance with each particular embodiment and application.</p>
<p id="p-0059" num="0058">It should be noted that the particulars of the hardware and software included in each of the host systems <b>114</b><i>a</i>-<b>114</b><i>n</i>, as well as those components that may be included in the data storage system <b>112</b> are described herein in more detail, and may vary with each particular embodiment. Each of the host computers <b>114</b><i>a</i>-<b>114</b><i>n</i>, as well as the data storage system <b>112</b>, may all be located at the same physical site, or, alternatively, may also be located in different physical locations. Examples of the communication medium that may be used to provide the different types of connections between the host computer systems, the data manager system, and the data storage system of the computer system <b>110</b> may use a variety of different communication protocols such as SCSI, ESCON, Fiber Channel, or functional equivalents that are known to those skilled in the art. Some or all of the connections by which the hosts, data manager system <b>116</b> and data storage system <b>112</b> may be connected to the communication medium <b>18</b> may pass through other communication devices, such as a Connectrix or other switching equipment that may exist, both physical and virtual, such as a phone line, a repeater, a multiplexer or even a satellite.</p>
<p id="p-0060" num="0059">Each of the host computer systems may perform different types of data operations, such as storing and retrieving data files used in connection with an application executing on one or more of the host computer systems. For example, a computer program may be executing on the host computer <b>114</b><i>a </i>and store and retrieve data from the data storage system <b>112</b>. The data storage system <b>112</b> may include any number of a variety of different data storage devices, such as disks, tapes, and the like in accordance with each implementation. As will be described in following paragraphs, software may reside and be executing on any one of the host computer systems <b>114</b><i>a</i>-<b>114</b><i>n</i>. Data may be stored locally on the host system executing software, as well as remotely in the data storage system <b>112</b> or on another host computer system. Similarly, depending on the configuration of each computer system <b>110</b>, software as described herein may be stored and executed on one of the host computer systems and accessed remotely by a user on another computer system using local data. A variety of different system configurations and variations are possible then as will be described in connection with the embodiment of the computer system <b>110</b> of <figref idref="DRAWINGS">FIG. 1</figref> and should not be construed as a limitation of the techniques described elsewhere herein.</p>
<p id="p-0061" num="0060">Referring now to <figref idref="DRAWINGS">FIG. 2</figref>, an exemplary aspect of a modeling system <b>219</b> is illustrated that may reside, for example, in software form on a single computer or in one of a plurality of host computer systems (e.g., host computers <b>114</b><i>a</i>-<b>114</b><i>n</i>). The modeling system may be divided into several software components. One exemplary aspect of the system may include a GUI module <b>220</b>, a Modeling and Simulation module <b>222</b>, and a Data Storage and Retrieval module <b>224</b>. The GUI module <b>220</b> can provide for interactions with system users. The Modeling and Simulation module <b>222</b> can provide an ability to manage and perform a multiphysics simulation. The Data Storage and Retrieval module <b>224</b> can provide an ability to load and save the model in a file, and to load and store other types of files which may be used during the simulation or may be used as input or output to the simulation.</p>
<p id="p-0062" num="0061">The GUI module <b>220</b> may communicate with the Modeling and Simulation module <b>222</b> by sending and receiving commands. The act of sending and receiving commands may be performed through an application programming interface (&#x201c;API&#x201d;) or other similar components. In one aspect of the system, the API may be object oriented and mix data and function calls within the same structure. In another aspect of the system, the API may use a data structure that is separate from function calls.</p>
<p id="p-0063" num="0062">It is contemplated that in certain aspects of the present disclosure components of the multiphysics modeling system may reside on different host computer systems. For example, the GUI module <b>220</b> may reside on a personal computer host and the Modeling and Simulation module <b>222</b> may reside on a server computer host. It is further contemplated that the Data Storage and Retrieval module <b>224</b> may reside on either the personal computer host or the server computer host, or yet another separate computer host. If the computer hosts are not identical, the API can be configured to use a computer network to communicate between hosts. In one embodiment, an object oriented API may be configured to send data and method calls over the computer network or in another embodiment send data and function calls between the software components over a computer network. The API may also be able to handle a Data Storage and Retrieval module <b>224</b> which may be located either on the host of the GUI module <b>220</b> or the Modeling and Simulation module <b>222</b>, or on a separate host. In each of those cases, the Data Storage and Retrieval module <b>224</b> may be configured to load and store files on each of those hosts.</p>
<p id="p-0064" num="0063">It is contemplated that in certain aspects, the system <b>219</b> may include, or be configured with, software components other than what is described and represented in the modeling system <b>219</b> illustrated in <figref idref="DRAWINGS">FIG. 2</figref>. In the exemplary aspect illustrated in <figref idref="DRAWINGS">FIG. 2</figref>, Libraries <b>226</b> and the User Data Files <b>228</b> can be stored locally within the host computer system. It is further contemplated that in certain aspects, the Libraries <b>226</b> and/or User Data Files <b>228</b>, as well as copies of these, may be stored in another host computer system and/or in the Data Storage System <b>112</b> of the computer system <b>110</b>. However, for simplicity and explanation in paragraphs that follow, it may be assumed in a non-limiting manner that the system <b>219</b> may reside on a single host computer system such as <b>114</b><i>a </i>with additional backups, for example, of the User Data Files and Libraries, in the Data Storage System <b>112</b>.</p>
<p id="p-0065" num="0064">In certain aspects of the present disclosure, portions of the modeling system <b>219</b>, such as the GUI module <b>220</b>, the Modeling and Simulation module <b>222</b>, the Data Storage and Retrieval module <b>224</b>, and/or the Libraries <b>226</b> may be included or executed in combination with commercially available software package(s). These components may operate on one of the host systems <b>114</b><i>a</i>-<b>114</b><i>n</i>, and may include one or more operating systems, such as, Windows XP&#xae;, Windows 7, Windows HPC Server 2008 R2, Unix&#xae;, or Linux&#xae;. It is further contemplated that the modules of the modeling system <b>219</b> may written in any one of a variety of computer programming languages, such as, C, C++, C#, Java&#xae;, or any combination(s) thereof, or other commercially available programming languages.</p>
<p id="p-0066" num="0065">It is contemplated that the GUI module <b>220</b> may display GUI windows in connection with obtaining data for use in performing modeling, simulation, and/or other problem solving for one or more processes and/or physics phenomena under consideration by a system user. The one or more processes and/or phenomena may be assembled and solved by the Modeling and Simulation module <b>222</b>. That is, user data may be gathered or received by the system using modules, such as the GUI module <b>220</b>, and subsequently used by the Modeling and Simulation module <b>222</b>. Thereafter, the data may be transferred or forwarded to the Data Storage and Retrieval module <b>224</b> where the user-entered data may be stored in a separate data structure (e.g., User Data Files <b>228</b>). It is contemplated that other data and information may also be stored and retrieved from a separate data structure, such as Libraries <b>226</b>, which may be used by the Modeling and Simulation module <b>222</b> or in connection with the GUI module <b>220</b>.</p>
<p id="p-0067" num="0066">The various data files that may be associated with a modeling system, such as User Data Files <b>228</b> and the Libraries <b>226</b>, may be stored in any one of a variety of data file formats in connection with a file system used in the host computer system or in the Data Storage System <b>112</b>. In certain aspects, the system <b>219</b> may use any one of a variety of database packages in connection with the storage and retrieval of data. The User Data files <b>228</b> may also be used in connection with other software simulation and modeling packages. For example, the User Data files <b>228</b> may be stored in a format that may also be used directly or indirectly as an input to any one of a variety of other modeling packages, such as SolidWorks&#xae;, Autodesk Inventor&#xae;, Creo Elements/Pro, MATLAB&#xae;, or Microsoft Excel&#xae;. In certain aspects, data may be imported and/or exported between the multiphysics modeling system and another system, such as MATLAB&#xae; or Microsoft Excel&#xae;, for example. The format of the data may be varied or customized in accordance with each of the system(s) as well as in accordance with additional functionalities that each of the system(s) may include.</p>
<p id="p-0068" num="0067">It is contemplated that the systems and methods described herein may be used for combining physics interfaces that model different physical phenomena or processes. The combination of a plurality of physics interfaces can be referred to as a multiphysics model. Properties of the physics interfaces can be represented by PDEs that may be automatically combined to form PDEs describing physical quantities in a coupled system or representation. The coupled PDEs may be displayed, for example, in an &#x201c;Equation view&#x201d; that allows for the coupled PDEs to be modified and used as input into a solver. It is also contemplated that the PDEs may be provided to the solver either independently as one PDE or a system of PDEs, describing a single phenomenon or process, or as one or several systems of PDEs describing several phenomena or processes.</p>
<p id="p-0069" num="0068">In certain aspects of the present disclosure, a multiphysics modeling system can provide an ability to combine physics interfaces that model physical properties through one or more GUIs that allow a user to select one or more physics interfaces from a list. In addition to displaying physics interfaces names, it is further contemplated that variable names for physical quantities may be selected through a GUI. It is contemplated that the physics interfaces may have different formulations that depend on a &#x201c;Study&#x201d; settings feature, which is described in more detail elsewhere herein.</p>
<p id="p-0070" num="0069">It is further contemplated that it may be desirable for a multiphysics modeling system to provide the ability to access predefined combinations of several physics phenomena for defining multiphysics model(s). The predefined combinations may be referred to as multiphysics interfaces, which similar to the physics interfaces, may also have different formulations that depend on a study settings feature.</p>
<p id="p-0071" num="0070">It is contemplated that in certain aspects of the present disclosure physical properties can be used to model physical quantities for component(s) and/or process(es) being examined using the modeling system, and the physical properties can be defined using a GUI that allow the physical properties to be described as numerical values. In certain aspects, physical properties can also be defined as mathematical expressions that include one or more numerical values, space coordinates, time coordinates, and/or the actual physical quantities. In certain aspects, the physical properties may apply to some parts of a geometrical domain, and the physical quantity itself may be undefined in the other parts of the geometrical domain. A geometrical domain or &#x201c;domain&#x201d; may be partitioned into disjoint subdomains. The mathematical union of these subdomains forms the geometrical domain or &#x201c;domain&#x201d;. The complete boundary of a domain may also be divided into sections referred to as &#x201c;boundaries&#x201d;. Adjacent subdomains may have common boundaries referred to as &#x201c;borders&#x201d;. The complete boundary is the mathematical union of all the boundaries including, for example, subdomain borders. For example, in certain aspects, a geometrical domain may be one-dimensional, two-dimensional, or three-dimensional in a GUI. However, as described in more detail elsewhere herein, the solvers may be able to handle any space dimension. It is contemplated that through the use of GUIs in one implementation, physical properties on a boundary of a domain may be specified and used to derive the boundary conditions of the PDEs.</p>
<p id="p-0072" num="0071">Additional features of a modeling system, such as feature that may be found in the Modeling and Simulation module <b>222</b>, may provide for automatically deriving a system of PDE's and boundary conditions for a multiphysics model. This technique can include merging the PDEs of the plurality of phenomena or processes, and may produce a single system of coupled PDEs, also using coupling variables or operators to couple processes in different coordinate systems, and may perform symbolic differentiation of the system of PDEs with respect to all the dependent variables for later use by the solver.</p>
<p id="p-0073" num="0072">It is contemplated that in certain aspects, a coupled system of PDEs may be modified before being differentiated and sent to the solver. The modification may be performed using a settings window included in a GUI displaying the combined PDEs in an &#x201c;Equation view&#x201d;. When the system of PDEs is modified in this way, the settings for the corresponding physical properties can become &#x201c;locked&#x201d;. The properties may subsequently be unlocked by a user taking certain action(s).</p>
<p id="p-0074" num="0073">It is contemplated that certain aspects of the present disclosure may include features for modeling one or more of a plurality of engineering and scientific disciplines, including, for example, acoustics, chemical reactions, diffusion, electromagnetism, fluid dynamics, geophysics, heat transfer, porous media flow, quantum mechanics, semiconductor devices, structural mechanics, wave propagation, and the like. Certain aspects of a modeling system may involve more than one of the foregoing disciplines and can also include representing or modeling a combination of the foregoing disciplines. Furthermore, the techniques that are described herein may be used in connection with one or more systems of PDEs.</p>
<p id="p-0075" num="0074">It is contemplated that in certain aspects of the present disclosure, system(s) of PDEs may be represented in general, coefficient, and/or weak form. The coefficient form may be more suitable in connection with linear or almost linear problems, while the general and weak forms may be better suited for use in connection with non-linear problems. The system(s) being modeled may have one or more associated studies, for example, such as stationary, time dependent, eigenvalue, or eigenfrequency. In the aspects described herein, a finite element method (FEM) may be used to solve for the PDEs together with, for example, adaptive meshing, adaptive time stepping, and/or a choice of a one or more different numerical solvers.</p>
<p id="p-0076" num="0075">It is contemplated that in certain aspects of the present disclosure, a finite element mesh may include simplices forming a representation of a geometrical domain. Each simplex can belong to a unique subdomain, and a union of the simplices can form an approximation of the geometrical domain. The boundary of the domain may also be represented by simplices of the dimensions 0, 1, and 2, for geometrical dimensions 1, 2, and 3, respectively.</p>
<p id="p-0077" num="0076">It is further contemplated that a mesh representing a geometry may also be created by an outside or external application and may subsequently be imported for use into the modeling system(s) described in the present disclosure.</p>
<p id="p-0078" num="0077">The initial value of the solution process may be given as numerical values, or expressions that may include numerical values, space coordinates, time coordinates and the actual physical quantities. The initial value(s) may also include physical quantities previously determined.</p>
<p id="p-0079" num="0078">The solution of the PDEs may be determined for any subset of the physical properties and their related quantities. Further, any subset not solved for may be treated as initial values to the system of PDEs.</p>
<p id="p-0080" num="0079">It is contemplated that it may be desirable for a user to select a space dimension, combinations of physics, and a type of study in a multiphysics modeling system using a model wizard. The model wizard may take the user through these selection steps and it may also allow for the combination of several space dimensions, several physics, and several studies or study steps in a multiphysics model.</p>
<p id="p-0081" num="0080">Referring now to <figref idref="DRAWINGS">FIG. 3</figref>, an exemplary aspect of a user interface or GUI <b>330</b> is illustrated that may be used to specify a space dimension <b>332</b> of a multiphysics model. The model may be specified in coordinate systems of the space dimensions including 0 dimensional (space independent, only time dependent), 1-dimensional, 1-dimensional axisymmetric, 2-dimensional, 2-dimensional axisymmetric, and 3-dimensional. It is further contemplated that a user may also combine models involving several of the above mentioned coordinate systems in order to describe phenomena or processes comprising multiple parts or scales.</p>
<p id="p-0082" num="0081">Referring now to <figref idref="DRAWINGS">FIG. 4</figref>, an exemplary aspect of a user interface or GUI <b>439</b> is illustrated that may be used to specify a multiphysics model having a combination of more than one phenomena or process(es) (e.g., acoustics, heat transfer, structural mechanics). It is contemplated that each phenomenon or process to be combined may correspond to a physics interface. Through the use of the GUI <b>439</b>, the physics interfaces that are to be used in this combined multiphysics model may be specified. Each physics interface can be configured to model physical quantities in terms of PDEs. The physical quantities may be represented either directly as dependent variable(s) in the PDE, or by a relation between the dependent variable and a variable representing the physical quantity. The PDEs in this exemplary aspect may be generally &#x201c;hidden&#x201d; (e.g., not made directly visible) from the user through the use of GUIs. As discussed previously, once several physics interfaces are combined into one single model or a system of models, the model or models may be referred to as a multiphysics model.</p>
<p id="p-0083" num="0082">The GUI <b>439</b> also includes an exemplary list of physics interfaces <b>440</b> (e.g., AC/DC, Electrochemistry, Radio Frequency, Structural Mechanics) from which a user may select in accordance with a user's choice of space dimensions. To add physics interfaces to a multiphysics model, the user selects physics interfaces from the list and may specify that these physics interfaces are to be included in a multiphysics model. For example, the user may right-click and then select context menu item &#x201c;Add selected&#x201d; <b>442</b> to add a physics interface (e.g., Heat Transfer in Fluids) to a multiphysics model. After selection, this physics interface is added to the list of &#x201c;Selected physics&#x201d; <b>444</b> below the physics list in the GUI <b>439</b>. Physics interfaces may also be removed from the list by selecting a &#x201c;Remove selected&#x201d; button <b>446</b>.</p>
<p id="p-0084" num="0083">Each physics interface in a multiphysics model is given a unique name that may be used to identify the origin of the variables in the multiphysics model. After adding a physics interface to the &#x201c;Selected physics&#x201d; list <b>446</b>, a user may edit the names of the dependent variables representing the physical quantities being solved for. For example, edits by a user may result in a new name for a variable, such as, for &#x201c;Temperature&#x201d; in the &#x201c;Dependent variables&#x201d; section <b>448</b> of GUI <b>439</b>.</p>
<p id="p-0085" num="0084">It is contemplated that the selectable interfaces can also include a mathematics interface <b>443</b> that is configured to directly correspond to PDEs. In mathematics interface(s), quantities can be represented by the dependent variables for the multiphysics model. It is contemplated that in certain aspects each mathematics interface may have more than one dependent variable. It is further contemplated that the number of dependent variables and the dimension of the system of PDEs may be entered in the &#x201c;Dependent variables&#x201d; section <b>448</b> in the GUI <b>439</b>.</p>
<p id="p-0086" num="0085">Referring now to <figref idref="DRAWINGS">FIG. 5</figref>, an exemplary aspect of a user interface or GUI <b>549</b> is illustrated for specifying one or more study types for a multiphysics model. In certain aspects of the modeling system, an interface may include preset studies that are associated with selected physics interfaces. The interface may allow for customization of study steps where, for example, the studies for each of the physics interfaces are customized or some of the studies are preset (e.g., stationary, time dependent) and others are customized (e.g., eigenfrequency). It is further contemplated that a study may combine several study steps relevant for a simulation study of a multiphysics model.</p>
<p id="p-0087" num="0086">It is contemplated that in certain aspect of the present disclosure, a study can determine the type of analysis that may be done on a multiphysics model, such as stationary, time-dependent, eigenvalue, and eigenfrequency. The study may control the type of equation formulation used in a multiphysics model, the type of mesh (e.g., selected from a list of possible meshes), and/or the type of solvers that may be used to solve the different studies or study steps in a multiphysics model. In one exemplary aspect, a study may comprise a stationary study step followed by a transient study step. The study then formulates the equations, meshes, and solvers for the stationary and time-dependent study steps. A user may select a study from the studies list <b>550</b> and then finish the model wizard steps by clicking the &#x201c;Finish&#x201d; button <b>554</b>.</p>
<p id="p-0088" num="0087">It is contemplated that in certain aspects of the present disclosure, multiphysics model data (e.g., selections made in GUIs <b>330</b>, <b>439</b>, <b>549</b>) may be communicated from the GUI (e.g., 220) to the Data Storage and Retrieval Module (e.g., 224) for storage in the User Data Files (e.g., 228). For example, a multiphysics model, such as one generated via model wizard steps previously described in <figref idref="DRAWINGS">FIGS. 3-5</figref>, including geometry, materials, physics interfaces, mesh, studies, and results, may be represented as a model tree in a GUI. Selecting (e.g., left clicking on) a node in a model tree may give a user access to the settings for the corresponding operation represented by the node. Further selection (e.g., right-clicking) of a node may also give a user access to a menu where a user may add properties and operations to the corresponding node. These added properties and operations may be represented as child nodes to the selected node.</p>
<p id="p-0089" num="0088">It is contemplated that in certain aspects of the present disclosure, the foregoing screen display(s) (e.g., GUI <b>330</b>) may be displayed by and/or included as part of the software component for the GUI module (e.g., <b>220</b>) of a modeling system (e.g., <b>219</b>). It is further contemplated that a modeling system is configured to include different types of physics interfaces, including some that may be predefined and/or some that may be user-defined. A predefined physics interface may be one for which the interface properties are included in Libraries (e.g., <b>226</b>), and that may, for example, be available from a software vendor (e.g., a software vendor may supply libraries including defined systems of PDEs, analysis types, GUIs and the like for a particular type of system, such as heat transfer). A user-defined physics interface is configured to allow for user-defined models or physics interfaces for which a user may specify the PDEs, the quantities being modeled, and the like. The user-defined model may be saved in a user-defined library, such as a library included in the User Data files (e.g., <b>228</b>). Definitions and other data files associated with a user-defined model may be stored in any one of a variety of data formats, for example, similar to those of the Libraries (e.g., <b>226</b>) that may be included in an implementation by a software vendor. It is contemplated that the format and operation may vary for the stored models and model parameters.</p>
<p id="p-0090" num="0089">Referring now to <figref idref="DRAWINGS">FIG. 6</figref>, an exemplary aspect of a settings window <b>659</b> is illustrated for physical property specification of an exemplary physics interface (e.g., heat transfer in solids). It is contemplated that each physics interface may have one or several GUI settings windows customized to the physics phenomena or process for which the physical properties associated with that physics interface may be specified. The physics interface and the settings for a physics interface may be represented as nodes in a model tree. For example, selecting (e.g., right-clicking on) a physics interface node can open a form where a user can do one or more tasks, such as adding domain properties to a physics interface or a setting, renaming the node, or displaying properties about the selected node.</p>
<p id="p-0091" num="0090">Settings window <b>659</b> includes a domain list <b>660</b> that may have one or more geometrical domains to which the physical properties may apply. The domains may also be referred to as subdomains. It is contemplated that a user may select (e.g., via a mouse, keyboard, or other selection feature) one or several subdomains by selecting directly from a graphical representation of the geometrical domain in a graphics window. It is also contemplated that in certain aspects, the user may select domains from a predefined selection of domains that represent a specific part of a component being modeled in a multiphysics model.</p>
<p id="p-0092" num="0091">The physical properties of the domains (or subdomains) are specified in the settings window. As previously described, the physical properties may be expressed in different forms including being specified as numerical values <b>662</b>, as symbolic expressions in terms of space coordinate(s) <b>664</b>, physical quantities and their space derivatives, and/or time. It is also contemplated that physical quantities may also be obtained from a materials setting <b>666</b> that may be defined elsewhere in the model and as described elsewhere herein. It is further contemplated that a physical property may be specified via a procedure or routine that computes a value of the property. The name or the procedure or routine may be entered in the setting window <b>659</b> along with parameters, if any, to be included. In one exemplary aspect, the procedure or routine may be written using C, Fortran, MATLAB&#xae;, or Microsoft Excel&#xae;. The particular programming language for an implementation may vary in accordance with each particular aspect and the calling standards and conventions included therein.</p>
<p id="p-0093" num="0092">Referring now to <figref idref="DRAWINGS">FIG. 7</figref>, an exemplary aspect of a GUI <b>769</b> is illustrated that may be used to modify the PDEs via an &#x201c;Equation view&#x201d; window. For example, PDEs, such as the exemplary equation <b>772</b>, may be defined by a physics interface and further displayed and modified by a user in order to introduce description(s) that may not be defined in the settings windows for the corresponding property. In one exemplary aspect, the PDEs may be displayed in response to a user selecting a &#x201c;Show equation view&#x201d; element from a menu. It is contemplated that in certain aspects, each property of the model then displays a corresponding &#x201c;Equation view&#x201d; with a corresponding settings window <b>770</b> where changes to the equations may be made by a user. The &#x201c;Equation view&#x201d; may be represented as a child node (e.g., element <b>774</b>) to a physics interface property node (e.g., element <b>776</b>). It is contemplated that in certain aspects following a change to the settings window <b>770</b> for an &#x201c;Equation view&#x201d; node (e.g., element <b>774</b>), the corresponding settings for the physics interface property may be locked. In one aspect, a lock indicia may be placed on the physics interface icon (e.g., element <b>776</b>) to indicate that one or more properties for that interface of the model tree are locked. The property may also be unlocked by the user by, for example, selecting a &#x201c;Reset all&#x201d; feature <b>778</b>, or other unlocking element, in the settings window for the corresponding a corresponding &#x201c;Equation view&#x201d; node <b>774</b>.</p>
<p id="p-0094" num="0093">Referring now to <figref idref="DRAWINGS">FIG. 8</figref>, an exemplary aspect a material settings window <b>879</b> is illustrated for setting material properties of a domain. Material settings can include material properties for some or all of the physics interfaces included in a multiphysics model. It is contemplated that a model can include different materials that are selected for the different domains identified in the domain list <b>880</b>. The material properties may be defined by a user or they may be obtained from a predefined materials library. In one aspect of a material settings window, a material contents <b>882</b> list may display a status of the material properties for a selected material, in a selected domain, considering the physics interfaces in the multiphysics model. For example, in the context of an exemplary Joule heating process, the material contents list may label, using an icon, the properties associated with a multiphysics process involving Joule heating and the properties described in a multiphysics interface. The exemplary material properties may include, for example, heat capacity, thermal conductivity, electric conductivity, relative permittivity, and density. The material properties for describing Joule heating may be defined via the material settings window <b>879</b>. Any required material properties may be labeled or otherwise identified with an icon <b>84</b> or other indicia (e.g., check mark). If a required material property is not defined, the material contents <b>882</b> list can identify the condition by highlighting the corresponding material property row (e.g., using a red stop sign icon).</p>
<p id="p-0095" num="0094">It is contemplated that materials and material properties defined by a user can be saved and later accessed from user-defined material libraries for use in separate or different models. This aspect provides versatility by allowing users to create material libraries for specific applications and further can allow software developers and vendors to create material libraries for use with a multiphysics modeling system.</p>
<p id="p-0096" num="0095">It is contemplated that materials and materials properties in a modeling system may be represented via nodes in a model tree. This can allow for materials and material properties to be displayed, renamed, and/or added to a node in a form accessible by a user (e.g., by right-clicking or otherwise selecting the corresponding node in the model tree).</p>
<p id="p-0097" num="0096">Referring now to <figref idref="DRAWINGS">FIG. 9</figref>, an exemplary aspect of a boundary condition settings window <b>989</b> is illustrated for a physical property boundary condition (e.g., temperature) for a physics interface (e.g. heat transfer interface). The settings window <b>989</b> may include a boundary list <b>990</b> to identify the geometric boundaries on which physical propert(ies) may apply. It is contemplated that a user can include one or more boundaries in the boundary list by selecting a boundary from graphical representations of the geometrical domain in one or more graphics windows. Selection of the boundary can occur via a selection-type device typically used for a computing system (e.g., mouse, keyboard, other selection device). It is further contemplated that a user may also select boundaries from a predefined selection of boundaries representing a specific portion of the boundary of a component being modeled in a multiphysics model. The specific portion may include the entire, or something less than the entire, boundary of the component.</p>
<p id="p-0098" num="0097">The physical properties of geometrical boundaries can be specified in the boundary condition settings window <b>989</b> for a corresponding boundary. The properties can be expressed as values <b>992</b> specified in terms of numerical values, as symbolic expressions in terms of the space coordinates, or based on time. It is also contemplated that the properties can be expressed as the physical quantities and the corresponding space derivatives from a physics interface added using systems described elsewhere herein. It is further contemplated that a procedure or routine to determine the value of a property may also be specified and/or named in a manner similar to as described elsewhere herein.</p>
<p id="p-0099" num="0098">It is contemplated that boundary condition settings in a modeling system may be represented via nodes in a model tree. This can allow a user to add boundary properties to a physics interface boundary condition, to rename a node, or to display properties about a node (e.g., by right-clicking or otherwise selecting the corresponding node in the model tree).</p>
<p id="p-0100" num="0099">Referring now to <figref idref="DRAWINGS">FIG. 10</figref>, an exemplary aspect of a GUI <b>1009</b> is illustrated for modifying PDE boundary conditions via another &#x201c;Equation view&#x201d; feature <b>1000</b>. Boundary conditions defined by a physics interface may be displayed <b>1002</b> and modified by a user in order to introduce description(s) that may not have been defined in the settings window(s) for the corresponding physics interface. In one embodiment, the boundary equations may be displayed by a user selecting, for example, a &#x201c;Show equation view&#x201d; item from a Preferences menu (not shown). It is contemplated that following a change to the PDE boundary equations using the &#x201c;Equation view&#x201d; feature (e.g., equation view node <b>1004</b>), the corresponding settings for that boundary condition may be locked. To identify the locked nature of the boundary condition, the boundary condition node <b>1006</b> for the boundary condition property in a model tree may include an indicia that looks like a lock. The boundary condition may be unlocked by the user selecting &#x201c;Reset all&#x201d; <b>1008</b> in the settings window, or some other unlocking feature, for the corresponding property.</p>
<p id="p-0101" num="0100">It is contemplated that in certain aspects of a modeling system it may be desirable for the PDEs and boundary conditions for the various selected physics interfaces associated with a coupled system of PDEs to be stored in a model object, which is described in more detail in the descriptions for <figref idref="DRAWINGS">FIGS. 13-15</figref>. A model object may be desirable because if the PDEs and boundary conditions are modified, for example, using the GUI <b>769</b> in <figref idref="DRAWINGS">FIG. 7</figref>, the corresponding model object may be updated accordingly. For example, through the use of the settings windows for domains and boundaries, respectively, the physical properties for the domains and boundaries along with possible modifications specified in &#x201c;Equation view&#x201d;, the Modeling and Simulation Module <b>222</b> (see, e.g., <figref idref="DRAWINGS">FIG. 2</figref>) in one exemplary aspect may create, initialize, and modify a model object that includes data associated with a multiphysics model. It is furthermore contemplated that the coupled system of PDEs and associated boundary condition fields may be updated, as well.</p>
<p id="p-0102" num="0101">Referring now to <figref idref="DRAWINGS">FIG. 11</figref>, an exemplary aspect of another type of settings window <b>1109</b> is illustrated for a study step (e.g., stationary, time dependent, frequency) that may be used in connection with solving for a study having one or more study steps. The settings window <b>1109</b> may be associated with solving PDEs for any subset of physical quantities from any one or more physics interfaces, or from a coupled PDE system. The GUI for the settings window <b>1109</b> includes a physics interfaces display area <b>1110</b> that lists the one or more physics interfaces selected for a multiphysics model. The settings window <b>1109</b> may also be configured to allow a selection of different meshes <b>1112</b> along with different discretization <b>1114</b> and tolerances for different study step. It is contemplated that the particular physics interfaces for a model may be selected along with corresponding study step settings. Then, the corresponding PDEs may be solved one at the time in different study steps or the corresponding PDEs may be solved for several physics interfaces as a coupled system of PDEs in each study step.</p>
<p id="p-0103" num="0102">Referring now to <figref idref="DRAWINGS">FIG. 12</figref>, an exemplary aspect of a model tree <b>1219</b> is illustrated that includes a study node (e.g., &#x201c;Study 1&#x201d; <b>1220</b>) along with several child nodes (e.g., &#x201c;Step 1: Stationary&#x201d; <b>1222</b>, &#x201c;Solver Configurations&#x201d;). The child nodes in this exemplary aspect include study steps (e.g., &#x201c;Step 1: Stationary&#x201d; <b>1222</b>, &#x201c;Step 2: Time Dependent&#x201d;) and solver node(s) (e.g., &#x201c;Solver 1&#x201d; <b>1224</b>). A parent node (e.g., primary node) and its child nodes (e.g., secondary nodes, subnodes) may be referred to as branches in the model tree (e.g., the study branch <b>1219</b>). The study branch may include, for example, PDE formulations (e.g., &#x201c;Compile Equations: Stationary&#x201d; <b>1226</b><i>a</i>, &#x201c;Compile Equations: Time Dependent 2&#x201d; <b>1226</b><i>b</i>) and solver settings (e.g., &#x201c;Stationary Solver 1&#x201d; <b>1228</b><i>a</i>, &#x201c;Time-Dependent Solver 1&#x201d; <b>1228</b><i>b</i>) for the different studies (e.g, a stationary and a time-dependent analysis, respectively). It is contemplated that a user may select a subset of the models physics interfaces to be solved in each of the study steps or select to solve for all physics interfaces in every study step. It is further contemplated that a user may also include several model nodes with corresponding physics interfaces, representing models described in different spatial dimensions, and solving a subset of the physics interfaces in each of the study steps or all physics interfaces in every study step. The selection of physics interfaces in each study step and the settings for a study step can also be included in a model object.</p>
<p id="p-0104" num="0103">The solver branch (e.g., Solver Configurations) of exemplary model tree <b>1219</b> is a child node to the study branch (e.g., Study 1) and can also include its own child nodes, such as a solver (e.g., &#x201c;Solver 1&#x201d;) and/or a dependent variable node (e.g., &#x201c;Dependent Variables 1&#x201d;). These child nodes may further have additional or their own child nodes, such as &#x201c;mod1_V&#x201d; <b>1227</b><i>a </i>and &#x201c;mod1_T&#x201d; <b>1227</b><i>b</i>. The dependent variable node may be configured to allow a user to make a finer selection of the solution in every study step, so that the solver may be set to solve or not solve for individual variables within a physics interface. It is contemplated that a selection of dependent variables in the solver step and the settings for a solver step are also reflected in the model object.</p>
<p id="p-0105" num="0104">The exemplary aspects of the modeling system presented in <figref idref="DRAWINGS">FIGS. 3-12</figref> are merely examples and are understood to apply to broader physics processes and physic phenomena, not just the processes or phenomena described herein or illustrated in the FIGS. For example, it would be understood that many different physics interfaces may be evaluated beyond the selected physics for heat transfer that is illustrated in <figref idref="DRAWINGS">FIG. 4</figref>. As another example, it is also understood that the multiple equation views can be viewed in <figref idref="DRAWINGS">FIG. 7</figref> or that many different material properties may be selected in <figref idref="DRAWINGS">FIG. 8</figref>. The illustrated aspects are merely examples of the broader operations that may be performed by the multiphysics modeling system. Furthermore, the illustrated interfaces are representative of one type of interface that may be used in a multiphysics modeling system. Other types of graphical, user, or alternative input-type interfaces are contemplated.</p>
<p id="p-0106" num="0105">Referring now to <figref idref="DRAWINGS">FIGS. 13-15</figref>, non-limiting exemplary flowcharts <b>1329</b>, <b>1439</b>, <b>1549</b> are illustrated for method(s) including acts for automatically specifying one or more systems of PDEs, representing the system of PDEs in a single coupled form, and solving for the system of PDEs. The various aspects described for the present disclosure can be implemented using object-oriented programming languages (e.g., Java&#xae;, C++, C#) where an object is a type of data structure that includes data fields and methods along with their interactions. For example, objects in a model can be created, modified, and accessed by method calls for a model object. A model object may include the algorithms and data structures for the model and may be further used to represent the model. The model object can further include methods for setting up and executing sequences of operations to create geometry, meshes, and solutions for the model.</p>
<p id="p-0107" num="0106">It is further contemplated that the methods of the model object can be structured in a tree-like manner, such that methods calls can be associated with the operations represented by the nodes in a model tree. By operating with such a tree-like or model-tree type structure, top-level methods (e.g., represented as parent nodes) may return references that support further methods (e.g., represented by child nodes or otherwise). At certain levels within the model object, the method will perform certain acts, such as adding data to the model object, performing computations, or returning data. In the exemplary aspect of a geometry node (see, e.g., <figref idref="DRAWINGS">FIG. 29</figref>), a model object may have different operations associated with the geometry of a model that are represented by secondary nodes (e.g., child nodes) to a geometry node.</p>
<p id="p-0108" num="0107">Referring now to <figref idref="DRAWINGS">FIG. 13</figref>, at step <b>1330</b>, a space dimension is selected either directly (e.g., actual selection) or indirectly (e.g., through a step associated with a predefined feature) by a modeling system user. It may be desirable for the selection of a space dimension to occur using the wizard window previously described in <figref idref="DRAWINGS">FIG. 3</figref> or through another type of interface. Selection of the space dimension can include an automatic update of a model object with a model item having the method call syntax, model.modelNode( ).create( ), and/or a geometry item that specifies the space dimension using the method call syntax, model.geom( ).create( ).</p>
<p id="p-0109" num="0108">Next, at step <b>1331</b>, the selection of physics interface(s) may be performed. The selection(s) can occur using, for example, the wizard window described for <figref idref="DRAWINGS">FIG. 4</figref>. Selection of the physics interface(s) can include updating the model object and adding corresponding physics item(s) in the model object, model.physics( ).create( ). Next, at step <b>1332</b>, the type(s) of stud(ies) may be selected. For example, the selection of a study may be made using the wizard windows previously described in <figref idref="DRAWINGS">FIG. 5</figref>. It is contemplated that the selected stud(ies) can be later used to automatically generate equation formulations and solver settings. It is further contemplated that the model object can be updated with a corresponding study item, model.study( ).create( ). In certain aspects, some or all of the created model object items may be equipped with child items that may be represented by nodes in the model tree. The nodes may describe the operations specified in the model wizard and/or in the settings windows described above.</p>
<p id="p-0110" num="0109">At step <b>1333</b><i>a</i>, a determination is made if the settings for the physics interfaces have been selected. If the logical determination is true, the method then proceeds to step <b>1333</b><i>b</i>, where another determination is made if a model is to be added. If another model is to be added (i.e., true) to the component(s) and/or process(es) already received by the modeling system, the method then returns to step <b>1330</b> to receive input associated with the additional model. A new model item, model.modelNode( ).create( ), may then be added including a model item with different or the same space dimensions than the already available model. This allows for the simulation of multiple processes in a multiphysics model. If no additional models are to be added (i.e., false), the method can proceed to step <b>1440</b>. If the logical determination in step <b>1333</b><i>a </i>is false, the method then proceeds to step <b>1334</b>, where for each physics interface a geometry is specified, except for zero-dimensional physics interfaces where the assigned geometry is a point. It is contemplated that geometric representation(s) may be created or otherwise imported from a geometry file (e.g., a file created using a CAD system). It is further contemplated that the model object for the geometry can be updated to include a geometric representation.</p>
<p id="p-0111" num="0110">At step <b>1335</b>, a specification of materials and corresponding material properties is made. It is contemplated that selection of materials and material properties may be performed, for example, using the settings windows previously described in <figref idref="DRAWINGS">FIG. 8</figref>. It is further contemplated that the model object may be updated with a corresponding material item, model.material( ).create( ). Next, at step <b>136</b>, the specification of physical properties in the different domains and for the different physics interfaces may be performed. It is contemplated that the specification of domain settings may be performed, for example, using the settings windows previously described in <figref idref="DRAWINGS">FIG. 6</figref>. At step <b>1337</b>, the physical properties and interactions at the boundaries may be specified for the different physics interfaces. It is contemplated that the specification of boundary conditions may be performed, for example, using the settings windows previously described in <figref idref="DRAWINGS">FIG. 9</figref>. It is further contemplated that the model object can be updated for both domain settings and boundary conditions using model object items of the type, model.physics( ).feature( ).</p>
<p id="p-0112" num="0111">At step <b>1338</b><i>a</i>, a determination is made if any of the PDEs for the physics interfaces are to be modified. If the logical determination is true, the method proceeds to step <b>1338</b><i>b</i>, where predefined PDEs for some or all of the physics interface(s) can be changed, including domain equations and/or boundary conditions. It is contemplated that specification of the predefined physics interface equations in the PDEs modification step may be performed, for example, using the settings windows previously described in <figref idref="DRAWINGS">FIGS. 7</figref> and/or <b>10</b>. Step <b>1338</b><i>b </i>may also include updating the model object. If the logical determination is false, or after the PDE modification step is performed, the method may then proceed back to step <b>1333</b><i>a. </i></p>
<p id="p-0113" num="0112">Upon completion of the specification of all physics interfaces and upon no more models being added for the component(s) and/or process(es) being modeled, the method then proceeds to <figref idref="DRAWINGS">FIG. 14</figref> and step <b>1440</b> where the mesh(es) may be specified (see, e.g., <figref idref="DRAWINGS">FIG. 11</figref>). It is contemplated that the specification of the mesh can include updating the model object with a mesh item, model.mesh( ).create( ). Next, at step <b>1441</b>, a determination is made if all the desired study parameters have been included for the model. If the logical determination is true, then the method proceeds to step <b>1550</b>. If the logical determination is false, the method proceeds to steps for adding a study and/or adding a study step. For example, at step <b>1442</b><i>a</i>, a determination is made if a new study is to be added. If the logical determination is true, then the method proceeds to step <b>1442</b><i>b</i>, which allows for the selection of the additional study. It is contemplated that the additional study may be added according to study item, model.study( ).create( ). Following the selection of the additional study or if the logical determination in step <b>1442</b><i>a </i>is false, the method can proceed to step <b>1443</b><i>a</i>, where a determination is made if study step(s) are to be added. If the logical determination is true, the method proceeds to allow study step(s) to be added for the model at step <b>1443</b><i>b</i>. Once the study step(s) are selected or if the logical determination at step <b>1443</b><i>a </i>is false, the method proceeds to steps <b>1444</b> and <b>1445</b> where the physics interfaces in the study steps are specified along with the study step settings. It is contemplated that the study settings may be specified, for example, using the settings window described for <figref idref="DRAWINGS">FIG. 11</figref>. It is further contemplated that study settings may update the model object according to one or several items of the type, model.study( ).feature( ).set( ). Following completion of the study settings, the method proceeds to step <b>1550</b>.</p>
<p id="p-0114" num="0113">Referring now to <figref idref="DRAWINGS">FIG. 15</figref>, at step <b>1550</b>, a solver sequence is generated, and at step <b>1552</b>, the solver sequence can be edited based on a decision at step <b>1551</b> depending on whether the solver is determined to be complete. It is contemplated that the solver sequence can update the model object by creating an item, model.sol( ).create( ), based on the stud(ies) associated with the model object. It is further contemplated that the solver sequence can be edited with items being added according to the model object item, model.sol( ).feature( ).create( ).Then, at step <b>153</b>, the method solves the PDEs and can generate a solution for the model. It is contemplated that the solution step can be updated by the model item, model.sol( ).runAll( ).</p>
<p id="p-0115" num="0114">What has just been described in <figref idref="DRAWINGS">FIGS. 13-15</figref> are non-limiting exemplary aspects of method(s) for automatically forming one or more sets of PDEs associated with one or more physics interfaces and one or more geometric representations (e.g., models that represent components or processes) in different space dimensions. It is contemplated that in certain aspects of the method(s), the PDEs may be combined into a single, combined system of PDEs. A numerical solver, such as a finite element solver may be included, for example, in Modeling and Simulation Module (e.g., <b>222</b>) and may be used to solve a system of PDEs. The finite element solver, for example, may solve a single system of PDE corresponding to a single physics interface or may solve for a coupled system of PDEs corresponding to several physics interfaces and several geometric representations (e.g., represented by model nodes).</p>
<p id="p-0116" num="0115">Turning now to <figref idref="DRAWINGS">FIG. 16</figref>, an exemplary aspect of a GUI <b>1610</b> for a design system is illustrated that includes a settings window <b>1620</b> displaying, for example, menu(s) for accessing multiphysics model settings associated with a linked multiphysics modeling system <b>1630</b>. The design system is configured to interact with the multiphysics modeling system <b>1630</b> by accessing settings for forming and solving the multiphysics problems defined in the multiphysics modeling system <b>1630</b>. For example, the GUI <b>1610</b> may allow the design system to access the multiphysics model setting including such items as the physical properties and boundary conditions of the system being modeled in the multiphysics modeling system <b>1630</b>. The design system may be configured to access the boundary condition selection <b>1650</b> in the multiphysics modeling system <b>1630</b> from a face selection in the design system's user interface <b>1610</b>. Similarly, the selection of a part in the geometric representation in the design system's user interface may access the physical quantities and/or physical properties associated with a geometrical domain <b>1640</b> modeled in the multiphysics modeling system <b>1630</b>. It is contemplated that in certain aspects, access of the various physical quantities, physical properties, and/or boundary conditions settings may be initiated through user selections of domains (e.g., bodies or parts) and faces via the GUI <b>1610</b> of the design system.</p>
<p id="p-0117" num="0116">As illustrated in <figref idref="DRAWINGS">FIG. 16</figref>, the GUI <b>1610</b> may also include a geometric representation <b>1660</b> of a geometrical domain of at least a portion of a system being modeled in the multiphysics modeling system <b>1630</b>. The window <b>1620</b> in the GUI <b>1610</b> may be used for accessing the multiphysics model settings and can include a display of menus that describe settings for physical properties and boundary conditions in a multiphysics problem. The settings in the menu <b>1620</b> may be associated with entities in the geometrical domain, such as domains, faces, edges, or vertices associated with the system being modeled, and residing in the multiphysics modeling system. It is contemplated that selections of the multiphysics settings via the window <b>1620</b> on the GUI <b>1610</b> may implement routine(s) that describe the geometric entities and settings for the model attributable to a particular selection. In certain embodiments, the design system may be configured for developing or assigning various geometric properties and physical properties of a system. The design system may then interface with and/or send the different geometric representations, the selection of entities (e.g., domains, faces, edges, or vertices), and other setting to the multiphysics modeling system for subsequent multiphysics modeling, which may include processing of the data sent from the design system. It is also contemplated that it may be desirable for the multiphysics modeling system <b>1630</b> to send a solution or modeling result configurable for display on the GUI <b>1610</b> of the design system.</p>
<p id="p-0118" num="0117">In certain embodiments, the design system and the multiphysics modeling system may reside in one or more memories, one or more processors, and/or one or more computer readable media associated with the same computer system. In other embodiments, the design system and multiphysics modeling system may reside in different computer systems connected over a local area network or a wide area network.</p>
<p id="p-0119" num="0118">Referring now to <figref idref="DRAWINGS">FIG. 17</figref>, an exemplary aspect is illustrated of communications via a bidirectional link between a design system and a multiphysics modeling system. The communications are described in the context of non-limiting exemplary dynamic link communications that may be included in a bidirectional link between a design system (e.g., a computer-aided design system or CAD system) and a multiphysics modeling system. The bidirectional link may be in the form of computer code embedded in a memory or another computer readable medium. In certain exemplary embodiments, a CAD system user interface may be used to describe a multiphysics problem or design in the multiphysics modeling system. The multiphysics modeling system may seek a geometric representation from the CAD system to generate a geometrical domain for the multiphysics problem.</p>
<p id="p-0120" num="0119">In certain methods of communication between a design system and a multiphysics modeling system, a design system <b>1710</b> may detect the installation of a multiphysics modeling system <b>1720</b>, and in response, implement design system dynamic link library file(s) <b>1730</b> to facilitate communication with the multiphysics modeling system <b>1720</b>. In addition, the multiphysics modeling system can implement multiphysics-related dynamic link library file(s) <b>1740</b> to facilitate communication with the design system <b>1710</b>. In one exemplary embodiment, the dynamic link library files <b>1730</b>, <b>1740</b> may be used to implement various commands related to geometric features between the design system <b>1710</b> and the multiphysics modeling system <b>1720</b>. For example, the design system <b>1710</b> may be instructed to transfer geometric representations <b>1750</b> to the multiphysics modeling system <b>1720</b>. In certain embodiments, the design system <b>1710</b> may also transfer material properties, which may be stored in the geometric representations of the design system <b>1710</b>. It is also contemplated that in certain embodiments, the design system <b>1710</b> may mesh the geometry and send the resulting mesh to the multiphysics modeling system <b>1720</b> as the geometric representations. It is also contemplated that in certain embodiments, the multiphysics modeling system <b>1720</b> may be configured to search, detect, and load the multiphysics dynamic link library files <b>1740</b> to allow communication with the design system. In addition, the design system's dynamic link library files <b>1730</b> may return the name corresponding to an installed design system <b>1710</b>. The loaded dynamic link library files <b>1730</b>, <b>1740</b> may include instructions for communicating commands between the multiphysics modeling system <b>1720</b> and the design system <b>1710</b>.</p>
<p id="p-0121" num="0120">It is contemplated that the multiphysics modeling system <b>1720</b>, design system <b>1710</b>, and the bidirectional link may be executed in computer system having a memory associated with a single processor or in a computer system having multiple memories associated with multiple processors. In certain embodiments, the multiphysics modeling system(s) may operate on one computer system, the design system routine(s) may operate on a second computer system, and the bidirectional link may operate on one or both of the computer systems. It is also contemplated that the bidirectional link may operate on a third computer system and that the multiphysics modeling system <b>1720</b> and the design system <b>1710</b> communicate through the third computer system via the bidirectional link. It is contemplated that communications between all the computer systems may occur asynchronously or synchronously. For configurations having multiple computer systems and/or multiple memories, communications between the various computers may occur over local connections or a local area network. It is also contemplated that communications between the various systems may occur over a wide area network. It is further contemplated that communications between the various systems may occur wirelessly. In certain embodiments, the bidirectional link includes a series of instructions stored in a memory and executed by a processor. It is also contemplated that the bidirectional link may comprise dedicated computer hardware having the instructions permanently stored in a memory and communications ports for receiving connections from the multiphysics modeling system and the design system computer(s) that allow communications of geometry and parameter data between the multiphysics modeling system and the design system.</p>
<p id="p-0122" num="0121"><figref idref="DRAWINGS">FIG. 18</figref> illustrates an exemplary aspect of a GUI <b>1800</b> that may be used to establish a bidirectional link, such as the link described in <figref idref="DRAWINGS">FIG. 17</figref>. The GUI may be displayed on a display associated with a multiphysics modeling system and can include various selectable icons that, when selected, implement different operations for the multiphysics modeling system. For example, the selection of the &#x201c;LINK WITH CAD SYSTEM&#x201d; icon <b>1815</b> may be configured to implement a series of instructions that establish a bidirectional link between the multiphysics modeling system and a computer-aided design system. For example, the &#x201c;LINK WITH CAD SYSTEM&#x201d; icon <b>1815</b> can be associated with and form a link between the geometric operations of the multiphysics modeling system and a design system, similar to the relationship illustrated in <figref idref="DRAWINGS">FIG. 17</figref>. While the icon(s) illustrated in <figref idref="DRAWINGS">FIG. 18</figref> may be displayed or associated with other operations of the multiphysics modeling system, the relationships of geometry sequence(s) <b>1810</b> and geometric operations of a design system can often be logically associated with the geometric aspects of a physical system that may be the subject of multiphysics modeling. The geometry sequence icon <b>1810</b> illustrated in <figref idref="DRAWINGS">FIG. 18</figref> can be configured to include the geometric objects and geometric operations that define the geometrical domain of the multiphysics modeling system, and can further allow these geometric aspects to be communicated to or from the design system once the link between the two systems is established. In one exemplary aspect, some parts of the geometrical domain may be entirely generated in the multiphysics modeling system, such that selection of icon <b>1815</b> is associated with and forms a link with geometric operations for other parts generated in the design system. For example, a screw part may be generated in a CAD system, but a nut associated with the screw may be generated in a geometry tool of the multiphysics modeling system. Then, by selecting icon <b>1815</b>, the link between the design system and modeling system is established and geometric aspects of the screw may be transmitted to the multiphysics modeling system, and the geometric aspects of the nut may be transmitted to the CAD system.</p>
<p id="p-0123" num="0122">Referring now to <figref idref="DRAWINGS">FIG. 19</figref>, a flowchart of an exemplary aspect of a bidirectional link using dynamic link library (&#x201c;.dll&#x201d;) files is described. The flowchart includes a multiphysics modeling system .dll <b>1940</b> and a design system .dll <b>1930</b>, similar to the multiphysics system .dll <b>1740</b> and design system .dll <b>1730</b> discussed above for <figref idref="DRAWINGS">FIG. 17</figref>. As discussed previously, the dynamic links may be used to send commands from a multiphysics modeling system via the multiphysics modeling system's .dll to the design system. For example, a command may ask for the name and status of installed design systems. This is illustrated in step <b>1942</b> where the multiphysics .dll <b>1940</b> may send a request to a detected design system .dll to return the name and status of the design system. Upon the detection of the installed design system at step <b>1932</b>, the design system .dll <b>1930</b> may at step <b>1934</b> send the name and status of the installed design system back to the multiphysics .dll <b>1940</b>. At step <b>1944</b>, the multiphysics .dll <b>1940</b> may send the status message from step <b>1934</b> to the multiphysics modeling system and then proceed to step <b>1946</b> where the multiphysics modeling system may send a command to the multiphysics .dll <b>1940</b> that includes, for example, a list of parameters describing geometric features of a physical system being modeled by the multiphysics modeling system. Proceeding from step <b>1946</b> to <b>1936</b>, the multiphysics .dll <b>1940</b> in turn relays the command to the design system's .dll <b>1930</b> and then further to the design system where the command may be executed. At step <b>1938</b>, a confirmation may be received by the design system .dll <b>1930</b> from the design system. Proceeding from steps <b>1938</b> to <b>1948</b>, the design system .dll <b>1930</b> may send a confirmation back to the multiphysics .dll <b>1940</b> regarding the status of the executed command, which in turn may be communicated to the multiphysics modeling system. As illustrated in the example of <figref idref="DRAWINGS">FIG. 16</figref>, when steps in the bidirectional link are executed, a command involving a change, for example, in a geometric feature in the design system can automatically cause the design system to regenerate the geometric representation, which may be generated as a file containing the geometric representation (e.g., a Parasolid&#xae; file, a CAD file, a SolidWorks&#xae; file). The file containing the geometric representation may be automatically loaded by the multiphysics modeling system and the geometric operation in the geometry sequence and the geometrical domain may then be updated. In certain aspects, the geometric representation may also be updated in a design system user interface linked to the multiphysics modeling system.</p>
<p id="p-0124" num="0123">It is contemplated that the bidirectional link between the multiphysics system and the design system may be directly connected such that the detection step may not be necessary or may be simplified. For example, the name or identification of an installed design system may be known or directly stored in the bidirectional link, such that, for example, step <b>1934</b> can be removed from the exemplary aspect described in <figref idref="DRAWINGS">FIG. 19</figref>. It is also contemplated that it may be desirable to modify the configuration of the detection steps. For example, a setting may be entered by a user defining the name and version of the installed design system in the multiphysics modeling system before connection of the bidirectional link.</p>
<p id="p-0125" num="0124">Referring now to <figref idref="DRAWINGS">FIG. 20</figref>, an exemplary aspect of a bridge connection <b>2010</b> is illustrated between a design system <b>2020</b> and a multiphysics modeling system <b>2030</b>. A bridge connection, such as the one illustrated in <figref idref="DRAWINGS">FIG. 20</figref>, can communicate inputs and outputs between two systems in conjunction with operations associated with, for example, a window having selectable items in a GUI. In one embodiment, the bridge connection may be associated with the display of a settings window in a design system GUI for a multiphysics modeling system that is connected via the bridge connection to the design system. Operations performed in the settings window of the GUI, such as selections from a pointer and/or keyboard events, can be sent via the bridge connection to the multiphysics model system. In certain embodiments, a bridge connection can also send information to the multiphysics modeling system for selections in a display window in the design system GUI associated with geometric representations of the system being modeled. In certain aspects, the multiphysics modeling system can send information associated with the selected geometric entity back to the settings window for the multiphysics modeling system that is displayed in the design system user interface.</p>
<p id="p-0126" num="0125">The bridge connection <b>2010</b> in <figref idref="DRAWINGS">FIG. 20</figref> is configured to communicate commands associated with settings of a multiphysics model. The bridge connection <b>2010</b> may be activated via a user selection from a window in the design system's user interface (e.g., see <figref idref="DRAWINGS">FIG. 19</figref>). In certain embodiments, the bridge connection <b>2010</b> may be automatically activated upon the implementation or execution of the computer-implemented instructions of the design system <b>2020</b>. It is contemplated that in certain embodiments, the design system <b>2020</b> may detect the installation or execution of the computer-implemented instructions for the multiphysics modeling system and based on that detection activate the bridge connection <b>2010</b>. It is also contemplated that the design system <b>2020</b> may be configured to start a process that executes the computer-implemented multiphysics modeling system <b>2030</b>.</p>
<p id="p-0127" num="0126">The bridge connection <b>2010</b> can be configured so that a GUI in the multiphysics modeling system <b>2030</b> communicates or interacts with a design system user interface. The design system's user interface may include a window that displays, for example, the multiphysics modeling system's model tree (see, e.g., FIGS. <b>21</b> and <b>28</b>-<b>38</b>) and/or a window corresponding to the settings of a node for the model tree. Exemplary model tree aspects are presented in more detail in FIGS. <b>21</b> and <b>28</b>-<b>38</b>. In certain embodiments, a model tree associated with the multiphysics modeling system that is displayed in a GUI can include the display of nodes that represent modeling operations and the display of branches that represent the logical relationships between the nodes.</p>
<p id="p-0128" num="0127">It is contemplated that in certain embodiments the bridge connection may allow certain user input events <b>2022</b>, <b>2032</b> such as mouse events, keyboard events, or other user input, to be sent from the design system's user interface to the multiphysics modeling system's model tree and/or a settings window displayed in the design system's user interface. The multiphysics modeling system <b>2030</b> may also send commands through the bridge connection <b>2010</b> to the design system <b>2020</b> using the design system's API. For example, the bridge connection <b>2010</b> may allow the multiphysics modeling system <b>2030</b> to render its graphics inside a graphics window in the design system's user interface. The design system's user interface may then display a view of a model geometry associated with the setup of a multiphysics problem. Selections <b>2024</b>, such as those of geometric entities (e.g., domains, boundaries, edges, vertices) can also be requested from the design system's geometry by the multiphysics modeling system via the bridge connection <b>2010</b>. User selections and/or selection results <b>2034</b> of geometric entities can be sent back and forth, through the bridge connection <b>2010</b>, between the multiphysics modeling system <b>2030</b> and the design system <b>2020</b>.</p>
<p id="p-0129" num="0128">In certain embodiments, the multiphysics modeling system's settings window(s) are configured to receive selection settings from the design system <b>2020</b> through the bridge connection <b>2010</b>. As discussed above, the multiphysics modeling system <b>2030</b> may receive user inputs <b>2032</b>, such as mouse events and keyboard events, through the design system's user interface. In certain embodiments, the multiphysics modeling system <b>2030</b> may be configured via rendering command(s) <b>2036</b> to render graphics directly in a graphics window <b>2026</b> of the GUI of the design system <b>2020</b>. This rendering of graphics may occur in response to a request from a user to show the results from the solution to a multiphysics problem or model. In certain embodiments, the multiphysics modeling system <b>2030</b> may receive the rendering request from the earlier described user inputs <b>2032</b> (e.g., mouse events or keyboard events).</p>
<p id="p-0130" num="0129"><figref idref="DRAWINGS">FIG. 21</figref> illustrates an exemplary aspect of a bridge connection for executing portions of a multiphysics modeling system GUI within a design system user interface. The bridge connection may be established between the design system and the multiphysics modeling system in response to a request for such a connection being sent from the design system to the multiphysics modeling system. Once a bridge connection is established, a design system user interface <b>2110</b> may also display a settings window <b>2114</b> having a model tree <b>2122</b> associated with a model from a multiphysics model system <b>2120</b>. In certain embodiments, the model tree <b>2122</b>, in association with the bridge connection, can directly allow for user inputs into the multiphysics model system <b>2120</b> via the design system user interface <b>2110</b>.</p>
<p id="p-0131" num="0130">The model tree <b>2122</b> can include nodes <b>2124</b> (e.g., Materials, Mesh <b>1</b>) containing references <b>2126</b> to settings (e.g., Joule Heating, Electromagnetic Heat Source, Electric Insulation, Thermal Insulation, Initial Values, Electric Potential, Temperature, Convective Cooling) of a multiphysics model and branches displaying relations between nodes. For example, a setting can include a description for a physical quantity, a physical property, or a boundary condition associated with the model. Model tree <b>2122</b> illustrates an exemplary setting of a boundary condition for convective cooling at a face of a multiphysics model. The model settings for the face include an external temperature and a heat transfer coefficient. In certain embodiments, a user of the design system can enter or select a node or face of the system being modeled from a geometrical display window <b>2112</b> in the design system user interface <b>2110</b>. The entering or selection of a node or face can then send an instruction, via the bridge connection, from the design system to the multiphysics model system to display in the settings window <b>2114</b> for the selected node. The multiphysics modeling system <b>2120</b> can then send, again, via the bridge connection, a representation of the settings window for display in the design system user interface <b>2110</b>.</p>
<p id="p-0132" num="0131">Certain settings may be associated with geometric entities of the model, such as a face for a boundary condition, and the multiphysics modeling system may prompt or send an instruction to the design system requesting the selection of the geometric entity associated with the setting. The prompt or request may occur using similar operations described previously in <figref idref="DRAWINGS">FIGS. 16-20</figref>. In response to the entity selection, the design system user interface <b>2110</b> can then generate a corresponding geometric entity in the multiphysics modeling system <b>2120</b>. The representation of the geometric entity can be displayed in the design system user interface <b>2110</b>, such as in the geometrical display window <b>2112</b> or in a window associated with a selected node or face. The settings of an entity can be entered as instructions using the settings window <b>2114</b>. The instructions can include one or more selections of default or custom items from the settings window <b>2114</b>. The selections may occur via user input received through a mouse, keyboard, or other user input device. In certain embodiments, the settings may be expressions entered using a keyboard or the setting may be predefined and selected from a window listing one or more of the predefined expressions. The input instructions can then be sent or transferred to the multiphysics modeling system <b>2120</b>. Based on the instructions received from the design system, the multiphysics modeling system may then interpret the instructions and execute commands for forming the components of the multiphysics model described by the settings. The multiphysics modeling system <b>2120</b> can then transmit the status of the executed setting(s) back to the design system, including, for example, any updates to geometrical display window <b>2112</b>.</p>
<p id="p-0133" num="0132">The bridge connection can facilitate any of several exemplary associations and/or communications between the multiphysics modeling system <b>2120</b> and the design system, such as those illustrated in <figref idref="DRAWINGS">FIG. 21</figref>. For example, boundary condition selections <b>2128</b>, including physical quantities and properties, may be received by the multiphysics modeling system <b>2120</b> from the design system. <figref idref="DRAWINGS">FIG. 21</figref> illustrates the receipt by the multiphysics modeling system <b>2120</b> of boundary condition selections <b>2128</b> including, for example, face selections, convection cooling settings, and heat flux quantities for a model, via the design system user interface <b>2110</b>. Furthermore, user interface <b>2129</b> (e.g., GUI) associated with the multiphysics modeling system <b>2120</b> may receive selection data from the boundary conditions selection(s) routine <b>2128</b> and in turn communicate the boundary condition data via the bridge connection back to the design system, which then displays updated information on the design system user interface <b>2110</b>. The multiphysics modeling system <b>2120</b> may also determine various results based on the boundary condition selection(s) and also communicate those results for the multiphysics model to the design system, which can display the results on the design system user interface <b>2110</b>. The communicated results can also be based on any geometric entit(ies) or physical quantit(ies) associated with the phenomena or process being modeled. <figref idref="DRAWINGS">FIG. 21</figref> illustrates an exemplary aspect of the interactive nature and/or exchange of information between a design system (e.g., <b>1610</b>, <b>1710</b>, <b>2020</b>, <b>2110</b>) and a multiphysics modeling system (e.g., <b>1620</b>, <b>1720</b>, <b>2030</b>, <b>2120</b>) and how information may be displayed to a user on a GUI (e.g., <b>1610</b>, <b>2110</b>) associated with a design system that is bridged to a multiphysics modeling system (e.g., <b>1620</b>, <b>2120</b>).</p>
<p id="p-0134" num="0133">Other boundary condition selections are contemplated in addition to those described above. For example, in a model having electromagnetic properties and quantities, boundary condition selections can include ground, current density, electric potential, distributed impedance, reflecting, absorbing, port, perfect electric conductor, etc. In a model having structural mechanics properties and quantities, boundary condition selections can include fixed constraint, roller, load, contact, displacement, free, etc. In a model having fluid properties and quantities, the boundary condition selections can include inlet, outlet, wall, free surface, pressure, etc. The foregoing selections are non-limiting examples of domain settings and boundary conditions that can be selected and for which information can be exchanged between a design system and a multiphysics modeling system. It is contemplated that these and other types of information would be understood to be exchangeable between the systems depending on the scientific and engineering principles desired to be modeled.</p>
<p id="p-0135" num="0134">Referring now to <figref idref="DRAWINGS">FIG. 22</figref>, an exemplary aspect of the present disclosure is illustrated for dynamically controlling, via a bidirectional link and a bridge connection, parametric and geometric features in a design system. The steps shown in <figref idref="DRAWINGS">FIG. 22</figref> can be implemented via a multiphysics modeling system GUI that is executed or displayed in a design system user interface, similar to the user interface illustrated in <figref idref="DRAWINGS">FIG. 21</figref>. The steps shown in <figref idref="DRAWINGS">FIG. 22</figref> include a series of steps between the design system <b>2210</b> and the multiphysics modeling system <b>2220</b> occurring over a communications path, such as the bidirectional link and bridge connection described elsewhere herein.</p>
<p id="p-0136" num="0135">Turning now to step <b>2252</b>, a window or list of parameter definitions may be generated by the multiphysics modeling system <b>2220</b> and transferred to the design system <b>2210</b>. These communications may be facilitated via dynamic link library files described elsewhere herein. At step <b>2254</b>, the parameter definitions are received and may be displayed and/or accessed via the design system user interface. In certain embodiments, the display of the parameter definitions may occur as a multiphysics modeling system GUI displayed inside the design system's user interface. At step <b>2256</b>, the list of parameters or parameter definitions may be received as instructions, sent via the bridge connection from the design system <b>2210</b> to the multiphysics modeling system <b>2220</b>. At step <b>2256</b>, the multiphysics modeling system <b>2220</b> may interpret the list or definitions before sending them to the design system. For example, the multiphysics modeling system may interpret the parameter definition to be associated with geometric features. It is also contemplated that in certain embodiments material properties may be obtained from the design system. At step <b>2258</b>, the design system <b>2210</b> may receive parameters that are identified as parameters controlling geometric features. The geometric features can then be updated in the design system according to the parameter definitions or values received from the multiphysics modeling system. At step <b>2260</b>, the design system may update a geometric representation of the model based on the updated geometric features. Furthermore, the design system may also generate a file containing the geometric representation based on the updated geometric features. At step <b>2262</b>, the generated file in step <b>2260</b> may be received or loaded into the multiphysics modeling system and a representation of the geometrical domain of the model can be updated. At step <b>2264</b>, the multiphysics modeling system <b>2220</b> may then solve a multiphysics problem using the updated geometrical domain for the system being modeled. At step <b>2256</b>, the design system can receive results or solutions associated with the geometrical domain, where the results or solution are determined from the file received at step <b>2262</b>. The results or solution can then be displayed in the design system's user interface.</p>
<p id="p-0137" num="0136">Referring now to <figref idref="DRAWINGS">FIG. 23</figref>, another exemplary method is illustrated for dynamically controlling, via a bidirectional link, parametric and geometric features between a design system and a multiphysics modeling system. At step <b>2356</b>, a list of parameters or parameter definitions as defined by the multiphysics modeling system may be sent from the multiphysics modeling system <b>2320</b> to the design system <b>2310</b> through a bidirectional link, as illustrated and discussed, for example, in the context of <figref idref="DRAWINGS">FIGS. 17-20</figref>. At step <b>2358</b>, these parameters are received by the design system <b>2310</b> and may be identified by the design system as parameters controlling geometric features of the model. The geometric features can then be updated in the design system according to the parameter definitions or values received from the multiphysics modeling system. For example, the value of a radius of a fillet associated with the face of a model may be controlled or altered. At step <b>2360</b>, the design system may update a geometric representation of the model based on the updated geometric features. Furthermore, the design system may also generate a file containing the geometric representation based on the updated or altered geometric features. At steps <b>2361</b> and <b>2362</b>, the generated file in step <b>2360</b> may be automatically received or loaded into the multiphysics modeling system and the representation of the geometry sequence and geometrical domain of the model can be updated. In certain embodiments, selected aspects of the parameter definitions from step <b>2356</b> may be directly sent to steps <b>2361</b> and <b>2362</b>, such as parameter definitions that are unchanged (e.g., parts of the geometry that are not changed) and thus do not necessarily need to be sent to the design system. At step <b>2364</b>, the multiphysics modeling system <b>2320</b> may then solve the multiphysics problem using the updated geometrical domain for the model.</p>
<p id="p-0138" num="0137"><figref idref="DRAWINGS">FIG. 24</figref> illustrates a non-limiting exemplary aspect of the present disclosure for dynamically controlling, via a bidirectional link, parametric and geometric features and associativity operations to set physical properties and boundary conditions in a multiphysics modeling system. The associativity operation at step <b>2463</b> is used to set the physical properties and boundary conditions in the multiphysics modeling system <b>2420</b>. Beginning at step <b>2456</b>, a list of parameters or parameter definitions as defined by the multiphysics modeling system may be sent from the multiphysics modeling system <b>2420</b> to the design system <b>2410</b> through a bidirectional link, as illustrated and discussed, for example, in the context of <figref idref="DRAWINGS">FIGS. 17-20</figref>. At step <b>2458</b>, these parameters are received by the design system <b>2410</b> and may be identified by the design system as parameters controlling geometric features of the model. In certain embodiments, the received parameters may control already existing geometric features. The geometric features can then be updated in the design system according to the parameter definitions or values received from the multiphysics modeling system. At step <b>2460</b>, the design system may update a geometric representation of the model based on the updated geometric features. Furthermore, the design system may also generate a file containing the geometric representation based on the updated or altered geometric features. At steps <b>2461</b> and <b>2462</b>, the generated file in step <b>2460</b> may be automatically received or loaded into the multiphysics modeling system and the representation of the geometry sequence and geometrical domain of the model can be updated. In certain embodiments, selected aspects of the parameter definitions from step <b>2456</b> may be directly sent to steps <b>2461</b> and <b>2462</b>, such as parameter definitions that are unchanged and thus do not necessarily need to be sent to the design system.</p>
<p id="p-0139" num="0138">In certain embodiments, the method of <figref idref="DRAWINGS">FIG. 24</figref> may proceed directly to step <b>2464</b>, where the multiphysics modeling system <b>2420</b> solves the multiphysics problem using the updated geometrical domain for the model. However, the multiphysics modeling system <b>2420</b> may instead proceed from step <b>2462</b> to step <b>2463</b> where the multiphysics modeling system may use associativity to reuse settings for the physical properties and boundary conditions from a previous formation of a multiphysics problem and apply those reused settings for the formation and solution of the multiphysics problem using the updated geometrical domain. The associativity operation at step <b>2463</b> may include mapping geometric entities (e.g., domains, faces, edges, vertices) between the old or previous geometrical domain and the new geometrical domain. The geometrical domain may be defined by a geometry sequence containing geometric objects and geometric operations. For example, a new geometric object (e.g., parent object) may be constructed from a number of child geometric objects (e.g., a number of other geometric objects). For each such parent, there may be a mapping between geometric entities in the parent object and in the child object. In particular, when a new geometric representation is loaded into a multiphysics modeling system through a bidirectional link, the bidirectional link may provide such a mapping between the geometric entities of the old object and the new object. This mapping may be constructed by asking the design system for the mapping between the geometric entities. It is contemplated that during the updating of the geometrical domain, some or all selections of geometric entities may be updated by applying the mapping between geometric entities of the old and the new geometrical domain. This mapping may be used to set physical properties and boundary conditions for the multiphysics problem.</p>
<p id="p-0140" num="0139">A preliminary step in the associativity mapping process may include finding a minimal set of common ancestors of the old and the new finalized geometrical object. A next step may be to compute mappings of geometric entities from the common ancestors to the geometric objects, for example, by composing the mappings for the chain of parents or ancestors relating the objects. The mappings may then be composed to get a mapping from the new finalized geometrical domain to the old geometrical domain. The mapping may then be improved by applying some experience-based techniques that are based on adjacencies between entities of different dimensions. An example of the associativity mapping process may include having an object that is the result of a change that is done on an original object. The resulting object would have the original object as an ancestor such that the resulting object inherits the settings of the original object or ancestor. For example, if the original object were a rectangle, the change could be rounding one of the corners of the rectangle. In the associative mapping process, the multiphysics modeling system can map the exemplary boundary conditions from the original rectangle to the rectangle with the rounded corner. Next, another change can be made to the object, such as rounding another corner of the rectangle. Further applying the associative mapping process, the multiphysics modeling system can then map or track from the first rectangle with one rounded corner up to the ancestor without rounded corners and then down to the rectangle with the two rounded corners. Thus, by this process of associativity mapping, the multiphysics modeling system can track objects up and down a geometry sequence in order to relate physical setting(s) to new object(s) that may reuse portions of the original geometry sequence.</p>
<p id="p-0141" num="0140">It is contemplated that in certain embodiments the method of <figref idref="DRAWINGS">FIG. 24</figref> may be used for a multiphysics problem to optimize a value of a parameter associated with a geometric feature. The value may be optimized using an objective function that accords with certain design criteria for the product being modeled or optimized. For example, the multiphysics modeling system may use an optimization algorithm to search for an optimal value based on the objective function. As the search for the optimal value progresses, the optimization algorithm may need to evaluate an objective function for updated parameter value(s). The updated value(s) can then be sent back to a design system, which may then update a geometric representation. The updated geometric representation may then be used by the multiphysics modeling system to update the geometrical domain. The multiphysics modeling system can then compute a new solution to the multiphysics problem along with new update(s) to the parameter value(s) based on the updated geometrical domain. The multiphysics modeling system can then determine whether to repeat the process based on the initial design criteria. That is, as illustrated between steps <b>2464</b> and <b>2456</b>, the iterative process or loop can be repeated a single time or as many times as is necessary to meet the design criteria and that can be supported by the computing capabilities of the multiphysics modeling system processor(s).</p>
<p id="p-0142" num="0141">Referring now to <figref idref="DRAWINGS">FIG. 25</figref>, an exemplary GUI is illustrated for the multiphysics modeling system that may be displayed for dynamically controlling features between the multiphysics modeling system and a design system via a bidirectional link. The GUI may include parameter names (e.g., Rad1) and their associated values (e.g., R1). The parameter names are shown to be defined in a settings window that may be accessed by selecting a feature or icon from the graphical representation of the bidirectional link in the multiphysics modeling system. The parameter names may refer to names of parameters that control geometric features in the design system. The geometric features in the design system may then be updated according to the parameter values in the multiphysics modeling system by selecting an icon associated with a synchronize feature between the multiphysics and the design systems.</p>
<p id="p-0143" num="0142">It is contemplated that in certain embodiments it may be desirable to define variations for parameters that control, for example, the geometric features of a model. Referring now to <figref idref="DRAWINGS">FIG. 26</figref>, an exemplary embodiment is illustrated for defining variations for parameters that control geometric features in a design system. The variations are defined via a multiphysics modeling system <b>2620</b> that is in communication with the design system <b>2610</b> through a bidirectional link. In certain embodiments, a bidirectional link may be complemented by a bridge connection that allows a multiphysics modeling system to be accessed from a window in a design system GUI, as described elsewhere herein.</p>
<p id="p-0144" num="0143">At step <b>2652</b>, a window for entering parameter list(s) may be generated by the multiphysics modeling system <b>2620</b> and transferred to the design system <b>2610</b> through the bidirectional link. For example, parameters describing geometric features, such as a radius or length, or material properties, such as tensile strength or density, associated with a detail of a model may be generated and transferred through the bidirectional link. At step <b>2654</b>, the parameter lists defined or entered are received and may be displayed in the design system user interface. In certain embodiments, the display of the parameter definitions may occur as a multiphysics modeling system GUI displayed inside the design system's user interface. The lists may be received as instructions, and in certain embodiments, these instructions may be sent via the bridge connection of a bidirectional link from the design system <b>2610</b> to the multiphysics modeling system <b>2620</b>. The list or definitions may be interpreted before being sent to the design system. For example, the multiphysics modeling system may interpret the parameter definition to be associated with geometric features. In certain embodiments, the interpretation of the lists may be completed in the design system. Each list of parameters may represent a variation of parameter values to be used in solving a model. At step <b>2658</b>, the parameters are identified as parameters controlling geometric features. The geometric features can then be updated in the design system according to the values of the parameters in each list. At steps <b>2660</b><i>a</i>, <b>2660</b><i>b</i>, <b>2660</b><i>c</i>, the design system updates geometric representations for each list of parameters for the model variations based on the updated geometric features. Furthermore, the design system may also generate a file for each list of parameters, where each file contains the corresponding geometric representation. At steps <b>2662</b><i>a</i>, <b>2662</b><i>b</i>, <b>2662</b><i>c</i>, each generated file in step <b>2660</b><i>a</i>, <b>2660</b><i>b</i>, <b>2660</b><i>c </i>may be received or loaded into the multiphysics modeling system and representations of the geometrical domains of the model variations can be updated. At step <b>2664</b><i>a</i>, <b>2664</b><i>b</i>, <b>2664</b><i>c</i>, the multiphysics modeling system <b>2620</b> may then solve the multiphysics problems using the updated geometrical domains for the system variations being modeled. At steps <b>2666</b><i>a</i>, <b>2666</b><i>b</i>, <b>2666</b><i>c</i>, the design system receives the results or solutions associated with each of the geometrical domains determined from the files received at steps <b>2662</b><i>a</i>, <b>2662</b><i>b</i>, and <b>2662</b><i>c</i>. The multiphysics modeling system can create one solution set for each variation of the geometrical domain. The solutions can then be displayed in the design system's user interface. On the lower end, it is contemplated that as few as two variations can be modeled and results be determined. On the upper end, while only three geometric representations and domains are illustrated, this is for example purposes only. That is, more than three lists of parameters and geometric representations and lists of parameters can be input into the systems described herein such that a user can determine the desired model variations.</p>
<p id="p-0145" num="0144">It is contemplated that in certain embodiments, the multiphysics modeling systems described herein may use the concept of associativity to set the physical properties and boundary conditions specified for one geometrical domain and reuse these settings for each variations of the geometrical domain. Associativity may be achieved by mapping geometric entities (domains, faces, edges, vertices) between an old or previous geometrical domain and a new or to-be-varied geometrical domain. When the new or varied geometric representation is received or loaded into the multiphysics modeling system through a bidirectional link, the bidirectional link may provide the mapping between the geometric entities in the old object and the new or varied object. In certain embodiments, this mapping may occur by the multiphysics modeling system prompting or requesting the design system for the physical properties and boundary conditions from the old object. When updating the geometrical domain, all selections of geometric entities can be updated by applying the mapping between geometric entities in the old and the new geometrical domains. The mapping may then be used to set physical properties and boundary conditions for a multiphysics problem that is to be solved by the modeling system. The multiphysics modeling system can then solve the problem using each of the updated geometrical domains corresponding to the variations in geometric features. The multiphysics modeling system can then determine one solution dataset for each variation in geometrical domain. The solutions mapped on a corresponding geometrical domain can then be sent by the multiphysics modeling system to the design system, where the solutions are then displayed in the design system's user interface with each variation in geometrical domain.</p>
<p id="p-0146" num="0145">Referring now to <figref idref="DRAWINGS">FIG. 27</figref>, an exemplary GUI is illustrated for defining variations of parameter(s) that control the geometric features in a design system, from a multiphysics modeling system, using a bidirectional link. In certain embodiments, the parameter names in the multiphysics modeling system may also refer to names of parameters that control the geometric features in the design system. The parameter values may be varied according to an interval having certain boundaries, such as a minimum value and a maximum value, plus an increment for values in between. Each parameter value may be contained in a separate parameter list in the multiphysics modeling system that is then sent to the design system for automatic synchronization and generation of the files that contain the design system's geometric representation for each variation.</p>
<p id="p-0147" num="0146">One exemplary aspect of the present disclosure includes a method for accessing settings for forming and solving multiphysics problems in a multiphysics modeling system from a design system user interface. The solution of a multiphysics problem is displayed in the design system user interface.</p>
<p id="p-0148" num="0147">Another exemplary aspect of the present disclosure includes a method for establishing and maintaining a bidirectional link between a CAD system and a multiphysics modeling system for communicating commands involving geometric features.</p>
<p id="p-0149" num="0148">Yet another exemplary aspect of the present disclosure includes a method for establishing a bridge connection between a CAD system and a multiphysics modeling system for communicating commands involving settings in a multiphysics problem.</p>
<p id="p-0150" num="0149">A further exemplary aspect of the present disclosure includes a multiphysics modeling system (e.g., algorithms or instructions configured to be executed on a processor) that is able to run parts of its GUI inside a CAD system user interface using a bridge connection. The settings for a multiphysics problem, such as physical properties and boundary conditions, can be accessed from a representation of the multiphysics problem in the form of a model tree in the CAD system user interface.</p>
<p id="p-0151" num="0150">Another exemplary aspect of the present disclosure includes a method for dynamically controlling the parametric and geometric features in a CAD system from parts of a multiphysics modeling system's GUI that is displayed and/or executed in the CAD system user interface via a bidirectional link and a bridge connection. The parametric and geometric features of the CAD system are expressed in terms of parameters in the parts of the multiphysics modeling system that are accessed in the CAD system's user interface. The CAD system dynamically returns a geometric representation, which is automatically loaded by the multiphysics modeling system and a geometrical domain is changed accordingly. The multiphysics modeling system can be configured to define and solve the multiphysics problem for the geometrical domain. For example, a dynamic-link library (DLL) file may be used, which is an executable file that allows programs to share code and other resources necessary to perform particular tasks.</p>
<p id="p-0152" num="0151">Yet another exemplary aspect of the present disclosure includes a method that defines a variation of a geometrical domain using sets of parameters that control the geometric features in a CAD system from parts of a multiphysics modeling system GUI displayed and/or executed in the CAD system user interface via a bidirectional link and a bridge connection. The CAD system can return a modified geometric representation of the variations, which can be automatically loaded in the multiphysics modeling system. Each geometric representation corresponds to a variation and one geometrical domain is defined for each set of parameters. The multiphysics modeling system can then define and solve a multiphysics problem for each geometrical domain.</p>
<p id="p-0153" num="0152">Another exemplary aspect of the present disclosure includes a method executed on a computer system for establishing a bidirectional link between a CAD system and a multiphysics modeling system. The method includes detecting one or more installed CAD systems, communicating commands between the multiphysics modeling system and the one or more CAD systems, and representing the bidirectional link as a geometric operation in a geometry sequence in the multiphysics modeling system.</p>
<p id="p-0154" num="0153">In further exemplary aspects of the present disclosure, the method for establishing the bidirectional link includes loading dynamic link libraries for each of the detected one or more CAD systems. The dynamic link libraries can be used for communicating the commands. The method may further include using the commands to generate files containing a geometric representation in the CAD system. The method can additional include generating a geometrical domain in the multiphysics modeling system using the files containing the geometric representation and the geometry sequence. The method may further include defining a multiphysics problem using the geometrical domain.</p>
<p id="p-0155" num="0154">In yet further exemplary embodiments of the present disclosure, the method for establishing bidirectional links can also include sending via the bidirectional link the parameters from the multiphysics modeling system describing geometric features in the CAD system. The method can also include sending via the bidirectional link the parameter lists representing variations in the geometric features. The method may further include specifying physical properties and boundary conditions in the multiphysics modeling system for each of the variations using associativity.</p>
<p id="p-0156" num="0155">In certain aspects of the present disclosure a method for controlling settings of a design system is executable on one or more processors associated with the design system. The method includes the acts of receiving via a communications interface identifying data associated with a multiphysics modeling system. Instructions are transmitted via the communication interface or another interface and include model settings related to a multiphysics model at least partially residing in the multiphysics modeling system. Model results are received that are at least partially derived from the transmitted model settings. At least a portion of the received model results are displayed in a graphical user interface associated with the design system.</p>
<p id="p-0157" num="0156">It is further contemplated that the transmitting and receiving acts of the above method are implemented via a bridge connection established between the multiphysics modeling system and the design system. The method may also further comprise at least partially representing the multiphysics model in the graphical user interface via a model tree, and/or generating a window in the graphical user interface associated with the design system. The window may be at least partially linked with the multiphysics modeling system. The method may also include generating a window in the graphical user interface associated with the design system, where the window is configured to display model settings via a model tree and the model setting includes at least a portion of the transmitted instructions. The transmitting instructions by the method can also include transmitting geometric features, with the method further comprising generating a geometric representation of the multiphysics model at least partially based on the transmitted geometric features. The geometric representation may be generated in the design system.</p>
<p id="p-0158" num="0157">In certain aspects of the present disclosure, a method for dynamically controlling a multiphysics modeling system is executable on one or more processors associated with the multiphysics modeling system. The method includes the acts of detecting, via a first interface, input data associate with a design system. Instructions are received via the first interface or a second interface, and the instructions include settings related to a multiphysics model associated with the multiphysics modeling system. A solution is determined for the multiphysics model that is at least partially based on the received instructions. The solution is transmitted to the first interface or the second interface, and the solution is configured for display within a design system user interface associated with the design system.</p>
<p id="p-0159" num="0158">It is further contemplated that the receiving and transmitting acts of the above method can be implemented via a bridge connection between the multiphysics modeling system and the design system. The method may also include that in response to receiving an instruction associated with a geometric representation, a geometric domain is generated in the multiphysics modeling system, or the method may include the act of defining a multiphysics problem using the generated geometrical domain. The method may further include transmitting parameters describing geometric features associated with the generated geometrical domain to the design system, or transmitting parameter lists representing variations in the geometric features. In addition, the method may include determining, via associativity, physical properties and boundary conditions for each variation to a defined multiphysics problem.</p>
<p id="p-0160" num="0159">In certain aspects of the present disclosure, one or more non-transitory computer readable storage media are encoded with instructions that are executable on one or more processors associated with a design system. The instruction may include acts as described in methods described elsewhere herein for other aspects of the present disclosure.</p>
<p id="p-0161" num="0160">It is also contemplated that the instructions may include, the instructions including the acts of: receiving a signal via a communications interface where the signal is associated with a multiphysics modeling system. Instructions may be sent to the communications interface or another interface. The instructions include settings related to a multiphysics model associated with the multiphysics modeling system. Multiphysics model results may be received that are derived from the settings. The multiphysics model results can then be displayed in a design system user interface.</p>
<p id="p-0162" num="0161">In certain aspects of the present disclosure, a method for controlling settings of a design system is executable on one or more processors associated with the design system. The method includes the acts of establishing a communications link between the design system and an associated multiphysics modeling system. Instructions are transmitted via the communications link or another link, and the instructions include settings related to a multiphysics model associated with the multiphysics modeling system. Multiphysics model results derived from the settings are received, and the multiphysics model result is displayed in a design system user interface.</p>
<p id="p-0163" num="0162">In certain aspects of the present disclosure, a method for dynamically controlling a multiphysics modeling system is executable on one or more processors associated with the multiphysics modeling system. The method includes the acts of establishing one or more communications channels between the multiphysics modeling system and an associated design system. Instructions are received via the one or more communications channels, and the instructions include settings related to a multiphysics model associated with the multiphysics modeling system. An outcome for the multiphysics model is determined based on the received instructions. The outcome is transmitted to at least one of the one or more communication channels. The outcome is configured for display in a design system user interface.</p>
<p id="p-0164" num="0163"><figref idref="DRAWINGS">FIGS. 28-38</figref> illustrate various exemplary aspects of a model tree including logical relationships between various exemplary nodes that may be included in a method for forming and solving a multiphysics problem in a multiphysics modeling system. It is contemplated that in certain aspects the model tree is presented in a GUI of a multiphysics modeling system, or in a window associated with the modeling system where the window is display in the GUI of a design system (see, for example, <figref idref="DRAWINGS">FIG. 16</figref> or <b>21</b>), such as a CAD system. A model tree can include selectable nodes, which when selected, display or allow input of different operations or parameters for the multiphysics modeling system. It is also contemplated that the results of different modeling operations can also be represented in nodes of the model tree.</p>
<p id="p-0165" num="0164">It is contemplated that a model tree, such as in the exemplary aspects disclosed herein, can be desirable because it provides a graphical representation(s) of logical relationships and a graphical programming environment for developing multiphysics problems in a multiphysics modeling system. As discussed above and elsewhere herein, a model tree includes nodes and branches. The nodes represent various modeling operations and the branches represent the logical relationship between the operations represented by the nodes.</p>
<p id="p-0166" num="0165">It is contemplated that it may be desirable to represent sequence(s) of modeling operations as nodes in a model tree. The model tree nodes may then be used to generate the constituents of a multiphysics problem that a user desires to model. The constituents of the problem being modeled can include, among other things, a geometrical domain, physical quantities, physical properties (e.g., mechanical, electrical, magnetic, thermal), boundary conditions, mesh, solver configurations, and results or solutions of the multiphysics model. In certain embodiments, a sequence of modeling operations may be structured to include one or more child nodes (e.g., secondary nodes, subnodes) that branch from a parent node (e.g., primary node) representing a constituent of a multiphysics problem. The branches in the model tree can be used to represent the logical relationship between the parent and child nodes. For example, a system to be modeled may include one or more model nodes (e.g., a parent node, primary node) and under each of those model nodes there may be a geometry node, material node(s), physics node(s), and a mesh node (e.g., child nodes, secondary nodes, subnodes). Furthermore, one or more of the child nodes may also have their own grandchild nodes for adding contributions to the physical quantities associated with the associated child node.</p>
<p id="p-0167" num="0166">It may also be desirable in a multiphysics modeling system to generate partial differential equations that describe certain physical quantities in a multiphysics problem. For example, in certain embodiments, a partial differential equation for a multiphysics problem may be generated by adding contributions to a system of partial differential equations rather than changing an existing set of generic system(s) of partial differential equations. Such a process can provide efficiencies to the generation of partial differential equations. In one exemplary aspect, operations may be included as nodes in the model tree for adding the contributions to the partial differential equations. The model tree may include a parent node for physics elements, and the parent node may include a child node or branch for adding contributions to the partial differential equations associated with the problem being modeled. A model tree and node approach can be desirable because it provides clarity to the user of the multiphysics modeling system during the set up and modification of the various constituents of the problem being modeled.</p>
<p id="p-0168" num="0167">In a multiphysics modeling system it may further be desirable to add contributions to a multiphysics problem by attributing the added contributions to a geometrical domain. One of the benefits is that contributions are only defined when needed rather than having to edit a set of generic equations.</p>
<p id="p-0169" num="0168">In a multiphysics modeling system it may further be desirable to have a model tree that has nodes for more than one model (see, e.g., <figref idref="DRAWINGS">FIG. 38</figref>) such that several components and/or processes can be simultaneously modeled together. The individual models can share certain model inputs or parameters when the models are simulated simultaneously in a multiphysics problem.</p>
<p id="p-0170" num="0169">Numerous exemplary and non-limiting aspects of a model tree for a multiphysics modeling system are discussed in more detail below. Furthermore, an exemplary multiphysics modeling system includes the COMSOL&#xae; 4.0 or COMSOL Multiphysics&#xae; simulation software operating on a computer system, as such software is available from COMSOL, Inc. of Burlington, Mass. Additional exemplary aspects of multiphysics modeling systems are described in U.S. patent application Ser. No. 10/042,936, filed on Jan. 9, 2002, now issued as U.S. Pat. No. 7,596,474, U.S. patent application Ser. No. 09/995,222, filed on Nov. 27, 2001, now issued as U.S. Pat. No. 7,519,518, and U.S. patent application Ser. No. 09/675,778, filed on Sep. 29, 2000, now issued as U.S. Pat. No. 7,623,991, each of which are hereby incorporated by reference herein in their entireties.</p>
<p id="p-0171" num="0170">A model tree for a multiphysics modeling system can include a global definitions node for creating or inputting model parameters, variables, and function that have a global scope, and thus, are not specific to a particular model branch. The model tree can further include one or more model nodes, a study node, and a results node. The model node(s) can be used to set up a component(s) or process(es) to be modeled, and the input or set up can be done, for example, as a two-dimensional simplification of the component(s) or process(es). Other exemplary model node(s) can be input or set up with a full three-dimensional description. The study node can be used to set up the simulation(s) of the whole multiphysics model or portions thereof, and can be applied for one or more models as set up using the model node(s). The results node can then be used to further investigate and review the solution received from the study node.</p>
<p id="p-0172" num="0171"><figref idref="DRAWINGS">FIG. 28</figref> illustrates an exemplary aspect of a process for generating a model tree within a multiphysics modeling system. At step <b>2810</b>, a window displayed on a GUI (e.g., a monitor) can be configured to allow the system user to select a space dimension for a model. For example, the user can choose from several selectable options or be allowed to provide inputs for the space dimensions of a model, including dimensions for three-dimensional, two-dimensional, two-dimensional axisymmetric, one-dimensional, one-dimensional axisymmetric, or zero-dimensional model(s). The selection or receipt of space dimension input(s) can then be used to determine and display a physics list at step <b>2820</b>. The choices or options available on a physics list can vary depending on the space dimension input(s) selected in step <b>2810</b>. The physics list that is displayed in step <b>2820</b> can be displayed in a window of the GUI associated with the multiphysics modeling system. Each of the physics choice(s) or option(s) can include descriptions and equations for a variety of engineering or scientific disciplines, such as those described elsewhere herein (e.g., joule heating and thermal expansion, solid mechanics, electrical circuits), which can be modeled in the multiphysics modeling system. It is further contemplated that a user can input or define a customized physics for use in determining the solution to the model. At step <b>2830</b>, a user may then select the desired one or more physics to be applied and simulated for the model(s). The selection of the physics at step <b>2830</b> determines a set of physical quantities associated with the received selection that are available for further manipulation in a multiphysics problem. The selection of the physics at step <b>2830</b> can also implement the selection of predefined studies and/or numerical preferences associated with a given physics. At step <b>2840</b>, the system displays a study list in a window of the GUI. At step <b>2850</b>, the user can select a study from the list displayed in step <b>2840</b>. The various selections available in the study list can include, for example, stationary, time dependent, eigenvalue, eigenfrequency, or some other study type that would be known in the field of the component or process being simulated in the multiphysics modeling system. Finally, at step <b>2860</b>, the multiphysics modeling system can generate a model tree based on the input received from the system user via the model tree.</p>
<p id="p-0173" num="0172">In certain embodiments, the selection of a space dimension in step <b>2810</b> can be used to determine the name(s) and icon(s) of model node(s) available in a model tree. The selection of the space dimension can further determine the content in the setting(s) that may be accessed in the model tree by a system user. In certain embodiments, the selection of physics at step <b>2830</b> can also determine certain default content of a physics branch in a model tree and the available setting in the different nodes. Further, it is also contemplated that the selection of the study at step <b>2850</b> may determine the content of one or several study steps that may be included in the study node.</p>
<p id="p-0174" num="0173">Turning now to <figref idref="DRAWINGS">FIG. 29</figref>, an exemplary aspect of a process is illustrated for forming and solving a system of partial differential equations in a multiphysics modeling system based on operations represented in a model tree. The model tree for the multiphysics model that is generated, such as for the exemplary process illustrated in <figref idref="DRAWINGS">FIG. 28</figref>, can include a model node, a study node, and a results node. The model node may include a plurality of child nodes, such as a geometry node, material node(s), physics node(s), and mesh node(s). The study node can also include child nodes associated with solving the multiphysics problem.</p>
<p id="p-0175" num="0174">At step <b>2910</b>, a geometric representation is generated by the multiphysics modeling system based on operations associated with child nodes to the geometry node. For example, selection of the geometry node may display various child nodes that allow a user to execute additional operations associated with the geometry node and the generation of the geometric representation in step <b>2910</b>. It is also contemplated that the geometry of the model or problem to be solved may be imported into the geometry node, such as from a computer-aided design file or through associations between a computer-aided design system and a multiphysics modeling system, as described elsewhere herein (see, e.g., <figref idref="DRAWINGS">FIGS. 16-27</figref>).</p>
<p id="p-0176" num="0175">At step <b>2920</b>, physical properties are assembled by the multiphysics modeling system for the domains contained in the geometric representation generated in step <b>2910</b>. These physical properties are associated with the materials node(s) in the model tree, which include the material properties for all the physics and all the domains in one or more model node(s). In certain embodiments, the materials node can include specific material(s) (e.g., cast iron, concrete, titanium) that are selectable by a user for the component(s) or process(es) being modeled. Depending on the complexity of the system being modeled, the system may have multiple components or processes each having different material properties that can be assembled in step <b>2920</b>.</p>
<p id="p-0177" num="0176">At step <b>2930</b>, the multiphysics modeling system assembles the physics quantities and boundary conditions based on the representations of operations associated with one or more physics nodes of the multiphysics model. The assembled physics quantities and boundary conditions may be defined in the domains contained in the geometric representation using the physics properties determined from the operations represented in the materials node.</p>
<p id="p-0178" num="0177">At step <b>2940</b>, a mesh is generated by the multiphysics modeling system for the geometric representation and is based on the representations of the operations in the mesh node. For example, a system user may select to execute the mesh operations in a menu displayed by clicking or selecting the mesh node. In one exemplary and non-limiting embodiment, the system user may select to create an unstructured tetrahedral mesh for a component being modeled. Other non-limiting examples of mesh types may include prism, pyramids, swept, boundary layer, hexahedral, surface (e.g. for shells), and edge meshes (e.g., for beams). Other mesh geometries known in the field of the present disclosure are also contemplated.</p>
<p id="p-0179" num="0178">Next, at step <b>2950</b>, the multiphysics modeling system may proceed with the compilation and discretization of equations for all the study steps selected in the study node for each of the model(s). As discuss above, a study node may contain a representation of study steps for a solution to a set of partial differential equations. The study node can include child nodes for compiling the partial differential equations for each study step. Furthermore, the study node may include child nodes representing the discretization and solution sequence for the equations for each study step.</p>
<p id="p-0180" num="0179">A system user may select to execute the operations represented by the child nodes in the study step from a menu (e.g., a drop-down menu) displayed after selecting the study node. The menu may be displayed by clicking on or selecting the study node as it is displayed in a GUI. The execution of the study steps may involve compiling a set of partial differential equations based on the physics quantities and boundary conditions generated by the physics, and based on the analysis selected for the study step, such as whether to implement a transient (e.g., dynamic) or stationary (e.g., static) analysis. The equations are discretized based on the meshed geometric representation. Then, at step <b>2960</b>, discretized equations from step <b>2950</b> may be solved using a solver represented by child node(s) of the study node.</p>
<p id="p-0181" num="0180">In certain embodiments, the multiphysics modeling system may be solving a multiphysics problem including a plurality of model nodes with corresponding geometr(ies), material(s), physics, and mesh child or secondary node(s). Furthermore, each of the plurality of model nodes may be used to generate a corresponding part of the set of partial differential equations in the multiphysics problem. It is contemplated that the complete set of partial differential equations may be compiled, discretized, and solved in steps <b>2950</b> and <b>2960</b>, for different study steps, by solvers represented by child nodes to the study node. It is also contemplated that the compiling, discretization, and solving aspects can be completed automatically, without or substantially without the need for any further user inputs.</p>
<p id="p-0182" num="0181">At step <b>2970</b>, the results of the solution to the multiphysics problem may be generated and displayed or otherwise output for later display or use. For example, the solution to a multiphysics problem may be visualized or prepared for display according to the operations represented by one or more child nodes associated with the results node. Such an operation may include the generation of one or more graphs of a set of results, which may be generated by clicking on or selecting a results node that implemented a predetermined or customized set of operations for preparing the display of the results.</p>
<p id="p-0183" num="0182">Turning now to <figref idref="DRAWINGS">FIG. 30</figref>, an exemplary aspect of a model tree <b>3000</b> is illustrated for forming and solving multiphysics problems in a multiphysics modeling system. In certain embodiments, the model tree <b>3000</b>, or variations thereof based on different modeling features, is presented on a GUI associated with a processor configured to execute the multiphysics modeling system. It is also contemplated that model tree <b>3000</b> may be presented in a window on a GUI for a design system, where the window is associated with the multiphysics modeling system operating on the same or a different processor implementing routines associated with the design system.</p>
<p id="p-0184" num="0183">Model tree <b>3000</b> may include different configurations and different features represented as logically arranged nodes associated with simulating a multiphysics problem. For example, a primary node <b>3010</b> (e.g., thermal_actuator_tem.mph) may represent the multiphysics problem for which a solution and results are desired. Node <b>3010</b> is exemplified to include four child nodes including global definitions node <b>3020</b> (e.g., Global Definitions), model node <b>3030</b> (e.g., Thermal Actuator), study node <b>3060</b> (e.g., Study 1), and results node <b>3070</b> (e.g., Results). Each of nodes <b>3020</b>, <b>3030</b>, <b>3060</b>, <b>3070</b> may have their own additional child nodes, which in turn may also have their own respective child nodes, such that a branch of various logically associated nodes are built from the primary node <b>3010</b> for model tree <b>3000</b>.</p>
<p id="p-0185" num="0184">The exemplary child node (e.g., Parameters) branching from the global definitions node <b>3020</b> may represent operations that generate parameters, variables, and/or functions that apply to the entire multiphysics problem being solved, and thus, operations that are not generally attributable to specific geometric entities, domains, boundaries, edges, or vertices. The operations represented by the child nodes (e.g., Parameters) can be considered global to multiphysics problem represented in model tree <b>3000</b>. For example, a parameter from the child node illustrated for node <b>3020</b> may be used to define a general physical constant and may be utilized in a plurality or even all the nodes in a model tree.</p>
<p id="p-0186" num="0185">The exemplary child nodes (e.g., Definitions, Geometry <b>1</b>, Materials, Joule Heating and Thermal Expansion, Mesh <b>1</b>) branching from the model node <b>3030</b> (e.g., Thermal Actuator) may represent operations that generate a geometrical domain node (e.g., Geometry <b>1</b>), physical properties node <b>3040</b> (e.g., Materials), physics node <b>3050</b> (e.g., Joule Heating and Thermal Expansion), and/or a mesh node (e.g., Mesh <b>1</b>). In certain embodiments, the exemplary model node <b>3030</b> may generate partial differential equations for the mesh and/or the geometrical domain, or partial differential equations associated with the geometrical domain. The partial differential equations can be formed using the physical properties node <b>3040</b> and/or physics node <b>3050</b>, which may include additional child nodes for physical quantities and boundary conditions. In the exemplary aspect illustrated in <figref idref="DRAWINGS">FIG. 30</figref>, the physics node <b>3050</b> is described as Joule Heating and Thermal Expansion, though it would be understood that other engineering and scientific phenomena could be simulated, as well (e.g., acoustics, chemical reactions, diffusion, electromagnetism, fluid dynamics, geophysics, heat transfer, porous media flow, quantum mechanics, structural mechanics, wave propagation, microelectromechanical systems, semiconductor systems, plasmas).</p>
<p id="p-0187" num="0186">Operations for solving the partial differential equations, such as those associated with the model node <b>3030</b>, can be selected from child nodes branching from the study node <b>3060</b> (e.g., Study 1). The study node <b>3060</b> can include one or more study steps. For example, in a first study step (e.g., Step 1: Stationary 1), partial differential equations may be solved at stationary or static conditions while a second step may follow where these partial differential equations may be solved for time-dependent or dynamic conditions. The study node <b>3060</b> may therefore contain operations that add or remove terms in partial differential equations, according to how each step may be defined. It is also contemplated that a study node may include child nodes representing operations for solving partial differential equations using a finite element solver (e.g., Solver Configurations).</p>
<p id="p-0188" num="0187">A branch from the primary node for a multiphysics problem can also include a results node <b>3070</b>, which may further include additional child nodes representing operations for generating simulation results for solution(s) to the multiphysics problem that are transformable to a predetermined or customized format presentable to the user of a multiphysics modeling system. For example, the child nodes may include results presented in table formats, as derived values, as various multi-dimensional plots, or as reports including combinations of result formats such as graphics, numbers, and text.</p>
<p id="p-0189" num="0188">Referring now to <figref idref="DRAWINGS">FIG. 31</figref>, an exemplary aspect of a child node (e.g., Joule Heating and Thermal Expansion) is illustrated that branches from an exemplary model node of a model tree. The physics node <b>3150</b> includes operations for generating physical quantities <b>3158</b> and boundary conditions <b>3156</b> for a multiphysics problem, and can be associated with operations for modeling various physics phenomena, such as those described elsewhere herein. Settings for the various illustrated nodes can be accessed and modified by selecting the desired node. For example, the first three child nodes <b>3152</b> of the physics node <b>3150</b> may represent a sequence of modeling operations that generates default physical quantities for structural displacements, electric potential, and temperature in a geometrical domain. The physical quantities are generated by operations that define thermal expansion (e.g., Thermal Linear Elastic <b>1</b> node), conduction of electric current and transport of heat (e.g., Joule Heating Model 1 node), and resistive heating caused by the electric current (e.g., Electromagnetic Heat Source 1 node). The operations generate the default partial differential equations shown for the respective nodes in a selected geometrical domain. The partial differential equations illustrated in <figref idref="DRAWINGS">FIG. 31</figref> provide exemplary parameters that may be associated with the system being modeled, such as density, &#x3c1;, a displacement vector, u, and a stress tensor, &#x3c3;. The exemplary components of the stress tensor, &#x3c3;, are functions of the derivatives of the displacement vector. Other exemplary material parameters can include specific heat capacity, C<sub>p</sub>, temperature, T, thermal conductivity, k, electric potential, &#x3c6;, and electrical conductivity, &#x3ba;. These physical quantities may be set to an initial value, as illustrated in the exemplary mathematical relationships of <figref idref="DRAWINGS">FIG. 31</figref>. For different model(s), different parameter(s) may be used depending on the engineering or physics phenomenon(a) being simulated&#x2014;the illustrated physical properties are provided by way of example only, and thus, are non-limiting.</p>
<p id="p-0190" num="0189">The fourth, fifth, and sixth child nodes <b>3156</b> of the physics node <b>3150</b> may represent a sequence of modeling operations that generate the default boundary conditions for the multiphysics problem. For example, default boundary conditions may be generated by the operations that define the gradient in the electric potential by setting electric current to zero in the &#x201c;Electrical Insulation 1&#x201d; node, the gradient of the temperature by setting the heat flux to zero in the &#x201c;Thermal Insulation 1&#x201d; node, and the structural constraints by setting no constraints on the structural displacement at the boundaries in the &#x201c;Free 1&#x201d; node. The modeling operations can include generating default equations for the physical quantities interactions at the selected boundaries.</p>
<p id="p-0191" num="0190">The last exemplary child node <b>3158</b> (e.g., Initial Values 1) represents an operation that sets the initial values for all physics quantities, which in the exemplary illustration of <figref idref="DRAWINGS">FIG. 31</figref> includes temperature, electric potential, and structural displacements. In certain embodiments, the operation may be required as an initial condition for a time-dependent simulation or as an initial guess in a stationary nonlinear simulation. The operation can generate equations for the physical quantities at an initial stage in a selected geometrical domain and may be required by methods that solve partial differential equations.</p>
<p id="p-0192" num="0191">Referring now to <figref idref="DRAWINGS">FIG. 32</figref>, an exemplary aspect of a window <b>3252</b> is illustrated for a model node of a model tree for entering settings that define model operations for a multiphysics problem. More specifically, an exemplary window is illustrated for entering accessed settings for the exemplary Thermal Linear Elastic child node (see, e.g., element <b>3152</b> in <figref idref="DRAWINGS">FIG. 31</figref>). Again, the illustration is non-limiting and demonstrates the flexibility of the model tree for accessing and setting features of the multiphysics modeling system. <figref idref="DRAWINGS">FIG. 32</figref> includes an exemplary settings window <b>3252</b> that is associated with physical quantities for structural displacements that may occur in the modeling of thermal expansion in a selected geometrical domain of a multiphysics problem. In certain embodiments, default physical properties, such as material properties, may be linked to a materials node (see, e.g., material node <b>3040</b> in <figref idref="DRAWINGS">FIG. 30</figref>) or a user may manually enter the physical properties. For example, settings window <b>3252</b> includes different fields for parameters that can be applicable for generating a contribution to a set of partial differential equations from the Thermal Linear Elastic <b>1</b> child node. It is contemplated that the settings window <b>3252</b> may define material properties that are then used in generating a node contribution to the partial differential equations for a selected geometrical domain in a multiphysics problem. In the example of <figref idref="DRAWINGS">FIG. 32</figref>, the material properties may include Young's modulus, E, Poisson's ratio, &#x3bd;, density, &#x3c1;, and/or the coefficient of thermal expansion, &#x3b1;, of a material. Applying the exemplary material properties, a node contribution can then be generated as a function of the physical quantities, which for the exemplary embodiment, may be expressed as displacement vector, u. Again, as discussed elsewhere, for different models, different parameters may be used depending on the physics phenomena being simulated&#x2014;the illustrated material or physical properties are provided by way of example only, and thus, are non-limiting.</p>
<p id="p-0193" num="0192">In certain embodiments, it is also contemplated that the setting window also displays informational aspects about certain operations in the model tree. For example, information about the author or the source of the operation represented by a particular node in the model tree may be presented or be selectable in the setting window. The setting window may also present information about the date and time (e.g., entry of certain information, running a certain model) or comments regarding the operations about the selected node.</p>
<p id="p-0194" num="0193">Referring now to <figref idref="DRAWINGS">FIG. 33</figref>, an exemplary aspect of a physics node <b>3352</b> associated with a model node is illustrated. The exemplary physics node <b>3352</b> has additional nodes <b>3353</b>, <b>3354</b> for describing selected physical quantities for a multiphysics problem. For example, a stress-strain relationship, similar to the one illustrated in <figref idref="DRAWINGS">FIG. 32</figref>, may be altered through the addition of stress tensor, &#x3c3;. The node denoted &#x201c;Initial Stress and Strain <b>1</b>&#x201d; may change an operation that sets the contribution of the &#x201c;Thermal Linear Elastic <b>1</b>&#x201d;, by changing the stress-strain relationship in a selected geometrical domain. More generally, the sequence of operations can be altered in a multiphysics problem by adding a node further describing certain physical quantities. In certain embodiments, the operation at node <b>3354</b> may also change the equations of the physical quantities, such as for the structural displacements, while keeping other equations unchanged. A sequence of operations may be updated by a user by selection of a node, such as node <b>3354</b>, which may then generate corresponding change(s) in partial differential equation (s) that solve the multiphysics problem. Again, as discussed elsewhere, for different models, different parameters may be used depending on the physics phenomena being simulated&#x2014;the illustrated nodes are provided by way of example only, and thus, are non-limiting.</p>
<p id="p-0195" num="0194">Referring now to <figref idref="DRAWINGS">FIG. 34</figref>, another exemplary aspect of a physics node <b>3450</b> in a model tree is illustrated. In this aspect, an operation representing contributions to physical quantities is illustrated. For example, child node <b>3453</b> (e.g., Heat Source 1) may represent an operation that adds a contribution to a partial differential equation for a physical quantity, such as temperature, in a selected geometrical domain. As <figref idref="DRAWINGS">FIG. 34</figref> illustrates, the exemplary partial differential equation also includes the temperature contributions represented by the equations from Joule Heating Model 1 and Electromagnetic Heat Source 1. In certain embodiments, child nodes, such as node <b>3453</b>, may be added by a user to generate contributions for all or some of the physical quantities, such as structural displacements and electric potential, as illustrated in the exemplary physics node <b>3450</b> (e.g., Joule Heating and Thermal Expansion). Again, as discussed elsewhere, for different models, different parameters may be used depending on the physics phenomena being simulated&#x2014;the illustrated nodes are provided by way of example only, and thus, are non-limiting.</p>
<p id="p-0196" num="0195">Referring now to <figref idref="DRAWINGS">FIG. 35</figref>, an exemplary aspect of a window for adding contributions to the physical quantities associated with a physics node of a model tree is illustrated. A menu box <b>3555</b> can be displayed next to a physics node <b>3550</b> (e.g., Joule Heating and Thermal Expansion) in response to a system user providing a predetermined input, such as a right-click via a mouse. The menu box <b>3555</b> may contain menu items that allow contributions to be added to equations in geometric entities, such as domains, boundaries, edges, and points. In the exemplary aspect, a Heat Source node <b>3553</b> contribution may be associated with a heat transfer option in the menu box <b>3555</b>. For example, by selecting Heat Source node <b>3553</b>, a contribution may be added to a partial differential equation for temperature in a selected geometrical domain, as illustrated, for example, in <figref idref="DRAWINGS">FIG. 34</figref>. It is contemplated that other selected contributions may be added to other geometric entities depending on the selections made by the multiphysics modeling user. The addition of contributions may also be predetermined as part of a sequence of operations indirectly associated with other model selections.</p>
<p id="p-0197" num="0196">It is contemplated that in certain aspects of the present disclosure it may be desirable for a multiphysics modeling system to label or otherwise identify nodes of a model tree that represent certain operations that generate contributions to equations associated with a geometrical domain. For example, selecting a node that represents a load may label or highlight other nodes in the model tree that coexist with that load on any of the load's geometric selections (e.g., domain, boundary, edge, point). In this example, the label may include an arrow or some other identifying aspect for a non-exclusive node. If a node represents contributions that cannot coexist with other nodes on a geometric selection, it is understood to be an exclusive node. In certain aspects where nodes overlap, a last node in a sequence may overwrite the previous node on the geometric selections.</p>
<p id="p-0198" num="0197">Turning now to <figref idref="DRAWINGS">FIG. 36</figref>, an exemplary model tree is illustrated having a plurality of model nodes that include the identification of exclusive operation(s) associated with a selected node. The exemplary multiphysics model is based on simulating the structural aspects of a structure, such as an actuator, but can be readily applied to any of numerous physics phenomena. Exemplary Model 1 node includes a physics node <b>3610</b> that includes physics quantities and boundary conditions associated with solid mechanics aspects of the virtual structure. In certain exemplary modeling scenarios, it may be desirable to constrain the displacement of a particular structure in one or more directions at a boundary of the solid mechanics physics. To simulate this scenario, the physics quantities and boundaries of the physics node <b>3610</b> may include, for example, a fixed boundary condition node <b>3620</b> (e.g., Fixed Constraint 1). In certain embodiments, selection of node <b>3620</b> may reveal various exclusive associations or relationships with other physics quantity and/or boundary child nodes of the parent physics node <b>3610</b>. For example, selection of the fixed boundary condition node <b>3620</b> can reveal a settings window <b>3630</b> that includes exemplary settings for fixed constraints associated with the physics node <b>3610</b>. Selection of node <b>3620</b> may also reveal that the fixed boundary condition associated with node <b>3620</b> overrides certain functions associated with the Prescribed Displacement 1 node <b>3640</b>.</p>
<p id="p-0199" num="0198">To highlight or identify that node <b>3640</b> is overridden by another operation along at least one of its boundaries, a first graphical marker <b>3645</b>, such as a solid downward facing arrow, may be situated next to the graphical display of node <b>3640</b>. The settings window <b>3630</b> for node <b>3620</b> may also display information about the node and the geometric entity that the node <b>3620</b> may be acting on. For example, node <b>3620</b> is illustrated and described in the settings window <b>3630</b> as overriding the Prescribed Displacement 1 node <b>3640</b> along boundary number <b>35</b>.</p>
<p id="p-0200" num="0199">Selection of fixed boundary condition node <b>3620</b> can also reveal an association or relationship with another node, such as Prescribed Acceleration 1 node <b>3650</b>. The association can be highlighted by a second graphical marker <b>3655</b>, such as a solid upward facing arrow situated next to the graphical display of node <b>3650</b>. In certain embodiments, the first and second graphical markers <b>3645</b>, <b>3655</b> may be dynamically displayed in response to a user selecting a particular node, such as node <b>3620</b>. While both nodes <b>3640</b> and <b>3650</b> are both associated with node <b>3620</b>, the association between nodes can be different. For example, the Prescribed Acceleration 1 node <b>3650</b> overrides the fixed boundary condition node <b>3620</b>. This override may be graphically illustrated to the system user by display of an upwardly pointing arrow for second marker <b>3655</b> when node <b>3620</b> is selected. Furthermore, the settings window <b>3630</b> that is displayed upon selection of node <b>3620</b> can also display information about the geometric entity that overrides node <b>3620</b>. For example, node <b>3620</b> is illustrated and described in the settings window <b>3630</b> as being overridden by the Prescribed Acceleration 1 node <b>3650</b> along boundary number <b>32</b>.</p>
<p id="p-0201" num="0200">It is contemplated that in certain aspects of the present disclosure, setting up a model, where certain nodes override other nodes for certain domains, can be done graphically based on an ordering of the nodes. Changes to how the nodes override one another (e.g., which node overrides which) can be made by, for example, reordering the nodes. Take for example <figref idref="DRAWINGS">FIG. 36</figref>, which illustrates node <b>3640</b> being overridden by node <b>3620</b> based on node <b>3620</b> being later on the list of child nodes below physics node <b>3610</b>. Similarly, node <b>3650</b> overrides node <b>3620</b> based on node <b>3650</b> being later or the lowest on the list of child nodes below physics node <b>3610</b>. By allowing the reordering of nodes, the model can be adjusted in how one node may or may not override another node.</p>
<p id="p-0202" num="0201">Based on the exemplary aspects described and illustrated for <figref idref="DRAWINGS">FIG. 36</figref>, it is contemplated that a model tree can include one or more exclusive nodes that override other nodes or operations for one or more domains of a multiphysics problem. For contributions added to an equation that are considered exclusive, the contributions cannot coexist on a geometric domain or boundary with other generated contributions. It is contemplated that it may be desirable for exclusive contributions in the relationships or associations between the various nodes to be graphically presented to a system user. Then, by selecting a particular node (e.g., node <b>3620</b>), a system user is quickly presented with information in a model tree window <b>3605</b> of other nodes (e.g., nodes <b>3640</b> and <b>3650</b>) that are overridden by, or that override, the selected node (e.g., node <b>3620</b>). These relationships can be illustrated using graphical highlights, markers, or other identifiers. Furthermore, it is contemplated that selection of nodes can also, or alternatively, include the presentation of a setting windows (e.g., setting window <b>3630</b>) that identifies domains (e.g., geometric entities <b>32</b> and <b>35</b>) to which the exclusive nature of the various relationships or associations between nodes and/or domains may apply.</p>
<p id="p-0203" num="0202">Referring now to <figref idref="DRAWINGS">FIG. 37</figref>, an exemplary model tree is illustrated having a plurality of model nodes that include the identification of non-exclusive operation(s) associated with a selected node. Similar to <figref idref="DRAWINGS">FIG. 36</figref>, an exemplary multiphysics model based on simulating the structural aspects of a structure, such as an actuator, is illustrated, but the application can be readily applied to any of numerous physics phenomena. Exemplary Model 1 node includes a physics node <b>3710</b> that includes physics quantities and boundary conditions associated with solid mechanics aspects for the virtual structure. In the illustrated, non-limiting example, a load can be applied to a boundary, such as the boundary represented by Boundary Load 2 node <b>3720</b>. Selection of node <b>3720</b> may reveal various non-exclusive relationships or associations between node <b>3720</b> and other nodes, such as Boundary Load 1 node <b>3740</b> and Boundary Load 3 node <b>3750</b>. The non-exclusive relationship may be that Boundary Load 2 contributes a load, together with Boundary Load 1 and Boundary Load 3, on a particular boundary of the structure being simulated. To highlight the non-exclusive relationship or association between node <b>3720</b> and node <b>3740</b>, a first graphical marker <b>3745</b>, such as an outline of a downward facing arrow, may be situated next to the graphical display of node <b>3740</b> to symbolize that node <b>3740</b> contributes together with node <b>3720</b> on at least one of the boundaries of the model. The arrow can be directed downward to identify that node <b>3720</b> is below node <b>3740</b> and that in the sequence of operations, the operation for node <b>3720</b> is after the operation for node <b>3740</b>. To highlight the non-exclusive relationship or association between node <b>3720</b> and node <b>3750</b>, a second graphical marker <b>3755</b>, such as an outline of an upward facing arrow, may be situated next to the graphical display of node <b>3750</b> to symbolize that node <b>3750</b> contributes together with node <b>3720</b> on at least one of the boundaries of the model. The arrow can be directed upward to identify that node <b>3720</b> is above node <b>3750</b> and that in the sequence of operations, the operation for node <b>3720</b> is before the operation for node <b>3750</b>. The settings window <b>3730</b> for selected node <b>3720</b> may also display information about the node(s) and the related non-exclusive operation(s). For example, node <b>3720</b> is illustrated and described in the settings window <b>3730</b> as contributing with Boundary Load 1 node <b>3740</b> along boundary number <b>111</b> and as contributing with Boundary Load 3 node <b>3750</b> along boundary number <b>98</b>.</p>
<p id="p-0204" num="0203">Based on the exemplary aspects described and illustrated for <figref idref="DRAWINGS">FIG. 37</figref>, it is contemplated that a model tree can include one or more non-exclusive nodes or operations that contribute to the same domain or geometric entity of the multiphysics model. It is contemplated that it may be desirable for the non-exclusive contributions in the relationships or associations between the various nodes to be graphically presented to a system user via a GUI. By selecting a particular node (e.g., node <b>3720</b>), a system user can be quickly presented with information in the model tree window <b>3705</b> of other nodes (e.g., nodes <b>3740</b> and <b>3750</b>) that having a contributory affect on the same model domain as the selected node (e.g., node <b>3720</b>). These relationships can be illustrated using graphical highlights, markers, or other identifiers. Furthermore, it is contemplated that selection of nodes can also, or alternatively, include the presentation of a setting windows (e.g., setting window <b>3730</b>) that identifies domains (e.g., geometric entities <b>98</b> and <b>111</b>) to which the contributory nature of the various relationships or associations between nodes may apply.</p>
<p id="p-0205" num="0204">It is contemplated that in certain aspects of the present disclosure, the exemplary model tree window <b>3705</b> illustrated in <figref idref="DRAWINGS">FIG. 37</figref> may include situations in which a node or operation cannot be changed or altered. It is also contemplated that a system user may be able to select a particular node or operation and have information associated with the selection displayed, such as in the settings window <b>3730</b>. Similarly, the model tree window <b>3705</b> can allow a system user the ability to review the settings of a multiphysics problem by selecting one geometrical entity at a time, which may allow information about all the nodes or operations that contribute to the equations associated with the selected geometric entity to be obtained. In one non-limiting example, a user may select Boundary Load 2 node <b>3720</b>, and then select Boundary <b>98</b> from the boundary selection list in settings window <b>3730</b>. Upon selecting Boundary <b>98</b>, nodes <b>3720</b> and <b>3740</b> may be highlighted or otherwise identified as contributing to the boundary conditions on Boundary <b>98</b>. In certain embodiments, a window (not shown) may also be displayed graphically displaying boundary <b>98</b> of multiphysics problem with the boundary being highlighted.</p>
<p id="p-0206" num="0205">Referring now to <figref idref="DRAWINGS">FIG. 38</figref>, an exemplary aspect of a model tree is illustrated comprising a plurality of model nodes <b>3830</b>, <b>3880</b> for which the settings of each of the model nodes can be accessed to allow the formation and solving of a multiphysics problem on a multiphysics modeling system. The model nodes <b>3830</b>, <b>3880</b> may generally represent components of a system being modeled in which the components are simulated simultaneously. In certain embodiments, each of the plurality of models may share some constituents of the multiphysics problem, such as the ones represented by a study node <b>3860</b> and a results node <b>3870</b>. For example, a first model node <b>3830</b> (e.g., Thermal Actuator) may represent a thermal actuator activated by an electric current. The electric current may heat a part of the actuator causing thermal expansion, which then yields a desired structural displacement. The electric current may be generated by an amplifier that is also being simulated in the multiphysics problem. The amplifier may be represented in a model tree as a second model node <b>3880</b> (e.g., Amplifier). The physical connection between the thermal actuator and the amplifier may be described by an equation that sets a current output from the model of the amplifier equal to the current that drives the thermal actuator. It may also be represented by using a coupling operator, such as an operator that determines the total value of the current at a boundary by integrating the current density over this boundary. The value of this integral, representing the total current, may then be defined in an equation to be equal to the current output from the amplifier. It is contemplated that in certain embodiments more than two model nodes may be simulated by the multiphysics modeling system. As described multiple times elsewhere herein, these exemplary embodiment provide an example only of the model tree features in the multiphysics modeling system and are therefore non-limiting.</p>
<p id="p-0207" num="0206">An exemplary aspect of the present disclosure includes a method for accessing settings for forming and solving multiphysics problems in a multiphysics modeling system using a model tree. Nodes in the model tree may be used to represent the constituents of a multiphysics problem, such as the geometrical domain, the physical quantities, the physical properties, the boundary conditions, the mesh, the solver, and the simulation results.</p>
<p id="p-0208" num="0207">In another exemplary aspect of the present disclosure, the model tree may include one or more parent nodes having one or more child nodes. The nodes may represent constituents of the problem to be solved by the modeling. In addition, nodes may further represent sequences of modeling operations that generate constituents when the sequences are performed. Branches in the model tree may represent logical relations between operations represented by parent nodes and child nodes.</p>
<p id="p-0209" num="0208">In another aspect exemplary aspect of the present disclosure, a method for generating a model tree is based on input(s) entered by a user in a GUI associated with the multiphysics modeling system.</p>
<p id="p-0210" num="0209">In yet another exemplary aspect of the present disclosure, a method alters operations in a sequence of modeling operations while keeping other operations unchanged. The sequence of modeling operations may then be performed in order to update a multiphysics problem to reflect the altered operations.</p>
<p id="p-0211" num="0210">In a further exemplary aspect of the present disclosure, a physics node in a model tree may represent a physical quantity and child nodes branching from the physics node may represent operations that add contributions to the physical quantities. The contributions may describe physical properties and boundary conditions.</p>
<p id="p-0212" num="0211">In another exemplary aspect of the present disclosure, the contributions may be added to a multiphysics problem when they are attributed to a geometrical domain.</p>
<p id="p-0213" num="0212">In yet a further exemplary aspect of the present disclosure, method includes several models represented by model nodes in a model tree. The model nodes may represent components that are connected in a system where the several models may be simulated simultaneously. The different models represented in the model tree may share constituents of a multiphysics problem, such as a solver and the simulation results.</p>
<p id="p-0214" num="0213">As discussed elsewhere herein, the windows, menus, engineering and scientific phenomena, equations, parameters, and nodes illustrated in <figref idref="DRAWINGS">FIGS. 4</figref>, <b>5</b>, <b>7</b>, <b>10</b>, <b>12</b>, and <b>28</b>-<b>38</b> are non-limiting examples of model trees contemplated by the present disclosure. It would also be understood that processes and/or other physics phenomena having different exemplary windows, menus, equations, parameters, and nodes, are contemplated by the present disclosure, as well. The windows, menus, equations, parameters, and nodes depend on the processes, components, and/or physics phenomena being modeled. Therefore, it would be understood that <figref idref="DRAWINGS">FIGS. 4</figref>, <b>5</b>, <b>7</b>, <b>10</b>, <b>12</b>, and <b>28</b>-<b>38</b> provide non-limiting exemplary relationships for a model tree structure contemplated for a multiphysics modeling system that is capable of simultaneous modeling one or more components and/or processes having different properties.</p>
<p id="p-0215" num="0214">According to one exemplary aspect of the present disclosure, a method for controlling settings of a design system is executable on one or more processors associated with the design system. The method includes the acts of detecting via a communications interface a multiphysics modeling system. Instructions are transmitted via the communication interface or another interface. The instructions include model settings related to a multiphysics model at least partially residing in the multiphysics modeling system. Model results are received that are at least partially derived from the transmitted model settings. At least a portion of the received model results are displayed in a graphical user interface associated with the design system.</p>
<p id="p-0216" num="0215">It is contemplated that in certain aspects, the transmitting and receiving acts are implemented via a bridge connection established between the multiphysics modeling system and the design system. In certain aspects, the multiphysics model is at least partially represented in the graphical user interface via a model tree.</p>
<p id="p-0217" num="0216">It is further contemplated that in certain aspects, a window is generated in the graphical user interface associated with the design system. The window may be least partially linked with the multiphysics modeling system. A window may also be generated in the graphical user interface associated with the design system. The window may be configured to display model settings via a model tree. The model setting can include at least a portion of the transmitted instructions.</p>
<p id="p-0218" num="0217">It is also contemplated that in certain aspects, transmitting instructions can include transmitting geometric features. A geometric representation of the multiphysics model may be generated that is at least partially based on the transmitted geometric features. The geometric representation may be generated in the design system.</p>
<p id="p-0219" num="0218">According to another exemplary aspect of the present disclosure, a method executable on one or more processors associated with a multiphysics modeling system dynamically controls the multiphysics modeling system. The method includes the acts of detecting a design system via a first interface. Instructions are received via one or more interfaces. The instructions include settings related to a multiphysics model associated with the multiphysics modeling system. A solution is determined for the multiphysics model at least partially based on the received instructions. The solution is transmitted to at least one of the one or more interfaces. The solution is configured for display within a design system user interface that is associated with the design system.</p>
<p id="p-0220" num="0219">It is contemplated that in certain aspects, the receiving and transmitting acts are implemented via a bridge connection between the multiphysics modeling system and the design system.</p>
<p id="p-0221" num="0220">It is further contemplated that in certain aspects, in response to receiving an instruction associated with a geometric representation, a geometric domain is generated in the multiphysics modeling system. In certain aspects, the act of defining a multiphysics problem may include using the generated geometrical domain.</p>
<p id="p-0222" num="0221">It is also contemplated that in certain aspects, parameters are transmitted describing geometric features associated with the generated geometrical domain to the design system. In certain aspects, parameter lists are transmitted representing variations in the geometric features.</p>
<p id="p-0223" num="0222">It is additionally contemplated that in certain aspects, physical properties and boundary conditions are determined, via associativity, for each variation to a defined multiphysics problem.</p>
<p id="p-0224" num="0223">According to another exemplary aspect of the present disclosure, one or more non-transitory computer readable storage media are encoded with instructions executable on one or more processors associated with a design system. The instructions include the acts of receiving a signal via a communications interface. The signal is associated with a multiphysics modeling system. Instructions are sent to the communications interface or another interface. The instructions include settings related to a multiphysics model associated with the multiphysics modeling system. Multiphysics model results derived from the settings are received. The multiphysics model result are displayed in a design system user interface.</p>
<p id="p-0225" num="0224">According to a further exemplary aspect of the present disclosure, a method for controlling settings of a design system is executable on one or more processors associated with the design system. The method includes the acts of establishing a communications link between the design system and an associated multiphysics modeling system. Instructions are transmitted via the communications link or another link. The instructions include settings related to a multiphysics model associated with the multiphysics modeling system. Multiphysics model results derived from the settings are received. The multiphysics model results are displayed in a design system user interface.</p>
<p id="p-0226" num="0225">It is contemplated that in certain aspects, the transmitting and receiving acts are executed via a bridge connection.</p>
<p id="p-0227" num="0226">It is further contemplated that in certain aspects, the multiphysics model in the design system user interface is represented using a model tree. In certain aspects, a window is generated in the design system user interface that is related to the multiphysics modeling system. The window is associated with the settings and the model tree includes at least a portion of the instructions for the settings.</p>
<p id="p-0228" num="0227">It is also contemplated that in certain aspects, transmitting instructions includes sending geometric features. In certain aspects, a geometric representation is generated in the design system.</p>
<p id="p-0229" num="0228">According to another exemplary aspect of the present disclosure, a method for dynamically controlling a multiphysics modeling system is executable on one or more processors associated with the multiphysics modeling system. The method includes the acts of establishing one or more communications channels between the multiphysics modeling system and an associated design system. Instructions are received via the one or more communications channels. The instructions include settings related to a multiphysics model associated with the multiphysics modeling system. An outcome is determined for the multiphysics model based on the received instructions. The outcome is sent to at least one of the one or more communication channels. The outcome is configured for display in a design system user interface.</p>
<p id="p-0230" num="0229">According to one exemplary aspect of the present disclosure, a method executable on one or more processors associated with a multiphysics modeling system generates a model tree structure for the multiphysics modeling system. The multiphysics modeling system is configured to model combined systems having physical quantities represented in terms of partial differential equations. The method includes the acts of receiving an input associated with a selection of space dimensions for at least one of the combined systems. A plurality of selectable physics options for association with at least one of the combined systems are transmitted for display on a user interface. An input associated with a selection of at least one of the plurality of selectable physics options is received. One or more selectable study options for association with the combined systems are transmitted for display on the user interface. An input associated with a selection of at least one of the one or more selectable study options is received. In response to receiving the input associated with the selection at least one of the one or more selectable study options, a model tree structure is generated. The model tree structure includes a plurality of selectable nodes and subnodes. The selectable nodes and subnodes include fields for storing physical quantities and operations for modeling the combined systems.</p>
<p id="p-0231" num="0230">It is contemplated that in certain aspects, the selectable nodes and subnodes are configured for display on a user interface associated with the multiphysics modeling system. In certain aspects, the model tree structure includes exclusive and non-exclusive subnodes. The exclusive and non-exclusive subnodes may be labeled with symbols distinguishing the exclusive subnodes from the non-exclusive subnodes and distinguishing the exclusive and non-exclusive subnodes from other subnodes in the model tree.</p>
<p id="p-0232" num="0231">It is also contemplated that in certain aspects, in response to receiving an input associated with the selection of a node or subnode, an identifying setting of a geometric entity associated with the selected node or subnode is displayed. Information about exclusive or non-exclusive subnodes related to the selected node or subnode may be further displayed.</p>
<p id="p-0233" num="0232">According to another exemplary aspect of the present disclosure, a method for solving a multiphysics model in a multiphysics modeling system is executed on one or more processor associated with the multiphysics modeling system. a multiphysics modeling system generates a model tree structure for the multiphysics modeling system. The multiphysics model includes combined systems having physical quantities represented in terms of partial differential equations. The multiphysics modeling system is configured to receive model inputs via a model tree. The method includes generating a geometric representation of the combined systems. The geometric representation is at least partially based on data received via a geometry node. Physical properties for the geometric representation of the combined systems are assembled. The physical properties are at least partially based on data received via a materials node. Physics quantities and boundary conditions are assembled for one or both of the geometric representation and the physical properties of the combined systems. The assembling of the physics quantities and boundary conditions are at least partially based on selected physics options received via a physics node. A solution for the multiphysics model of the combined systems is generated. The solution is based on partial differential equations for one or more study steps associated with a set of partial differential equations for the assembled physics quantities and boundary conditions. The study steps are received via a study node. The geometry node, materials node, physics node, and study node are logically associated branches of a model tree for the multiphysics model.</p>
<p id="p-0234" num="0233">It is contemplated that in certain aspects, exclusive and non-exclusive contributions to the partial differential equations are generated using operations represented by exclusive and non-exclusive child nodes to one or more of the geometry node, the materials node, or the physics node of the model tree. In certain aspects, the exclusive and non-exclusive subnodes are labeled with symbols distinguishing the exclusive subnodes from the non-exclusive child nodes and distinguishing the exclusive and non-exclusive child nodes from other nodes in the model tree.</p>
<p id="p-0235" num="0234">It is also contemplated that in certain aspects, in response to selecting a node, an identifying setting of a geometric entity associated with the selected node is displayed and information about exclusive or non-exclusive child nodes related to the selected node are further displayed.</p>
<p id="p-0236" num="0235">It is further contemplated that in certain aspects, the solution is displayed on a user interface and is configured to be displayed in a 2-D graphical form. In certain aspects, the solution is configured to be displayed in a 3-D graphical form or tabular form. In certain aspects, the geometry node, the materials node, the physics node, and the study node are each selectable via a user interface and include fields for storing physical quantities and operations for modeling the combined systems.</p>
<p id="p-0237" num="0236">According to a further exemplary aspect of the present disclosure, one or more non-transitory computer readable storage media are encoded with instructions executable on one or more processors associated with a multiphysics modeling system. The instructions include the acts of generating a geometric representation of the combined systems. The geometric representation is at least partially based on data received via a geometry node. Physical properties are assembled for the geometric representation of the combined systems. The physical properties are at least partially based on data received via a materials node. Physics quantities and boundary conditions are assembled for one or both of the geometric representation and the physical properties of the combined systems. The assembling of the physics quantities and boundary conditions are at least partially based on selected physics options received via a physics node. A solution is generated for the multiphysics model of the combined systems. The solution is based on partial differential equations for one or more study steps associated with a set of partial differential equations for the assembled physics quantities and boundary conditions. The study steps are received via a study node. The geometry node, materials node, physics node, and study node are logically associated branches of a model tree for the multiphysics model.</p>
<p id="p-0238" num="0237">According to another aspect of the present disclosure, a method for generating model constituents associated with a multiphysics model via a multiphysics modeling system is executed on one or more processors. The method includes representing a plurality of model constituents as one or more selectable primary nodes of a model tree. Operations that generate the model constituents are represented as one or more selectable secondary nodes to the primary nodes. Physical quantities associated with said model constituents are represented via at least one of the selectable primary nodes of the model tree. Contributions to partial differential equations are generated in the multiphysics modeling system via operations represented as at least one of the selectable secondary nodes to the at least one of the selectable primary nodes.</p>
<p id="p-0239" num="0238">It is contemplated that in certain aspects, the multiphysics model includes a geometrical domain. The partial differential equations are generated only if attributable to the geometrical domain.</p>
<p id="p-0240" num="0239">It is also contemplated that in certain aspects the method also includes representing combined systems as a plurality of model nodes in the model tree. Equations operable to couple the plurality of model nodes may be generated via operations represented as secondary nodes to the model nodes.</p>
<p id="p-0241" num="0240">It is further contemplated that in certain aspects contributions to the partial differential equations are generated for each of the model nodes. The partial differential equations may be solved simultaneously by the multiphysics modeling system.</p>
<p id="p-0242" num="0241">It is also contemplated that in certain aspects the method also includes generating exclusive and non-exclusive contributions to the partial differential equations using operations represented by exclusive and non-exclusive secondary nodes of the model tree. In certain aspects, the exclusive and non-exclusive subnodes may be labeled with symbols distinguishing the exclusive subnodes from the non-exclusive subnodes and distinguishing the exclusive and non-exclusive secondary nodes from other nodes in the model tree. In certain aspects, in response to selecting a primary node or secondary node, an identifying setting is displayed of a geometric entity associated with the selected node and information about exclusive or non-exclusive secondary nodes related to the selected node may further be displayed.</p>
<p id="p-0243" num="0242">It is additionally contemplated that the informational aspects about certain operations in the model tree may be displayed for the nodes of the model tree. Information about the author or the source of the operation represented by a particular node in the model tree may be presented or be selectable in the setting window.</p>
<p id="p-0244" num="0243">According to certain aspects of the present disclosure, a method for generating a model tree structure for a multiphysics modeling system configured to model combined systems having physical quantities represented in terms of partial differential equations is executable on one or more processors associated with the multiphysics modeling system. The method comprises the acts of transmitting a plurality of selectable physics options for association with at least one of the combined systems. An input can be associated with a selection of at least one of the plurality of selectable physics options is received via the one or more processors. One or more selectable study options can be transmitted for association with the combined systems. An input associated with a selection of at least one of the one or more selectable study options can be received via the one or more processors. In response to receiving the input associated with the selection at least one of the one or more selectable study options, a model tree structure can be generated using the one or more processors. The model tree structure can include a plurality of selectable nodes including parent nodes and child nodes, wherein the selectable nodes may include fields storing physical quantities and operations for modeling the combined systems.</p>
<p id="p-0245" num="0244">According to certain aspects of the present disclosure, a method for solving a multiphysics model in a multiphysics modeling system comprises the multiphysics model including combined systems having physical quantities represented in terms of partial differential equations. The multiphysics modeling system can be configured to receive model inputs via a model tree. The method can be executable on one or more processors associated with the multiphysics modeling system and can comprise the acts of generating a geometric representation of the combined systems. The geometric representation can be at least partially based on data received via a geometry node. Physical properties for the geometric representation of the combined systems can be assembled. The physical properties can be at least partially based on data received via a materials node. Physics quantities and boundary conditions can be assembled for one or both of the geometric representation and the physical properties of the combined systems. The assembling of the physics quantities and boundary conditions can be at least partially based on selected physics options received via a physics node. A solution for the multiphysics model of the combined systems can be generated. The solution may be based on partial differential equations for one or more study steps associated with the assembled physics quantities and boundary conditions. The study steps can be received via a study node. The geometry node, materials node, physics node, and study node can be logically associated branches of a model tree for the multiphysics model.</p>
<p id="p-0246" num="0245">According to certain aspects of the present disclosure, a method for generating model constituents associated with a multiphysics model in a multiphysics modeling system is executed on one or more processors. The method comprises representing, via one or more user interfaces, a plurality of model constituents as one or more selectable primary nodes of a model tree. Operations can be represented that generate the model constituents as one or more selectable secondary nodes to the primary nodes. Physical quantities associated with the model constituents can be represented via at least one of the selectable primary nodes of the model tree. Contributions to partial differential equations in the multiphysics modeling system can be generated via the one or more processors, via operations represented as at least one of the selectable secondary nodes to the at least one of the selectable primary nodes.</p>
<p id="p-0247" num="0246">According to another aspect of the present disclosure, one or more physical products (e.g., mechanical devices, electrical devices, electromechanical devices, structures, electromagnetic devices, semiconductor systems, wave propagation systems, chemical compounds, combinations of one or more of the foregoing) are designed and/or produced using the design system and/or multiphysics modeling system processes and/or methods described herein.</p>
<p id="p-0248" num="0247">According to yet another aspect of the present disclosure, one or more non-transitory computer readable media are encoded with instructions, which when executed by at least one processor associated with a design system or a multiphysics modeling system, causes the at least one processor to perform the methods described herein.</p>
<p id="h-0007" num="0000">Each of these embodiments and obvious variations thereof is contemplated as falling within the spirit and scope of the claimed invention, which is set forth in the following claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for controlling settings of a design system, the method being executable on one or more processing units associated with the design system, the method comprising the acts of:
<claim-text>receiving, via a communications interface, identifying data associated with a multiphysics modeling system;</claim-text>
<claim-text>transmitting instructions, via the communication interface or another interface, the instructions including model settings related to a multiphysics model at least partially residing in the multiphysics modeling system;</claim-text>
<claim-text>receiving model results at least partially derived from the model settings;</claim-text>
<claim-text>displaying at least a portion of the received model results in a graphical user interface associated with the design system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the transmitting and receiving acts are implemented via a bridge connection established between the multiphysics modeling system and the design system.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising at least partially representing the multiphysics model as a model tree in the graphical user interface.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising generating a window in the graphical user interface associated with the design system, the window being least partially linked with the multiphysics modeling system.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising generating a window in the graphical user interface associated with the design system, the window being configured to display the model settings as a model tree, the model settings being included in at least a portion of the transmitted instructions.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein transmitting instructions includes transmitting geometric features, the method further comprising generating a geometric representation of the multiphysics model at least partially based on the transmitted geometric features, the geometric representation being generated in the design system.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A method for dynamically controlling a multiphysics modeling system, the method being executable on one or more processing units associated with the multiphysics modeling system, the method comprising the acts of:
<claim-text>detecting, via a first interface, input data associate with a design system;</claim-text>
<claim-text>receiving instructions, via the first interface or a second interface, the instructions including settings related to a multiphysics model associated with the multiphysics modeling system;</claim-text>
<claim-text>determining a solution for the multiphysics model, the solution at least partially based on the received instructions;</claim-text>
<claim-text>transmitting the solution to the first interface or the second interface, the solution being configured for display within a design system user interface associated with the design system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the receiving and transmitting acts are implemented via a bridge connection between the multiphysics modeling system and the design system.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising in response to receiving an instruction associated with a geometric representation, generating a geometric domain in the multiphysics modeling system.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising the act of defining a multiphysics problem using the generated geometrical domain.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising transmitting parameters describing geometric features associated with the generated geometrical domain to the design system.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising transmitting parameter lists representing variations in the geometric features.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising determining, via associativity, physical properties and boundary conditions for each variation to a defined multiphysics problem.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. One or more non-transitory computer readable storage media encoded with instructions executable on one or more processors associated with a design system, the instructions including the acts of:
<claim-text>receiving an electronic signal via a communications interface of the design system, the electronic signal associated with a multiphysics modeling system;</claim-text>
<claim-text>sending instructions to the communications interface or another interface, the instructions including settings related to a multiphysics model associated with the multiphysics modeling system;</claim-text>
<claim-text>receiving, via the communications interface or the another interface, multiphysics model results derived from the settings;</claim-text>
<claim-text>displaying the multiphysics model result in a design system graphical user interface.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A method for controlling settings of a design system, the method being executable on one or more processors associated with the design system, the method comprising the acts of:
<claim-text>establishing a communications link between the design system and an associated multiphysics modeling system;</claim-text>
<claim-text>transmitting instructions via the communications link or another link, the instructions including settings related to a multiphysics model associated with the multiphysics modeling system;</claim-text>
<claim-text>receiving multiphysics model results derived from the settings;</claim-text>
<claim-text>displaying the multiphysics model result in a design system user interface.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the transmitting and receiving acts are executed via a bridge connection.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising representing the multiphysics model in the design system user interface using a model tree.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, further comprising generating a window in the design system user interface that is related to the multiphysics modeling system, the window being associated with the settings and the model tree including at least a portion of the instructions for the settings.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein transmitting instructions includes sending geometric features, and the method further comprising generating a geometric representation in the design system.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. A method for dynamically controlling a multiphysics modeling system, the method being executable on one or more processors associated with the multiphysics modeling system, the method comprising the acts of:
<claim-text>establishing one or more communications channels between the multiphysics modeling system and an associated design system;</claim-text>
<claim-text>receiving instructions via the one or more communications channels, the instructions including settings related to a multiphysics model associated with the multiphysics modeling system;</claim-text>
<claim-text>determining an outcome for the multiphysics model based on the received instructions;</claim-text>
<claim-text>sending the outcome to at least one of the one or more communication channels, the outcome configured for display in a design system user interface. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
