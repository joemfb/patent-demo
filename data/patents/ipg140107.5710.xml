<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626812-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626812</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12790645</doc-number>
<date>20100528</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>451</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>7</main-group>
<subgroup>72</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>708492</main-classification>
</classification-national>
<invention-title id="d2e53">Hybrid greatest common divisor calculator for polynomials</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6480605</doc-number>
<kind>B1</kind>
<name>Uchiyama et al.</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6609117</doc-number>
<kind>B2</kind>
<name>Sutherland et al.</name>
<date>20030800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7003537</doc-number>
<kind>B1</kind>
<name>Tamura</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>708492</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7120248</doc-number>
<kind>B2</kind>
<name>Hopkins et al.</name>
<date>20061000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2002/0087884</doc-number>
<kind>A1</kind>
<name>Shacham et al.</name>
<date>20020700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2005/0018842</doc-number>
<kind>A1</kind>
<name>Fu et al.</name>
<date>20050100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2011/0295921</doc-number>
<kind>A1</kind>
<name>Yang et al.</name>
<date>20111200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>708650</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00008">
<othercit>Cooperman, Feisel, von zur Gathen, Havas, &#x201c;GCD of Many Integers (Extended Abstract)&#x201d;, retrieved on Apr. 19, 2010 at &#x3c;&#x3c;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.73.3&#x26;rep=rep1&#x26;type=pdf&#x3e;&#x3e;, Springer-Verlag Berlin, Lecture Notes in Computer Science, Conference on Computing and Combinatorics (COCOON), vol. 1627, 1999, pp. 310-317.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00009">
<othercit>Freund, &#x201c;GCD and Factorisation of multivariate polynomials&#x201d;, retrieved on Apr. 19, 2010 at &#x3c;&#x3c;http://www14.informatik.tu-muenchen.de/konferenzen/Jass07/courses/1/Freund/Freund<sub>&#x2014;</sub>Paper.pdf&#x3e;&#x3e;, JASS Technology Course, The Power of Polynomials and How to Use Them, Mar. 28, 2007, pp. 1-8.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>Hemmer, Hulse, &#x201c;Generic implementation of a modular gcd over Algebraic Extension Fields&#x201d;, retrieved on Apr. 19, 2010 at &#x3c;&#x3c;http://domino.mpi-inf.mpg.de/intranet/ag1/ag1publ.nsf/3561a79a83e6557ac1256b91004f4bdd/f4397834f8c33046c125755b00566e16/FILE/final.pdf&#x3e;&#x3e;, European Workshop on Computational Geometry, 2009, pp. 321-324.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00011">
<othercit>Kaltofen, &#x201c;Greatest Common Divisors of Polynomials Given by Straight-Line Programs&#x201d;, retrieved on Apr. 19, 2010 at &#x3c;&#x3c;http://oldweb.cecm.sfu.ca/personal/pborwein/images/rand<sub>&#x2014;</sub>imgs/l29n7f3l.pdf&#x3e;&#x3e;, ACM, Journal of the ACM, vol. 35, No. 1, Jan. 1988, pp. 231-264.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00012">
<othercit>Kaltofen, &#x201c;Single-Factor Hensel Lifting and its Application to the Straight-Line Complexity of Certain Polynomials&#x201d;, retrieved on Apr. 19, 2010 at &#x3c;&#x3c;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.39.8886&#x26;rep=rep1&#x26;type=pdf&#x3e;&#x3e;, ACM, Symposium on Theory of Computing, 1987, pp. 443-452.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00013">
<othercit>Kuchlin, &#x201c;On the Multi-Threaded Computation of Integral Polynomial Greatest Common Divisors&#x201d;, retrieved on Apr. 19, 2010 at &#x3c;&#x3c;http://library.ukrweb.net/book/<sub>&#x2014;</sub>svalka/anri/scientific-library.net/vol2/Ax-books/Disk<sub>&#x2014;</sub>05/ISSAC-Proceedings/ISSAC91/p333-kuchlin.pdf&#x3e;&#x3e;, ACM, Proceedings of Conference on Symbolic and Algebraic Computation, 1991, pp. 333-342.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00014">
<othercit>van Hoeij, Monagan, &#x201c;Algorithms for Polynomial GCD Computation over Algebraic Function Fields&#x201d;, retrieved on Apr. 19, 2010 at &#x3c;&#x3c;http://www.cecm.sfu.ca/&#x2dc;pborwein/MITACS/papers/monagan.pdf&#x3e;&#x3e;, ACM, Conference on Symbolic and Algebraic Computation (ISSAC), Jul. 4, 2004, pp. 297-304.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>19</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>6</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110295921</doc-number>
<kind>A1</kind>
<date>20111201</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Yang</last-name>
<first-name>Xu</first-name>
<address>
<city>Beijing</city>
<country>CN</country>
</address>
</addressbook>
<residence>
<country>CN</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Quan</last-name>
<first-name>Xiaolin</first-name>
<address>
<city>Beijing</city>
<country>CN</country>
</address>
</addressbook>
<residence>
<country>CN</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Zhang</last-name>
<first-name>Dongmei</first-name>
<address>
<city>Bellevue</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Yang</last-name>
<first-name>Xu</first-name>
<address>
<city>Beijing</city>
<country>CN</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Quan</last-name>
<first-name>Xiaolin</first-name>
<address>
<city>Beijing</city>
<country>CN</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Zhang</last-name>
<first-name>Dongmei</first-name>
<address>
<city>Bellevue</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Lee &#x26; Hayes, PLLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Microsoft Corporation</orgname>
<role>02</role>
<address>
<city>Redmond</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Malzahn</last-name>
<first-name>David H</first-name>
<department>2193</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A hybrid greatest common divisor (GCD) calculator analyzes characteristics of polynomials and selects a particular GCD algorithm from multiple available GCD algorithms based on a combination of characteristics of the polynomials. The selected GCD algorithm is then applied to calculate the GCD of the polynomials.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="231.65mm" wi="191.18mm" file="US08626812-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="247.99mm" wi="190.08mm" file="US08626812-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="194.14mm" wi="191.43mm" file="US08626812-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="259.50mm" wi="183.90mm" file="US08626812-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="269.07mm" wi="169.59mm" file="US08626812-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="260.94mm" wi="189.40mm" file="US08626812-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="268.39mm" wi="182.54mm" file="US08626812-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">Computer algebra systems are computer-implemented applications that manipulate mathematical expressions in symbolic form. Computer algebra has many applications in fields such as physics, engineering, and education.</p>
<p id="p-0003" num="0002">One specific function performed by many computer algebra systems is the calculation of the greatest common divisor (GCD) of two polynomials. There are many algorithms that may be used for calculating the GCD of two polynomials. The computational expense of calculating the GCD depends on the complexity of the two polynomials and the algorithm used.</p>
<heading id="h-0002" level="1">SUMMARY</heading>
<p id="p-0004" num="0003">This document describes computer algebra techniques for calculating the greatest common divisor (GCD) of two polynomials. Characteristics of the polynomials are analyzed, and based on the analysis, a particular GCD algorithm is selected from among multiple available GCD algorithms. Characteristics of the two polynomials may include, but are not limited to, a number of variables, size of coefficients, powers of the variables, and distribution of powers of the variables.</p>
<p id="p-0005" num="0004">This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used as an aid in determining the scope of the claimed subject matter. The term &#x201c;techniques,&#x201d; for instance, may refer to device(s), system(s), method(s) and/or computer-readable instructions as permitted by the context above and throughout the document.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0006" num="0005">The detailed description is described with reference to the accompanying figures. In the figures, the left-most digit(s) of a reference number identifies the figure in which the reference number first appears. The same numbers are used throughout the drawings to reference like features and components.</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram that illustrates processes associated with an example hybrid greatest common divisor (GCD) algorithm.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 2</figref> is a table that illustrates example relationships between characteristics of polynomials and particular algorithms for calculating the GCD of polynomials.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram that illustrates components of an example computing device that implements the hybrid GCD algorithm of <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 4</figref> is a flow diagram of an example process for calculating the GCD of two polynomials.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 5</figref> is a flow diagram of an example process for calculating the GCD of two polynomials according to an MGCD algorithm.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 6</figref> is a flow diagram of an example process for calculating the GCD of two polynomials according to a PGCD sub-process of the MGCD algorithm.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0013" num="0012">A hybrid greatest common divisor (GCD) calculator selects and applies a particular GCD algorithm from multiple available GCD algorithms based on a determined combination of characteristics of two input polynomials.</p>
<p id="p-0014" num="0013">The discussion begins with a section entitled &#x201c;Example Hybrid GCD Algorithm,&#x201d; which describes one non-limiting series of processes that may be implemented to calculate the GCD of two polynomials. A section entitled &#x201c;Example Computer Device&#x201d; follows, and illustrates and describes an example computing device that may implement the described hybrid GCD algorithm. A third section, entitled &#x201c;Example Operation,&#x201d; illustrates and describes an example process for calculating the GCD of two polynomials. Finally, the discussion ends with a brief conclusion.</p>
<p id="p-0015" num="0014">This brief introduction, including section titles and corresponding summaries, is provided for the reader's convenience and is not intended to limit the scope of the claims, nor the proceeding sections.</p>
<p id="h-0005" num="0000">Example Hybrid GCD Algorithm</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 1</figref> illustrates processing performed by an example hybrid GCD algorithm <b>102</b>. Hybrid GCD algorithm <b>102</b> performs polynomial input <b>104</b>, polynomial analysis <b>106</b>, algorithm selection <b>108</b>, and GCD calculation <b>110</b>. In performing polynomial input <b>104</b>, hybrid GCD algorithm <b>102</b> receives two polynomials (e.g., f(x<sub>1</sub>, x<sub>2</sub>, . . . , x<sub>n</sub>) and g(x<sub>1</sub>, x<sub>2</sub>, . . . , x<sub>n</sub>)).</p>
<p id="p-0017" num="0016">In performing polynomial analysis <b>106</b>, hybrid GCD algorithm <b>102</b> analyzes the two received polynomials for various characteristics. For example, hybrid GCD algorithm <b>102</b> analyzes the polynomials to determine whether the polynomials are univariate (i.e., having only a single variable), multivariate (i.e., having more than three variables), or neither (i.e., having two or three variables). Hybrid GCD algorithm <b>102</b> also analyzes the polynomials to determine if the polynomials contain large coefficients, high-power variables, or sparse powers across the variables.</p>
<p id="p-0018" num="0017">Large coefficients may be defined based on a number system supported by a system in which hybrid GCD algorithm <b>102</b> is implemented. For example, in a 32-bit computer system, 32 bits are available to store numbers. Accordingly, as one example, a large coefficient is defined as any coefficient that is larger than the maximum number that can be stored in 32 bits.</p>
<p id="p-0019" num="0018">Similarly, high-power variables may be defined in various ways. In one example, a polynomial is determined to have high-power variables if at least one variable has a power greater than 1000.</p>
<p id="p-0020" num="0019">A polynomial is determined to have sparse powers across the variables if there is a large gap between powers of a variable. For example, the polynomial f(x,y)=x<sup>1000</sup>&#x2212;y has sparse powers across the variables.</p>
<p id="p-0021" num="0020">After analyzing the characteristics of the input polynomials, hybrid GCD algorithm <b>102</b> performs algorithm selection <b>108</b> to select an appropriate GCD algorithm based on the determined characteristics. Hybrid GCD algorithm <b>102</b> includes multiple distinct GCD algorithms that may be used to calculate the GCD for any two input polynomials. The multiple distinct GCD algorithms may include, for example, PRS (polynomial remainder sequences GCD algorithm), HEU (heuristic polynomial GCD algorithm), EZGCD (extended Zassenhaus GCD algorithm), and MGCD (modular GCD algorithm). Each of these algorithms is well known to those skilled in the art as an algorithm for calculating the GCD of two polynomials.</p>
<p id="p-0022" num="0021">Hybrid GCD algorithm <b>102</b> then performs GCD calculation <b>110</b> according to the selected GCD algorithm. The result is the GCD of the two input polynomials.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 2</figref> illustrates combinations of polynomial characteristics and corresponding GCD algorithms. For example, as shown in row <b>202</b> of table <b>200</b>, if the input polynomials are univariate with sparse powers across the variables, then hybrid GCD algorithm <b>102</b> selects the HEU algorithm to calculate the GCD of the two input polynomials. Similarly, as shown in row <b>204</b> of table <b>200</b>, if the input polynomials are multivariate with large coefficients and high powers, then hybrid GCD algorithm <b>102</b> selects the EZGCD algorithm to calculate the GCD of the two input polynomials. Row <b>206</b> of table <b>200</b> illustrates a special scenario in which, if the input polynomials are univariate with large coefficients, hybrid GCD algorithm <b>102</b> first selects the PRS algorithm to calculate the GCD of the two input polynomials. If the PRS algorithm is not successful, then hybrid GCD algorithm <b>102</b> applies the HEU algorithm to calculate the GCD of the two input polynomials.</p>
<p id="h-0006" num="0000">Example Computing Device</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an example computing device <b>300</b> that may implement the techniques for calculating the greatest common factor of two polynomials. Computer device <b>300</b> includes one or more processors <b>302</b> and memory <b>304</b> to execute a computer algebra module <b>306</b> and any number of other applications <b>308</b>.</p>
<p id="p-0025" num="0024">Computer algebra module <b>306</b> includes polynomial analysis module <b>310</b>, GCD algorithm selection module <b>312</b>, and various modules for performing specific GCD calculations. For example, computer algebra module <b>306</b> includes PRS algorithm module <b>314</b>, HEU algorithm module <b>316</b>, EZGCD algorithm module <b>318</b>, and MGCD algorithm module <b>320</b>. Computer algebra module <b>306</b> may also include other specific GCD calculation algorithm modules.</p>
<p id="p-0026" num="0025">Polynomial analysis module <b>310</b> is implemented to receive two input polynomials, and to analyze the polynomials based on a set of predefined characteristics. For example, as described above with reference to <figref idref="DRAWINGS">FIG. 1</figref>, polynomial analysis module <b>310</b> analyzes received polynomials to determine whether the polynomials are univariate, multivariate, or neither, and also to determine whether the polynomials contain large coefficients, high-power variables, or sparse powers across the variables.</p>
<p id="p-0027" num="0026">GCD algorithm selection module <b>312</b> is implemented to select one of the multiple available GCD algorithms, based on results from polynomial analysis module <b>310</b>. For example, as described above with reference to <figref idref="DRAWINGS">FIG. 2</figref>, GCD algorithm selection module <b>312</b> selects a particular GCD algorithm based on the determined combination of characteristics of the input polynomials.</p>
<p id="p-0028" num="0027">PRS algorithm module <b>314</b> is implemented to calculate the GCD of two input polynomials according to the PRS algorithm. For example, as shown in <figref idref="DRAWINGS">FIG. 2</figref>, if the input polynomials have large coefficients and are univariate, the GCD algorithm selection module <b>312</b> selects the PRS algorithm module <b>314</b> to calculate the GCD of the two input polynomials.</p>
<p id="p-0029" num="0028">HEU algorithm module <b>316</b> is implemented to calculate the GCD of two input polynomials according to the HEU algorithm. For example, as shown in <figref idref="DRAWINGS">FIG. 2</figref>, if the input polynomials contain high-power variables and are multivariate, the GCD algorithm selection module <b>312</b> selects the HEU algorithm module <b>316</b> to calculate the GCD of the two input polynomials.</p>
<p id="p-0030" num="0029">EZGCD algorithm module <b>318</b> is implemented to calculate the GCD of two input polynomials according to the EZGCD algorithm. For example, as shown in <figref idref="DRAWINGS">FIG. 2</figref>, if the input polynomials contain large coefficients, contain high-power variables, and are multivariate, the GCD algorithm selection module <b>312</b> selects the EZGCD algorithm module <b>318</b> to calculate the GCD of the two input polynomials.</p>
<p id="p-0031" num="0030">MGCD algorithm module <b>320</b> is implemented to calculate the GCD of two input polynomials according to the MGCD algorithm. For example, as shown in <figref idref="DRAWINGS">FIG. 2</figref>, if the input polynomials contain high-power variables and are neither univariate nor multivariate, the GCD algorithm selection module <b>312</b> selects the MGCD algorithm module <b>320</b> to calculate the GCD of the two input polynomials.</p>
<p id="p-0032" num="0031">MGCD algorithm module <b>320</b> includes MGCD sub-process module <b>322</b> and PGCD sub-process module <b>324</b>. MGCD sub-process module <b>322</b> is implemented to reduce a multivariate integer GCD problem to a series of k-variate Z<sub>p </sub>field GCD problems by applying modular homomorphism. PGCD sub-process module <b>324</b> is configured to reduce the k-variate Z<sub>p </sub>field GCD problems generated by MGCD sub-process module <b>322</b> to a series of (k&#x2212;1)-variate Z<sub>p </sub>field GCD problems by recursively applying evaluation homomorphism. Processing performed by an example MGCD algorithm module <b>320</b> is described in further detail below with reference to <figref idref="DRAWINGS">FIGS. 5 and 6</figref>.</p>
<p id="p-0033" num="0032">Although illustrated in <figref idref="DRAWINGS">FIG. 3</figref> as being stored in memory <b>304</b> of computing device <b>300</b>, computer algebra module <b>306</b>, or portions thereof, may be implemented using any form of computer-readable media that is accessible by computing device <b>300</b>. Computer-readable media may include, for example, computer storage media and communications media.</p>
<p id="p-0034" num="0033">Computer storage media includes volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules, or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium that can be used to store information for access by a computing device.</p>
<p id="p-0035" num="0034">In contrast, communication media embodies computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as a carrier wave or other transport mechanism. Computer storage media does not include communication media.</p>
<p id="h-0007" num="0000">Example Operation</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 4</figref> is a flow diagram of an example process <b>400</b> for calculating the greatest common divisor of two polynomials. This process is illustrated as a collection of blocks in a logical flow graph, which represents a sequence of operations that can be implemented in hardware, software, or a combination thereof. In the context of software, the blocks represent computer-executable instructions stored on one or more computer-readable storage media that, when executed by one or more processors, cause the processors to perform the recited operations. Note that the order in which the process is described is not intended to be construed as a limitation, and any number of the described process blocks can be combined in any order to implement the process, or an alternate process. Additionally, individual blocks may be deleted from the process without departing from the spirit and scope of the subject matter described herein. Furthermore, while this process is described with reference to the computing device <b>300</b> of <figref idref="DRAWINGS">FIG. 3</figref>, other computer architectures may implement this process in whole or in part.</p>
<p id="p-0037" num="0036">At <b>402</b>, two input polynomials are received. For example, computer algebra module <b>306</b> receives two user-submitted polynomials.</p>
<p id="p-0038" num="0037">At <b>404</b>, characteristics of the received polynomials are analyzed. For example, polynomial analysis module <b>310</b> analyzes the user-submitted polynomials to determine whether the polynomials are univariate (i.e., having only a single variable), multivariate (i.e., having more than three variables), or neither (i.e., having two or three variables). Polynomial analysis module <b>310</b> also analyzes the user-submitted polynomials to determine whether the polynomials contain large coefficients (e.g., larger than the maximum number supported by processor <b>302</b>), high-power variables (e.g., powers greater than 1000), or sparse powers across the variables.</p>
<p id="p-0039" num="0038">At <b>406</b>, a GCD algorithm is selected based on the determined characteristics of the received polynomials. For example, GCD algorithm selection module <b>312</b> selects the PRS algorithm, the HEU algorithm, the EZGCD algorithm, or the MGCD algorithm based on the combination of characteristics found in the user-submitted polynomials. <figref idref="DRAWINGS">FIG. 2</figref>, described above, provides example sets of characteristic combinations and corresponding algorithms.</p>
<p id="p-0040" num="0039">At <b>408</b>, the selected algorithm is applied. For example, if GCD algorithm selection module <b>312</b> selects the PRS algorithm, then the PRS algorithm module <b>314</b> calculates the GCD of the two user-submitted polynomials, according to the PRS algorithm. Similarly, if GCD algorithm selection module <b>312</b> selects that HEU, EZGCD, or MGCD algorithms, then the HEU algorithm module <b>316</b>, EZGCD algorithm module <b>318</b>, or MGCD algorithm module <b>320</b>, respectively, calculates the GCD of the two user submitted polynomials.</p>
<p id="p-0041" num="0040">At <b>410</b>, a determination is made as to whether or not the selected GCD algorithm successfully calculated the GCD of the received polynomials. For example, computer algebra module <b>306</b> verifies that a valid GCD was output from the algorithm module corresponding to the selected GCD algorithm. If computer algebra module <b>306</b> determines that no valid GCD was output (the &#x201c;No&#x201d; branch from block <b>410</b>), then at <b>412</b>, computer algebra module <b>306</b> calls the MGCD algorithm module <b>320</b> to calculate the GCD of the input polynomials.</p>
<p id="p-0042" num="0041">At <b>414</b>, the calculated GCD of the input polynomials is returned. For example, a symbolic representation of the GCD is output to a display device associated with computing device <b>300</b>.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 5</figref> is a flow diagram of an example process <b>500</b> for calculating the greatest common divisor of two polynomials according to an MGCD algorithm. This process is illustrated as a collection of blocks in a logical flow graph, which represents a sequence of operations that can be implemented in hardware, software, or a combination thereof. In the context of software, the blocks represent computer-executable instructions stored on one or more computer-readable storage media that, when executed by one or more processors, cause the processors to perform the recited operations. Note that the order in which the process is described is not intended to be construed as a limitation, and any number of the described process blocks can be combined in any order to implement the process, or an alternate process. Additionally, individual blocks may be deleted from the process without departing from the spirit and scope of the subject matter described herein. Furthermore, while this process is described with reference to the computing device <b>300</b> of <figref idref="DRAWINGS">FIG. 3</figref>, other computer architectures may implement this process in whole or in part.</p>
<p id="p-0044" num="0043">At <b>502</b>, two input polynomials f(x<sub>1</sub>, x<sub>2</sub>, . . . , x<sub>n</sub>) and g(x<sub>1</sub>, x<sub>2</sub>, . . . , x<sub>n</sub>) are received. For example, MGCD algorithm module <b>320</b> receives two polynomials as a result of processing performed by GCD algorithm selection module <b>312</b>. Blocks <b>504</b>-<b>510</b> and <b>514</b>-<b>522</b> represent processing performed by MGCD sub-process module <b>322</b>. Block <b>512</b> represents processing performed by PGCD sub-process module <b>324</b>.</p>
<p id="p-0045" num="0044">At <b>504</b>, a counter variable, i, is initialized to a value of 1 at the beginning of a processing loop represented by blocks <b>506</b>-<b>520</b>.</p>
<p id="p-0046" num="0045">At <b>506</b>, a prime number, p<sub>i</sub>, is identified, and at <b>508</b>, homomorphism h<sub>i </sub>is defined to be modular p<sub>i</sub>.</p>
<p id="p-0047" num="0046">At <b>510</b>, homomorphism h<sub>i </sub>is applied to f(x<sub>1</sub>, x<sub>2</sub>, . . . , x<sub>n</sub>) and g(x<sub>1</sub>, x<sub>2</sub>, . . . , x<sub>n</sub>), resulting in two new polynomials, f<sub>h</sub><sub><sub2>i </sub2></sub>and g<sub>h</sub><sub><sub2>i</sub2></sub>.</p>
<p id="p-0048" num="0047">At <b>512</b>, the GCD of f<sub>h</sub><sub><sub2>i </sub2></sub>and g<sub>h</sub><sub><sub2>i </sub2></sub>is calculated. For example, f<sub>h</sub><sub><sub2>i </sub2></sub>and g<sub>h</sub><sub><sub2>i </sub2></sub>are provided as input to PGCD sub-process module <b>324</b>. Processing performed by an example PGCD sub-process module <b>324</b> is described in further detail below with reference to <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0049" num="0048">At <b>514</b>, c<sub>i </sub>(the GCD of f<sub>h</sub><sub><sub2>i </sub2></sub>and g<sub>h</sub><sub><sub2>i</sub2></sub>) is added to a group, G<sub>k</sub>, where k is the degree of the GCD c<sub>i</sub>.</p>
<p id="p-0050" num="0049">At <b>516</b>, a determination is made as to whether or not group G<sub>k </sub>has enough items. For example, G<sub>k </sub>is determined to have enough items if:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>&#x3a0;<sub>j=1</sub><sup>m</sup><i>p</i><sub>k</sub><sub><sub2>j</sub2></sub>&#x3e;threshold<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>where:<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>threshold=2<sup>min(deg(f,x</sup><sup><sub2>n</sub2></sup><sup>),deg(g,x</sup><sup><sub2>n</sub2></sup><sup>))</sup><i>&#xb7;|gcd</i>(<i>l </i>coeff(<i>f</i>),<i>l </i>coeff(<i>g</i>))|&#xb7;min(&#x2225;<i>f&#x2225;</i><sub>&#x221e;</sub><i>,&#x2225;g&#x2225;</i><sub>&#x221e;</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where &#x201c;l coeff(f)&#x201d; represents f's leading coefficient and &#x201c;l coeff(g)&#x201d; represents g's leading coefficient.
</p>
<p id="p-0051" num="0050">If G<sub>k </sub>does not have enough items, then at block <b>518</b>, i is incremented by 1, and processing continues as described above with reference to block <b>506</b>, with the selection of a new prime number.</p>
<p id="p-0052" num="0051">If G<sub>k </sub>is determined to have enough items, then at block <b>520</b>, MGCD sub-process module <b>322</b> determines whether or not G<sub>k </sub>is lucky. For example, MGCD sub-process module <b>322</b> uses the Chinese Remainder algorithm to identify a polynomial, c, from G<sub>k</sub>. If c|f and cg, then it is determined that G<sub>k </sub>is lucky.</p>
<p id="p-0053" num="0052">If G<sub>k </sub>is not determined to be lucky, then processing continues as described above with reference to block <b>518</b>. If G<sub>k </sub>is determined to be lucky, then at <b>522</b>, lucky homomorphisms h<sub>k</sub><sub><sub2>1</sub2></sub>, h<sub>k</sub><sub><sub2>2</sub2></sub>, . . . , h<sub>k</sub><sub><sub2>m </sub2></sub>are returned.</p>
<p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. 6</figref> is a flow diagram of an example PGCD sub-process <b>512</b> of an MGCD algorithm. This process is illustrated as a collection of blocks in a logical flow graph, which represents a sequence of operations that can be implemented in hardware, software, or a combination thereof. In the context of software, the blocks represent computer-executable instructions stored on one or more computer-readable storage media that, when executed by one or more processors, cause the processors to perform the recited operations. Note that the order in which the process is described is not intended to be construed as a limitation, and any number of the described process blocks can be combined in any order to implement the process, or an alternate process. Additionally, individual blocks may be deleted from the process without departing from the spirit and scope of the subject matter described herein. Furthermore, while this process is described with reference to the computing device <b>300</b> of <figref idref="DRAWINGS">FIG. 3</figref>, other computer architectures may implement this process in whole or in part.</p>
<p id="p-0055" num="0054">At <b>602</b>, two input polynomials f(x<sub>1</sub>, x<sub>2</sub>, . . . , x<sub>n</sub>) and g(x<sub>1</sub>, x<sub>2</sub>, . . . , x<sub>n</sub>) are received. For example, PGCD sub-process module <b>324</b> receives two polynomials (f<sub>h</sub><sub><sub2>i </sub2></sub>and g<sub>h</sub><sub><sub2>i</sub2></sub>) as a result of processing performed by MGCD sub-process module <b>322</b>.</p>
<p id="p-0056" num="0055">At <b>604</b>, a counter variable, i, is initialized to a value of 1 at the beginning of a processing loop represented by blocks <b>606</b>-<b>620</b>.</p>
<p id="p-0057" num="0056">At <b>606</b>, a proper element, &#x221d;<sub>i </sub>of Z<sub>p</sub>, is identified, and at <b>608</b>, homomorphism h<sub>i </sub>is defined to be x<sub>n</sub>=&#x221d;<sub>i</sub>.</p>
<p id="p-0058" num="0057">At <b>610</b>, homomorphism h<sub>i </sub>is applied to f(x<sub>1</sub>, x<sub>2</sub>, . . . , x<sub>n</sub>) and g(x<sub>1</sub>, x<sub>2</sub>, . . . , x<sub>n</sub>), resulting in two new polynomials, f<sub>h</sub><sub><sub2>i </sub2></sub>and g<sub>h</sub><sub><sub2>i</sub2></sub>.</p>
<p id="p-0059" num="0058">At <b>612</b>, the GCD of f<sub>h</sub><sub><sub2>i </sub2></sub>and g<sub>h</sub><sub><sub2>i </sub2></sub>is calculated. For example, the PGCD sub-process is performed recursively to calculate the modular GCD.</p>
<p id="p-0060" num="0059">At <b>614</b>, c<sub>i </sub>(the GCD of f<sub>h</sub><sub><sub2>i </sub2></sub>and g<sub>h</sub><sub><sub2>i</sub2></sub>) is added to a group, G<sub>k</sub>, where k is the degree of the GCD c<sub>i</sub>.</p>
<p id="p-0061" num="0060">At <b>616</b>, a determination is made as to whether or not group G<sub>k </sub>has enough items. For example, G<sub>k </sub>is determined to have enough items if:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>MembersCount(<i>G</i><sub>k</sub>)&#x3e;threshold<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>where:<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>threshold=min(<i>deg</i>(<i>f,x</i><sub>n</sub>),<i>deg</i>(<i>g,x</i><sub>n</sub>))+<i>deg</i>(<i>gcd</i>(<i>f</i><sub>lc</sub><i>,g</i><sub>lc</sub>),<i>x</i><sub>n</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where f<sub>lc</sub>(x<sub>n</sub>) represents the leading coefficient of f on variables {x<sub>1</sub>, x<sub>2</sub>, . . . , x<sub>n-1</sub>} and where g<sub>lc </sub>(x<sub>n</sub>) represents the leading coefficient of g on variables {x<sub>1</sub>, x<sub>2</sub>, . . . , x<sub>n-1</sub>}.
</p>
<p id="p-0062" num="0061">If G<sub>k </sub>does not have enough items, then at block <b>618</b>, i is incremented by one, and processing continues as described above with reference to block <b>606</b>, with the identification of a new proper element, &#x221d;<sub>i </sub>of Z<sub>p</sub>.</p>
<p id="p-0063" num="0062">If G<sub>k </sub>is determined to have enough items, then at block <b>620</b>, PGCD sub-process module <b>324</b> determines whether or not G<sub>k </sub>is lucky. For example, PGCD sub-process module <b>324</b> uses the Newton interpolation algorithm to identify a polynomial, c, from G<sub>k</sub>. If c|f and c|g, then it is determined that G<sub>k </sub>is lucky.</p>
<p id="p-0064" num="0063">If G<sub>k </sub>is not determined to be lucky, then processing continues as described above with reference to block <b>618</b>. If G<sub>k </sub>is determined to be lucky, then at <b>622</b>, lucky homomorphisms h<sub>k</sub><sub><sub2>1</sub2></sub>, h<sub>k</sub><sub><sub2>2</sub2></sub>, . . . , h<sub>k</sub><sub><sub2>m </sub2></sub>are returned.</p>
<p id="p-0065" num="0064">In both the MGCD sub-process (illustrated in <figref idref="DRAWINGS">FIG. 5</figref>) and the PGCD sub-process (illustrated in <figref idref="DRAWINGS">FIG. 6</figref>), computational expense is reduced by grouping the identified possible GCDs (c<sub>i</sub>), and then determining whether a group has a sufficient number of members.</p>
<heading id="h-0008" level="1">CONCLUSION</heading>
<p id="p-0066" num="0065">Although the subject matter has been described in language specific to structural features and/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described. Rather, the specific features and acts are disclosed as exemplary forms of implementing the claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method comprising:
<claim-text>identifying, by a computing device executing a computer algebra module for manipulating mathematical expressions in symbolic form, characteristics of first and second polynomials, wherein the characteristics include:
<claim-text>coefficient characteristics;</claim-text>
<claim-text>variable characteristics; and</claim-text>
<claim-text>variable power characteristics;</claim-text>
</claim-text>
<claim-text>based on the characteristics that are identified, selecting, by the computing device, a particular greatest common divisor (GCD) algorithm from a plurality of GCD algorithms;</claim-text>
<claim-text>applying, by the computing device, the particular GCD algorithm to the first and second polynomials; and</claim-text>
<claim-text>returning, by the computing device, a GCD of the first and second polynomials.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. A method as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein identifying the characteristics of the first and second polynomials includes determining whether or not the first and second polynomials include large coefficients.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. A method as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein identifying the characteristics of the first and second polynomials includes determining whether or not the first and second polynomials include variables to a high power.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. A method as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein identifying the characteristics of the first and second polynomials includes determining whether or not the first and second polynomials include a sparse distribution of variable powers.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. A method as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein identifying the characteristics of the first and second polynomials includes determining a number of variables represented in the first and second polynomials.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A method as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein identifying the characteristics of the first and second polynomials includes determining whether the first and second polynomials are:
<claim-text>univariate, having only a single variable;</claim-text>
<claim-text>multivariate, having more than three variables; or</claim-text>
<claim-text>neither univariate nor multivariate, having exactly two or three variables.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A method as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the plurality of greatest common divisor (GCD) algorithms includes:
<claim-text>a polynomial remainder sequences (PRS) GCD algorithm;</claim-text>
<claim-text>a heuristic (HEU) GCD algorithm;</claim-text>
<claim-text>an extended Zassenhaus GCD (EZGCD) algorithm; and</claim-text>
<claim-text>a modular GCD (MGCD) algorithm; and</claim-text>
</claim-text>
<claim-text>selecting the particular GCD algorithm from the plurality of GCD algorithms comprises:
<claim-text>in an event that the first and second polynomials are univariate polynomials with large coefficients, selecting the PRS GCD algorithm;</claim-text>
<claim-text>in an event that the first and second polynomials include either high power variables or variables with a sparse distribution of powers, but not both, selecting the HEU GCD algorithm;</claim-text>
<claim-text>in an event that the first and second polynomials include two, and only two, variables and include two or more of large coefficients, high power variables, or variables with a sparse distribution of powers, selecting the EZGCD algorithm;</claim-text>
<claim-text>in an event that the first and second polynomials include two, and only two, variables and include large coefficients, selecting the EZGCD algorithm;</claim-text>
<claim-text>in an event that the first and second polynomials include three or more variables and include two or more of large coefficients, high power variables, or variables with a sparse distribution of powers, selecting the EZGCD algorithm;</claim-text>
<claim-text>in an event that the first and second polynomials are univariate polynomials with high power variables and variables with sparse distribution of powers and do not include large coefficients, selecting the EZGCD algorithm; and</claim-text>
<claim-text>in an event that the PRS, HEU, and EZGCD algorithms are not selected, selecting the MGCD algorithm.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A system comprising:
<claim-text>a processor implemented in a computing device;</claim-text>
<claim-text>a computer storage media; and</claim-text>
<claim-text>a computer algebra module, stored in the computer storage media and executed on the processor, the computer algebra module comprising:
<claim-text>polynomial analysis instructions to analyze coefficient characteristics, variable characteristics, and variable power characteristics of a plurality of input polynomials;</claim-text>
<claim-text>a plurality of greatest common divisor (GCD) algorithms; and</claim-text>
<claim-text>GCD algorithm selection instructions to select a particular GCD algorithm module from the plurality of GCD algorithms based on results from the polynomial analysis instructions, the particular GCD algorithm to be applied to the plurality of input polynomials.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A system as recited in <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the plurality of greatest common divisor (GCD) algorithms comprises a polynomial remainder sequences (PRS) GCD algorithm.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A system as recited in <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the plurality of greatest common divisor (GCD) algorithms comprises a heuristic (HEU) GCD algorithm.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A system as recited in <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the plurality of greatest common divisor (GCD) algorithms comprises an extended Zassenhaus GCD (EZGCD) algorithm.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A system as recited in <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the plurality of greatest common divisor (GCD) algorithms comprises a modular GCD (MGCD) algorithm.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A system as recited in <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the MGCD algorithm includes:
<claim-text>an MGCD subprocess configured to:</claim-text>
<claim-text>reduce a multivariate integer GCD problem to a series of k-variate GCD problems over field Z<sub>p </sub>by recursively applying modular homomorphism; and</claim-text>
<claim-text>group potential results according to degree of variable to reduce a number of potential results to be calculated; and</claim-text>
<claim-text>a PGCD subprocess configured to:
<claim-text>reduce the series of k-variate GCD problems over field Z<sub>p </sub>to a series of (k&#x2212;1)-variate GCD problems over field Z<sub>p </sub>by recursively applying evaluation homomorphism; and</claim-text>
<claim-text>group potential results according to degree of variable to reduce a number of potential results to be calculated.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. A system as recited in <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the plurality of greatest common divisor (GCD) algorithms comprises:
<claim-text>a polynomial remainder sequences (PRS) GCD algorithm;</claim-text>
<claim-text>a heuristic (HEU) GCD algorithm;</claim-text>
<claim-text>an extended Zassenhaus GCD (EZGCD) algorithm; and</claim-text>
<claim-text>a modular GCD (MGCD) algorithm.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. One or more computer storage media storing computer-executable instructions that, when executed, cause one or more processors to perform operations comprising:
<claim-text>identifying a plurality of polynomials;</claim-text>
<claim-text>identifying characteristics of the plurality of polynomials, wherein the characteristics include:
<claim-text>coefficient characteristics;</claim-text>
<claim-text>variable characteristics; and</claim-text>
<claim-text>variable power characteristics;</claim-text>
</claim-text>
<claim-text>selecting a particular greatest common divisor (GCD) algorithm from a plurality of GCD algorithms based on the characteristics of the plurality of polynomials; and</claim-text>
<claim-text>executing the particular GCD algorithm to calculate a GCD of the plurality of polynomials.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. One or more computer storage media as recited in <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the particular GCD algorithm is a modular GCD (MGCD) algorithm, and executing the particular GCD algorithm comprises:
<claim-text>performing recursive operations including:</claim-text>
<claim-text>identifying a prime number, p;</claim-text>
<claim-text>defining a homomorphism h<sub>p </sub>as modular p;</claim-text>
<claim-text>applying h<sub>p </sub>to each of the plurality of polynomials, resulting in a plurality of modified polynomials;</claim-text>
<claim-text>calculating the GCD, c<sub>i</sub>, of the plurality of modified polynomials, c<sub>i </sub>having degree k;</claim-text>
<claim-text>adding c<sub>i </sub>to a group, G<sub>k</sub>; and</claim-text>
<claim-text>determining whether the group has a sufficient number of items; and</claim-text>
<claim-text>in an event that the group has a sufficient number of items, terminating the recursive operations.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. One or more computer storage media as recited in <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the plurality of polynomials include polynomials f and g; and the group has a sufficient number of items if:
<claim-text>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>&#x3a0;<sub>j=1</sub><sup>m</sup><i>p</i><sub>k</sub><sub><sub2>j</sub2></sub>&#x3e;threshold<?in-line-formulae description="In-line Formulae" end="tail"?>
</claim-text>
<claim-text>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>where:<?in-line-formulae description="In-line Formulae" end="tail"?>
</claim-text>
<claim-text>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>threshold=2<sup>min(deg(f,x</sup><sup><sub2>n</sub2></sup><sup>),deg(g,x</sup><sup><sub2>n</sub2></sup><sup>))</sup><i>&#xb7;|gcd</i>(<i>l </i>coeff(<i>f</i>),<i>l </i>coeff(<i>g</i>))|&#xb7;min(&#x2225;<i>f&#x2225;</i><sub>&#x221e;</sub><i>,&#x2225;g&#x2225;</i><sub>&#x221e;</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?>
</claim-text>
<claim-text>where l coeff(f) represents f's leading coefficient and l coeff(g) represents g's leading coefficient.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. One or more computer storage media as recited in <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the plurality of modified polynomials are expressed in terms of a variable, x, calculating the GCD, c<sub>i</sub>, of the plurality of modified polynomials comprises:
<claim-text>performing a second set of recursive operations including:
<claim-text>identifying a field, Z<sub>p</sub>, over which the plurality of modified polynomials are defined;</claim-text>
<claim-text>identifying a proper element, &#x221d;<sub>i </sub>of Z<sub>p</sub>;</claim-text>
<claim-text>defining a homomorphism h<sub>i </sub>as x<sub>n</sub>=&#x221d;<sub>i</sub>;</claim-text>
<claim-text>applying h<sub>i </sub>to each of the plurality of modified polynomials, resulting in a plurality of new modified polynomials;</claim-text>
<claim-text>calculating the GCD, d<sub>i</sub>, of the plurality of new modified polynomials, d<sub>i </sub>having degree j;</claim-text>
<claim-text>adding d<sub>i </sub>to a group, H<sub>j</sub>; and</claim-text>
<claim-text>determining whether H<sub>j </sub>has a sufficient number of items; and</claim-text>
</claim-text>
<claim-text>in an event that H<sub>j </sub>has a sufficient number of items, terminating the second set of recursive operations.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. One or more computer storage media as recited in <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the plurality of polynomials include polynomials f(x<sub>1</sub>, x<sub>2</sub>, . . . , x<sub>n-1</sub>) and g(x<sub>1</sub>, x<sub>2</sub>, . . . , x<sub>n-1</sub>); and H<sub>j </sub>has a sufficient number of items if:
<claim-text>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>MembersCount(<i>H</i><sub>j</sub>)&#x3e;threshold<?in-line-formulae description="In-line Formulae" end="tail"?>
</claim-text>
<claim-text>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>where:<?in-line-formulae description="In-line Formulae" end="tail"?>
</claim-text>
<claim-text>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>threshold=min(<i>deg</i>(<i>f,x</i><sub>n</sub>),<i>deg</i>(<i>g,x</i><sub>n</sub>))+<i>deg</i>(<i>gcd</i>(<i>f</i><sub>lc</sub><i>,g</i><sub>lc</sub>),<i>x</i><sub>n</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?>
</claim-text>
<claim-text>where f<sub>lc</sub>(x<sub>n</sub>) represents the leading coefficient of f on variables {x<sub>1</sub>, x<sub>2</sub>, . . . , x<sub>n-1</sub>} and where g<sub>lc</sub>(x<sub>n</sub>) represents the leading coefficient of g on variables {x<sub>1</sub>, x<sub>2</sub>, . . . , x<sub>n-1</sub>}. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
