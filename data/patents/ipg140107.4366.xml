<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625438-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625438</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13229083</doc-number>
<date>20110909</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>315</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>26</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>370241</main-classification>
<further-classification>370474</further-classification>
</classification-national>
<invention-title id="d2e53">Circuit and method for extracting fields from packets</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5754525</doc-number>
<kind>A</kind>
<name>Lo et al.</name>
<date>19980500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370389</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00002">
<othercit>U.S. Appl. No. 12/858,416, filed Aug. 17, 2010, Attig et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00003">
<othercit>U.S. Appl. No. 12/858,418, filed Aug. 17, 2010, Attig et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00004">
<othercit>U.S. Appl. No. 12/858,421, filed Aug. 17, 2010, Attig et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>370241</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370474</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709230</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709235</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709245</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>327407</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>5</number-of-drawing-sheets>
<number-of-figures>5</number-of-figures>
</figures>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Attig</last-name>
<first-name>Michael E.</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Attig</last-name>
<first-name>Michael E.</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Maunu</last-name>
<first-name>LeRoy D.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Xilinx, Inc.</orgname>
<role>02</role>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Mesfin</last-name>
<first-name>Yemane</first-name>
<department>2462</department>
</primary-examiner>
<assistant-examiner>
<last-name>Banthrongsack</last-name>
<first-name>Jeff</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Approaches for selecting a field of data from a packet of data in an n-bit data path. A first selector circuit has m inputs and an output. The m inputs receive respective overlapping subsets of bits of the data path. The first selector selects one of the subsets of bits. Each stage of two or more shift-and-select stages includes a respective second selector circuit having up to m inputs. One of the inputs of the respective second selector circuit inputs an un-shifted version of the subset of bits, one or more others of the up to m inputs of the respective second selector circuit input different shifted versions of the subset of bits, and the respective second selector circuit outputs a selected one of the un-shifted or shifted versions of the subset of bits. The last shift-and-select stage outputs the field of data aligned to the least significant bit.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="117.60mm" wi="198.12mm" file="US08625438-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="197.95mm" wi="146.81mm" orientation="landscape" file="US08625438-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="198.12mm" wi="125.65mm" orientation="landscape" file="US08625438-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="241.47mm" wi="165.02mm" orientation="landscape" file="US08625438-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="245.19mm" wi="99.91mm" file="US08625438-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="196.51mm" wi="140.46mm" file="US08625438-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0002" num="0001">One or more embodiments of the invention generally relate to communication protocols, and more particularly to packet processors for manipulating data packets.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">A network packet processor may input a stream of network packets, manipulate the contents of the network packets, and output another stream of modified network packets. The manipulations may implement a protocol for processing network packets. For example, the network packet processor may implement a protocol layer of a communication protocol, and for a high-level packet received from a higher protocol layer and delivered to a lower protocol layer for eventual transmission on the communication media, the manipulations may encapsulate the high-level packet within a low-level packet of the lower protocol layer.</p>
<p id="p-0004" num="0003">Packet parsing involves processing packets to determine where protocol boundaries and protocol layers reside within packets. In order to make decisions about the next protocol layer to inspect, packet fields within the packets are examined. Each protocol layer may require the inspection of multiple fields within the protocol layer of the packet to assist in making parsing decisions.</p>
<p id="p-0005" num="0004">High-speed packet parsing may entail streaming data transmission with wide data paths, such as 1024 or 2048 bits or more. Packet parsing requires flexibility in order to accommodate different protocols and hence different packet formats. Thus, the rules that specify how to process the protocol layers should be configurable. It is desirable that the configurability be both fast and interchangeable after a system has been implemented and deployed.</p>
<p id="p-0006" num="0005">The present invention may address one or more of the above issues.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0007" num="0006">One or more embodiments provide circuits and methods for selecting a field of data from a packet of data in an n-bit data path. In one embodiment, a first selector circuit has m inputs and an output. Each of the m inputs receives a respective subset of bits of the data path. The respective subset of bits input to each of the m inputs overlaps with the respective subset of bits of the data path input to another of the m inputs. The first selector circuit selects one of the subsets of bits for the output. Each shift-and-select stage of two or more shift-and-select stages, includes a respective second selector circuit that has up to m inputs and an output. The inputs of an initial one of the shift-and-select stages is coupled to the output of the first selector circuit, and the respective second selector circuit in each other of the two or more shift-and-select stages is coupled to the output of the respective second selector circuit in a preceding one of the shift-and-select stages. One of the inputs of the respective second selector circuit inputs an un-shifted version of the subset of bits, one or more others of the up to m inputs of the respective second selector circuit input different shifted versions of the subset of bits, and the respective second selector circuit outputs a selected one of the un-shifted or shifted versions of the subset of bits. The respective second selector circuit in a last one of the shift-and-select stages outputs one of the un-shifted or shifted versions of the subset of bits that includes the field of data aligned to the least significant bit.</p>
<p id="p-0008" num="0007">In another embodiment, a plurality of field extractor circuits is configured and arranged for parallel input of bits of an n-bit data path. Each field extractor circuit includes, respectively, a first selector circuit and two or more shift-and-select stages. The first selector circuit has m inputs and an output. Each of the m inputs receives a respective subset of bits of the data path. The respective subset of bits input to each of the m inputs overlaps with the respective subset of bits of the data path input to another of the m inputs, and the first selector circuit selects one of the subsets of bits for the output. Each shift-and-select stage includes a respective second selector circuit that has up to m inputs and an output. The inputs of an initial one of the shift-and-select stages are coupled to the output of the first selector circuit, and the respective second selector circuit in each other of the two or more shift-and-select stages is coupled to the output of the respective second selector circuit in a preceding one of the shift-and-select stages. One of the inputs of the respective second selector circuit inputs an un-shifted version of the subset of bits, one or more others of the up to m inputs of the respective second selector circuit input different shifted versions of the subset of bits, and the respective second selector circuit outputs a selected one of the un-shifted or shifted versions of the subset of bits. The respective second selector circuit in a last one of the shift-and-select stages outputs one of the un-shifted or shifted versions of the subset of bits that includes the field of data aligned to the least significant bit.</p>
<p id="p-0009" num="0008">A method for selecting a field of data from a packet of data in an n-bit data path is provided in another embodiment. The method includes inputting a respective subset of bits of the data path to each of m inputs of a first selector circuit. The respective subset of bits input to each of the m inputs overlaps with the respective subset of bits of the data path input to another of the m inputs. One of the subsets of bits is selected for output by the first selector circuit. The one of the subsets of bits is input to a respective second selector circuit in an initial one of two or more shift-and-select stages. In each of the two or more shift-and-select stages, an un-shifted version of the subset of bits is input to one of the inputs of the respective second selector circuit. A different shifted version of the subset of bits is input to one or more others of the up to m inputs of the respective second selector circuit. One of the un-shifted or different shifted versions of the subset of bits is selected for output by the respective second selector circuit. In each of the two or more shift-and-select stages other than the initial shift-and-select stage, the selected one of the versions of the subset of bits is input from a previous stage of the two or more shift-and-select stages. The selected one of the versions of the subset of bits that includes the field of data aligned to the least significant bit of the subset of bits is output from a last one of the two or more shift-and-select stages.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0010" num="0009">Various aspects and advantages of the invention will become apparent upon review of the following detailed description and upon reference to the drawings, in which:</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram of a circuit arrangement for extracting fields of a packet from an input data path;</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 2</figref> is a diagram of a field extractor circuit according to one embodiment;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram that shows the flow of data through the field extractor circuit for an example data path;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 4</figref> is a flowchart of a method for extracting a field from a packet; and</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 5</figref> is a block diagram of a programmable integrated circuit on which field extraction circuitry may be implemented in accordance with one or more embodiments of the invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0016" num="0015">One or more embodiments provide a circuit for extracting fields from packets that is both configurable and resource-efficient. With an input field size and offset (in numbers of bits, for example), a field can be extracted from an arbitrary packet in a data stream. The number of resources needed to extract a field of a packet from a data stream and also align the field for output increases substantially when the bus width of the input data stream becomes large (e.g., &#x3e;=1024 bits) due to the variability of where the field may reside in the input data stream.</p>
<p id="p-0017" num="0016">In one embodiment a circuit is provided for selecting a field of data from a packet of data in an n-bit data path. The circuit includes a first selector circuit followed by two or more shift-and-select stages. The first circuit selects a subset of bits of the data path in which the field resides, and that subset of bits is provided as input to an initial one of the shift-and-select stages. The shift-and-select stages are coupled in a pipelined manner.</p>
<p id="p-0018" num="0017">Each of the shift-and-select stages includes a respective second selector circuit. One of the inputs of the respective second selector circuit inputs an un-shifted version of the subset of bits, and one or more others of the inputs of the respective second selector circuit input different shifted versions of the subset of bits. Each respective second selector circuit outputs a selected one of the un-shifted or shifted versions of the subset of bits. The respective second selector circuit in a last one of the shift-and-select stages outputs one of the un-shifted or shifted versions of the subset of bits that includes the field of data aligned to the least significant bit.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram of a circuit arrangement <b>100</b> for extracting fields of a packet from an input data path. The circuit arrangement includes multiple field extractor circuits <b>102</b>-<b>1</b>-<b>102</b>-<i>z</i>, each of which is tasked with extracting a field of an input packet. A packet is received in input buffer <b>104</b> and provided to the field extractor circuits concurrently so that the field extractor circuits may operate in parallel and output the extracted fields simultaneously. Each of the field extractor circuits also inputs values indicative of the offset and size of the respective field to be extracted. The offset indicates the position of the field relative to the input data stream. The offset and size may be values that indicate bits or bytes depending on implementation requirements. Though bits are used in the embodiments and examples described herein, it will be appreciated that the teachings herein may be readily adapted to byte-wise implementations.</p>
<p id="p-0020" num="0019">In a system that accommodates different packet sizes, the size of a particular packet may not always align with the width of the input data path. Thus, if the width of the input data path provides one unit of data at a time (e.g., 1024 bits), a field of a particular packet may begin in one unit of data and end in the following unit of data (e.g., the next 1024 bits). In describing the embodiments, the data path is designated as being n bits wide. To accommodate fields that may span more than one unit of input data, a maximum field size, e, is configured, and n+e&#x2212;1 bits are provided as input to each of the field extractor circuits <b>102</b>-<b>1</b>-<b>102</b>-<i>z</i>. The maximum field size is the greatest field size possible for the different fields of the different packets that may be processed.</p>
<p id="p-0021" num="0020">Each field extractor circuit includes, respectively, a subset selector circuit <b>108</b>, two or more shift-and-select stages <b>110</b>, and a mask circuit <b>112</b>. The subset selector circuit <b>108</b> selects a subset of the input n+e&#x2212;1 bits in which the field to extract is located. The selected subset is based on one or more of the higher order bits of the input offset value, for example.</p>
<p id="p-0022" num="0021">The shift-and-select stages <b>110</b> receive the selected subset of bits from the subset selector circuit. Based on the offset value and the field size, the shift-and-select stages determine the location of the field to extract in the selected subset of bits. From stage to stage the shift-and-select stages select shifted versions of the subset based on the location. The output from the last stage in the shift-and-select stages contains the desired field that is right-aligned. The mask circuit <b>112</b> receives the right-aligned data from the shift-and-select stages <b>110</b> and masks the value using the input field size value.</p>
<p id="p-0023" num="0022">The output signal from comparator circuit <b>116</b> indicates when the output from the mask circuit is a valid field. The word counter <b>122</b> counts the number of valid words that have been seen in the input data stream for each input packet. Packet boundaries are signaled by using the start of frame and end of frame inputs. A start of frame is signaled when the word in which a packet begins can be found at the input. An end of frame is signaled when the word in which a packet ends can be found at the input. The word count is reset to zero with a start of frame event. The word count is used by each field extraction unit <b>102</b>-<b>1</b> to <b>102</b>-<i>z </i>to determine when the field to extract is available. The higher order bit(s) of the input offset are compared to the word count value to signal when the field is available. For example, if the input offset is for position <b>1096</b> (0b010001001000) with n=1024, then the field will be found in the second word of the packet. This is signaled by evaluating the comparison of word count==offset[12:11].</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 2</figref> is a diagram of a field extractor circuit <b>200</b> according to one embodiment. The field extractor circuit includes a first selector circuit <b>202</b>, which corresponds to the subset selector circuit <b>108</b> of <figref idref="DRAWINGS">FIG. 1</figref> and respective selector circuits <b>204</b>-<b>206</b> which correspond to the shift-and-select stages <b>110</b> of <figref idref="DRAWINGS">FIG. 1</figref>. Flip-flops <b>210</b> and <b>212</b>-<b>214</b> capture output from the selector circuits. Single flip-flops are shown for ease of illustration. However, it will be appreciated that multiple flip-flops would be used to capture the multiple bits of output. Mask generator circuit <b>218</b>, flip-flops <b>220</b> and <b>222</b>-<b>224</b>, and AND gate <b>226</b> correspond to the mask circuit <b>112</b> of <figref idref="DRAWINGS">FIG. 1</figref>. Output from AND gate <b>228</b> is captured by flip-flop <b>228</b> and is the extracted field.</p>
<p id="p-0025" num="0024">The input field offset and field size values are captured in flip-flops <b>230</b> and <b>232</b>, respectively. The right-shift compute circuit <b>234</b> determines the position of the desired field in the bits output by the selector circuit <b>202</b>, and that value is passed along in flip-flops <b>236</b> and <b>238</b> for use in controlling the selector circuits <b>204</b>-<b>206</b>. The word count is input to comparator circuit <b>240</b> along with the offset value, and the comparator circuit determines and signals when the word count equals the offset value. The signal value is propagated in flip-flops <b>242</b> and <b>244</b>-<b>246</b> to coincide with availability of data of the desired field in flip-flop <b>228</b>.</p>
<p id="p-0026" num="0025">For an n-bit data path, n+e&#x2212;1 bits are input to the field extractor circuit <b>200</b>, and different subsets of those n+e&#x2212;1 bits are input to the m inputs of the first selector circuit <b>202</b>. As described in reference to <figref idref="DRAWINGS">FIG. 1</figref>, e is the maximum field size that can be processed. Specifically, n/m+e&#x2212;1 bits are input to each of the inputs of the selector circuit <b>202</b>, and the subsets intersect or &#x201c;overlap&#x201d; by e&#x2212;1 bits to allow for a field that spans two of the subsets. The higher order bits of the offset value are used to control the selection of one of the subsets of bits by the selector circuit <b>202</b>. For example, if n=1024 and m=16 (number of inputs), then the 4 higher order bits ([9:6]) of the offset value may be used to select one of the 16 inputs.</p>
<p id="p-0027" num="0026">The selected subset of n/m+e&#x2212;1 bits is stored in flip-flop <b>210</b>. Different right-shifted versions of the selected subset of bits are provided as inputs to the selector circuit <b>204</b>, which is the initial or first of the shift-and-select stages. To the selector circuit in the initial stage, the different versions are shifted by one bit. One of the inputs receives an un-shifted version. For example, if n=1024, m=16, and e=32, then n/m+e&#x2212;1=95 bits. One input receives bits [94:0], another input receives bits [94:1], another input receives bits [94:2], and so on. The inputs to the selector circuit in subsequent stages receive versions that are shifted by multiple bits as will be explained further below.</p>
<p id="p-0028" num="0027">The selector circuit <b>204</b> selects one of the shifted versions in response to certain bits of the right-shift value computed by the right-shift compute circuit <b>234</b>. The right-shift compute circuit computes the right-shift value as a function of lower order bits of the offset, the field size, and the value of n/m+e&#x2212;1. Specifically, the right-shift value=n/m+e&#x2212;1&#x2212;offset[lower order bits]&#x2212;size. For an example 10-bit offset value (to accommodate a data path width of 1024 bits), higher order bits [9:6] are used for selector circuit <b>202</b>, and lower order bits [5:0] are used in computing the right shift value. From the right-shift value, the lower order log<sub>2</sub>m bits are used as the selection input to selector circuit <b>204</b>.</p>
<p id="p-0029" num="0028">Inputs to the stages other than the initial stage are versions of the selected subset of bits that are shifted by multiple bits as explained further below. Generally, the shift amount increases from one stage to the next, and within a stage, the shift amount is a multiple of m<sup>i</sup>, where h is the number of stages and 0&#x3c;=i&#x3c;=h&#x2212;1. Specifically, for inputs 0 through m&#x2212;1 in stage 1, the shift amounts are 0 through m&#x2212;1 (multiples of m<sup>0</sup>), respectively; for inputs 0 through m&#x2212;1 in stage 2, the shift amounts are 0, m, 2m, . . . (m&#x2212;2)m, (m&#x2212;1)m, respectively; for inputs 0 through m&#x2212;1 in stage 3, the shift amounts are 0, m<sup>2</sup>, 2m<sup>2</sup>, . . . (m&#x2212;2)m<sup>2</sup>, (m&#x2212;1)m<sup>2</sup>, respectively; and so on. It will be appreciated that smaller selector circuits having fewer inputs may be used in later stages since the shift amounts quickly outpace the subset of n/m+e&#x2212;1 bits.</p>
<p id="p-0030" num="0029">The selection of the subset of bits made by the selector circuits in stages following the initial stage uses higher order bits of the right-shift value. The number of higher order bits used from the right-shift value depends on the number of inputs from which the selection is made. Generally, for t inputs the high order log<sub>2</sub>t bits are used.</p>
<p id="p-0031" num="0030">The output from the selector circuit <b>206</b> in the last shift-and-select stage is e bits that are right aligned. These bits are ANDed with the e-bit mask that is output by the mask generator circuit <b>218</b>. For example, if e is 32 and the input size is 8, then the mask will be x000000ff.</p>
<p id="p-0032" num="0031">For a particular implementation, the number of stages and the numbers of inputs to the selector stages may be selected based on the packet size, field size, input data path width, and available circuit resources.</p>
<p id="p-0033" num="0032">The different shifted versions may be effectively provided to the inputs of the selector circuit by connecting the stored n/m+e&#x2212;1 bits to the bit lines (individual ones not shown) of the selector circuit in a manner that accomplishes the shift. For example, if n/m+e&#x2212;1 bits are stored and designated [MSB . . . LSB], to input a version of [MSB . . . LSB] that is shifted right by one bit, the LSB+1 bit is connected to the LSB input of the selector circuit, the LSB+2 bit is connected to the LSB+1 input, and so on; the stored LSB bit is not connected to any input of the selector circuit, except for the un-shifted input.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram that shows the flow of data through the field extractor circuit for an example data path width n=1024 bits, a maximum field size e=32 bits, and the subset selector circuit <b>302</b> and the selector circuit <b>304</b> in the initial stage having m=16 inputs. The field to extract is in bits [821:790] of the input n+e&#x2212;1 bits. Thus, the offset value is 202<sub>10 </sub>or 0b0011001010. Selector circuit <b>302</b> corresponds to selector circuit <b>202</b> of <figref idref="DRAWINGS">FIG. 2</figref> and narrows the data path from n bits to (n/m+e&#x2212;1) bits.</p>
<p id="p-0035" num="0034">Overlapping subsets of the n+e&#x2212;1 bits are provided to the inputs of the selector circuit <b>302</b>. Each input receives a subset that includes n/m+e&#x2212;1 bits of the input, and the subsets overlap by e&#x2212;1 bits (31 bits) as shown. Bits [9:6] (i.e., 0011) of the offset value are used to select from input 3 the subset of input bits [831:737] that contains the desired field.</p>
<p id="p-0036" num="0035">Different shifted versions of the selected [831:737] bits are provided to the inputs of selector circuit <b>304</b>. The selected [831:737] bits are shifted by 0, 1, 2, 3 . . . 15 positions for the inputs to the first stage selector circuit <b>304</b>. Thus, bits [831:737] are provided to input 0, bits [831:738] are provided to input 1, bits [831:739] are provided to input 2, . . . and bits [831:752] are provided to input 15.</p>
<p id="p-0037" num="0036">The right-shift value is calculated as (n/m+e&#x2212;1)&#x2212;offset[5:0]&#x2212;size as explained above. The computed right-shift value is used to control the selections by the selection circuits <b>304</b> and <b>306</b>. The value of offset[5:0] is 0b001010 (10<sub>10</sub>) and the value of size is 32, which in this example is equal to the maximum size, e. The computed right shift is (1024/16+32&#x2212;1)&#x2212;10&#x2212;32=53, or 0b0110101. The lower 4 bits ([3:0]) of the right-shift value are used to control the selection by the selector circuit <b>304</b> in the initial stage. Since bits [3:0] are 0b0101, input 5 is selected, which is a version of bits [831:737] shifted by 5 bits. This results in bits [831:742] being output by selector circuit <b>304</b>.</p>
<p id="p-0038" num="0037">Different shifted versions of the selected [831:742] bits are provided to the inputs of selector circuit <b>306</b>. The selected [831:742] bits are shifted by 0, 16, 32, 48, 64, and 80 positions for inputs 0-5, respectively, of the second stage selector circuit <b>306</b>. Thus, bits [831:742] are provided to input 0, bits [831:758] are provided to input 1, bits [831:774] are provided to input 2, bits [831:790] are provided to input 3, bits [831:806] are provided to input 4, and bits [831:822] are provided to input 5.</p>
<p id="p-0039" num="0038">Note that because of the example parameters, the final shifting stage does not require m (i.e., 16) inputs. Thus, a smaller selection circuit may be used. Unused inputs are tied to an unshifted version of the preceding data.</p>
<p id="p-0040" num="0039">The higher order bits of the right-shift value are used to control the selection by selector circuit <b>306</b>. In this example, 3 bits are needed to select from the 8 inputs of the selector circuit <b>306</b>. Thus, bits [6:4], which are 0b011, results in the selection of input 3. The selected version is bits 831:742 shifted by 48 bits. Thus, bits [831:790] are output. When the 32-bit mask is applied to the output value at AND gate <b>316</b>, the remaining data includes bits [821:790], which is the desired field. The final extracted field is aligned in the least significant bits in the output.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 4</figref> is a flowchart of a method for extracting a field from a packet. At block <b>402</b>, a subset of the input data in which the desired field is located is selected by a subset selector circuit. The subset selector circuit selects from overlapping subsets of the input data. The selected subset is provided to the selector circuit in a first shift-and-select stage at block <b>404</b>. Each input of the selector circuit in the first shift-and-select stage inputs a different shifted version of the selected subset at block <b>406</b>. At block <b>408</b>, the selector circuit in the first shift-and-select stage selects the one of the shifted versions in which the desired field is located, and at block <b>410</b> outputs the selected shifted version to the next shift-and-select stage. In the subsequent one of the shift-and-select stages, at block <b>412</b> different shifted versions of the selected subset from a previous stage are input to the inputs of the respective selector circuit. The selector circuit selects the one of the shifted versions in which the desired field is located for output. The process continues in subsequent shift-and-select stages up to the last stage. At block <b>414</b>, the selector circuit in the last shift-and-select stage, selects and outputs the shifted version which has the field aligned to the least-significant bit of the output.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 5</figref> is a block diagram of a programmable integrated circuit on which field extraction circuitry may be implemented in accordance with one or more embodiments of the invention. Programmable integrated circuits can include several different types of programmable logic blocks in the array. For example, <figref idref="DRAWINGS">FIG. 5</figref> illustrates an FPGA architecture <b>500</b> that includes a large number of different programmable tiles including multi-gigabit transceivers (MGTs) <b>501</b>, configurable logic blocks (CLBs) <b>502</b>, random access memory blocks (BRAMs) <b>503</b>, input/output blocks (IOBs) <b>504</b>, configuration and clocking logic (CONFIG/CLOCKS) <b>505</b>, digital signal processing blocks (DSPs) <b>506</b>, specialized input/output blocks (I/O) <b>507</b>, for example, e.g., clock ports, and other programmable logic <b>508</b> such as digital clock managers, analog-to-digital converters, system monitoring logic, and so forth. Some FPGAs also include dedicated processor blocks (PROC) <b>510</b> and internal and external reconfiguration ports (not shown).</p>
<p id="p-0043" num="0042">In some FPGAs, each programmable tile includes a programmable interconnect element (INT) <b>511</b> having standardized connections to and from a corresponding interconnect element in each adjacent tile. Therefore, the programmable interconnect elements taken together implement the programmable interconnect structure for the illustrated FPGA. The programmable interconnect element INT <b>511</b> also includes the connections to and from the programmable logic element within the same tile, as shown by the examples included at the top of <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0044" num="0043">For example, a CLB <b>502</b> can include a configurable logic element CLE <b>512</b> that can be programmed to implement user logic plus a single programmable interconnect element INT <b>511</b>. A BRAM <b>503</b> can include a BRAM logic element (BRL) <b>513</b> in addition to one or more programmable interconnect elements. Typically, the number of interconnect elements included in a tile depends on the height of the tile. In the pictured embodiment, a BRAM tile has the same height as five CLBs, but other numbers (e.g., four) can also be used. A DSP tile <b>506</b> can include a DSP logic element (DSPL) <b>514</b> in addition to an appropriate number of programmable interconnect elements. An <b>10</b>B <b>504</b> can include, for example, two instances of an input/output logic element (IOL) <b>515</b> in addition to one instance of the programmable interconnect element INT <b>511</b>. As will be clear to those of skill in the art, the actual I/O pads connected, for example, to the I/O logic element <b>515</b> are manufactured using metal layered above the various illustrated logic blocks, and typically are not confined to the area of the input/output logic element <b>515</b>.</p>
<p id="p-0045" num="0044">In the pictured embodiment, a columnar area near the center of the die (shown shaded in <figref idref="DRAWINGS">FIG. 5</figref>) is used for configuration, clock, and other control logic. Horizontal areas <b>509</b> extending from this column are used to distribute the clocks and configuration signals across the breadth of the FPGA.</p>
<p id="p-0046" num="0045">Some FPGAs utilizing the architecture illustrated in <figref idref="DRAWINGS">FIG. 5</figref> include additional logic blocks that disrupt the regular columnar structure making up a large part of the FPGA. The additional logic blocks can be programmable blocks and/or dedicated logic. For example, the processor block PROC <b>510</b> shown in <figref idref="DRAWINGS">FIG. 5</figref> spans several columns of CLBs and BRAMs.</p>
<p id="p-0047" num="0046">Note that <figref idref="DRAWINGS">FIG. 5</figref> is intended to illustrate only an exemplary FPGA architecture. The numbers of logic blocks in a column, the relative widths of the columns, the number and order of columns, the types of logic blocks included in the columns, the relative sizes of the logic blocks, and the interconnect/logic implementations included at the top of <figref idref="DRAWINGS">FIG. 5</figref> are purely exemplary. For example, in an actual FPGA more than one adjacent column of CLBs is typically included wherever the CLBs appear, to facilitate the efficient implementation of user logic.</p>
<p id="p-0048" num="0047">The embodiments of the present invention are thought to be applicable to a variety of packet processors. Other aspects and embodiments will be apparent to those skilled in the art from consideration of the specification. The embodiments may be implemented as one or more processors configured to execute software, as an application specific integrated circuit (ASIC), or as a logic on a programmable logic device. It is intended that the specification and illustrated embodiments be considered as examples only, with a true scope of the invention being indicated by the following claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A circuit for selecting a field of data from a packet of data in an n-bit data path, comprising:
<claim-text>a first selector circuit having m inputs and an output, wherein each of the m inputs receives a respective subset of bits of the data path, the respective subset of bits input to each of the m inputs overlaps with the respective subset of bits of the data path input to another of the m inputs, and the first selector circuit selects one of the subsets of bits for the output; and</claim-text>
<claim-text>two or more shift-and-select stages, each shift-and-select stage including a respective second selector circuit having up to m inputs and an output, the inputs of an initial one of the shift-and-select stages coupled to the output of the first selector circuit, and the respective second selector circuit in each other of the two or more shift-and-select stages coupled to the output of the respective second selector circuit in a preceding one of the shift-and-select stages, wherein:
<claim-text>one of the inputs of the respective second selector circuit inputs an un-shifted version of the subset of bits, one or more others of the up to m inputs of the respective second selector circuit input different shifted versions of the subset of bits, and the respective second selector circuit outputs a selected one of the un-shifted or shifted versions of the subset of bits; and</claim-text>
<claim-text>the respective second selector circuit in a last one of the shift-and-select stages outputs one of the un-shifted or shifted versions of the subset of bits that includes the field of data aligned to the least significant bit.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The circuit of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising a mask circuit configured and arranged with an input for receiving a value indicative of a field size and further configured and arranged to mask output from the respective second selector circuit in the last one of the shift-and-select stages.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The circuit of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the different shifted versions of the subset of bits are right-shifted versions.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The circuit of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first selector circuit is further configured and arranged to select the one of the subsets of bits responsive to an input value indicative of an offset of the field in the n-bit data path.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The circuit of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the different shifted versions of the subset of bits at the inputs of the respective second selector circuit in the initial one of the shift-and-select stages are versions shifted by multiples of one bit.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The circuit of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the different shifted versions of the subset of bits at the inputs of the respective second selector circuit in each of the shift-and-select stages other than the initial shift-and-select stage are versions shifted by multiple bits.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The circuit of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the first selector circuit, for a maximum field size of e, each of the m inputs receives n/m+e&#x2212;1 bits of the data path, respectively, and the respective n/m+e&#x2212;1 bits input to each of the m inputs overlap with the respective n/m+e&#x2212;1 bits of the data path input to another of the m inputs; and</claim-text>
<claim-text>the one or more others of the up to m inputs of the respective second selector circuit input different shifted versions of the n/m+e&#x2212;1 bits, and the respective second selector circuit outputs a selected one of the un-shifted or shifted versions of the n/m+e&#x2212;1 bits.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The circuit of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the two or more shift-and-select stages include h stages; and</claim-text>
<claim-text>the different shifted versions of the subset of bits at the inputs of the respective second selector circuit in each stage i of the shift-and-select stages, for 0&#x3c;=i&#x3c;=h&#x2212;1, are versions shifted by m<sup>i </sup>bits.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A circuit for selecting fields of data from a packet of data in an n-bit data path, comprising:
<claim-text>a plurality of field extractor circuits configured and arranged for parallel input of bits of the data path, wherein each field extractor circuit includes, respectively:
<claim-text>a first selector circuit having m inputs and an output, wherein each of the m inputs receives a respective subset of bits of the data path, the respective subset of bits input to each of the m inputs overlaps with the respective subset of bits of the data path input to another of the m inputs, and the first selector circuit selects one of the subsets of bits for the output; and</claim-text>
<claim-text>two or more shift-and-select stages, each shift-and-select stage including a respective second selector circuit having up to m inputs and an output, the inputs of an initial one of the shift-and-select stages coupled to the output of the first selector circuit, and the respective second selector circuit in each other of the two or more shift-and-select stages coupled to the output of the respective second selector circuit in a preceding one of the shift-and-select stages, wherein:
<claim-text>one of the inputs of the respective second selector circuit inputs an un-shifted version of the subset of bits, one or more others of the up to m inputs of the respective second selector circuit input different shifted versions of the subset of bits, and the respective second selector circuit outputs a selected one of the un-shifted or shifted versions of the subset of bits; and</claim-text>
<claim-text>the respective second selector circuit in a last one of the shift-and-select stages outputs one of the un-shifted or shifted versions of the subset of bits that includes the field of data aligned to the least significant bit.</claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The circuit of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein each field extractor circuit further includes, respectively, a mask circuit configured and arranged with an input for receiving a value indicative of a field size and configured and arranged to mask output from the respective second selector circuit in the last one of the shift-and-select stages.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The circuit of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the different shifted versions of the subset of bits are right-shifted versions.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The circuit of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the first selector circuit is further configured and arranged to select the one of the subsets of bits responsive to an input value indicative of an offset of the field in the n-bit data path.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The circuit of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the different shifted versions of the subset of bits at the inputs of the respective second selector circuit in the initial one of the shift-and-select stages are versions shifted by multiples of one bit.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The circuit of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the different shifted versions of the subset of bits at the inputs of the respective second selector circuit in each of the shift-and-select stages other than the initial shift-and-select stage are versions shifted by multiple bits.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A method for selecting a field of data from a packet of data in an n-bit data path, comprising:
<claim-text>inputting a respective subset of bits of the data path to each of m inputs of a first selector circuit, wherein the respective subset of bits input to each of the m inputs overlaps with the respective subset of bits of the data path input to another of the m inputs;</claim-text>
<claim-text>selecting one of the subsets of bits for output by the first selector circuit;</claim-text>
<claim-text>inputting the one of the subsets of bits to a respective second selector circuit in an initial one of two or more shift-and-select stages;</claim-text>
<claim-text>in each of the two or more shift-and-select stages:
<claim-text>inputting an un-shifted version of the subset of bits to one of the inputs of the respective second selector circuit;</claim-text>
<claim-text>inputting a different shifted version of the subset of bits to one or more others of the up to m inputs of the respective second selector circuit; and</claim-text>
<claim-text>selecting one of the un-shifted or different shifted versions of the subset of bits for output by the respective second selector circuit;</claim-text>
</claim-text>
<claim-text>in each of the two or more shift-and-select stages other than the initial shift-and-select stage, inputting the selected one of the versions of the subset of bits from a previous stage of the two or more shift-and-select stages; and</claim-text>
<claim-text>outputting from a last one of the two or more shift-and-select stages the selected one of the versions of the subset of bits that includes the field of data aligned to the least significant bit of the subset of bits.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:
<claim-text>inputting a value indicative of a field size; and</claim-text>
<claim-text>masking output from the last one of the shift-and-select stages.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the different shifted versions of the subset of bits are right-shifted versions.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:
<claim-text>inputting a value indicative of an offset of the field in the n-bit data path;</claim-text>
<claim-text>wherein the selecting of the one of the subsets of bits for output by the first selector circuit is in response to the value of the offset.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the different shifted versions of the subset of bits at the inputs of the respective second selector circuit in the initial one of the shift-and-select stages are versions shifted by multiples of one bit.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the different shifted versions of the subset of bits input to the respective second selector circuit in each of the shift-and-select stages other than the initial shift-and-select stage are versions shifted by multiple bits. </claim-text>
</claim>
</claims>
</us-patent-grant>
