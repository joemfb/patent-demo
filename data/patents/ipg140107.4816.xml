<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625909-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625909</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13019699</doc-number>
<date>20110202</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2010-059117</doc-number>
<date>20100316</date>
</priority-claim>
<priority-claim sequence="02" kind="national">
<country>JP</country>
<doc-number>2010-247587</doc-number>
<date>20101104</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>259</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>K</subclass>
<main-group>9</main-group>
<subgroup>36</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>382232</main-classification>
</classification-national>
<invention-title id="d2e90">Image encoding apparatus and method, image decoding apparatus and method, and program</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6263109</doc-number>
<kind>B1</kind>
<name>Ordentlich et al.</name>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382232</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6510247</doc-number>
<kind>B1</kind>
<name>Ordentlich et al.</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382232</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6804402</doc-number>
<kind>B2</kind>
<name>Andrew</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382240</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7031531</doc-number>
<kind>B1</kind>
<name>Saiga et al.</name>
<date>20060400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382232</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2002/0051560</doc-number>
<kind>A1</kind>
<name>Donescu et al.</name>
<date>20020500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382100</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2002/0081036</doc-number>
<kind>A1</kind>
<name>Okada</name>
<date>20020600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382243</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2004/0146209</doc-number>
<kind>A1</kind>
<name>Kadowaki et al.</name>
<date>20040700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382233</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2004/0252897</doc-number>
<kind>A1</kind>
<name>Hara et al.</name>
<date>20041200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382239</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2006/0008162</doc-number>
<kind>A1</kind>
<name>Chen et al.</name>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382239</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>JP</country>
<doc-number>3918263</doc-number>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00011">
<othercit>U.S. Appl. No. 13/442,199, filed Apr. 9, 2012, Wada.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00012">
<othercit>David S. Taubman et al., &#x201c;Image Compression Fundamentals, Standards and Practice&#x201d;, JPEG 2000, 7 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>382232-253</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>41</number-of-drawing-sheets>
<number-of-figures>64</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110229047</doc-number>
<kind>A1</kind>
<date>20110922</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Shimauchi</last-name>
<first-name>Kazuhiro</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Wada</last-name>
<first-name>Yuji</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Ikeda</last-name>
<first-name>Hiroshi</first-name>
<address>
<city>Kanagawa</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Tahara</last-name>
<first-name>Daisuke</first-name>
<address>
<city>Chiba</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Shimauchi</last-name>
<first-name>Kazuhiro</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Wada</last-name>
<first-name>Yuji</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Ikeda</last-name>
<first-name>Hiroshi</first-name>
<address>
<city>Kanagawa</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Tahara</last-name>
<first-name>Daisuke</first-name>
<address>
<city>Chiba</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Oblon, Spivak, McClelland, Maier &#x26; Neustadt, L.L.P.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Sony Corporation</orgname>
<role>03</role>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Liew</last-name>
<first-name>Alex</first-name>
<department>2668</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">An image encoding apparatus includes a band division unit configured to perform frequency band division for generating coefficient data of each of a plurality of frequency bands from image data of a block unit and, with regard to the frequency band division, to perform frequency band division of the coefficient data of the low-band component after rearranging a spatial position with respect to coefficient data of a low-band component obtained by frequency band division, and an encoding unit configured to perform encoding of the coefficient data of each of the plurality of frequency bands.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="86.78mm" wi="148.76mm" file="US08625909-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="216.58mm" wi="101.43mm" file="US08625909-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="164.85mm" wi="150.54mm" file="US08625909-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="138.18mm" wi="126.07mm" file="US08625909-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="254.68mm" wi="121.92mm" orientation="landscape" file="US08625909-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="168.23mm" wi="95.33mm" file="US08625909-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="222.00mm" wi="168.91mm" file="US08625909-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="216.58mm" wi="128.02mm" orientation="landscape" file="US08625909-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="192.02mm" wi="115.06mm" file="US08625909-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="254.00mm" wi="132.76mm" orientation="landscape" file="US08625909-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="245.87mm" wi="112.35mm" orientation="landscape" file="US08625909-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="142.32mm" wi="160.02mm" file="US08625909-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="122.60mm" wi="155.96mm" file="US08625909-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="239.69mm" wi="114.38mm" orientation="landscape" file="US08625909-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="217.25mm" wi="161.37mm" file="US08625909-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="123.95mm" wi="101.43mm" file="US08625909-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="145.71mm" wi="157.99mm" file="US08625909-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="139.62mm" wi="140.97mm" file="US08625909-20140107-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="254.68mm" wi="166.20mm" file="US08625909-20140107-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="198.20mm" wi="168.23mm" file="US08625909-20140107-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="171.62mm" wi="158.67mm" file="US08625909-20140107-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="249.26mm" wi="88.56mm" orientation="landscape" file="US08625909-20140107-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00022" num="00022">
<img id="EMI-D00022" he="223.35mm" wi="91.95mm" orientation="landscape" file="US08625909-20140107-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00023" num="00023">
<img id="EMI-D00023" he="190.25mm" wi="153.50mm" file="US08625909-20140107-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00024" num="00024">
<img id="EMI-D00024" he="204.98mm" wi="159.34mm" file="US08625909-20140107-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00025" num="00025">
<img id="EMI-D00025" he="111.68mm" wi="173.65mm" file="US08625909-20140107-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00026" num="00026">
<img id="EMI-D00026" he="108.29mm" wi="154.60mm" file="US08625909-20140107-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00027" num="00027">
<img id="EMI-D00027" he="237.66mm" wi="71.54mm" orientation="landscape" file="US08625909-20140107-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00028" num="00028">
<img id="EMI-D00028" he="215.90mm" wi="166.88mm" file="US08625909-20140107-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00029" num="00029">
<img id="EMI-D00029" he="209.04mm" wi="126.66mm" orientation="landscape" file="US08625909-20140107-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00030" num="00030">
<img id="EMI-D00030" he="85.77mm" wi="139.62mm" file="US08625909-20140107-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00031" num="00031">
<img id="EMI-D00031" he="254.00mm" wi="138.26mm" orientation="landscape" file="US08625909-20140107-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00032" num="00032">
<img id="EMI-D00032" he="196.17mm" wi="106.26mm" file="US08625909-20140107-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00033" num="00033">
<img id="EMI-D00033" he="126.66mm" wi="160.02mm" file="US08625909-20140107-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00034" num="00034">
<img id="EMI-D00034" he="247.23mm" wi="81.03mm" orientation="landscape" file="US08625909-20140107-D00034.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00035" num="00035">
<img id="EMI-D00035" he="241.72mm" wi="106.26mm" orientation="landscape" file="US08625909-20140107-D00035.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00036" num="00036">
<img id="EMI-D00036" he="249.94mm" wi="124.63mm" orientation="landscape" file="US08625909-20140107-D00036.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00037" num="00037">
<img id="EMI-D00037" he="191.35mm" wi="106.26mm" file="US08625909-20140107-D00037.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00038" num="00038">
<img id="EMI-D00038" he="128.69mm" wi="157.31mm" file="US08625909-20140107-D00038.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00039" num="00039">
<img id="EMI-D00039" he="212.51mm" wi="150.54mm" orientation="landscape" file="US08625909-20140107-D00039.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00040" num="00040">
<img id="EMI-D00040" he="143.00mm" wi="171.62mm" file="US08625909-20140107-D00040.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00041" num="00041">
<img id="EMI-D00041" he="226.82mm" wi="149.18mm" orientation="landscape" file="US08625909-20140107-D00041.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0002" num="0001">1. Field of the Invention</p>
<p id="p-0003" num="0002">The present invention relates to an image encoding apparatus and method, an image decoding apparatus and method, and a program, which are able to reduce block distortion and increase encoding efficiency.</p>
<p id="p-0004" num="0003">2. Description of the Related Art</p>
<p id="p-0005" num="0004">In recent years, due to trends toward higher resolutions or higher frame rates of image data, it is increasingly difficult to handle numerous data using limited resources within a unit of time, in an image processing system. For example, as shown in <figref idref="DRAWINGS">FIG. 1</figref>, in a case where a memory <b>85</b> is used in a procedure to perform image processing using an image processing system <b>80</b>, since a high-capacity memory and a wide bus bandwidth necessary for data transmission to be secured, it is difficult to miniaturize the system and to reduce costs. For example, in Japanese Patent No. 3918263, as shown in <figref idref="DRAWINGS">FIG. 2</figref>, an image encoding unit <b>81</b> is provided between the image processing system <b>80</b> and the memory <b>85</b> and image data is encoded before being stored in the memory so as to reduce the amount of data. In addition, an image decoding unit <b>82</b> is provided between the image processing system <b>80</b> and the memory <b>85</b> and encoded data stored in the memory <b>85</b> is decoded when being read out such that image data is obtained.</p>
<p id="p-0006" num="0005">In Japanese Patent No. 3918263, differential pulse code modulation (hereinafter, referred to as DPCM) with relatively low throughput is used in an encoding method upon memory storage. For example, in data corresponding to 5 pixels (40 bits), in which one pixel has 8 bits, a first pixel is set to 8 bits and each of the second to fifth pixels is set to 6 bits by obtaining the difference between neighboring pixels and performing quantization. Accordingly, after DPCM, 32 bits are obtained by 5 pixels, thereby realizing &#x2158; compression. In addition, in Japanese Patent No. 3918263, by realizing a DPCM unit by a small block unit or a bus transmission unit, it is possible to realize random access and to reduce memory capacity and bus bandwidth while maintaining the original memory access efficiency of the image processing system.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0007" num="0006">However, since the encoding method described in Japanese Patent No. 3918263 is a simple DPCM, it is easy to maintain memory access efficiency. However, the image data read out from the memory and decoded may deteriorate greatly.</p>
<p id="p-0008" num="0007">In a general image encoding method of the related art, there is a method with higher encoding efficiency (for example, H.264/AVC (Advanced Video Coding) or JPEG (Joint Photographic Experts Group) 2000). However, in such an image encoding method, it is difficult to efficiently perform encoding under conditions such as a simple small block unit or bus transmission unit as described above.</p>
<p id="p-0009" num="0008">In the general image encoding method of the related art, from the viewpoint of encoding efficiency, since variable-length encoding is frequently used compared with fixed-length encoding, a desired bit length may not be obtained as the DPCM described in Japanese Patent No. 3918263. Accordingly, encoding is performed so as to obtain a predetermined bit length or less and the remaining bits are padded with invalid bits so as to suit a bus transmission unit. However, in a small bus transmission unit, including such invalid bits is not efficient.</p>
<p id="p-0010" num="0009">In the general image encoding method of the related art, if an image is encoded in a state of being divided into blocks, block distortion may occur on a boundary between blocks. In order to reduce this block distortion, a deblocking filter is generally used in decoding, but the block distortion upon encoding is not lessened.</p>
<p id="p-0011" num="0010">It is desirable to provide an image encoding apparatus and an image encoding method capable of obtaining a decoded image with low block distortion even when image encoding is performed in block units, an image decoding apparatus and an image decoding method capable of decoding an encoded image, and a program.</p>
<p id="p-0012" num="0011">According to an embodiment of the invention, there is provided an image encoding apparatus including: a band division unit configured to perform frequency band division for generating coefficient data of each of a plurality of frequency bands from image data of a block unit and, with regard to the frequency band division, to perform frequency band division of the coefficient data of the low-band component after rearranging a spatial position with respect to coefficient data of a low-band component obtained by frequency band division; and an encoding unit configured to perform encoding of the coefficient data of each of the plurality of frequency bands.</p>
<p id="p-0013" num="0012">In the invention, frequency band division of image data of a block unit is performed. In the frequency band division, after rearranging a spatial position with respect to coefficient data of a low-band component obtained by frequency band division, frequency band division of the coefficient data of the low-band component is performed, and the coefficient data of each of the plurality of frequency bands is generated. In the frequency band division, for example, a lifting operation and deinterleaving are performed. In the lifting operation, extension of image data is performed in an end of a block, and coefficient data is generated using the extended image data. The coefficient data generated by the lifting operation is divided for each frequency band by deinterleaving. In the coefficient data of the low-band component, rearrangement of the spatial position is performed such that the position of the coefficient data generated using the extended image data is moved. For example, the position of the coefficient data is inverted. The coefficient data is divided as the sub-block for each predetermined number and a variation in distortion amount of an image when the bit plane of the coefficient data is truncated for each sub-block is estimated. Weighting is performed with respect to the estimation result such that a sub-block located on an end of the block is not easily truncated compared with a sub-block of another position. Based on the estimation result after weighting, truncation is performed such that an image distortion amount is low and a code amount is within a target code amount and encoding is performed.</p>
<p id="p-0014" num="0013">According to another embodiment of the invention, there is provided an image encoding method including the steps of: performing frequency band division for generating coefficient data of each of a plurality of frequency bands from image data of a block unit and, with regard to the frequency band division, performing frequency band division of the coefficient data of the low-band component after rearranging a spatial position with respect to coefficient data of a low-band component obtained by frequency band division, in a band division unit; and performing encoding of the coefficient data of each of the plurality of frequency bands, in an encoding unit.</p>
<p id="p-0015" num="0014">According to another embodiment of the invention, there is provided a program for, on a computer, executing a process including the steps of: performing frequency band division for generating coefficient data of each of a plurality of frequency bands from image data of a block unit and, with regard to the frequency band division, performing frequency band division of the coefficient data of the low-band component after rearranging a spatial position with respect to coefficient data of a low-band component obtained by frequency band division; and performing encoding of the coefficient data of each of the plurality of frequency bands.</p>
<p id="p-0016" num="0015">According to another embodiment of the invention, there is provided an image encoding apparatus including: a band division unit configured to perform frequency band division of image data of a block unit and to generate coefficient data of each of a plurality of frequency bands; an encoding unit configured to perform encoding of the coefficient data of each of the plurality of frequency bands; a distortion characteristic estimation unit configured to estimate a variation in distortion amount of an image when a bit plane of the coefficient data is truncated and to perform weighting with respect to the estimation result, for each sub-block obtained by dividing the coefficient data for each predetermined number; and a truncation unit configured to detect a truncation position in which image distortion is low and a code amount is within a target code amount based on the weighted estimation result and to perform truncation of the bit plane.</p>
<p id="p-0017" num="0016">According to another embodiment of the invention, there is provided an image encoding method including the steps of: performing frequency band division of image data of a block unit and generating coefficient data of each of a plurality of frequency bands, in a band division unit; performing encoding of the coefficient data of each of the plurality of frequency bands, in an encoding unit; estimating a variation in distortion amount of an image when a bit plane of the coefficient data is truncated and performing weighting with respect to the estimation result, for each sub-block obtained by dividing the coefficient data for each predetermined number, in a distortion characteristic estimation unit; and detecting a truncation position in which image distortion is low and a code amount is within a target code amount based on the weighted estimation result and performing truncation of the bit plane, in a truncation unit.</p>
<p id="p-0018" num="0017">According to another embodiment of the invention, there is provided a program for, on a computer, executing a process including the steps of: performing frequency band division of image data of a block unit and generating coefficient data of each of a plurality of frequency bands; performing encoding the coefficient data of each of the plurality of frequency bands; estimating a variation in distortion amount of an image when a bit plane of the coefficient data is truncated and performing weighting with respect to the estimation result, for each sub-block obtained by dividing the coefficient data for each predetermined number; and detecting a truncation position in which image distortion is low and a code amount is within a target code amount based on the weighted estimation result and performing truncation of the bit plane.</p>
<p id="p-0019" num="0018">According to another embodiment of the invention, there is provided an image decoding apparatus including: a decoding unit configured to decode an encoded data in which coefficient data obtained by performing frequency band division of image data of a block unit is encoded; and a band synthesis unit configured to perform frequency band synthesis of the coefficient data of each of a plurality of frequency bands and to generate image data of a block unit, after returning the coefficient data obtained by the decoding to an order before rearrangement.</p>
<p id="p-0020" num="0019">According to another embodiment of the invention, there is an image decoding method including the step of: decoding an encoded data in which coefficient data obtained by performing frequency band division of image data of a block unit is encoded, in a decoding unit; and performing frequency band synthesis of the coefficient data of each of a plurality of frequency bands and generating image data of a block unit, after returning the coefficient data obtained by the decoding to an order before rearrangement, in a band synthesis unit.</p>
<p id="p-0021" num="0020">According to another embodiment of the invention, there is a program for, on a computer, executing a process including the steps of: decoding an encoded data in which coefficient data obtained by performing frequency band division of image data of a block unit is encoded; and performing frequency band synthesis of the coefficient data of each of a plurality of frequency bands and generating image data of a block unit, after returning the coefficient data obtained by the decoding to an order before rearrangement.</p>
<p id="p-0022" num="0021">The program of the invention is a program which may be provided to, for example, a general-purpose computer system for executing various program codes by a storage medium provided in a computer readable format or a communication medium, for example, a storage medium such as an optical disc, a magnetic disk and a semiconductor memory or a communication medium such as a network. By providing such a program in a computer readable format, a process according to a program on a computer system is realized.</p>
<p id="p-0023" num="0022">According to the invention, in frequency band division for generating coefficient data of each of a plurality of frequency bands from image data of a block unit, the spatial position is rearranged with respect to the coefficient data of the low-band component obtained by frequency band division and frequency band division of the coefficient data of the low-band component is performed. In addition, encoding of the generated coefficient data of each of the plurality of frequency bands is performed. To this end, even when image data is extended in the end of the block so as to repeat frequency band division, the position of the coefficient data of the low-band component generated using the extended image data is not fixed. Accordingly, influence of deterioration of band division precision is not repeatedly applied due to the use of the extended image data. Even when image encoding is performed in block units, a decoded image with low block distortion may be obtained.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram illustrating an image processing system of the related art;</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 2</figref> is a diagram illustrating another image processing system of the related art;</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram showing the configuration of an image processing apparatus;</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 4</figref> is a flowchart illustrating an operation of an image processing apparatus;</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 5</figref> is a diagram showing the configuration of an image encoding unit according to a first embodiment;</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 6</figref> is a flowchart illustrating an operation of an image encoding unit according to a first embodiment;</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIGS. 7A to 7F</figref> are diagrams illustrating an operation of a band division unit when a 5&#xd7;3 lifting configuration is used;</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 8</figref> is a diagram illustrating extension of image data;</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIGS. 9A and 9B</figref> are diagrams showing two-dimensional band division;</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 10</figref> is a diagram showing decompression of absolute values of Modified Discrete Wavelet Transform (MDWT) coefficient data in a bit depth direction;</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 11</figref> is a diagram showing a transform table of Zero Bit Plane (ZBP);</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 12</figref> is a flowchart illustrating an operation of the case of performing an entropy-encoding method of an index IDXzbp of ZBP;</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 13</figref> is a flowchart illustrating another operation of the case of performing an entropy-encoding method of an index IDXzbp of ZBP;</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 14</figref> is a diagram showing a transform table of Truncation Point (TP);</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 15</figref> is a flowchart illustrating an operation of the case of performing an entropy-encoding method of an index IDXtp of TP;</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 16</figref> is a flowchart illustrating another operation of the case of performing an entropy-encoding method of an index IDXtp of TP;</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 17</figref> is a diagram illustrating Significant Bit (SB) flag;</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 18</figref> is a flowchart illustrating an operation of the case of performing an entropy-encoding method of a bit plane;</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 19</figref> is a diagram showing an R-D curve;</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIGS. 20A to 20C</figref> are (first) diagrams illustrating an operation of a truncation unit;</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIGS. 21A to 21B</figref> are (second) diagrams illustrating an operation of a truncation unit;</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 22</figref> is a flowchart showing an operation of a truncation unit;</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 23</figref> is a diagram showing an example of a format;</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 24</figref> is a diagram showing the configuration of an image decoding unit according to a first embodiment;</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 25</figref> is a flowchart illustrating an operation of an image decoding unit according to a first embodiment;</p>
<p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. 26</figref> is a flowchart illustrating a decoding operation of an index IDxzbp of ZBP;</p>
<p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. 27</figref> is a flowchart illustrating a decoding operation of an index IDxtp of TP;</p>
<p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. 28</figref> is a diagram showing the result of decoding an index IDXzbp of ZBP and an index IDXtp of TP;</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 29</figref> is a flowchart illustrating a decoding operation of a bit stream representing an absolute value of coefficient data;</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 30</figref> is a diagram showing estimation data;</p>
<p id="p-0054" num="0053"><figref idref="DRAWINGS">FIGS. 31A to 31F</figref> are diagrams illustrating an operation of a band synthesis unit;</p>
<p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. 32</figref> is a diagram showing the simple configuration of an image decoding unit;</p>
<p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. 33</figref> is a diagram showing the simple configuration of an image encoding unit;</p>
<p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. 34</figref> is a diagram showing the configuration of an image decoding unit according to a second embodiment;</p>
<p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. 35</figref> is a flowchart illustrating an operation of an image decoding unit according to a second embodiment;</p>
<p id="p-0059" num="0058"><figref idref="DRAWINGS">FIGS. 36A to 36D</figref> are diagrams showing a transform process of Haar transform;</p>
<p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. 37</figref> is a transform table showing a relationship among a ZBP orthogonal transform result DTtzbp, an index IDXtzbp and a symbol;</p>
<p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. 38</figref> is a transform table showing a relationship among a context, an index IDXtzbp and a symbol;</p>
<p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. 39</figref> is a diagram showing the configuration of an image decoding unit according to a third embodiment;</p>
<p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. 40</figref> is a flowchart illustrating an operation of an image decoding unit according to a third embodiment;</p>
<p id="p-0064" num="0063"><figref idref="DRAWINGS">FIGS. 41A to 41D</figref> are diagrams showing a transform process of inverse Haar transform;</p>
<p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. 42</figref> is a diagram showing the configuration of an image encoding unit according to a fourth embodiment;</p>
<p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. 43</figref> is a diagram showing the configuration of an image decoding unit according to a fourth embodiment;</p>
<p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. 44</figref> is a diagram showing the hardware configuration of a computer.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
<p id="p-0068" num="0067">Hereinafter, embodiments for carrying out the invention will be described. If image data includes a plurality of component signals (for example, image data is an RGB signal, a YUV signal or the like), encoding or decoding is performed for each component signal. However, in order to simplify description, only encoding and decoding of one component signal will be described. Description will be given in the following order:</p>
<p id="p-0069" num="0068">1. Configuration and Operation of Image Processing Apparatus</p>
<p id="p-0070" num="0069">2. First Embodiment</p>
<p id="p-0071" num="0070">3. Second Embodiment</p>
<p id="p-0072" num="0071">4. Third Embodiment</p>
<p id="p-0073" num="0072">5. Fourth Embodiment</p>
<p id="p-0074" num="0073">6. Case where Encoding and Decoding are performed by Computer</p>
<heading id="h-0005" level="1">1. Configuration and Operation of Image Processing Apparatus</heading>
<p id="p-0075" num="0074"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram showing the configuration of an image processing apparatus <b>10</b>. The image processing apparatus <b>10</b> includes an image encoding unit <b>20</b> and an image decoding unit <b>30</b>. The image encoding unit <b>20</b> has a function for encoding image data output from an imaging device, an image processing system unit <b>12</b> or the like in block units of M&#xd7;N pixels and outputting encoded data. The encoded data is, for example, transmitted to the image decoding unit <b>30</b> through a medium <b>14</b> such as a memory or a hard disk or a network. The image decoding unit <b>30</b> performs decoding of the encoded data and outputs image data of block units of M&#xd7;N pixels.</p>
<p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. 4</figref> is a flowchart illustrating an operation of the image processing apparatus <b>10</b>. In step ST<b>1</b>, the image encoding unit <b>20</b> performs encoding of image data. The image encoding unit <b>20</b> encodes the image data in block units of M&#xd7;N pixels, generates encoded data, and progresses to step ST<b>2</b>. In step ST<b>2</b>, the image encoding unit <b>20</b> sends the encoded data to the image decoding unit <b>30</b> through a memory, a medium or a network. In step ST<b>3</b>, the image decoding unit <b>30</b> performs decoding of encoded data. The image decoding unit <b>30</b> performs decoding of the transmitted encoded data and obtains image data of block units of M&#xd7;N pixels.</p>
<p id="p-0077" num="0076">The image encoding unit <b>20</b> performs encoding of image data in block units of M&#xd7;N pixels. In addition, the image decoding unit <b>30</b> performs decoding of the encoded data generated by the image encoding unit <b>20</b> and obtains the image data of block units of M&#xd7;N pixels. In this way, it is possible to perform processing in block units and to easily perform random access or the like. Since encoding or decoding necessary not be performed with respect to a block of an unnecessary image part, it is possible to reduce memory capacity and bus bandwidth while maintaining memory access efficiency.</p>
<p id="p-0078" num="0077">The image encoding unit <b>20</b> performs encoding of image data such that block distortion is lessened even when encoding of image data is performed in block units.</p>
<heading id="h-0006" level="1">2. First Embodiment</heading>
<p id="h-0007" num="0000">[2-1. Configuration of Image Encoding Unit of First Embodiment]</p>
<p id="p-0079" num="0078"><figref idref="DRAWINGS">FIG. 5</figref> is a diagram showing the configuration of an image encoding unit according to a first embodiment. The image encoding unit <b>20</b>-<b>1</b> includes a DC level shift unit <b>21</b>, a band division unit <b>22</b>, a Significant Bit (SB)/Zero Bit Plane (ZBP) detection unit <b>23</b>, an entropy-encoding unit <b>24</b>, a distortion characteristic estimation unit <b>25</b>, a truncation unit <b>26</b> and a packing unit <b>27</b>.</p>
<p id="p-0080" num="0079">The DC level shift unit <b>21</b> performs level shift of a DC component of image data, in order to efficiently perform frequency band division by the band division unit <b>22</b>. The DC level shift unit <b>21</b>, for example, subtracts a DC value from input image data DVa of a block unit of M&#xd7;N pixels and outputs the subtracted value to the band division unit <b>22</b>. The DC level shift unit <b>21</b> uses, for example, a value of half of a dynamic range of image data DVa or an average value of image data DVa within a block of M&#xd7;N pixels as a DC value. In addition, the DC value may be set to the same value by the image encoding unit <b>20</b>-<b>1</b> and the below-described image decoding unit <b>30</b>-<b>1</b> in advance or may be added to encoded data as additional information and supplied to the image decoding unit <b>30</b>-<b>1</b>.</p>
<p id="p-0081" num="0080">The band division unit <b>22</b> performs frequency band division of image data DVb output from the DC level shift unit <b>21</b>. The band division unit <b>22</b> performs frequency band division again after rearranging a spatial position with respect to coefficient data of a low-band component obtained by frequency band division and generates coefficient data of each of a plurality of frequency bands from image data within a block of M&#xd7;N pixels. The band division unit <b>22</b> performs frequency band division using, for example, Modified Discrete Wavelet Transform (MDWT). In MDWT, in addition to Discrete Wavelet Transform (DWT), in order to lessen the influence of deterioration of band division precision which is prone to appear in a block boundary of M&#xd7;N pixels as distortion, the spatial position is rearranged with respect to coefficient data of a low-band component. Details of MDWT will be described later. The band division unit <b>22</b> outputs an absolute value CEa of MDWT coefficient data obtained by performing MDWT to the SB/ZBP detection unit <b>23</b>, the entropy-encoding unit <b>24</b> and the distortion characteristic estimation unit <b>25</b>. In addition, the band division unit <b>22</b> outputs a code CEs of the MDWT coefficient data obtained by performing MDWT to the truncation unit <b>26</b>.</p>
<p id="p-0082" num="0081">The SB/ZBP detection unit <b>23</b> detects a Significant Bit (SB) and a Zero Bit Plane (ZBP) from the absolute value of the MDWT coefficient data. The SB/ZBP detection unit <b>23</b> outputs an SB detection result DTsb to the entropy-encoding unit <b>24</b> and the distortion characteristic estimation unit <b>25</b>. In addition, the SB/ZBP detection unit <b>23</b> supplies a ZBP detection result DTzbp to the entropy-encoding unit <b>24</b>, the distortion characteristic estimation unit <b>25</b> and the truncation unit <b>26</b>.</p>
<p id="p-0083" num="0082">The entropy-encoding unit <b>24</b> entropy-encodes a bit plane of the absolute value CEa of the MDWT coefficient data, a ZBP and a Truncation Point (TP), using the absolute value CEa of the MDWT coefficient data, the SB detection result DTsb and the ZBP detection result DTzbp. The entropy-encoding unit <b>24</b> outputs a bit stream BSa obtained by performing entropy-encoding on the truncation unit <b>26</b>. In addition, the entropy-encoding unit <b>24</b> outputs a bit stream length DTbs obtained by performing entropy-encoding to the distortion characteristic estimation unit <b>25</b> and the truncation unit <b>26</b>. In addition, the entropy-encoding unit <b>24</b> outputs a mode flag MF obtained by performing entropy-encoding to the packing unit <b>27</b>.</p>
<p id="p-0084" num="0083">The distortion characteristic estimation unit <b>25</b> performs distortion characteristic estimation based on the absolute value CEa of the MDWT coefficient data, the SB detection result DTsb, the ZBP detection result DTzbp and the bit stream length DTbs and outputs a distortion characteristic estimation result Erd to the truncation unit <b>26</b>. Specifically, a relationship between a variation in code amount and a variation in distortion amount of the image when performing truncation of the MDWT coefficient data is estimated to be the distortion characteristic.</p>
<p id="p-0085" num="0084">The truncation unit <b>26</b> decides a bit stream and a code of encoding symmetry such that a code amount is within a predetermined target code amount using the bit stream BSa, the bit stream length DTbs, the ZBP detection result DTzbp, the code CEs and the distortion characteristic estimation result Erd. That is, the truncation unit <b>26</b> performs truncation of the bit stream and the code such that image distortion is low and a code amount is within a target code amount and outputs a truncated bit stream (including a code) BSb to the packing unit <b>27</b>.</p>
<p id="p-0086" num="0085">The packing unit <b>27</b> transforms the truncated bit stream BSb and the mode flag MF into a predetermined format and prepares encoded data Dpd which is decodable by the image decoding unit <b>30</b>-<b>1</b>. The packing unit <b>27</b> outputs the prepared encoded data Dpd from the image encoding unit <b>20</b>-<b>1</b>.</p>
<p id="h-0008" num="0000">[2-2. Operation of Image Encoding Unit of First Embodiment]</p>
<p id="p-0087" num="0086"><figref idref="DRAWINGS">FIG. 6</figref> is a flowchart illustrating an operation of an image encoding unit according to a first embodiment. In step ST<b>11</b>, the image encoding unit <b>20</b>-<b>1</b> performs DC level shift. The image encoding unit <b>20</b>-<b>1</b> performs DC level shift with respect to the input image data DVa by the DC level shift unit <b>21</b> and progresses to step ST<b>12</b>.</p>
<p id="p-0088" num="0087">In step ST<b>12</b>, the image encoding unit <b>20</b>-<b>1</b> performs MDWT. The image encoding unit <b>20</b>-<b>1</b> performs MDWT with respect to the DC level shifted image data DVb by the band division unit <b>22</b>, obtains the absolute value CEa of the MDWT coefficient data and the code CEs, and progresses to step ST<b>13</b>.</p>
<p id="p-0089" num="0088">In step ST<b>13</b>, the image encoding unit <b>20</b>-<b>1</b> performs SB and ZBP detection. The image encoding unit <b>20</b>-<b>1</b> detects the SB and the ZBP from the absolute value CEa of the MDWT coefficient data by the SB/ZBP detection unit <b>23</b> and progresses to step ST<b>14</b>.</p>
<p id="p-0090" num="0089">In step ST<b>14</b>, the image encoding unit <b>20</b>-<b>1</b> performs entropy-encoding. The image encoding unit <b>20</b>-<b>1</b> performs entropy-encoding with respect to the bit plane of the absolute value CEa of the MDWT coefficient data, the SB detection result DTsb and the ZBP detection result DTzbp by the entropy-encoding unit <b>24</b>, obtains the bit stream BSa, the bit stream length DTbs and the mode flag MF, and progresses to step ST<b>15</b>.</p>
<p id="p-0091" num="0090">In step ST<b>15</b>, the image encoding unit <b>20</b>-<b>1</b> performs distortion characteristic estimation. The image encoding unit <b>20</b>-<b>1</b> performs distortion characteristic estimation based on the absolute value CEa of the MDWT coefficient data, the SB detection result DTsb, the ZBP detection result DTzbp and the bit stream length DTbs by the distortion characteristic estimation unit <b>25</b> and progresses to step ST<b>16</b>.</p>
<p id="p-0092" num="0091">In step ST<b>16</b>, the image encoding unit <b>20</b>-<b>1</b> performs truncation. The image encoding unit <b>20</b>-<b>1</b> performs truncation as necessary, based on the bit stream BSa, the bit stream length DTbs, the ZBP detection result DTzbp, the code CEs and the distortion characteristic estimation result Erd, by the truncation unit <b>26</b>. The image encoding unit <b>20</b>-<b>1</b> performs truncation of the bit stream and the code when the bit stream length is not fitted into a target code length and progresses to step ST<b>17</b> when the code length of the bit stream BSb is equal to or less than the target code length.</p>
<p id="p-0093" num="0092">In step ST<b>17</b>, the image encoding unit <b>20</b>-<b>1</b> performs transform into a predetermined format. The image encoding unit <b>20</b>-<b>1</b> transforms additional information including the mode flag MF and the truncated bit stream BSb into a predetermined format using the packing unit <b>27</b>, generates the encoded data Dpd and finishes an encoding process.</p>
<p id="h-0009" num="0000">[2-3. Operation of Each Unit of Image Encoding Unit]</p>
<p id="p-0094" num="0093">Next, operations of the main portions of the image encoding unit will be described.</p>
<p id="h-0010" num="0000">[2-3-1. Operation of Band Division Unit]</p>
<p id="p-0095" num="0094">The band division unit <b>22</b> rearranges the spatial position with respect to the coefficient data of the low-band component and lessens the influence of the deterioration of band division precision which is prone to appear in a block boundary of M&#xd7;N pixels as distortion, for example, in addition to Discrete Wavelet Transform (DWT). The band division unit <b>22</b> may use any band division filter such as DWT.</p>
<p id="p-0096" num="0095"><figref idref="DRAWINGS">FIGS. 7A to 7F</figref> are diagrams illustrating an operation of the band division unit <b>22</b> when a 5&#xd7;3 lifting configuration, in which, for example, even the JPEG20-100 standard is employed, is used. <figref idref="DRAWINGS">FIG. 7A</figref> shows the image data DVb of a block unit output from the DC level shift unit <b>21</b> and shows the case where one block unit includes, for example, 8 pixels.</p>
<p id="p-0097" num="0096">The band division unit <b>22</b> performs extension of image data by returning a signal on the basis of an end of a block such that a boundary of an image has a symmetric property, in order to obtain outputs of the same pixels, with respect to the image data DVb of the block unit. For example, when the image data DVb is at pixel positions P(0) to P(N&#x2212;1) as shown in <figref idref="DRAWINGS">FIG. 8</figref>, the band division unit <b>22</b> performs extension of image data such that the boundary of the image has a symmetric property. That is, a signal of a pixel position P(1) is extended to a signal of a pixel position P(&#x2212;1), a signal of a pixel position P(2) is extended to a signal of a pixel position P(&#x2212;2) and a signal of a pixel position P(N&#x2212;2) is extended to a signal of a pixel position P(N). In addition, extension of image data is performed such that the outputs of the same pixels are obtained when DWT is performed.</p>
<p id="p-0098" num="0097">The band division unit <b>22</b> performs extension of the image data DVb and generates extended image data shown in <figref idref="DRAWINGS">FIG. 7B</figref>. In addition, as shown in <figref idref="DRAWINGS">FIG. 7C</figref>, the band division unit <b>22</b> performs an operation using the extended image data and generates coefficient data CE-h of a high-pass component. In addition, the coefficient data CE-h of the high-pass component is denoted by a rightward rising oblique line.</p>
<p id="p-0099" num="0098">Next, as shown in <figref idref="DRAWINGS">FIG. 7D</figref>, the band division unit <b>22</b> performs an operation using the extended image data and the coefficient data CE-h of the high-pass component and generates coefficient data CE-l of a low-band component. In addition, the coefficient data CE-l of the low-band component is denoted by a leftward rising oblique line.</p>
<p id="p-0100" num="0099">In addition, the band division unit <b>22</b> performs deinterleaving of the coefficient data CE-h of the high-pass component and the coefficient data CE-l of the low-band component so as to generate a sub-band including the coefficient data CE-l of the low-band component and a sub-band including the coefficient data CE-h of the high-pass component as shown in <figref idref="DRAWINGS">FIG. 7E</figref>. The sub-band refers to a set of coefficient data classified for each frequency band. In addition, coefficient data CE-h(&#x2212;1) of a high-pass component calculated using two extended signals is excluded from the sub-band of the high-pass component.</p>
<p id="p-0101" num="0100">In this way, if the lifting operation or deinterleaving is performed, band division precision of both ends in which the extended image data is used is lowered. In particular, in the case of the coefficient data of the low-band component, from the point that the coefficient CE-l(0) of the low-band component is calculated using the coefficient data CE-h(&#x2212;1) of the high-pass component calculated using the image data corresponding to the two extended pixels, a left end is sensitive to the influence of the deterioration of band division precision.</p>
<p id="p-0102" num="0101">If band division is performed over repeated DWT by regarding the sub-band of the low-band component as an original image, the influence of the deterioration of band division precision is repeatedly applied to the left side of the low-band component. To this end, if band compression of the system or reduction of the memory is performed by encoding image data in block units of M&#xd7;N pixels as distortion, the influence of the deterioration of band division precision of the left end is prone to appear on a block boundary of M&#xd7;N pixels as distortion.</p>
<p id="p-0103" num="0102">Accordingly, the band division unit <b>22</b> lowers the influence of the deterioration of band division precision which is prone to appear on the block boundary of M&#xd7;N pixels such that visually remarkable deterioration is not caused even when a block size is small. In detail, with respect to the sub-band of the low-band component obtained by performing deinterleaving, rearrangement of the spatial position is performed such that the coefficient data of the low-band component calculated using the two extended signals is not used along with the two extended signals by the next frequency band division. For example, the band division unit <b>22</b> reverses the order of the coefficient data of the sub-band of the low-band component as shown in <figref idref="DRAWINGS">FIG. 7F</figref>. In this case, the coefficient data CE-l(0) of the low-band component calculated using the two extended signals is not used along with the two extended signals by calculation of the coefficient data of the low-band component of the next band division. Accordingly, the band division unit <b>22</b> is able to distribute the influence of the deterioration of band division precision when band division is repeated and to prevent the influence of the deterioration of band division precision which is prone to appear on the block boundary of M&#xd7;N pixels as distortion.</p>
<p id="p-0104" num="0103">The order of the coefficient data of the sub-band of the low-band component is not limited to the order shown in <figref idref="DRAWINGS">FIG. 7F</figref> and any order may be used if restoration may be performed by the image decoding unit <b>30</b>-<b>1</b>. The order may be set in advance by the image encoding unit <b>20</b>-<b>1</b> and the image decoding unit <b>30</b>-<b>1</b>. If information for identifying the rearrangement order is added to the encoded data, the image decoding unit <b>30</b>-<b>1</b> may accurately perform restoration.</p>
<p id="p-0105" num="0104">In addition, the band division unit <b>22</b> may perform a variety of band division with respect to not only a one-dimensional block but also a two-dimensional M&#xd7;N pixel block as shown in <figref idref="DRAWINGS">FIG. 9A</figref> or <b>9</b>B, similar to the DWT of the related art. In addition, different filters may be used in a horizontal direction and a vertical direction. In the band division filter, a filter other than the DWT may be used. In <figref idref="DRAWINGS">FIG. 9A</figref>, the height of the frequency is &#x201c;1 HH&#x3e;1HL=1LH&#x3e;2HH&#x3e;2HL=2LH&#x3e;3HH&#x3e;3HL=3LH&#x3e;3LL&#x201d;. In <figref idref="DRAWINGS">FIG. 9B</figref>, the height of the frequency is &#x201c;1HH&#x3e;1HL=1LH&#x3e;2HL&#x3e;3HL&#x3e;3LL&#x201d;.</p>
<p id="h-0011" num="0000">[2-3-2. Operation of SB/ZBP Detection Unit]</p>
<p id="p-0106" num="0105">The operation of the SB/ZBP detection unit <b>23</b> will be described. <figref idref="DRAWINGS">FIG. 10</figref> shows the development of absolute values of the MDWT coefficient data output from the band division unit <b>22</b> in a bit depth direction. In addition, each bit depth plane is referred to as a bit plane. In <figref idref="DRAWINGS">FIG. 10</figref>, for example, coefficient data of a sub-band 3L is &#x201c;74, 9&#x201d;, coefficient data of a sub-band 3H is &#x201c;21, 19&#x201d;, coefficient data of a sub-band 2H is &#x201c;10, 54, 59, 21&#x201d;, and coefficient data of a sub-band 1H is &#x201c;13, 9, 25, 20-1, 5, 1, 0, 0&#x201d;. If MDWT coefficient data is &#x201c;74 (decimal number)&#x201d;, coefficient data is expressed by &#x201c;001001010&#x201d; using a 9-bit bit stream in bit depth order. In addition, the height of the frequency is &#x201c;1H&#x3e;2H&#x3e;3H&#x3e;3L&#x201d;.</p>
<p id="p-0107" num="0106">The SB is a bit which initially becomes &#x201c;1&#x201d; when an absolute value of each piece of coefficient data is viewed from a Most Significant Bit (MSB) side to a Least Significant Bit (LSB) side. In <figref idref="DRAWINGS">FIG. 10</figref>, a bit surrounded by a circle corresponds to an SB. The ZBP indicates a bit plane located one above an SB located on an MSB side within a sub-block when the absolute value of the MDWT coefficient data is divided into sub-blocks including J pieces of coefficient data. In <figref idref="DRAWINGS">FIG. 10</figref>, when a sub-block size is J=2, a bit plane denoted by an oblique line is a ZBP.</p>
<p id="p-0108" num="0107">In the bit plane, the SB, the ZBP and the below-described TP, indexes are set in a bit depth direction. In <figref idref="DRAWINGS">FIG. 10</figref>, an index IDXbp of the bit plane of the MSB, an index IDXsb of the SB of the bit plane position of the MSB, and an index IDXtp of the TP are set to &#x201c;0&#x201d;. In addition, an index IDXbp of the bit plane of the LSB, an index IDXsb of the SB of the bit plane of the LSB and an index IDXtp of the TP are set to &#x201c;8&#x201d;. Since the ZBP represents the bit plane located one above the SB, an index IDXzbp of the ZBP is set to a value obtained by adding &#x201c;1&#x201d; to the index IDXsb of the SB, as shown in <figref idref="DRAWINGS">FIG. 10</figref>.</p>
<p id="p-0109" num="0108">The SB/ZBP detection unit <b>23</b> performs an operation for obtaining the index IDXsb of the SB and the index IDXzbp of the ZBP. That is, as shown in <figref idref="DRAWINGS">FIG. 10</figref>, the SB/ZBP detection unit <b>23</b> obtains the index IDXsb of the SB for each piece of MDWT coefficient data as the SB detection result DTsb. In addition, the index IDXzbp of the ZBP is obtained for each sub-block including J pieces of coefficient data and the ZBP detection result is set to DTzbp. Although the absolute value of the one-dimensional MDWT coefficient data is shown in <figref idref="DRAWINGS">FIG. 10</figref>, bit precision or band division may be different or two-dimensional data may be used. That is, a sub-block size of the ZBP may be JxK. Although the sub-block size of the bit plane is equal to the size of the ZBP in <figref idref="DRAWINGS">FIG. 10</figref>, a different size, for example, ExF may be used.</p>
<p id="h-0012" num="0000">[2-3-3. Operation of Entropy-Encoding Unit]</p>
<p id="p-0110" num="0109">The operation of the entropy-encoding unit <b>24</b> will be described. The entropy-encoding unit <b>24</b> entropy-encodes three types of the index IDXzbp which is the ZBP detection result DTzbp, the index IDXtp of the TP, and the bit plane.</p>
<p id="p-0111" num="0110">First, the entropy-encoding method of the index IDXzbp of the ZBP will be described. One ZBP exists in each sub-block. Since the ZBP statistically has a tendency to have a small index as belonging to a low-band component, using a band (sub-band) to which the ZBP belongs as a context, the index IDXzbp is changed to a symbol which is encoded data.</p>
<p id="p-0112" num="0111">In detail, using a transform table shown in <figref idref="DRAWINGS">FIG. 11</figref>, a symbol corresponding to a combination of the index IDXzbp of the ZBP and a sub-band to which the ZBP belongs is selected as an encoding result.</p>
<p id="p-0113" num="0112">The transform table shown in <figref idref="DRAWINGS">FIG. 11</figref> uses, for example, a Huffman table or the like, which is prepared based on statistical data. If the ZBP statistically has a tendency to have a small index as belonging to a low-band component, for example, in a sub-band 3L, a symbol <b>00</b> in which the value of the index IDXzbp is small is set to a short bit stream. In addition, a symbol <b>09</b> or the like, in which the value of the index IDXzbp is large, is set to a bit stream longer than the symbol <b>00</b>. In addition, for example, in a sub-band 1H, a symbol <b>09</b> in which the value of the index IDXzbp is large is set to a short bit stream. In addition, a symbol <b>00</b> or the like, in which the value of the index IDXzbp is small, is set to a bit stream longer than the symbol <b>09</b>. By setting the bit length of the symbol based on the statistical data of the index IDXzbp, it is possible to increase the encoding efficiency of the ZBP.</p>
<p id="p-0114" num="0113">In addition, the transform table is not limited to the case of using one transform table and a transform table used for encoding may be selected from among a plurality of transform tables. For example, two types of tables including a ZBP_Easy_table applied to the index IDXzbp (encoding is simple) of the ZBP relatively along statistical data and a ZBP_Hard_table applied to that (encoding is difficult) deviated from statistical data are used.</p>
<p id="p-0115" num="0114"><figref idref="DRAWINGS">FIG. 12</figref> is a flowchart illustrating an operation in the case of performing the entropy-encoding method of the index IDXzbp of the ZBP using two types of transform tables.</p>
<p id="p-0116" num="0115">In step ST<b>21</b>, the entropy-encoding unit <b>24</b> performs encoding of the ZBP_Hard_table. The entropy-encoding unit <b>24</b> selects a band to which the ZBP belongs and a symbol corresponding to the index IDXzbp of the ZBP from the ZBP_Hard_table so as to perform encoding of the index IDXzbp. In addition, the entropy-encoding unit <b>24</b> adds the bit length of the result of encoding the index IDXzbp of the sub-block, obtains a bit stream length LBSh of a block unit of M&#xd7;N pixels, and progresses to step ST<b>22</b>.</p>
<p id="p-0117" num="0116">In step ST<b>22</b>, the entropy-encoding unit <b>24</b> performs encoding using the ZBP_Easy_table. The entropy-encoding unit <b>24</b> selects a band to which the ZBP belongs and a symbol corresponding to the index IDXzbp of the ZBP from the ZBP_Easy_table so as to perform encoding of the index IDXzbp. In addition, the entropy-encoding unit <b>24</b> adds the bit length of the result of encoding the index IDXzbp of the sub-block, obtains a bit stream length LBSe of a block unit of M&#xd7;N pixels, and progresses to step ST<b>23</b>.</p>
<p id="p-0118" num="0117">In step ST<b>23</b>, the entropy-encoding unit <b>24</b> determines whether the bit stream length LBSh is shorter than the bit stream length LBSe. The entropy-encoding unit <b>24</b> progresses to step ST<b>24</b> when the bit stream length LBSh is shorter than the bit stream length LBSe and progresses to step ST<b>25</b> when the bit stream length LBSh is not shorter than the bit stream length LBSe.</p>
<p id="p-0119" num="0118">In step ST<b>24</b>, the entropy-encoding unit <b>24</b> outputs the encoding result using the ZBP_Hard_table. In addition, in step ST<b>25</b>, the entropy-encoding unit <b>24</b> outputs the encoding result using the ZBP_Easy_table.</p>
<p id="p-0120" num="0119">In this way, if a plurality of transform tables is used, a decision as to which of the transform tables is used is made by performing encoding using all transform tables and employing the transform table having the smallest bit stream length.</p>
<p id="p-0121" num="0120"><figref idref="DRAWINGS">FIG. 13</figref> is a flowchart illustrating another operation in the case of performing the entropy-encoding method of the index IDXzbp of the ZBP using two types of transform tables.</p>
<p id="p-0122" num="0121">In step ST<b>26</b>, the entropy-encoding unit <b>24</b> performs ZBP average value calculation. The entropy-encoding unit <b>24</b> calculates an average value WZavg of the index IDXzbp of the ZBP of a block unit of M&#xd7;N pixels and progresses to step ST<b>27</b>.</p>
<p id="p-0123" num="0122">In step ST<b>27</b>, the entropy-encoding unit <b>24</b> determines whether the average value WZavg is smaller than a threshold WZth. The entropy-encoding unit <b>24</b> progresses to step ST<b>28</b> when it is determined that the average value WZavg of the index IDXzbp of the ZBP is smaller than the threshold WZth and progresses to step ST<b>29</b> when it is determined that the average value WZavg of the index IDXzbp of the ZBP is not smaller than the threshold WZth.</p>
<p id="p-0124" num="0123">In step ST<b>28</b>, the entropy-encoding unit <b>24</b> outputs the encoding result using the ZBP_Hard_table. The entropy-encoding unit <b>24</b> selects a band to which the ZBP belongs and a symbol corresponding to the index IDXzbp of the ZBP from the ZBP_Hard_table and outputs the selected symbol as the encoding result.</p>
<p id="p-0125" num="0124">In step ST<b>29</b>, the entropy-encoding unit <b>24</b> outputs the encoding result using the ZBP_Easy_table. The entropy-encoding unit <b>24</b> selects a band to which the ZBP belongs and a symbol corresponding to the index IDXzbp of the ZBP from the ZBP_Easy_table and outputs the selected symbol as the encoding result.</p>
<p id="p-0126" num="0125">In this way, if a plurality of transform tables is used, a decision as to which of the transform tables is used is made based on the average value WZavg of the index IDXzbp of the ZBP.</p>
<p id="p-0127" num="0126">In addition, if a plurality of transform tables is used, to allow the image decoding unit <b>30</b>-<b>1</b> to determine which of the transform tables is used for encoding, the mode flag is set so as to be able to determine the transform table used for encoding.</p>
<p id="p-0128" num="0127">Next, the entropy-encoding method of the index IDXtp of the TP will be described. Similar to the ZBP, the index IDXtp of the TP is, for example, encoded using the Huffman table for each sub-block shown in <figref idref="DRAWINGS">FIG. 14</figref> so as to generate a bit stream. Since the TP is decided by the truncation unit <b>26</b>, when entropy-encoding is performed, the index IDXtp of the TP is still not decided. Accordingly, all those which may become the index IDXtp of the TP are entropy encoded. In detail, the indexes IDXtp of the TPs of all positions of a bit plane located one below the ZBP are entropy encoded such that the TP is set at any position of the bit plane located below the ZBP of <figref idref="DRAWINGS">FIG. 10</figref>. In addition, a plurality of transform tables may be used similar to the case of the ZBP. For example, two types of tables including a TP_Easy_table applied to the index (where encoding is simple) of the TP relatively in line with statistical data and a TP_Hard_table applied to that (encoding is difficult) deviated from statistical data are used.</p>
<p id="p-0129" num="0128"><figref idref="DRAWINGS">FIG. 15</figref> is a flowchart illustrating an operation in the case of performing the entropy-encoding method of the index IDXtp of the TP using two types of transform tables. In step ST<b>31</b>, the entropy-encoding unit <b>24</b> determines whether the ZBP_Hard_table is selected. The entropy-encoding unit <b>24</b> progresses to step ST<b>32</b> when the ZBP_Hard_table is selected and progresses to step ST<b>33</b> when the ZBP_Hard_table is not selected.</p>
<p id="p-0130" num="0129">In step ST<b>32</b>, the entropy-encoding unit <b>24</b> outputs the encoding result using the TP_Hard_table. The entropy-encoding unit <b>24</b> selects a band to which the TP belongs and a symbol corresponding to the index IDXtp of the TP from the TP_Hard_table so as to perform encoding of the index IDXtp, and outputs the selected symbol as the encoding result.</p>
<p id="p-0131" num="0130">In step ST<b>33</b>, the entropy-encoding unit <b>24</b> outputs the encoding result using the TP_Easy_table. The entropy-encoding unit <b>24</b> selects a band to which the TP belongs and a symbol corresponding to the index IDXtp of the TP from the TP_Easy_table so as to perform encoding of the index IDXtp, and outputs the selected symbol as the encoding result.</p>
<p id="p-0132" num="0131">In this way, if a plurality of transform tables is used, a decision as to which of the transform tables is used is made by employing a transform table which tends to be similar to the transform table employed by the ZBP.</p>
<p id="p-0133" num="0132"><figref idref="DRAWINGS">FIG. 16</figref> is a flowchart illustrating another operation in the case of performing the entropy-encoding method of the index IDXtp of the TP using two types of transform tables.</p>
<p id="p-0134" num="0133">In step ST<b>36</b>, the entropy-encoding unit <b>24</b> determines whether an average value WZavg is less than a threshold WZth. The entropy-encoding unit <b>24</b> progresses to step ST<b>37</b> when it is determined that the average value WZavg of the index IDXzbp of the ZBP is less than the threshold WZth and progresses to step ST<b>38</b> when the average value WZavg of the index IDXzbp of the ZBP is not less than the threshold WZth.</p>
<p id="p-0135" num="0134">In step ST<b>37</b>, the entropy-encoding unit <b>24</b> outputs the encoding result using the TP_Hard_table. The entropy-encoding unit <b>24</b> selects a band to which the TP belongs and a symbol corresponding to the index IDXtp of the TP from the TP_Hard_table so as to perform encoding of the index IDXtp and outputs the selected symbol as the encoding result.</p>
<p id="p-0136" num="0135">In step ST<b>38</b>, the entropy-encoding unit <b>24</b> outputs the encoding result using the TP_Easy_table. The entropy-encoding unit <b>24</b> selects a band to which the TP belongs and a symbol corresponding to the index IDXtp of the TP from the TP_Easy_table so as to perform encoding of the index IDXtp and outputs the selected symbol as the encoding result.</p>
<p id="p-0137" num="0136">In this way, if a plurality of transform tables is used, a decision as to which of the transform tables is used is made by using the average value WZavg of the index IDXzbp of the ZBP.</p>
<p id="p-0138" num="0137">As shown in <figref idref="DRAWINGS">FIGS. 15 and 16</figref>, the reason why the index IDXzbp of the ZBP is used is because the TP is not decided when the index IDXsb of the SB and the index IDXzbp of the ZBP are obtained and thus the index itself of the TP is not used as the context. In addition, this is because efficient encoding is performed using correlation between the index IDXzbp of the ZBP and the index IDXtp of the TP.</p>
<p id="p-0139" num="0138">In addition, if a plurality of transform tables is used, to allow the image decoding unit <b>30</b>-<b>1</b> to determine which of the transform tables is used for encoding, the mode flag is set so as to determine the transform table used for encoding.</p>
<p id="p-0140" num="0139">Next, the encoding method of the bit plane will be described. In the bit plane, as shown in <figref idref="DRAWINGS">FIG. 10</figref>, the absolute values of the MDWT coefficient data are decompressed in the bit depth direction. In addition, the bit plane is divided into sub-blocks. For example, in <figref idref="DRAWINGS">FIG. 10</figref>, a bit plane in which the index IDXbp of a sub-block (a sub-block having an index IDXbk of &#x201c;0&#x201d;) of the leftmost sub-band 3L is &#x201c;2&#x201d; becomes &#x201c;1, 0&#x201d;. The value &#x201c;1, 0&#x201d; is encoded using the following method.</p>
<p id="p-0141" num="0140">Even in the entropy-encoding of the bit plane, similarly, a bit stream is generated by referring to, for example, one or a plurality of Huffman tables. In the entropy-encoding of the bit plane, unlike the ZBP or the TP, the coefficient bit (for example, the value of &#x201c;1, 0&#x201d;) of the bit plane is encoded. As the context of the transform table, the index IDXbp of the bit plane, the sub-band to which the bit plane belongs, the below-described SB_flag or the like are used.</p>
<p id="p-0142" num="0141">If the index IDXbp of the bit plane is used as the context, statistics of the distribution &#x201c;1&#x201d; and &#x201c;0&#x201d; of the bit plane may be used. That is, if the bit depth of the bit plane is shallow (the index is small), the value of the bit plane is prone to become &#x201c;0&#x201d;. If the bit depth of the bit plane is deep (the index is large), &#x201c;1&#x201d; and &#x201c;0&#x201d; are prone to have the same distribution as the value of the bit plane. Using the statistics of such a distribution, it is possible to increase encoding efficiency.</p>
<p id="p-0143" num="0142">If the sub-band to which the bit plane belongs is used as the context, as there is a tendency for an absolute value of the MDWT coefficient data to be larger in a lower band, correlation between this tendency and the tendency of &#x201c;0&#x201d; and &#x201c;1&#x201d; of the bit plane may be used. The SB_flag is a context using an SB state and, in detail, is a flag representing whether an SB is present at a higher bit than a bit plane to be encoded in the case where the bit plane to be encoded is encoded. The SB_flag is generated based on the index IDXsb which is the SB detection result DTsb. For example, in <figref idref="DRAWINGS">FIG. 17</figref>, a bit surrounded by a circle is an SB represented by the index IDXsb. If the index IDXbp encodes a bit plane of &#x201c;4&#x201d;, the SB_flag becomes &#x201c;1, 0&#x201d;. If the SB_flag includes &#x201c;0&#x201d;, the value of the bit plane is also prone to become &#x201c;0&#x201d;. Accordingly, by using the SB_flag as, for example, the context of the Huffman table, it is possible to improve encoding efficiency. Even in the encoding of the bit plane, a plurality of transform tables may be prepared.</p>
<p id="p-0144" num="0143"><figref idref="DRAWINGS">FIG. 18</figref> is a flowchart illustrating an operation in the case of performing the entropy-encoding method of the bit plane using two types of transform tables.</p>
<p id="p-0145" num="0144">In step ST<b>41</b>, the entropy-encoding unit <b>24</b> performs encoding using a BitPlane_Hard_table. The entropy-encoding unit <b>24</b> performs encoding of the bit plane using the BitPlane_Hard_table, obtains a bit stream length LBSPh, and progresses to step ST<b>42</b>.</p>
<p id="p-0146" num="0145">In step ST<b>42</b>, the entropy-encoding unit <b>24</b> performs encoding using a BitPlane_Easy_table. The entropy-encoding unit <b>24</b> performs encoding of the bit plane using the BitPlane_Easy_table, obtains a bit stream length LBSPe, and progresses to step ST<b>43</b>.</p>
<p id="p-0147" num="0146">In step ST<b>43</b>, the entropy-encoding unit <b>24</b> determines whether the bit stream length LBSPh is shorter than the bit stream length LBSPe. The entropy-encoding unit <b>24</b> progresses to step ST<b>44</b> if the bit stream length LBSPh is shorter than the bit stream length LBSPe and progresses to step ST<b>45</b> if the bit stream length LBSPh is not shorter than the bit stream length LBSPe.</p>
<p id="p-0148" num="0147">In step ST<b>44</b>, the entropy-encoding unit <b>24</b> outputs the encoding result obtained by performing the encoding of the bit plane using the BitPlane_Hard_table. In addition, in step ST<b>45</b>, the entropy-encoding unit <b>24</b> outputs the encoding result obtained by performing the encoding of the bit plane using the BitPlane_Easy_table.</p>
<p id="p-0149" num="0148">In this way, if a plurality of transform tables is used, a decision as to which of the transform tables is used is made by performing encoding at all the transform tables and employing the transform table having the smallest bit stream length.</p>
<p id="p-0150" num="0149">In addition, if a plurality of transform tables is used, to allow the image decoding unit <b>30</b>-<b>1</b> to determine which of the transform tables is used for encoding, the mode flag is set so as to determine the transform table used for encoding.</p>
<p id="p-0151" num="0150">The entropy-encoding unit <b>24</b> records the bit stream lengths when the bit streams are generated, in each of the entropy-encoding of the ZBP, the TP and the bit plane. These are necessary in the distortion characteristic estimation unit <b>25</b> of a subsequent stage. In particular, the bit stream lengths of the TP and the bit plane are necessary to be recorded in each bit plane and each sub-block, in order to perform truncation.</p>
<p id="h-0013" num="0000">[2-3-4. Operation of Distortion Characteristic Estimation Unit]</p>
<p id="p-0152" num="0151">The operation of the distortion characteristic estimation unit <b>25</b> will be described. The truncation unit <b>26</b> performs truncation such that the bit stream BSa and the code CEs obtained by the entropy-encoding result are fitted into a target code length. The truncation unit <b>26</b> determines which bit stream of which bit plane is used and which bit stream of which bit plane is truncated, in order to obtain optimal image quality within the target code length. To this end, the distortion characteristic estimation unit <b>25</b> estimates the distortion characteristic representing a relationship between a code amount and distortion, in order to determine which bit plane is truncated by the truncation unit <b>26</b>.</p>
<p id="p-0153" num="0152">The distortion characteristic estimation unit <b>25</b> is an algorithm for estimating the distortion characteristic representing the relationship between the code amount and distortion and uses, for example, a method disclosed in &#x201c;David Taubman, Michael Marcellin, JPEG2000: Image Compression Fundamentals, Standards and Practice (The Springer International Series in Engineering and Computer Science)&#x201d;, paragraph 8.3.5 &#x201c;DISTORTION COMPUTATION&#x201d;.</p>
<p id="p-0154" num="0153">The distortion characteristic estimation unit <b>25</b> calculates a slope (&#x394;Di(p)/&#x394;Ri(p)) representing a variation in encoding distortion of a code length from the code length (&#x394;Ri(p)) of each bit plane of a sub-block size and encoding distortion (&#x394;Di(p)) generated when truncating the bit plane of the sub-block. Equation (1) shows a calculation equation of the encoding distortion (&#x394;D<sub>i</sub><sup>(p)</sup>).</p>
<p id="p-0155" num="0154">
<maths id="MATH-US-00001" num="00001">
<math overflow="scroll">
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <mi>&#x394;</mi>
          <mo>&#x2062;</mo>
          <mstyle>
            <mspace width="0.3em" height="0.3ex"/>
          </mstyle>
          <mo>&#x2062;</mo>
          <msubsup>
            <mi>D</mi>
            <mi>i</mi>
            <mrow>
              <mo>(</mo>
              <mi>p</mi>
              <mo>)</mo>
            </mrow>
          </msubsup>
        </mrow>
        <mo>=</mo>
        <mrow>
          <msub>
            <mi>G</mi>
            <mi>bi</mi>
          </msub>
          <mo>&#x2062;</mo>
          <msubsup>
            <mi>&#x394;</mi>
            <mi>i</mi>
            <mn>2</mn>
          </msubsup>
          <mo>&#x2062;</mo>
          <msup>
            <mn>2</mn>
            <mrow>
              <mn>2</mn>
              <mo>&#x2062;</mo>
              <mi>p</mi>
            </mrow>
          </msup>
          <mo>&#x2062;</mo>
          <mrow>
            <mo>(</mo>
            <mrow>
              <mrow>
                <munder>
                  <mo>&#x2211;</mo>
                  <mrow>
                    <mi>j</mi>
                    <mo>,</mo>
                    <mrow>
                      <mrow>
                        <msubsup>
                          <mi>v</mi>
                          <mi>i</mi>
                          <mrow>
                            <mo>(</mo>
                            <mi>p</mi>
                            <mo>)</mo>
                          </mrow>
                        </msubsup>
                        <mo>&#x2061;</mo>
                        <mrow>
                          <mo>[</mo>
                          <mi>j</mi>
                          <mo>]</mo>
                        </mrow>
                      </mrow>
                      <mo>=</mo>
                      <mn>1</mn>
                    </mrow>
                  </mrow>
                </munder>
                <mo>&#x2062;</mo>
                <mrow>
                  <msub>
                    <mi>T</mi>
                    <mi>s</mi>
                  </msub>
                  <mo>&#x2062;</mo>
                  <mstyle>
                    <mspace width="0.3em" height="0.3ex"/>
                  </mstyle>
                  <mo>&#x2062;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mrow>
                      <msubsup>
                        <mover>
                          <mi>v</mi>
                          <mo>~</mo>
                        </mover>
                        <mi>i</mi>
                        <mrow>
                          <mo>(</mo>
                          <mrow>
                            <mi>p</mi>
                            <mo>+</mo>
                            <mn>1</mn>
                          </mrow>
                          <mo>)</mo>
                        </mrow>
                      </msubsup>
                      <mo>&#x2061;</mo>
                      <mrow>
                        <mo>[</mo>
                        <mi>j</mi>
                        <mo>]</mo>
                      </mrow>
                    </mrow>
                    <mo>)</mo>
                  </mrow>
                </mrow>
              </mrow>
              <mo>+</mo>
              <mrow>
                <munder>
                  <mo>&#x2211;</mo>
                  <mrow>
                    <mi>j</mi>
                    <mo>,</mo>
                    <mrow>
                      <mrow>
                        <msubsup>
                          <mi>v</mi>
                          <mi>i</mi>
                          <mrow>
                            <mo>(</mo>
                            <mi>p</mi>
                            <mo>)</mo>
                          </mrow>
                        </msubsup>
                        <mo>&#x2061;</mo>
                        <mrow>
                          <mo>[</mo>
                          <mi>j</mi>
                          <mo>]</mo>
                        </mrow>
                      </mrow>
                      <mo>&#x3e;</mo>
                      <mn>1</mn>
                    </mrow>
                  </mrow>
                </munder>
                <mo>&#x2062;</mo>
                <mstyle>
                  <mspace width="0.3em" height="0.3ex"/>
                </mstyle>
                <mo>&#x2062;</mo>
                <mrow>
                  <msub>
                    <mi>T</mi>
                    <mi>m</mi>
                  </msub>
                  <mo>&#x2061;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mrow>
                      <mn>2</mn>
                      <mo>&#x2062;</mo>
                      <mrow>
                        <msubsup>
                          <mover>
                            <mi>v</mi>
                            <mo>~</mo>
                          </mover>
                          <mi>i</mi>
                          <mrow>
                            <mo>(</mo>
                            <mrow>
                              <mi>p</mi>
                              <mo>+</mo>
                              <mn>1</mn>
                            </mrow>
                            <mo>)</mo>
                          </mrow>
                        </msubsup>
                        <mo>&#x2061;</mo>
                        <mrow>
                          <mo>[</mo>
                          <mi>j</mi>
                          <mo>]</mo>
                        </mrow>
                      </mrow>
                    </mrow>
                    <mo>)</mo>
                  </mrow>
                </mrow>
              </mrow>
            </mrow>
            <mo>)</mo>
          </mrow>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>1</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
</maths>
</p>
<p id="p-0156" num="0155">In Equation (1), &#x201c;p&#x201d; denotes the index IDXbp of the bit plane, &#x201c;i&#x201d; denotes the index IDXbk of the sub-block allocated in a horizontal direction of <figref idref="DRAWINGS">FIG. 10</figref>, and &#x201c;j&#x201d; denotes a set of MDWT coefficient data within a sub-block as a vector. In addition, &#x201c;Gb&#x201d; denotes a weight of a b-th sub-band (frequency) and &#x394; denotes a quantization step width. Ts or the like of Equation (1) is expressed by Equations (2) to (5).</p>
<p id="p-0157" num="0156">
<maths id="MATH-US-00002" num="00002">
<math overflow="scroll">
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <msubsup>
            <mover>
              <mi>v</mi>
              <mo>~</mo>
            </mover>
            <mi>i</mi>
            <mrow>
              <mo>(</mo>
              <mi>p</mi>
              <mo>)</mo>
            </mrow>
          </msubsup>
          <mo>&#x2061;</mo>
          <mrow>
            <mo>[</mo>
            <mi>j</mi>
            <mo>]</mo>
          </mrow>
        </mrow>
        <mo>=</mo>
        <mrow>
          <mfrac>
            <mrow>
              <mo>&#xf603;</mo>
              <mrow>
                <msub>
                  <mi>y</mi>
                  <mi>i</mi>
                </msub>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>[</mo>
                  <mi>j</mi>
                  <mo>]</mo>
                </mrow>
              </mrow>
              <mo>&#xf604;</mo>
            </mrow>
            <mrow>
              <msup>
                <mn>2</mn>
                <mi>p</mi>
              </msup>
              <mo>&#x2062;</mo>
              <mi>&#x394;</mi>
            </mrow>
          </mfrac>
          <mo>-</mo>
          <mrow>
            <msup>
              <mi>v</mi>
              <mrow>
                <mo>(</mo>
                <mi>P</mi>
                <mo>)</mo>
              </mrow>
            </msup>
            <mo>&#x2061;</mo>
            <mrow>
              <mo>[</mo>
              <mi>j</mi>
              <mo>]</mo>
            </mrow>
          </mrow>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>2</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <msup>
            <mi>v</mi>
            <mrow>
              <mo>(</mo>
              <mi>P</mi>
              <mo>)</mo>
            </mrow>
          </msup>
          <mo>&#x2061;</mo>
          <mrow>
            <mo>[</mo>
            <mi>j</mi>
            <mo>]</mo>
          </mrow>
        </mrow>
        <mo>=</mo>
        <mrow>
          <mo>&#x230a;</mo>
          <mfrac>
            <mrow>
              <mo>&#xf603;</mo>
              <mrow>
                <msub>
                  <mi>y</mi>
                  <mi>i</mi>
                </msub>
                <mo>&#x2061;</mo>
                <mrow>
                  <mo>[</mo>
                  <mi>j</mi>
                  <mo>]</mo>
                </mrow>
              </mrow>
              <mo>&#xf604;</mo>
            </mrow>
            <mrow>
              <msup>
                <mn>2</mn>
                <mi>p</mi>
              </msup>
              <mo>&#x2062;</mo>
              <msub>
                <mi>&#x394;</mi>
                <mi>i</mi>
              </msub>
            </mrow>
          </mfrac>
          <mo>&#x230b;</mo>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>3</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <msub>
            <mi>T</mi>
            <mi>s</mi>
          </msub>
          <mo>&#x2061;</mo>
          <mrow>
            <mo>(</mo>
            <mover>
              <mi>v</mi>
              <mo>~</mo>
            </mover>
            <mo>)</mo>
          </mrow>
        </mrow>
        <mo>=</mo>
        <mrow>
          <msup>
            <mrow>
              <mo>(</mo>
              <mrow>
                <mn>2</mn>
                <mo>&#x2062;</mo>
                <mover>
                  <mi>v</mi>
                  <mo>~</mo>
                </mover>
              </mrow>
              <mo>)</mo>
            </mrow>
            <mn>2</mn>
          </msup>
          <mo>-</mo>
          <msup>
            <mrow>
              <mo>(</mo>
              <mrow>
                <mrow>
                  <mn>2</mn>
                  <mo>&#x2062;</mo>
                  <mover>
                    <mi>v</mi>
                    <mo>~</mo>
                  </mover>
                </mrow>
                <mo>-</mo>
                <mfrac>
                  <mn>3</mn>
                  <mn>2</mn>
                </mfrac>
              </mrow>
              <mo>)</mo>
            </mrow>
            <mn>2</mn>
          </msup>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>4</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <msub>
            <mi>T</mi>
            <mi>m</mi>
          </msub>
          <mo>&#x2061;</mo>
          <mrow>
            <mo>(</mo>
            <mover>
              <mi>v</mi>
              <mo>~</mo>
            </mover>
            <mo>)</mo>
          </mrow>
        </mrow>
        <mo>=</mo>
        <mrow>
          <msup>
            <mrow>
              <mo>(</mo>
              <mrow>
                <mrow>
                  <mn>2</mn>
                  <mo>&#x2062;</mo>
                  <mover>
                    <mi>v</mi>
                    <mo>~</mo>
                  </mover>
                </mrow>
                <mo>-</mo>
                <mn>1</mn>
              </mrow>
              <mo>)</mo>
            </mrow>
            <mn>2</mn>
          </msup>
          <mo>-</mo>
          <msup>
            <mrow>
              <mo>(</mo>
              <mrow>
                <mrow>
                  <mn>2</mn>
                  <mo>&#x2062;</mo>
                  <mover>
                    <mi>v</mi>
                    <mo>~</mo>
                  </mover>
                </mrow>
                <mo>-</mo>
                <mrow>
                  <mo>&#x230a;</mo>
                  <mrow>
                    <mn>2</mn>
                    <mo>&#x2062;</mo>
                    <mover>
                      <mi>v</mi>
                      <mo>~</mo>
                    </mover>
                  </mrow>
                  <mo>&#x230b;</mo>
                </mrow>
                <mo>-</mo>
                <mfrac>
                  <mn>1</mn>
                  <mn>2</mn>
                </mfrac>
              </mrow>
              <mo>)</mo>
            </mrow>
            <mn>2</mn>
          </msup>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>5</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
</maths>
</p>
<p id="p-0158" num="0157">In Equations (2) and (3), y<sub>i</sub>[j] denotes MDWT coefficient data.</p>
<p id="p-0159" num="0158">In addition, the distortion characteristic estimation unit <b>25</b> increases a weight of a bit plane of a sub-block of an end of a block when encoding is performed in block units, thereby lessening block distortion. In detail, an operation of Equation (6) is performed and a weight indicating whether or not a sub-block belongs to a boundary between blocks is added to the encoding distortion (&#x394;D<sub>i</sub><sup>(p)</sup>).
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>EC&#x394;D</i><sub>i</sub><sup>(p)</sup><i>=Wi&#xd7;&#x394;D</i><sub>i</sub><sup>(</sup><i>p</i>)&#x2003;&#x2003;(6)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0160" num="0159">In Equation (6), &#x201c;Wi&#x201d; denotes a weight determined depending on whether an i-th sub-block (a sub-block having an index IDXbk of &#x201c;i&#x201d;) belongs to a boundary between blocks and the value of EC&#x394;D<sub>i</sub><sup>(p) </sup>is increased if the sub-block belongs to the boundary between blocks. That is, the sub-block belonging to the boundary between blocks enables distortion when this sub-block is truncated to be further increased than before weighting and enables truncation to become more difficult than for a sub-block of another position.</p>
<p id="p-0161" num="0160">The distortion characteristic estimation unit <b>25</b> calculates EC&#x394;D<sub>i</sub><sup>(p) </sup>and outputs the slope (EC&#x394;D<sub>i</sub><sup>(p)</sup>/&#x394;Ri(p)) to the truncation unit <b>26</b> as the distortion characteristic estimation result Erd.</p>
<p id="p-0162" num="0161">The distortion characteristic estimation unit <b>25</b> may calculate EC&#x394;D<sub>i</sub><sup>(p) </sup>with respect to each sub-block and each bit plane or may calculate EC&#x394;D<sub>i</sub><sup>(p) </sup>by a necessary portion by calculating and storing portions having a tendency in advance as a table. In addition, based on the calculated EC&#x394;D<sub>i</sub><sup>(p)</sup>, for example, an R (rate)-D (distortion) curved line shown in <figref idref="DRAWINGS">FIG. 19</figref> may be obtained and stored for each sub-block and a variation in encoding distortion when a bit plane of a sub-block is deleted may be estimated from this R-D curve. In addition, in <figref idref="DRAWINGS">FIG. 19</figref>, a solid line denotes a curved line of a sub-block belonging to the boundary between blocks and a dotted line denotes a curved line of a sub-block which does not belong to the boundary between blocks.</p>
<p id="h-0014" num="0000">[2-3-5. Operation of Truncation Unit]</p>
<p id="p-0163" num="0162">The truncation unit <b>26</b> performs sorting of the bit plane for obtaining optimal image quality within the target code length based on the distortion characteristic estimation result Erd output from the distortion characteristic estimation unit <b>25</b>. <figref idref="DRAWINGS">FIGS. 20A to 21B</figref> are diagrams illustrating the operation of the truncation unit <b>26</b>.</p>
<p id="p-0164" num="0163">The truncation unit <b>26</b> initializes the TP at the position of the ZBP. <figref idref="DRAWINGS">FIG. 20A</figref> shows a state in which the ZBP and the TP overlap each other. In addition, a rightward rising oblique line denotes a ZBP and a leftward rising oblique line denotes a TP.</p>
<p id="p-0165" num="0164">In the state of <figref idref="DRAWINGS">FIG. 20A</figref>, the truncation unit <b>26</b> compares the value of the slope (EC&#x394;D<sub>i</sub><sup>(p)</sup>/&#x394;Ri(p)) of a bit plane located one below each TP. The truncation unit <b>26</b> moves the TP to the bit plane having the largest value (EC&#x394;D<sub>i</sub><sup>(p)</sup>/&#x394;Ri(p)). For example, when the value (EC&#x394;D<sub>i</sub><sup>(p)</sup>/&#x394;Ri(p)) of a sub-block &#x201c;0&#x201d; is largest, as shown in <figref idref="DRAWINGS">FIG. 20B</figref>, the truncation unit <b>26</b> moves the TP from a bit plane &#x201c;1&#x201d; to a bit plane &#x201c;2&#x201d; in the sub-block &#x201c;0&#x201d;. That is, the truncation unit <b>26</b> performs processing so that truncation is not performed on the bit plane which is determined to experience the most increased encoding distortion when truncation is performed.</p>
<p id="p-0166" num="0165">Similarly, the truncation unit <b>26</b> compares the value (EC&#x394;D<sub>i</sub><sup>(p)</sup>/&#x394;Ri(p)) of the bit plane located one below each TP again after updating the position of the TP and moves the TP to the bit plane having the largest value (EC&#x394;D<sub>i</sub><sup>(p)</sup>/&#x394;Ri(p)). For example, when the value (EC&#x394;D<sub>i</sub><sup>(p)</sup>/&#x394;Ri(p)) of a sub-block &#x201c;2&#x201d; is largest, as shown in <figref idref="DRAWINGS">FIG. 20C</figref>, the truncation unit <b>26</b> moves the TP from a bit plane &#x201c;2&#x201d; to a bit plane &#x201c;3&#x201d; in the sub-block &#x201c;2&#x201d;.</p>
<p id="p-0167" num="0166">The truncation unit <b>26</b> compares the value (EC&#x394;D<sub>i</sub><sup>(p)</sup>/&#x394;Ri(p)) of a bit located one below the TP and repeats a process of moving the TP based on the compared result until a target code length of a bit stream reaches a total code length or until all comparison is completed. In addition, <figref idref="DRAWINGS">FIG. 21B</figref> shows a state in which the total code length of the bit stream reaches the target code length.</p>
<p id="p-0168" num="0167">The total code length of the bit stream is a sum of the bit lengths of the indexes IDXzbp of all ZBPs, a bit plane from a position located one below the ZBP to the TP, the indexes IDXtp of all TP at a current position, and each encoding result of the code of the MDWT coefficient data. In the encoding of the code of the MDWT coefficient data, the MDWT coefficient data is encoded up to the current position of the TP and, when truncation is performed with respect to a position located below the current position, only the code corresponding to the significant coefficient data (other than 0) is encoded. The encoding method includes, for example, a method of adding &#x201c;0&#x201d; if the code is positive and adding &#x201c;1&#x201d; if the code is negative or an entropy-encoding method.</p>
<p id="p-0169" num="0168"><figref idref="DRAWINGS">FIG. 22</figref> is a flowchart illustrating the operation of the truncation unit <b>26</b>. In step ST<b>51</b>, the truncation unit <b>26</b> performs initialization of the TP. The truncation unit <b>26</b> progresses to step ST<b>52</b> in a state in which the TP is set to the position of the ZBP.</p>
<p id="p-0170" num="0169">In step ST<b>52</b>, the truncation unit <b>26</b> determines whether scanning is finished. The truncation unit <b>26</b> finishes the process when the scanning of all bit planes and the code is finished and progresses to step ST<b>53</b> when the scan is not finished.</p>
<p id="p-0171" num="0170">In step ST<b>53</b>, the truncation unit <b>26</b> specifies the bit plane having the largest value located one below the TP. The truncation unit <b>26</b> compares the value (EC&#x394;D<sub>i</sub><sup>(p)</sup>/&#x394;Ri(p)) of the bit plane located one below the TP, specifies a bit plane having the largest value, and progresses to step ST<b>54</b>.</p>
<p id="p-0172" num="0171">In step ST<b>54</b>, the truncation unit <b>26</b> determines whether the total code length reaches the target code length. When the TP proceeds to a specific bit plane in step ST<b>53</b>, the truncation unit <b>26</b> progresses to step ST<b>55</b> when the total code length of the bit stream is not equal to or less than the target code length and finishes the process when the total code length of the bit stream is equal to or less than the target code length.</p>
<p id="p-0173" num="0172">In step ST<b>55</b>, the truncation unit <b>26</b> performs a process to advance the TP to the specific bit plane. The truncation unit <b>26</b> performs advancing of the TP to the bit plane specified in ST<b>53</b> and returns to step ST<b>52</b>.</p>
<p id="p-0174" num="0173">The truncation unit <b>26</b> performs a process such that the total code length of the bit stream is equal to or less than the target code length. In addition, in the truncation, in the case where all bit planes are encoded, lossless encoding is performed. In addition, in the case where the total code length is shorter than the target code length, lossless encoding may be performed using the same algorithm and thus image quality is improved compared with the DPCM of Japanese Patent No. 3918263. Even in the case where lossless encoding is not performed, since truncation is repeated until the total code length becomes almost the target code length, it is possible to reduce the number of bits which are invalid within the encoded data.</p>
<p id="h-0015" num="0000">[2-3-6. Operation of Packing Unit]</p>
<p id="p-0175" num="0174">The packing unit <b>27</b> transforms the mode flag MF and the bit stream (ZBP, TP, bit plane, code) Bsb after truncation into a predetermined format, and generates encoded data Dpd which is decodable by the image decoding unit <b>30</b>-<b>1</b>. The mode flag MF may be entropy-encoded as necessary or the bit stream may be encoded without change. In addition, as necessary, a comment, a DC value or supplementary information for a decoding/image quality improvement function may be collected and encoded. The format of the encoded data may be arbitrarily selected if it is a format decodable by the image decoding unit <b>30</b>-<b>1</b>. There are the following restrictions.
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0175">Before decoding each bit stream, a mode flag corresponding thereto is decoded.</li>
        <li id="ul0002-0002" num="0176">Before decoding the bit plane, the ZBP and the TP is decoded.</li>
        <li id="ul0002-0003" num="0177">Before decoding the code, the bit plane is decoded.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0176" num="0178"><figref idref="DRAWINGS">FIG. 23</figref> shows an example of the format. For example, first, the bit stream of the additional information, and next, the bit stream of the encoding result of the index IDXzbp representing the ZBP are provided. Thereafter, the bit stream of the encoding result of the index IDXtp representing the TP, the bit stream of the encoding result of the absolute value of the MDWT coefficient data, and the bit stream of the encoding result of the code are sequentially provided and output to the image decoding unit <b>30</b>-<b>1</b> or the like. In addition, the packing unit <b>27</b> may have a function for collecting the encoded data of a plurality of component signals as one piece of encoding data.</p>
<p id="h-0016" num="0000">[2-4. Configuration of Image Decoding Unit of First Embodiment]</p>
<p id="p-0177" num="0179">The configuration of the image decoding unit of the first embodiment is shown in <figref idref="DRAWINGS">FIG. 24</figref>. The image decoding unit <b>30</b>-<b>1</b> includes a depacking unit <b>31</b>, an entropy decoding unit <b>32</b>, a rounding bit adding unit <b>33</b>, a band synthesis unit <b>34</b>, an IDC level shift unit <b>35</b>, and the like.</p>
<p id="p-0178" num="0180">The depacking unit <b>31</b> receives the encoded data Dpd having the predetermined format, which is generated by the image encoding unit <b>20</b>-<b>1</b>, performs analysis, and acquires additional information necessary for decoding the bit stream by the entropy decoding unit <b>32</b>. The depacking unit <b>31</b> decouples, for example, the bit stream and the information (including the mode flag) necessary for decoding the bit stream from the encoded data having the format shown in <figref idref="DRAWINGS">FIG. 23</figref>. In addition, if the encoded data of the plurality of component signals is collected as one piece of encoded data, the depacking unit <b>31</b> performs such decoupling and outputs a decodable bit stream BSb to the entropy decoding unit <b>32</b>.</p>
<p id="p-0179" num="0181">The entropy decoding unit <b>32</b> performs entropy decoding of the bit stream BSb output from the depacking unit <b>31</b>, obtains the indexes IDXzbp and IDXtp of the ZBP and the TP, and performs decoding of the absolute value of the MDWT coefficient data using the indexes. The entropy decoding unit <b>32</b> outputs the decoded absolute value CEb of the MDWT coefficient data and the index IDXtp of the TP to the rounding bit adding unit <b>33</b>. The entropy decoding unit <b>32</b> outputs the code CEs to the band synthesis unit <b>34</b>.</p>
<p id="p-0180" num="0182">The rounding bit adding unit <b>33</b> estimates the bit stream of the bit plane truncated by the image encoding unit <b>20</b>-<b>1</b> and performs restoration of the absolute value of the MDWT coefficient data, based on the absolute value CEb of the MDWT coefficient data and the index IDXtp of the TP. The rounding bit adding unit <b>33</b> outputs the restored absolute value CEc of the MDWT coefficient data to the band synthesis unit <b>34</b>.</p>
<p id="p-0181" num="0183">The band synthesis unit <b>34</b> performs Inverse Modified Discrete Transform using the restored absolute value CEc of the MDWT coefficient data and the code CEs. The Inverse Modified Discrete Transform is a process of returning the coefficient data obtained by the band division unit <b>22</b> of the image encoding unit <b>20</b>-<b>1</b> to the image data before the transform. The band synthesis unit <b>34</b> outputs encoded DC level shift data DVc obtained by Inverse Modified Discrete Transform to the IDC level shift unit <b>35</b>.</p>
<p id="p-0182" num="0184">The IDC level shift unit <b>35</b> adds a DC value to the decoded DC level shift data DVc and outputs image data DVd of a block unit to the outside of the image decoding unit <b>30</b>-<b>1</b>. The DC value is equal to the DC value used in the DC level shift unit <b>21</b> of the image encoding unit <b>20</b>-<b>1</b>.</p>
<p id="p-0183" num="0185">In the truncation unit, when lossless encoding is performed without performing truncation, the encoded DC level shift data DVc is equal to the image data DVb and the image data DVd becomes equal to the image data DVa.</p>
<p id="h-0017" num="0000">[2-5. Operation of Image Decoding Unit of First Embodiment]</p>
<p id="p-0184" num="0186">The operation of the image decoding unit of the first embodiment will be described using the flowchart of <figref idref="DRAWINGS">FIG. 25</figref>. In step ST<b>61</b>, the image decoding unit <b>30</b>-<b>1</b> performs acquisition of the decodable bit stream. The image decoding unit <b>30</b>-<b>1</b> analyzes the encoded data having the predetermined format using the depacking unit <b>31</b>, acquires the decodable bit stream from the encoded data, and progresses to step ST<b>62</b>.</p>
<p id="p-0185" num="0187">In step ST<b>62</b>, the image decoding unit <b>30</b>-<b>1</b> performs decoding of the bit stream. The entropy decoding unit <b>32</b> of the image decoding unit <b>30</b>-<b>1</b> decodes the indexes IDXzbp and IDXtp representing the ZBP and the TP and then decodes the absolute value of the MDWT coefficient data using the indexes. In addition, the entropy decoding unit <b>32</b> performs decoding of the code and progresses to step ST<b>63</b>.</p>
<p id="p-0186" num="0188">In step ST<b>63</b>, the image decoding unit <b>30</b>-<b>1</b> performs adding of a rounding bit. The image decoding unit <b>30</b>-<b>1</b> estimates and sets the bit stream of the bit plane truncated by the image encoding unit <b>20</b>-<b>1</b> as the rounding bit in the rounding bit adding unit <b>33</b>. In addition, the rounding bit adding unit <b>33</b> adds the estimated rounding bit to the decoded absolute value of the MDWT coefficient data, performs restoration of the absolute value of the MDWT coefficient data, and progresses to step ST<b>64</b>.</p>
<p id="p-0187" num="0189">In step ST<b>64</b>, the image decoding unit <b>30</b>-<b>1</b> performs Inverse Modified Discrete Wavelet Transform (IMDWT). The band synthesis unit <b>34</b> of the image decoding unit <b>30</b>-<b>1</b> performs IMDWT using the restored absolute value of the MDWT coefficient data and the decoded code, obtains a decoded DC level shift signal, and progresses to step ST<b>65</b>.</p>
<p id="p-0188" num="0190">In step ST<b>65</b>, the image decoding unit <b>30</b>-<b>1</b> performs an IDC level shift. The image decoding unit <b>30</b>-<b>1</b> adds the DC level to the decoded DC level shift signal in the IDC level shift unit <b>35</b>, obtains decoded image data, and finishes the process.</p>
<p id="h-0018" num="0000">[2-6. Operation of Each Unit of Image Decoding Unit]</p>
<p id="h-0019" num="0000">[2-6-1. Operation of Entropy Decoding Unit]</p>
<p id="p-0189" num="0191">Next, the operation of the entropy decoding unit <b>32</b> will be described. The entropy decoding unit <b>32</b> receives the bit stream supplied from the depacking unit <b>31</b> and the additional information (including the mode flag representing the transform table used for encoding of the bit stream) necessary for decoding as an input.</p>
<p id="p-0190" num="0192">The entropy decoding unit <b>32</b> decodes the index IDXzbp of the ZBP and the index IDXtp of the TP. The index IDXzbp of the ZBP and the index IDXtp of the TP are encoded using, for example, one or a plurality of Huffman tables, as described in the operation of the entropy-encoding unit <b>24</b> of the image encoding unit <b>20</b>-<b>1</b>. Accordingly, the entropy decoding unit <b>32</b> determines, by the mode flag, which of the transform tables is used for the encoding.</p>
<p id="p-0191" num="0193"><figref idref="DRAWINGS">FIG. 26</figref> is a flowchart illustrating the decoding operation of the index IDXzbp of the ZBP. In step ST<b>71</b>, the entropy decoding unit <b>32</b> determines whether encoding is performed using the ZBP_Hard_table. The entropy decoding unit <b>32</b> determines the transform table used for encoding of the index IDXzbp of the ZBP based on the mode flag of the additional information. The entropy decoding unit <b>32</b> progresses to step ST<b>72</b> when it is determined that the ZBP_Hard_table is used and progresses to step ST<b>73</b> when it is determined that the ZBP_Easy_table is used.</p>
<p id="p-0192" num="0194">In step ST<b>72</b>, the entropy decoding unit <b>32</b> performs decoding using the ZBP_Hard_table. The entropy decoding unit <b>32</b> performs decoding using the ZBP_Hard_table, acquires the index IDXzbp of the ZBP, and finishes the decoding operation.</p>
<p id="p-0193" num="0195">In step ST<b>73</b>, the entropy decoding unit <b>32</b> performs decoding using the ZBP_Easy_table. The entropy decoding unit <b>32</b> performs decoding using the ZBP_Easy_table, acquires the index IDXzbp of the ZBP, and finishes the decoding operation.</p>
<p id="p-0194" num="0196"><figref idref="DRAWINGS">FIG. 27</figref> is a flowchart illustrating the decoding operation of the index of the TP. In step ST<b>76</b>, the entropy decoding unit <b>32</b> determines whether encoding is performed using the TP_Hard_table. The entropy decoding unit <b>32</b> determines the transform table used for encoding of the index IDXtp of the TP based on the additional information. The entropy-encoding unit <b>32</b> progresses to step ST<b>77</b> when it is determined that the TP_Hard_table is used and progresses to step ST<b>78</b> when it is determined that the TP_Easy_table is used.</p>
<p id="p-0195" num="0197">In step ST<b>77</b>, the entropy decoding unit <b>32</b> performs decoding using the TP_Hard_table. The entropy decoding unit <b>32</b> performs decoding using the TP_Hard_table, acquires the index IDXtp of the TP, and finishes the decoding operation.</p>
<p id="p-0196" num="0198">In step ST<b>78</b>, the entropy decoding unit <b>32</b> performs decoding using the TP_Easy_table. The entropy decoding unit <b>32</b> performs decoding using the TP_Easy_table, acquires the index IDXtp of the TP, and finishes the decoding operation.</p>
<p id="p-0197" num="0199">As a result of decoding the index IDXzbp of the ZBP and the index IDXtp of the TP, it is determined which part of the bit plane is encoded. For example, in <figref idref="DRAWINGS">FIG. 28</figref>, the position represented by the index IDXzbp of the ZBP obtained by decoding is represented by a rightward rising oblique line. The position represented by the index IDXtp of the TP obtained by decoding is represented by a leftward rising oblique line. If the index IDXzbp of the ZBP and the index IDXtp of the TP are obtained, a range from the bit plane located below the ZBP to the bit plane represented by the index IDXtp of the TP may be determined as an encoded range. In addition, from the point that the encoded range becomes apparent, it is determined to which sub-block of which bit plane the data obtained by decoding the bit stream belongs.</p>
<p id="p-0198" num="0200">In <figref idref="DRAWINGS">FIG. 28</figref>, the filled bit plane located below the bit plane represented by the index IDXtp of the TP is a bit plane truncated by the image encoding unit <b>20</b>-<b>1</b>.</p>
<p id="p-0199" num="0201">The bit stream representing the absolute value of the MDWT coefficient data is encoded using, for example, one or a plurality of Huffman tables, as described in the operation of the entropy-encoding unit <b>24</b> of the image encoding unit <b>20</b>-<b>1</b>. The entropy decoding unit <b>32</b> determines which transform table is used to perform encoding according to the mode flag of the additional information.</p>
<p id="p-0200" num="0202"><figref idref="DRAWINGS">FIG. 29</figref> is a flowchart illustrating the decoding operation of the bit stream representing the absolute value of the MDWT coefficient data. In step ST<b>81</b>, the entropy decoding unit <b>32</b> determines whether encoding is performed using the Coef_Hard_table. The entropy decoding unit <b>32</b> determines the transform table used for encoding of the absolute value of the MDWT coefficient data based on the additional information. The entropy decoding unit <b>32</b> progresses to step ST<b>82</b> when it is determined that the Coef_Hard_table is used and progresses to step ST<b>83</b> when it is determined that the Coef_Easy_table is used.</p>
<p id="p-0201" num="0203">In step ST<b>82</b>, the entropy decoding unit <b>32</b> performs decoding using the Coef_Hard_table. The entropy decoding unit <b>32</b> performs decoding using the Coef_Hard_table, acquires the data representing the absolute value of the MDWT coefficient data, and finishes the decoding operation.</p>
<p id="p-0202" num="0204">In step ST<b>83</b>, the entropy decoding unit <b>32</b> performs decoding using the Coef_Easy_table. The entropy decoding unit <b>32</b> performs decoding using the Coef_Easy_table, acquires the data representing the absolute value of the MDWT coefficient data, and finishes the decoding operation. In addition, the example of the transform table or the context is the same as for those described as the operation of the entropy-encoding unit <b>24</b> of the image encoding unit <b>20</b>-<b>1</b>.</p>
<p id="h-0020" num="0000">[2-6-2. Operation of Rounding Bit Adding Unit]</p>
<p id="p-0203" num="0205">The rounding bit adding unit <b>33</b> estimates a lower-order bit truncated by the image encoding unit <b>20</b>-<b>1</b> and restores the absolute value of the MDWT coefficient data. The rounding bit adding unit <b>33</b> determines the position of the lower-order bit truncated by the image encoding unit <b>20</b>-<b>1</b> based on the index IDXtp of the TP and estimates the data of the determined position. For example, in the case shown in <figref idref="DRAWINGS">FIG. 28</figref>, the rounding bit adding unit <b>33</b> estimates the data of the filled bit plane located below the bit plane indicated by the index IDXtp of the TP.</p>
<p id="p-0204" num="0206">There are several estimation methods, but, as an example of a simple method, the estimated data is acquired by referring to a table prepared based on statistics in advance. For example, the rounding bit adding unit <b>33</b> sets the value according to the index IDXtp of the TP as estimated data using the index IDXtp of the PT as the context, as shown in <figref idref="DRAWINGS">FIG. 30</figref>. The reason why the index IDXtp of the TP is used as the context is because the value is appropriately added by the position of the truncated bit plane. The rounding bit adding unit <b>33</b> adds the estimated data to the data representing the absolute value of the coefficient data and outputs the added data to the band synthesis unit <b>34</b>.</p>
<p id="h-0021" num="0000">[2-6-3. Operation of Band Synthesis Unit]</p>
<p id="p-0205" num="0207">The band synthesis unit <b>34</b> performs Inverse Modified Discrete Wavelet Transform (IMDWT) which is the inverse modified discrete transform of the MDWT performed by the image encoding unit <b>20</b>-<b>1</b>. As described in the image encoding unit <b>20</b>-<b>1</b>, the MDWT is fundamentally equal to the DWT, but replacement of the spatial position of the low-band signal is performed whenever band division is performed in order to improve band division precision of a signal end. Accordingly, the band synthesis unit <b>34</b> returns the spatial position of the low-band signal in the input MDWT coefficient data to an original position by the inverse operation of the operation performed upon encoding. Thereafter, similar to the IDWT, deinterleaving, target period extension and two-stage lifting operation are performed to perform band synthesis. In addition, in a case where band synthesis is repeated, an operation for returning the low-band signal to the original spatial position is first performed. The band synthesis unit <b>34</b> performs such a process and generates the decoded DC level shift signal.</p>
<p id="p-0206" num="0208"><figref idref="DRAWINGS">FIGS. 31A to 31F</figref> are diagrams illustrating the operation of the band synthesis unit <b>34</b>. <figref idref="DRAWINGS">FIG. 31A</figref> shows the MDWT coefficient data. The band synthesis unit <b>34</b> performs a process of returning the spatial position of the low-band signal to the original position by the inverse operation of the operation performed upon encoding, as shown in <figref idref="DRAWINGS">FIG. 31B</figref>. Next, the band synthesis unit <b>34</b> performs deinterleaving as shown in <figref idref="DRAWINGS">FIG. 31C</figref> and performs target period extension as shown in <figref idref="DRAWINGS">FIG. 31D</figref>. Thereafter, the band synthesis unit <b>34</b> performs the 2-stage lifting operation so as to perform band synthesis as shown in <figref idref="DRAWINGS">FIGS. 31E and 31F</figref> and generates the decoded DC level shift signal shown in <figref idref="DRAWINGS">FIG. 31F</figref>.</p>
<p id="p-0207" num="0209">In addition, the IMDWT may reconfigure not only a one-dimensional signal but also various signals which are band-divided with respect to a two-dimensional block, similar to the IDWT of the related art. In addition, different filters may be used in a horizontal direction and a vertical direction. In the signal reconfiguration filter, a filter other than the IDWT may be used.</p>
<p id="p-0208" num="0210">In this way, when encoding or decoding of the image data is performed by the image encoding unit <b>20</b>-<b>1</b> and the image decoding unit <b>30</b>-<b>1</b>, since the spatial position is rearranged with respect to the coefficient data of the low-band component obtained by frequency band division, frequency band division is repeated with respect to the coefficient data of the low-band component. Even when the coefficient data of each of the plurality of frequency bands is generated, for example, since the position of the coefficient data of the low-band component generated using the extended image data is not fixed, the influence of the deterioration of band division precision is not repeatedly applied due to the use of the extended image data. Accordingly, even when image encoding is performed in block units, a decoded image with low block distortion is obtained.</p>
<p id="p-0209" num="0211">The coefficient data is divided as a sub-block for each predetermined number and a variation in the distortion amount of the image when the bit plane of the coefficient data is truncated for each sub-block is estimated. With respect to the estimation result, the sub-block located on the end of the block is weighted so as to be not easily truncated compared with the sub-block of another position. Based on the estimation result after weighting, the truncation position in which image distortion is low and the code amount is within the target code amount is detected and the truncation of the coefficient data or the like is performed. Accordingly, since the risk of the coefficient data of the end of the block being truncated can be suppressed, it is possible to lessen distortion in the boundary between blocks.</p>
<heading id="h-0022" level="1">3. Second Embodiment</heading>
<p id="h-0023" num="0000">[3-1. Configuration of Image Encoding Unit of Second Embodiment]</p>
<p id="p-0210" num="0212">The configurations of the image encoding unit and the image decoding unit are not limited to the configuration of <figref idref="DRAWINGS">FIG. 5</figref> or <figref idref="DRAWINGS">FIG. 24</figref>. <figref idref="DRAWINGS">FIG. 32</figref> shows the configuration of an image encoding unit of a second embodiment.</p>
<p id="p-0211" num="0213">The image encoding unit <b>20</b>-<b>2</b> has the configuration in which the DC level shift unit <b>21</b>, the distortion characteristic estimation unit <b>25</b> and the packing unit <b>27</b> are omitted from the image encoding unit <b>20</b>-<b>1</b> shown in <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0212" num="0214">In this case, the band division unit <b>22</b> performs MDWT with respect to the input image data, instead of the DC level shifted signal. In addition, if the distortion characteristic estimation unit <b>25</b> which becomes a criterion for performing truncation is omitted, for example, the encoding distortion EC&#x394;D<sub>i</sub><sup>(p) </sup>or the slope (EC&#x394;D<sub>i</sub><sup>(p)</sup>/&#x394;Ri(p)) is calculated by the distortion characteristic estimation unit <b>25</b> in advance, and is stored in a distortion characteristic table <b>29</b>. The distortion characteristic table is input to the truncation unit <b>26</b> and the truncation unit <b>26</b> performs truncation based on the distortion characteristic table. In addition, in the entropy-encoding unit <b>24</b>, if the number of encoding tables used in the ZBP, the TP and the bit plane is one and there is no information added to the truncated bit stream, the truncated bit stream may be output from the image encoding unit <b>20</b>-<b>2</b> as encoded data. In this case, the packing unit <b>27</b> may also be omitted.</p>
<p id="h-0024" num="0000">[3-2. Configuration of Image Decoding Unit of Second Embodiment]</p>
<p id="p-0213" num="0215"><figref idref="DRAWINGS">FIG. 33</figref> shows the configuration of the image decoding unit of the second embodiment. The image decoding unit <b>30</b>-<b>2</b> has the configuration in which the depacking unit <b>31</b>, the rounding bit adding unit <b>33</b> and the IDC level shift unit <b>35</b> are omitted from the image decoding unit <b>30</b>-<b>1</b> shown in <figref idref="DRAWINGS">FIG. 24</figref>.</p>
<p id="p-0214" num="0216">If the encoded data generated by the image encoding unit <b>20</b>-<b>2</b> shown in <figref idref="DRAWINGS">FIG. 32</figref> includes only the bit stream and does not include additional information, the depacking unit <b>31</b> may not be provided in the image decoding unit <b>30</b>-<b>2</b>. In addition, since the rounding bit adding unit <b>33</b> is not a component necessary for decoding and is provided for the purpose of improving the image quality of the decoded signal, the rounding bit adding unit may be omitted. In the case where DC level shift is not performed in the image encoding unit <b>20</b>-<b>2</b>, the IDC level shift unit <b>35</b> may not be provided. Accordingly, if the image decoding unit <b>30</b>-<b>2</b> of the configuration shown in <figref idref="DRAWINGS">FIG. 33</figref> is used, the bit stream output from the image encoding unit <b>20</b>-<b>2</b> may be decoded.</p>
<heading id="h-0025" level="1">4. Third Embodiment</heading>
<p id="h-0026" num="0000">[4-1. Configuration of Image Encoding Unit of Third Embodiment]</p>
<p id="p-0215" num="0217">Next, a third embodiment which may further increase encoding efficiency as compared with the above-described first and second embodiment will be described. <figref idref="DRAWINGS">FIG. 34</figref> shows the configuration of the image encoding unit of the third embodiment.</p>
<p id="p-0216" num="0218">The image encoding unit <b>20</b>-<b>3</b> includes a DC level shift unit <b>21</b>, a band division unit <b>22</b>, a Significant Bit (SB)/Zero Bit Plane (ZBP) detection unit <b>23</b>, an entropy-encoding unit <b>24</b>, a distortion characteristic estimation unit <b>25</b>, a truncation unit <b>26</b> and a packing unit <b>27</b>, similar to the first embodiment. In addition, a ZBP orthogonal transform unit <b>28</b> is provided in the image encoding unit <b>20</b>-<b>3</b>.</p>
<p id="p-0217" num="0219">Similar to the first embodiment, the DC level shift unit <b>21</b> performs level shift of a DC component of image data, in order to efficiently perform frequency band division by the band division unit <b>22</b>. The DC level shift unit <b>21</b>, for example, subtracts a DC value from input image data DVa of a block unit of M&#xd7;N pixels and outputs the subtracted value to the band division unit <b>22</b>. The band division unit <b>22</b> performs frequency band division of image data DVb output from the DC level shift unit <b>21</b>. The band division unit <b>22</b> performs frequency band division again after rearranging a spatial position with respect to coefficient data of a low-band component obtained by frequency band division and generates coefficient data of each of a plurality of frequency bands from image data within a block of M&#xd7;N pixels. The band division unit <b>22</b> performs frequency band division using, for example, Modified Discrete Wavelet Transform (MDWT). The band division unit <b>22</b> outputs an absolute value CEa of MDWT coefficient data obtained by performing MDWT to the SB/ZBP detection unit <b>23</b>, the entropy-encoding unit <b>24</b> and the distortion characteristic estimation unit <b>25</b>. In addition, the band division unit <b>22</b> outputs a code CEs of the MDWT coefficient data obtained by performing MDWT to the truncation unit <b>26</b>. The SB/ZBP detection unit <b>23</b> detects a Significant Bit (SB) and a Zero Bit Plane (ZBP) from the absolute value of the MDWT coefficient data. The SB/ZBP detection unit <b>23</b> outputs an SB detection result DTsb to the entropy-encoding unit <b>24</b> and the distortion characteristic estimation unit <b>25</b>. In addition, the SB/ZBP detection unit <b>23</b> supplies a ZBP detection result DTzbp to the distortion characteristic estimation unit <b>25</b>, the truncation unit <b>26</b> and the ZBP orthogonal transform unit <b>28</b>.</p>
<p id="p-0218" num="0220">The ZBP orthogonal transform unit <b>28</b> provided in the third embodiment performs orthogonal transform of the ZBP detection result DTzbp. The ZBP orthogonal transform unit <b>28</b> performs orthogonal transform using the ZBP detection result DTzbp as a numerical string and supplies a ZBP orthogonal transform result DTtzbp which is a numerical string after the transform to the entropy-encoding unit <b>24</b>.</p>
<p id="p-0219" num="0221">The entropy-encoding unit <b>24</b> entropy-encodes a bit plane of the absolute value CEa of the MDWT coefficient data, a ZBP and a Truncation Point (TP), using the absolute value CEa of the MDWT coefficient data, the SB detection result DTsb, and the ZBP orthogonal transform result DTtzbp. The entropy-encoding unit <b>24</b> outputs a bit stream BSa obtained by performing entropy-encoding to the truncation unit <b>26</b>. In addition, the entropy-encoding unit <b>24</b> outputs a bit stream length DTbs obtained by performing entropy-encoding to the distortion characteristic estimation unit <b>25</b> and the truncation unit <b>26</b>. In addition, the entropy-encoding unit <b>24</b> outputs a mode flag MF obtained by performing entropy-encoding to the packing unit <b>27</b>.</p>
<p id="p-0220" num="0222">Similar to the first embodiment, the distortion characteristic estimation unit <b>25</b> performs distortion characteristic estimation based on the absolute value CEa of the MDWT coefficient data, the SB detection result DTsb, the ZBP detection result DTzbp and the bit stream length DTbs and outputs a distortion characteristic estimation result Erd to the truncation unit <b>26</b>. The truncation unit <b>26</b> decides a bit stream and a code of encoding symmetry such that a code amount is within a predetermined target code amount using the bit stream BSa, the bit stream length DTbs, the ZBP detection result DTzbp, the code CEs and the distortion characteristic estimation result Erd. The packing unit <b>27</b> transforms the truncated bit stream BSb and the mode flag MF into a predetermined format and prepares encoded data Dpd which is decodable by the image decoding unit <b>30</b>-<b>3</b>. The packing unit <b>27</b> outputs the prepared encoded data Dpd from the image encoding unit <b>20</b>-<b>3</b>.</p>
<p id="h-0027" num="0000">[4-2. Operation of Image Encoding Unit of Third Embodiment]</p>
<p id="p-0221" num="0223"><figref idref="DRAWINGS">FIG. 35</figref> is a flowchart illustrating an operation of an image encoding unit according to the third embodiment. In <figref idref="DRAWINGS">FIG. 35</figref>, the processes corresponding to the image encoding unit of the first embodiment are denoted by the same reference numerals.</p>
<p id="p-0222" num="0224">In step ST<b>11</b>, the image encoding unit <b>20</b>-<b>3</b> performs DC level shift. The image encoding unit <b>20</b>-<b>3</b> performs DC level shift with respect to the input image data DVa by the DC level shift unit <b>21</b> and progresses to step ST<b>12</b>.</p>
<p id="p-0223" num="0225">In step ST<b>12</b>, the image encoding unit <b>20</b>-<b>3</b> performs MDWT. The image encoding unit <b>20</b>-<b>3</b> performs MDWT with respect to the DC level shifted image data DVb by the band division unit <b>22</b>, obtains the absolute value CEa of the MDWT coefficient data and the code CEs, and progresses to step ST<b>13</b>.</p>
<p id="p-0224" num="0226">In step ST<b>13</b>, the image encoding unit <b>20</b>-<b>3</b> performs SB and ZBP detection. The image encoding unit <b>20</b>-<b>3</b> detects the SB and the ZBP from the absolute value CEa of the MDWT coefficient data by the SB/ZBP detection unit <b>23</b> and progresses to step ST<b>13</b><i>a. </i></p>
<p id="p-0225" num="0227">In step ST<b>13</b><i>a</i>, the image encoding unit <b>20</b>-<b>3</b> performs orthogonal transform of the ZBP detection result. The image encoding unit <b>20</b>-<b>3</b> performs orthogonal transform of the ZBP detection result DTzbp obtained by the SB/ZBP detection unit <b>23</b>, calculates the ZBP orthogonal transform result DTtzbp, and progresses to step ST<b>14</b>.</p>
<p id="p-0226" num="0228">In step ST<b>14</b>, the image encoding unit <b>20</b>-<b>3</b> performs entropy-encoding. The image encoding unit <b>20</b>-<b>3</b> performs entropy-encoding with respect to the bit plane of the absolute value CEa of the MDWT coefficient data, the SB detection result DTsb and the ZBP orthogonal transform result DTtzbp by the entropy-encoding unit <b>24</b>, obtains the bit stream BSa, the bit stream length DTbs and the mode flag MF, and progresses to step ST<b>15</b>.</p>
<p id="p-0227" num="0229">In step ST<b>15</b>, the image encoding unit <b>20</b>-<b>3</b> performs distortion characteristic estimation. The image encoding unit <b>20</b>-<b>3</b> performs distortion characteristic estimation based on the absolute value CEa of the MDWT coefficient data, the SB detection result DTsb, the ZBP detection result DTzbp and the bit stream length DTbs by the distortion characteristic estimation unit <b>25</b> and progresses to step ST<b>16</b>.</p>
<p id="p-0228" num="0230">In step ST<b>16</b>, the image encoding unit <b>20</b>-<b>3</b> performs truncation. The image encoding unit <b>20</b>-<b>3</b> performs truncation as necessary, based on the bit stream BSa, the bit stream length DTbs, the ZBP detection result DTzbp, the code CEs and the distortion characteristic estimation result Erd, by the truncation unit <b>26</b>. The image encoding unit <b>20</b>-<b>3</b> performs truncation of the bit stream and the code when the bit stream length is not fitted into a target code length and progresses to step ST<b>17</b> when the code length of the bit stream BSb is equal to or less than the target code length.</p>
<p id="p-0229" num="0231">In step ST<b>17</b>, the image encoding unit <b>20</b>-<b>3</b> performs transform into a predetermined format. The image encoding unit <b>20</b>-<b>3</b> transforms additional information including the mode flag MF and the truncated bit stream BSb into a predetermined format using the packing unit <b>27</b>, generates the encoded data Dpd, and finishes an encoding process.</p>
<p id="h-0028" num="0000">[4-3. Operation of Each Unit of Image Encoding Unit]</p>
<p id="p-0230" num="0232">Next, the operation of each unit of the image encoding unit of the third embodiment will be described. The band division unit <b>22</b> rearranges the spatial position with respect to the coefficient data of the low-band component, in addition to Discrete Wavelet Transform (DWT), and generates the MDWT coefficient data, as described in the above [2-3-1. Operation of Band Division Unit].</p>
<p id="p-0231" num="0233">The SB/ZBP detection unit <b>23</b> obtains and sets the index IDXsb of the SB for each piece of the MDWT coefficient data output from the band division unit <b>22</b> to the SB detection result DTsb, as described in the above [2-3-2. Operation of SB/ZBP Detection Unit]. For each sub-block including J pieces of coefficient data, the index IDXzbp of the ZBP is obtained and set to the ZBP detection result DTzbp.</p>
<p id="p-0232" num="0234">The ZBP orthogonal transform unit <b>28</b> performs orthogonal transform of the ZBP detection result DTzbp. The ZBP orthogonal transform unit <b>28</b> performs orthogonal transform using the ZBP detection result DTzbp as a numerical string and calculates the ZBP orthogonal transform result DTtzbp. The ZBP orthogonal transform unit <b>28</b> uses, for example, Haar transform as orthogonal transform.</p>
<p id="p-0233" num="0235">Equations (7) and (8) show Haar transform, &#x201c;X(n)&#x201d; denotes a numerical string of an input, &#x201c;Y(n)&#x201d; denotes a numerical string of an output, &#x201c;N&#x201d; denotes the number of elements of a numerical string, and &#x201c;n&#x201d; denotes an index of a numerical string. In addition, &#x201c;n&#x201d; is &#x201c;0n&#x3c;N/2&#x201d;.
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>Y</i>(<i>n+N/</i>2)=<i>X</i>(2<i>n+</i>1)&#x2212;<i>X</i>(2<i>n</i>)&#x2003;&#x2003;(7)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>Y</i>(<i>n</i>)=<i>X</i>(2<i>n</i>)+(<i>Y</i>(<i>n+N/</i>2)&#x3e;&#x3e;1)&#x2003;&#x2003;(8)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0234" num="0236"><figref idref="DRAWINGS">FIGS. 36A to 36D</figref> show a transform process of Haar transform. <figref idref="DRAWINGS">FIG. 36A</figref> shows the case where, when the ZBP detection result DTzbp is a numerical string, the numerical string is &#x201c;1, 2, 4, 3, 5, 7, 6, 7&#x201d;. The ZBP orthogonal transform unit <b>28</b> performs Haar transform as &#x201c;N=8&#x201d; from the numerical string including eight digits. If the operation of Equation (7) is performed, the fifth to eighth values &#x201c;1, &#x2212;1, 2, 1&#x201d; from the left side of <figref idref="DRAWINGS">FIG. 36B</figref> are calculated. If the operation of Equation (8) is performed using the values calculated using Equation (7) and the value of <figref idref="DRAWINGS">FIG. 36A</figref>, the first to fourth values &#x201c;1, 4, 6, 6&#x201d; from the left side of <figref idref="DRAWINGS">FIG. 36B</figref> are calculated. In Equation (8), (Y(n+N/2)&#x3e;&#x3e;1) is a process of shifting the data of &#x201c;Y(n+N/2)&#x201d; to the right by 1 bit to halve the data.</p>
<p id="p-0235" num="0237">Next, using &#x201c;N=4&#x201d;, the operations of Equations (7) and (8) are performed with respect to a numerical string shown in <figref idref="DRAWINGS">FIG. 36B</figref>. If the operation of Equation (7) is performed, the third to fourth values &#x201c;3, 3&#x201d; from the left side of <figref idref="DRAWINGS">FIG. 36C</figref> are calculated. If the operation of Equation (8) is performed using the values calculated using Equation (7) and the value of <figref idref="DRAWINGS">FIG. 36B</figref>, the first and second values &#x201c;2, 6&#x201d; from the left side of <figref idref="DRAWINGS">FIG. 36C</figref> are calculated.</p>
<p id="p-0236" num="0238">Next, using &#x201c;N=2&#x201d;, the operations of Equations (7) and (8) are performed with respect to a numerical string shown in <figref idref="DRAWINGS">FIG. 36C</figref>. If the operation of Equation (7) is performed, the second value &#x201c;4&#x201d; from the left side of <figref idref="DRAWINGS">FIG. 36D</figref> is calculated. If the operation of Equation (8) is performed using the value calculated using Equation (7) and the value of <figref idref="DRAWINGS">FIG. 36C</figref>, the left-end value &#x201c;4&#x201d; of <figref idref="DRAWINGS">FIG. 36D</figref> is calculated. Accordingly, if Haar transform is performed with respect to the numerical string &#x201c;1, 2, 4, 3, 5, 7, 6, 7&#x201d;, the transform result becomes &#x201c;4, 4, 3, 0, 1, &#x2212;1, 2, 1&#x201d;.</p>
<p id="p-0237" num="0239">In this way, the ZBP orthogonal transform unit <b>28</b> performs orthogonal transform of the numerical string representing the ZBP detection result DTzbp and generates the ZBP orthogonal transform result DTtzbp in which a numerical generation distribution is biased.</p>
<p id="p-0238" num="0240">The entropy-encoding unit <b>24</b> entropy-encodes three types of the index IDXtzbp representing the ZBP orthogonal transform result DTtzbp, the index IDXtp of the TP, and the bit plane, using the ZBP orthogonal transform result DTtzbp, instead of the ZBP detection result DTzbp in the description of [2-3-3. Operation of Entropy-encoding Unit].</p>
<p id="p-0239" num="0241"><figref idref="DRAWINGS">FIG. 37</figref> shows a relationship between ZBP orthogonal transform result DTtzbp and the index IDXtzbp. A numerical string representing the ZBP orthogonal transform result DTtzbp becomes several values of &#x201c;0 to 9&#x201d; when the index IDXtzbp is set as shown in <figref idref="DRAWINGS">FIG. 10</figref>. In addition, if the numerical string representing the ZBP orthogonal transform result DTtzbp becomes several values of &#x201c;0 to 9&#x201d;, the numerical string of the ZBP orthogonal transform result DTtzbp becomes a numerical value in a range of &#x201c;&#x2212;9 to 9&#x201d;. Accordingly, the entropy-encoding unit <b>24</b> sets the index IDXtzbp corresponding to the orthogonal transform value of the ZBP orthogonal transform result DTtzbp.</p>
<p id="p-0240" num="0242">The entropy-encoding unit <b>24</b> replaces the symbol with the index IDXtzbp for each index using a transform table. The transform table uses, for example, a Huffman table prepared based on statistical data. If the orthogonal transform of the ZBP detection result DTabp is performed, as described above, a probability that each index of IDXtzbp is generated may be biased. Accordingly, if entropy-encoding is performed using the ZBP orthogonal transform result DTtzbp in which a numerical value generation distribution is biased, a code amount may be reduced compared with the case where entropy-encoding is performed using the ZBP detection result DTzbp. In detail, using the transform table shown in <figref idref="DRAWINGS">FIG. 38</figref>, a symbol corresponding to a combination of the index IDXtzbp of the ZBP and the context is selected as the encoding result. The transform table shown in <figref idref="DRAWINGS">FIG. 38</figref> uses the Huffman table or the like, which is prepared based on statistical data.</p>
<p id="p-0241" num="0243">In the case of ZBP orthogonal transform using Haar transform, a band (sub-band) of Haar transform to which each index belongs is used as the context. This is because, as a Haar transform property, a statistical property of an appearance probability of an index is different for each sub-band.</p>
<p id="p-0242" num="0244">In addition, the transform table is not limited to the case of using one transform table and a transform table used for encoding may be selected from among a plurality of transform tables. For example, two types of tables including a ZBP_Easy_table applied to the index IDXzbp (encoding is simple) of the ZBP relatively in line with statistical data and a ZBP_Hard_table applied to that (encoding is different) deviated from statistical data are used.</p>
<p id="p-0243" num="0245">In the case of performing the entropy-encoding method of the index IDXtzbp using the two types of transform tables, similar to the case of <figref idref="DRAWINGS">FIG. 12</figref>, encoding using the ZBP_Hard_table and encoding using the ZBP_Easy_table are performed and a bit stream length of a block unit of M&#xd7;N pixels is obtained. In addition, the obtained bit stream length is compared, and an encoding result having a short bit stream length is selected and output. Using an average value of the index IDXtzbp instead of the average value of the index IDXzbp of the case of <figref idref="DRAWINGS">FIG. 13</figref>, according to the comparison result of the average value and the threshold, an encoding result using any one of the ZBP_Hard_table or the ZBP_Easy_table may be output.</p>
<p id="p-0244" num="0246">The entropy-encoding unit <b>24</b> performs entropy-encoding of the index IDXtp of the TP or encoding of the bit plane as described in the above [2-3-3. Operation of Entropy-encoding Unit] and generates the bit stream. In the entropy-encoding of the bit plane, unlike the encoding of the ZBP orthogonal transform result or the TP, the coefficient bit (for example, the value of &#x201c;1, 0&#x201d;) of the bit plane is encoded. As the context of the transform table, the index IDXbp of the bit plane, the sub-band to which the bit plane belongs, the SB_flag or the like is used.</p>
<p id="p-0245" num="0247">The entropy-encoding unit <b>24</b> records the respective bit stream lengths when the bit streams are generated, in the entropy-encoding of the ZBP orthogonal transform result, the TP and the bit plane. These are necessary in the distortion characteristic estimation unit <b>25</b> of a subsequent stage. In particular, the bit stream lengths of the TP and the bit plane are necessary to be recorded in each bit plane and each sub-block, in order to perform truncation.</p>
<p id="p-0246" num="0248">The distortion characteristic estimation unit <b>25</b> estimates the distortion characteristic representing a relationship between a code amount and distortion, in order to determine which bit plane is truncated by the truncation unit <b>26</b>, as described in the above [2-3-4. Operation of Distortion Characteristic Estimation Unit].</p>
<p id="p-0247" num="0249">The truncation unit <b>26</b> performs sorting of the bit plane for obtaining optimal image quality within the target code length based on the distortion characteristic estimation result Erd output from the distortion characteristic estimation unit <b>25</b>, as described in the above [2-3-5. Operation of Truncation Unit]. The packing unit <b>27</b> transforms the mode flag MF and the bit stream (ZBP, TP, bit plane, code) BSb after truncation into a predetermined format and generates encoded data Dpd which is decodable by the image decoding unit <b>30</b>-<b>3</b>, as described in the above [2-3-6. Operation of Packing Unit].</p>
<p id="h-0029" num="0000">[4-4. Configuration of Image Decoding Unit of Third Embodiment]</p>
<p id="p-0248" num="0250"><figref idref="DRAWINGS">FIG. 39</figref> shows the configuration of an image decoding unit of the third embodiment. The image decoding unit <b>30</b>-<b>3</b> includes a depacking unit <b>31</b>, an entropy decoding unit <b>32</b>, a rounding bit adding unit <b>33</b>, a band synthesis unit <b>34</b>, an IDC level shift unit <b>35</b>, and the like, similar to the first embodiment. In the image decoding unit <b>30</b>-<b>3</b>, a ZBP decoding unit <b>37</b> and a ZBP inverse orthogonal transform unit <b>38</b> are provided.</p>
<p id="p-0249" num="0251">The depacking unit <b>31</b> receives the encoded data Dpd having the predetermined format, which is generated by the image encoding unit <b>20</b>-<b>3</b>, performs analysis, and acquires additional information necessary for decoding the bit stream by the entropy decoding unit <b>32</b>. The depacking unit <b>31</b> decouples, for example, the bit stream and the information (including the mode flag) necessary for decoding the bit stream from the encoded data having the format shown in <figref idref="DRAWINGS">FIG. 23</figref>. In addition, if the encoded data of the plurality of component signals is collected as one piece of encoded data, the depacking unit <b>31</b> performs such decoupling and outputs the decodable bit stream BSb to the entropy decoding unit <b>32</b> and the ZBP decoding unit <b>37</b> along with the additional information necessary for decoding of the bit stream.</p>
<p id="p-0250" num="0252">The ZBP decoding unit <b>37</b> performs decoding of the bit stream using the additional information (for example, a flag representing a transform table upon encoding) necessary for the decoding of the ZBP. The ZBP decoding unit <b>37</b> performs entropy decoding of the bit stream using the same transform table as during encoding and generates the index IDXtzbp. In addition, the ZBP decoding unit <b>37</b> replaces the ZBP orthogonal transform result DTtzbp with the index IDXtzbp according to the same rule as during encoding and outputs the replaced result to the ZBP inverse orthogonal transform unit <b>38</b>.</p>
<p id="p-0251" num="0253">The ZBP inverse orthogonal transform unit <b>38</b> performs inverse orthogonal transform of the ZBP orthogonal transform result DTtzbp supplied from the ZBP decoding unit <b>37</b>, and generates and outputs the ZBP detection result DTzbp to the entropy decoding unit <b>32</b>.</p>
<p id="p-0252" num="0254">The entropy decoding unit <b>32</b> performs entropy decoding of the bit stream BSb output from the depacking unit <b>31</b>, obtains the index IDXtp of the TP, and performs decoding of the absolute value of the MDWT coefficient data using the index IDXtp and the ZBP detection result DTzbp. The entropy decoding unit <b>32</b> outputs the decoded absolute value CEb of the MDWT coefficient data and the index IDXtp of the TP obtained by performing entropy decoding of the bit stream BSb to the rounding bit adding unit <b>33</b>. The entropy decoding unit <b>32</b> outputs the code CEs to the band synthesis unit <b>34</b>.</p>
<p id="p-0253" num="0255">The rounding bit adding unit <b>33</b> estimates the bit stream of the bit plane truncated by the image encoding unit <b>20</b>-<b>3</b> and performs restoration of the absolute value of the MDWT coefficient data, based on the absolute value CEb of the MDWT coefficient data and the index IDXtp of the TP. The rounding bit adding unit <b>33</b> outputs the restored absolute value CEc of the MDWT coefficient data to the band synthesis unit <b>34</b>.</p>
<p id="p-0254" num="0256">The band synthesis unit <b>34</b> performs Inverse Modified Discrete Transform using the restored absolute value CEc of the MDWT coefficient data and the code CEs. The Inverse Modified Discrete Transform is a process of returning the coefficient data obtained by the band division unit <b>22</b> of the image encoding unit <b>20</b>-<b>3</b> to the image data before the transform. The band synthesis unit <b>34</b> outputs encoded DC level shift data DVc obtained by Inverse Modified Discrete Transform to the IDC level shift unit <b>35</b>.</p>
<p id="p-0255" num="0257">The IDC level shift unit <b>35</b> adds a DC value to the encoded DC level shift data DVc and outputs image data DVd of a block unit to the outside of the image decoding unit <b>30</b>-<b>3</b>. The DC value is equal to the DC value used in the DC level shift unit <b>21</b> of the image encoding unit <b>20</b>-<b>3</b>.</p>
<p id="h-0030" num="0000">[4-5. Operation of Image Decoding Unit of Third Embodiment]</p>
<p id="p-0256" num="0258">Next, the operation of the image decoding unit of the third embodiment will be described using the flowchart of <figref idref="DRAWINGS">FIG. 40</figref>. In <figref idref="DRAWINGS">FIG. 40</figref>, the processes corresponding to the image decoding unit of the first embodiment are denoted by the same reference numerals.</p>
<p id="p-0257" num="0259">In step ST<b>61</b>, the image decoding unit <b>30</b>-<b>3</b> performs acquisition of the decodable bit stream. The image decoding unit <b>30</b>-<b>3</b> analyzes the encoded data having the predetermined format using the depacking unit <b>31</b>, acquires the decodable bit stream from the encoded data, and progresses to step ST<b>61</b><i>a. </i></p>
<p id="p-0258" num="0260">In step ST<b>61</b><i>a</i>, the image decoding unit <b>30</b>-<b>3</b> performs ZBP decoding. The image decoding unit <b>30</b>-<b>3</b> performs ZBP decoding using the bit stream obtained by the depacking unit <b>31</b>, acquires the ZBP orthogonal transform result DTtzbp, and progresses to step ST<b>61</b><i>b. </i></p>
<p id="p-0259" num="0261">In step ST<b>61</b><i>b</i>, the image decoding unit <b>30</b>-<b>3</b> performs ZBP inverse orthogonal transform. The image decoding unit <b>30</b>-<b>3</b> performs inverse orthogonal transform of the ZBP orthogonal transform result DTtzbp, generates the ZBP detection result DTzbp, and progresses to step ST<b>62</b>.</p>
<p id="p-0260" num="0262">In step ST<b>62</b>, the image decoding unit <b>30</b>-<b>3</b> performs decoding of the bit stream. The image decoding unit <b>30</b>-<b>3</b> decodes the index IDXtp representing the TP and then decodes the absolute value of the MDWT coefficient data using the index IDXtp and the ZBP detection result DTzbp generated in step ST<b>61</b><i>b </i>in the entropy-encoding unit. In addition, the image decoding unit <b>30</b>-<b>3</b> performs decoding of the code in the entropy decoding unit <b>32</b> and progresses to step ST<b>63</b>.</p>
<p id="p-0261" num="0263">In step ST<b>63</b>, the image decoding unit <b>30</b>-<b>3</b> performs addition of a rounding bit. The image decoding unit <b>30</b>-<b>3</b> estimates and sets the bit stream of the bit plane truncated by the image encoding unit <b>20</b>-<b>3</b> as the rounding bit in the rounding bit adding unit <b>33</b>. In addition, the image decoding unit <b>30</b>-<b>3</b> adds the estimated rounding bit to the decoded absolute value of the MDWT coefficient data, performs restoration of the absolute value of the MDWT coefficient data in the rounding bit adding unit <b>33</b>, and progresses to step ST<b>64</b>.</p>
<p id="p-0262" num="0264">In step ST<b>64</b>, the image decoding unit <b>30</b>-<b>3</b> performs Inverse Modified Discrete Wavelet Transform (IMDWT). The image decoding unit <b>30</b>-<b>3</b> performs IMDWT using the restored absolute value of the MDWT coefficient data and the decoded code in the band synthesis unit <b>34</b>, obtains a decoded DC level shift signal, and progresses to step ST<b>65</b>.</p>
<p id="p-0263" num="0265">In step ST<b>65</b>, the image decoding unit <b>30</b>-<b>3</b> performs IDC level shift. The image decoding unit <b>30</b>-<b>3</b> adds the DC value to the decoded DC level shift signal in the IDC level shift unit <b>35</b>, obtains decoded image data, and finishes the process.</p>
<p id="h-0031" num="0000">[4-6. Operation of Each Unit of Image Decoding Unit of Third Embodiment]</p>
<p id="p-0264" num="0266">The entropy decoding unit <b>32</b> receives the bit stream supplied from the depacking unit <b>31</b> and the additional information (including the mode flag representing the transform table used for encoding of the bit stream) necessary for decoding as an input, as described in the above [2-6-1. Operation of Entropy Decoding Unit].</p>
<p id="p-0265" num="0267">The ZBP decoding unit <b>37</b> performs decoding of the bit stream using the additional information (for example, the flag representing the transform table upon encoding) necessary for decoding of the ZBP. The ZBP decoding unit <b>37</b> performs entropy decoding of the bit stream using the same transform table as upon encoding and generates the index IDXtzbp. In addition, the ZBP decoding unit <b>37</b> replaces the ZBP orthogonal transform result DTtzbp with the index IDXtzbp according to the same rule as upon encoding and outputs the replaced result DTtzbp to the ZBP inverse orthogonal transform unit <b>38</b>.</p>
<p id="p-0266" num="0268">The ZBP decoding unit <b>37</b> determines which of the ZBP_Hard_table and the ZBP_Easy_table is used for encoding of the index IDXtzbp, performs decoding using the determined table, and acquires the index IDXtzbp. The ZBP decoding unit <b>37</b> transforms the acquired index IDXtzbp into the numerical value of the ZBP orthogonal transform result DTtzbp based on the table shown in <figref idref="DRAWINGS">FIG. 37</figref>.</p>
<p id="p-0267" num="0269">The ZBP inverse orthogonal transform unit <b>38</b> performs inverse orthogonal transform of the ZBP orthogonal transform result DTtzbp supplied from the ZBP decoding unit <b>37</b>, and generates and outputs the ZBP detection result DTzbp to the entropy decoding unit <b>32</b>. The ZBP inverse orthogonal transform unit <b>38</b> performs inverse orthogonal transform corresponding to orthogonal transform performed by the ZBP orthogonal transform unit <b>28</b> of the image encoding unit <b>20</b>-<b>3</b>.</p>
<p id="p-0268" num="0270">For example, if Haar transform is performed by the ZBP orthogonal transform unit <b>28</b>, the ZBP inverse orthogonal transform unit <b>38</b> performs inverse Haar transform.</p>
<p id="p-0269" num="0271">Equations (9) and (10) show inverse Haar transform, &#x201c;Y(n)&#x201d; denotes a numerical string subjected to orthogonal transform (before inverse orthogonal transform), &#x201c;X(n)&#x201d; denotes a numerical string of before orthogonal transform (after inverse orthogonal transform), &#x201c;N&#x201d; denotes the number of elements of a numerical string, and &#x201c;n&#x201d; denotes an index of a numerical string. In addition, &#x201c;n&#x201d; is &#x201c;0n&#x3c;N/2&#x201d;.
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>X</i>(2<i>n</i>)=<i>Y</i>(<i>n</i>)&#x2212;(<i>Y</i>(<i>n+N/</i>2)&#x3e;&#x3e;1)&#x2003;&#x2003;(9)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>X</i>(2<i>n+</i>1)=<i>X</i>(2<i>n</i>)+<i>Y</i>(<i>n+N/</i>2)&#x2003;&#x2003;(10)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0270" num="0272"><figref idref="DRAWINGS">FIGS. 41A to 41D</figref> show a transform process of inverse Haar transform. <figref idref="DRAWINGS">FIG. 41A</figref> shows the case where, when the ZBP orthogonal transform result DTtzbp is a numerical string &#x201c;4, 4, 3, 0, 1, &#x2212;1, 2, 1&#x201d;. The ZBP inverse orthogonal transform unit <b>38</b> performs the operations of Equations (9) and (10) as &#x201c;N=2&#x201d;. If the operation of Equation (9) is performed, the left-end value &#x201c;2&#x201d; of <figref idref="DRAWINGS">FIG. 41B</figref> is calculated. In Equation (9), (Y(n+N/2)&#x3e;&#x3e;1) is a process of shifting the data of &#x201c;Y(n+N/2)&#x201d; to the right by 1 bit to halve the data.</p>
<p id="p-0271" num="0273">Next, if the operation of Equation (10) is performed using the value calculated using Equation (9) and the value of <figref idref="DRAWINGS">FIG. 41A</figref>, a second value &#x201c;6&#x201d; from the left side of <figref idref="DRAWINGS">FIG. 41B</figref> is calculated.</p>
<p id="p-0272" num="0274">Next, using &#x201c;N=4&#x201d;, the operations of Equations (9) and (10) are performed with respect to a numerical string shown in <figref idref="DRAWINGS">FIG. 41B</figref>. If the operation of Equation (9) is performed, the first and second values &#x201c;1, 4&#x201d; from the left side of <figref idref="DRAWINGS">FIG. 41C</figref> are calculated. In addition, if the operation of Equation (10) is performed using the value calculated using Equation (9) and the value of <figref idref="DRAWINGS">FIG. 41B</figref>, the third and fourth values &#x201c;6, 6&#x201d; from the left side of <figref idref="DRAWINGS">FIG. 41C</figref> are calculated.</p>
<p id="p-0273" num="0275">Next, using &#x201c;N=8&#x201d;, the operations of Equations (9) and (10) are performed with respect to a numerical string shown in <figref idref="DRAWINGS">FIG. 41C</figref>. If the operation of Equation (9) is performed, the first to fourth values &#x201c;1, 2, 4, 3&#x201d; from the left side of <figref idref="DRAWINGS">FIG. 41D</figref> are calculated. If the operation of Equation (10) is performed using the value calculated using Equation (9) and the value of <figref idref="DRAWINGS">FIG. 41C</figref>, the fifth to eighth values &#x201c;5, 7, 6, 7&#x201d; from the left side of <figref idref="DRAWINGS">FIG. 41D</figref> are calculated. Accordingly, if inverse Haar transform is performed with respect to the numerical string &#x201c;4, 4, 3, 0, 1, &#x2212;1, 2, 1&#x201d;, the transform result becomes &#x201c;1, 2, 4, 3, 5, 7, 6, 7&#x201d; and becomes equal to <figref idref="DRAWINGS">FIG. 36A</figref>.</p>
<p id="p-0274" num="0276">The ZBP inverse orthogonal transform unit <b>38</b> performs inverse orthogonal transform of the numerical string representing the ZBP orthogonal transform result DTtzbp and reproduces the ZBP detection result DTzbp before orthogonal transform.</p>
<p id="p-0275" num="0277">The entropy decoding unit <b>32</b> decodes the index IDXtp of the TP. The index IDXtp of the TP is encoded using, for example, one or a plurality of Huffman tables, as described in the above-described operation of the entropy-encoding unit <b>24</b> of the image encoding unit <b>20</b>-<b>1</b>. Accordingly, the entropy decoding unit <b>32</b> determines, by the mode flag, which of the transform tables is used for the encoding. The entropy decoding unit <b>32</b> performs decoding using the TP_Hard_table when it is determined that encoding is performed using the TP_Hard_table and performs decoding using the TPEasytable when it is determined that encoding is performed using the TP_Easy_table.</p>
<p id="p-0276" num="0278">The entropy decoding unit <b>32</b> may determine which part of the bit plane is encoded from the ZBP detection result DTzbp and the result of decoding the index IDXtp of the TP. From the point in which the encoded range becomes apparent, it is determined to which sub-block of which bit plane the data obtained by decoding the bit stream belongs.</p>
<p id="p-0277" num="0279">The entropy decoding unit <b>32</b> performs decoding of the bit stream representing the absolute value of the MDWT coefficient data. The entropy decoding unit <b>32</b> performs decoding using the Coef_Hard_table when it is determined that encoding is performed using the Coef_Hard_table and performs decoding using the Coef_Easy_table when it is determined that encoding is performed using the Coef_Easy_table. The entropy decoding unit <b>32</b> determines, by the mode flag, which of the transform tables is used for the encoding of the additional information.</p>
<p id="p-0278" num="0280">The entropy decoding unit <b>32</b> performs decoding using the transform table, acquires the data representing the absolute value of the MDWT coefficient data, and finishes the decoding operation.</p>
<p id="p-0279" num="0281">The rounding bit adding unit <b>33</b> estimates a lower-order bit truncated by the image encoding unit <b>20</b>-<b>3</b> and restores the absolute value of the MDWT coefficient data. The rounding bit adding unit <b>33</b> determines the position of the lower-order bit truncated by the image encoding unit <b>20</b>-<b>3</b> based on the index IDXtp of the TP and estimates the data of the determined position. As the estimation method, as described above, the estimated data is acquired by referring to a table prepared based on statistics in advance, is added to the data representing the absolute value of the coefficient data, and is output to the band synthesis unit <b>34</b>.</p>
<p id="p-0280" num="0282">The band synthesis unit <b>34</b> performs Inverse Modified Discrete Wavelet Transform (IMDWT) which is the inverse modified discrete transform of the MDWT performed by the image encoding unit <b>20</b>-<b>3</b>. As described in the image encoding unit <b>20</b>-<b>3</b>, the MDWT is fundamentally equal to the DWT, but replacement of the spatial position of the low-band signal is performed whenever band division is performed in order to improve band division precision of a signal end. Accordingly, the band synthesis unit <b>34</b> returns the spatial position of the low-band signal in the input MDWT coefficient data to an original position by the inverse operation of the operation performed during encoding. Thereafter, similar to the IDWT, deinterleaving, target period extension and two-stage lifting operation are performed to perform band synthesis. In addition, in the case where band synthesis is repeated, an operation for returning the low-band signal to the original spatial position is first performed. The band synthesis unit <b>34</b> performs such a process and generates the decoded DC level shift signal.</p>
<p id="p-0281" num="0283">In this way, when encoding or decoding of the image data is performed by the image encoding unit <b>20</b>-<b>3</b> and the image decoding unit <b>30</b>-<b>3</b>, since the spatial position is rearranged with respect to the coefficient data of the low-band component obtained by frequency band division, frequency band division is repeated with respect to the coefficient data of the low-band component. Even when the coefficient data of each of the plurality of frequency bands is generated, for example, since the position of the coefficient data of the low-band component generated using the extended image data is not fixed, the influence of the deterioration of band division precision is not repeatedly applied due to the use of the extended image data. Accordingly, even when image encoding is performed in block units, a decoded image with low block distortion is obtained.</p>
<p id="p-0282" num="0284">The coefficient data is divided as a sub-block for each predetermined number and a variation in the distortion amount of the image when the bit plane of the coefficient data is truncated for each sub-block is estimated. With respect to the estimation result, the sub-block located on the end of the block is weighted so as to be not easily truncated compared with the sub-block of another position. Based on the estimation result after weighting, the truncation position in which image distortion is low and the code amount is within the target code amount is detected and the truncation of the coefficient data or the like is performed. Accordingly, since the risk of the coefficient data of the end of the block being truncated can be suppressed, it is possible to lessen distortion in the boundary between blocks.</p>
<p id="p-0283" num="0285">Since the orthogonal transform of the ZBP detection result DTzbp is performed such that a numerical value generation frequency is biased, it is possible to further reduce the amount of generated code by performing the entropy-encoding process according to bias.</p>
<heading id="h-0032" level="1">5. Fourth Embodiment</heading>
<p id="h-0033" num="0000">[5-1. Configuration of Image Encoding Unit of Fourth Embodiment]</p>
<p id="p-0284" num="0286"><figref idref="DRAWINGS">FIG. 42</figref> shows the configuration obtained by simplifying the image encoding unit of the third embodiment as a fourth embodiment.</p>
<p id="p-0285" num="0287">The image encoding unit <b>20</b>-<b>4</b> has the configuration in which the DC level shift unit <b>21</b>, the distortion characteristic estimation unit <b>25</b> and the packing unit <b>27</b> are omitted from the image encoding unit <b>20</b>-<b>3</b> shown in <figref idref="DRAWINGS">FIG. 34</figref>.</p>
<p id="p-0286" num="0288">In this case, the band division unit <b>22</b> performs MDWT with respect to the input image data, instead of the DC level shifted signal. In addition, if the distortion characteristic estimation unit <b>25</b> which becomes a criterion for performing truncation is omitted, for example, the encoding distortion EC&#x394;D<sub>i</sub><sup>(p) </sup>or the slope (EC&#x394;D<sub>i</sub><sup>(p)</sup>/&#x394;Ri(p)) is calculated by the distortion characteristic estimation unit <b>25</b> in advance, and is stored in a distortion characteristic table <b>29</b>. The distortion characteristic table is input to the truncation unit <b>26</b> and the truncation unit <b>26</b> performs truncation based on the distortion characteristic table. In addition, in the entropy-encoding unit <b>24</b>, if the number of encoding tables used in the ZBP orthogonal transform result, the TP and the bit plane is one and there is no information added to the truncated bit stream, the truncated bit stream may be output from the image encoding unit <b>20</b>-<b>4</b> as encoded data. In this case, the packing unit <b>27</b> may also be omitted.</p>
<p id="h-0034" num="0000">[5-2. Configuration of Image Decoding Unit of Fourth Embodiment]</p>
<p id="p-0287" num="0289"><figref idref="DRAWINGS">FIG. 43</figref> shows the configuration obtained by simplifying the image decoding unit of the third embodiment as a fourth embodiment.</p>
<p id="p-0288" num="0290">The image decoding unit <b>30</b>-<b>4</b> has the configuration in which the depacking unit <b>31</b>, the rounding bit adding unit <b>33</b> and the IDC level shift unit <b>35</b> are omitted from the image decoding unit <b>30</b>-<b>3</b> shown in <figref idref="DRAWINGS">FIG. 39</figref>.</p>
<p id="p-0289" num="0291">If the encoded data generated by the image encoding unit <b>20</b>-<b>4</b> shown in <figref idref="DRAWINGS">FIG. 42</figref> includes only the bit stream and does not include additional information, the depacking unit <b>31</b> may not be provided in the image decoding unit <b>30</b>-<b>4</b>. In addition, since the rounding bit adding unit <b>33</b> is not a component necessary for decoding and is provided for the purpose of improving the image quality of the decoded signal, the rounding bit adding unit may be omitted. In the case where DC level shift is not performed in the image encoding unit <b>20</b>-<b>4</b>, the IDC level shift unit <b>35</b> may not be provided. Accordingly, if the image decoding unit <b>30</b>-<b>4</b> of the configuration shown in <figref idref="DRAWINGS">FIG. 43</figref> is used, the bit stream output from the image encoding unit <b>20</b>-<b>4</b> may be decoded.</p>
<heading id="h-0035" level="1">6. Case where Encoding and Decoding are Performed by Computer</heading>
<p id="p-0290" num="0292">The above-described series of processes may be executed by hardware or software. If the series of processes is executed by software, a computer in which a program configuring the software is assembled in dedicated hardware is used. Alternatively, by installing various types of programs, software is installed from a program recording medium using, for example, a general-purpose personal computer or the like, which is capable of executing various types of functions.</p>
<p id="p-0291" num="0293"><figref idref="DRAWINGS">FIG. 44</figref> is a diagram showing the hardware configuration of a computer for executing the above-described series of processes by a program.</p>
<p id="p-0292" num="0294">In the computer <b>60</b>, a Central Processing Unit (CPU) <b>61</b>, a Read Only Memory (ROM) <b>62</b> and a Random Access Memory (RAM) <b>63</b> are connected to each other by a bus <b>64</b>.</p>
<p id="p-0293" num="0295">An input/output interface <b>65</b> is connected to the bus <b>64</b>. A user interface <b>66</b> including a keyboard, a mouse and the like, an input unit <b>67</b> for inputting image data, an output unit <b>68</b> including a display and the like, and a recording unit <b>69</b> including a hard disk, non-volatile memory and the like are connected to the input/output interface <b>65</b>. A communication unit <b>70</b> including a network interface and the like and a drive <b>71</b> for driving a removable medium <b>80</b> such as a magnetic disk, an optical disc, a magneto-optical disc and a semiconductor memory are connected to the input/output interface <b>65</b>.</p>
<p id="p-0294" num="0296">In the computer having the above configuration, the CPU <b>61</b> loads and executes, for example, the program recorded on the recording unit <b>69</b> to the RAM <b>63</b> through the input/output interface <b>65</b> and the bus <b>64</b>, thereby performing the above-described series of processes.</p>
<p id="p-0295" num="0297">The program executed by the computer (CPU <b>61</b>) is recorded, for example, on the removable medium <b>80</b> which is a package medium such as a magnetic disk (including a flexible disk), an optical disc (a Compact Disc-Read Only Memory (CD-ROM), a Digital Versatile Disc (DVD), or the like), a magneto-optical disc, a semiconductor memory or the like, or is provided through a wired or wireless transfer medium such as a local area network, the Internet or a digital satellite broadcast.</p>
<p id="p-0296" num="0298">The program may be installed in the recording unit <b>69</b> through the input/output interface <b>65</b> by mounting the removable medium <b>80</b> in the drive <b>71</b>. The program may be received by the communication unit <b>70</b> through the wired or wireless transfer medium and installed in the recording unit <b>69</b>. The program may be installed in the ROM <b>62</b> or the recording unit <b>69</b> in advance.</p>
<p id="p-0297" num="0299">The program executed by the computer may be a program for performing a process in time series in the order described in the present specification or a program for performing a process at necessary timings such as upon calling or in parallel.</p>
<p id="p-0298" num="0300">The embodiments of the invention are not limited to the above-described embodiments and various modifications may be made without departing from the scope of the invention. For example, although the 5&#xd7;3 lifting configuration is described in the above-described embodiments, a 9&#xd7;7 lifting configuration or the like may be possible. The scope of the invention is defined by the claims.</p>
<p id="p-0299" num="0301">The present application contains subject matter related to that disclosed in Japanese Priority Patent Application JP 2010-059117 filed in the Japan Patent Office on Mar. 16, 2010 and Japanese Priority Patent Application JP 2010-247587 filed in the Japan Patent Office on Nov. 4, 2010, the entire contents of which are hereby incorporated by reference.</p>
<p id="p-0300" num="0302">It should be understood by those skilled in the art that various modifications, combinations, sub-combinations and alterations may occur depending on design requirements and other factors insofar as they are within the scope of the appended claims or the equivalents thereof.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-math idrefs="MATH-US-00001" nb-file="US08625909-20140107-M00001.NB">
<img id="EMI-M00001" he="12.02mm" wi="76.20mm" file="US08625909-20140107-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00002" nb-file="US08625909-20140107-M00002.NB">
<img id="EMI-M00002" he="31.41mm" wi="76.20mm" file="US08625909-20140107-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An image encoding apparatus comprising:
<claim-text>circuitry configured:</claim-text>
<claim-text>to perform a first frequency band division to generate coefficient data of each of a plurality of frequency bands from image data of a block unit and, based on the first frequency band division to generate the coefficient data, to perform a second frequency band division of the coefficient data of a low-band component after performing a spatial position rearrangement operation, the spatial position rearrangement operation including rearranging a spatial position with respect to the coefficient data of the low-band component obtained by the first frequency band division without rearrangement of a spatial position with respect to the coefficient data of a high-band component, such that a coefficient data portion at an end of a block unit of the coefficients of the low-band component is rearranged to no longer be at the end of the block unit of the coefficients of the low-band component; and</claim-text>
<claim-text>to perform encoding of the coefficient data of each of the plurality of frequency bands,</claim-text>
<claim-text>wherein the coefficient data portion at the end of the block unit of the coefficients of the low-band component is created based on coefficient data of the high-band component associated with an extension operation to a portion of the image data in an end of the block unit of the image data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The image encoding apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the circuitry is configured to extend the portion of the image data in the end of the block unit of the image data to perform the first frequency band division, and moves coefficient data generated by the extended image data.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The image encoding apparatus according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the circuitry is configured to invert a position of the coefficient data of the low-band component to rearrange the coefficient data generated using the extended image data.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The image encoding apparatus according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the circuitry is configured to perform a lifting operation and deinterleaving, and generates the coefficient data of each of the plurality of frequency bands.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The image encoding apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the circuitry is configured:
<claim-text>to estimate a variation in a distortion amount of an image when a bit plane of the coefficient data is truncated for each sub-block obtained by dividing the coefficient data for each predetermined number,</claim-text>
<claim-text>to detect a truncation position in which image distortion is below an amount and a code amount is within a target code amount based on the estimation result and to perform truncation of the bit plane,</claim-text>
<claim-text>to perform weighting with respect to the estimation result, and</claim-text>
<claim-text>to perform truncation of the bit plane based on the weighted estimation result.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The image encoding apparatus according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the circuitry is configured to perform weighting with respect to the estimation result such that a sub-block located on an end of the block is not as easily truncated as compared to a sub-block of another position.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The image encoding apparatus according to <claim-ref idref="CLM-00006">claim 6</claim-ref>,
<claim-text>wherein the circuitry is configured:</claim-text>
<claim-text>to detect a most significant bit plane of the coefficient data and a zero bit plane of each sub-block, and</claim-text>
<claim-text>encode the detection result and the coefficient data based on one or a plurality of contexts.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The image encoding apparatus according to <claim-ref idref="CLM-00007">claim 7</claim-ref>,
<claim-text>wherein the circuitry is configured:</claim-text>
<claim-text>to perform orthogonal transform of a numerical string representing the detected zero bit plane, and</claim-text>
<claim-text>to use a transform result obtained by the zero bit plane orthogonal transform unit instead of the detection result associated with the zero bit plane.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. An image encoding method comprising:
<claim-text>performing, in a processor, a first frequency band division to generate coefficient data of each of a plurality of frequency bands from image data of a block unit;</claim-text>
<claim-text>performing, in the processor, a second frequency band division of the coefficient data of a low-band component after performing a spatial position rearrangement operation, the spatial position rearrangement operation including rearranging a spatial position with respect to the coefficient data of the low-band component obtained by the first frequency band division, without rearrangement of a spatial position with respect to the coefficient data of a high-band component, such that a coefficient data portion at an end of a block unit of the coefficients of the low-band component is rearranged to no longer be at the end of the block unit of the coefficients of the low-band component; and</claim-text>
<claim-text>performing, in the processor, encoding of the coefficient data of each of the plurality of frequency bands,</claim-text>
<claim-text>wherein the coefficient data portion at the end of the block unit of the coefficients of the low-band component is created based on coefficient data of the high-band component associated with an extension operation to a portion of the image data in an end of the block unit of the image data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A non-transitory computer-readable storage medium storing computer-readable instructions that, when executed by a computer, cause the computer to perform a method comprising:
<claim-text>performing a first frequency band division to generate coefficient data of each of a plurality of frequency bands from image data of a block unit;</claim-text>
<claim-text>based on the first frequency band division to generate the coefficient data, performing a second frequency band division of the coefficient data of a low-band component after performing a spatial position rearrangement operation, the spatial position rearrangement operation including rearranging a spatial position with respect to the coefficient data of the low-band component obtained by the first frequency band division, without rearrangement of a spatial position with respect to the coefficient data of a high-band component, such that a coefficient data portion at an end of a block unit of the coefficients of the low-band component is rearranged to no longer be at the end of the block unit of the coefficients of the low-band component; and</claim-text>
<claim-text>performing encoding of the coefficient data of each of the plurality of frequency bands,</claim-text>
<claim-text>wherein the coefficient data portion at the end of the block unit of the coefficients of the low-band component is created based on coefficient data of the high-band component associated with an extension operation to a portion of the image data in an end of the block unit of the image data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. An image encoding apparatus comprising:
<claim-text>processing circuitry configured:</claim-text>
<claim-text>to perform a first frequency band division of image data of a block unit and to generate coefficient data of each of a plurality of frequency bands, and to perform, based on the first frequency band division, a second frequency band division of the coefficient data of a low-band component after performing a spatial position rearrangement operation, the spatial position rearrangement operation including rearranging a spatial position with respect to the coefficient data of the low-band component obtained by the first frequency band division, without rearrangement of a spatial position with respect to the coefficient data of a high-band component, such that a coefficient data portion at an end of a block unit of the coefficients of the low-band component is rearranged to no longer be at the end of the block unit of the coefficients of the low-band component;</claim-text>
<claim-text>to perform encoding of the coefficient data of each of the plurality of frequency bands;</claim-text>
<claim-text>to estimate a variation in a distortion amount of an image when a bit plane of the coefficient data is truncated and to perform weighting based on the estimation result, for each sub-block obtained by dividing the coefficient data for each predetermined number; and</claim-text>
<claim-text>to detect a truncation position in which image distortion is below an amount and a code amount is within a target code amount based on the weighted estimation result, and to perform truncation of the bit plane,</claim-text>
<claim-text>wherein the coefficient data portion at the end of the block unit of the coefficients of the low-band component is created based on coefficient data of the high-band component associated with an extension operation to a portion of the image data in an end of the block unit of the image data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The image encoding apparatus according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the circuitry is configured to perform weighting with respect to the estimation result such that a sub-block located on an end of the block is not as easily truncated as compared to a sub-block of another position.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. An image encoding method comprising:
<claim-text>performing a first frequency band division of image data of a block unit and generating coefficient data of each of a plurality of frequency bands, and performing, based on the first frequency band division, a second frequency band division of the coefficient data of a low-band component after performing a spatial position rearrangement operation, the spatial position rearrangement operation including rearranging a spatial position with respect to the coefficient data of the low-band component obtained by the first frequency band division, without rearrangement of a spatial position with respect to the coefficient data of a high-band component, such that a coefficient data portion at an end of a block unit of the coefficients of the low-band component is rearranged to no longer be at the end of the block unit of the coefficients of the low-band component, using processing circuitry;</claim-text>
<claim-text>performing encoding of the coefficient data of each of the plurality of frequency bands, using the processing circuitry;</claim-text>
<claim-text>estimating a variation in distortion amount of an image when a bit plane of the coefficient data is truncated and performing weighting with respect to the estimation result, for each sub-block obtained by dividing the coefficient data for each predetermined number, using the processing circuitry; and</claim-text>
<claim-text>detecting a truncation position in which image distortion is below an amount and a code amount is within a target code amount based on the weighted estimation result and performing truncation of the bit plane, using the processing circuitry,</claim-text>
<claim-text>wherein the coefficient data portion at the end of the block unit of the coefficients of the low-band component is created based on coefficient data of the high-band component associated with an extension operation to a portion of the image data in an end of the block unit of the image data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. A non-transitory computer-readable storage medium storing computer-readable instructions that, when executed by a computer, cause the computer to perform a method comprising:
<claim-text>performing a first frequency band division of image data of a block unit and generating coefficient data of each of a plurality of frequency bands;</claim-text>
<claim-text>performing a second frequency band division of the coefficient data of a low-band component after performing a spatial position rearrangement operation, the spatial position rearrangement operation including rearranging a spatial position with respect to the coefficient data of the low-band component obtained by the first frequency band division, without rearrangement of a spatial position with respect to the coefficient data of a high-band component, such that a coefficient data portion at an end of a block unit of the coefficients of the low-band component is rearranged to no longer be at the end of the block unit of the coefficients of the low-band component;</claim-text>
<claim-text>performing encoding the coefficient data of each of the plurality of frequency bands;</claim-text>
<claim-text>estimating a variation in a distortion amount of an image when a bit plane of the coefficient data is truncated and performing weighting with respect to the estimation result, for each sub-block obtained by dividing the coefficient data for each predetermined number; and</claim-text>
<claim-text>detecting a truncation position in which image distortion is below an amount and a code amount is within a target code amount based on the weighted estimation result and performing truncation of the bit plane,</claim-text>
<claim-text>wherein the coefficient data portion at the end of the block unit of the coefficients of the low-band component is created based on coefficient data of the high-band component associated with an extension operation to a portion of the image data in an end of the block unit of the image data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. An image decoding apparatus comprising:
<claim-text>processing circuitry configured:</claim-text>
<claim-text>to decode encoded data in which coefficient data obtained by performing a first frequency band division of image data of a block unit is encoded and by performing a second frequency band division of coefficient data of a low-band component after performing a spatial position rearrangement operation, the spatial position rearrangement operation including rearranging a spatial position with respect to the coefficient data of the low-band component obtained by the first frequency band division, without rearrangement of a spatial position with respect to the coefficient data of a high-band component, such that a coefficient data portion at an end of a block unit of the coefficients of the low-band component is rearranged to no longer be at the end of the block unit of the coefficients of the low-band component; and</claim-text>
<claim-text>to perform frequency band synthesis of the coefficient data of each of a plurality of frequency bands, and to generate image data of a block unit, after returning the coefficient data obtained by the decoding to an order before rearrangement,</claim-text>
<claim-text>wherein the coefficient data portion at the end of the block unit of the coefficients of the low-band component is created based on coefficient data of the high-band component associated with an extension operation to a portion of the image data in an end of the block unit of the image data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. An image decoding method comprising:
<claim-text>decoding encoded data in which coefficient data obtained by performing a first frequency band division of image data of a block unit is encoded and by performing a second frequency band division of coefficient data of a low-band component after performing a spatial position rearrangement operation, the spatial position rearrangement operation including rearranging a spatial position with respect to the coefficient data of the low-band component obtained by the first frequency band division, without rearrangement of a spatial position with respect to the coefficient data of a high-band component, such that a coefficient data portion at an end of a block unit of the coefficients of the low-band component is rearranged to no longer be at the end of the block unit of the coefficients of the low-band component, using processing circuitry; and</claim-text>
<claim-text>performing frequency band synthesis of the coefficient data of each of a plurality of frequency bands and generating image data of a block unit, after returning the coefficient data obtained by the decoding to an order before rearrangement, using the processing circuitry,</claim-text>
<claim-text>wherein the coefficient data portion at the end of the block unit of the coefficients of the low-band component is created based on coefficient data of the high-band component associated with an extension operation to a portion of the image data in an end of the block unit of the image data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. A non-transitory computer-readable storage medium storing computer-readable instructions that, when executed by a computer, cause the computer to perform a method comprising:
<claim-text>decoding encoded data in which coefficient data obtained by performing a first frequency band division of image data of a block unit and by performing a second frequency band division of coefficient data of a low-band component after performing a spatial position rearrangement operation, the spatial position rearrangement operation including rearranging a spatial position with respect to the coefficient data of the low-band component obtained by the first frequency band division is encoded, without rearrangement of a spatial position with respect to the coefficient data of a high-band component, such that a coefficient data portion at an end of a block unit of the coefficients of the low-band component is rearranged to no longer be at the end of the block unit of the coefficients of the low-band component; and</claim-text>
<claim-text>performing frequency band synthesis of the coefficient data of each of a plurality of frequency bands and generating image data of a block unit, after returning the coefficient data obtained by the decoding to an order before rearrangement,</claim-text>
<claim-text>wherein the coefficient data portion at the end of the block unit of the coefficients of the low-band component is created based on coefficient data of the high-band component associated with an extension operation to a portion of the image data in an end of the block unit of the image data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The image encoding apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said image data of a block unit is a one-dimensional block, and each of the first and second frequency band divisions is a single-dimension band division.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The image encoding apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the rearranging the spatial position with respect to the coefficient data of the low-band component obtained by the first frequency band division includes reversing an order the coefficient data.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The image encoding apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said image data of a block unit is a one-dimensional block of eight pixels of less. </claim-text>
</claim>
</claims>
</us-patent-grant>
