<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626857-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626857</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13296964</doc-number>
<date>20111115</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>70</us-term-extension>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>16</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>709206</main-classification>
<further-classification>709217</further-classification>
<further-classification>709218</further-classification>
<further-classification>709219</further-classification>
<further-classification>709222</further-classification>
</classification-national>
<invention-title id="d2e55">System and method for provisioning an email account using mail exchange records</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5968117</doc-number>
<kind>A</kind>
<name>Schuetze</name>
<date>19991000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6249807</doc-number>
<kind>B1</kind>
<name>Shaw et al.</name>
<date>20010600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6272532</doc-number>
<kind>B1</kind>
<name>Feinleib</name>
<date>20010800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6282565</doc-number>
<kind>B1</kind>
<name>Shaw et al.</name>
<date>20010800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6393464</doc-number>
<kind>B1</kind>
<name>Dieterman</name>
<date>20020500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6434600</doc-number>
<kind>B2</kind>
<name>Waite et al.</name>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6446114</doc-number>
<kind>B1</kind>
<name>Bulfer et al.</name>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6549937</doc-number>
<kind>B1</kind>
<name>Auerbach et al.</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6594706</doc-number>
<kind>B1</kind>
<name>DeCoursey et al.</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709238</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6654787</doc-number>
<kind>B1</kind>
<name>Aronson et al.</name>
<date>20031100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6728759</doc-number>
<kind>B1</kind>
<name>Na</name>
<date>20040400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>6779019</doc-number>
<kind>B1</kind>
<name>Mousseau et al.</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>6832244</doc-number>
<kind>B1</kind>
<name>Raghunandan</name>
<date>20041200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>6865594</doc-number>
<kind>B1</kind>
<name>Belissent et al.</name>
<date>20050300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>6865671</doc-number>
<kind>B1</kind>
<name>Assmann</name>
<date>20050300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713154</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>7962558</doc-number>
<kind>B2</kind>
<name>Nelson et al.</name>
<date>20110600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2001/0032245</doc-number>
<kind>A1</kind>
<name>Fodor</name>
<date>20011000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2002/0004826</doc-number>
<kind>A1</kind>
<name>Waite et al.</name>
<date>20020100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709223</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2002/0078158</doc-number>
<kind>A1</kind>
<name>Brown et al.</name>
<date>20020600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2002/0112007</doc-number>
<kind>A1</kind>
<name>Wood et al.</name>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2002/0120697</doc-number>
<kind>A1</kind>
<name>Generous et al.</name>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>2002/0174194</doc-number>
<kind>A1</kind>
<name>Mooney et al.</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709219</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>2003/0074408</doc-number>
<kind>A1</kind>
<name>Clark et al.</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>2003/0084107</doc-number>
<kind>A1</kind>
<name>Covey</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>2003/0115270</doc-number>
<kind>A1</kind>
<name>Funk et al.</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>2003/0200267</doc-number>
<kind>A1</kind>
<name>Garrigues</name>
<date>20031000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00027">
<document-id>
<country>US</country>
<doc-number>2004/0054719</doc-number>
<kind>A1</kind>
<name>Daigle et al.</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709203</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00028">
<document-id>
<country>US</country>
<doc-number>2004/0260922</doc-number>
<kind>A1</kind>
<name>Goodman et al.</name>
<date>20041200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>713154</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00029">
<document-id>
<country>US</country>
<doc-number>2004/0267907</doc-number>
<kind>A1</kind>
<name>Gustafsson</name>
<date>20041200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709219</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00030">
<document-id>
<country>US</country>
<doc-number>2005/0038857</doc-number>
<kind>A1</kind>
<name>Gardner et al.</name>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00031">
<document-id>
<country>US</country>
<doc-number>2005/0038859</doc-number>
<kind>A1</kind>
<name>Garner et al.</name>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00032">
<document-id>
<country>US</country>
<doc-number>2005/0160335</doc-number>
<kind>A1</kind>
<name>Peterson</name>
<date>20050700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714724</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00033">
<document-id>
<country>US</country>
<doc-number>2006/0088026</doc-number>
<kind>A1</kind>
<name>Mazur et al.</name>
<date>20060400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370352</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00034">
<document-id>
<country>US</country>
<doc-number>2006/0212522</doc-number>
<kind>A1</kind>
<name>Walter et al.</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00035">
<document-id>
<country>GB</country>
<doc-number>2382164</doc-number>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00036">
<document-id>
<country>WO</country>
<doc-number>98/32273</doc-number>
<date>19980700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00037">
<document-id>
<country>WO</country>
<doc-number>00/22543</doc-number>
<date>20000400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00038">
<document-id>
<country>WO</country>
<doc-number>WO00/22543</doc-number>
<date>20000400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00039">
<othercit>OA dated Jan. 1, 2011 for U.S. Appl. No. 11/238,753, 22 pp.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00040">
<othercit>Klensin, &#x201c;Simple Mail Transfer Protocol&#x201d;, http://tools.ietf.org/html/rfc2821, Apr. 2001, pp. 1-78.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00041">
<othercit>Partridge, &#x201c;Mail Routing and the Domain System,&#x201d; CSNET CIC BBN Laboratories, Inc., Jan. 1986, pp. 1-8.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>12</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>709206</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709217</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709218</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709219</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709222</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>12</number-of-drawing-sheets>
<number-of-figures>14</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>11238753</doc-number>
<date>20050929</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>8078681</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13296964</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120059895</doc-number>
<kind>A1</kind>
<date>20120308</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Gardner</last-name>
<first-name>Darren L.</first-name>
<address>
<city>Issaquah</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Gorty</last-name>
<first-name>Suryanarayana Murthy</first-name>
<address>
<city>Redmond</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>McCarthy</last-name>
<first-name>Steven J.</first-name>
<address>
<city>Bellevue</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Gardner</last-name>
<first-name>Darren L.</first-name>
<address>
<city>Issaquah</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Gorty</last-name>
<first-name>Suryanarayana Murthy</first-name>
<address>
<city>Redmond</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>McCarthy</last-name>
<first-name>Steven J.</first-name>
<address>
<city>Bellevue</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Allen, Dyer, Doppelt, Milbrath &#x26; Gilchrist, P.A.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>BlackBerry Limited</orgname>
<role>03</role>
<address>
<city>Waterloo, Ontario</city>
<country>CA</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Strange</last-name>
<first-name>Aaron</first-name>
<department>2448</department>
</primary-examiner>
<assistant-examiner>
<last-name>Sowa</last-name>
<first-name>Timothy</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A system provisions an electronic mail (email) account of a user for allowing access to an electronic mailbox from a remote device to retrieve email. A communications module receives email address parameters of the user and transmits a domain name system (DNS) query to the Internet for returning mail exchange (MX) records corresponding to the email address parameters of the user. A configuration module processes any returned MX records as a starting point for determining configuration parameters for accessing the email account of the user to retrieve user email.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="160.27mm" wi="235.12mm" file="US08626857-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="255.69mm" wi="178.14mm" orientation="landscape" file="US08626857-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="180.09mm" wi="176.19mm" file="US08626857-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="153.84mm" wi="182.63mm" file="US08626857-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="152.48mm" wi="157.65mm" file="US08626857-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="161.46mm" wi="174.92mm" file="US08626857-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="216.58mm" wi="174.33mm" file="US08626857-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="186.52mm" wi="100.58mm" file="US08626857-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="164.08mm" wi="148.00mm" file="US08626857-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="149.35mm" wi="95.50mm" file="US08626857-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="192.28mm" wi="151.89mm" file="US08626857-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="198.04mm" wi="115.99mm" file="US08626857-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="243.50mm" wi="167.22mm" orientation="landscape" file="US08626857-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is a continuation of pending Ser. No. 11/238,753 filed Sep. 29, 2005, now U.S. Pat. No. 8,078,681 the entire disclosure of which is hereby incorporated herein by reference.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0003" num="0002">The present invention relates to the field of communications systems, and, more particularly, to electronic mail (email) communications systems and related methods.</p>
<heading id="h-0003" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0004" num="0003">Electronic mail (email) has become an integral part of business and personal communications. As such, many users have multiple email accounts for work and home use. Moreover, with the increased availability of mobile cellular and wireless local area network (LAN) devices that can send and receive emails, many users wirelessly access emails from mailboxes stored on different email storage servers (e.g., corporate email storage server, Yahoo, Hotmail, AOL, etc.).</p>
<p id="p-0005" num="0004">Yet, email distribution and synchronization across multiple mailboxes and over wireless networks can be quite challenging, particularly when this is done on a large scale for numerous users. For example, different email accounts may be configured differently and with non-uniform access criteria. Moreover, as emails are received at the wireless communications device, copies of the emails may still be present in the original mailboxes, which can make it difficult for users to keep their email organized.</p>
<p id="p-0006" num="0005">One particularly advantageous &#x201c;push&#x201d; type email distribution and synchronization system is disclosed in U.S. Pat. No. 6,779,019 to Mousseau et al., which is assigned to the present Assignee and is hereby incorporated herein by reference. This system pushes user-selected data items from a host system to a user's mobile wireless communications device upon detecting the occurrence of one or more user-defined event triggers. The user may then move (or file) the data items to a particular folder within a folder hierarchy stored in the mobile wireless communications device, or may execute some other system operation on a data item. Software operating at the device and the host system then synchronizes the folder hierarchy of the device with a folder hierarchy of the host system, and any actions executed on the data items at the device are then automatically replicated on the same data items stored at the host system, thus eliminating the need for the user to manually replicate actions at the host system that have been executed at the mobile wireless communications device.</p>
<p id="p-0007" num="0006">The foregoing system advantageously provides great convenience to users of wireless email communication devices for organizing and managing their email messages. Yet, further convenience and efficiency features may be desired in email distribution and synchronization systems as email usage continues to grow in popularity. For example, in new user accounts, an email provisioning and authentication system can run through a series of possible email server configurations to determine how to access an electronic mailbox for a user email account. The user can supply email address parameters such as an email address and password, but often becomes frustrated if the wrong email address parameter is typed. The user typically must wait a relatively long time to determine if something is wrong, or worse, the user may be given an advanced configuration screen and asked to provide difficult to know IP address numbers, ports and other entries because of the mistake. Some prior art systems have parsed emails and tried to provision, and as a subsequent step after failure, used MX records to aid in the process for accessing email. But those systems have not been used for provisioning in a more direct manner.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0008" num="0007">Other objects, features and advantages of the present invention will become apparent from the detailed description of the invention which follows, when considered in light of the accompanying drawings in which:</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 1</figref> is schematic block diagram of a direct access electronic mail (email) distribution and synchronization system.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 2</figref> is a schematic block diagram of an exemplary embodiment of user interface components of the direct access proxy of the system of <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 3</figref> is a schematic block diagram of an exemplary embodiment of the Web client engine of the system of <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 4</figref> is a schematic block diagram of an exemplary embodiment of the mobile office platform engine machine for use in the system of <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 5</figref> is a schematic block diagram of an exemplary embodiment of the database module of the system of <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 6</figref> is a block diagram showing functional components of a configuration module and communications module that can be operative as part of a mobile office platform.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 7</figref> is a high-level flowchart as an example of the process used for provisioning an email account using MX records.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 8</figref> is a high-level flowchart showing an example of the process used for provisioning an email account using mail exchange (MX) and address (A) records.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 9</figref> is a block diagram of a system for learning mailbox configuration conventions.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 10</figref> is a block diagram of a system for determining configuration parameters.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 11</figref> is a block diagram showing details of configuration conventions using different expressions as a subset.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 12</figref> is a block diagram illustrating a system for using symbolic expressions to represent conventions used for mailbox configuration parameters.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 13</figref> is a block diagram showing an example of a representation for configuration conventions that are sets of email expressions formed by symbols.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 14</figref> is a schematic block diagram illustrating an exemplary mobile wireless communications device that can be used with the Direct Access system shown in <figref idref="DRAWINGS">FIG. 1</figref>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
<p id="p-0023" num="0022">Different embodiments will now be described more fully hereinafter with reference to the accompanying drawings, in which preferred embodiments are shown. Many different forms can be set forth and described embodiments should not be construed as limited to the embodiments set forth herein. Rather, these embodiments are provided so that this disclosure will be thorough and complete, and will fully convey the scope to those skilled in the art. Like numbers refer to like elements throughout, and prime notation is used to indicate similar elements in alternative embodiments.</p>
<p id="p-0024" num="0023">A system provisions an electronic (email) account of a user for allowing access to an electronic mailbox from a remote device to retrieve email. A communications module receives email address parameters entered by the user and transmits a domain name system (DNS) query to the Internet for returning mail exchange (MX) records corresponding to the email address parameters entered by the user. A configuration module processes any returned MX records as a starting point for determining configuration parameters for accessing the email account of the user to retrieve user email.</p>
<p id="p-0025" num="0024">In another aspect, the configuration module is operative for determining from the MX records a mail server from which email is accessed for the user email account. The communications module is operative for receiving a password from the user and attempting access to the user email account using any determined configuration parameters. The configuration module is also operative for obtaining from the MX records a prioritized list of possible mail servers to which the user email account is to be accessed and attempting access to an email account based on priority. The configuration parameters include one of at least a mail host, port, log-in name, or password as non-limiting examples. The configuration module can also be operative for generating a subset of possible configuration parameters by using heuristics of likelihood that a set of configuration parameters would be valid for accessing an electronic mailbox. The system includes a database containing relevant configuration conventions that are sets of email expressions formed by symbols that symbolically represent the conventions used by email service providers for a set of configuration parameters. The configuration module can be operative for generating sets of possible configuration parameters that can be tracked for accessing an electronic mailbox of a user. The communications module and configuration module can be operative as part of a mobile office platform having a direct access proxy used for accessing an electronic mailbox.</p>
<p id="p-0026" num="0025">In another aspect, a method and computer-readable medium is set forth.</p>
<p id="p-0027" num="0026">Referring initially to <figref idref="DRAWINGS">FIG. 1</figref>, a direct access (DA) email distribution and synchronization system <b>20</b> allows direct access to different mail sources, allowing messages to be transferred directly to a mobile wireless handheld device from a source mailbox. As a result, different mail stores need not be used for integrated external source mail accounts, and a permanent copy of an email in a local email store is not required.</p>
<p id="p-0028" num="0027">Although this diagram depicts objects as functionally separate, such depiction is merely for illustrative purposes. It will be apparent to those skilled in the art that the objects portrayed in this figure can be arbitrarily combined or divided into separate software, firmware or hardware components. Furthermore, it will also be apparent to those skilled in the art that such objects, regardless of how they are combined or divided, can execute on the same computing device or can be arbitrarily distributed among different computing devices connected by one or more networks.</p>
<p id="p-0029" num="0028">The direct access system <b>20</b> enables email users or subscribers to have email from third party email services pushed to various mobile wireless communications devices <b>25</b>. Users need not create a handheld email account to gain direct access to an existing external email account. The direct access system <b>20</b> may operate without performing aggregation as used in some prior art systems, in which emails are aggregated from multiple different source mailboxes to a single target mailbox. In other words, email need not be stored in an intermediate target mailbox, but instead may advantageously be accessed directly from a source mail store.</p>
<p id="p-0030" num="0029">As illustrated in <figref idref="DRAWINGS">FIG. 1</figref>, the direct access system <b>20</b> illustratively includes a Web client (WC) engine <b>22</b> and a mobile office platform (MOP) <b>24</b>. These Web client engine <b>22</b> and mobile office platform <b>24</b> operate together to provide users with direct access to their email from mobile wireless communications devices <b>25</b> via one or more wireless communications networks <b>27</b>, for example. Both the Web client engine <b>22</b> and the mobile office platform <b>24</b> may be located at the same location or at separate locations, and implemented in one or more servers. The web client engine <b>22</b> illustratively includes a port agent <b>30</b> for communicating with the wireless communications devices <b>25</b> via the wireless communications network(s) <b>27</b>, a worker <b>32</b>, a supervisor <b>34</b>, and an attachment server <b>36</b>, which will be discussed further below. An alert server <b>38</b> is shown in dashed lines, and in one preferred embodiment, is not used, but could be part of the system in yet other embodiments.</p>
<p id="p-0031" num="0030">The mobile office platform <b>24</b> illustratively includes a DA proxy <b>40</b>, and a proxy application programming interface (API) <b>42</b> and a cache <b>44</b> cooperating with the DA proxy. The mobile office platform <b>24</b> also illustratively includes a load balance and cache (LBAC) module <b>46</b>, an event server <b>48</b>, a universal proxy (UP) Servlet <b>54</b>, an AggCron module <b>56</b>, a mobile office platform (MOP) engine <b>58</b>, and a database (DB) engine <b>60</b>, which will be discussed in further detail below. The Least Recently Used (LRU) cache <b>41</b> caches new messages, and can release messages and objects that were least recently used.</p>
<p id="p-0032" num="0031">The supervisor <b>34</b> processes new mail notifications that it receives from the direct access proxy <b>40</b>. It then assigns a job, in the form of a User Datagram Protocol (UDP) packet, to the least-loaded worker <b>32</b>, according to the most recent UDP heartbeat the supervisor <b>34</b> has received. For purposes of this description, heartbeat is a tool that monitors the state of the server. Additionally, the supervisor <b>34</b> will receive a new service book request from the direct access proxy <b>40</b> to send service books to the mobile wireless communication device for new or changed accounts. A service book can be a class that could contain all service records currently defined. This class can be used to maintain a collection of information about the device, such as connection information or services, such as an email address of the account.</p>
<p id="p-0033" num="0032">The worker <b>32</b> is an intermediary processing agent between the supervisor <b>34</b> and the port agent <b>30</b>, and responsible for most processing in the Web client engine <b>22</b>. It will retrieve e-mail from a universal proxy <b>54</b>, via a direct access proxy, and format e-mail in Compressed Multipurpose Internet Mail Extension (CMIME) as a type of Multipurpose Internet Mail Extension, and send it to the port agent <b>30</b>, for further processing. Its responsibilities include the following tasks: (1) messages sent to and received from the handheld; (2) message reply, forward and more requests; (3) Over The Air Folder Management operation (OTAFM); (4) attachment viewing; and (5) service book.</p>
<p id="p-0034" num="0033">The port agent <b>30</b> acts as a transport layer between the infrastructure and the rest of the Web client engine <b>22</b>. It is responsible for delivering packets to and from the mobile wireless communications device. To support different integrated mailboxes with one device, more than one service book can be used, and each service book can be associated with one integrated mailbox. A port agent <b>30</b> can include one Server Relay Protocol (SRP) connection to a relay, but it can also handle multiple SRP connections, and each connection may have a unique Globally Unique Identifier (GUID) associated with a service book. The attachment server <b>36</b> provides service for document/attachment conversion requests from workers <b>32</b>.</p>
<p id="p-0035" num="0034">The direct access proxy <b>40</b> provides a Web-based Distributed Authoring and Versioning (WebDAV) interface that is used by the worker <b>32</b> to access account and mailbox information. This provides functionality to create, change and move documents on a remote server, e.g., a Web server. The direct access proxy <b>40</b> typically will present an asynchronous interface to its clients. The LBAC module <b>46</b> is used by a notification server and the Web client engine <b>22</b> components to locate the proper DA proxy for the handling of a request. The universal proxy Servlet <b>54</b> abstracts access to disparate mail stores into a common protocol. The event server <b>48</b> responds to notifications of new messages from corporate servers <b>52</b> and/or mail service providers <b>50</b>, which may be received via the Internet <b>40</b>, for example. The notifications are communicated to the direct access proxy <b>40</b> by the AggCron module <b>56</b> and the event server <b>48</b> so that it may initiate checking for new mail on source mailboxes <b>51</b>, <b>53</b> of the mail service providers <b>50</b> and/or corporate servers <b>52</b>. The proxy API can be a Simple Object Access Protocol (SOAP) Daemon <b>42</b> and is the primary interface into a database <b>60</b>, which is the primary data store for the mobile office platform <b>24</b>. The AggCron module <b>56</b> may also periodically initiate polling for new messages as well.</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 2</figref> is a high-level block diagram showing user interface components of the direct access proxy <b>40</b>. More particularly, the direct access proxy <b>40</b> illustratively includes an identifier module <b>72</b> with various downstream proxy modules for different communication formats, such as a Wireless Application Protocol (WAP) proxy module <b>74</b> and a Hypertext Markup Language (HTML) proxy module <b>76</b>. Of course, it will be appreciated by those skilled in the art that other types of proxy modules for other communications formats may also be used.</p>
<p id="p-0037" num="0036">The identifier module <b>72</b> provides a centralized authentication service for the direct access system <b>20</b> and other services. An authentication handshake may be provided between an ID service and direct access system <b>20</b> to ensure that users have the proper credentials before they are allowed access to the direct access system <b>20</b>. The ability to switch from managing a Web client to a direct access system, or vice versa, may occur without requiring the user to re-enter any login credentials. Any Web client and direct access may share session management information on behalf of a user.</p>
<p id="p-0038" num="0037">The WAP proxy <b>74</b> provides a wireless markup language (WML)-based user interface for configuring source mailboxes with the mobile office platform <b>24</b>. The HTML proxy <b>76</b> provides an HTML-based user interface for configuring of source mailboxes in the MOP <b>24</b>. The proxy API <b>42</b> (SOAP Daemon) is the primary interface into the database <b>60</b>. The engine <b>58</b> is a protocol translator that connects to a source mailbox to validate configuration parameters. The database <b>60</b> is the primary user data store for the mobile office platform <b>24</b>.</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIGS. 3</figref>, <b>4</b> and <b>5</b> illustrate respective Web client engine machines <b>80</b> (<figref idref="DRAWINGS">FIG. 3</figref>), an engine machine <b>82</b> (<figref idref="DRAWINGS">FIG. 4</figref>), and database machine <b>84</b> (<figref idref="DRAWINGS">FIG. 5</figref>). The Web client engine machine <b>80</b> illustratively includes the supervisors <b>34</b>, workers <b>36</b>, and port agents <b>38</b>. Relays <b>86</b> cooperate with the port agents <b>38</b> using a GUID.</p>
<p id="p-0040" num="0039">The engine machine <b>82</b> illustratively includes a direct access proxy <b>40</b>, HTML proxy <b>76</b>, WAP proxy <b>74</b>, PDS module <b>88</b>, UP Servlet <b>54</b>, LBAC module <b>46</b>, a sendmail module <b>90</b>, an secure mail client (SMC) server <b>92</b>, a Secure sockets layer (SSL) proxy <b>94</b>, an aggregation engine <b>96</b>, and event server <b>48</b>. The SMC server <b>92</b> cooperates with corresponding SMC modules resident on certain corporate networks, for example, to convey email data between the mobile office platform <b>24</b> and source mailboxes. The database machine <b>84</b> may include an aggregation application programming interface (API) <b>100</b> as a SOAP Daemon, an administration console <b>102</b>, an aggregation database <b>104</b>, the AggCron module <b>56</b>, an SMC directory server <b>106</b>, and a send mail module <b>90</b>.</p>
<p id="p-0041" num="0040">The various components of the Web client engine <b>22</b> may be configured to run on different machines or servers. The component binaries and configuration files may either be placed in a directory on the network or placed on a local disk that can be accessed to allow the appropriate components to run from each machine. In accordance with one exemplary implementation, deployment may include one supervisor, two workers, and one port agent for supporting 30,000 external source mailboxes, although other configurations may also be used. Actual production deployment may depend on the results of load, performance and stress testing, as will be appreciated by those skilled in the art.</p>
<p id="p-0042" num="0041">For the mobile office platform <b>24</b> direct access components, modules and various functions, machines are typically installed in two configurations, namely engine machines (<figref idref="DRAWINGS">FIG. 4</figref>) and database machines (<figref idref="DRAWINGS">FIG. 5</figref>). While these machines may have all of the above-described components installed on them, not all of these components need be active in all applications (e.g., aggregation may be used with systems that do not support push technology, etc.). Once again, actual production deployment may depend on the results of load, performance and stress testing.</p>
<p id="p-0043" num="0042">The mobile office platform <b>24</b> architecture in one known technique advantageously uses a set of device/language-specific eXtensible Stylesheet Language (XSL) files, which transform application data into presentation information. In one non-limiting example, a build process takes a non-localized XSL and generates a localized XSL for each supported language. When the XSL is used, it is &#x201c;compiled&#x201d; in memory and cached for repeated use. The purpose of pre-localizing and caching the templates is to reduce the CPU cycles required to generate a presentation page.</p>
<p id="p-0044" num="0043">Branding may also be performed. Initially, a localized XSL may build a WAP application to access, aggregated email accounts. A WAP proxy application may be localizable and support multiple WAP devices. For each logical page of an application, a device-specific XSL may be created, which may be localized for each language/country supported. This rendering scheme may support not only WAP devices, but also SMTP, HTML and POP proxies, for example. In branding, each page of a given application may be customized for each different brand.</p>
<p id="p-0045" num="0044">The branding of a page may be accomplished through XSL imports, including the use of a Java application programming interface (API) for XML processing (JAXP) feature to resolve the imports dynamically. This need not require that each combined page/brand template be compiled and cached. By way of example, in a sample template directory, first and second pages for a single language/country may be combined with branded counterparts to generate a plurality of distinct template combinations. It is also possible to profile memory requirements of an application by loading templates for a single language, device/application and brand. An HTML device may include a set of templates that are large compared to other devices.</p>
<p id="p-0046" num="0045">In one known technique, the mobile office platform <b>24</b> advantageously builds processes and takes non-localized files and language-specific property files and combines them to make each non-localized XSL into an XSL for each supported language. A separate XSL for each language need not be used, and the language factor may be removed from the memory usage equation. A JAXP API may be used to extend XSL with Java classes. The extensions may take various forms, for example, including extension elements and extension functions. A template may be transformed by creating and initializing an extension object with a locale and passing an object to a transformer. The system can remove multiple imports and use less memory. HTML templates can use template importing to enable template reuse, much like Java classes, and reuse other Java classes through a mechanism like derivation or importing.</p>
<p id="p-0047" num="0046">In the direct access system <b>20</b>, users receive email on their mobile wireless communications devices <b>25</b> from multiple external accounts, and when replying to a received message, the reply-to and sent-from address integrity is preserved. For example, for a user that has an integrated Yahoo! account (user@yahoo.com) and a POP3 account (user@pop3.com), if they receive an email at user@yahoo.com, their replies generated from the device <b>25</b> will appear to come from user@yahoo.com. Similarly, if a user receives an email at user@pop3.com, their replies will appear to come from user@pop3.com.</p>
<p id="p-0048" num="0047">Selection of the &#x201c;sent from&#x201d; address is also available to a user that composes new messages. The user will have the ability to select the &#x201c;sent from&#x201d; address when composing a new message. Depending on the source mailbox type and protocol, the message may also be sent through the source mail service. This functionality can be supported by sending a configuration for each source mailbox, for example, as a non-limiting example, a service book for each source mailbox <b>51</b>, <b>53</b> to the mobile wireless communications device <b>25</b>.</p>
<p id="p-0049" num="0048">As noted above, a service book is a class that may include all service records currently defined. This class may be used to maintain a collection of information about the device, such as connection information. The service book may be used to manage HTTP connections and mail (CMIME) information such as account and hierachy. At mobile wireless communications devices <b>25</b>, a delete service book request may be sent when a source mailbox <b>51</b>, <b>53</b> is removed from the account. The service book may also be resent to the device <b>25</b> with a viewable name that gives the user some indication that the selection is no longer valid.</p>
<p id="p-0050" num="0049">A sent items folder may also be &#x201c;synchronized.&#x201d; Any device-originated sent messages may be propagated to a source account and stored in a sent mail folder, for example. Also, messages deleted on the device <b>25</b> may correspondingly be deleted from the source mailbox <b>51</b>, <b>53</b>. Another example is that device-originated marking of a message as read or unread on the device <b>25</b> may similarly be propagated to the source mailbox <b>51</b>, <b>53</b>. While the foregoing features are described as source-dependent and synchronizing one-way, in some embodiments certain synchronization features may in addition, or instead, propagate from the source mailbox/account to the handheld device, as will be appreciated by those skilled in the art.</p>
<p id="p-0051" num="0050">When available, the mail service provider or corporate mail server may be used for submission of outgoing messages. While this may not be possible for all mail service providers or servers, it is preferrably used when available as it may provide several advantages. For example, subscribers to AOL will get the benefit of AOL-specific features like parental controls. Furthermore, AOL and Yahoo users, as non-limiting examples, will see messages in their sent items folder, and messages routed in this manner may be more compliant with new spam policies such as Sender Policy Framework (SPF) and Sender Id. In addition, messages sent via corporate mail servers <b>52</b> will have proper name resolution both at the global address list level and the personal level. It should be understood, however, that the use of the mail service provider <b>50</b> to deliver mail may be dependant on partner agreements and/or protocol, depending upon the given implementation.</p>
<p id="p-0052" num="0051">The architecture described above also advantageously allows for features such as on-demand retrieval of message bodies and attachments and multiple folder support. Moreover, a &#x201c;this-is-spam&#x201d; button or indicator may be used allowing company labels and other service provider-specific features when supported by an underlying protocol, as will be appreciated by those skilled in the art.</p>
<p id="p-0053" num="0052">One particular advantage of the direct access system <b>20</b> is that a user need not configure an account before integrating additional accounts. However, a standalone email address may be used, and this address advantageously need not be tied to a mailbox size which the subscriber is required to manage. For example, the email account may be managed by an administrator, and any mail could be purged from the system after a pre-determined period of time (i.e., time-based auto-aging with no mailbox limit for all users).</p>
<p id="p-0054" num="0053">Additionally, all aspects of any integrated email account creation, settings and options may advantageously be available to the user from their mobile wireless communications device <b>25</b> Thus, users need not visit an HTML site and change a setting, create a filter, or perform similar functions, for example. Of course, an HTML site may optionally be used.</p>
<p id="p-0055" num="0054">As a system Internet email service with the direct access system <b>20</b> grows, ongoing emphasis may advantageously be placed on the administrative site to provide additional information to carrier administrators, support teams, and similar functions. However, in some instances a mail connector may be installed on a personal computer, and this functionality may not always be available from the mobile wireless communications device.</p>
<p id="p-0056" num="0055">The Web client engine <b>22</b> may advantageously support different features including message to handheld (MTH), message from handheld (MFH), forward/reply a message, request to view more for a large message (e.g., larger than 2K), request viewing message attachment, and over the air folder management (OTAFM). These functions are explained below.</p>
<p id="p-0057" num="0056">For an MTH function, each email account integrated for a user is linked with the user device through a Web client service book. For each new message that arrives in the Web client user mailbox, a notification that contains the new message information will typically be sent to a Web client engine supervisor component (<figref idref="DRAWINGS">FIG. 3</figref>), which in turn will assign the job to an available worker with the least load in the system. The chosen worker <b>32</b> will validate the user information and retrieve the new message from the user source mailbox and deliver it to the user device.</p>
<p id="p-0058" num="0057">In an MFH function, MFH messages associated with a Web client service book are processed by the Web client engine <b>22</b> and delivered to the Internet <b>49</b> by the worker <b>32</b> via the simple mail transfer protocol (SMTP) or native outbox. If a user turns on the option to save the sent message to the sent items folder, the direct access proxy will save a copy of the sent message to this folder.</p>
<p id="p-0059" num="0058">In a Forward/Reply/More function, the user can forward or reply an MTH or MFH message from the mobile wireless communications device <b>25</b> as long as the original message still existed in the direct access proxy cache or in user mailbox. For MTH, the worker <b>32</b> may send the first 2K, for example, or the whole message (whatever is less) to the user device. If the message is larger than 2K, the user can request MORE to view the next 2K of the message. In this case, the worker <b>32</b> will process the More request by retrieving the original message from the user source mailbox, and send back the 2K that the device requests. Of course, in some embodiments more than 2K of message text (or the entire message) may be sent.</p>
<p id="p-0060" num="0059">In an attachment-viewing function, a user can view a message attachment of a popular document format (e.g., MS Word, MS Power Point, MS Excel, Word Perfect, PDF, text, etc.) or image format (GIF, JPEG, etc). Upon receiving the attachment-viewing request, which is implemented in a form of the More request in this example, the worker <b>32</b> can fetch the original message from the user source mailbox via the direct access proxy, extract the requested attachment, process it and send result back to the user device. The processing requires that the original message has not been deleted from the user Web client mailbox.</p>
<p id="p-0061" num="0060">In the save sent message to sent items folder function, if the user turns this option on, the worker <b>32</b> places a copy of each MFH message sent from the user device in the user sent items folder in the mailbox. In over the air folder management, the Web client OTAFM service maintains any messages and folders in the user mailbox synchronized with the user device over the air.</p>
<p id="p-0062" num="0061">Whenever a message in the user source mailbox is Moved/Deleted, the associated message on the device may also be Moved/Deleted accordingly, and vice-versa. When a message is Moved/Deleted on the device, the associated message in the user Web client mailbox may also be Moved/Deleted accordingly. Similarly, when a folder is Added/Removed/Renamed from the user Web client mailbox, the associated folder on the device may be Added/Removed/Renamed, and vice-versa.</p>
<p id="p-0063" num="0062">The system <b>20</b> may advantageously support different subsets of various messaging features. For example, in the message to handheld function, the mobile office platform <b>24</b> may be responsible for connecting to the various source mailboxes <b>51</b>, <b>53</b> to detect new emails. For each new mail, a notification is sent to the Web client engine <b>22</b> and, based on this notification, the supervisor <b>34</b> chooses one of the workers <b>32</b> to process that email. The chosen worker will fetch additional account information and the contents of the mail message from the direct access proxy <b>40</b> and deliver it to the user device <b>25</b>.</p>
<p id="p-0064" num="0063">In a message sent from handheld function, the MFH could be given to the direct access proxy <b>40</b> from the Web client worker <b>32</b>. In turn, the mobile office platform <b>24</b> delivers a message to the Internet <b>49</b> by sending through a native outbox or sending it via SMTP.</p>
<p id="p-0065" num="0064">It should be understood, however, that the native outbox, whenever possible, may provide a better user experience, especially when taking into account current anti-spam initiatives such as SPF and sender Id.</p>
<p id="p-0066" num="0065">In a message deleted from handheld function, when a message is deleted from the device <b>25</b>, the Web client engine <b>22</b> notifies the mobile office platform <b>24</b> via the direct access proxy <b>40</b>. As such, the mobile office platform <b>24</b> can delete the same message on the source mailbox.</p>
<p id="p-0067" num="0066">When handling More/Forward/Reply/Attachment viewing requests, the Web client worker <b>32</b> may request an original mail from the direct access proxy <b>40</b>. It will then process the request and send the results to the mobile wireless communications device <b>25</b>. The architecture may additionally support on-demand retrieval of message parts and other upgrades, for example.</p>
<p id="p-0068" num="0067">Upon the integration of a new source mailbox <b>51</b>, <b>53</b>, the service book notification from the alert server <b>38</b> may be sent to the supervisor <b>34</b>, which assigns this notification to a worker <b>32</b> for sending out a service record to the device. Each source mailbox <b>51</b>, <b>53</b> may be associated with a unique service record. In this way, each MFH message is linked with a source mailbox <b>51</b>, <b>53</b> based on the service record on the device.</p>
<p id="p-0069" num="0068">The system <b>20</b> may also poll the integrated external mailboxes periodically to check for new mail and to access any messages. The system <b>20</b> may further incorporate optimizations for polling bandwidth from an aggregation component allowing a quick poll. The system <b>20</b> can also advantageously support a large active user base and incorporate a rapidly growing user base.</p>
<p id="p-0070" num="0069">The topology of load balancing can be based on the size of a component's queue and its throughput. These load statistics can be monitored by a mechanism in one example called the UDP Heartbeat, as described before. If a component is overloaded or has a large queue size, the component will have less chance to get an assigned job from other components. In contrast, a component will get more assigned jobs if it completes more jobs in the last few hours than other components. With this mechanism, the load could distribute over heterogeneous machine hardware, i.e., components running on less power machines will be assigned fewer jobs than those on machines with more power hardware.</p>
<p id="p-0071" num="0070">General load balancing for any mobile office platform components can be accomplished through the use of a load balancer module, for example, a BIG-IP module produced by F5 Networks of Seattle, Wash. BIG-IP can provide load balancing and intelligent layer 7 switching, and can handle traffic routing from the Internet to any customer interfacing components such as the WAP and HTML proxies. The use of a BIG-IP or similar module may provide the application with pooling capabilities, fault tolerance and session management, as will be appreciated by those skilled in the art.</p>
<p id="p-0072" num="0071">Typically, access to a single source mailbox <b>51</b>, <b>53</b> can be from a single direct access proxy <b>40</b> over a persistent connection. Any requests on behalf of a particular user could persist to the same machine in the same direct access clustered partition. As certain components are system-wide and will be handling work for users across many partitions, these components can be designed to determine which direct access partition to communicate with on a request-by-request basis.</p>
<p id="p-0073" num="0072">The load balancer and cache (LBAC) <b>46</b> may support this function. The LBAC <b>46</b> is a system-wide component that can perform two important functions. The first of these function is that it provides a mapping from the device PIN to a particular direct access proxy <b>40</b>, while caching the information in memory for both fast access and to save load on the central database. Secondly, as the direct access proxy <b>40</b> will be run in clustered partitions, the LBAC <b>46</b> may distribute the load across all direct access proxies within any partition.</p>
<p id="p-0074" num="0073">The LBAC <b>46</b> can be formed of different components. For example, the code which performs the load balancing can be an extended version of a secure mail connector. The code can also perform lookups to the central database and cache the results (LBAC).</p>
<p id="p-0075" num="0074">In one non-limiting example, when a worker requires that a direct access proxy <b>40</b> perform work, it provides the LBAC <b>46</b> with a device PIN. The LBAC <b>46</b> will discover which partition that PIN is associated with by looking in its cache, or retrieving the partition identifier from a central database (and caching the result). Once the partition is known, the LBAC <b>46</b> then consults its cache to see which direct access proxy in that partition has been designated to handle requests for that PIN. If no mapping exists, the LBAC requests the PDS to create a new association on the least loaded DA proxy <b>40</b> (again caching the result). Finally, the LBAC <b>46</b> responds to the worker <b>32</b> with the connection information for the proper direct access proxy to handle that particular request.</p>
<p id="p-0076" num="0075">The secure mail connector <b>88</b> may run in failover pairs, where one is an active master and the other is a secondary standby. Internal data structures may be replicated in real-time from the master to the standby. Multiple LBACs <b>46</b> can be run for scalability and fault tolerance, but typically would require an external connection balancing component, such as the BIG-IP component as explained before.</p>
<p id="p-0077" num="0076">A receiving component in the Web client engine <b>22</b> saves the job that has been assigned to it from other components to a job store on the disk before processing. It can update the status of the job and remove the job from the job store when the job processing is completed. In case of component failure or if the process is restarted, it can recover the jobs from the job store and, based on the current statuses of these jobs, continue processing these jobs to the next state, saving the time to reprocess them from the beginning.</p>
<p id="p-0078" num="0077">Any recovery from the standpoint of MTH/MFH can be achieved through current polling behavior and on the Web client engine <b>22</b> recovery mechanisms. From within the mail office platform components, until a message has been successfully delivered to a Web client engine <b>22</b>, that message is not recorded in the partition database <b>60</b>. During the next polling interval, the system can again &#x201c;discover&#x201d; the message and attempt to notify the Web client engine <b>22</b>. For new mail events, if an event is lost, the system can pick up that message upon receiving the next event or during the next polling interval. For sources supporting notifications, this interval could be set at six hours, as one non-limiting example. For messages sent from the Web client engine <b>22</b>, and for messages that have been accepted by the Web client engine, recovery can be handled by different Web client engine components.</p>
<p id="p-0079" num="0078">The Web client engine <b>22</b> may advantageously be horizontally and vertically scalable. Multiple supervisors <b>34</b> can be registered/configured with direct access proxies <b>40</b> to provide the distribution of the notification load and the availability of engine service. Multiple workers <b>32</b> and port agents <b>30</b> can run on the same machine or across multiple machines to distribute load and achieve redundancy. As the number of users grows, new components can be added to the system to achieve high horizontal scalability.</p>
<p id="p-0080" num="0079">It is possible for a new component to be added to or removed from the system automatically without down time. Traffic can automatically be delegated to a new component and diverted away from failed components. Each component within the mobile office platform <b>24</b> can be deployed multiple times to achieve horizontal scalability. To achieve vertical scalability, each mobile office platform <b>24</b> component can be a multi-threaded process with a configurable number of threads to scale under heavy load. Pools of connections can be used to reduce the overhead of maintaining too many open connections.</p>
<p id="p-0081" num="0080">The embodiments as described advantageously set forth a system and method in which the system can send a domain name system (DNS) query to the Internet upon receipt of a user email that contains email address parameters entered by the user. In one aspect, MX records corresponding to the email address parameters of the user can be returned, which are used as a starting point for determining configuration parameters for accessing the email account of the user and retrieving user email. In prior applications, the system would run through a series of possible email server configurations to determine access to a source mailbox. For example, if a user provided an email address of Sally@somedomain.com, the system would try a series of possible server domain names, for example, mail.somedomain.com, pop.somedomain.com, etc. until the system finds one that works. If the system goes through the entire list of possibilities to validate an account, this can result in significant delays. Also, with the increase in &#x201c;vanity&#x201d; domains, using the ending of the email address might not lead to the actual server where the account is hosted. In addition, certain email actually resolves to other service provider email systems, e.g., a Verizon.com addresses resolved to mail.yahoo.com. Thus, the current approach may not always find the appropriate address of the mail server, and the user may have to wait a significant time while this process takes place only to have the process fail in the end.</p>
<p id="p-0082" num="0081">In the application as described, the MX records can be used as a starting point for determining configuration parameters for accessing a user email account. The MX records can also be used to aid in the &#x201c;guessing&#x201d; logic, which is described later. A user domain name can be checked against the MX record list to see if there is a match, and if not, then the system declares a failure without trying to authenticate.</p>
<p id="p-0083" num="0082">In one non-limiting aspect, when provisioning a new email account, the mail exchange (MX) and address (A) records corresponding to the entered email address parameters of the user are returned. A configuration module processes MX or A records to determine whether any email address parameters entered by the user are valid before attempting to provision the email account of the user. The email address parameters could be an email address, or email address and password as non-limiting examples.</p>
<p id="p-0084" num="0083"><figref idref="DRAWINGS">FIG. 6</figref> shows basic components of the mobile office platform <b>24</b> that includes functional components of a configuration module <b>24</b><i>a </i>and communications module <b>24</b><i>b</i>, and operative with the email service providers <b>50</b> having email accounts and MX records and A records. A mobile wireless communications device <b>25</b> is operative with mobile office platform <b>24</b> and email service provider <b>50</b> with email accounts. The configuration module <b>24</b><i>a </i>and communications module <b>24</b><i>b </i>are operative components with general functional and descriptive names for one or more components as described before relative to <figref idref="DRAWINGS">FIGS. 1-5</figref>.</p>
<p id="p-0085" num="0084">A mail exchange (MX) record can be an entry in a domain name database that identifies a mail server that is responsible for handling electronic mail for the domain name. Different MX records can be entered for any single domain name that is using more than one mail server. Priority can be obtained by a preference number, indicating the order in which the mail servers could be used. This would allow primary and back-up mail servers. Thus, an MX record maps a domain name to a list of mail exchange servers for that domain.</p>
<p id="p-0086" num="0085">Another type of mapping from a name to an IP address is an address (A) record, for example, the host name to an IP address mapping. Typically, in the priority of MX records, the smallest preference number has the highest priority.</p>
<p id="p-0087" num="0086">It should be understood that although the DNS system supports different types of record systems, the A record is typically a straight mapping between a name and one or more IP addresses. The MX record is usually used for routing email traffic, for example, routing emails of a particular domain name to a particular server that can be different from what is in the A records. Typically, the MX record is a good indicator for where the email domain name server is routing mail and can be used not only to check a user domain name against the MX record to see if a match occurs, but also to improve the guessing logic as will be explained below. If the MX record does not match, there could be a failure and the system may not try to authenticate, but would ask a user to re-enter the particular email address parameters. The system and method could take a portion after the &#x201c;@&#x201d; and do a DNS query on the Internet for MX and A records. A number of MX records can be pulled and the best one is picked to accomplish the provisioning and determine which server to pull mail from, especially when a company has several servers with different MX records acting as back-ups. This is important for vanity domain names. If there is an A record, there may or may not be additional insight on provisioning, yet in some instances, the A record can be used for determining a valid address. It is also possible to make several educated guesses as explained below. Otherwise, the user is told it is not a valid address.</p>
<p id="p-0088" num="0087"><figref idref="DRAWINGS">FIG. 7</figref> is a high-level flowchart illustrating an example of a process used for provisioning an electronic mail (email) account of a user for allowing access to an electronic mailbox from a remote device to retrieve email. The process uses MX records as a starting point for determining configuration parameters and accessing the email account of the user to retrieve user email.</p>
<p id="p-0089" num="0088">As shown at block <b>100</b>, a user inputs email address parameters during a provisioning process for typical remote access capabilities as described above. Upon receipt of the email address parameters, such as an email address and log-in password, the communications module transmits a DNS query to the Internet for returning MX records corresponding to the email address parameters of the user. The MX records are returned and used as a starting point for determining configuration parameters for accessing the email account of the user to retrieve user email (block <b>102</b>). If MX records or A records are returned for the user domain, a failure could occur and provisioning may not continue. The MX records can also be used with guessing logic, if necessary or desired (block <b>104</b>).</p>
<p id="p-0090" num="0089">It should be understood that in one aspect of a preferred and illustrated embodiment, there are two steps. In a first step, the user domain is used to retrieve a list of MX records. If a list of MX records comes back empty, then the user domain is used to retrieve a list of A (&#x201c;address&#x201d;) records as a second step. If the list of A records for the domain is also empty, the system could declare a failure without trying to authenticate. A database could include a table having a row for each ISP, operative with the guessing and other logic explained below.</p>
<p id="p-0091" num="0090">Typically, the configuration module <b>24</b><i>a </i>is operative for determining from the MX records a mail exchange server for an email domain name to which email is routed for the user email account. A prioritized list of possible mail servers can be obtained from the MX records to which the user email account is to be accessed and access to an email account can be based on priority. Configuration parameters could include the mail host, port, log-in name or password.</p>
<p id="p-0092" num="0091">The configuration module <b>24</b><i>a </i>is operative for generating a subset of possible configuration parameters by using heuristics of likelihood that a set of configuration parameters would be valid for accessing an electronic mailbox. A database can contain relevant configuration conventions that are sets of email expressions formed by symbols that symbolically represent the conventions used by email service providers for a set of configuration parameters. The configuration module can be operative for generating sets of possible configuration parameters that can be tried for accessing an electronic mailbox of a user.</p>
<p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. 8</figref> is a high-level flowchart as an example of a process used when both MX and A records can be returned. As shown at block <b>120</b>, the user inputs email address parameters to begin the process of provisioning the email account for remote access. The system <b>24</b> sends an inquiry first for MX records, and if no confirmation that the email address parameters are valid, the A records can be checked (block <b>122</b>). Although this description will proceed relative to first receiving MX records, both MX and A records could be returned at the same time, and in some embodiments is preferred. A check is made for valid email address parameters (block <b>124</b>). If not valid, the provisioning process stops (block <b>126</b>). If these are valid email address parameters, provisioning continues and guessing logic can be used (block <b>128</b>).</p>
<p id="p-0094" num="0093">Typically, the configuration module <b>24</b><i>a </i>will process any returned MX or A records to determine whether any email address parameters entered by the user are valid before attempting to provision the email account of the user.</p>
<p id="p-0095" num="0094">The configuration module <b>24</b><i>a </i>is operative for determining that if no MX or A records exist, email cannot be delivered or retrieved from the email account based on the entered email address parameters. Typically the configuration module can inform the user that incorrect data has been entered and provisioning of the email account cannot begin until correct email address parameters are entered. Similarly with the MX record example set forth above, a different mail exchange server can be determined and a prioritized list of possible mail servers obtained. There now follows details of an example of guessing logic that can be used.</p>
<p id="p-0096" num="0095">Guessing logic as will be described can be used as an aid for provisioning an account. <figref idref="DRAWINGS">FIG. 9</figref> illustrates a system for automatically learning conventions used by mail domains. The system is part of the intelligent server <b>211</b>, which includes a validator module <b>213</b> that determines a valid set of configuration parameters <b>214</b>. The server includes a learner module <b>215</b>, which accepts the valid set of configuration parameters <b>214</b> and generates configuration conventions <b>216</b>. A configuration conventions store <b>218</b> is operative as a database preferably part of the server, but could be separate. It stores the conventions for each mail domain. The learner module <b>215</b> is operative with a rules store <b>217</b> as a database of different rules.</p>
<p id="p-0097" num="0096">The validator module <b>213</b> determines a valid set of configuration parameters <b>214</b> for a respective mailbox based on a limited number of configuration parameters provided by the user. In an example embodiment, the validator module <b>213</b> may try to access the respective mailbox using a set of best guesses (estimates) for the configuration parameters as provided by the service that invokes the validator module <b>213</b>. In the example embodiment, if the access attempt fails, the validator module <b>213</b> may request additional information from the user until the validator module <b>213</b> has a valid set of configuration parameters. The validator module <b>213</b> accesses the mailbox being configured by using the access protocol relevant to the mailbox.</p>
<p id="p-0098" num="0097">In an example embodiment, the validator module <b>213</b> would use POP to access a POP enabled mailbox to verify that the configuration parameters <b>214</b> are valid. In other example embodiments, the validator module <b>213</b> may use IMAP to access IMAP enabled mailboxes. As is obvious to those skilled in the art, there are many access protocols that may be used to access mailboxes. After attempting to validate the configuration parameters <b>214</b>, the validator module <b>213</b> returns status information and the valid set of configuration parameters <b>214</b>.</p>
<p id="p-0099" num="0098">The learner module <b>215</b> accepts the configuration parameters <b>214</b> and generates the configuration convention <b>216</b> for the configuration parameters <b>214</b>. The configuration convention <b>216</b> is a manner of formatting the conventions used for configuration parameters for storage in the configuration convention store <b>218</b>. In an example embodiment, if the users email address is &#x201c;john.smith@foo.com&#x201d;, and the login name parameter required by the relevant mail host is &#x201c;jsmi&#x201d;, an expression within the configuration convention <b>216</b> for the login name parameter may be &#x3c;FirstName(1)&#x3e;&#x3c;LastName(3)&#x3e;.</p>
<p id="p-0100" num="0099">A variety of formats could be used in implementing a configuration convention <b>216</b>. The learner module <b>215</b> may apply certain tests to the configuration parameters <b>214</b> to ensure that the configuration parameters <b>214</b> are credible. In an example embodiment, the learner module <b>215</b> will only learn conventions in cases where the mail host is in the same mail domain as the email address of the user, to avoid attempts by &#x201c;hackers&#x201d; to pollute the learned configuration conventions <b>216</b>. Other tests are envisioned to ensure the integrity of the learned configuration conventions <b>216</b>. The learner module <b>215</b> may also apply rules that are stored in the rules store <b>217</b>. These rules may be based on business criteria or other relevant criteria. In an example embodiment, the rules may indicate that certain conventions are not to be learned for security reasons.</p>
<p id="p-0101" num="0100">Configuration conventions <b>216</b> that are deemed acceptable by the learner module <b>215</b> are then stored in the configuration conventions store <b>218</b>. In an example embodiment, the configuration conventions store <b>218</b> may include standard configuration conventions applicable to all domains, as well as one or more of the automatically learned configuration conventions <b>216</b> for each mail domain. Mail domains may have more than one associated configuration convention, as there may be multiple ways and protocols in which the mailbox on the mail domain may be accessed.</p>
<p id="p-0102" num="0101">Services may then access the configuration conventions <b>216</b> from the configuration convention store <b>218</b> to generate a list of potential sets of configuration parameters when configuring access to one or more of the user mailboxes.</p>
<p id="p-0103" num="0102">Based on empirical evidence, the vast majority of email providers adhere to a number of conventions when it comes to the configuration parameters used to access mailboxes. Almost all of the POP mail hosts in existence today are prefixed with &#x201c;mail.&#x201d;, &#x201c;pop.&#x201d;, or &#x201c;pop3.&#x201d;. It is likely that a user with an email address of &#x201c;john.smith@foo.com&#x201d; would be able to access their POP-enabled mailbox through the host named &#x201c;mail.foo.com&#x201d;, &#x201c;pop.foo.com&#x201d; or &#x201c;pop3.foo.com&#x201d;. These conventions can be captured in a data store and it is possible for the service that requires access to the user's mailbox to use the conventions to generate potentially valid sets of configuration parameters. The server can then attempt to determine a valid set of configuration parameters that can be used to access the user's mailbox. The set of configuration parameters for the user's mailbox can be determined when the user only provides an email address and password. The system can also successfully determine the configuration parameters in most cases. As new conventions are introduced or are discovered, they may be easily added to the data store.</p>
<p id="p-0104" num="0103">A guesser or determination module <b>232</b> (<figref idref="DRAWINGS">FIG. 10</figref>) is part of the server <b>211</b> and operative as the mailbox interface module and generates possible sets of configuration parameters <b>234</b> based on user supplied configuration information <b>230</b>, coupled with configuration conventions <b>216</b> stored in the configuration conventions data store <b>218</b>. Services may then use the sets of configuration parameters <b>234</b> to determine the correct set of configuration parameters required to access the user's mailbox.</p>
<p id="p-0105" num="0104"><figref idref="DRAWINGS">FIG. 11</figref> shows further details of the configuration conventions <b>216</b>. It should be understood that configuration conventions are sets of e-mail expressions formed by symbols, which can also be literals, such as a port number. In an example embodiment, a configuration convention <b>216</b> may comprise an expression for the server name parameter and an expression for the login name parameter. If, in the example embodiment, the email provider uses the login name &#x201c;jsmith&#x201d; and the mail domain &#x201c;mail.foo.com&#x201d; given an email address &#x201c;john.smith@foo.com&#x201d;, the login name expression in the configuration convention <b>216</b> may be &#x3c;FirstName(1)&#x3e;&#x3c;LastName&#x3e;, while the server name expression may be &#x201c;mail.&#x3c;MailDomain&#x3e;&#x201d;. In this example, the number in brackets within the expression &#x3c;FirstName(1)&#x3e;, represents the number of characters to be used from the parameter &#x3c;FirstName&#x3e;, ie. &#x201c;j&#x201d;. As is obvious to one skilled in the art, a variety of different symbolic representations may be used to represent the conventions for configuration parameters. The configuration conventions data store <b>218</b> stores the configuration conventions <b>216</b>. As new conventions are introduced or discovered, they may be easily added to the configuration conventions store <b>218</b>.</p>
<p id="p-0106" num="0105">The module <b>232</b> generates the sets of possible configuration parameters <b>234</b> based on user-supplied information <b>230</b>, and relevant configuration conventions <b>216</b> from the configuration conventions data store <b>218</b>. In many cases, the users email address provides sufficient information to be able to generate an accurate set of configuration parameters. In the example embodiment, given the email address &#x201c;jane.doe@foo.com&#x201d;, the module <b>232</b> would use the configuration conventions <b>216</b> to generate the possible configuration parameters <b>234</b> &#x201c;jdoe&#x201d; for the login name, and &#x201c;mail.foo.com&#x201d; for the server name.</p>
<p id="p-0107" num="0106">Email providers use many conventions when determining configuration parameters, and as a result, the module <b>232</b> generates many sets of possible configuration parameters <b>234</b>. To reduce the number of sets generated, the module <b>232</b> may only generate a subset of the sets of possible configuration parameters <b>234</b> based on additional user information, or based on heuristics of likelihood <b>233</b> that a given set of configuration parameters <b>234</b> may be successful under a given scenario. In an example embodiment, the user may indicate that only configuration conventions <b>216</b> with a protocol expression <b>239</b> of &#x201c;IMAP&#x201d; should be considered. In the example, the heuristics <b>233</b> could include tracking statistics about the number of attempts and percentage of successes using a given configuration convention <b>216</b>, and thereby only generate possible configuration parameters <b>234</b> based on this configuration convention <b>216</b> if certain conditions are met.</p>
<p id="p-0108" num="0107">Although many email providers adhere to fairly standard conventions for configuration parameters, such, as naming the mail host &#x201c;mail.&#x3c;MailDomain&#x3e;&#x201d; and matching the login name to the email address, there are many other email providers that employ less obvious conventions, such as setting the login name to be &#x3c;FirstName(1)&#x3e;&#x3c;LastName(3)&#x3e;, which in the case of the user with e-mail address of &#x201c;john.smith@foo.com&#x201d; would translate to the login name of &#x201c;jsmi&#x201d;. In the case of protocols that use uniform resource locators (URL) to indicate the location of the mailbox, the conventions are even less standard, since the login names are often embedded in the middle of the URL.</p>
<p id="p-0109" num="0108">By capturing these conventions in the data store, it is possible for the service that requires access to the user's mailbox to use the conventions to generate potentially valid sets of configuration parameters, and then attempt to determine a valid set of configuration parameters that can be used to access the user's mailbox. Therefore, it is possible to determine the set of configuration parameters for the user's mailbox even if the user is unable to provide all of the necessary configuration information. All that may be required from the user is an email address and password, from which the system may be able to successfully determine the configuration parameters in most cases. As new conventions are introduced or are discovered, they may be easily added to the data store.</p>
<p id="p-0110" num="0109">The configuration parameters could be represented using symbolic expressions, which may then be retained in the configuration conventions data store <b>218</b> for use by the service. This allows the service to draw configuration conventions from the data store, and using context data, to construct a valid set of configuration parameters that can be used to access mailboxes.</p>
<p id="p-0111" num="0110"><figref idref="DRAWINGS">FIG. 12</figref> illustrates an example of a system for generating configurations that comprise sets of configuration parameters <b>254</b>. A transformer module <b>252</b> as part of server <b>211</b> takes configuration conventions <b>216</b> stored in a configuration conventions data store <b>218</b> and expands them to generate configuration parameters <b>254</b> based on user supplied context data <b>250</b>.</p>
<p id="p-0112" num="0111"><figref idref="DRAWINGS">FIG. 13</figref> shows further details of the symbolic representation of configuration conventions <b>216</b>. The configuration conventions <b>216</b> symbolically represent the conventions used by email providers for a set of configuration parameters. The configuration conventions <b>216</b> comprise expressions <b>239</b> that represent individual configuration parameters using symbols <b>257</b>. In an example embodiment, the configuration convention <b>216</b> may be formed as an expression for the server name parameter, an expression for the login name parameter, and an expression for the mail protocol. If, in the example embodiment, the email provider uses the login name &#x201c;jsmi&#x201d; and the mail domain &#x201c;mail.foo.com&#x201d; given an email address &#x201c;john.smith@foo.com&#x201d;, the login name expression in the configuration convention <b>216</b> may be &#x201c;&#x3c;FirstName(1)&#x3e;&#x3c;LastName(3)&#x3e;&#x201d;, while the server name expression may be &#x201c;mail.&#x3c;MailDomain&#x3e;&#x201d;. In this example, the number in brackets within the symbol <b>257</b> &#x201c;&#x3c;FirstName(1)&#x3e;&#x201d;, represents the number of characters to be used from the users first name parameter, i.e., &#x201c;j&#x201d;. Similarly, the number in brackets in a symbol <b>257</b> &#x201c;&#x3c;LastName(3)&#x3e;&#x201d; represents the number of characters to be used from the users last name, ie. &#x201c;smi&#x201d;. As is obvious to one skilled in the art, a variety of different symbolic representations may be used to represent the conventions for configuration parameters. The choice of expressions <b>239</b> can be quite arbitrary, and are only limited by the requirement that the expression <b>239</b> can be expanded into a configuration parameter based on the context data <b>250</b> supplied to the transformer module <b>252</b>.</p>
<p id="p-0113" num="0112">The configuration conventions data store <b>218</b> stores the configuration conventions <b>216</b>. As new conventions are introduced or discovered, they may be easily added to the configuration conventions data store <b>218</b>.</p>
<p id="p-0114" num="0113">The transformer module <b>252</b> expands the individual expressions <b>239</b> into configuration parameters by expanding each symbol <b>257</b> into its corresponding value using context data <b>250</b>. In an example embodiment, a configuration convention <b>216</b> may comprise the mail protocol expression <b>239</b><i>a</i>, &#x201c;POP&#x201d;, the server name expression <b>239</b><i>b </i>&#x201c;mail.&#x3c;MailDomain&#x3e;&#x201d; and the login name expression <b>239</b><i>c </i>&#x201c;&#x3c;FirstName(1)&#x3e;&#x3c;LastName(3)&#x3e;&#x201d;, for example, as shown in <figref idref="DRAWINGS">FIG. 11</figref> for a plurality of expressions. If the transformer module <b>252</b> were provided with the context data <b>250</b> comprising the email address &#x201c;john.smith@foo.com&#x201d;, the transformer module <b>252</b> would infer the mail domain as &#x201c;foo.com&#x201d; from the email address. It would then generate the configuration parameters <b>234</b> of &#x201c;POP&#x201d; for the mail protocol, &#x201c;mail.foo.com&#x201d; for the server name, and &#x201c;jsmi&#x201d; for the login name.</p>
<p id="p-0115" num="0114">An example of a handheld mobile wireless communications device <b>1000</b> that may be used is further described in the example below with reference to <figref idref="DRAWINGS">FIG. 14</figref>. The device <b>1000</b> illustratively includes a housing <b>1200</b>, a keypad <b>1400</b> and an output device <b>1600</b>. The output device shown is a display <b>1600</b>, which is preferably a full graphic LCD. Other types of output devices may alternatively be utilized. A processing device <b>1800</b> is contained within the housing <b>1200</b> and is coupled between the keypad <b>1400</b> and the display <b>1600</b>. The processing device <b>1800</b> controls the operation of the display <b>1600</b>, as well as the overall operation of the mobile device <b>1000</b>, in response to actuation of keys on the keypad <b>1400</b> by the user.</p>
<p id="p-0116" num="0115">The housing <b>1200</b> may be elongated vertically, or may take on other sizes and shapes (including clamshell housing structures). The keypad may include a mode selection key, or other hardware or software for switching between text entry and telephony entry.</p>
<p id="p-0117" num="0116">In addition to the processing device <b>1800</b>, other parts of the mobile device <b>1000</b> are shown schematically in <figref idref="DRAWINGS">FIG. 14</figref>. These include a communications subsystem <b>1001</b>; a short-range communications subsystem <b>1020</b>; the keypad <b>1400</b> and the display <b>1600</b>, along with other input/output devices <b>1060</b>, <b>1080</b>, <b>1100</b> and <b>1120</b>; as well as memory devices <b>1160</b>, <b>1180</b> and various other device subsystems <b>1201</b>. The mobile device <b>1000</b> is preferably a two-way RF communications device having voice and data communications capabilities. In addition, the mobile device <b>1000</b> preferably has the capability to communicate with other computer systems via the Internet.</p>
<p id="p-0118" num="0117">Operating system software executed by the processing device <b>1800</b> is preferably stored in a persistent store, such as the flash memory <b>1160</b>, but may be stored in other types of memory devices, such as a read only memory (ROM) or similar storage element. In addition, system software, specific device applications, or parts thereof, may be temporarily loaded into a volatile store, such as the random access memory (RAM) <b>1180</b>. Communications signals received by the mobile device may also be stored in the RAM <b>1180</b>.</p>
<p id="p-0119" num="0118">The processing device <b>1800</b>, in addition to its operating system functions, enables execution of software applications <b>1300</b>A-<b>1300</b>N on the device <b>1000</b>. A predetermined set of applications that control basic device operations, such as data and voice communications <b>1300</b>A and <b>1300</b>B, may be installed on the device <b>1000</b> during manufacture. In addition, a personal information manager (PIM) application may be installed during manufacture. The PIM is preferably capable of organizing and managing data items, such as e-mail, calendar events, voice mails, appointments, and task items. The PIM application is also preferably capable of sending and receiving data items via a wireless network <b>1401</b>. Preferably, the PIM data items are seamlessly integrated, synchronized and updated via the wireless network <b>1401</b> with the device user's corresponding data items stored or associated with a host computer system.</p>
<p id="p-0120" num="0119">Communication functions, including data and voice communications, are performed through the communications subsystem <b>1001</b>, and possibly through the short-range communications subsystem. The communications subsystem <b>1001</b> includes a receiver <b>1500</b>, a transmitter <b>1520</b>, and one or more antennas <b>1540</b> and <b>1560</b>. In addition, the communications subsystem <b>1001</b> also includes a processing module, such as a digital signal processor (DSP) <b>1580</b>, and local oscillators (LOs) <b>1601</b>. The specific design and implementation of the communications subsystem <b>1001</b> is dependent upon the communications network in which the mobile device <b>1000</b> is intended to operate. For example, a mobile device <b>1000</b> may include a communications subsystem <b>1001</b> designed to operate with the Mobitex&#x2122;, Data TAC&#x2122; or General Packet Radio Service (GPRS) mobile data communications networks, and also designed to operate with any of a variety of voice communications networks, such as AMPS, TDMA, CDMA, PCS, GSM, etc. Other types of data and voice networks, both separate and integrated, may also be utilized with the mobile device <b>1000</b>.</p>
<p id="p-0121" num="0120">Network access requirements vary depending upon the type of communication system. For example, in the Mobitex and DataTAC networks, mobile devices are registered on the network using a unique personal identification number or PIN associated with each device. In GPRS networks, however, network access is associated with a subscriber or user of a device. A GPRS device therefore requires a subscriber identity module, commonly referred to as a SIM card, in order to operate on a GPRS network.</p>
<p id="p-0122" num="0121">When required network registration or activation procedures have been completed, the mobile device <b>1000</b> may send and receive communications signals over the communication network <b>1401</b>. Signals received from the communications network <b>1401</b> by the antenna <b>1540</b> are routed to the receiver <b>1500</b>, which provides for signal amplification, frequency down conversion, filtering, channel selection, etc., and may also provide analog to digital conversion. Analog-to-digital conversion of the received signal allows the DSP <b>1580</b> to perform more complex communications functions, such as demodulation and decoding. In a similar manner, signals to be transmitted to the network <b>1401</b> are processed (e.g. modulated and encoded) by the DSP <b>1580</b> and are then provided to the transmitter <b>1520</b> for digital to analog conversion, frequency up conversion, filtering, amplification and transmission to the communication network <b>1401</b> (or networks) via the antenna <b>1560</b>.</p>
<p id="p-0123" num="0122">In addition to processing communications signals, the DSP <b>1580</b> provides for control of the receiver <b>1500</b> and the transmitter <b>1520</b>. For example, gains applied to communications signals in the receiver <b>1500</b> and transmitter <b>1520</b> may be adaptively controlled through automatic gain control algorithms implemented in the DSP <b>1580</b>.</p>
<p id="p-0124" num="0123">In a data communications mode, a received signal, such as a text message or web page download, is processed by the communications subsystem <b>1001</b> and is input to the processing device <b>1800</b>. The received signal is then further processed by the processing device <b>1800</b> for an output to the display <b>1600</b>, or alternatively to some other auxiliary I/O device <b>1060</b>. A device user may also compose data items, such as e-mail messages, using the keypad <b>1400</b> and/or some other auxiliary I/O device <b>1060</b>, such as a touchpad, a rocker switch, a thumb-wheel, or some other type of input device. The composed data items may then be transmitted over the communications network <b>1401</b> via the communications subsystem <b>1001</b>.</p>
<p id="p-0125" num="0124">In a voice communications mode, overall operation of the device is substantially similar to the data communications mode, except that received signals are output to a speaker <b>1100</b>, and signals for transmission are generated by a microphone <b>1120</b>. Alternative voice or audio I/O subsystems, such as a voice message recording subsystem, may also be implemented on the device <b>1000</b>. In addition, the display <b>1600</b> may also be utilized in voice communications mode, for example to display the identity of a calling party, the duration of a voice call, or other voice call related information.</p>
<p id="p-0126" num="0125">The short-range communications subsystem enables communication between the mobile device <b>1000</b> and other proximate systems or devices, which need not necessarily be similar devices. For example, the short-range communications subsystem may include an infrared device and associated circuits and components, or a Bluetooth&#x2122; communications module to provide for communication with similarly-enabled systems and devices.</p>
<p id="p-0127" num="0126">This application is related to copending patent applications entitled, &#x201c;SYSTEM AND METHOD FOR PROVISIONING AN EMAIL ACCOUNT USING MAIL EXCHANGE AND ADDRESS RECORDS&#x201d; which is filed on the same date and by the same assignee and inventors.</p>
<p id="p-0128" num="0127">Many modifications and other embodiments of the invention will come to the mind of one skilled in the art having the benefit of the teachings presented in the foregoing descriptions and the associated drawings. Therefore, it is understood that the invention is not to be limited to the specific embodiments disclosed, and that modifications and embodiments are intended to be included within the scope of the appended claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>That which is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A system for provisioning an electronic mail (email) account for allowing access from a remote device, the system comprising:
<claim-text>a database; and</claim-text>
<claim-text>a processor coupled to said database and configured to
<claim-text>receive email address parameters and transmit a domain name system (DNS) query to the Internet for concurrently returning mail exchange (MX) and address (A) records corresponding to the email address parameters, and</claim-text>
<claim-text>process returned MX records to determine validity of the email address parameters, and when provisioning from processing returned MX records fails, process returned A records to determine the email address parameters, and when provisioning from processing returned A records fails, request corrected email address parameters and generate at least one set of possible configuration parameters based upon heuristics of likelihood of validity for provisioning and accessing the email account.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The system according to <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said processor is configured to determine from the MX records a mail exchange server for an email domain name, wherein email is routed from said mail exchange server for the email account.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The system according to <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said processor is configured to receive a user password and attempt access to the email account using determined configuration parameters.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The system according to <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the sets of possible configuration parameters comprise one of at least a mail host, port, log-in name or password.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The system according to <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the heuristics of likelihood are linked to a convention store.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A method for provisioning an electronic mail (email) account for allowing access from a remote device, the method comprising:
<claim-text>using a processor and a database coupled thereto to
<claim-text>receive email address parameters and transmit a domain name system (DNS) query to the Internet for concurrently returning mail exchange (MX) and address (A) records corresponding to the email address parameters, and</claim-text>
<claim-text>process returned MX records to determine validity of the email address parameters, and when provisioning from processing returned MX records fails, process returned A records to determine the email address parameters, and when provisioning from processing returned A records fails, request corrected email address parameters and generate at least one set of possible configuration parameters based upon heuristics of likelihood of validity for provisioning and accessing the email account.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method according to <claim-ref idref="CLM-00006">claim 6</claim-ref> further comprising using the processor and database to determine from the MX records a mail exchange server for an email domain name, wherein email is routed from said mail exchange server for the email account.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method according to <claim-ref idref="CLM-00006">claim 6</claim-ref> further comprising using the processor and database to receive a user password and attempt access to the email account using determined configuration parameters.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method according to <claim-ref idref="CLM-00006">claim 6</claim-ref> wherein the sets of possible configuration parameters comprise one of at least a mail host, port, log-in name or password.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method according to <claim-ref idref="CLM-00006">claim 6</claim-ref> wherein the heuristics of likelihood are linked to a convention store.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A system for provisioning an electronic mail (email) account for allowing access from a remote device, the system comprising:
<claim-text>a database; and</claim-text>
<claim-text>a processor coupled to said database and configured to
<claim-text>receive email address parameters and transmit a domain name system (DNS) query to the Internet for concurrently returning mail exchange (MX) and address (A) records corresponding to the email address parameters, and</claim-text>
<claim-text>process returned MX records to determine validity of the email address parameters, and when provisioning from processing returned MX records fails, process returned A records to determine the email address parameters, and when provisioning from processing returned A records fails, request corrected email address parameters and generate at least one set of possible configuration parameters.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A method for provisioning an electronic mail (email) account for allowing access from a remote device, the method comprising:
<claim-text>using a processor and a database coupled thereto to
<claim-text>receive email address parameters and transmit a domain name system (DNS) query to the Internet for concurrently returning mail exchange (MX) and address (A) records corresponding to the email address parameters, and</claim-text>
<claim-text>process returned MX records to determine validity of the email address parameters, and when provisioning from processing returned MX records fails, process returned A records to determine the email address parameters, and when provisioning from processing returned A records fails, request corrected email address parameters and generate at least one set of possible configuration parameters. </claim-text>
</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
