<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625967-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625967</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13006157</doc-number>
<date>20110113</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2005-270484</doc-number>
<date>20050916</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>393</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>N</subclass>
<main-group>5</main-group>
<subgroup>92</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>N</subclass>
<main-group>5</main-group>
<subgroup>93</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>386248</main-classification>
<further-classification>386253</further-classification>
</classification-national>
<invention-title id="d2e71">Information processing device, information recording medium manufacturing device, information recording medium, methods thereof, and computer program</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>7353541</doc-number>
<kind>B1</kind>
<name>Ishibashi et al.</name>
<date>20080400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7647646</doc-number>
<kind>B2</kind>
<name>Nakano et al.</name>
<date>20100100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7826620</doc-number>
<kind>B2</kind>
<name>Ueda et al.</name>
<date>20101100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7917964</doc-number>
<kind>B2</kind>
<name>Takashima et al.</name>
<date>20110300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>8131649</doc-number>
<kind>B2</kind>
<name>Yen et al.</name>
<date>20120300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705 59</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2002/0141582</doc-number>
<kind>A1</kind>
<name>Kocher et al.</name>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2007/0076870</doc-number>
<kind>A1</kind>
<name>Takashima et al.</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2010/0260020</doc-number>
<kind>A1</kind>
<name>Uchimura et al.</name>
<date>20101000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>JP</country>
<doc-number>2002-149061</doc-number>
<date>20020500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>JP</country>
<doc-number>2003-109303</doc-number>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>JP</country>
<doc-number>2004-532495</doc-number>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>JP</country>
<doc-number>2005-71037</doc-number>
<date>20050300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>WO</country>
<doc-number>WO 02/079906</doc-number>
<kind>A2</kind>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>WO</country>
<doc-number>WO 2005/008385</doc-number>
<kind>A2</kind>
<date>20050100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00015">
<othercit>U.S. Appl. No. 13/230,416, filed Sep. 12, 2011, Takashima, et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>3</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>386248</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>386239</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>386252</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>386253</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>386255</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>386257</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>386258</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>386259</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>25</number-of-drawing-sheets>
<number-of-figures>25</number-of-figures>
</figures>
<us-related-documents>
<division>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>11511489</doc-number>
<date>20060829</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>7965922</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13006157</doc-number>
</document-id>
</child-doc>
</relation>
</division>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60724802</doc-number>
<date>20051011</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110113258</doc-number>
<kind>A1</kind>
<date>20110512</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Takashima</last-name>
<first-name>Yoshikazu</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Takashima</last-name>
<first-name>Yoshikazu</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Oblon, Spivak, McClelland, Maier &#x26; Neustadt, L.L.P.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Sony Corporation</orgname>
<role>03</role>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Chevalier</last-name>
<first-name>Robert</first-name>
<department>2484</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">An information processing device for executing reproduction processing of content recorded in an information recording medium that includes: a data processing unit for acquiring content codes including a program or application information to be applied to the recording content of the information recording medium, and executing data processing in accordance with the acquired content codes. The data processing unit executes the verification processing of a digital signature which allows tampering verification of the entire content codes included in a content code file storing the content codes, and as the verification result, executes data processing in accordance with the content codes on the condition that validity of the content code file has been confirmed.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="162.98mm" wi="229.19mm" file="US08625967-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="241.64mm" wi="175.85mm" orientation="landscape" file="US08625967-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="239.18mm" wi="170.01mm" orientation="landscape" file="US08625967-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="231.90mm" wi="174.75mm" orientation="landscape" file="US08625967-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="220.64mm" wi="173.06mm" orientation="landscape" file="US08625967-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="152.99mm" wi="167.98mm" orientation="landscape" file="US08625967-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="228.52mm" wi="171.45mm" orientation="landscape" file="US08625967-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="235.71mm" wi="165.95mm" orientation="landscape" file="US08625967-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="246.72mm" wi="182.71mm" orientation="landscape" file="US08625967-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="239.95mm" wi="177.97mm" orientation="landscape" file="US08625967-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="237.66mm" wi="177.29mm" orientation="landscape" file="US08625967-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="230.55mm" wi="166.79mm" orientation="landscape" file="US08625967-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="226.06mm" wi="162.14mm" orientation="landscape" file="US08625967-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="241.72mm" wi="175.85mm" orientation="landscape" file="US08625967-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="231.90mm" wi="174.58mm" orientation="landscape" file="US08625967-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="168.15mm" wi="152.40mm" orientation="landscape" file="US08625967-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="235.80mm" wi="155.79mm" orientation="landscape" file="US08625967-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="235.88mm" wi="120.31mm" orientation="landscape" file="US08625967-20140107-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="235.71mm" wi="169.42mm" orientation="landscape" file="US08625967-20140107-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="237.24mm" wi="145.12mm" orientation="landscape" file="US08625967-20140107-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="236.39mm" wi="168.32mm" orientation="landscape" file="US08625967-20140107-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="228.68mm" wi="166.20mm" orientation="landscape" file="US08625967-20140107-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00022" num="00022">
<img id="EMI-D00022" he="232.07mm" wi="174.75mm" orientation="landscape" file="US08625967-20140107-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00023" num="00023">
<img id="EMI-D00023" he="217.17mm" wi="162.81mm" orientation="landscape" file="US08625967-20140107-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00024" num="00024">
<img id="EMI-D00024" he="212.43mm" wi="153.16mm" orientation="landscape" file="US08625967-20140107-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00025" num="00025">
<img id="EMI-D00025" he="190.16mm" wi="137.58mm" orientation="landscape" file="US08625967-20140107-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS REFERENCES TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is a divisional application of, and claims the benefit of priority under 35 U.S.C. &#xa7;120 from, U.S. application Ser. No. 11/511,489, filed Aug. 29, 2006, herein incorporated by reference, which claims the benefit of priority to U.S. Provisional Patent Application 60/724,802 filed Oct. 11, 2005, herein incorporated by reference.</p>
<p id="p-0003" num="0002">The present invention contains subject matter related to Japanese Patent Application JP 2005-270484 filed in the Japanese Patent Office on Sep. 16, 2005, the entire contents of which are incorporated herein by reference.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0004" num="0003">1. Field of the Invention</p>
<p id="p-0005" num="0004">The present invention relates to an information processing device, an information recording medium manufacturing device, an information recording medium, methods thereof, and a computer program. More specifically, the present invention relates to an information processing device, an information recording medium manufacturing device, an information recording medium, and methods thereof, and also a computer program, which realize a strict management arrangement of content codes to be recorded in an information recording medium along with content as a content usage control program.</p>
<p id="p-0006" num="0005">2. Description of the Related Art</p>
<p id="p-0007" num="0006">Various types of software data, such as audio data like music and so forth, image data like movies and so forth, game programs, various types of application programs and so forth (hereafter referred to as &#x201c;content&#x201d;) can be stored as digital data in recording media, for example, Blu-ray discs (Registered Trademark) which employ blue laser, or DVD (Digital Versatile Disc), MD (Mini Disc), and CD (Compact Disc). In particular, Blu-ray discs (Registered Trademark) which employ blue laser are high-density recording-capable disks, and can record massive amounts of picture contents and the like as high-image-quality data.</p>
<p id="p-0008" num="0007">Digital content is stored in such various types of information recording mediums (recording media) so as to be provided to users. Users reproduce and use the content on a reproduction device such as a PC (Personal Computer), disk player, etc., owned by the user.</p>
<p id="p-0009" num="0008">Generally, the distribution right and so forth of many contents such as music data, image data, and so forth, is held by the creator or vendor thereof. Accordingly, at the time of distribution of content, an arrangement is normally implemented wherein certain restrictions on usage are laid down, i.e., usage of content is permitted only for authorized users, and unauthorized reproduction and the like is prevented.</p>
<p id="p-0010" num="0009">With digital recording devices and recording media, recording and reproduction can be repeated without deterioration in image or audio for example, and problems are occurring such as distribution of illegally copied contents over the Internet, distribution of so-called bootleg edition disks of contents copied onto CD-Rs or the like, usage of copied contents stored on hard disks of PCs and the like, in proliferation.</p>
<p id="p-0011" num="0010">Large-capacity recording media such as DVDs, recording media using blue laser which have been developed in recent years, and so forth, are capable of recording great amounts of data, e.g., one to several movies, as digital information on a single disk. The ability to record picture information and the like as digital information makes preventing unauthorized copies to protect copyright holders an even more important issue. Various techniques have been implemented as of recent for preventing unauthorized copying to digital recording devices and recording media, in order to prevent such unauthorized copying of digital data.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0012" num="0011">One technique to prevent unauthorized copying of content and protect the copyright holder is encryption processing of the content. However, even with encrypted content, there is the problem that if the secret key is leaked, unauthorized decrypted content leaks out. The arrangement described in WO2005/008385 is a related art wherein an arrangement is disclosed of solving such problems. WO2005/008385 discloses an arrangement wherein unauthorized reproduction of content is prevented by rewriting a part of the content with dummy data.</p>
<p id="p-0013" num="0012">At the time of reproduction processing of content wherein content has been replaced with dummy data, processing for replacing the dummy data with the original content data again is necessary. This data transformation processing must be performed without external leakage of the original content, and also, it is preferable that leakage of processing information such as the position of the dummy data and the transformation method is prevented.</p>
<p id="p-0014" num="0013">Thus, it is necessary at the time of reproduction of content to execute decoding processing or data transformation processing of the content, and also in some cases, execute validity confirmation processing or the like such as regarding whether or not an information processing device or reproduction (player) program for attempting to use the content is an device or program which has received a legitimate license. Such data processing is performed by executing the content codes recorded in an information recording medium along with content as a content usage control program. Note that description has been made in WO2005/008385 regarding an example of content utilization processing using content codes, for example.</p>
<p id="p-0015" num="0014">Content code is set as a file independent from content, and is recorded in an information recording medium. Accordingly, it is possible to perform processing for moving content code alone to another information recording medium, or processing for copying the content code alone. Upon leakage of content code occurring, circulating in an unauthorized manner, and unauthorized usage being performed, there is the possibility that many contents will be reproduced in an unauthorized manner and used, resulting in serious damage.</p>
<p id="p-0016" num="0015">The present invention has been made in light of such a situation, and it has been found to be desirable to provide an information processing device, an information recording medium manufacturing device, an information recording medium, and a method, and also a computer program, for realizing a strict management configuration of content codes to be recorded in an information recording medium along with content as a control program for content use. Further, it has been found to be desirable to reduce burden at the time of authoring of a recording medium by facilitating recycling of content codes which can be used in multiple contents, even with content code created for a specific reproduction device, or with same content codes recorded in a medium in which multiple different contents are recorded, for example.</p>
<p id="p-0017" num="0016">According to one embodiment of the present invention, an information processing device for executing reproduction processing of content recorded in an information recording medium, includes: a data processing unit for acquiring content codes including a program or application information to be applied to the recording content of the information recording medium, and executing data processing in accordance with the acquired content codes; wherein the data processing unit is configured so as to execute the verification processing of a digital signature which allows tampering verification of the entire content codes included in a content code file storing the content codes, and as the verification result, execute data processing in accordance with the content codes on the condition that validity of the content code file has been confirmed.</p>
<p id="p-0018" num="0017">Further, the data processing unit may be configured so as to execute verification processing of a digital signature provided by a control center, as a verification processing of the digital signature, and further, to execute verification processing of a digital signature signed with a secret key unique to the player manufacturer and thus provided.</p>
<p id="p-0019" num="0018">Further, the data processing unit may be configured so as to execute signature verification processing regarding each content code file to be used which is selected from multiple content code files recorded in an information recording medium based on the digital signature set in each file.</p>
<p id="p-0020" num="0019">Further, the data processing unit may be configured so as to execute signature verification processing based on the digital signature set in one content code file, of the content code files to be used which are selected from multiple content code files recorded in an information recording medium, and execute verification processing other than the digital signature verification regarding the other content code files to be used.</p>
<p id="p-0021" num="0020">Further, the data processing unit may be configured so as to execute verification processing based on a hash value regarding the other content code files to be used.</p>
<p id="p-0022" num="0021">Further, the data processing unit may be configured so as to execute data processing which becomes necessary along with the replacement processing of some data of content to which a fix-up table included in the content codes is applied.</p>
<p id="p-0023" num="0022">Further, data processing unit may be configured so as to execute processing for calculating a parameter to be applied to restoring of a fix-up entry included in the fix-up table, serving as a parameter differing for each segment which is set as a sectioned region of the content recorded in an information recording medium.</p>
<p id="p-0024" num="0023">Further, according to another embodiment of the present invention, an information recording medium manufacturing device includes: content file generating means for generating a content file which stores content data to be recorded in an information recording medium; content code file generating means for storing content codes including a program or application information to be applied for content use, and further generating a content code file including data for tampering verification; and recording means for recording the content file generated by said content file generating means, and the content code file generated by the content code file generating means in an information recording medium.</p>
<p id="p-0025" num="0024">Further, the data for tampering verification may be a digital signature based on data including the content codes included in the content code file.</p>
<p id="p-0026" num="0025">Further, the data for tampering verification may be a hash value based on data including the content codes included in the content code file.</p>
<p id="p-0027" num="0026">Further, the content code file generating means may be configured so as to execute processing for generating multiple content code files storing content codes which are sectioned into multiple different categories, the recording means being configured so as to execute processing for recording the content code file having multiple different categories which are generated by the content code file generating means in an information recording medium.</p>
<p id="p-0028" num="0027">Further, the content code file generating means may be configured so as to generate multiple content code files storing content codes which are sectioned into multiple different categories, and execute processing for generating only one file, of the generated files, as a content code file including digital signature data.</p>
<p id="p-0029" num="0028">Further, the content code file generating means may be configured so as to generate multiple content code files storing content codes which are sectioned into multiple different categories, and execute processing for generating each content code file as a file including the digital signature of a producer or presentation entity of content codes included in each file.</p>
<p id="p-0030" num="0029">Further, according to another embodiment of the present invention, an information recording medium includes as storage data: a content file which stores content data; and a content code file for storing content codes including a program or application information to be applied for content use, and further including data for tampering verification.</p>
<p id="p-0031" num="0030">Further, the content code file may be a file wherein a code unique to a player that has been signed using the secret key of a player manufacturer, is further signed by the control center.</p>
<p id="p-0032" num="0031">Further, the data for tampering verification may be a digital signature based on data including the content codes included in the content code file.</p>
<p id="p-0033" num="0032">Further, the data for tampering verification may be a hash value based on data including the content codes included in the content code file.</p>
<p id="p-0034" num="0033">Further, the content code file may include multiple content code files storing content codes which are sectioned into multiple different categories.</p>
<p id="p-0035" num="0034">Further, the content code file may include multiple content code files storing content codes which are sectioned into multiple different categories, and of the files, only one file is a content code file including digital signature data.</p>
<p id="p-0036" num="0035">Further, the content code file may include multiple content code files storing content codes which are sectioned into multiple different categories, and each content code file is configured so as to include the digital signature of a producer or presentation entity of content codes included in each file.</p>
<p id="p-0037" num="0036">Further, with another embodiment of the present invention, an information processing method for executing reproduction processing of content recorded in an information recording medium includes the steps of: verification processing serving as a verification step of a digital signature which is set in a content code file storing content codes including a program or application information to be applied for use of recording content of an information recording medium, for executing verification processing of a digital signature which enables tampering verification of the entire content codes included in the content code file; and code executing for executing data processing in accordance with the content codes, on the condition that validity of the content code file has been confirmed as the verification result of the content codes.</p>
<p id="p-0038" num="0037">Further, the verification processing may be a step for executing signature verification processing regarding each content code file to be used which is selected from multiple content code files recorded in an information recording medium based on the digital signature set in each file.</p>
<p id="p-0039" num="0038">Further, the verification processing may be a step for executing signature verification processing based on the digital signature set in one content code file, of the content code files to be used which are selected from multiple content code files recorded in an information recording medium, and executing verification processing other than the digital signature verification regarding the other content code files to be used.</p>
<p id="p-0040" num="0039">Further, the verification processing may be a step for executing verification processing based on a hash value regarding the other content code files to be used.</p>
<p id="p-0041" num="0040">Further, the code executing may be a step for executing data processing which becomes necessary along with the replacement processing of some data of content to which a fix-up table included in the content codes is applied.</p>
<p id="p-0042" num="0041">Further, the code executing may be a step for executing processing for calculating a parameter to be applied to restoring of a fix-up entry included in the fix-up table, serving as a parameter differing for each segment which is set as a sectioned region of the content recorded in an information recording medium.</p>
<p id="p-0043" num="0042">Further, according to another embodiment of the present invention, an information recording medium manufacturing method includes the steps of: content file generating for generating a content file which stores content data to be recorded in an information recording medium; content code file generating for storing content codes including a program or application information to be applied for content use, and further generating a content code file including data for tampering verification; and recording for recording the content file generated in the content file generating, and the content code file generated in the content code file generating in an information recording medium.</p>
<p id="p-0044" num="0043">Further, the data for tampering verification may be a digital signature based on data including the content codes included in the content code file.</p>
<p id="p-0045" num="0044">Further, the data for tampering verification may be a hash value based on data including the content codes included in the content code file.</p>
<p id="p-0046" num="0045">Further, the content code file generating may be a step for executing processing for generating multiple content code files storing content codes which are sectioned into multiple different categories, and the recording be a step for executing processing for recording the content code file having multiple different categories which are generated in the content code file generating in an information recording medium.</p>
<p id="p-0047" num="0046">Further, the content code file generating may be a step for generating multiple content code files storing content codes which are sectioned into multiple different categories, and executing processing for generating only one file, of the generated files, as a content code file including digital signature data.</p>
<p id="p-0048" num="0047">Further, the content code file generating may be a step for generating multiple content code files storing content codes which are sectioned into multiple different categories, and executing processing for generating each content code file as a file including the digital signature of a producer or presentation entity of content codes included in each file.</p>
<p id="p-0049" num="0048">Further, according to another embodiment of the present invention, a computer program which causes an information processing device to execute reproduction processing of content recorded in an information recording medium includes the steps of: a verification processing serving as a verification step of a digital signature which is set in a content code file storing content codes including a program or application information to be applied for use of recording content of an information recording medium, for executing verification processing of a digital signature which enables tampering verification of the entire content codes included in the content code file; and code executing for executing data processing in accordance with the content codes, on the condition that validity of the content code file has been confirmed as the verification result of the content codes.</p>
<p id="p-0050" num="0049">Further, according to another embodiment of the present invention, an information recording medium manufacturing device comprises: a content file generating unit for generating a content file which stores content data to be recorded in an information recording medium; a content code file generating unit for storing content codes including a program or application information to be applied for content use, and further generating a content code file including data for tampering verification; and a recording unit for recording the content file generated by the content file generating unit, and the content code file generated by the content code file generating unit in an information recording medium.</p>
<p id="p-0051" num="0050">Note that the computer program according to the present invention is, for example, a computer program capable of providing a computer system capable of executing various types of program codes, through storage media or communication media capable of providing in a computer-readable format, e.g., recording mediums such as CDs, FDs, MOs, and so forth, or communication mediums such as a network or the like. Providing such a program in a computer-readable format realizes processing corresponding to the program on the computer system.</p>
<p id="p-0052" num="0051">Other objects, features, and advantages of the present invention will become apparent from further detailed description by way of later-described embodiments of the present invention and attached drawings. Note that the term &#x201c;system&#x201d; as used in the present specification refers to a logical assembly arrangement of multiple devices, and is not restricted to an arrangement wherein all of the component devices are in the same housing.</p>
<p id="p-0053" num="0052">According to the configuration of an example of the present invention, an arrangement is made wherein when executing reproduction processing of content recorded in an information recording medium, content codes including a program or application information to be applied for content use are acquired, and verification processing of the digital signature set in the content code file storing the content codes is executed at the stage prior to executing data processing in accordance with the acquired content codes, and as the verification result, data processing is executed in accordance with the content codes on the condition that validity of the content code file has been confirmed, whereby unauthorized execution of content codes can be prevented, and also unauthorized reproduction and use of contents due to unauthorized usage of content codes can be prevented.</p>
<p id="p-0054" num="0053">Also, according to a configuration of an example of the present invention, an arrangement is made wherein even in the event of setting multiple content code files which are recorded in an information recording medium, and used in an information processing device, a digital signature is set in at least one file, which allows content codes to be used on the condition of realization of verification using the digital signature, thereby realizing strict control regarding use of content codes.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram describing the configuration and processing of stored data in an information recording medium, and a drive device and information processing device;</p>
<p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. 2</figref> is a diagram describing a setting example of a content managing unit for settings made regarding stored data in the information recording medium;</p>
<p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram describing the correlation between the content managing unit for settings made regarding stored data in the information recording medium and a unit key;</p>
<p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram illustrating the directory configuration such as contents, management data, and the like to be recorded in the information recording medium;</p>
<p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. 5</figref> is a diagram illustrating the directory configuration of content codes to be recorded in the information recording medium;</p>
<p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. 6</figref> is a diagram describing content recorded in the information recording medium, and data transformation processing necessary for reproducing the content;</p>
<p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. 7</figref> is a diagram describing the details of the content and the fix-up table stored in the information recording medium;</p>
<p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. 8</figref> is a diagram illustrating the data configuration of fix-up entries included in a fix-up table;</p>
<p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. 9</figref> is a diagram describing data transformation processing applying fix-up entries within TS packets making up the content;</p>
<p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. 10</figref> is a diagram describing data transformation processing applying fix-up entries included in a fix-up table;</p>
<p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. 11</figref> is a diagram describing the processing sequence carried out between a reproduction (player) application and a secure VM;</p>
<p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. 12</figref> is a diagram describing processing for copying a fix-up table, carried out in the title initialization processing within the processing sequence between the reproduction (player) application and the secure VM;</p>
<p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. 13</figref> is a diagram describing a processing example of content reproduction processing;</p>
<p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. 14</figref> is a diagram describing data transformation processing executed at the time of content reproduction;</p>
<p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. 15</figref> is a diagram describing the details of the content codes recorded in the information recording medium;</p>
<p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. 16</figref> is a diagram describing the details of the processes for generating and recording the content codes recorded in the information recording medium;</p>
<p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. 17</figref> is a diagram describing a data configuration example of content code files to be recorded in the information recording medium;</p>
<p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. 18</figref> is a diagram describing a data configuration example of content code files to be recorded in the information recording medium;</p>
<p id="p-0073" num="0072"><figref idref="DRAWINGS">FIG. 19</figref> is a diagram describing a data configuration example of content code files to be recorded in the information recording medium;</p>
<p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. 20</figref> is a diagram describing a data configuration example of content code files to be recorded in the information recording medium;</p>
<p id="p-0075" num="0074"><figref idref="DRAWINGS">FIG. 21</figref> is a diagram illustrating a flowchart describing the usage sequence of content codes recorded in the information recording medium;</p>
<p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. 22</figref> is a diagram illustrating a flowchart describing the usage sequence of content codes recorded in the information recording medium;</p>
<p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. 23</figref> is a diagram describing a usage example of content codes;</p>
<p id="p-0078" num="0077"><figref idref="DRAWINGS">FIG. 24</figref> is a diagram describing a hardware configuration example of the information processing device; and</p>
<p id="p-0079" num="0078"><figref idref="DRAWINGS">FIG. 25</figref> is a block diagram describing the configuration of the information recording manufacturing device.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
<p id="p-0080" num="0079">The information processing device, information recording medium manufacturing device, information recording medium, methods thereof, and computer program, according to the present invention, will be described in detail with reference to the drawings. Note that the description will be made according to the following items.</p>
<p id="p-0081" num="0080">1. Overview of stored data in an information recording medium, and processing at a drive and a host</p>
<p id="p-0082" num="0081">2. About the content managing unit (CPS unit)</p>
<p id="p-0083" num="0082">3. Stored-data management configuration of an information recording medium</p>
<p id="p-0084" num="0083">4. Overview of data configuration of content including modified data, and data transformation processing</p>
<p id="p-0085" num="0084">5. Processing of a reproduction (player) application and the secure VM</p>
<p id="p-0086" num="0085">6. Content reproduction processing</p>
<p id="p-0087" num="0086">7. Content code management configuration</p>
<p id="p-0088" num="0087">8. Configuration of the information processing device</p>
<p id="p-0089" num="0088">9. The information recording medium manufacturing device and an information recording medium</p>
<p id="h-0006" num="0000">1. Overview of Stored Data in an Information Recording Medium, and Processing at a Drive and a Host</p>
<p id="p-0090" num="0089">First, description will be made regarding the overview of stored data in an information recording medium, and processing at a drive and a host. <figref idref="DRAWINGS">FIG. 1</figref> illustrates the configuration of an information recording medium <b>100</b> with content stored therein, a drive <b>120</b>, and a host <b>140</b>. The host <b>140</b> is a data reproduction (or recording) application which is executed on an information processing device such as a PC or the like, for example, and performs processing using the hardware of the information processing device such as a PC or the like, following a predetermined data processing sequence.</p>
<p id="p-0091" num="0090">The information recording medium <b>100</b> is an information recording medium such as, for example, a Blu-ray disc (Registered Trademark), DVD, or the like, and is an information recording medium storing authorized content (ROM disc or the like), manufactured at the disc manufacturing plant under the permission of the so-called content right holder, having proper content rights or distribution rights, or an information recording medium capable of recording data (RE disk or the like). Note that with the following embodiment, a disk-type medium will be used as an example for describing the information recording medium, the present invention is capable of being applied to configurations using various types of information recording media.</p>
<p id="p-0092" num="0091">As shown in <figref idref="DRAWINGS">FIG. 1</figref>, the information recording medium <b>100</b> stores a corrected content <b>101</b> which has been subjected to encryption processing and partial replacement of data, MKB (Medium Key Block) <b>102</b> which is the encryption key block generated based on a tree structure key distribution method known as a type of broadcast encryption method, title key file <b>103</b> configured of data wherein a title key to be applied for content decryption processing is encrypted (Encrypted CPS Unit Key) and so forth, usage rule <b>104</b> including CCI (Copy Control Information) and the like serving as copying/reproduction control information of content, and content codes <b>105</b> including data processing program to be executed at the time of using the encrypted content <b>101</b>.</p>
<p id="p-0093" num="0092">The content codes <b>105</b> include a fix-up table <b>106</b> in which transformation data corresponding to the replacement data of a predetermined region within content has been registered. The information processing device, which executes reproduction of content, extracts the transformation data recorded in the fix-up table <b>106</b> included in the content codes <b>105</b> in accordance with the data transformation processing program included in the content codes <b>105</b>, and performs replacement processing of the configuration data of the content.</p>
<p id="p-0094" num="0093">Content codes include information or a program for executing various types of processing such as startup processing, security check processing, or the like as well as a transformation processing program to which transformation data is applied. A subsequent stage will explain the detail of content codes in detail. Note that the information recording medium storing data example shown in the diagram is but an example, and the stored data differs more or less depending on the type of disk. The overview of each of these types of information will be described.</p>
<p id="p-0095" num="0094">(1) Encrypted Contents <b>101</b></p>
<p id="p-0096" num="0095">Various types of contents are stored in the information recording medium <b>100</b>. Examples of the contents include AV (Audio Visual) streams of moving picture contents such as HD (High-Definition) movie content which is high-definition moving picture data, game programs of a format stipulated under a particular standard, image files, audio data, text data, and so forth. These contents are data stipulated under a particular AV format, and are stored according to the particular AV data format. Specifically, this is stored according to the Blu-ray disc (Registered Trademark) ROM standard format, as Blu-ray disc (Registered Trademark) ROM standard data, for example.</p>
<p id="p-0097" num="0096">Further, there are cases wherein game programs, image files, audio data, text data, and so forth, are stored in service data, for example. There are cases wherein these contents are stored as data having a data format not following the particular AV data format.</p>
<p id="p-0098" num="0097">Types of contents include various contents such as music data, moving picture, still images, and like image data, as well as game programs, Web contents, and so forth, and information of various forms is included in these contents, such as content information usable only by the data from the information recording medium <b>100</b>, content information usable by combining data from the information recording medium <b>100</b> and data provided from the server connected to a network, and so forth. Contents stored in the information recording medium are stored encrypted, with a different key appropriated for each section content (CPS unit key or unit key (or also may be called a title key)), to realize different usage control for each section content. Each unit to which one unit key is appropriated is called a content managing unit (CPS unit). Further, the configuration data of the content is set as broken data wherein a part thereof that is replaced with data different from the correct content data, so decryption processing alone does not reproduce the correct content, and processing for replacing the broken data with data registered in a fix-up table is necessary to perform reproduction. This processing will be described later in detail.</p>
<p id="p-0099" num="0098">(2) MKB</p>
<p id="p-0100" num="0099">The MKB (media key block) <b>102</b> is an encryption key block generated based on a tree structure key distribution method known as a type of broadcast encryption method. The MKB <b>102</b> is a key information block enabling acquiring of a media key [Km] necessary for decrypting contents, only for processing (decryption) based on a device key [Kd] stored on the information processing device of the user having a valid license. This is an application and then information distribution method following a so-called hierarchical tree structure, enabling the acquiring of the media key [Km] only in the event that the user device (information processing device) has a valid license, and user devices which are invalidated (revoking processing) are incapable of acquiring a media key [Km].</p>
<p id="p-0101" num="0100">An administration center serving as a license entity can generate an MKB having a structure which cannot be decrypted with the device key stored in a certain user device, i.e., wherein the media key necessary for content decryption cannot be acquired, by changing the device key used for decryption of key information stored in the MKB. Accordingly, unauthorized devices can be revoked at an arbitrary timing, thereby providing encrypted contents capable of decryption only to devices having valid licenses. Content decryption processing will be described later.</p>
<p id="p-0102" num="0101">(3) Title Key File</p>
<p id="p-0103" num="0102">As described above, each content or group of multiple contents are subjected to encryption applying individual encryption keys for each (title key (CPS unit key)) for managing usage of contents, and stored in the information recording medium <b>100</b>. That is to say, AV (audio visual) streams, music data, moving pictures, still images, and like image data, game programs, Web content, and so forth, making up the contents, need to be sectioned into units of management of contents usage, with a different title key generated for each section unit, thereby carrying out decryption processing. Information for generating these title keys is title key data, and a title key is obtained by decrypting an encrypted title key with a key generated by a media key or the like, for example. Title keys corresponding to each unit are generated following a predetermined encryption key generating sequence using title key data, and decryption of contents is carried out.</p>
<p id="p-0104" num="0103">(4) Usage Rule</p>
<p id="p-0105" num="0104">Usage rule includes, for example, copy/reproduction control information (CCI). This is copy restriction information and reproduction restriction information for usage control corresponding to the encrypted contents <b>101</b> stored in the information recording medium <b>100</b>. There are various settings for the copy/reproduction control information (CCI), such as cases as information for individual CPS units set as content managing units, cases for being set corresponding to multiple CPS units, and so forth.</p>
<p id="p-0106" num="0105">(5) Content Codes</p>
<p id="p-0107" num="0106">The content codes <b>105</b> are data including a data processing program to be executed at the time of the encrypted content <b>101</b> being used. The host, which executes content reproduction, sets a virtual machine (VM) for executing the data transformation processing, executes the data transformation processing in accordance with the content codes read out of the information recording medium <b>100</b> at the virtual machine (VM), applies a registration entry in the fix-up table <b>106</b>, and executes the data transformation processing of the partial configuration data of the content.</p>
<p id="p-0108" num="0107">The encrypted content <b>101</b> stored in the information recording medium <b>100</b> has been subjected to predetermined encryption, and also, a part of the contents configuration data is configured of broken data which is different from the proper data. In order to reproduce the content, data overwriting processing is necessary, wherein the broken data is replaced with the transformation data which is the proper content data. The table in which the transformation data is registered is a fix-up table <b>106</b>. A great number of broken data is set scattered throughout the content, and at the time of reproducing the content, processing is necessary for replacing (overwriting) the multiple pieces of broken data with the transformation data registered in the fix-up table. Applying this transformation data means that even in the event that unauthorized content decryption is performed due to an encryption key leaking, for example, reproduction of proper content is impossible by content decryption alone, due to the presence of the replaced data, thereby enabling unauthorized contact usage to be prevented.</p>
<p id="p-0109" num="0108">In addition to normal transformation data, the fix-up table <b>106</b> includes transformation data enabling analyzing data identification information configuration bits for identifying the contents reproducing device or content reducing application. Specifically, for example, this includes a player ID which is identification data of a player (a device for executing a host application), or &#x201c;transformation data including identification marks&#x201d; wherein is recorded identification information generated based on the player ID. Transformation data including the identification marks is data wherein the bid values of the proper content data has been slightly changed, at the level which does not affect the reproduction of content.</p>
<p id="p-0110" num="0109">Note that the content codes <b>105</b> include information or a program for executing various types of processing such as startup processing, security check processing, or the like as well as the data transformation processing program to which the above fix-up table <b>106</b> is applied. A subsequent stage will explain the detail of content codes in detail.</p>
<p id="p-0111" num="0110">Next, the configuration of the host <b>140</b> and drive <b>120</b>, and overview of processing, will be described with reference to <figref idref="DRAWINGS">FIG. 1</figref>. Reproduction processing of the content stored in the information recording medium <b>100</b> is executed upon data being transferred to the host <b>140</b> via the drive <b>120</b>.</p>
<p id="p-0112" num="0111">The host <b>140</b> has a reproduction (player) application <b>150</b> and a secure VM <b>160</b> set. The reproduction (player) application <b>150</b> is a content reproduction processing unit, and executes processing such as authentication processing carried out with the drive at the time of content reproduction processing, content decryption, decoding processing, and so forth. The secure VM <b>160</b> functions as a parameter generating unit for providing parameters to be applied to the data transformation processing carried out in the content reproduction processing executed by the reproduction (player) application <b>150</b> which is the content reproduction processing unit, for example, the secure VM <b>160</b> is set as the virtual machine within the host <b>140</b>. The virtual machine (VM) is a virtual computer which directly interprets and executes an intermediate language, and reads out, interprets, and executes, command code information in an intermediate language not dependent on a platform, from the information recording medium <b>100</b>.</p>
<p id="p-0113" num="0112">The secure VM <b>160</b> serves as a data processing unit which acquires the content codes <b>105</b> including a program or application information to be applied to use of the encrypted content <b>101</b> recorded in the information recording medium <b>100</b>, executes the codes in accordance with the acquired content codes <b>105</b>, and performs data processing.</p>
<p id="p-0114" num="0113">Transfer of information or processing requests between the reproduction (player) application <b>150</b> and the secure VM <b>160</b> is carried out by sequences of interruption (INTRP) from the reproduction (player) application <b>150</b> to the secure VM <b>160</b>, and a response (Call) processing from the secure VM <b>160</b> to the reproduction (player) application <b>150</b>. The sequences of interruption (INTRP) from the application <b>150</b> to the secure VM <b>160</b>, and response (Call) processing from the secure VM <b>160</b> to the reproduction (player) application <b>150</b> perform parameter calculating requests and providing of parameters applied to the data transformation processing executed in the content reproduction processing. These processing sequences will be described in detail later.</p>
<p id="p-0115" num="0114">The primary processing which the host <b>140</b> executes will be described. Before usage of the content, mutual authentication processing is executed between the drive <b>120</b> and host <b>140</b>, and following confirmation of the validity of both parties by this authentication processing being established, encrypted content is transferred from the drive to the host, content decryption processing is performed at the host side, and further, the above-described data transformation processing by the fix-up table is executed, whereby content reproduction is performed.</p>
<p id="p-0116" num="0115">For the mutual authentication executed between the host <b>140</b> and the drive <b>120</b>, processing for determining the validity is executed by referencing a revocation (invalidation) list issued by an Administration Center whether or not each of the devices or applications are registered as an unauthorized device or application.</p>
<p id="p-0117" num="0116">The drive <b>120</b> has memory <b>122</b> for storing a host CRL (Certificate Revocation List) storing revocation (invalidation) information of the host certificate (public key certificate). On the other hand, the host <b>140</b> has memory <b>152</b> for storing a drive CRL (Certificate Revocation List) storing revocation (invalidation) information of the drive certificate (public key certificate). The memory is nonvolatile memory (NVRAM), and in the event that the CRL read out from the information recording medium <b>100</b> is a newer version, for example, their respective data processing units <b>121</b> and <b>151</b> performer updating processing for storing the host CRL or the drive CRL of the new version in the memory <b>122</b> and <b>152</b>.</p>
<p id="p-0118" num="0117">A CRL, such as the host CRL or drive CRL, is constantly updated by the administration center. That is to say, in the event that an unauthorized device has been newly discovered, an updated CRL wherein the certificate ID issued to the unauthorized device or the device ID or the like is added as a new entry, is issued. Each CRL is provided with the version number, and has a configuration wherein the newness can be compared. For example, in the event that a CRL read out from an information recording medium mounted to the drive is newer than the CRL stored in the memory <b>122</b> within the drive, the drive performs CRL updating processing. The host <b>140</b> also performs drive CRL updating in the same way.</p>
<p id="p-0119" num="0118">Besides this CRL updating processing, the data processing unit <b>121</b> of the drive <b>120</b> performs authentication processing with a host that is executed at the time of using content, and further performs processing for reading data from the information recording medium and transferring the data to the host.</p>
<p id="p-0120" num="0119">The reproduction (player) application <b>150</b> of the host <b>140</b> is a data reproduction (or recording) application executed on an information processing device such as the PC for example, and performs processing using the hardware of the information processing device such as a PC or the like, following a predetermined data processing sequence.</p>
<p id="p-0121" num="0120">The host <b>140</b> has a data processing unit <b>151</b> for performing mutual authentication processing with the drive <b>120</b>, data transfer control, and so forth, a decryption processing unit <b>153</b> for performing decryption processing of encrypted content, a data transformation processing unit <b>154</b> for performing data transformation processing based on registered data in the aforementioned fix-up table <b>105</b> and a decoding processing unit <b>155</b> for performing decoding (e.g., MPEG decoding) processing.</p>
<p id="p-0122" num="0121">The data processing unit <b>151</b> executes authentication processing between the host and drive, and within the authentication processing, references the drive CRL stored in memory a<b>152</b> which is nonvolatile memory (MVRAM), to confirm that the drive is not a drive which has been revoked. The host also performs updating processing to store the drive CRL of a new version in the memory a<b>152</b>.</p>
<p id="p-0123" num="0122">The decryption processing unit <b>153</b> generates the key to be applied to content decryption, using various types of information stored in the memory b<b>156</b> and data read from the information recording medium <b>100</b>, executing decryption processing of the encrypted content <b>101</b>. The data transformation processing unit <b>154</b> performs replacement processing (overwriting) of contents configuration data applying the transformation data registered in the fix-up table obtained from the information recording medium <b>100</b>, following the data transformation processing program obtained from the information recording medium <b>100</b>. The decoding processing unit <b>155</b> performs decoding (e.g., MPEG decoding) processing.</p>
<p id="p-0124" num="0123">The memory b<b>156</b> of the information processing device <b>150</b> stores a device key: Kd, key information to be applied to mutual authentication processing, key information to be applied to decryption, and so forth. Details of content decryption processing will be described later. The device key: Kd is a key to be applied to the above-described MKB processing. MKB is a key information block which enables obtaining of a media key [Km], which is a key necessary for deciphering content, to be obtainable only by processing (decrypting) based on a device key [Kd] stored in the information processing device of the user which has a valid license, and at the time of decrypting encrypted content, the information processing device <b>150</b> applies the device key: Kd stored in the memory b<b>156</b> to execute the MKB processing. Details of content decryption processing will be described later.</p>
<p id="h-0007" num="0000">2. About the Content Managing Unit (CPS Unit)</p>
<p id="p-0125" num="0124">As described above, the content stored in the information recording medium is subjected to decryption processing and is stored with different keys appropriated for each unit, in order to realize different usage control for each unit. That is to say, the content is sectioned into content managing unit (CPS units), individual decryption processing is performed, and individual usage management is made.</p>
<p id="p-0126" num="0125">At the time of using contents, first, there is the need to obtain a CPS unit Key (also called a title key) appropriated to each unit, and further, reproduction is performed by executing data processing based on decryption processing sequences determined beforehand, applying other necessary keys, key generating information, and so forth. The settings of a content management unit (CPS unit) will be described with reference to <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="p-0127" num="0126">As shown in <figref idref="DRAWINGS">FIG. 2</figref>, the content has a hierarchical configuration of (A) index <b>210</b>, (B) movie object <b>220</b>, (C) playlist <b>230</b>, and (D) clip <b>240</b>. Specifying an index such as a title to be accessed by the reproduction application specifies a reproduction program correlated with the title, for example, and the play list stipulating the order of reproducing the content is selected according to the program information of the reproduction program that has been specified.</p>
<p id="p-0128" num="0127">Play items are included in the play list as information of the data to be reproduced. An AV stream which is actual data of the content, or commands, are selectively read out by clip information for reproduction sections stipulated by play items included in the play list, and reproduction of the AV stream and execution processing of the commands are performed. Note that a great number of playlists and play items exist, and each has a corresponding playlist ID and play item ID, as identification information.</p>
<p id="p-0129" num="0128"><figref idref="DRAWINGS">FIG. 2</figref> illustrates two CPS units. These make up a part of the content stored in the information recording medium. Each of the CPS unit <b>1</b> <b>271</b>, and the CPS unit <b>2</b> <b>272</b> are CPS units which have been set as units including a title serving as an index, a movie object which is a reproduction program file, a play list, and a clip including an AV stream file which is the actual contents data.</p>
<p id="p-0130" num="0129">A content managing unit (CPS unit) <b>1</b> <b>271</b> includes a title <b>1</b> <b>211</b> and title <b>2</b> <b>212</b>, reproduction programs <b>221</b> and <b>222</b>, play lists <b>231</b> and <b>232</b>, a clip <b>241</b> and a clip <b>242</b>, and AV stream data files <b>261</b> and <b>262</b> which are the actual data of the content contained in the two clips <b>241</b> and <b>242</b> are at least the object data of encryption, and accordingly is set as data encrypted applying a title key (Kt<b>1</b>) which is an encryption key set corresponding to the content managing unit (CPS unit) <b>1</b> <b>271</b> as a rule (also called a CPS unit key).</p>
<p id="p-0131" num="0130">A content managing unit (CPS unit) <b>2</b> <b>271</b> includes an application <b>1</b> <b>213</b> as an index, a reproduction program <b>224</b>, playlist <b>233</b>, and a clip <b>243</b>, and an AV stream data file <b>263</b> which is the actual data of the content contained in the clip <b>243</b> is encrypted applying a title key (Kt<b>2</b>) which is an encryption key set corresponding to the content managing unit (CPS unit) <b>2</b> <b>272</b>.</p>
<p id="p-0132" num="0131">For example, in order for the user to execute an application file or content reproducing processing corresponding to the content managing unit <b>1</b> <b>271</b>, a title key: Kt<b>1</b> serving as an encryption key which is set so as to be correlated with the content managing unit (CPS unit) <b>1</b> <b>271</b>, needs to be obtained and subjected to decryption processing. In order for the user to execute an application file or content reproducing processing corresponding to the content managing unit <b>2</b> <b>272</b>, a title key: Kt<b>2</b> as an encryption which is set so as to be correlated with the content managing unit (CPS unit) <b>2</b> <b>272</b>, needs to be obtained and subjected to decryption processing.</p>
<p id="p-0133" num="0132"><figref idref="DRAWINGS">FIG. 3</figref> shows the CPS unit setting configuration, and example of corresponding title keys. <figref idref="DRAWINGS">FIG. 3</figref> shows correlation between CPS unit setting units which are units for managing usage of the encrypted content stored in the information recording media, and title keys (the CPS unit keys) applicable to each CPS unit. Note that a CPS unit and title key for data to come later may be stored and set beforehand. For example, the data unit <b>281</b> is entries for data to come later.</p>
<p id="p-0134" num="0133">CPS unit setting units come in a wide variety, such as content titles, applications, data groups, and so forth, and each CPS unit managing table has set therein CPS unit IDs serving as identifiers corresponding to each of the CPS units.</p>
<p id="p-0135" num="0134">In <figref idref="DRAWINGS">FIG. 3</figref>, title <b>1</b> for example is the CPS unit <b>1</b>, and at the time of decrypting encrypted content belonging to the CPS unit <b>1</b>, generating the title key Kt<b>1</b> and performing decryption processing based on the generated title key Kt<b>1</b> is necessary.</p>
<p id="p-0136" num="0135">In this way, the content stored in the information recording medium <b>100</b> is stored in a manner having been subjected to encryption processing with different encryption keys appropriated to each of the units, in order to realize usage control different for each of the units. UR (usage rules) for each of the content managing units (CPS unit) are set for individual usage management with regard to each of the content managing units (CPS unit). Usage rules are information including, e.g., copy/reproduction control information (CCI) of content, as described above, and is copy restriction information or reproduction restriction information of the encrypted content contained in each of the content managing units (CPS units).</p>
<p id="p-0137" num="0136">Data processing applying various types of information stored in the information recording medium is necessary for generating a title key. Specific examples of such processing will be described later in detail.</p>
<p id="h-0008" num="0000">3. Stored-Data Control Configuration of an Information Recording Medium</p>
<p id="p-0138" num="0137">Next, description will be made regarding the stored-data control configuration of an information recording medium. In the event of storing content having a hierarchical structure, which has been described with reference to <figref idref="DRAWINGS">FIG. 2</figref>, in an information recording medium, various types of data, or a program such as content codes or the like, is recorded as an individual file. The directory configuration corresponding to each data to be stored in the information recording medium will be described with reference to <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0139" num="0138">(A) The index <b>210</b> in <figref idref="DRAWINGS">FIG. 2</figref> is an index.bdmv file within the directory shown in <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0140" num="0139">(B) The movie object <b>220</b> in <figref idref="DRAWINGS">FIG. 2</figref> is an MovieObject.bdmv file within the directory shown in <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0141" num="0140">(C) The playlist <b>230</b> in <figref idref="DRAWINGS">FIG. 2</figref> is a file under the directory PLAYLIST within the directory shown in <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0142" num="0141">(D) The clip <b>240</b> in <figref idref="DRAWINGS">FIG. 2</figref> corresponds to a pair of a file under the directory CLIPINF within the directory shown in <figref idref="DRAWINGS">FIG. 4</figref>, and a file having the same file number under the directory STREAM.</p>
<p id="p-0143" num="0142">(E) The others, such as an AUXDATA file storing voice data or font data, a META file storing meta data, a BDOJ file storing a BD-J object, and the like are stored in an information recording medium.</p>
<p id="p-0144" num="0143">The content to be stored in the information recording medium is, as described above, set as broken data wherein a part of the configuration data of the content is replaced with data different from the correct content data, so decryption processing alone does not reproduce the correct content, and processing for replacing the broken data with data (transformation data) registered in a fix-up table is necessary to perform reproduction. The content codes <b>105</b> stored in the information recording medium is applied to this replacement processing, and data transformation processing is executed using the data registered in the fix-up table <b>106</b>.</p>
<p id="p-0145" num="0144">The content code including this fix-up table is also stored in the information recording medium as an individual file. The directory configuration in which the content codes are set is shown in <figref idref="DRAWINGS">FIG. 5</figref>. <figref idref="DRAWINGS">FIG. 5</figref> is, for example, a directory configuration of the content codes to be created as to an AV content having the directory configuration in <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0146" num="0145">Content codes include the fix-up table as described above, and also include information or a program for executing various types of processing such as startup processing, security check processing, or the like as well as the data transformation processing program to which the fix-up table is applied. If these content codes are roughly divided into the following categories,</p>
<p id="p-0147" num="0146">(a) All contents and all players (device or reproduction application) common content codes</p>
<p id="p-0148" num="0147">(b) Content-unique content codes</p>
<p id="p-0149" num="0148">(c) Player (device or reproduction application)-unique content codes</p>
<p id="p-0150" num="0149">(d) Content and player (device or reproduction application)-unique content codes</p>
<p id="p-0151" num="0150">each of content codes differ in the production entity and presentation entity thereof. Accordingly, these content codes having different categories are preferably set as an individual file from the perspective of, for example, recycling of files and the like.</p>
<p id="p-0152" num="0151">The content code files [00000.svm] through [00003.svm] shown in <figref idref="DRAWINGS">FIG. 5</figref> indicate individual content code files having different categories which were generated with these different entities. Note that a subsequent stage will explain a specific example of content code files in detail.</p>
<p id="p-0153" num="0152">As shown in <figref idref="DRAWINGS">FIG. 5</figref>, the content codes are set in the BDSVM directory as multiple individual files, and further backup data serving as copy data is set in the BACKUP directory.</p>
<p id="h-0009" num="0000">4. Overview of Data Configuration of Content Including Modified Data, and Data Transformation Processing</p>
<p id="p-0154" num="0153">Next, description will be made regarding the overview of data configuration of content including modified data, and data transformation processing. As described above, encrypted content <b>101</b> included in the information recording medium <b>100</b> is set as broken data wherein part of the configuration data is replaced with data different from the proper content data, so that decryption processing alone does not perform content reproduction at the time of reproduction, and processing for replacing the broken data with the transformation data registered in the fix-up table is necessary.</p>
<p id="p-0155" num="0154">The configuration of content stored in the information recording medium, and the overview of reproduction processing, will be described with reference to <figref idref="DRAWINGS">FIG. 6</figref>. For example, AV (Audio Visual) content such as a movie is stored in the information recording medium <b>100</b>. These contents are subjected to encryption, and content reproduction is possible following decryption by processing applying an encryption key obtainable only by a reproduction and device having a certain license. Specific content reproduction processing will be described later. The content stored in the information recording medium <b>100</b> is not only encrypted, but also has a configuration wherein the content configuration data has been replaced with modified data.</p>
<p id="p-0156" num="0155"><figref idref="DRAWINGS">FIG. 6</figref> illustrates the configuration example of a recording content <b>291</b> stored in the information recording medium <b>100</b>. The recording content <b>291</b> is configured of normal content data <b>292</b> which has not been modified, and broken data <b>293</b> which is content that has been destroyed by being modified. The broken data <b>293</b> is data which has been destroyed by the original content having been subjected to data processing. Accordingly, proper content reproduction cannot be performed with this content <b>291</b> including the broken data.</p>
<p id="p-0157" num="0156">In order to perform content reproduction, processing for replacing the broken data <b>293</b> included in the recorded content <b>291</b> with a proper content data, to generate reproduction content <b>296</b>, is necessary. Data for transforming (transformation data) which is the normal content data corresponding to each of the broken data regions is obtained by obtaining the transformation data from the fix-up entry <b>295</b> registered in the fix-up table (FUT) <b>106</b> (see <figref idref="DRAWINGS">FIG. 1</figref>) within the content codes <b>105</b> recorded in the information recording medium <b>100</b>, executing processing for replacing with the data of the broken data region, thereby generating and reproducing the reproduction content <b>296</b>.</p>
<p id="p-0158" num="0157">Now, at the time of generating reproduction content <b>296</b>, in addition to the processing for replacing the broken data <b>293</b> with transformation data <b>297</b> which is normal content data, processing is performed for replacing a partial region of the recorded content <b>291</b> with identifier-set transformation data <b>298</b> including data enabling analysis of the configuration bits of identification information making a content reproduction device or content reproduction application identifiable (e.g., a player ID). For example, in a case of unauthorized copied content leaking out, analyzing the identifier-set transformation data <b>298</b> within the leaked content can enable the source of leakage of the unauthorized content to be determined.</p>
<p id="p-0159" num="0158">Note that an arrangement may be made wherein the fix-up entries serving as the configuration data in the fix-up table including the transformation data are redundantly recorded in a manner scattered throughout certain packets in the configuration data of the content. That is to say, the transformation data is stored in the fix-up table <b>106</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>, and is also scattered and recorded in the encrypted content <b>101</b>, so as to be recorded in duplicate. An information processing device for executing content reproduction either obtains transformation data stored in the fix-up table <b>106</b> to execute data replacement, or obtains a fix-up entry recorded in a scattered manner through the content, to execute data replacement.</p>
<p id="p-0160" num="0159">Description will be made regarding a configuration example of encrypted contents <b>300</b>, and content codes <b>302</b> including a data transformation processing execution program and a fix-up table, which are stored in the information recording medium <b>100</b> with reference to <figref idref="DRAWINGS">FIG. 7</figref>. Content codes <b>302</b>-<b>0</b> through <b>302</b>-<i>n </i>recorded in the information recording medium <b>100</b> are recorded in the information recording medium as independent file data corresponding to each content or each clip, for example. The example shown in the drawing illustrates an example wherein n+1 sets of content codes <b>302</b>-<b>0</b> through <b>302</b>-<i>n </i>were recorded in the information recording medium <b>100</b>.</p>
<p id="p-0161" num="0160">The respective content codes <b>302</b>-<b>0</b> through <b>302</b>-<i>n </i>include fix-up tables <b>303</b>-<b>0</b> through <b>303</b>-<i>n </i>respectively. Transformation data which is actually used as replacement data of content, and fix-up entries <b>304</b>-<b>0</b> through <b>304</b>-<i>n </i>each of which sets the recording position information thereof are recorded in each of the fix-up tables <b>303</b>-<b>0</b> through <b>303</b>-<i>n</i>. Note that although the example shown in the drawing illustrates all with the application of the variable number [n] as the encrypted contents <b>300</b>-<b>0</b> through <b>300</b>-<i>n</i>, the content codes <b>302</b>-<b>0</b> through <b>302</b>-<i>n</i>, and the fix-up tables <b>303</b>-<b>0</b> through <b>303</b>-<i>n</i>, the set number of the encrypted content <b>300</b> and the content code <b>302</b> does not need to be the same. For example, an arrangement may be made wherein all of the fix-up tables corresponding to the encrypted contents 0 through n are recorded in the content codes <b>302</b>-<b>0</b>. Thus, encrypted content and content codes do not necessarily correspond one on one.</p>
<p id="p-0162" num="0161">Each of the fix-up entries include transformation data to be applied as a replacement data, and recorded position information of the transformation data. Description will be made regarding the data configuration of a fix-up entry to be recorded in the fix-up table with reference to <figref idref="DRAWINGS">FIG. 8</figref>.</p>
<p id="p-0163" num="0162"><figref idref="DRAWINGS">FIG. 8</figref> illustrates a data configuration example of one fix-up entry (FixUpEntry) included in a fix-up table block. As shown in <figref idref="DRAWINGS">FIG. 8</figref>, a fix-up entry (FixUpEntry) contains the following data.</p>
<p id="p-0164" num="0163">type_indicator: Type identifier [00: no transformation, 01b: processing with transformed data, 10b, 11b: processing with transformed data including identification mark]</p>
<p id="p-0165" num="0164">FM_ID_bit_position: Identification bit position of player ID corresponding to identifier-set transformation data</p>
<p id="p-0166" num="0165">relative_SPN: Position of packet where transformation data is to be applied (number of packets from PMT packet)</p>
<p id="p-0167" num="0166">byte_position: position where transformation data is recorded in the packet</p>
<p id="p-0168" num="0167">overwrite_value: Transformation data (also including identifier-set transformation data)</p>
<p id="p-0169" num="0168">relative_SPN<sub>&#x2014;</sub>2: Position of packet where second transformation data is applied (number of packets from PMT packet)</p>
<p id="p-0170" num="0169">byte_position<sub>&#x2014;</sub>2: Position where transformed data is recorded in the packet (corresponding to second transformation data)</p>
<p id="p-0171" num="0170">overwrite_value<sub>&#x2014;</sub>2: Second transformation data (also including identifier-set transformation data)</p>
<p id="p-0172" num="0171">Configuration is made of this data.</p>
<p id="p-0173" num="0172">A fix-up entry is set as the data recording transformation data for replacing with a part of the content data, and setting position information of the transformation data as to the content, with this fix-up entry being read from the fix-up table to execute the content codes serving as a transformation processing program including content configuration data replacement processing execution commands, thereby performing data transformation.</p>
<p id="p-0174" num="0173">The information [type_indicator] included in the fix-up entry (FixUpEntry) information shown in <figref idref="DRAWINGS">FIG. 8</figref> is a type identifier for identifying whether registration information of the fix-up table is (a) or is (b) as follows, i.e.:</p>
<p id="p-0175" num="0174">(a) whether registration information relating to transformation data for transforming broken data into proper content data, or</p>
<p id="p-0176" num="0175">(b) registration information relating to identifier-set transformation data for embedding identification information of the reproduction device or content reproduction application.</p>
<p id="p-0177" num="0176">The registration information [FM_ID_bit_position] is position information of a bit to be referred to from the identification information of the reproduction device or reproduction application made up of multiple bits, in order to determine the manner of processing. The manner of processing is determined for data transformation such that, for example, in the event that the bit value is 1 for the bit to be referred to from the identification information of the reproduction device or reproduction application made up of multiple bits, replacement of content configuration data is executed by the identifier-set transformation data registered in the fix-up table, and in the event that a bit value is 0 for the bit to be referred to, replacement is not executed.</p>
<p id="p-0178" num="0177">Note that an arrangement may be made wherein transformation is executed in the event that the reference is 0 and transformation is not executed in the event that this is 1. Or, a configuration may be made wherein the transformation data in the case that the reference bit is 0 and the transformation data indicates that this is 1, are set as separate transformation data, and the transformation data is selected and set as suitable according to the bit value of the reference bit.</p>
<p id="p-0179" num="0178">As shown in <figref idref="DRAWINGS">FIG. 7</figref>, the fix-up entries <b>301</b>-<b>0</b> through <b>301</b>-<i>n </i>are also distributed and recorded in each of the encrypted contents <b>300</b>-<b>0</b> through <b>300</b>-<i>n</i>. The encrypted content <b>300</b> is set as a TS packet stream, and packets with fix-up entries stored scattered throughout a part thereof, i.e., fix-up entry storage packets <b>307</b><i>a </i>through <b>307</b><i>d </i>are set.</p>
<p id="p-0180" num="0179">Nearby transformation data of the each fix-up entry storing packet is recorded in each of the fix-up entries set as such scattered recording data. The fix-up entries recorded scattered throughout the encrypted content <b>300</b> and fix-up entries included in the fix-up table <b>303</b> are the same thing, and the information processing device which executes content reproduction performs one or the other of obtaining transformation data from fix-up entries <b>301</b> recorded scattered through the content and replacing the data, or obtaining transformation data from fix-up entries <b>304</b> in the fix-up table <b>303</b> and replacing the data, depending on the specifications of the reproduction (player) application.</p>
<p id="p-0181" num="0180">As shown in <figref idref="DRAWINGS">FIG. 7</figref>, the content is sectioned into segments of predetermined units of data (SP segments). Fix-up entries that include each transformation data are subjected to computation or encryption processing applying parameters (SP: secret parameters) which differ for each predetermined unit of content (segment units), and stored in the fix-up table <b>303</b>. The fix-up entry stored in a TS packet within the content is recorded by executing computation or encryption processing which applied a different parameter (SP: secret parameter) for every segment in the same way.</p>
<p id="p-0182" num="0181">An information processing device which executes the data transformation processing, which is the data replacing processing executed at the time of reproducing the content, sequentially obtains the secret parameters (SP<b>1</b>, SP<b>2</b>, SP<b>3</b> . . . ), performs computation or encryption processing applying the obtained parameters (SPn) for the fix-up entry corresponding to each segment position, thereby performing processing of obtaining the transformation data.</p>
<p id="p-0183" num="0182">A specific example of data replacement based on transformation data will be described with reference to <figref idref="DRAWINGS">FIGS. 9 and 10</figref>. First, a processing example of executing data replacement by obtaining fix-up table block configuration data including transformation data that has been recorded scattered through the content, will be described with reference to <figref idref="DRAWINGS">FIG. 9</figref>.</p>
<p id="p-0184" num="0183">In <figref idref="DRAWINGS">FIG. 9</figref>, (a) illustrates the configuration of the content recorded in the information recording medium <b>100</b>. The fix-up entries including the transformation data and the recording position information are recorded scattered through the TS packets <b>307</b><i>a </i>through <i>d </i>shown in the drawing.</p>
<p id="p-0185" num="0184">The data replacement processing sequence will be described with reference to (b) in <figref idref="DRAWINGS">FIG. 9</figref>. The processing shown in (b) in <figref idref="DRAWINGS">FIG. 9</figref> is processing for executing a reproduction (player) application of the host. (b) in <figref idref="DRAWINGS">FIG. 9</figref> illustrates a part of the TS packet stream of the content belonging to segment ID=N, N+1, in the content configuration data.</p>
<p id="p-0186" num="0185">For example, the packet <b>311</b> including the fix-up entry recorded in segment ID=N stores an XORed fix-up entry <b>315</b> which is the result data of exclusive-OR computation with the secret parameter (SPx). The host reproduction (player) application which executes the data replacement processing performs exclusive-OR computation with the secret parameter (SPx) <b>316</b> with regard to the XORed fix-up entry <b>315</b>, thereby obtaining the fix-up entry <b>317</b>, and obtains the transformation data and recording position information from the fix-up entry <b>317</b>, to execute the replacement processing for the packets <b>312</b><i>a </i>and <i>b </i>at the data replacement position.</p>
<p id="p-0187" num="0186">The parameter (SPx) applied for the computation to obtain the fix-up entry <b>317</b> is supplied from the secure VM <b>320</b>. For example, the reproduction (player) application obtains a secret parameter ID (SP_ID) serving as secret parameter specification information corresponding to each segment, and outputs a secret parameter calculation request including notification of the secret parameter ID as an interruption (INTRP) request to the secure VM, in order to obtain the secret parameter (SPn) necessary for each segment of the content. The secure VM calculates the secret parameter (SPx) corresponding to the (SP_ID) in response to the secret parameter calculation request from the reproduction (player) application, and provides this to the reproduction (player) application as a response (Call).</p>
<p id="p-0188" num="0187">As shown in <figref idref="DRAWINGS">FIG. 9</figref>, different segments have different parameters for the parameters (SPx) to be applied to the computation for obtaining the fix-up entries. For example, each segment is set to around 10 seconds of content reproduction time, and the reproduction (player) application receives parameters which differs for each segment every 10 seconds from the secure VM, restores the fix-up entry, obtains the transformation data from the restored fix-up entry, and executes the data replacing processing.</p>
<p id="p-0189" num="0188">Next, description will be made with reference to <figref idref="DRAWINGS">FIG. 10</figref>, regarding the overview of processing in the case of performing the data replacement as to content by applying not the fix-up entry distributed and recorded in the content but the fix-up entry <b>304</b> in the fix-up table <b>303</b> of the content code <b>302</b> stored in the information recording medium.</p>
<p id="p-0190" num="0189">As shown in (a) in <figref idref="DRAWINGS">FIG. 10</figref>, as with the description with reference to <figref idref="DRAWINGS">FIG. 9</figref>, the content is sectioned into segments of predetermined units of data. The fix-up entry <b>304</b> that includes the transformation data recorded in the fix-up table <b>303</b> is subjected to computation or encryption processing applying parameters (SP: secret parameters) which differ for each predetermined unit of content (segment units).</p>
<p id="p-0191" num="0190">An information processing device which executes the data transformation processing, which is the data replacing processing executed at the time of reproducing the content, sequentially obtains the secret parameters (SP<b>1</b>, SP<b>2</b>, SP<b>3</b> . . . ), performs computation or encryption processing applying the obtained parameters (SPn) for the fix-up entry including the transformation data corresponding to each segment position, thereby performing processing of obtaining the transformation data.</p>
<p id="p-0192" num="0191">The data replacement sequence will be described with reference to (b) in <figref idref="DRAWINGS">FIG. 10</figref>. The processing shown in (b) in <figref idref="DRAWINGS">FIG. 10</figref> is processing which is executed at the host reproduction (player) application. (b) in <figref idref="DRAWINGS">FIG. 10</figref> illustrates a part of the content TS packet stream belonging to segment ID=N, N+1, in the content configuration data.</p>
<p id="p-0193" num="0192">For example, in the event of executing data replacement regarding the segment ID=N, the fix-up entries <b>304</b> are acquired from the fix-up table <b>303</b>, and then the fix-up entry corresponding to the segment ID=N is selected from the acquired fix-up entries <b>304</b>. However, this fix-up entry x <b>315</b> is recorded in the fix-up table <b>303</b> as an XORed fix-up entry <b>315</b> obtained by calculating an exclusive-OR operation as to a segment-unique secret parameter (SPx) correlated with the segment N.</p>
<p id="p-0194" num="0193">The reproduction (player) application of the host to execute the data replacement processing obtains the fix-up entry <b>317</b> by executing exclusive-OR computation with the secret parameter (SPx) <b>316</b> provided from the secure VM <b>320</b> with regard to the XORed fix-up entry <b>315</b>, obtains the transformation data and recorded position information from the fix-up entry <b>317</b>, and performs the replacement processing with the packets <b>302</b><i>a </i>and <i>b </i>of the data replacement positions.</p>
<p id="p-0195" num="0194">The parameter (SPx) to be applied for the computation for obtaining the fix-up entries <b>317</b> is supplied from the security of the VM <b>320</b> in the same way as the processing example described above. For example, the reproduction (player) application obtains the secret parameter ID (SP_ID) which is secret parameter specification information corresponding to each segment, and outputs a secret parameter calculation request including notification of the secret parameter ID as an interruption (INTRP) request to the secure VM, in order to obtain the secret parameters (SPn) necessary for each segment of the content. Note that the information necessary for acquiring the secret parameter ID (SP_ID) is, for example, stored in the fix-up table <b>303</b>.</p>
<p id="p-0196" num="0195">The secure VM calculates the secret parameter (SPx) corresponding to the SP_ID in response to this secret parameter calculation request from the reproduction (player) application, and provides this to the reproduction (player) application as a response (Call).</p>
<p id="p-0197" num="0196">As shown in <figref idref="DRAWINGS">FIG. 10</figref>, different segments have different parameters for the parameters (SPx) to be applied to the computation for obtaining the fix-up entries. For example, each segment is set to around 10 seconds of content reproduction time, and the reproduction (player) application receives parameters which differs for each segment every 10 seconds from the secure VM, restores the fix-up entry, obtains the transformation data from the restored fix-up entry, and executes the data replacement processing.</p>
<p id="p-0198" num="0197">Thus, the reproduction (player) application for executing content reproduction receives secret parameters from the secure VM and in units of each segment, executes computation, executes restoration of fix-up entries which are the configuration data of the six-up table block, and obtains the restored fix-up entries and performs data replacement. Note that while the above-described processing example has been made illustrating a case of using exclusive-OR (XOR) as the computation applying the secret parameters, other competition processing may be applied as well. Also, an arrangement may be made wherein encryption processing or the like is executed applying secret parameters.</p>
<p id="h-0010" num="0000">5. Processing of Reproduction (Player) Application and Secure VM</p>
<p id="p-0199" num="0198">In the case of executing the above-described processing, the reproduction (player) application sequentially obtains different secret parameters (SP<b>1</b>, SP<b>2</b>, SP<b>3</b> . . . ) in certain segment units, while carrying out content reproduction, meaning that it becomes necessary for secret parameters to be obtained with regard to the secure VM and data replacement is performed each time the reproduction segment switches.</p>
<p id="p-0200" num="0199">In the case of executing the acquisition processing of this secret parameter (SP), the reproduction (player) application notifies the secure VM of the secret parameter ID (SP_ID) as secret parameter specification information, thereby determining the necessary SP. The information for acquiring this secret parameter ID (SP_ID) is, for example, recorded in the fix-up table, and the reproduction (player) application acquires the secret parameter ID (SP_ID) corresponding to a segment based on the information recorded in the fix-up table.</p>
<p id="p-0201" num="0200">The reproduction (player) application transmits and receives a data-processing request and response as to the secure VM in acquisition processing of this secret parameter (SP) and so forth. The series of processing sequences carried out by the reproduction application and secure VM will be described with reference to <figref idref="DRAWINGS">FIG. 11</figref>.</p>
<p id="p-0202" num="0201">As described earlier with reference to <figref idref="DRAWINGS">FIG. 1</figref>, transfer of information or processing requests between the reproduction (player) application <b>150</b> and secure VM <b>160</b> is carried out by a sequence of interruptions (INTRP) from the reproduction (player) application <b>150</b> to the secure VM <b>160</b>, and responses (Call) processing this from the secure VM <b>160</b> to the reproduction (player) application <b>150</b>.</p>
<p id="p-0203" num="0202">The processing sequence shown in <figref idref="DRAWINGS">FIG. 11</figref> is a diagram illustrating the types of processing executed between the reproduction (player) application <b>150</b> and the secure VM <b>160</b> from the point of inserting the information recording medium storing content, to ejecting thereof.</p>
<p id="p-0204" num="0203">For example, step S<b>11</b> is processing for media initialization (Media Initialize) which is executed as processing at the time of inserting an information recording medium (Disc), wherein the reproduction (player) application <b>150</b> loads a content code file (Content Code File) storing code information necessary for the initial reproduction processing into its memory, and starts execution. The content code file (Content Code File) determines the manufacturer, model, and so forth of the reproduction (player) application.</p>
<p id="p-0205" num="0204">For example, the secure VM <b>160</b> determines whether or not the obtained model is a model regarding which a security problem has occurred in the past, and in the event that this is a model regarding which a security problem has occurred in the past, a check is made by executing the content code (Content Code) regarding whether or not a similar security problem has occurred. For example, certain values in the RAM of the information processing device, or operations of a certain device are checked, inspecting whether or not they are in a correct state. Note that a check program for each model may not be included in that initially-loaded content code file, and in this case another necessary content code file is accessed. Upon completion of the initialization processing by the secure VM <b>160</b>, a response (Call) is notified to the reproduction application <b>150</b>, and the flow proceeds to the next step S<b>12</b>.</p>
<p id="p-0206" num="0205">In step S<b>12</b>, title initialization processing (Title Initialize) is executed. The title is applied it as specified information of the content to be reproduced, a title corresponding to certain content to be reproduced is selected based on user specifications or the like, and a title initialization processing request is output from the reproduction (player) application <b>150</b> to the secure VM <b>160</b>, along with title information.</p>
<p id="p-0207" num="0206">The secure VM <b>160</b> generates a fix-up table on the memory of the secure VM <b>160</b> by collecting transformation data information corresponding to all clips necessary for reproducing the title, and notifies the reproduction (player) application <b>150</b> of the position in the memory where the table has been stored, such that the reproduction (player) application <b>150</b> can obtain the table. Note also that a security check the same as that for the media initialization in step S<b>11</b> can be performed during title initialization.</p>
<p id="p-0208" num="0207">An example of processing for generating a fix-up table on the memory of the secure VM <b>160</b> by collecting transformation data corresponding to all clips necessary for reproducing the title, which is executed during the title initialization processing, will be described with reference to <figref idref="DRAWINGS">FIG. 12</figref>. <figref idref="DRAWINGS">FIG. 12</figref> illustrates a memory region (e.g., 2 MB) which the secure VM <b>160</b> can use. The content code which is code information including the data transformation processing program which the secure VM <b>160</b> has obtained from the information recording medium is stored here. Note that this content code includes a fix-up table subjected to obfuscation processing such as encryption or the like. Further, one example of the data transformation processing program is for deriving a key (SP: secret parameter) for changing a fix-up table subjected to obfuscation processing into normal text. In other words, a program acquiring a fix-up table and using the position information (relative packet number) and overwrite information (overwrite_value) thereof can be maintained by the reproduction device (reproduction application) rather than the information recording medium.</p>
<p id="p-0209" num="0208">Upon input of the title initialization request from the reproduction (player) application <b>150</b>, the secure VM <b>160</b> performs decryption processing of the fix-up table collecting transformation data information corresponding to all clips necessary for reproducing the title, from the content code as necessary, stores this in memory in a state subjected to processing such as the above-described XORed state (masked state), and notifies this memory storage position to the reproduction (player) application <b>150</b>. This notification processing is executed as a response (Call) to the title initialization request (INTRP) from the reproduction (player) application <b>150</b>.</p>
<p id="p-0210" num="0209">Upon receiving a response (Call) from the secure VM <b>160</b> regarding the title initialization request (INTRP), the reproduction (player) application <b>150</b> copies and stores a necessary data portion from the fix-up table storing region in the memory region which the secure VM <b>160</b> uses, to a memory region which the reproduction (player) application <b>150</b> can use. For example, a secret parameter ID (SP_ID) determining table for obtaining a secret parameter ID (SP_ID) corresponding to a segment of the content, described earlier with reference to <figref idref="DRAWINGS">FIGS. 6 through 9</figref>, is extracted and copied and stored in the memory region which the reproduction (player) application <b>150</b> can use.</p>
<p id="p-0211" num="0210">The reproduction (player) application <b>150</b> stores all the information necessary for content transformation processing, and reproduction processing, such as the configuration data of the fix-up table storing fix-up entries, information for specifying the secret parameter ID (SP_ID) corresponding to a segment included in the fix-up table, and the like, in the memory region which the reproduction (player) application <b>150</b> can use at this copy processing.</p>
<p id="p-0212" num="0211">Returning to <figref idref="DRAWINGS">FIG. 11</figref>, description will be continued regarding the processing sequences between the reproduction (player) application <b>150</b> and secure VM <b>160</b>. Step S<b>13</b> is processing corresponding to the secret parameter (SP) calculation (Compute_SP) wherein the reproduction (player) application <b>150</b> outputs a SP calculation request (INTRP) to the secure VM <b>160</b>, and the secure VM <b>160</b> returns the calculation results (SP) to the reproduction (player) application <b>150</b> as a response (Call). The reproduction (player) application <b>150</b>, in the event of outputting the SP calculation request (INTRP) to the secure VM <b>160</b>, and gives notification of the SP_ID serving as SP specification information.</p>
<p id="p-0213" num="0212">The processing in step S<b>14</b> is a request processing from the reproduction (player) application <b>150</b> to the secure VM <b>160</b>, for other than the secret parameter calculation. For example, in the event that this is request processing for execution of a security check, the secure VM <b>160</b> executes the processing according to the request, and makes notification to the reproduction (player) application <b>150</b> regarding the processing results as a response (Call). Note that a register regarding which both the reproduction (player) application <b>150</b> and the secure VM <b>160</b> is capable of writing to and reading from is used for this information transfer, such as a player status register, register (PSR), for example.</p>
<p id="p-0214" num="0213">The processing in step S<b>15</b> is media finalizing (Media Finalize) processing at the time of ejecting the information recording medium (Disc), with the content code (content code) processing status being recorded in nonvolatile memory. This processing enables past security check information to continue to be used the next time the disk is inserted.</p>
<p id="p-0215" num="0214">As described above, transfer of information, or processing requests and responses between the reproduction (player) application <b>150</b> and the secure VM <b>160</b> is carried out by interruption (INTRP) from the reproduction (player) application <b>150</b> to the secure VM <b>160</b>, and response (Call) processing from the secure VM <b>160</b> to the reproduction (player) application <b>150</b>.</p>
<p id="h-0011" num="0000">6. Content Reproduction Processing</p>
<p id="p-0216" num="0215">Next, content reproduction processing which the host executes will be described with reference to <figref idref="DRAWINGS">FIG. 13</figref>. <figref idref="DRAWINGS">FIG. 13</figref> illustrates, from the left, an information recording medium <b>330</b> storing encrypted contents, a drive <b>340</b> into which the information recording medium <b>330</b> is set so as to execute data reading, and a host <b>345</b> which is connected with the drive so as to be capable of data communication, and which obtains the content stored in the information recording medium <b>330</b> by the drive <b>340</b> and executes a reproduction application which executes reproduction processing thereof.</p>
<p id="p-0217" num="0216">Note that the host <b>345</b> shown in <figref idref="DRAWINGS">FIG. 13</figref> is shown sectioned into a reproduction (player) application block <b>350</b> which executes processing such as content decryption, decoding, data transformation, and so forth, and the secure VM <b>360</b> block having a secure VM <b>360</b> which executes secret parameter (SP) calculation processing and so forth.</p>
<p id="p-0218" num="0217">Content code <b>334</b> including an MKB (Media Key Block) <b>331</b>, a title key file <b>332</b>, encrypted content <b>333</b>, and a transformation processing program, is distributed and recorded in the information recording medium <b>330</b>, the encrypted content <b>333</b> includes fix-up entries <b>335</b>, and the content code includes the fix-up table including the same fix-up entries. The host <b>345</b> holds the device key <b>351</b> to be applied to the MKB processing.</p>
<p id="p-0219" num="0218">The processing sequence wherein the host <b>345</b> shown in <figref idref="DRAWINGS">FIG. 13</figref> obtains and reproduces the stored content within the information recording medium <b>330</b> via the drive <b>340</b> will be described. First, before reading out the stored content in the information recording medium <b>330</b>, the host <b>345</b> and drive <b>340</b> execute mutual authentication in step S<b>101</b>. This mutual authentication is processing for confirming that the host and drive are each authorized devices or application software. Various types of processing can be applied to this mutual authentication processing sequence. As a result of the mutual authentication processing, the drive <b>340</b> and host <b>345</b> share a session key (Ks) serving as a shared secret key.</p>
<p id="p-0220" num="0219">In step S<b>101</b>, following mutual authentication being executed between host and drive, and the session key (Ks) shared, the reproduction (player) application <b>350</b> of the host <b>345</b> obtains the MKB <b>331</b> recorded in the information recording begins <b>330</b> by the drive in step S<b>102</b>, executes processing of the MKB <b>331</b> applying the device key <b>351</b> stored in memory, and obtains the media key (Km) from the MKB.</p>
<p id="p-0221" num="0220">As described above, the MKB (Medium Key Block) <b>331</b> is an encryption key block generated based on a tree structure key distribution system known as a type of broadcast encryption method, and is the key information block enabling obtaining of a media key (Km) which is a key necessary for content decryption, only by processing (decryption) based on the device key (Kd) stored in a device which has a valid license.</p>
<p id="p-0222" num="0221">Next, in step S<b>103</b>, the media key (Km) obtained by the MKB processing in step S<b>102</b> is applied to execute decryption of the title key file <b>332</b> read from the information recording medium <b>330</b>, thereby obtaining the title key (Kt). The title key file <b>332</b> stored in the information recording medium <b>330</b> is a file including data encrypted by the media key, and the title key (Kt) used for decryption of content can be obtained by processing applying the media key. Note that the decryption processing in step S<b>103</b> applies an AES encryption algorithm, for example.</p>
<p id="p-0223" num="0222">Next, the reproduction (player) application <b>350</b> of the host <b>345</b> reads out the encrypted content <b>333</b> stored in the information recording medium <b>330</b> via the drive <b>340</b>, stores the read out content in the track buffer <b>352</b>, executes decryption processing applying the title key (Kt) in step S<b>104</b> for the contents stored in the buffer, and obtains the decrypted content.</p>
<p id="p-0224" num="0223">The decrypted content is stored in a plaintext TS buffer <b>353</b>. (Plain TS) means a decrypted plaintext transport stream. Now, the decrypted content stored in the plaintext TS buffer <b>353</b> is content containing the above-described broken data, which cannot be reproduced as it is, and there is the need to perform predetermined data transformation (data replacement by overwriting).</p>
<p id="p-0225" num="0224">The processing example shown in <figref idref="DRAWINGS">FIG. 13</figref> is a processing example where fix-up entries recorded scattered in certain packets within the configuration data of the encrypted content are obtained, transformation data is extracted therefrom, and data replacement is performed. That is to say, this is equivalent to the data transformation processing described with reference to <figref idref="DRAWINGS">FIG. 9</figref> earlier.</p>
<p id="p-0226" num="0225">The fix-up entries divided and recorded in the content is data recording the transformation data (or identifier-set transformation data) for performing replacement processing regarding the decrypted content, and the recorded position where the transformation data is recorded.</p>
<p id="p-0227" num="0226">The secure VM <b>361</b> reads out the content code <b>334</b> including the data transformation processing program which includes the command code information from the information recording medium <b>330</b>, and intermittently generates and outputs secret parameters (SP<b>1</b>, SP<b>2</b>, SP<b>3</b> . . . ) necessary for changing the fix-up table recorded in the information recording media <b>330</b> along with the content into a plaintext fix-up table, during contents reproduction or before output processing and during processing, based on control from an event handler <b>354</b>, and input of player information <b>355</b>. This processing is performed intermittently.</p>
<p id="p-0228" num="0227">The secret parameters (SP<b>1</b>, SP<b>2</b>, SP<b>3</b> . . . ) are, as described above, computation for encryption processing parameters which switch over for segments corresponding to predetermined content data units, and specifically are, for example, exclusive-OR (XOR) operation parameters. The secure VM <b>361</b> executes processing for intermittently generating and outputting parameters (SP<b>1</b>, SP<b>2</b>, SP<b>3</b> . . . ) necessary for restoring the fix-up entries which are the configuration data of the fix-up table block modified by computation processing of encryption processing, based on requests from the reproduction (player) application.</p>
<p id="p-0229" num="0228">At the reproduction (player) application <b>350</b>, in step S<b>104</b>, decryption of the encrypted content <b>333</b> including fix-up entries is executed, the fix-up entries which are configuration data of the fix-up table recorded in the content are separated by processing of a demultiplexer in step S<b>105</b>, and table restoration and data transformation processing is executed in step S<b>106</b> under control of the real-time event handler <b>356</b>. Due to the control of the real-time event handler <b>356</b>, the reproduction (player) application <b>350</b> outputs a secret parameter calculation request corresponding to switching over of segments as an interruption (INTRP) to the secure VM <b>361</b>, receives secure parameters (SP<b>1</b>, SP<b>2</b>, SP<b>3</b> . . . ) from the secure VM <b>361</b>, executes decryption or computation of the fix-up table block to obtain the plaintext fix-up table block, and obtains fix-up entries contained in the obtained fix-up table block.</p>
<p id="p-0230" num="0229">Fix-up entries record transformation data, i.e.,</p>
<p id="h-0012" num="0000">(a) transformation data</p>
<p id="h-0013" num="0000">(b) identifier-set transformation data</p>
<p id="p-0231" num="0230">and recording position specifying information in the content of the above transformation data, with the reproduction (player) application <b>350</b> executing data transformation processing for writing to the specified position in step S<b>106</b> as real-time processing in parallel with content reproduction processing or external output processing.</p>
<p id="p-0232" num="0231">For example, in the event that the parameters (SP<b>1</b>, SP<b>2</b>, SP<b>3</b> . . . ) are exclusive-OR (XOR) operation parameters with the fix-up entry corresponding to a segment serving as the units of predetermined content portion data, the restoration processing in step S<b>106</b> is as follows:</p>
<p id="h-0014" num="0000">[Fix-up entry <b>1</b>] (XOR) [SP<b>1</b>]</p>
<p id="h-0015" num="0000">[Fix-up entry <b>2</b>] (XOR) [SP<b>2</b>]</p>
<p id="h-0016" num="0000">[Fix-up entry <b>3</b>] (XOR) [SP<b>3</b>]</p>
<p id="p-0233" num="0232">and so on.</p>
<p id="p-0234" num="0233">Exclusive-OR operation processing thereof is executed, thereby obtaining fix-up entries included in the fix-up table block data. Note that in the above expressions, [A] (XOR) [B] means an exclusive-OR operation of A and B.</p>
<p id="p-0235" num="0234">Thus, the fix-up entries included in the content <b>333</b> recorded in the information recording medium are stored by calculating an exclusive-OR operation with the secret parameters (SP<b>1</b>, SP<b>2</b>, SP<b>3</b>, and so on). These parameters are continuously obtained and output by the secure VM <b>361</b>.</p>
<p id="p-0236" num="0235">In the table restoration and data transformation processing in step S<b>106</b>, the transformation data is obtained from fix-up entries restored by obtaining with computation or encryption processing applying the secret parameters (SP<b>1</b>, SP<b>2</b>, SP<b>3</b> . . . ), the broken data included in the content is replaced with transformation data which is the proper content configuration data, and further, data overwriting processing wherein identifier-set transformation data is replaced with a part of the data of the content is executed, thereby changing the stored data in the plaintext TS buffer <b>353</b> into transformed data. The overview of this data transformation processing will be described with reference to <figref idref="DRAWINGS">FIG. 14</figref>.</p>
<p id="p-0237" num="0236">The encrypted content <b>333</b> stored in the information recording medium is temporarily stored in a track buffer <b>352</b> at the host side. This is the track buffer stored data <b>401</b> shown in FIG. <b>14</b>(<b>1</b>). Decryption of the encrypted content which is the track buffer stored data <b>401</b> is executed by the host-side decryption processing, and the decryption result data is stored in the plaintext TS buffer <b>353</b>. This is the decryption result data <b>402</b> shown in FIG. <b>14</b>(<b>2</b>).</p>
<p id="p-0238" num="0237">The decryption result data <b>402</b> includes broken data <b>403</b> which is not the proper content configuration data. The data transformation processing unit of the host executes processing for replacing this broken data <b>403</b> with the transformation data <b>404</b> which is the correct content configuration data. This replacing processing is executed as re-writing (overwriting) of a part of data, regarding data written to the plaintext TS buffer <b>353</b>, for example.</p>
<p id="p-0239" num="0238">Further, the data transformation processing which the host executes is not only processing for replacing the broken data with transformation data which is the normal content data, but also processing is executed for replacing a part of the configuration data in the decryption result data <b>402</b> with identifier-set transformation data <b>405</b>, as shown in <figref idref="DRAWINGS">FIG. 14</figref>.</p>
<p id="p-0240" num="0239">An identifier is data which enables configuration bits of identification information making a content reproducing device or content reproducing application identifiable, as described above. A specific example is the configuration data of identification information (player ID) of an information processing device serving as a player for executing a host application, or an identification mark generated based on the player ID. Identifier-set transformation data is data wherein bit values of the correct content data have been slightly changed within a level that does not affect reproduction of the content, as described above.</p>
<p id="p-0241" num="0240">A great number of identifier-set transformation data <b>405</b> are set within the content, and collecting and analyzing the multiple sets of identifier-set transformation data <b>405</b> determines the player ID, for example. Identifier-set transformation data <b>405</b> is data wherein the configuration bits of the normal content data have been changed within a level wherein normal reproduction can be made as content, and this data wherein bit (identification mark configuration bit) determining is enabled by MPEG bit stream analysis.</p>
<p id="p-0242" num="0241">A great number of the transformation data <b>404</b> and identifier-set transformation data <b>405</b> shown in <figref idref="DRAWINGS">FIG. 14</figref> is registered in the fix-up table stored in the information recording medium, and further, registration is made regarding the write position information of these. Executing data transformation processing based on the fix-up tables stored information replaces the data stored in the plaintext TS buffer <b>353</b> with the transformed data <b>406</b> shown in FIG. <b>14</b>(<b>3</b>).</p>
<p id="p-0243" num="0242">Subsequently, the transformed TS (Transport stream) is externally output via a network or the like, and is reproduced as an external reproducing apparatus. Or, transformation from a transport stream (TS) to an elementary stream (ES) is executed in step S<b>107</b> by processing by a demultiplexer, and further, following decoding processing (step S<b>108</b>), this is reproduced via a display speaker.</p>
<p id="h-0017" num="0000">7. Content Code Management Configuration</p>
<p id="p-0244" num="0243">As described above, with reproduction of the content recorded in the information recording medium, it is necessary to perform processing by reading out content codes from the information recording medium, applying the fix-up table included in the content codes, and applying the transformation processing program included in the content codes. The content codes further include a program or information to be applied for executing startup processing, security check processing, and the like, and the content codes are acquired and executed at the time of content use.</p>
<p id="p-0245" num="0244">The execution processing of content codes is principally performed by the secure VM which is set by the information processing device for executing reproduction of content. The secure VM serves as a data processing unit for executing content codes, which acquires the content codes including a program or application information to be adapted to use of the encrypted content recorded in the information recording medium, and executes data processing in accordance with the acquired content codes.</p>
<p id="p-0246" num="0245">Content codes are set as a file independent from the content, and are recorded in an information recording medium. Accordingly, it becomes possible to perform processing for moving content code alone to another information recording medium, or processing for copying the content code alone. Upon leakage of content codes occurring, circulating in an unauthorized manner, and unauthorized utilization being performed, there is the possibility that many contents will be reproduced in an unauthorized manner and used, causing serious damage. Hereinafter, description will be made regarding a configuration for preventing such unauthorized usage of content codes.</p>
<p id="p-0247" num="0246">Description will be made regarding the data types included in content codes <b>500</b> to be recorded in an information recording medium with reference to <figref idref="DRAWINGS">FIG. 15</figref>. As described above, a program and a fix-up table to be applied to the data transformation processing of content are recorded in the content codes <b>500</b>. For example, the fix-up table is data including transformation data serving as the replacement data of the configuration data of each content, and needs to be content-unique data, but for example, the transformation processing program or the like is the data which each content can be set as common code information.</p>
<p id="p-0248" num="0247">Content codes also include information or a program which is set for corresponding to an information processing device for executing content reproduction processing, or a reproduction (player) application to be executed in an information processing device. For example, in the event of using content codes in multiple different manufacturer's information processing devices or reproduction applications, multiple codes corresponding to the respective devices or applications are recorded in the content codes, and each player (device or reproduction application) performs processing by selecting the codes corresponding to its own player (device or reproduction application) from player (device or reproduction application)-unique codes included in the content codes.</p>
<p id="p-0249" num="0248">Thus, various types of data are included in the content codes <b>500</b>. Roughly classifying this data yields four classifications, as shown in <figref idref="DRAWINGS">FIG. 15</figref>. That is to say,</p>
<p id="p-0250" num="0249">(a) All contents and all players (device or reproduction application) common data <b>501</b></p>
<p id="p-0251" num="0250">(b) Content-unique data <b>502</b></p>
<p id="p-0252" num="0251">(c) Player (device or reproduction application)-unique data <b>503</b></p>
<p id="p-0253" num="0252">(d) Content and player (device or reproduction application)-unique data <b>504</b></p>
<p id="p-0254" num="0253">Hereinafter, description will be made regarding the specific data content of each data.</p>
<p id="p-0255" num="0254">(a) All Contents and all Players (Device or Reproduction Application) Common Data <b>501</b></p>
<p id="p-0256" num="0255">All contents and all players (device or reproduction application) common data <b>501</b> is a data portion including information or a program which all of the information processing devices or reproduction applications can use commonly, and specifically, for example, which includes the following information and programs.</p>
<p id="p-0257" num="0256">(a1) Program relating to a startup routine: for example, a program for executing processing such as checking of a memory initialization status, reading of data which is insufficient at a first loading, confirmation regarding whether or not content recorded in an information recording medium (Disc) together is an authorized content, or the like.</p>
<p id="p-0258" num="0257">(a2) Common routine (access to external recording etc.) program: for example, a program which can be used using a nonvolatile memory access function. In the event that the information which the content codes of this program can use is recorded, data can be read and used.</p>
<p id="p-0259" num="0258">(a3) Player identification routine: a program for acquiring information of an device or reproduction application which currently performs reproduction, and determining regarding whether or not this is a target for an additional security check. In the event that an additional check is necessary, a content code file is loaded as necessary, following which the additional check is performed.</p>
<p id="p-0260" num="0259">(b) Content-Unique Data <b>502</b></p>
<p id="p-0261" num="0260">The content-unique data <b>502</b> is a data portion including-unique information or program in each content, and specifically, for example, includes the following information and programs.</p>
<p id="p-0262" num="0261">(b1) Fix-up table (FixUpTable) information: the fix-up table including the transformation data described in the above processing example. This includes not only the transformation data, but information necessary for data transformation processing such as a secret (SP) parameter calculation routine, and the like.</p>
<p id="p-0263" num="0262">(b2) Title initializing program: with a security check to be performed prior to processing for generating the fix-up table (FixUpTable), and prior to reproduction of a title, a routine relating to a check depending on only content is included.</p>
<p id="p-0264" num="0263">(c) Player (Device or Reproduction Application)-Unique Data <b>503</b></p>
<p id="p-0265" num="0264">(c) Player (device or reproduction application)-unique data <b>503</b> is a data portion including information or a program unique to an information processing device or reproduction application for playing back content, and specifically, for example, includes the following information and programs:</p>
<p id="p-0266" num="0265">(c1) RunNative execution portion, NativeCode: information and programs for executing processing unique to an device or application for executing reproduction of content, and executing functions to make detection or improvement of a security issue. The processing performed by a kernel mode in the operating system of an information processing device for executing reproduction processing is common. Also, when executing this processing, detection or improvement of a security issue due to execution of these content codes is made on the information processing device side for executing reproduction of content by including the validity verification function (e.g., signature using a secret key (PrivateKey) as to a public key assigned to a player manufacturer. In other words, a player device (application program) has a public key corresponding to a secret key assigned to by the manufacturer in the NativeCode thereof, and a signature using this secret key is provided, and signature verification is performed using the correlating public key.) unique to a player in the NativeCode itself following validity verification using signature verification being executed.</p>
<p id="p-0267" num="0266">(d) Content and Player (Device or Reproduction Application)-Unique Data <b>503</b></p>
<p id="p-0268" num="0267">The content and player (device or reproduction application)-unique data <b>503</b> is data including information or a program unique to content, and also unique to an information processing device or reproduction application for playing back content, and specifically, for example, includes the following information and programs.</p>
<p id="p-0269" num="0268">(d1) Player validity check portion using DiscoveryRAM: information and programs for executing a function to check regarding whether to be an authorized player (device or reproduction application) by checking a specific value on the memory (RAM) within an device for executing reproduction of content. Correctness is confirmed by monitoring that specific memory enters a player-unique state during reproduction of a specific content. In this case, the check routine depends on both the content and the player.</p>
<p id="p-0270" num="0269">(d2) Comparison data for DiscoveryRAM: the table storing values for comparing with the actual values on the RAM (target values) in the above (d1) player validity check using DiscoveryRAM.</p>
<p id="p-0271" num="0270">Thus, content codes store various types of information and program, a device for executing reproduction of content selects the corresponding code information depending on a reproduction content or depending on a device or application from these content codes, and executes various types of processing.</p>
<p id="p-0272" num="0271">As described with reference to <figref idref="DRAWINGS">FIG. 15</figref>, content codes can be classified into the following four categories:</p>
<p id="p-0273" num="0272">(a) All contents and all players (device or reproduction application) common data <b>501</b></p>
<p id="p-0274" num="0273">(b) Content-unique data <b>502</b></p>
<p id="p-0275" num="0274">(c) Player (device or reproduction application)-unique data <b>503</b></p>
<p id="p-0276" num="0275">(d) Content and player (device or reproduction application)-unique data <b>504</b></p>
<p id="p-0277" num="0276">These respective of content codes are stored in an information recording medium as an individual file or an accumulated file. The content codes of these respective categories may differ in an entity which produces codes, respectively. For example, the content codes corresponding to (b) content-unique data are set by a studio serving as a content producer. Also, (c) player (device or reproduction application)-unique data is frequently generated by an entity for producing a reproduction device or reproduction application serving as a player.</p>
<p id="p-0278" num="0277">Description will be made with reference to <figref idref="DRAWINGS">FIG. 16</figref> regarding a sequence which goes up to the point that content codes thus generated by a different entity are recorded in an information recording medium. <figref idref="DRAWINGS">FIG. 16</figref> illustrates the configuration data of the content codes corresponding to the above four categories. That is to say, these are content codes having one of the following four different categories:</p>
<p id="p-0279" num="0278">(DATA a) All contents and all players (device or reproduction application) common data <b>501</b></p>
<p id="p-0280" num="0279">(DATA b) Content-unique data <b>502</b></p>
<p id="p-0281" num="0280">(DATA c) Player (device or reproduction application)-unique data <b>503</b></p>
<p id="p-0282" num="0281">(DATA d) Content and player (device or reproduction application)-unique data <b>504</b></p>
<p id="p-0283" num="0282">These content codes are produced by a different entity, i.e., a studio which performs production and edition of contents, an authoring company, a player (device or reproduction application) manufacturer, or the like.</p>
<p id="p-0284" num="0283">Upon these content codes being produced, the signature of the producer or presentation entity of each content codes is appended in steps S<b>201</b> and S<b>202</b>. The digital signature is appended by applying the encryption key (secret key) possessed by each entity. Appending of this digital signature is set for tampering verification and tampering prevention of each content codes. Note that in the drawing, only two processing blocks of steps S<b>201</b> and S<b>202</b> are illustrated, but each entity which produces each content codes appends its signature depending on the number of content codes to be produced.</p>
<p id="p-0285" num="0284">In step S<b>203</b>, the control center (KIC) eventually appends its digital signature to the content codes to be recorded in the information recording medium. Note that when setting a digital signature in this control center (KIC: may also be called a Key Issuance Center, however in the present specification this is called a control center), a new digital signature of the control center (KIC) is preferably set on the condition that the digital verification of each entity has been performed, and each content codes has been confirmed not to be subjected to tampering.</p>
<p id="p-0286" num="0285">The content code file to which the digital signature of the control center (KIC) is appended is recorded in the information recording medium. As for the setting mode of a signature corresponding to the content codes to be recorded in the information recording medium, several different setting modes are available. Description will be made regarding the data configuration of the content codes to be recorded in the information recording medium, and a signature setting example with reference to <figref idref="DRAWINGS">FIGS. 17 through 20</figref>.</p>
<p id="p-0287" num="0286">The example shown in <figref idref="DRAWINGS">FIG. 17</figref> is an example wherein each of content code files [xxxxx.svm] <b>521</b>, <b>522</b>, and <b>523</b>, recorded in the information recording medium, has a common file configuration, and each file, as shown in the content code file <b>530</b> in the drawing, includes a header <b>531</b>, a content code block <b>532</b>, and a digital signature <b>533</b>.</p>
<p id="p-0288" num="0287">The header <b>531</b> includes digital signature information such as a unique ID serving as the unique identification information corresponding to content codes, the data size of a content code block which stores the entity data of the content codes, the type of digital signature (such as ECDSA), and the like.</p>
<p id="p-0289" num="0288">The content code block <b>532</b> records the above various types of content codes as the entity data of content codes. The digital signature <b>533</b> is, in the present example, the signature of the control center. With the present example, let us say that the signature of each entity other than the above-described control center is not included in the content codes.</p>
<p id="p-0290" num="0289">Thus, with the arrangement wherein the signature of the control center is set to all of the content code files, all of the content code files [xxxxx.svm] are set to
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>2 MB+header+signature<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
in data capacity. 2 MB is applied to the content code block.
</p>
<p id="p-0291" num="0290">An information processing device (user device) which uses the content codes shown in <figref idref="DRAWINGS">FIG. 17</figref> executes the digital signature verification of the control center included in the content codes, verifies regarding whether or not the content codes have been tampered, following which uses the codes. Description will be made later regarding a specific processing sequence.</p>
<p id="p-0292" num="0291"><figref idref="DRAWINGS">FIG. 18</figref> is an arrangement example wherein a signature is set to only one of the content code files to be recorded in the information recording medium, and no signature is set to the other content code files. With the example shown in <figref idref="DRAWINGS">FIG. 18</figref>, an arrangement is made wherein the digital signature <b>533</b> of the control center is set to only the content code file [00000.svm] <b>521</b> as shown in the file <b>530</b> which includes the header <b>531</b>, the content code block <b>532</b>, and the digital signature <b>533</b> of the control center, but the digital signature of the control center is not set to the file <b>540</b> of the other content code file [00001.svm] <b>522</b> and so on, which are set as the file <b>540</b> in which only the header <b>541</b> and content code block <b>542</b> are stored.</p>
<p id="p-0293" num="0292">The content code file to which the digital signature of the control center is set is preferably a file which stores the content codes to be executed in a sure manner at the information processing device, such as a file in which the content codes for executing a startup routine is recorded.</p>
<p id="p-0294" num="0293">With this arrangement example, the information processing device, which uses content codes, executes signature verification only in the case of using the content code file [00000.svm] <b>521</b>. In the case of using the other files, signature verification can be omitted. However, let us say that an arrangement is made wherein tampering verification of each content code file in which the signature is not set is executed using a method different from digital signature verification, e.g., a simple method such as hash verification or the like, validity is confirmed, following which the codes of each file are used. In this case, for example, an arrangement is made wherein a hash value for collation to be applied to verification is recorded and retained in a content code file. Description will be made later regarding these processing sequences.</p>
<p id="p-0295" num="0294">Thus, with the arrangement wherein the signature of the control center is set to only one of the content code files, the content code file to which the signature is set, for example, is set to
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>2 MB+header+signature<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
in data capacity, but the other content code files to which the signature is not set have no appending of the signature, and it becomes unnecessary to take the process of signature verification into consideration, so it also becomes unnecessary to prepare a restraint in the size of the content code block, and accordingly, files to which the content code block of an arbitrary size is set can be employed as the other content code files.
</p>
<p id="p-0296" num="0295">Next, description will be made regarding a setting example of the content code file in which not only the signature of the control center but also the signature of production or presentation entity of each content codes are recorded with reference to <figref idref="DRAWINGS">FIGS. 19 and 20</figref>.</p>
<p id="p-0297" num="0296">The example shown in <figref idref="DRAWINGS">FIG. 19</figref> is an example wherein each of content code files [xxxxx.svm] <b>521</b>, <b>522</b>, and <b>523</b> has the common file configuration, and each file, as shown in the content code file <b>550</b> in the drawing, includes a header <b>551</b>, a content code block <b>552</b>, a digital signature <b>1</b>, <b>553</b>, and a digital signature <b>2</b>, <b>554</b>.</p>
<p id="p-0298" num="0297">The header <b>551</b> includes digital signature information such as a unique ID serving as the unique identification information corresponding to content codes, the data size of a content code block which stores the entity data of the content codes, the type of digital signature (such as ECDSA), and the like. The content code block <b>552</b> records the above various types of content codes as the entity data of content codes.</p>
<p id="p-0299" num="0298">The digital signature <b>1</b>, <b>553</b> is the signature of the producer or presentation entity of content codes to be stored in each content code file. The digital signature <b>2</b>, <b>554</b> is the signature of the control center. With the present example, in addition to the signature of the control center, the signature of each entity is also set to be stored.</p>
<p id="p-0300" num="0299">An information processing device (user device) which uses the content codes shown in <figref idref="DRAWINGS">FIG. 19</figref> executes verification only regarding the digital signature of the control center included in the content codes, verifies regarding whether or not the content codes have been tampered, following which uses the codes. Alternatively, an arrangement may be made wherein in addition to verification of the digital signature of the control center, verification of the digital signature of each entity is executed.</p>
<p id="p-0301" num="0300"><figref idref="DRAWINGS">FIG. 20</figref> is an arrangement example wherein a signature is set to only one of the content code files to be recorded in an information recording medium, and set no signature to the other content code files. With the example shown in <figref idref="DRAWINGS">FIG. 20</figref>, an arrangement is made wherein the digital signature <b>553</b> of a producer or presentation entity of the content codes, and the digital signature <b>554</b> of the control center are set to only the content code file [00000.svm] <b>521</b> as shown in the file <b>550</b> which includes the header <b>551</b>, the content code block <b>552</b>, the digital signature <b>1</b>, <b>553</b>, and the digital signature <b>2</b>, <b>554</b>, but the digital signature is not set to the file <b>560</b> of the other content code file [00001.svm] <b>522</b> and so on, which are set as the file <b>540</b> in which only the header <b>561</b> and content code block <b>562</b> are stored.</p>
<p id="p-0302" num="0301">The content code file to which the digital signature is set is preferably a file which stores the content codes to be executed in a sure manner at the information processing device, for example, such as a file in which the content codes for executing a startup routine is recorded, as with the example previously described with reference to <figref idref="DRAWINGS">FIG. 18</figref>.</p>
<p id="p-0303" num="0302">With this arrangement example, the information processing device, which uses content codes, executes signature verification only in the case of using the content code file [00000.svm] <b>521</b>. In the case of using the other files, signature verification can be omitted. However, let us say that an arrangement is made wherein tampering verification of each content code file in which the signature is not set is executed using a method different from digital signature verification, e.g., a simple method such as hash verification or the like, validity is confirmed, following which the codes of each file are used. In this case, for example, let us say that an arrangement is made wherein a hash value for collation to be applied to verification is recorded and retained in a content code file.</p>
<p id="p-0304" num="0303">Next, description will be made regarding the processing sequence of usage of content codes in the information processing device for executing data processing using content codes with reference to the flowcharts shown <figref idref="DRAWINGS">FIGS. 21 and 22</figref>.</p>
<p id="p-0305" num="0304"><figref idref="DRAWINGS">FIG. 21</figref> is a flowchart illustrating the processing sequence in the case of the content code file configurations previously described with reference to <figref idref="DRAWINGS">FIGS. 17 and 19</figref>, i.e., in the case of file setting wherein the digital signature is set to all the content code files, and <figref idref="DRAWINGS">FIG. 22</figref> is a flowchart illustrating the processing sequence in the case of the content code file configurations previously described with reference to <figref idref="DRAWINGS">FIGS. 18 and 20</figref>, i.e., in the case of file setting wherein the digital signature is set to only the one content code file.</p>
<p id="p-0306" num="0305">First, description will be made regarding the sequence of usage of content codes in the case of file setting wherein the digital signature is set to all the content code files with reference to the flowcharts shown <figref idref="DRAWINGS">FIG. 21</figref>. Note that this processing sequence is executed by the secure VM which is set by the information processing device for executing reproduction of content. The secure VM serves as a data processing unit for acquiring the content codes including a program or application information to be adapted to usage of the encrypted content recorded in the information recording medium, and executing data processing in accordance with the acquired content codes.</p>
<p id="p-0307" num="0306">First, the data processing unit (secure VM) of the information processing device which uses content codes executes the signature verification processing of the content code file [00000.svm] in step S<b>301</b>. The secure VM executes verification of the digital signature of the control center (KIC) set to the content code file [00000.svm]. Specifically, the secure VM executes, for example, digital signature verification to which the public key of the control center (KIC) is applied (e.g., ECDSA signature verification algorithm).</p>
<p id="p-0308" num="0307">In step S<b>302</b>, the event that determination is made with the signature verification that the content code file has no validity, usage of the content codes is suspended, and then the processing ends.</p>
<p id="p-0309" num="0308">In the event that determination is made with signature verification in step S<b>302</b> that the content code file has validity, the flow proceeds to step S<b>303</b>, where the content code file [00000.svm] read out from the information recording medium is loaded in the memory region where the secure VM uses, and in step S<b>304</b>, the content codes recorded in the content code file [00000.svm] are executed. Note that the content codes recorded in this content code file [00000.svm] are, for example, the execution codes of a startup routine, and the information processing device, which uses the content stored in the information recording medium, first performs processing in the sequence of the verification processing, load processing, and code execution processing of the content code file [00000.svm].</p>
<p id="p-0310" num="0309">Subsequently, determination is made in step S<b>305</b> regarding whether or not usage of the content code file not loaded in the adaptation memory of the secure VM is required, and in the event of being required, the flow proceeds to step S<b>306</b>, where a read command for loading a new content code file [xxxxx.svm] on the memory of the secure VM is output to the drive.</p>
<p id="p-0311" num="0310">Next, in step S<b>307</b>, the secure VM executes verification of the digital signature of the control center (KIC) set to the content code file [xxxxx.svm]. In step S<b>308</b>, in the event that determination is made with the signature verification that the content code file has no validity, usage of the content codes is suspended, and then the processing ends.</p>
<p id="p-0312" num="0311">In step S<b>308</b>, in the event that determination is made with the signature verification that the content code file has validity, the flow proceeds to step S<b>309</b>, where the secure VM loads the content code file [xxxxx.svm] read out from the information recording medium in the memory region which the secure VM uses, and executes this.</p>
<p id="p-0313" num="0312">In step S<b>310</b>, in the event that end of reproduction by user operations or end of title has not occurred, the flow returns to the determination processing regarding necessity of usage and load of another content codes in step S<b>305</b>. In step S<b>310</b>, in the event that end of reproduction by user operations or end of title has occurred, the processing ends.</p>
<p id="p-0314" num="0313">Next, with reference to the flowchart shown in <figref idref="DRAWINGS">FIG. 22</figref>, description will be made regarding the sequence of usage of content codes in the case of the content code file setting previously described with reference to <figref idref="DRAWINGS">FIGS. 18 and 20</figref>, i.e., in the case of file setting wherein the digital signature is set to only the one content code file, and the digital signature is not set to the other content code files. Note that this processing sequence is executed by the secure VM which is set by the information processing device for executing reproduction of content.</p>
<p id="p-0315" num="0314">First, the information processing device which uses content codes executes the signature verification processing of the content code file [00000.svm] in step S<b>401</b>. The information processing device executes verification of the digital signature of the control center (KIC) set to the content code file [00000.svm]. Specifically, the information processing device executes, for example, digital signature verification to which the public key of the control center (KIC) is applied (e.g., ECDSA signature verification algorithm).</p>
<p id="p-0316" num="0315">In step S<b>402</b>, in the event that determination is made with the signature verification that the content code file has no validity, usage of the content codes is suspended, and then the processing ends.</p>
<p id="p-0317" num="0316">In the event that determination is made with signature verification in step S<b>402</b> that the content code file has validity, the flow proceeds to step S<b>403</b>, where the content code file [00000.svm] read out from the information recording medium is loaded in the memory region where the secure VM uses, and in step S<b>404</b>, the content codes recorded in the content code file [00000.svm] are executed. Note that the content codes recorded in this content code file [00000.svm] are, for example, the execution codes of a startup routine, and the information processing device, which uses the content stored in the information recording medium, first performs processing in the sequence of the verification processing, load processing, and code execution processing of the content code file [00000.svm].</p>
<p id="p-0318" num="0317">Subsequently, determination is made in step S<b>405</b> regarding whether or not usage of the content code file not loaded in the adaptation memory of the secure VM is required, and in the event of being required, the flow proceeds to step S<b>406</b>, where a read command for loading a new content code file [xxxxx.svm] on the memory of the secure VM is output to the drive.</p>
<p id="p-0319" num="0318">Next, in step S<b>407</b>, the information processing device loads the content code file [xxxxx.svm] read out from the information recording medium in the memory which the secure VM uses.</p>
<p id="p-0320" num="0319">Next, in step S<b>408</b>, the information processing device executes verification of the content code file by calculating the hash value based on the content code configuration data stored in the content code file [xxxxx.svm], and executing collation processing as to the hash value for verification which was stored in the content code file [xxxxx.svm] beforehand. In step S<b>409</b>, in the event that determination is made with the verification that the content code file has no validity, usage of the content codes is suspended, and then the processing ends.</p>
<p id="p-0321" num="0320">In step S<b>409</b>, in the event that confirmation is made with the verification that the content code file has validity, the flow proceeds to step S<b>410</b>, where the information processing device executes the content codes acquired from the content code file [xxxxx.svm].</p>
<p id="p-0322" num="0321">In step S<b>411</b>, in the event that end of reproduction by user operations or end of title has not occurred, the flow returns to the determination processing regarding necessity of usage and load of another content codes in step S<b>405</b>. In step S<b>411</b>, in the event that end of reproduction by user operations or end of title has occurred, the processing ends.</p>
<p id="p-0323" num="0322">Thus, the information processing device is configured such that, when using content codes, verification of the digital signature set to a content code file is executed, or the hash verification is executed to confirm the validity of the content code file, following which the processing of the content codes is executed, thereby preventing unauthorized codes from being executed.</p>
<p id="p-0324" num="0323">The content codes produced by each entity can be set as an independent data file, and such a content code file can be recycled. In other words, such a content code file can be commonly used as to different contents or different players (devices or reproduction applications) in some cases. Description will be made regarding the recycle configuration of such content codes with reference to <figref idref="DRAWINGS">FIG. 23</figref>.</p>
<p id="p-0325" num="0324">In <figref idref="DRAWINGS">FIG. 23</figref>, for example, the content code files <b>601</b> through <b>604</b> are content code files retained by respective content code production or presentation entities, and represent:</p>
<p id="p-0326" num="0325">content and player common content code file [00000.svm] <b>601</b>,</p>
<p id="p-0327" num="0326">content-unique content code file [00001.svm] <b>602</b>,</p>
<p id="p-0328" num="0327">player-unique content code file [00002.svm] <b>603</b>, and</p>
<p id="p-0329" num="0328">content and player-unique content code file [00003.svm] <b>604</b>, respectively.</p>
<p id="p-0330" num="0329">The digital signature of each content code production entity or presentation entity is appended to these content code files <b>601</b> through <b>604</b> each of which is kept in each entity.</p>
<p id="p-0331" num="0330">In the event of producing an information recording medium in which a new content is recorded, each entity can recycle these content code files <b>601</b> through <b>604</b> which have been already used in another content recording information recording medium.</p>
<p id="p-0332" num="0331">As previously described with reference to <figref idref="DRAWINGS">FIG. 16</figref>, these are provided to the control center, and the digital signature is set to these at the control center, and then these are stored in an information recording medium <b>610</b>. The digital signature by the control center (KIC), and the unique ID set by the control center are appended to the content codes to be recorded in the information recording medium <b>610</b>. The content codes <b>620</b> to be recorded in the information recording medium <b>610</b> includes a fix-up table <b>621</b>, as shown in the drawing. A specific directory configuration, as shown in a directory configuration <b>630</b>, is set as a configuration wherein the content codes generated by each entity are individually set.</p>
<p id="p-0333" num="0332">Thus, the content codes can be recycled according to various types of content, the content codes necessary for modification and the content codes which can be recycled are combined depending on each content as appropriate to be recorded in the information recording medium.</p>
<p id="h-0018" num="0000">8. Configuration of Information Processing Device</p>
<p id="p-0334" num="0333">Next, the hardware configuration example of an information processing device which executes the processing of the above-described in reproduction (player) application and secure VM will be described with reference to <figref idref="DRAWINGS">FIG. 31</figref>. An information processing device <b>800</b> has the CPU <b>809</b> which executes data processing following various types of program including OS, content reproduction and recording application programs, and programs for mutual authentication processing, processing and accompanying the reproduction of contents, e.g., the above-described data transformation processing, and so forth from <b>880</b> serving as a storage area for programs, parameters, etc., memory <b>810</b>, and input/output I/F <b>802</b> for input/output of digital signals, an input/output I/F <b>804</b> having an A/D, D/A converter <b>805</b> for input/output of analog signals, an MPEG CODEC <b>803</b> for executing encoding and decoding processing of MPEG data, TS-PS processing means <b>806</b> for executing the TS (Transport stream)-PS (Program Stream) processing, encryption processing means <b>807</b> for executing the various types of encryption processing, such as mutual authentication decryption processing of encrypted content, and so forth, a recording medium <b>812</b> such as a hard disk, and a drive <b>8114</b> driving the recording medium <b>812</b> and performed input/output of data recording/reproducing signals, with each block being connected to a bus <b>801</b>.</p>
<p id="p-0335" num="0334">The information processing device (host) <b>800</b> is connected with the drive by connecting bus such as a ATAPI-BUS, for example. Fix-up tables, content, and so forth, are input/output via the digital signal input/output I/F <b>802</b>. Encryption processing and decryption processing is performed by the encryption processing means <b>807</b>, applying AES algorithms, or the like, for example.</p>
<p id="p-0336" num="0335">Note that programs for executing content reproduction or recording processing are kept inside the ROM <b>808</b> for example, and the memory <b>810</b> is used while executing the programs as necessary, for work area for keeping the parameters and data.</p>
<p id="p-0337" num="0336">The ROM <b>808</b> or recording medium <b>812</b> stores, for example, the public key of an Administration Center, a secret key for a host, a public key certificate for the host, and further, a drive CRL serving as a revocation list, and so forth.</p>
<p id="p-0338" num="0337">At the time of reproducing or external output of content, data transformation processing programs obtained from the information recording medium is applied to execute processing following the various processing sequences described earlier in the processing example, such as decryption of encrypted contents, restoration of fix-up tables, writing of transformation data based on data stored in fix-up tables, and so forth.</p>
<p id="h-0019" num="0000">9. Information Recording Media Manufacturing Device and Information Recording Medium</p>
<p id="p-0339" num="0338">An information recording media manufacturing device and the information recording medium will be described. That is to say, description will be made regarding the manufacturing device of the information recording medium applied to the above-described content reproduction processing, the method thereof, and information recording medium.</p>
<p id="p-0340" num="0339">The information recording media manufacturing device is, for example, a device for manufacturing the information recording medium <b>100</b> storing the recorded data described with reference to <figref idref="DRAWINGS">FIG. 1</figref> earlier, for example. An information recording medium manufacturing device, as shown in <figref idref="DRAWINGS">FIG. 25</figref>, includes content file generating means <b>901</b> for generating a content file storing content data to be recorded in an information recording medium, content code file generating means <b>902</b> for storing content codes including a program or application information to be applied to usage of content, and further generating a content code file including data for tampering verification, and recording means <b>903</b> for recording the content file generated in the content file generating means <b>901</b>, and the content code file generated in the content code file generating means <b>902</b> in the information recording medium.</p>
<p id="p-0341" num="0340">The content code file generating means <b>902</b> generate a file storing the digital signature based on the data including the content codes included in a content code file, or the hash value based on the data including the content codes included in a content code file as data for tampering verification to be stored in a content code file.</p>
<p id="p-0342" num="0341">Also, the content code file generating means <b>902</b> generate multiple content code files storing content codes which are sectioned into multiple different categories. The four categories previously described with reference to <figref idref="DRAWINGS">FIG. 15</figref> are employed, for example. The recording means <b>903</b> execute processing for recording the content code files of these multiple different categories in the information recording medium.</p>
<p id="p-0343" num="0342">Note that in the event of generating multiple content code files which stored content codes to be sectioned into multiple different categories, of the files to be generated, the content code file generating means <b>902</b> execute processing for generating all of the files each of which stores a digital signature, or only one file as a content code file including digital signature data. As for a file configuration, the file configurations previously described with reference to <figref idref="DRAWINGS">FIGS. 17 through 20</figref> can be employed.</p>
<p id="p-0344" num="0343">Also, the digital signature to be recorded in the file generated by the content code file generating means <b>902</b> includes only the digital signature of the control center (KIC), or the digital signature of the control center and the digital signature of the production or presentation entity of content codes included in each file.</p>
<p id="p-0345" num="0344">The information recording medium <b>910</b> thus generated by the information recording medium manufacturing device records various types of data described with reference to <figref idref="DRAWINGS">FIG. 1</figref> and others. Specifically, the information recording medium stores at least a content file which stored content codes, and a content code file which stores content codes including a program or application information to be applied to usage of content, and further includes data for tampering verification.</p>
<p id="p-0346" num="0345">The data for tampering verification included in the content code file is the digital signature or hash value based on the data including the content codes included in the content code file. Also, the content code file may include multiple content code files which store the content codes to be sectioned into multiple different categories, as previously described with reference to <figref idref="DRAWINGS">FIG. 15</figref>.</p>
<p id="p-0347" num="0346">Also, the content code file to be recorded in the information recording medium may include multiple content code files storing content codes which are sectioned into multiple different categories, and arrangement is made wherein of the multiple recording files, only one file is set as a content code file including digital signature data, or all of the files include a digital signature, as previously described with reference to <figref idref="DRAWINGS">FIGS. 18 and 20</figref>.</p>
<p id="p-0348" num="0347">Also, as previously described with reference to <figref idref="DRAWINGS">FIGS. 19 and 20</figref>, an arrangement may be made wherein the content code file includes the digital signature of the production or presentation entity of content codes included in each file.</p>
<p id="p-0349" num="0348">The present invention has been described in detail so far with reference to specific embodiments. However, it is self-evident that one skilled in the art can make modifications and substitutions to the embodiments without departing from the essence of the present invention. That is to say, the present invention has been disclosed in exemplary form, and should not be interpreted restrictively. The judgment of the essence of the present invention should be made with reference to the Claims section.</p>
<p id="p-0350" num="0349">Note that the series of processing described in the Specification can be carried out by hardware, software, or a combination of both. In the case of executing the processing with software, a program recording the processing sequence can either be installed in the memory within a computer that has built-in dedicated hardware and executed, or the program can be installed in a general-purpose computer capable of executing various types of processing.</p>
<p id="p-0351" num="0350">For example, the program may be recorded in a hard disk or ROM (Read Only Memory) serving as recording media. Or, this may be temporarily or permanently stored (recorded) in removable media such as a flexible disk, CD-ROM (Compact Disc Read Only Memory), MO (Magneto optical) disk, DVD (Digital Versatile Disc), magnetic disk, semiconductor memory, etc. Such removable recording media can be provided as so-called packaged software.</p>
<p id="p-0352" num="0351">Note that besides installing the program from removable recording media such as described above to the computer, the program may be wirelessly transferred to the computer from the download site, or transferred to the computer over networks such as a LAN (Local Area Network) or the Internet, with a computer receiving the program transferred in such a way, so as to be installed in a built-in recording medium such as a hard disk or the like.</p>
<p id="p-0353" num="0352">Also, the various types of processing described in the Specification are not restricted to execution in the time-sequence described, and may be executed in parallel or independently, depending on the processing capabilities of the device executing the processing. Also note that the term &#x201c;system&#x201d; as used in the present Specification refers to a logical collection of multiple devices, and is not restricted to the devices of each configuration being within a single housing.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An information processing device for executing reproduction processing of content recorded in an information recording medium, said device comprising:
<claim-text>a data processing unit configured to acquire content codes including programs or application information to be applied to the content of the information recording medium, and to execute data processing in accordance with the acquired content codes,</claim-text>
<claim-text>wherein said content codes include digital signatures signed by a control center,</claim-text>
<claim-text>wherein at least one of programs included in said content codes is player unique data and is signed with the private key unique to the player,</claim-text>
<claim-text>wherein said data processing unit is configured to execute verification processing of said digital signature, which executes tampering verification of the entire set of said content codes and, to execute data processing in accordance with the content codes on the condition that validity of the entire set of content codes have been confirmed, and</claim-text>
<claim-text>wherein said data processing unit is configured to, in response to said data processing being executed in according with the content codes, execute verification processing of said at least one program signed with the private key unique the player and, to execute data processing in accordance with said at least one program on the condition that validity of said at least one program has been confirmed.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. An information processing method for executing reproduction processing of content recorded in an information recording medium, comprising:
<claim-text>acquiring content codes including programs or application information to be applied to the content of the information recording medium;</claim-text>
<claim-text>executing data processing in accordance with the acquired content codes, said content codes including digital signatures signed by a control center, and at least one of programs included in said content codes is player unique data and is signed with the private key unique to the player;</claim-text>
<claim-text>executing verification processing of said digital signature, which executes tampering verification of the entire set of said content codes;</claim-text>
<claim-text>executing data processing in accordance with the content codes on the condition that validity of the entire set of content codes have been confirmed by the verification processing; and</claim-text>
<claim-text>in response to said data processing being executed in according with the content codes,
<claim-text>executing verification processing of said at least one program signed with the private key unique the player, and</claim-text>
<claim-text>executing data processing in accordance with said at least one program on the condition that validity of said at least one program has been confirmed.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. A non-transitory computer readable medium having stored thereon a program that when executed by a computer causes the computer to implement an information processing method for executing reproduction processing of content recorded in an information recording medium, comprising:
<claim-text>acquiring content codes including programs or application information to be applied to the content of the information recording medium;</claim-text>
<claim-text>executing data processing in accordance with the acquired content codes, said content codes including digital signatures signed by a control center, and at least one of programs included in said content codes is player unique data and is signed with the private key unique to the player;</claim-text>
<claim-text>executing verification processing of said digital signature, which executes tampering verification of the entire set of said content codes;</claim-text>
<claim-text>executing data processing in accordance with the content codes on the condition that validity of the entire set of content codes have been confirmed by the verification processing; and</claim-text>
<claim-text>in response to said data processing being executed in according with the content codes,
<claim-text>executing verification processing of said at least one program signed with the private key unique the player, and</claim-text>
<claim-text>executing data processing in accordance with said at least one program on the condition that validity of said at least one program has been confirmed. </claim-text>
</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
