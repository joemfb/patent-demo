<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625423-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625423</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13169363</doc-number>
<date>20110627</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2006-219455</doc-number>
<date>20060811</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>266</us-term-extension>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>01</class>
<subclass>R</subclass>
<main-group>31</main-group>
<subgroup>08</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>28</subgroup>
<symbol-position>L</symbol-position>
<classification-value>N</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>3702301</main-classification>
<further-classification>37039532</further-classification>
</classification-national>
<invention-title id="d2e73">Device and method for relaying packets</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>2003/0147385</doc-number>
<kind>A1</kind>
<name>Montalvo et al.</name>
<date>20030800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2004/0184453</doc-number>
<kind>A1</kind>
<name>Moriwaki</name>
<date>20040900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2005/0047334</doc-number>
<kind>A1</kind>
<name>Paul et al.</name>
<date>20050300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2005/0276263</doc-number>
<kind>A1</kind>
<name>Suetsugu et al.</name>
<date>20051200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370389</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2007/0121660</doc-number>
<kind>A1</kind>
<name>Ayrapetian et al.</name>
<date>20070500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370411</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>JP</country>
<doc-number>2005-136589</doc-number>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>JP</country>
<doc-number>2005-252758</doc-number>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>JP</country>
<doc-number>2005-318222</doc-number>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>JP</country>
<doc-number>2006-005437</doc-number>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>WO</country>
<doc-number>WO 2005/015851</doc-number>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00011">
<othercit>&#x201c;Link Aggregation&#x201d;, based on the IEEE 802.3ad.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>10</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>16</number-of-drawing-sheets>
<number-of-figures>22</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>11830903</doc-number>
<date>20070731</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>7969880</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13169363</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110255534</doc-number>
<kind>A1</kind>
<date>20111020</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Yano</last-name>
<first-name>Hiroki</first-name>
<address>
<city>Toyota</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Sugai</last-name>
<first-name>Kazuo</first-name>
<address>
<city>Hadano</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Akahane</last-name>
<first-name>Shinichi</first-name>
<address>
<city>Hachioji</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Nara</last-name>
<first-name>Takao</first-name>
<address>
<city>Yokohama</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Yano</last-name>
<first-name>Hiroki</first-name>
<address>
<city>Toyota</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Sugai</last-name>
<first-name>Kazuo</first-name>
<address>
<city>Hadano</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Akahane</last-name>
<first-name>Shinichi</first-name>
<address>
<city>Hachioji</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Nara</last-name>
<first-name>Takao</first-name>
<address>
<city>Yokohama</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Antonelli, Terry, Stout &#x26; Kraus, LLP.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>ALAXALA Networks Corporation</orgname>
<role>03</role>
<address>
<city>Kanagawa</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Choi</last-name>
<first-name>Eunsook</first-name>
<department>2467</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A system having a plurality of network devices, each including: an interface module including a plurality of physical ports to transmit and receive packets; a computing module configured to execute a computing process with a computational expression using seed information, the seed information including at least one of destination information and source information associated with a received packet; a destination search module configured to, based on the result of the computation, select a physical port for transmission of the received packet from a plurality of candidate ports among the plurality of physical ports; and a modifying module configured to modify the computational expression, wherein the plurality of network devices include preceding-stage and subsequent-stage network devices, the subsequent-stage network device being directly coupled to the preceding-stage network device with physical wiring, and wherein the subsequent-stage and preceding-stage network devices are configured to use different expressions in the computing process.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="196.34mm" wi="151.13mm" file="US08625423-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="213.19mm" wi="150.11mm" file="US08625423-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="227.67mm" wi="177.38mm" orientation="landscape" file="US08625423-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="192.11mm" wi="171.11mm" file="US08625423-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="271.19mm" wi="193.21mm" file="US08625423-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="165.02mm" wi="183.98mm" file="US08625423-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="254.85mm" wi="187.11mm" orientation="landscape" file="US08625423-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="172.97mm" wi="163.41mm" file="US08625423-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="255.44mm" wi="174.84mm" file="US08625423-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="118.87mm" wi="166.62mm" file="US08625423-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="260.35mm" wi="189.15mm" file="US08625423-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="266.45mm" wi="190.50mm" file="US08625423-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="246.55mm" wi="172.30mm" file="US08625423-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="256.88mm" wi="176.87mm" file="US08625423-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="213.19mm" wi="151.55mm" file="US08625423-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="170.69mm" wi="160.95mm" file="US08625423-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="144.86mm" wi="158.07mm" file="US08625423-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This is a continuation of U.S. application Ser. No. 11/830,903, filed Jul. 31, 2007. This application relates to and claims priority from Japanese Patent Application No. 2006-219455, filed on Aug. 11, 2006. The entirety of the contents and subject matter of all of the above is incorporated herein by reference.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">1. Technical Field</p>
<p id="p-0004" num="0003">The present invention relates to a device and a method for relaying packets.</p>
<p id="p-0005" num="0004">2. Description of the Related Art</p>
<p id="p-0006" num="0005">Link aggregation based on the IEEE 802.3ad standard is a known redundant configuration for networks. Methods using multiple network relay devices (e.g. switch devices or router devices) to build redundant communication pathways are also known. A method for distributing the communication load, by using a function to convert information (e.g. the header of a frame being transmitted) into an output value, and on the basis of the output value, selecting a transmission cue corresponding to one of several links is also known (see Japanese Patent Published Application No. 2005-252758A). Another related technology is disclosed in Japanese Patent Published Application No. 2006-5437A.</p>
<p id="p-0007" num="0006">The circumstances under which network systems are utilized vary widely. As a result, in some instances, communication load imbalance will not be alleviated. Particularly in cases where network relay devices are directly connected, communication load imbalance in front end relay devices and communication load imbalance in back end relay devices may cumulatively result in appreciable communication load imbalance.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0008" num="0007">An object of the invention is to provide a technology capable of alleviating communication load imbalance.</p>
<p id="p-0009" num="0008">In a first aspect of the invention, there is provided a network relay device for relaying packets. The network relay device includes an interface module, a computing module, a destination search module, and a modifying module. The interface module includes a plurality of physical ports for connection to lines, and configured to transmit and receive packets through the lines. The computing module is configured to execute a computing process with a computational expression using seed information including at least one of destination information and source information associated with a received packet. The destination search module is configured to, based on the result of the computation, select a physical port for transmission of the received packet from a plurality of candidate ports among the plurality of physical ports. Each of the plurality of candidate ports is able to access a destination identified by the destination information. The modifying module is configured to modify the computational expression.</p>
<p id="p-0010" num="0009">According to this network relay device, it is possible to alleviate communication load imbalance, because the trend of bias in physical port selection can be altered by modifying the computational expression.</p>
<p id="p-0011" num="0010">In a second aspect of the invention, there is provided a network relay device for relaying packets. The network relay device includes an interface module, a computing module, a destination search module, and a modifying module. The interface module includes a plurality of physical ports for connection to lines, and configured to transmit and receive packets through the lines. The computing module is configured to execute a computing process with a computational expression using seed information including at least one of destination information and source information associated with a received packet. The destination search module is configured to, based on the result of the computation, select a port group for transmission of the received packet from among a plurality of port groups including a mutually different candidate port. Each port group includes one or more physical ports including a candidate port being able to access a destination identified by the destination information. The modifying module is configured to modify the computational expression.</p>
<p id="p-0012" num="0011">According to this network relay device, the trend of bias in port group selection can be altered by modifying the computational expression. Accordingly, communication load imbalance can be alleviated as a result.</p>
<heading id="h-0004" level="1">Preferred Features</heading>
<p id="p-0013" num="0012">In the network relay device of the first aspect, it is preferable that the destination search module has a link aggregation function that aggregates a plurality of physical ports as a single virtual port, and the plurality of candidate ports are included in a single virtual port constructed by the link aggregation function.</p>
<p id="p-0014" num="0013">With this arrangement, communication load imbalance in multiple physical ports included in a single virtual port can be suppressed.</p>
<p id="p-0015" num="0014">In the network relay device of the first aspect, it is preferable that the destination search module establishes an order of precedence in the selection of the physical port respectively for the plurality of physical ports, and the order of precedence is respectively the same for the plurality of candidate ports.</p>
<p id="p-0016" num="0015">With this arrangement, communication load imbalance in multiple physical ports having the same order of precedence can be suppressed.</p>
<p id="p-0017" num="0016">In the network relay device of the second aspect, it is preferable that the port group forms a virtual LAN architecture that divides a network including the plurality of physical ports into virtual partial networks.</p>
<p id="p-0018" num="0017">With this arrangement, the trend of bias in selection of virtual LAN for packet transmission can be altered by modifying the computational expression. Accordingly, communication load imbalance can be alleviated as a result.</p>
<p id="p-0019" num="0018">In the network relay device of the first and the second aspects, it is preferable that the computational expression is a hash function.</p>
<p id="p-0020" num="0019">With this arrangement, bias of physical port selection towards a specific physical port can be suppressed.</p>
<p id="p-0021" num="0020">In the network relay device of the first and the second aspects, it is preferable that the modifying module modifies the computational expression based on an instruction by a user.</p>
<p id="p-0022" num="0021">With this arrangement, it is possible for user intent to be reflected in the communication load distribution.</p>
<p id="p-0023" num="0022">In the network relay device of the first and the second aspects, it is preferable that the modifying module identifies a computational expression used by another network relay device connected to the network relay device through communication with the another network relay device, and automatically changes the computational expression used in the computing process, into a computational expression different from the identified computational expression.</p>
<p id="p-0024" num="0023">With this arrangement, it is possible for the trend of communication load imbalance in this network relay device to differ from the trend of communication load imbalance in another network relay device. As a result, it is possible to avoid a situation where communication load imbalance in this network relay device and communication load imbalance in the other network relay device cumulatively result in appreciable communication load imbalance.</p>
<p id="p-0025" num="0024">The present invention may be reduced to practice in various other ways, for example, a network relay method and device; a computer program for realizing the functions of such a method or device; a recording medium having such a computer program recorded thereon; a data signal containing such a computer program and embodied in a carrier wave; and so on.</p>
<p id="p-0026" num="0025">These and other objects, features, aspects, and advantages of the present invention will become more apparent from the following detailed description of the preferred embodiments with the accompanying drawings.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 1</figref> is an illustration of a network system employing switch devices in an embodiment of the present invention;</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 2</figref> is an illustration depicting the configuration of a switch device SW;</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIGS. 3(A)-3(B)</figref> illustrate a link aggregation table <b>400</b> and a filter table <b>410</b>;</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 4</figref> is a flowchart depicting the procedure of a destination search process;</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 5</figref> is an illustration depicting the internal configuration of a hash value generator <b>220</b> (<figref idref="DRAWINGS">FIG. 2</figref>);</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIGS. 6(A)-6(B)</figref> show control information <b>520</b> and header information <b>521</b>;</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 7</figref> is an illustration depicting the internal configuration of a calculator <b>222</b>;</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 8</figref> is a flowchart depicting the procedure of computation of hash values by the calculator <b>222</b>;</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 9</figref> is an illustration depicting a specific example of hash value computation;</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIGS. 10(A)-10(B)</figref> illustrate the relationship between output physical ports and hash values;</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 11</figref> is an illustration depicting a comparative example of packet relay in a network system <b>900</b>;</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 12</figref> is an illustration depicting an embodiment of packet relay in the network system <b>900</b>;</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 13</figref> is an illustration depicting a network system <b>900</b><i>c </i>in Embodiment 2;</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIGS. 14(A)-14(C)</figref> illustrate an exemplary routing table, ARP table, and filter table;</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 15</figref> is a flowchart depicting the procedure of the destination search process in Embodiment 2;</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 16</figref> is an illustration depicting the configuration of a header processor <b>200</b><i>a </i>in Embodiment 3; and</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 17</figref> is an illustration depicting the configuration of a header processor <b>200</b><i>b </i>in Embodiment 4.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DESCRIPTION OF THE PREFERRED EMBODIMENT</heading>
<p id="p-0044" num="0043">The embodiments of the present invention will be described herein in the order indicated below.
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0044">A. Embodiment 1:</li>
    <li id="ul0001-0002" num="0045">B. Embodiment 2:</li>
    <li id="ul0001-0003" num="0046">C. Embodiment 3:</li>
    <li id="ul0001-0004" num="0047">D. Embodiment 4:</li>
    <li id="ul0001-0005" num="0048">E: Variants:</li>
</ul>
</p>
<heading id="h-0007" level="1">A. Embodiment 1</heading>
<p id="p-0045" num="0049"><figref idref="DRAWINGS">FIG. 1</figref> is an illustration of a network system employing switch devices in an embodiment of the present invention. This network system <b>900</b> has six switch devices SW<b>10</b> to SW<b>60</b>. In Embodiment 1, these switch devices SW<b>10</b> to SW<b>60</b> all function as &#x201c;Layer 2 switches.&#x201d;</p>
<p id="p-0046" num="0050">Three of the switch devices SW<b>20</b>, SW<b>40</b>, and SW<b>60</b> are connected to the third switch device SW<b>30</b>. The third switch device SW<b>30</b> is respectively connected by two lines with the switch devices SW<b>20</b>, SW<b>40</b>, and SW<b>60</b>. The first switch device SW<b>10</b> and the second switch device SW<b>20</b> are connected by a single line L<b>121</b>; and the fifth switch device SW<b>50</b> and the sixth switch device SW<b>60</b> are connected by a single line L<b>561</b>.</p>
<p id="p-0047" num="0051">The switch devices SW<b>10</b> to SW<b>60</b> have physical ports for the purpose of connecting to the lines. In <figref idref="DRAWINGS">FIG. 1</figref>, physical port numbers identifying the physical ports are denoted by a combination of the symbol &#x201c;#&#x201d; with a number. For example, the line L<b>121</b> connecting the first switch device SW<b>10</b> with the second switch device SW<b>20</b> connects the first physical port (#<b>1</b>) of the first switch device SW<b>10</b> with the third physical port (#<b>3</b>) of the second switch device SW<b>20</b>.</p>
<p id="p-0048" num="0052">The second switch device SW<b>20</b> and the third switch device Sw<b>30</b> are connected by two lines L<b>231</b>, L<b>232</b>. By the link aggregation function, these two lines L<b>231</b>, L<b>232</b> are utilized as a single virtual line. The link aggregation function is a function whereby several physical ports are aggregated as utilized as a single virtual port (also termed a &#x201c;logical port&#x201d;). This link aggregation function is used for the purpose of achieving wider bandwidth and of ensuring redundancy. In the example of <figref idref="DRAWINGS">FIG. 1</figref>, the two physical ports #<b>1</b>, #<b>2</b> of the second switch device SW<b>20</b> are utilized as a single logical port by the link aggregation function. The two physical ports #<b>3</b>, #<b>4</b> of the third switch device SW<b>30</b> to which these ports #<b>1</b>, #<b>2</b> are connected are also utilized as a single logical port by the link aggregation function.</p>
<p id="p-0049" num="0053">Similarly, the two lines L<b>631</b>, L<b>632</b> connecting the third switch device SW<b>30</b> and the sixth switch device SW<b>60</b> are utilized as a single virtual line by the link aggregation function. The two lines L<b>341</b>, L<b>342</b> connecting the third switch device SW<b>30</b> and the fourth switch device SW<b>40</b> are utilized as a single virtual line by the link aggregation function.</p>
<p id="p-0050" num="0054">Hereinafter, logical ports set up by the link aggregation function, and physical ports not included in any logical ports (herein also termed &#x201c;independent physical ports&#x201d;) will be referred to respectively as &#x201c;line ports.&#x201d; That is, in the switch devices SW, the line port is utilized as a port for connection of single independent line (including single virtual line).</p>
<p id="p-0051" num="0055"><figref idref="DRAWINGS">FIG. 2</figref> is an illustration depicting the configuration of a switch device SW. In Embodiment 1, the same switch devices SW are used as the switch devices SW<b>10</b> to SW<b>60</b> (<figref idref="DRAWINGS">FIG. 1</figref>). This switch device SW has a packet receiving circuit/transmitting circuit <b>100</b> (hereinafter termed &#x201c;interface circuit <b>100</b>&#x201d;), a header processor <b>200</b>, and a memory <b>300</b>. These constituent elements <b>100</b>, <b>200</b>, <b>300</b> are interconnected by a bus (not shown).</p>
<p id="p-0052" num="0056">The interface circuit <b>100</b> is an electronic circuit for receiving and transmitting packets, and has several physical ports for connection to the lines. In the example of <figref idref="DRAWINGS">FIG. 2</figref>, three physical ports #<b>1</b> to #<b>3</b> are shown. The two ports #<b>1</b> and #<b>2</b> are utilized as a single logical port, by the link aggregation function.</p>
<p id="p-0053" num="0057">The header processor <b>200</b> executes a process for determining which physical port should transmit received packets (hereinafter termed the &#x201c;output physical port&#x201d;). This process will be termed &#x201c;destination search process&#x201d;. The header processor <b>200</b> is an ASIC (Application Specific Integrated Circuit) designed to achieve various functions, discussed later. The header processor <b>200</b> has a destination search module <b>210</b>, a hash value generator <b>220</b>, and a setting value controller <b>230</b>.</p>
<p id="p-0054" num="0058">The memory <b>300</b> stores various data for use in the destination search process. In the example of <figref idref="DRAWINGS">FIG. 2</figref>, a link aggregation table <b>400</b> and a filter table <b>410</b> are stored in the memory <b>300</b>. <figref idref="DRAWINGS">FIG. 3(A)</figref> is an illustration of an example of the link aggregation table <b>400</b>. The link aggregation table <b>400</b> is a table that defines logical ports. The link aggregation table <b>400</b> specifies associations between a link aggregation number unique to a logical port (also termed an &#x201c;LA number&#x201d; or &#x201c;table number&#x201d;), the total number of physical ports included in the logical port, and the physical ports included in the logical port. In the example of <figref idref="DRAWINGS">FIG. 3(A)</figref>, the entirety of two physical ports, namely a first physical port #<b>1</b> and a second physical port #<b>2</b>, are utilized as a single virtual port (logical port). The logical port is assigned an LA number of &#x201c;0.&#x201d;</p>
<p id="p-0055" num="0059">Each of the several physical ports included in a single logical port is assigned a selection number identifying the physical port. The selection number is an integer starting from 0. In the example of <figref idref="DRAWINGS">FIG. 3(A)</figref>, the first physical port #<b>1</b> is assigned a selection number of &#x201c;0&#x201d; and the second physical port #<b>2</b> is assigned a selection number of &#x201c;1.&#x201d; This selection number will be utilized in the destination search process, to be discussed later.</p>
<p id="p-0056" num="0060">The destination search module <b>210</b> establishes values for each entry of the link aggregation table <b>400</b> according to instructions by the user. User instructions may be input, for example, via a control panel (not shown) provided to the switch device SW, or an administration terminal (not shown) connected to the switch device SW.</p>
<p id="p-0057" num="0061">The total number of physical ports included in a single logical port is not limited to &#x201c;2,&#x201d; any number could be employed. Likewise, the total number of logical ports utilized by a single switch device SW is not limited to &#x201c;1&#x201d;; any number could be employed.</p>
<p id="p-0058" num="0062"><figref idref="DRAWINGS">FIG. 3(B)</figref> is an illustration of an example of the filter table <b>410</b>. The filter table <b>410</b> stores associations among a VLAN-ID, a line port, and the Layer 2 address (MAC address) of a network device connected to the line port.</p>
<p id="p-0059" num="0063">The VLAN-ID is an identifying number of a VLAN (Virtual Local Area Network). A VLAN represents a group including one or more line ports capable of communication with one another at the Layer 2 level. Specifically, in Embodiment 1, the destination search module <b>210</b> relays packets exclusively between line ports belonging to the same VLAN, and will not relay packets to different VLANs. By dividing multiple line ports into multiple VLANs in this way, it is possible to prevent the communication load from extending to unintended line ports (other VLANs). Specifically, a network including a multiplicity of physical ports can be divided in to virtual partial networks (also called &#x201c;network segments&#x201d;).</p>
<p id="p-0060" num="0064">In the example of <figref idref="DRAWINGS">FIG. 3(B)</figref>, the VLAN-IDs of the 0th logical port (LA#<b>0</b>) and the third physical port (Port #<b>3</b>) are each set to &#x201c;291&#x201d;. In the same way as with the link aggregation table <b>400</b>, the destination search module <b>210</b> establishes associations between the line ports and the VLAN-IDs in accordance with user instructions. The total number of VLANs utilized by a single switch device SW is not limited to &#x201c;1&#x201d;&#x201d;; any number could be employed. Likewise, the VLAN-ID is not limited to the number &#x201c;291,&#x201d; and could be any other number instead.</p>
<p id="p-0061" num="0065">The associations between line ports and MAC addresses in the filter table <b>410</b> are established automatically by the destination search module <b>210</b>. Specifically, the destination search module <b>210</b> acquires the source MAC address by looking up the header information of a packet received by the switch device SW. The destination search module <b>210</b> then registers in the filter table <b>410</b> an association of the source MAC address with the line port that received the packet. In the event that the physical port which received the packet is an independent physical port, the physical port number will be registered. Where the physical port which received the packet is included in a logical port, the LA number of the logical port will be registered. In the example of <figref idref="DRAWINGS">FIG. 3(B)</figref>, an association between the 0th logical port (LA#<b>0</b>) and a first address (address <b>1</b>), and an association between the third physical port #<b>3</b> and a second address (address <b>2</b>), are registered.</p>
<p id="p-0062" num="0066">Multiple network devices may be connected to a single line port. In this case, multiple addresses will be registered in relation to the single line port. Expiration information specifying an expiry date for registered data could be registered in the filter table <b>410</b> as well. Where data whose expiry date has passed is deleted from the filter table <b>410</b>, it becomes a simple matter to update the filter table <b>410</b> according to changes in network configuration. The efficiency of utilization of the memory <b>300</b> may be improved as well. As the expiry date it would be possible to employ a prescribed period of time elapsed since registration. With regard to physical ports included in a logical port as well, the physical port numbers could be registered in place of the LA number.</p>
<p id="p-0063" num="0067"><figref idref="DRAWINGS">FIG. 4</figref> is a flowchart depicting the procedure of the destination search process. In the initial Step S<b>100</b>, the destination search module <b>210</b> (<figref idref="DRAWINGS">FIG. 2</figref>) refers to the header information of the packet and to the filter table <b>410</b> (<figref idref="DRAWINGS">FIG. 2</figref>, <figref idref="DRAWINGS">FIG. 3(B)</figref>) in order to search for the line port that is to transmit the received packet. Specifically, the destination search module <b>210</b> acquires the destination MAC address from the header information and searches the filter table <b>410</b> for the line port to which the destination MAC address belongs. In this process, line ports included in the same VLAN as the line port which received the packet are searched for the line port. That is, other VLANs are not searched for the line port.</p>
<p id="p-0064" num="0068">In the next Step S<b>110</b>, the destination search module <b>210</b> decides whether the searched line port is a logical port (link aggregation port) or a normal port (independent physical port). In the event that the searched line port is a normal port (independent physical port), the destination search module <b>210</b> will employ that physical port as the output physical port (Step S<b>130</b>).</p>
<p id="p-0065" num="0069">In the event that the searched line port is a logical port, in the next Step S<b>120</b>, the destination search module <b>210</b> selects one physical port from among the multiple physical ports included in the logical port. The selected physical port is then designated as the output physical port (S<b>130</b>). A hash value generated by the hash value generator <b>220</b> (<figref idref="DRAWINGS">FIG. 2</figref>) is used for selecting the physical port. The hash value generator <b>220</b> computes the hash value on the basis of the header information from the received packet, and control information provided by the interface circuit <b>100</b>. The specifics of physical port selection using hash values will be discussed later.</p>
<p id="p-0066" num="0070">Once the output physical port has been determined, the destination search module <b>210</b> (<figref idref="DRAWINGS">FIG. 2</figref>) notifies the interface circuit <b>100</b> about the output physical port. The interface circuit <b>100</b> then transmits the packet from the notified output physical port.</p>
<p id="p-0067" num="0071">In the event that the searched line port and the line port that received the packet are the same, it will not be necessary to relay the packet, so the destination search module <b>210</b> will suspend packet transfer. In the event that the line port cannot be found in the filter table <b>410</b>, the destination search module <b>210</b> will select all of the line ports, except for the line port that received the packet, as the line ports for transmitting the packet (this is also termed &#x201c;flooding&#x201d;). However, in this case, only line ports included in the same VLAN as the line port that received the packet will be selected.</p>
<p id="p-0068" num="0072"><figref idref="DRAWINGS">FIG. 5</figref> is an illustration depicting the internal configuration of the hash value generator <b>220</b> (<figref idref="DRAWINGS">FIG. 2</figref>). The hash value generator <b>220</b> has a calculator <b>222</b> and a settings value accumulator (memory) <b>224</b>.</p>
<p id="p-0069" num="0073">The settings value accumulator <b>224</b> stores eight settings values SV<b>1</b> to SV<b>8</b> established by the setting value controller <b>230</b> (<figref idref="DRAWINGS">FIG. 2</figref>). Each of the eight setting values SV<b>1</b> to SV<b>8</b> is composed of 8-bit data, and is used in the computation of hash values. These setting values will be referred to hereinbelow as &#x201c;hash setting values.&#x201d; The setting value controller <b>230</b> sets each of the setting values SV<b>1</b> to SV<b>8</b> in accordance with user instructions. User instructions may be input, for example, via a control panel (not shown) of the switch device SW, or an administration terminal (not shown) connected to the switch device SW. Also, it would be acceptable to instead have the setting value controller <b>230</b> set the setting values SV<b>1</b> to SV<b>8</b> automatically. For example, the setting value controller <b>230</b> could generate data randomly, and use the data obtained thereby as the setting values SV<b>1</b> to SV<b>8</b>.</p>
<p id="p-0070" num="0074">The calculator <b>222</b> is provided with the control information <b>520</b> and the header information <b>521</b> by the interface circuit <b>100</b>. The calculator <b>222</b> is also provided with the eight setting values SV<b>1</b> to SV<b>8</b> by the settings value accumulator <b>224</b>. Using the data provided to it, the calculator <b>222</b> computes a hash value, and provides the computed hash value to the destination search module <b>210</b>.</p>
<p id="p-0071" num="0075"><figref idref="DRAWINGS">FIG. 6(A)</figref> is an illustration showing the control information <b>520</b>. The control information <b>520</b> is provided for each packet received by the interface circuit <b>100</b>. That is, the control information <b>520</b> is information associated with packet. The control information <b>520</b> includes the receiving VLAN <b>500</b>, internal packet length <b>501</b>, input line number <b>502</b>, and input L2 header length <b>503</b>. The receiving VLAN <b>500</b> indicates the number (<figref idref="DRAWINGS">FIG. 3B</figref>: VLAN-ID) of the VLAN (virtual LAN) to which the line port which received the packet belongs. The internal packet length <b>501</b> indicates the size of the packet. The input line number <b>502</b> indicates the number of the physical port that received the packet. The input L2 header length <b>503</b> indicates the size of the L2 header portion <b>522</b>, to be discussed later. This data is appropriately used for checking packet integrity and so on (not discussed in detail herein).</p>
<p id="p-0072" num="0076"><figref idref="DRAWINGS">FIG. 6(B)</figref> is an illustration showing header information <b>521</b>. The header information <b>521</b> is the header of a packet acquired by the interface circuit <b>100</b>. The header information <b>521</b> includes an L2 (Layer 2) header portion <b>522</b>, an L3 (Layer 3) header portion <b>523</b>, and an L4 (Layer 4) header portion <b>524</b>. The L2 header portion <b>522</b> includes a source MAC address <b>504</b> and a destination MAC address <b>505</b>. The L3 header portion <b>523</b> includes a source IP address <b>506</b> and a destination IP address <b>507</b>. The L4 header portion <b>524</b> includes a source port <b>508</b> and a destination port <b>509</b>. The ports <b>508</b>, <b>509</b> are data indicating so-called Layer 4 ports (also referred to herein as &#x201c;L4 ports&#x201d;) and are unrelated to the line ports of the switch devices SW.</p>
<p id="p-0073" num="0077"><figref idref="DRAWINGS">FIG. 7</figref> is an illustration depicting the internal configuration of the calculator <b>222</b>. The calculator <b>222</b> has four accumulators (buffer memories) <b>602</b> to <b>608</b>, an addition processor <b>610</b>, and eight AND-OR processors <b>631</b> to <b>638</b>.</p>
<p id="p-0074" num="0078"><figref idref="DRAWINGS">FIG. 8</figref> is a flowchart depicting the procedure of computation of hash values by the calculator <b>222</b>. <figref idref="DRAWINGS">FIG. 9</figref> is an illustration depicting a specific example of hash value computation. In the initial Step S<b>200</b>, the four accumulators <b>602</b> to <b>608</b> (<figref idref="DRAWINGS">FIG. 7</figref>) have respectively stored therein, on a temporary basis, the control information <b>520</b>, the L2 header portion <b>522</b>, the L3 header portion <b>523</b>, and the L4 header portion <b>524</b>. The field of Step S<b>200</b> in <figref idref="DRAWINGS">FIG. 9</figref> shows specific values of target data used in the computation, selected from the stored data. In Embodiment 1, the receiving VLAN, the source and destination MAC addresses, the source and destination IP addresses, and the source and destination L4 ports are utilized in the computation.</p>
<p id="p-0075" num="0079">In <figref idref="DRAWINGS">FIG. 9</figref>, the symbol &#x201c;0x&#x201d; appended to the front of values indicates that that value is represented in hexadecimal form. Similarly, the symbol &#x201c;0b&#x201d; appended to the front of values indicates that that value is represented in binary form. These symbols &#x201c;0x&#x201d; and &#x201c;0b&#x201d; have the same meaning in the following description and other drawings as well.</p>
<p id="p-0076" num="0080">In the next Step S<b>210</b>, the addition processor <b>610</b> (<figref idref="DRAWINGS">FIG. 7</figref>) performs addition of the target data stored in the accumulators <b>602</b> to <b>608</b>, in order to output an 8-bit addition result. In this process, the addition processor <b>610</b> first divides all of the target data into 8-bit pieces. The addition processor <b>610</b> then adds up all of the pieces of 8-bit data. This addition is performed without carry. An 8-bit addition result is obtained thereby. For example, in the example of <figref idref="DRAWINGS">FIG. 9</figref>, the receiving VLAN (0x123) is divided into two pieces of 8-bit data &#x201c;0x01&#x201d; and &#x201c;0x23.&#x201d; The other data is similarly divided into two pieces of 8-bit data. All of the pieces of 8-bit data obtained in this way are then added. As a result, an 8-bit addition result RS<b>10</b> is output.</p>
<p id="p-0077" num="0081">In the next Step S<b>220</b>, the eight AND-OR processors <b>631</b> to <b>638</b> (<figref idref="DRAWINGS">FIG. 7</figref>) respectively execute an AND operation using the 8-bit addition result and 8-bit setting values supplied by the settings value accumulator <b>224</b>. Then, in the next Step S<b>230</b>, the eight AND-OR processors <b>631</b> to <b>638</b> respectively perform an exclusive OR operation on each bit of the AND operation result. In this process, the eight setting values SV<b>1</b> to SV<b>8</b> are utilized respectively by the eight AND-OR processors <b>631</b> to <b>638</b>. For example, the first setting value SV<b>1</b> is utilized by the first AND-OR processor <b>631</b>, and the second setting value SV<b>2</b> is utilized by the second AND-OR processor <b>632</b>.</p>
<p id="p-0078" num="0082">The first AND-OR processor <b>631</b> first computes the AND operation result RS<b>21</b> from the first setting value SV<b>1</b> and the addition result RS<b>10</b> (<figref idref="DRAWINGS">FIG. 9</figref>). In this process, the logical product (AND operation) is computed for each individual bit. As shown in <figref idref="DRAWINGS">FIG. 7</figref>, the first AND-OR processor <b>631</b> has seven AND processors <b>620</b> to <b>627</b>. Each of the AND processors <b>620</b> to <b>627</b> executes a 1-bit AND operation at a different bit location. The first AND operation result RS<b>21</b> (8-bit) is the combination of the operation results (1-bit) of the AND processors <b>620</b> to <b>627</b>. The operator &#x201c;|&#x201d; in the field of Step S<b>220</b> in <figref idref="DRAWINGS">FIG. 9</figref> denotes logical product.</p>
<p id="p-0079" num="0083">In the next Step S<b>230</b>, the first AND-OR processor <b>631</b> computes exclusive OR for each bit of the first AND operation result RS<b>21</b>. As shown in <figref idref="DRAWINGS">FIG. 7</figref>, the first AND-OR processor <b>631</b> has an exclusive OR processor <b>629</b>. The exclusive OR processor <b>629</b> executes the exclusive OR operation using the eight operation results (1-bit) provided by the AND processors <b>620</b> to <b>627</b>. As a result, a 1-bit first exclusive OR operation result RS<b>31</b> (<figref idref="DRAWINGS">FIG. 9</figref>: S<b>230</b>) is computed. The operator &#x201c;^&#x201d; in the field of Step S<b>230</b> in <figref idref="DRAWINGS">FIG. 9</figref> denotes exclusive OR.</p>
<p id="p-0080" num="0084">The internal configuration and operation of the other AND-OR processors <b>632</b> to <b>638</b> (<figref idref="DRAWINGS">FIG. 7</figref>) are the same as those of the first AND-OR processor <b>631</b>. Specifically, in Step S<b>220</b>, AND operation results RS<b>21</b> to RS<b>28</b> are calculated respectively by the AND-OR processors <b>631</b> to <b>638</b>. In Step S<b>230</b>, exclusive OR operation results RS<b>31</b> to RS<b>38</b> are calculated respectively by the AND-OR processors <b>631</b> to <b>638</b>.</p>
<p id="p-0081" num="0085">The calculator <b>222</b> puts together the eight exclusive OR operation results RS<b>31</b> to RS<b>38</b> (1-bit), treating them as a single operation result RS<b>40</b> (8-bit). The calculator <b>222</b> then outputs the operation result RS<b>40</b> as a hash value, to the destination search module <b>210</b>.</p>
<p id="p-0082" num="0086"><figref idref="DRAWINGS">FIG. 10(A)</figref> gives a relational expression that defines the association between output physical ports and hash values. The destination search module <b>210</b> selects the output physical port (<figref idref="DRAWINGS">FIG. 4</figref>: Step S<b>120</b>) in accordance with this relational expression. Specifically, in accordance with this relational expression, the destination search module <b>210</b> first divides the &#x201c;hash value*total number of physical ports&#x201d; by 256. &#x201c;256&#x201d; is the size of value range of hash values. The quotient corresponds to the selection number in the link aggregation table <b>400</b> (<figref idref="DRAWINGS">FIG. 3</figref> (A)). In the event that the quotient is &#x201c;0,&#x201d; the physical port whose selection number is &#x201c;0&#x201d; will be selected. In the event that the quotient is &#x201c;1,&#x201d; the physical port whose selection number is &#x201c;1&#x201d; will be selected. The process is analogous for quotients of &#x201c;2&#x201d; and above.</p>
<p id="p-0083" num="0087"><figref idref="DRAWINGS">FIG. 10(B)</figref> illustrates the relationship between hash values and selection numbers. <figref idref="DRAWINGS">FIG. 10(B)</figref> shows an example in which the total number of physical ports included in the logical port is 2. In this case, &#x201c;hash value*total number of physical ports&#x201d; will assume a value in a range between 0 and 510. Accordingly, the quotient will be either 0 or 1. Specifically, where the hash value lies in a range between 0 and 127, the selection number will be 0. Where the hash value lies in a range between 128 and 255, the selection number will be 1.</p>
<p id="p-0084" num="0088">In this way, with reference to the hash value, one output physical port is selected from among multiple physical ports included in a logical port. The hash value can assume various values depending on the data (seed information) used to compute the hash value. In Embodiment 1, the hash value is computed on the basis of data representing the source (MAC address, IP address, L4 port) and data representing the destination (MAC address, IP address, L4 port). Accordingly, the communication load (output physical port) can be distributed according to the combination of source and destination. This also applies to cases where the total number of physical ports included in the logical port is 3 and above.</p>
<p id="p-0085" num="0089"><figref idref="DRAWINGS">FIG. 11</figref> is an illustration depicting a comparative example of packet relay in a network system <b>900</b>. Depending on the conditions of utilization of the network system <b>900</b>, output physical port selection may be biased towards certain physical ports. This comparative example illustrates such a case.</p>
<p id="p-0086" num="0090"><figref idref="DRAWINGS">FIG. 11</figref> depicts relay of a first packet P<b>1</b> from the sixth switch device SW<b>60</b> to the fourth switch device SW<b>40</b> via the third switch device SW<b>30</b>. <figref idref="DRAWINGS">FIG. 11</figref> also depicts relay of a second packet P<b>2</b> from the second switch device SW<b>20</b> to the fourth switch device SW<b>40</b> via the third switch device SW<b>30</b>. In this way, the network configuration is a multi-stage configuration in which the second switch device SW<b>20</b> and the sixth switch device SW<b>60</b> are connected the front end of the third switch device SW<b>30</b>.</p>
<p id="p-0087" num="0091"><figref idref="DRAWINGS">FIG. 11</figref> shows the eight setting values SV<b>1</b> to SV<b>8</b> that have been set in the third switch device SW<b>30</b> (hereinafter the set of these setting values will be termed the &#x201c;first setting value set SS<b>1</b>&#x201d;). <figref idref="DRAWINGS">FIG. 11</figref> also shows target data relating to the first packet P<b>1</b> (control information and header information). The third switch device SW<b>30</b> computes a hash value on the basis of this data. Then, on the basis of the computed hash value, the third switch device SW<b>30</b> selects a physical port for transmitting the first packet P<b>1</b>, from among the first physical port #<b>1</b> and the second physical port #<b>2</b>. In the example of <figref idref="DRAWINGS">FIG. 11</figref>, the hash value relating to the first packet P<b>1</b> is &#x201c;0x07,&#x201d; and the first physical port #<b>1</b> is selected.</p>
<p id="p-0088" num="0092">An output physical port for the second packet P<b>2</b> is selected in the same manner <figref idref="DRAWINGS">FIG. 11</figref> also shows target data relating to the second packet P<b>2</b> (control information and header information). In the example of <figref idref="DRAWINGS">FIG. 11</figref>, the hash value relating to the second packet P<b>2</b> is &#x201c;0x45,&#x201d; and the first physical port #<b>1</b> is selected.</p>
<p id="p-0089" num="0093">In this comparative example, the hash setting values set for the sixth switch device SW<b>60</b> are the same as those of the first setting value set SS<b>1</b>. Accordingly, the sixth switch device SW<b>60</b>, like the third switch device SW<b>30</b>, will select the first physical port #<b>1</b> as the output physical port for the first packet P<b>1</b>. Furthermore, the hash setting values set for the second switch device SW<b>20</b> are the same as those of the first setting value set SS<b>1</b>. Accordingly, the second switch device SW<b>20</b>, like the third switch device SW<b>30</b>, will select the first physical port #<b>1</b> as the output physical port for the second packet P<b>2</b>.</p>
<p id="p-0090" num="0094">Here, a case where the various packets are relayed from the sixth switch device SW<b>60</b> to the fourth switch device SW<b>40</b> via the third switch device SW<b>30</b> will be considered. Let it be assumed that, when a packet is transmitted from the sixth switch device SW<b>60</b>, the first physical port #<b>1</b> is selected proportionally more frequently than the second physical port #<b>2</b>. Such bias in output physical port (traffic) can occur for a number of reasons, such as due to address settings of network devices. Thus, when these packets are transmitted from the third switch device SW<b>30</b> as well, the first physical port #<b>1</b> will be selected proportionally more frequently than the second physical port #<b>2</b>. This is because the sixth switch device SW<b>60</b> and the third switch device SW<b>30</b> utilize the same first setting value set SS<b>1</b>.</p>
<p id="p-0091" num="0095">Similarly, a case where the various packets are relayed from the second switch device SW<b>20</b> to the fourth switch device SW<b>40</b> via the third switch device SW<b>30</b> will be considered. Let it be assumed that, when a packet is transmitted from the second switch device SW<b>20</b>, the first physical port #<b>1</b> is selected proportionally more frequently than the second physical port #<b>2</b>. Thus, when these packets are transmitted from the third switch device SW<b>30</b> as well, the first physical port #<b>1</b> will be selected proportionally more frequently than the second physical port #<b>2</b>. This is because the second switch device SW<b>20</b> and the third switch device SW<b>30</b> utilize the same first setting value set SS<b>1</b>.</p>
<p id="p-0092" num="0096">In this way, in the network system <b>900</b>, the three switch devices SW<b>20</b>, SW<b>30</b>, SW<b>60</b> are connected in a tree configuration. As a result, output physical port bias in the third switch device SW<b>30</b> situated in a subsequent stage represents a combination of physical port bias produced in the two switch devices SW<b>20</b>, SW<b>60</b> situated in a preceding stage. In the comparison example here, the three switch devices SW<b>20</b>, SW<b>30</b>, SW<b>60</b> utilize the same hash setting values (i.e. the same computational expression). As a result, the trend of bias in output physical port selection will be the same in all three switch devices SW<b>20</b>, SW<b>30</b>, SW<b>60</b>. Accordingly, bias in output physical port selection (traffic bias) in the third switch device SW<b>30</b> situated in a subsequent stage will be considerable as a result of compounding of bias having the same trend. Such bias will increase with a greater number of switch device SW stages.</p>
<p id="p-0093" num="0097"><figref idref="DRAWINGS">FIG. 12</figref> is an illustration depicting an embodiment of packet relay in the network system <b>900</b>. The only difference from the comparative example illustrated in <figref idref="DRAWINGS">FIG. 11</figref> is that the second setting value set SS<b>2</b> used by the third switch device SW<b>30</b> differs from the first setting value set SS<b>1</b>. Other arrangements are the same as in the comparative example. The second switch device SW<b>20</b> and the sixth switch device SW<b>60</b> utilize the first setting value set SS<b>1</b> discussed above.</p>
<p id="p-0094" num="0098">A specific example of the second setting value set SS<b>2</b> is shown in <figref idref="DRAWINGS">FIG. 12</figref>. The second setting value set SS<b>2</b> differs from the first setting value set SS<b>1</b> shown in <figref idref="DRAWINGS">FIG. 11</figref>. More accurately, the second setting value set SS<b>2</b> differs at least in part from the first setting value set SS<b>1</b>. Whereas the first setting value set SS<b>1</b> includes an eighth setting value SV<b>8</b> in which two of the bits are set to 1, the second setting value set SS<b>2</b> includes no such setting value.</p>
<p id="p-0095" num="0099">Hash values and output physical ports relating to two packets P<b>1</b>, P<b>2</b> are shown in <figref idref="DRAWINGS">FIG. 12</figref>. These hash values and output physical ports are determined by the third switch device SW<b>30</b>. The two packets P<b>1</b>, P<b>2</b> are respectively identical to the two packets P<b>1</b>, P<b>2</b> shown in <figref idref="DRAWINGS">FIG. 11</figref>. However, due to the use of a different computational expression (the second setting value set SS<b>2</b>) than that in the comparative example, the computed hash values differ from those of the comparative example. In the example of <figref idref="DRAWINGS">FIG. 12</figref>, the hash value relating to the first packet P<b>1</b> is &#x201c;0xE0,&#x201d; and the hash value relating to the second packet P<b>2</b> is &#x201c;0x22.&#x201d; As a result, the second physical port #<b>2</b> will be selected in relation to the first packet P<b>1</b>, while the first physical port #<b>1</b> will be selected in relation to the second packet P<b>2</b>.</p>
<p id="p-0096" num="0100">Where at least some of the hash setting values differ in the manner described above, that is, where the computational expression is different, different hash values will be computed for the same packets. As a result, it is possible to alter the trend of bias in output physical port selection. For example, whereas in the comparative example of <figref idref="DRAWINGS">FIG. 11</figref>, the same first physical port was selected for each of the two packets P<b>1</b>, P<b>2</b> by the third switch device SW<b>30</b>, in the embodiment of <figref idref="DRAWINGS">FIG. 12</figref>, different physical ports are selected respectively for the two packets P<b>1</b>, P<b>2</b>. In this way, even in instances where bias in output physical port selection can occur, bias in output physical port selection can be alleviated easily simply by changing the computational expression (hash setting value set). In the event of considerable bias in output physical port selection, it will suffice for the user to input an instruction to change the hash setting values, to the setting value controller <b>230</b> (<figref idref="DRAWINGS">FIG. 2</figref>).</p>
<p id="p-0097" num="0101">The condition of utilization of a network system frequently vary. For example, there are instances in which a new network device (such as a client device or server device) is connected to the network. There are also instances in which a previously used network device is removed from the network. In Embodiment 1, the computational expression is modified for the purpose of alleviating bias in output physical port selection. Consequently, bias increasing in output physical port selection in the event of a change in conditions of utilization of a network system subsequent to modification of the computational expression is suppressed.</p>
<p id="p-0098" num="0102">This can be explained as follows. Assume for example that associations between computation results and output physical ports are changed, with no modification of the computational expression, in such a way as to minimize bias in output physical port selection. In this case, the magnitude of the ranges of computation results associated with physical ports will become unequal. Specifically, for physical ports having small communication load, a wider range of computation results will be associated with the port in order to increase the communication load. Conversely, for physical ports having high communication load, a narrow range of computation results will be associated with the port in order to decrease the communication load. Now assume that condition of utilization of a network system changes. Notwithstanding the fact that the condition of utilization of a network system has changed, output physical port selection will continue to be executed on the basis of the unequal associations that were suited to the condition of utilization prior to the change. As a result, it is highly likely that bias in output physical port selection will increase. In Embodiment 1, such bias increasing in output physical port selection in the event of a change in the condition of utilization of the network system <b>900</b> can be suppressed by modifying the computational expression, without modifying associations between computation results and output physical ports.</p>
<p id="p-0099" num="0103">In the embodiment shown in <figref idref="DRAWINGS">FIG. 12</figref>, the computational expression (second setting value set SS<b>2</b>) used by the third switch device SW<b>30</b> differs from the computational expression (first setting value set SS<b>1</b>) used by the switch devices SW<b>20</b>, SW<b>60</b> of the preceding stage. Consequently, the trend of bias in output physical port selection in the third switch device SW<b>30</b> of the subsequent stage differs from the trend of bias in output physical port selection in the switch devices SW<b>20</b>, SW<b>60</b> of the preceding stage. As a result, it is possible to avoid excessive increase in bias due to bias in the switch devices SW<b>20</b>, SW<b>60</b> of the preceding stage becoming compounded with bias in the third switch device SW<b>30</b> of the subsequent stage.</p>
<p id="p-0100" num="0104">Here, in preferred practice, establishment of the hash setting value set, i.e. selection (modification) of the computational expression, will be carried out prior to initiating operation of the network system <b>900</b>. Where prior to initiating operation, the third switch device SW<b>30</b> of the subsequent stage is given a computational expression different from the computational expression of the switch devices SW<b>20</b>, SW<b>60</b> of the preceding stage, it is possible to prevent communication load bias from occurring. For example, prior to initiating operation the user could input an instruction to modify the computational expression, to one of the subsequent stage switch device and the preceding stage switch device.</p>
<p id="p-0101" num="0105">In Embodiment 1, the hash value generator <b>220</b> (<figref idref="DRAWINGS">FIG. 2</figref>) corresponds to the &#x201c;computing module&#x201d; in the claims. The setting value controller <b>230</b> corresponds to the &#x201c;modifying module&#x201d; in the claims. The data cited in Step S<b>200</b> of <figref idref="DRAWINGS">FIG. 9</figref> corresponds to the &#x201c;seed information.&#x201d; In Embodiment 1, it is possible to use computational expressions equal in number to the number of different setting value sets.</p>
<heading id="h-0008" level="1">Embodiment 2</heading>
<p id="p-0102" num="0106"><figref idref="DRAWINGS">FIG. 13</figref> is an illustration depicting a network system <b>900</b><i>c </i>in Embodiment 2. This network system <b>900</b><i>c </i>has nine switch devices RT<b>10</b> to RT<b>90</b>. In Embodiment 2, the switch devices RT<b>10</b> to RT<b>90</b> all function as &#x201c;Layer 3 switches (also called routers).&#x201d;</p>
<p id="p-0103" num="0107">In this network system <b>900</b><i>c</i>, the first switch device RT<b>10</b> and the seventh switch device RT<b>70</b> are connected by four pathways PT<b>1</b> to PT<b>4</b>. The first pathway PT<b>1</b> is a pathway that leads from the first switch device RT<b>10</b> through the three switch devices RT<b>20</b>, RT<b>30</b>, RT<b>50</b> in that order, to arrive at the seventh switch device RT<b>70</b>. The second pathway PT<b>2</b> is a pathway that leads from the first switch device RT<b>10</b> through the three switch devices RT<b>20</b>, RT<b>30</b>, RT<b>60</b> in that order, to arrive at the seventh switch device RT<b>70</b>. The third pathway PT<b>3</b> is a pathway that leads from the first switch device RT<b>10</b> through the two switch devices RT<b>20</b>, RT<b>40</b> in that order, to arrive at the seventh switch device RT<b>70</b>. The fourth pathway PT<b>4</b> is a pathway that leads from the first switch device RT<b>10</b> through the two switch devices RT<b>80</b>, RT<b>90</b> in that order, to arrive at the seventh switch device RT<b>70</b>. In the example of <figref idref="DRAWINGS">FIG. 13</figref>, the switch devices are connected by only a single physical line.</p>
<p id="p-0104" num="0108">In the switch devices RT<b>10</b> to RT<b>90</b> shown in the drawing, the physical ports are denoted by a combination of the symbol &#x201c;#&#x201d; with a number. Symbols composed of the sign &#x201c;Lc&#x201d; and a 3-digit number are appended to the lines connected to each of the switch devices RT<b>10</b> to RT<b>90</b> shown in the drawing. Here, the hundreds position indicates the number of the switch device lying towards the first switch device RT<b>10</b>. The tens position indicates the number of the switch device lying towards the seventh switch device RT<b>70</b>. The ones position indicates the number of the physical port lying towards the first switch device RT<b>10</b>. For example, the line Lc<b>471</b> is a line that connects the fourth switch device RT<b>40</b> with the seventh switch device RT<b>70</b>, and that connects to the first physical port #<b>1</b> of the fourth switch device RT<b>40</b>. This convention is employed for the other lines as well.</p>
<p id="p-0105" num="0109">The hardware configuration of the switch devices RT<b>10</b> to RT<b>90</b> is the same as for the switch devices SW shown in <figref idref="DRAWINGS">FIG. 2</figref>. Furthermore, a routing table and an ARP table are stored in the memory <b>300</b> as well as the link aggregation table <b>400</b> (<figref idref="DRAWINGS">FIG. 3</figref>) and the filter table <b>410</b>. <figref idref="DRAWINGS">FIG. 14</figref> is an illustration depicting an exemplary routing table, ARP table, and filter table. Tables used by the first switch device RT<b>10</b> are illustrated by way of example in <figref idref="DRAWINGS">FIG. 14</figref>.</p>
<p id="p-0106" num="0110">The routing table <b>430</b> shown in <figref idref="DRAWINGS">FIG. 14(A)</figref> stores associations among a destination IP address, a logical interface, a next hop IP address, and a metric. The destination IP address represents the IP address of the ultimate destination of a packet. This destination IP address is not limited to a single IP address; it is possible to set a range that includes two or more IP addresses. The IP address range is typically represented by a combination of a so-called network address and a subnet mask.</p>
<p id="p-0107" num="0111">The logical interface represents the logical interface at which the destination IP address is accessible. In Embodiment 2, narrowing down the multiple physical ports to the particular physical port by which the packet should be sent is initially carried out in units of groups composed of one or more physical ports. Such a group constitutes a logical interface. In Embodiment 2, the VLANs mentioned earlier are utilized as such groups (logical interfaces). That is, initially, the VLAN (network segment) utilized to relay the packet will be selected.</p>
<p id="p-0108" num="0112">Multiple logical interfaces may be associated with the same destination IP address. In the example of <figref idref="DRAWINGS">FIG. 14(A)</figref>, two logical interfaces (&#x201c;first VLAN <b>291</b>&#x201d; and &#x201c;second VLAN <b>292</b>&#x201d;) are associated with the same first IP address range IPrange<b>1</b> (see the first and second entries RE<b>1</b>, RE<b>2</b>). This means that regardless of which of the two logical interfaces a packet is transmitted from, the packet will be able to reach the same destination IP address. For example, in the example of <figref idref="DRAWINGS">FIG. 13</figref>, in the first switch device RT<b>10</b> the first physical port #<b>1</b> belongs to the first VLAN <b>291</b> and the second physical port #<b>2</b> belongs to the second VLAN <b>292</b>. Consider a case where a packet destined for a destination within the first IP address range IPrange<b>1</b> is to be relayed from the first switch device RT<b>10</b> to the seventh switch device RT<b>70</b>. In this case, the packet could be transmitted from either the first VLAN <b>291</b> or the second VLAN <b>292</b> (i.e. from either the first physical port #<b>1</b> or the second physical port #<b>2</b>). Furthermore, when transmitting the packet, a single logical interface is selected first. A single line port is then selected from among the multiple line ports included in the selected logical interface. The specifics of this process will be discussed later.</p>
<p id="p-0109" num="0113">Next hop refers to the next switch device. Specifically, when a packet is transmitted to the next hop, the packet can reach the final destination IP address. Each logical interface of the routing table <b>430</b> has associated with it a single next hop IP address accessible from that logical interface. For example, in the example of <figref idref="DRAWINGS">FIG. 14(A)</figref>, the IP address IPaRT<b>20</b> of the second switch device RT<b>20</b> is associated with the first VLAN <b>291</b> (first entry RE<b>1</b>). The IP address IPaRT<b>80</b> of the eighth switch device RT<b>80</b> is associated with second VLAN <b>292</b> (second entry RE<b>2</b>).</p>
<p id="p-0110" num="0114">The metric represents an order of precedence for selection of the logical interface. A smaller metric indicates higher order of precedence. As such a metric it would be possible to employ, for example, the number of hops (total number of routers through which the packet passes) or OSPF cost.</p>
<p id="p-0111" num="0115">The destination search module <b>210</b> sets up the routing table <b>430</b> in accordance with user instructions. Such instructions may be input, for example, via a control panel (not shown) provided to the switch device, or an administration terminal (not shown) connected to the switch device. Alternatively, the destination search module <b>210</b> may construct (or modify) the routing table <b>430</b> automatically. In this process the destination search module <b>210</b> may construct (or modify) the routing table <b>430</b> on the basis of information transmitted by a routing protocol such as RIP (Routing Information Protocol) or OSPF (Open Shortest Path First).</p>
<p id="p-0112" num="0116"><figref idref="DRAWINGS">FIG. 14(B)</figref> depicts an exemplary ARP table <b>440</b>. This ARP table <b>440</b> stores associations between IP addresses and MAC addresses. In the example of <figref idref="DRAWINGS">FIG. 14(B)</figref>, associations relating to the second switch device RT<b>20</b> and the eighth switch device RT<b>80</b> are stored. The destination search module <b>210</b> constructs the ARP table <b>440</b> automatically. Specifically, the destination search module <b>210</b> acquires the source IP address and the source MAC address by referring to the header information of the packets received by the switch device SW. The destination search module <b>210</b> then stores these address associations in the ARP table <b>440</b>. The destination search module <b>210</b> could also construct the ARP table <b>440</b> on the basis of information transmitted by ARP (Address Resolution Protocol).</p>
<p id="p-0113" num="0117"><figref idref="DRAWINGS">FIG. 14(C)</figref> depicts an exemplary filter table. In this example, associations relating to the MAC address MACaRT<b>20</b> of the second switch device RT<b>20</b> and the MAC address MACaRT<b>80</b> of the eighth switch device RT<b>80</b> are shown. The second switch device RT<b>20</b> is connected to the first physical port #<b>1</b> included in the first VLAN <b>291</b>. The switch device RT<b>80</b> is connected to the second physical port #<b>2</b> included in the second VLAN <b>292</b>.</p>
<p id="p-0114" num="0118"><figref idref="DRAWINGS">FIG. 15</figref> is a flowchart depicting the procedure of the destination search process in Embodiment 2. In the initial Step S<b>300</b>, the destination search module <b>210</b> (<figref idref="DRAWINGS">FIG. 2</figref>) looks up in the routing table <b>430</b> (<figref idref="DRAWINGS">FIG. 14(A)</figref>) in order to search for the logical interface (VLAN) associated with the destination IP address of the received packet. In some instances, multiple logical interfaces associated with the same destination IP address will be searched. In this case, the destination search module <b>210</b> selects the logical interface with the highest order of precedence (smallest metric).</p>
<p id="p-0115" num="0119">In the next Step S<b>310</b>, the destination search module <b>210</b> decides whether the total number of logical interfaces selected is 2 or more. In the event that the total number of logical interfaces selected in Step S<b>300</b> is &#x201c;1,&#x201d; The destination search module <b>210</b> will use that logical interface as the logical interface for output (Step S<b>330</b>). For example, in the example of <figref idref="DRAWINGS">FIG. 14(A)</figref>, in the event that the destination IP address is included in the second IP address range IPrange<b>2</b>, the third VLAN <b>300</b> will be used.</p>
<p id="p-0116" num="0120">In some instances, multiple logical interfaces having the same order of precedence (metric) may be selected in Step S<b>300</b>. For example, in the example of <figref idref="DRAWINGS">FIG. 14(A)</figref>, in the event that the destination IP address is included in the first IP address range IPrange<b>1</b>, the first VLAN <b>291</b> and the second VLAN <b>292</b> will be selected. In this case, in the next Step S<b>320</b>, the destination search module <b>210</b> will select a single logical interface on the basis of a hash value. This selection is carried out in the same manner as selection of a single physical port from among multiple physical ports included in a logical port, as described in Embodiment 1. Specifically, first, the hash value generator <b>220</b> (<figref idref="DRAWINGS">FIG. 2</figref>) generates a hash value using the control information and header information. The destination search module <b>210</b> then selects a single logical interface on the basis of the hash value. This selection is carried out in the same manner as the method employing the relational expression given in <figref idref="DRAWINGS">FIG. 10(A)</figref>.</p>
<p id="p-0117" num="0121">The single logical interface (VLAN) selected in the above manner is adopted as the logical interface to be used for transmitting the received packets (Step S<b>330</b>). Here, the use of a certain logical interface for transmitting the received packets means that the packets will be transmitted from a physical port included in the logical interface. In the present embodiment, the logical interface corresponds to the &#x201c;port group&#x201d; in the claims.</p>
<p id="p-0118" num="0122">In the next Step S<b>340</b>, the destination search module <b>210</b>, referring to the routing table <b>430</b> (FIG. <b>13</b>(A)), acquires the IP address of the next hop associated with the output logical interface. The destination search module <b>210</b> then refers to the ARP table <b>440</b> (<figref idref="DRAWINGS">FIG. 14(B)</figref>) in order to acquire the MAC address of the next hop from the IP address of the next hop.</p>
<p id="p-0119" num="0123">In the next Step S<b>350</b>, the destination search module <b>210</b> determines a physical port for transmitting the packets to the next hop. This determination is made in the same manner as in Embodiment 1 illustrated in <figref idref="DRAWINGS">FIG. 4</figref>. In this process, the line port to which the MAC address of the next hop belongs is selected from the VLAN (logical interface) that was determined in Step S<b>330</b>. The final output physical port is then selected from the selected line port. Next, the packet is transmitted from the selected output physical port to the next hop.</p>
<p id="p-0120" num="0124">Next, consider a case in which, in the example of <figref idref="DRAWINGS">FIG. 13</figref>, a packet is relayed from the first switch device RT<b>10</b> to the seventh switch device RT<b>70</b>. Here, in order to simplify the discussion let it be assumed that the link aggregation function (logical port) is not used. The first IP address range IPrange<b>1</b> of <figref idref="DRAWINGS">FIG. 14(A)</figref> is assumed to include the destination IP address of the received packet.</p>
<p id="p-0121" num="0125">In this case, in the first switch device RT<b>10</b>, the destination search module <b>210</b> will initially select a single logical interface from among the two logical interfaces VLAN <b>291</b>, <b>292</b>, on the basis of the hash value. Next, the destination search module <b>210</b> will select a single physical port for transmitting the packet to the next hop corresponding to the single selected logical interface. For example, where the first VLAN <b>291</b> has been selected, the first physical port #<b>1</b> connected to the next hop RT<b>20</b> will be selected (<figref idref="DRAWINGS">FIG. 14(C)</figref>). The packet will then be transmitted from the first physical port #<b>1</b> to the second switch device RT<b>20</b>. On the other hand, where the second VLAN <b>292</b> has been selected, the second physical port #<b>2</b> connected to the eighth switch device RT<b>80</b> will be selected. The packet will then be transmitted from the second physical port #<b>2</b> to the eighth switch device RT<b>80</b>. In the event that in the filter table <b>410</b> (<figref idref="DRAWINGS">FIG. 14(C)</figref>) the line port associated with the next hop MAC address is a logical port, the destination search module <b>210</b> will select one physical port from among the multiple physical ports included in the logical port. This selection is carried out in the same manner as in Embodiment 1.</p>
<p id="p-0122" num="0126">Either of two physical ports #<b>1</b>, #<b>2</b> may be selected in the second switch device RT<b>20</b> and the third switch device RT<b>30</b> as well. In Embodiment 2, let it be assumed that in the switch devices RT<b>20</b>, RT<b>30</b>, the physical port #<b>1</b>, #<b>2</b> are included in different logical interfaces (VLANs) respectively, and the order of precedence (metric) of these two logical interfaces is the same. As a result, in each of the switch devices RT<b>20</b>, RT<b>30</b>, physical port selection is carried out in the same manner as in the first switch device RT<b>10</b>.</p>
<p id="p-0123" num="0127">Consider a case where various packets are being relayed from the first switch device RT<b>10</b> to the seventh switch device RT<b>70</b>. Let it be assumed that identical computational expressions (hash setting values) are used in all three switch devices RT<b>10</b>, RT<b>20</b>, RT<b>30</b>. In this case, as with the comparative example illustrated in <figref idref="DRAWINGS">FIG. 11</figref>, there is a high probability that the pathway for packet transfer will become biased towards a specific pathway. For example, let it be assumed that in the first switch device RT<b>10</b>, the first physical port #<b>1</b> is selected with proportionally high frequency. Thus, in the second switch device RT<b>20</b>, which utilizes the same computational expression, there will be a similar high probability that physical port selection will become biased towards a particular physical port. Here, let it be assumed that the first physical port #<b>1</b> is selected with proportionally high frequency. Similarly, in the third switch device RT<b>30</b>, which also utilizes the same computational expression, there will also exist a high probability that physical port selection will become biased towards a particular physical port. Here, let it be assumed that the first physical port #<b>1</b> is selected with proportionally high frequency. In this case, the packet transmission pathway will become biased towards the first pathway PT<b>1</b>.</p>
<p id="p-0124" num="0128">Now consider the case where different computational expressions (hash setting values) are used in each of the three switch devices RT<b>10</b>, RT<b>20</b>, RT<b>30</b>. In this case, the trend of bias in output physical port selection will differ among the switch devices RT<b>10</b>, RT<b>20</b>, RT<b>30</b>. Consequently, as in Embodiment 1 illustrated in <figref idref="DRAWINGS">FIG. 12</figref>, it will be possible to ameliorate bias in output physical port selection, i.e. bias of the packet transmission pathway.</p>
<p id="p-0125" num="0129">In this way, in the switch devices RT<b>10</b> to RT<b>90</b> of Embodiment 2, the computational expressions for hash values (hash setting values) are variable. As a result, it is possible to alter the trend of bias towards a specific logical interface (VLAN) for packet transmission. As a result, it is possible to alter the trend of bias towards a specific network segment utilized in packet relay, thus ameliorating bias in the communication load.</p>
<p id="p-0126" num="0130">In some instances like that depicted in <figref idref="DRAWINGS">FIG. 13</figref>, redundant communication pathways are built by series-connection of multiple switch devices. According the present embodiment, the computational expression (hash setting value) in preceding stage switch devices can be made to differ from the computational expression (hash setting value) in subsequent stage switch devices in such instances as well. It will be possible thereby to suppress bias increasing in communication load caused by compounding bias in preceding stage switch devices and bias in subsequent stage switch devices.</p>
<p id="p-0127" num="0131">In Embodiment 2 illustrated in <figref idref="DRAWINGS">FIG. 13</figref>, the switch devices are connected by only a single physical line; however, the switch devices could be connected using logical ports instead. Where a single logical interface includes multiple physical ports, it would be conceivable to establish the same order of precedence (metric) for each of the multiple physical ports.</p>
<p id="p-0128" num="0132">In the present embodiment, both the LA hash values and multi-path hash values are generated by the same hash value generator <b>220</b> (<figref idref="DRAWINGS">FIG. 2</figref>). However, it would be possible to instead independently provide a first hash value generator for generating LA hash values, and a second hash value generator for generating multi-path hash values. Here, LA hash values refer to hash values for the purpose of selecting an output physical port from a single logical port. Multi-path hash values refer to hash values for the purpose of selecting an output logical interface from among multiple logical interfaces having the same order of precedence. In preferred practice the first and second hash value generators will employ mutually different computational expressions. It is possible thereby to prevent the output logical interface and the physical port selected from the logical port from becoming biased in the same manner.</p>
<p id="p-0129" num="0133">Here, it would be acceptable to provide a single computational expression utilizable for the purpose of LA hash values. However, for the purpose of ameliorating biased communication load, it would be preferable for computational expressions utilizable for the purpose of LA hash values to number two or more.</p>
<p id="p-0130" num="0134">In the present embodiment, any of various methods may be employed as the method for selecting the output physical port from among multiple physical ports included in a single logical port, where the logical port has been selected based on a hash value. For example, a prescribed physical port designated by the user may be selected. In either case, since selection of the logical interface which includes the output physical port is made on the basis of a hash value, it can be said that the physical port which is ultimately selected is selected on the basis of a hash value as well. &#x201c;Selecting a physical port for transfer of a received packet from among a plurality of candidate ports on the basis of computation results&#x201d; refers in the broad sense to instances in which the output physical port is designated from the computation results alone, and to instances in which the output physical port is designated using the computation results plus other additional information. In the latter instance, it is preferable to designate (select) a smaller number of candidate ports from among the multiple candidate ports, on the basis of the computation results.</p>
<heading id="h-0009" level="1">C. Embodiment 3</heading>
<p id="p-0131" num="0135"><figref idref="DRAWINGS">FIG. 16</figref> is an illustration depicting the configuration of a header processor <b>200</b><i>a </i>in Embodiment 3. There are two points of difference from the header processor <b>200</b> of Embodiment 1 illustrated in <figref idref="DRAWINGS">FIG. 2</figref>. The first difference is that a function selector <b>240</b> is provided in place of the setting value controller <b>230</b>. The second difference is that the hash value generator <b>220</b><i>a </i>is capable of utilizing three mutually different hash functions HF<b>1</b> to HF<b>3</b>. The other configuration of the switch devices is the same as that of the switch devices SW of Embodiment 1 illustrated in <figref idref="DRAWINGS">FIG. 2</figref>. In <figref idref="DRAWINGS">FIG. 16</figref>, only the header processor <b>200</b><i>a </i>is shown by way of the constituent elements of the switch device; the other elements are omitted from the drawing.</p>
<p id="p-0132" num="0136">The function selector <b>240</b> selects one hash function from among the three hash functions HF<b>1</b> to HF<b>3</b>. The hash value generator <b>220</b><i>a </i>then computes hash values on the basis of the hash function selected by the function selector <b>240</b>. Various mutually different hash functions may be employed as the hash functions HF<b>1</b> to HF<b>3</b>. The function selector <b>240</b> selects one of the hash functions in accordance with user instruction. Alternatively, the function selector <b>240</b> could select one hash function automatically. For example, the hash function could be selected at random.</p>
<p id="p-0133" num="0137">In Embodiment 3, the hash value generator <b>220</b><i>a </i>corresponds to the &#x201c;computing module&#x201d; in the claims. The function selector <b>240</b> corresponds to the &#x201c;modifying module&#x201d; in the claims. The total number of utilizable computational expressions is not limited to 3, and it would be possible to employ any number of 2 or greater.</p>
<heading id="h-0010" level="1">Embodiment 4</heading>
<p id="p-0134" num="0138"><figref idref="DRAWINGS">FIG. 17</figref> is an illustration depicting the configuration of a header processor <b>200</b><i>b </i>in Embodiment 4. The only difference from the header processor <b>200</b> of Embodiment 1 illustrated in <figref idref="DRAWINGS">FIG. 2</figref> is that a correction controller <b>250</b> and a data corrector <b>260</b> are provided in place of the setting value controller <b>230</b>. The hash value generator <b>220</b> generates hash values according to a prescribed hash function.</p>
<p id="p-0135" num="0139">The data corrector <b>260</b> performs correction of at least a portion of the seed information (in the present embodiment, header information and control information) used in computing the hash values. For example, it may invert bit data at prescribed bit locations in the source MAC address and destination MAC address respectively. Furthermore, an predetermined additional value may be added to the receiving VLAN (this operation may be performed without carry). As a result, even where hash values are generated for the same packet, the hash value that will be generated can be varied by correcting the data supplied to the hash value generator <b>220</b>. That is, in Embodiment 4, the computational expression is determined overall by data correction performed by the data corrector <b>260</b>, and by the hash function used by the hash value generator <b>220</b>.</p>
<p id="p-0136" num="0140">Correction by the data corrector <b>260</b> is controlled by the correction controller <b>250</b>. For example, the bit locations for inverting bit data and the additional values mentioned above may be established by the correction controller <b>250</b>. The computational expression is modified by changing these parameters. The correction controller <b>250</b> makes these settings (modifications) according to user instructions. Alternatively, the correction controller <b>250</b> could make these settings automatically. For example, the correction controller <b>250</b> could determine the bit locations and additional values at random.</p>
<p id="p-0137" num="0141">In Embodiment 4, the entirety of the hash value generator <b>220</b> and the data corrector <b>260</b> correspond to the &#x201c;computing module&#x201d; in the claims. The correction controller <b>250</b> corresponds to the &#x201c;modifying module&#x201d; in the claims. The method of correcting the seed information in this way is not limited to methods involving inversion of bit data at prescribed bit locations, or methods involving addition of an additional value, and various other methods may be used. For example, data may be corrected by a division operation.</p>
<heading id="h-0011" level="1">E: Variants</heading>
<p id="p-0138" num="0142">The constituent elements of the preceding embodiments, apart from element claimed in the independent claims, are additional elements and can be dispensed with where appropriate. The invention is in no wise limited to the embodiments described hereinabove and can be reduced to practice in various other ways without departing from the scope and spirit thereof, as in the following variants.</p>
<heading id="h-0012" level="1">Variant 1</heading>
<p id="p-0139" num="0143">In the preceding embodiments, the computational expression used to select a physical port for output (transmission) purposes from among multiple physical ports included in a logical port is not limited to the computational expression shown in <figref idref="DRAWINGS">FIGS. 8 and 9</figref>, it being possible to employ various computational expressions for the purpose of computing representative values from the seed information. In preferred practice, a hash function will be employed as the computational expression. A hash function is a function for generating pseudo-random numbers (hash values) of fixed length from the seed information. The hash function is not limited to the function (computational expression) shown in <figref idref="DRAWINGS">FIGS. 8 and 9</figref>, it being possible to employ various other functions such as MD5 (Message Digest 5), SHA-1 (Secure Hash Algorithm 1), SHA-2, or the like. Where a hash function is employed, value range bias in the computation results (hash values) is small. Furthermore, similar computation results (hash values) are not readily generated from the similar seed information. Accordingly, where a hash function is employed as the computational expression, it is a simple matter to avoid bias towards a specific physical port in the selection of the physical port. The above is applicable analogously to computational expressions used for selecting an output (transmission) logical interface from among multiple logical interfaces.</p>
<heading id="h-0013" level="1">Variant 2</heading>
<p id="p-0140" num="0144">In the preceding embodiments, the seed information for the computation used to select an output physical port from among multiple physical ports included in a logical port is not limited to the information shown in Step S<b>200</b> of <figref idref="DRAWINGS">FIG. 9</figref>; it is possible to employ various types of information that includes at least one of the destination information and source information associated with the packets. For example, the computation may be performed using source information only, without using destination information. By so doing, multiple physical ports can be assigned for use according to the source. Conversely, the computation may be performed using destination information only, without using source information. By so doing, multiple physical ports can be assigned for use according to the destination. It is also possible to perform computations using header information only, without using control information.</p>
<p id="p-0141" num="0145">The reason for using information that includes at lease one of destination information and source information as the seed information is as follows. The purpose is to prevent rearrangement of the transfer sequence of multiple packets transferred between two network devices, due to relaying of the packets by network relay devices.</p>
<p id="p-0142" num="0146">The packet communication method herein is not limited to methods employing Ethernet&#x2122; or methods using Internet Protocol, it being possible to employ any communication method. In any case, various types of information relating to destination (e.g. any information from among the destination MAC address, destination IP address, or destination port (L4 port)) can be used as destination information. Likewise, various types of information relating to source (e.g. any information from among the source MAC address, source IP address, or source port (L4 port)) can be used as source information.</p>
<p id="p-0143" num="0147">The above discussion is applicable analogously to the seed information in computations used for selecting an output logical interface from among multiple logical interfaces.</p>
<heading id="h-0014" level="1">Variant 3</heading>
<p id="p-0144" num="0148">In the preceding embodiments, the method for selecting a physical port on the basis of computation results is not limited to the method illustrated in <figref idref="DRAWINGS">FIG. 10</figref>, and various other methods may be employed. For example, where the total number of candidate ports is denoted by &#x201c;n&#x201d; (n is an integer equal to 2 or greater), the remainder obtained by division of the computation result by &#x201c;n&#x201d; could be employed as the selection number. In general, associations between computation results and physical ports can be determined by any method. However, in order to avoid bias of selected ports towards specific ports under various conditions of utilization of a network system, it is preferable for ranges of computation result associated with the physical ports to be equal in size. This applies to methods for selecting logical interfaces based on computation results as well.</p>
<heading id="h-0015" level="1">Variant 4</heading>
<p id="p-0145" num="0149">In the preceding embodiments, the computing module may utilize at least two mutually different computational expressions. However, in order to avoid bias in output physical port selection under various conditions of utilization of a network system, it is preferable that the computing module be capable of using three or more mutually different computational expressions. This applies to methods for selecting logical interfaces based on computation results as well.</p>
<heading id="h-0016" level="1">Variant 5</heading>
<p id="p-0146" num="0150">In the preceding embodiments, any computational expressions selected from among a number of serviceable computational expressions may be employed as the computational expressions used by the computing module. However, in preferred practice selection of computational expressions will be done in such a way as to minimize bias in output physical port selection. For example, the destination search module <b>210</b> may record the level of traffic in each physical port (e.g. the number of transmitted packets) in memory, for presentation to the user. In the event of appreciable imbalance in the presented traffic levels, the user may input to the modifying module an instruction to modify the computational expression. Presentation of traffic levels and input of computational expression modification commands may be accomplished through a control panel (not shown) provided to the switch device, or an administration terminal (not shown) connected to the switch device.</p>
<p id="p-0147" num="0151">Alternatively, the modifying module could modify the computational expression automatically. For example, in the event that imbalance of traffic levels exceeds a prescribed imbalance level, the modifying module may modify the computational expression automatically. Specifically, at prescribed intervals (e.g. one day), the modifying module may modify the computational expression automatically in the event that the differential between the maximum value and minimum value of cumulative traffic on physical ports exceeds a prescribed threshold value.</p>
<p id="p-0148" num="0152">The above discussion applies to methods for selecting logical interfaces based on computation results as well.</p>
<heading id="h-0017" level="1">Variant 6</heading>
<p id="p-0149" num="0153">In certain instances, as in the preceding embodiments, multiple switch devices (network relay devices) may be connected directly. In such instances, it is preferable for two switch devices connected to one another to use different computational expressions. By so doing, it will possible to suppress bias increasing caused by compounding bias in output physical port selection by preceding stage switch devices and bias in output physical port selection by subsequent stage switch devices.</p>
<p id="p-0150" num="0154">Where two switch devices are connected to one another, the user may set the computational expressions of the two switch devices so that the computational expressions differ from each other. Specifically, the user may input a computational expression modification command to at least one of the two switch devices. In preferred practice this setting (modification) of computational expressions will be carried out prior to initiating operation of the network system.</p>
<p id="p-0151" num="0155">Alternatively, the computational expressions of the two switch devices may be made to differ from each other by automatically modifying the computational expression of at least one of the two switch devices. For example, the modifying modules of the switch devices may exchange information relating to the computational expressions used by the switch devices to which they respectively belong. Such exchange may take place through the lines connecting the switch devices. Then, one of the modifying modules may identify the computational expression used by the other switch device, and automatically modify the computational expression used by its own switch device to a computational expression that differs from the identified computational expression. Any method can be employed as the method for selecting, from among the two modifying modules, the modifying module that will modify the computational expression in this process. For example, the modifying module belonging to the switch device having the smaller unique identifying number may be selected.</p>
<p id="p-0152" num="0156">In preferred practice, this process of modifying the computational expressions executed by the two switch devices (modifying modules) will be carried out automatically prior to initiating operation of the network system. For example, the modification process may be initiated in response to connection of the two switch devices by a line. However, the modification process could also be initiated in response to a user instruction. It is possible to use any process capable of causing the switch devices to utilize mutually different computational expressions, as the modification process for this purpose. Also, any method could be used as the communication method for the purpose of the modification process. For example, information could be exchanged using the HTTP protocol.</p>
<p id="p-0153" num="0157">Increased bias due to compounding of bias becomes increasing prominent with greater numbers of series-connected switch devices. Consequently, where the number of series-connected switch devices is three or more, it will be preferable for two switch devices connected to one another to use different computational expressions. In especially preferred practice, any combination of two switch devices among all of the series-connected switch devices will use different computational expressions.</p>
<heading id="h-0018" level="1">Variant 7</heading>
<p id="p-0154" num="0158">In Embodiment 2 illustrated in <figref idref="DRAWINGS">FIGS. 13 to 15</figref>, the logical interfaces (port groups) are not limited to VLANs, and it would be possible to employ any arbitrarily established groups of physical ports. For example, the logical ports discussed previously could be employed as port groups. In this case, the logical port for use in transmitting a received packet may be selected on the basis of the computation results, from among multiple logical ports that include physical ports (candidate ports) able to access the destination of the received packet. However, where switch devices that divide a network by VLANs are employed, in many instances the packet communication pathway will differ appreciably depending on the VLAN used for packet transmission. Consequently, where VLANs are employed as logical interfaces, it is a simple matter to alleviate communication pathway bias, since VLANs are selected on the basis of computation results. Moreover, it is acceptable for a single physical port to belong to multiple output port groups. For example, where so-called &#x201c;Tag-VLAN&#x201d; is employed, a single physical port may belong to multiple VLANs (logical interfaces).</p>
<heading id="h-0019" level="1">Variant 8</heading>
<p id="p-0155" num="0159">Network system configurations are not limited to the network system <b>900</b> shown in <figref idref="DRAWINGS">FIG. 1</figref> or the network system <b>900</b><i>c </i>shown in <figref idref="DRAWINGS">FIG. 13</figref>, and various other configurations may be employed. The number of switch devices (network relay devices) and the number of lines may also be selected arbitrarily. Pathways may be constructed arbitrarily as well. For example, in Embodiment 2 of <figref idref="DRAWINGS">FIG. 13</figref>, the pathway leading to the same destination IP address through a single switch device could be branched through three or more mutually different physical ports belonging to that switch device. These multiple physical ports could be included in mutually different logical interfaces (e.g. VLANs). Likewise, switch device configuration is not limited to the configurations shown in <figref idref="DRAWINGS">FIG. 2</figref>, <b>16</b>, or <b>17</b>, and various other configurations may be employed. For example, various configurations that modify computational expressions manually or automatically could be employed as the configuration for the modifying module.</p>
<p id="p-0156" num="0160">In the preceding embodiments, switch devices (network relay devices) may execute both processes in a Layer 2 switch capacity, and processes in a Layer 3 switch capacity. In this case, there could be independently provided a first header processor for executing processes in a Layer 2 switch capacity, and a second header processor for executing processes in a Layer 3 switch capacity.</p>
<heading id="h-0020" level="1">Variant 9</heading>
<p id="p-0157" num="0161">In the preceding embodiments, some of the arrangements realized through hardware could be replaced by software, and conversely some of the arrangements realized through software could be replaced by hardware. For example, the header processor <b>200</b> of <figref idref="DRAWINGS">FIG. 2</figref> could be replaced by a computer having a CPU and memory. In this case, the various functions of the header processor <b>200</b> would be achieved through execution of a program by the CPU.</p>
<p id="p-0158" num="0162">Although the present invention has been described and illustrated in detail, it is clearly understood that the same is by way of illustration and example only and is not to be taken by way of limitation, the spirit and scope of the present invention being limited only by the terms of the appended claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A system having a plurality of network devices, each of the plurality of network devices comprising:
<claim-text>an interface module including a plurality of physical ports to transmit and receive packets;</claim-text>
<claim-text>a computing module configured to execute a computing process with a computational expression using seed information, the seed information including at least one of destination information and source information associated with a received packet;</claim-text>
<claim-text>a destination search module configured to, based on the result of the computation, select a physical port for transmission of the received packet from a plurality of candidate ports among the plurality of physical ports; and</claim-text>
<claim-text>a modifying module configured to modify the computational expression,</claim-text>
<claim-text>wherein the plurality of network devices include a preceding-stage network device and a subsequent-stage network device, the subsequent-stage network device being directly coupled to the preceding-stage network device with physical wiring, and</claim-text>
<claim-text>wherein the subsequent-stage network device and the preceding-stage network device are configured to use different expressions in the computing process.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>some of the plurality of physical ports are aggregated to make a logical port such that a plurality of logical ports are formed from the plurality of physical ports;</claim-text>
<claim-text>the computational expression includes a first computational expression selecting one logical port from among the plurality of logical ports and a second computational expression selecting one physical port from among the plurality of physical ports.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The system according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein
<claim-text>the destination search module selects the one logical port among the plurality of logical ports according to the first computational expression, and selects the one physical port among the plurality of physical ports according to the second computational expression as destination.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The system according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein
<claim-text>the first computational expression and the second computational expression are different from each other.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The system according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein
<claim-text>the first computational expression and the second computational expression are formulated to use different pieces of seed information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A method effected in a system having a plurality of network devices, each of the plurality of network devices including an interface module including a plurality of physical ports to transmit and receive packets, each network device effecting the method comprising:
<claim-text>executing a computing process with a computational expression using seed information to effect a computation, the seed information including at least one of destination information and source information associated with a received packet;</claim-text>
<claim-text>selecting, based on the result of the computation, a physical port for transmission of the received packet from a plurality of candidate ports among the plurality of physical ports; and</claim-text>
<claim-text>modifying the computational expression,</claim-text>
<claim-text>wherein the plurality of network devices include a preceding-stage network device and a subsequent-stage network device, the subsequent-stage network device being directly coupled to the preceding-stage network device with physical wiring, and</claim-text>
<claim-text>wherein the subsequent-stage network device and the preceding-stage network device are configured to use different expressions in the computing process.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method according to <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein
<claim-text>some of the plurality of physical ports are aggregated to make a logical port such that a plurality of logical ports are formed from the plurality of physical ports;</claim-text>
<claim-text>the computational expression includes a first computational expression selecting one logical port from among the plurality of logical ports and a second computational expression selecting one physical port from among the plurality of physical ports.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein
<claim-text>the selecting operation selects the one logical port among the plurality of logical ports according to the first computational expression, and selects the one physical port among the plurality of physical ports according to the second computational expression as a destination.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein
<claim-text>the first computational expression and the second computational expression are different from each other.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein
<claim-text>the first computational expression and the second computational expression are formulated to use different pieces of seed information.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
