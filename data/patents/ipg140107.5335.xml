<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626436-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626436</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13340008</doc-number>
<date>20111229</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>61</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>01</class>
<subclass>C</subclass>
<main-group>21</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>701408</main-classification>
</classification-national>
<invention-title id="d2e53">Navigation system with constrained resource route planning optimizer and method of operation thereof</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5568390</doc-number>
<kind>A</kind>
<name>Hirota et al.</name>
<date>19961000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5742922</doc-number>
<kind>A</kind>
<name>Kim</name>
<date>19980400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5832400</doc-number>
<kind>A</kind>
<name>Takahashi et al.</name>
<date>19981100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>701 53</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6065511</doc-number>
<kind>A</kind>
<name>McClintock</name>
<date>20000500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6418398</doc-number>
<kind>B1</kind>
<name>Dueck et al.</name>
<date>20020700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6591185</doc-number>
<kind>B1</kind>
<name>Polidi et al.</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6633544</doc-number>
<kind>B1</kind>
<name>Rexford et al.</name>
<date>20031000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6691025</doc-number>
<kind>B2</kind>
<name>Reimer</name>
<date>20040200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>701123</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6714857</doc-number>
<kind>B2</kind>
<name>Kapolka et al.</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6812888</doc-number>
<kind>B2</kind>
<name>Drury et al.</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6859927</doc-number>
<kind>B2</kind>
<name>Moody et al.</name>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>6996469</doc-number>
<kind>B2</kind>
<name>Lau et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>7219159</doc-number>
<kind>B2</kind>
<name>Mouri et al.</name>
<date>20070500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>7412313</doc-number>
<kind>B2</kind>
<name>Isaac</name>
<date>20080800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>7440840</doc-number>
<kind>B2</kind>
<name>Tsukamoto et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>7474960</doc-number>
<kind>B1</kind>
<name>Nesbitt</name>
<date>20090100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>7660651</doc-number>
<kind>B2</kind>
<name>Zhong</name>
<date>20100200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>7756631</doc-number>
<kind>B2</kind>
<name>Chavira et al.</name>
<date>20100700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>7778769</doc-number>
<kind>B2</kind>
<name>Boss et al.</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>7831433</doc-number>
<kind>B1</kind>
<name>Belvin et al.</name>
<date>20101100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>7849944</doc-number>
<kind>B2</kind>
<name>DeVault</name>
<date>20101200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>180 6529</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>7945386</doc-number>
<kind>B2</kind>
<name>Lokshin et al.</name>
<date>20110500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>8005610</doc-number>
<kind>B2</kind>
<name>Bast et al.</name>
<date>20110800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>8014908</doc-number>
<kind>B2</kind>
<name>Clarke et al.</name>
<date>20110900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>8069127</doc-number>
<kind>B2</kind>
<name>Taylor et al.</name>
<date>20111100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>2003/0033582</doc-number>
<kind>A1</kind>
<name>Klein et al.</name>
<date>20030200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00027">
<document-id>
<country>US</country>
<doc-number>2004/0062963</doc-number>
<kind>A1</kind>
<name>Umayahara et al.</name>
<date>20040400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>429 22</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00028">
<document-id>
<country>US</country>
<doc-number>2006/0031007</doc-number>
<kind>A1</kind>
<name>Agnew et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00029">
<document-id>
<country>US</country>
<doc-number>2006/0058955</doc-number>
<kind>A1</kind>
<name>Mehren</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00030">
<document-id>
<country>US</country>
<doc-number>2006/0278449</doc-number>
<kind>A1</kind>
<name>Torre-Bueno</name>
<date>20061200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>180 652</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00031">
<document-id>
<country>US</country>
<doc-number>2007/0021909</doc-number>
<kind>A1</kind>
<name>Matsuda</name>
<date>20070100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00032">
<document-id>
<country>US</country>
<doc-number>2007/0106465</doc-number>
<kind>A1</kind>
<name>Adam et al.</name>
<date>20070500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00033">
<document-id>
<country>US</country>
<doc-number>2008/0133120</doc-number>
<kind>A1</kind>
<name>Romanick</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>701123</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00034">
<document-id>
<country>US</country>
<doc-number>2008/0249667</doc-number>
<kind>A1</kind>
<name>Horvitz et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>701  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00035">
<document-id>
<country>US</country>
<doc-number>2008/0250423</doc-number>
<kind>A1</kind>
<name>Bush et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00036">
<document-id>
<country>US</country>
<doc-number>2008/0270016</doc-number>
<kind>A1</kind>
<name>Proietty et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>701123</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00037">
<document-id>
<country>US</country>
<doc-number>2009/0005974</doc-number>
<kind>A1</kind>
<name>Lenneman et al.</name>
<date>20090100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00038">
<document-id>
<country>US</country>
<doc-number>2009/0063045</doc-number>
<kind>A1</kind>
<name>Figueroa et al.</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>701210</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00039">
<document-id>
<country>US</country>
<doc-number>2009/0157289</doc-number>
<kind>A1</kind>
<name>Graessley</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>701123</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00040">
<document-id>
<country>US</country>
<doc-number>2009/0164114</doc-number>
<kind>A1</kind>
<name>Morikawa et al.</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00041">
<document-id>
<country>US</country>
<doc-number>2009/0198505</doc-number>
<kind>A1</kind>
<name>Gipps et al.</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00042">
<document-id>
<country>US</country>
<doc-number>2009/0204316</doc-number>
<kind>A1</kind>
<name>Klampfl et al.</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>701123</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00043">
<document-id>
<country>US</country>
<doc-number>2009/0276150</doc-number>
<kind>A1</kind>
<name>Vorlander</name>
<date>20091100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00044">
<document-id>
<country>US</country>
<doc-number>2010/0036606</doc-number>
<kind>A1</kind>
<name>Jones</name>
<date>20100200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00045">
<document-id>
<country>US</country>
<doc-number>2010/0049397</doc-number>
<kind>A1</kind>
<name>Liu et al.</name>
<date>20100200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>701 33</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00046">
<document-id>
<country>US</country>
<doc-number>2010/0082246</doc-number>
<kind>A1</kind>
<name>Crane</name>
<date>20100400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>701209</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00047">
<document-id>
<country>US</country>
<doc-number>2010/0198508</doc-number>
<kind>A1</kind>
<name>Tang</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00048">
<document-id>
<country>US</country>
<doc-number>2010/0211643</doc-number>
<kind>A1</kind>
<name>Lowenthal et al.</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00049">
<document-id>
<country>US</country>
<doc-number>2011/0208417</doc-number>
<kind>A1</kind>
<name>Fink et al.</name>
<date>20110800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>701200</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00050">
<document-id>
<country>US</country>
<doc-number>2011/0288765</doc-number>
<kind>A1</kind>
<name>Conway</name>
<date>20111100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>701201</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00051">
<document-id>
<country>US</country>
<doc-number>2012/0173134</doc-number>
<kind>A1</kind>
<name>Gutman</name>
<date>20120700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00052">
<document-id>
<country>US</country>
<doc-number>2012/0173135</doc-number>
<kind>A1</kind>
<name>Gutman</name>
<date>20120700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00053">
<document-id>
<country>US</country>
<doc-number>2012/0181985</doc-number>
<kind>A1</kind>
<name>Lowenthal et al.</name>
<date>20120700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00054">
<document-id>
<country>WO</country>
<doc-number>2007059781</doc-number>
<kind>A1</kind>
<date>20070500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00055">
<othercit>Delling et al., &#x201c;High-Performance Multi-Level Graphs&#x201d;, &#x201c;Institut fur Theoretische Informatik, Lehrstuhl fur Algorithmik&#x201d;, Aug. 28, 2006, pp. 1-14, Publisher: Universitat Karlsruhe, Published in: Karlsruhe, Germany.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00056">
<othercit>Goldberg et al., &#x201c;Better Landmarks Within Reach&#x201d;, 2007, pp. 38-51, Springer-Verlag Berlin Heidelberg, Microsoft Research Silicon Valley, 1065 La Avenida, Mountain View, CA 94043, USA.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00057">
<othercit>Ron Gutman, &#x201c;Reach-based Routing: A New Approach to Shortest Path Algorithms Optimized for Road Networks&#x201d;, Jan. 6, 2004, p. 12, Published in: Emeryville, CA, USA, http://www.siam.org/meetings/alenex04/abstacts/rgutman1.pdf.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00058">
<othercit>Dominik Schultes, &#x201c;Route Planning in Road Networks&#x201d;, Feb. 7, 2008, pp. 235 pgs, Publisher: von der Fakultat fur Informatik der Universitat Fridericiana zu Karlsruhe, Published in: Karlsruhe, Germany.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>48</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>701408</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>12</number-of-drawing-sheets>
<number-of-figures>12</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61428847</doc-number>
<date>20101230</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120173135</doc-number>
<kind>A1</kind>
<date>20120705</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Gutman</last-name>
<first-name>Ronald David</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Gutman</last-name>
<first-name>Ronald David</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>IP Investment Law Group</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Telenav, Inc.</orgname>
<role>02</role>
<address>
<city>Sunnyvale</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Tarcza</last-name>
<first-name>Thomas</first-name>
<department>3663</department>
</primary-examiner>
<assistant-examiner>
<last-name>Dunn</last-name>
<first-name>Alex C</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method of operation of a navigation system includes: setting a predetermined arrival level for arriving at a replenishment location; calculating an estimated arrival level for arriving at the replenishment location; generating target location based on the estimated arrival level meeting or exceeding the predetermined arrival level; and generating a travel route to a destination based on selecting the replenishment location from the target location for displaying on a device.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="179.41mm" wi="260.60mm" file="US08626436-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="235.54mm" wi="188.30mm" file="US08626436-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="264.08mm" wi="176.78mm" orientation="landscape" file="US08626436-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="261.87mm" wi="182.80mm" orientation="landscape" file="US08626436-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="225.13mm" wi="160.87mm" orientation="landscape" file="US08626436-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="230.55mm" wi="94.40mm" file="US08626436-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="247.57mm" wi="165.27mm" file="US08626436-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="241.55mm" wi="169.67mm" file="US08626436-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="172.97mm" wi="95.50mm" file="US08626436-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="244.35mm" wi="178.99mm" file="US08626436-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="251.46mm" wi="177.88mm" file="US08626436-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="248.16mm" wi="177.88mm" file="US08626436-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="158.67mm" wi="124.63mm" file="US08626436-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION(S)</heading>
<p id="p-0002" num="0001">This application claims the benefit of U.S. Provisional Patent Application Ser. No. 61/428,847 filed Dec. 30, 2010, and the subject matter thereof is incorporated herein by reference thereto.</p>
<p id="p-0003" num="0002">The present application contains subject matter related to a concurrently filed U.S. patent application by Ronald David Gutman entitled &#x201c;NAVIGATION SYSTEM WITH CONSTRAINED RESOURCE ROUTE PLANNING MECHANISM AND METHOD OF OPERATION THEREOF.&#x201d; The related application is assigned to Telenav, Inc. and is identified by docket number 59-041. The subject matter thereof is incorporated herein by reference thereto.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">TECHNICAL FIELD</heading>
<p id="p-0004" num="0003">The present invention relates generally to a navigation system, and more particularly to a system for route planning mechanism.</p>
<heading id="h-0003" level="1">BACKGROUND ART</heading>
<p id="p-0005" num="0004">Modern portable consumer and industrial electronics, especially client devices such as navigation systems, cellular phones, portable digital assistants, and combination devices, are providing increasing levels of functionality to support modern life including location-based information services. Research and development in the existing technologies can take a myriad of different directions.</p>
<p id="p-0006" num="0005">As users become more empowered with the growth of mobile location based service devices, new and old paradigms begin to take advantage of this new device space. There are many technological solutions to take advantage of this new device location opportunity. One existing approach is to use location information to provide navigation services such as a global positioning system (GPS) for a car or on a mobile device such as a cell phone, portable navigation device (PND) or a personal digital assistant (PDA).</p>
<p id="p-0007" num="0006">Location based services allow users to create, transfer, store, and/or consume information in order for users to create, transfer, store, and consume in the &#x201c;real world&#x201d;. One such use of location based services is to efficiently transfer or route users to the desired destination or service.</p>
<p id="p-0008" num="0007">Navigation systems and location based services enabled systems have been incorporated in automobiles, notebooks, handheld devices, and other portable products. Today, these systems aid users by incorporating available, real-time relevant information, such as maps, directions, local businesses, or other points of interest (POI). The real-time information provides invaluable relevant information.</p>
<p id="p-0009" num="0008">However, an excessive computation burden and delay in displaying the route prior to reaching the destination has become a paramount concern for the consumer. Inadequate planning of the route by the navigation system decreases the benefit of using the tool.</p>
<p id="p-0010" num="0009">Thus, a need still remains for a navigation system with route planning mechanism to expedite the generation of the route to reach the destination. In view of the ever-increasing commercial competitive pressures, along with growing consumer expectations and the diminishing opportunities for meaningful product differentiation in the marketplace, it is increasingly critical that answers be found to these problems. In view of the ever-increasing commercial competitive pressures, along with growing consumer expectations and the diminishing opportunities for meaningful product differentiation in the marketplace, it is critical that answers be found for these problems. Additionally, the need to reduce costs, improve efficiencies and performance, and meet competitive pressures adds an even greater urgency to the critical necessity for finding answers to these problems.</p>
<p id="p-0011" num="0010">Solutions to these problems have been long sought but prior developments have not taught or suggested any solutions and, thus, solutions to these problems have long eluded those skilled in the art.</p>
<heading id="h-0004" level="1">DISCLOSURE OF THE INVENTION</heading>
<p id="p-0012" num="0011">The present invention provides a method of operation of a navigation system including: setting a predetermined arrival level for arriving at a replenishment location; calculating an estimated arrival level for arriving at the replenishment location; generating a target location based on the estimated arrival level meeting or exceeding the predetermined arrival level; and generating a travel route to a destination based on selecting the replenishment location from the target location for displaying on a device.</p>
<p id="p-0013" num="0012">The present invention provides a navigation system, including: a predetermined level module for setting a predetermined arrival level for arriving at a replenishment location; a calculator pre-computation submodule, coupled to the predetermined level module, for calculating an estimated arrival level for arriving at the replenishment location; a return pre-computation submodule, coupled to the predetermined level module, for generating a target location based on the estimated arrival level meeting or exceeding the predetermined arrival level; and a route planning module, coupled to the return pre-computation submodule, for generating a travel route to a destination based on selecting the replenishment location from the target location for displaying on a device.</p>
<p id="p-0014" num="0013">Certain embodiments of the invention have other steps or elements in addition to or in place of those mentioned above. The steps or elements will become apparent to those skilled in the art from a reading of the following detailed description when taken with reference to the accompanying drawings.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 1</figref> is a navigation system with constrained resource route planning optimizer mechanism in an embodiment of the present invention.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 2</figref> is a first example of a display on a display interface of the first device.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 3</figref> is a second example of a display on the display interface of the first device.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 4</figref> is an exemplary block diagram of the navigation system.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 5</figref> is a flow of the navigation system.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 6</figref> is a flow of the pre-computation module.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 7</figref> is a flow of the pruning module.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 8</figref> is a flow of the simplified graph generator module.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 9</figref> is a flow of the uni-directional module.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 10</figref> is a flow of the reverse uni-directional module.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 11</figref> is a flow of the bi-directional module.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 12</figref> is a flow chart of a method of operation of the navigation system with constrained resource route planning optimizer in a further embodiment of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">BEST MODE FOR CARRYING OUT THE INVENTION</heading>
<p id="p-0027" num="0026">The following embodiments are described in sufficient detail to enable those skilled in the art to make and use the invention. It is to be understood that other embodiments would be evident based on the present disclosure, and that system, process, or mechanical changes may be made without departing from the scope of the present invention.</p>
<p id="p-0028" num="0027">In the following description, numerous specific details are given to provide a thorough understanding of the invention. However, it will be apparent that the invention may be practiced without these specific details. In order to avoid obscuring the present invention, some well-known circuits, system configurations, and process steps are not disclosed in detail.</p>
<p id="p-0029" num="0028">The drawings showing embodiments of the system are semi-diagrammatic and not to scale and, particularly, some of the dimensions are for the clarity of presentation and are shown exaggerated in the drawing FIGs. Similarly, although the views in the drawings for ease of description generally show similar orientations, this depiction in the FIGs. is arbitrary for the most part. Generally, the invention can be operated in any orientation. The embodiments have been numbered first embodiment, second embodiment, etc. as a matter of descriptive convenience and are not intended to have any other significance or provide limitations for the present invention.</p>
<p id="p-0030" num="0029">One skilled in the art would appreciate that the format with which navigation information is expressed is not critical to some embodiments of the invention. For example, in some embodiments, navigation information is presented in the format of (X, Y), where X and Y are two ordinates that define the geographic location, i.e., a position of a user.</p>
<p id="p-0031" num="0030">In an alternative embodiment, navigation information is presented by longitude and latitude related information. In a further embodiment of the present invention, the navigation information also includes a velocity element including a speed component and a heading component.</p>
<p id="p-0032" num="0031">The term &#x201c;relevant information&#x201d; referred to herein includes the navigation information described as well as information relating to points of interest to the user, such as local business, hours of businesses, types of businesses, advertised specials, traffic information, maps, local events, and nearby community or personal information.</p>
<p id="p-0033" num="0032">The term &#x201c;module&#x201d; referred to herein can include software, hardware, or a combination thereof. For example, the software can be machine code, firmware, embedded code, and application software. Also for example, the hardware can be circuitry, processor, computer, integrated circuit, integrated circuit cores, a pressure sensor, an inertial sensor, a microelectromechanical system (MEMS), passive devices, or a combination thereof.</p>
<p id="p-0034" num="0033">Referring now to <figref idref="DRAWINGS">FIG. 1</figref>, therein is shown a navigation system <b>100</b> with constrained resource route planning optimizer mechanism in an embodiment of the present invention. The navigation system <b>100</b> includes a first device <b>102</b>, such as a client or a server, connected to a second device <b>106</b>, such as a client or server, with a communication path <b>104</b>, such as a wireless or wired network.</p>
<p id="p-0035" num="0034">For example, the first device <b>102</b> can be of any of a variety of mobile devices, such as a cellular phone, personal digital assistant, a notebook computer, automotive telematic navigation system, or other multi-functional mobile communication or entertainment device. The first device <b>102</b> can be a standalone device, or can be incorporated with a vehicle, for example a car, truck, bus, or train. The first device <b>102</b> can couple to the communication path <b>104</b> to communicate with the second device <b>106</b>.</p>
<p id="p-0036" num="0035">For illustrative purposes, the navigation system <b>100</b> is described with the first device <b>102</b> as a mobile computing device, although it is understood that the first device <b>102</b> can be different types of computing devices. For example, the first device <b>102</b> can also be a non-mobile computing device, such as a server, a server farm, or a desktop computer.</p>
<p id="p-0037" num="0036">The second device <b>106</b> can be any of a variety of centralized or decentralized computing devices. For example, the second device <b>106</b> can be a computer, grid computing resources, a virtualized computer resource, cloud computing resource, routers, switches, peer-to-peer distributed computing devices, or a combination thereof.</p>
<p id="p-0038" num="0037">The second device <b>106</b> can be centralized in a single computer room, distributed across different rooms, distributed across different geographical locations, embedded within a telecommunications network. The second device <b>106</b> can have a means for coupling with the communication path <b>104</b> to communicate with the first device <b>102</b>. The second device <b>106</b> can also be a client type device as described for the first device <b>102</b>.</p>
<p id="p-0039" num="0038">In another example, the first device <b>102</b> can be a particularized machine, such as a mainframe, a server, a cluster server, rack mounted server, or a blade server, or as more specific examples, an IBM System z10&#x2122; Business Class mainframe or a HP ProLiant ML&#x2122; server. Yet another example, the second device <b>106</b> can be a particularized machine, such as a portable computing device, a thin client, a notebook, a netbook, a smartphone, personal digital assistant, or a cellular phone, and as specific examples, an Apple iPhone&#x2122;, Palm Centro&#x2122;, or Moto Q Global&#x2122;.</p>
<p id="p-0040" num="0039">For illustrative purposes, the navigation system <b>100</b> is described with the second device <b>106</b> as a non-mobile computing device, although it is understood that the second device <b>106</b> can be different types of computing devices. For example, the second device <b>106</b> can also be a mobile computing device, such as notebook computer, another client device, or a different type of client device. The second device <b>106</b> can be a standalone device, or can be incorporated with a vehicle, for example a car, truck, bus, or train.</p>
<p id="p-0041" num="0040">Also for illustrative purposes, the navigation system <b>100</b> is shown with the second device <b>106</b> and the first device <b>102</b> as end points of the communication path <b>104</b>, although it is understood that the navigation system <b>100</b> can have a different partition between the first device <b>102</b>, the second device <b>106</b>, and the communication path <b>104</b>. For example, the first device <b>102</b>, the second device <b>106</b>, or a combination thereof can also function as part of the communication path <b>104</b>.</p>
<p id="p-0042" num="0041">The communication path <b>104</b> can be a variety of networks. For example, the communication path <b>104</b> can include wireless communication, wired communication, optical, ultrasonic, or the combination thereof. Satellite communication, cellular communication, Bluetooth, Infrared Data Association standard (IrDA), wireless fidelity (WiFi), and worldwide interoperability for microwave access (WiMAX) are examples of wireless communication that can be included in the communication path <b>104</b>. Ethernet, digital subscriber line (DSL), fiber to the home (FTTH), and plain old telephone service (POTS) are examples of wired communication that can be included in the communication path <b>104</b>.</p>
<p id="p-0043" num="0042">Further, the communication path <b>104</b> can traverse a number of network topologies and distances. For example, the communication path <b>104</b> can include direct connection, personal area network (PAN), local area network (LAN), metropolitan area network (MAN), wide area network (WAN) or any combination thereof.</p>
<p id="p-0044" num="0043">Referring now to <figref idref="DRAWINGS">FIG. 2</figref>, therein is shown a first example of a display on a display interface <b>202</b> of the first device <b>102</b>. A travel route <b>214</b> is defined as a path where by traveling along the path, the vehicle will be ensured to have an adequate amount of resource, fuel, or the combination thereof to reach a destination <b>206</b>. The travel route <b>214</b> includes a start location <b>204</b>, an intermediate stop <b>208</b>, a replenishment location <b>210</b>, the destination <b>206</b>, or the combination thereof.</p>
<p id="p-0045" num="0044">The start location <b>204</b> is defined as the starting point of the travel route <b>214</b>. The destination <b>206</b> is defined as the ending point of the travel route <b>214</b>. The intermediate stop <b>208</b> is defined as a geographic location where the vehicle can stop by prior to reaching the destination <b>206</b> and after the start location <b>204</b> traversing the travel route <b>214</b>.</p>
<p id="p-0046" num="0045">The replenishment location <b>210</b> is defined as a geographic location where the vehicle can replenish the resource, fuel, or the combination thereof to continue the travel for reaching the destination <b>206</b>. For example, resource can include water, coolant, lubricant, or the combination thereof. Fuel can include electricity, biodiesel, hydrogen fuel, pressurized air, or the combination thereof.</p>
<p id="p-0047" num="0046">The travel route <b>214</b> can include multiple paths of a travel section <b>212</b>. The travel section <b>212</b> is defined as the path between the stopping points. The stopping points include the start location <b>204</b>, the replenishment location <b>210</b>, the intermediate stop <b>208</b>, the destination <b>206</b>, or the combination thereof. For example, the travel section <b>212</b> can represent a path between a stopping point representing the replenishment location <b>210</b> and another stopping point representing the intermediate stop <b>208</b>.</p>
<p id="p-0048" num="0047">For a further example, the first of the travel section <b>212</b> can be a path between the start location <b>204</b> and the replenishment location <b>210</b>. A second of the travel section <b>212</b> can be a path between the replenishment location <b>210</b> and the intermediate stop <b>208</b>. Another of the travel section <b>212</b> can be a path between the intermediate stop <b>208</b> and the destination <b>206</b>. The travel route <b>214</b> can include the travel section <b>212</b> between the start location <b>204</b> to the replenishment location <b>210</b>, the travel section <b>212</b> between the replenishment location <b>210</b> to the intermediate stop <b>208</b>, and the travel section <b>212</b> between the intermediate stop <b>208</b> to the destination <b>206</b>.</p>
<p id="p-0049" num="0048">A current location estimated level <b>216</b> is defined as the estimation of the amount of resource, fuel, or the combination thereof in the vehicle when the vehicle is at the current vantage point. The vantage point includes the start location <b>204</b>, the intermediate stop <b>208</b>, the replenishment location <b>210</b>, or the destination <b>206</b>.</p>
<p id="p-0050" num="0049">For example, the current vantage point can be the start location <b>204</b>. The current location estimated level <b>216</b> when an electric vehicle is at the start location <b>204</b> can be 100% of full battery capacity.</p>
<p id="p-0051" num="0050">For a different example, the current vantage point can be the replenishment location <b>210</b> after leaving the start location <b>204</b>. The current location estimated level <b>216</b> at the replenishment location <b>210</b> can also be 100% of full battery capacity after the user recharges the vehicle fully.</p>
<p id="p-0052" num="0051">An estimated arrival level <b>218</b> is defined as the estimation for the amount of resource, fuel, or the combination thereof remaining after arriving at the start location <b>204</b>, the intermediate stop <b>208</b>, the replenishment location <b>210</b>, the destination <b>206</b>, or the combination thereof. For example, an electric vehicle can have the estimated arrival level <b>218</b> of 25% of full battery capacity after reaching the replenishment location <b>210</b>. For a further example, if the user does not replenish the vehicle at the replenishment location <b>210</b>, the current location estimated level <b>216</b> can equal the estimated arrival level <b>218</b>.</p>
<p id="p-0053" num="0052">A predetermined arrival level <b>220</b> is defined as the minimum threshold level of the resource, fuel, or the combination thereof the vehicle, utilizing the navigation system <b>100</b>, must have remaining for arriving at the next stopping point. For example, in order for the navigation system <b>100</b> for an electric vehicle to select the replenishment location <b>210</b> after leaving the start location <b>204</b>, the vehicle must have at least 5% of full battery capacity upon arriving at the replenishment location <b>210</b>.</p>
<p id="p-0054" num="0053">A section distance <b>222</b> is defined as the physical distance of the travel section <b>212</b>. For example, the travel section <b>212</b> from the replenishment location <b>210</b> to the intermediate stop <b>208</b> can be 45 kilometers.</p>
<p id="p-0055" num="0054">A predetermined distance <b>224</b> is defined as the straight line distance between one stopping point to another stopping point traversing along the surface of the planet Earth. For example, the straight line distance between one stopping point to another stopping point is not necessarily the section distance <b>222</b> of the travel section <b>212</b>. More specifically, if the travel section <b>212</b> is a curvy road, the section distance <b>222</b> can account for the distance for the curvature of the path.</p>
<p id="p-0056" num="0055">In contrast, the predetermined distance <b>224</b> does not account for the distance for the curvature of the path. More specifically, the straight line does not necessarily represent a physical path that a vehicle can travel, but a direct line from one stopping point to another stopping point. For example, the section distance <b>222</b> between the intermediate stop <b>208</b> to the replenishment location <b>210</b> can be 45 kilometers. The predetermined distance <b>224</b> between the same two locations of the intermediate stop <b>208</b> to the replenishment location <b>210</b> can be 25 kilometers.</p>
<p id="p-0057" num="0056">An estimated consumption level <b>226</b> is defined as the estimation for the amount of resource, fuel, or the combination thereof consumed for traversing the travel section <b>212</b>. For example, an electric vehicle can consume the estimated consumption level <b>226</b> of 75% of full battery capacity for traversing the travel section <b>212</b> from one of the replenishment location <b>210</b> to another location of the replenishment location <b>210</b>.</p>
<p id="p-0058" num="0057">An alternate transportation route <b>228</b> is defined as a path that a user can take other than the user's vehicle for reaching the next stopping point. For example, the alternate transportation route <b>228</b> can represent a train track. The user can take the train from the replenishment location <b>210</b> to reach the destination <b>206</b>.</p>
<p id="p-0059" num="0058">An estimated alternate transportation time <b>230</b> is defined as the estimated time for the user to traverse the alternate transportation route <b>228</b>. For example, the user can take 40 minutes on the train to traverse the alternate transportation route <b>228</b>.</p>
<p id="p-0060" num="0059">An allotted alternate transportation travel time <b>232</b> is defined as the maximum time allocated by the user, the navigation system <b>100</b>, or the combination thereof for traversing the alternate transportation route <b>228</b>. For example, the allotted alternate transportation travel time <b>232</b> can be 60 minutes for traversing the alternate transportation route <b>228</b>.</p>
<p id="p-0061" num="0060">An estimated sectional travel time <b>234</b> is defined as the estimation of the time required to complete traversing the travel section <b>212</b>. For example, the estimated sectional travel time <b>234</b> for traversing from one of the intermediate stop <b>208</b> to another location of the intermediate stop <b>208</b> can be 50 minutes.</p>
<p id="p-0062" num="0061">An estimated sectional financial cost <b>236</b> is defined as the estimation of the monetary cost that a user can incur for traversing the travel section <b>212</b>. For example, a toll plaza can exist on the travel section <b>212</b> between the replenishment location <b>210</b> to the intermediate stop <b>208</b>. The toll plaza can charge a fee of US 7 dollars. The estimated sectional financial cost <b>236</b> for traversing that particular path of the travel section <b>212</b> can be US 7 dollars.</p>
<p id="p-0063" num="0062">A target location <b>238</b> is defined as a geographic location that has been identified by the navigation system <b>100</b> to aid the generation of the travel route <b>214</b>. For example, the target location <b>238</b> can include the replenishment location <b>210</b>, the intermediate stop <b>208</b>, or the combination thereof. The pre-computation of the list of geographic locations and the benefit from generating the travel route <b>214</b> based on the target location <b>238</b> will be discussed later.</p>
<p id="p-0064" num="0063">A reverse travel route <b>240</b> is defined as a path where by traveling along the path, the vehicle will be ensured to have an adequate amount of resource, fuel, or the combination thereof to reach the start location <b>204</b> from various stopping points. The reverse travel route <b>240</b> includes the start location <b>204</b>, the intermediate stop <b>208</b>, the replenishment location <b>210</b>, the destination <b>206</b>, or the combination thereof.</p>
<p id="p-0065" num="0064">For example, the reverse travel route <b>240</b> can be the same as the travel route <b>214</b> traversing through the same stopping points representing the replenishment location <b>210</b>, the intermediate stop <b>208</b>, or the combination thereof, but starting from the destination <b>206</b> to reach the start location <b>204</b>. For a different example, the reverse travel route <b>240</b> can be different from the travel route <b>214</b> traversing through different stopping points representing the replenishment location <b>210</b>, the intermediate stop <b>208</b>, or the combination thereof, but starting from the destination <b>206</b> to reach the start location <b>204</b>. Similar to the travel route <b>214</b>, the reverse travel route <b>240</b> can include multiple paths of the travel section <b>212</b>.</p>
<p id="p-0066" num="0065">Referring now to <figref idref="DRAWINGS">FIG. 3</figref>, therein is shown a second example of a display on the display interface <b>202</b> of the first device <b>102</b>. The second example illustrates various factors that influence the generation of the target location <b>238</b> by the navigation system <b>100</b>.</p>
<p id="p-0067" num="0066">For example, the replenishment location <b>210</b> of <figref idref="DRAWINGS">FIG. 2</figref> can include a first replenishment location <b>302</b>, a second replenishment location <b>304</b>, a third replenishment location <b>306</b>, a fourth replenishment location <b>308</b>, and a fifth replenishment location <b>310</b>. The first replenishment location <b>302</b>, the second replenishment location <b>304</b>, the third replenishment location <b>306</b>, the fourth replenishment location <b>308</b>, and the fifth replenishment location <b>310</b> are further examples of the replenishment location <b>210</b>, and are defined as the replenishment location <b>210</b>.</p>
<p id="p-0068" num="0067">For example, the intermediate stop <b>208</b> of <figref idref="DRAWINGS">FIG. 2</figref> can include a first intermediate stop <b>312</b> and a second intermediate stop <b>314</b>. The first intermediate stop <b>312</b> and the second intermediate stop <b>314</b> are further examples of the intermediate stop <b>208</b>, and are defined as the intermediate stop <b>208</b>.</p>
<p id="p-0069" num="0068">As one of the factors, the navigation system <b>100</b> can generate the target location <b>238</b> based on the estimated arrival level <b>218</b> meeting or exceeding the predetermined arrival level <b>220</b>. For example, the predetermined arrival level <b>220</b> for the first intermediate stop <b>312</b> and the first replenishment location <b>302</b> can be 5% of full battery capacity for an electric vehicle. If the estimated arrival level <b>218</b> for arriving at the first replenishment location <b>302</b> is 6% after departing the start location <b>204</b>, the navigation system <b>100</b> can select the first replenishment location <b>302</b> to be included in the target location <b>238</b>. In contrast, if the estimated arrival level <b>218</b> for arriving at the first intermediate stop <b>312</b> is 4% after departing the start location <b>204</b>, the navigation system <b>100</b> can avoid selecting the first intermediate stop <b>312</b> to be included in the target location <b>238</b>.</p>
<p id="p-0070" num="0069">As another factor, the navigation system <b>100</b> can generate the target location <b>238</b> based on the section distance <b>222</b> meeting or exceeding the predetermined distance <b>224</b>. For example, the predetermined distance <b>224</b> from the start location <b>204</b> to the first replenishment location <b>302</b> can be 35 kilometers. Additionally, the section distance <b>222</b> from the start location <b>204</b> to the first replenishment location <b>302</b> can be 40 kilometers. Since the section distance <b>222</b> exceeds the predetermined distance <b>224</b>, the navigation system <b>100</b> can select the first replenishment location <b>302</b> as one of the geographic locations representing the target location <b>238</b>.</p>
<p id="p-0071" num="0070">In contrast, the predetermined distance <b>224</b> from the first intermediate stop <b>312</b> to the fourth replenishment location <b>308</b> can be 25 kilometers. Additionally, the section distance <b>222</b> from the first intermediate stop <b>312</b> to the fourth replenishment location <b>308</b> can be 15 kilometers. More specifically, the travel section <b>212</b> from the first intermediate stop <b>312</b> heading towards the fourth replenishment location <b>308</b> falls short of reaching the fourth replenishment location <b>308</b>.</p>
<p id="p-0072" num="0071">Since the predetermined distance <b>224</b> exceeds the section distance <b>222</b>, the navigation system <b>100</b> can avoid selecting the fourth replenishment location <b>308</b> and prune the travel section <b>212</b> between the first intermediate stop <b>312</b> to the fourth replenishment location <b>308</b> for generating the target location <b>238</b>. The pruning of the travel section <b>212</b> that fails to meet the predetermined distance <b>224</b> can aid the navigation system <b>100</b> by reducing the computation burden of generating the travel route <b>214</b>. The details regarding the pruning of the travel section <b>212</b> will be discussed later.</p>
<p id="p-0073" num="0072">As another factor, the navigation system <b>100</b> can generate the target location <b>238</b> based on the current location estimated level <b>216</b> meeting or exceeding the estimated consumption level <b>226</b>. For example, the current location estimated level <b>216</b> when the user's electric vehicle is at the second replenishment location <b>304</b> can be 85% of full battery capacity. The estimated consumption level <b>226</b> for traversing the travel section <b>212</b> from the second replenishment location <b>304</b> to the second intermediate stop <b>314</b> can be 75% of full battery capacity. Since the current location estimated level <b>216</b> exceeds the estimated consumption level <b>226</b>, the navigation system <b>100</b> can select the second intermediate stop <b>314</b> as one of the geographic locations representing the target location <b>238</b>.</p>
<p id="p-0074" num="0073">In contrast, the estimated consumption level <b>226</b> for traversing the travel section <b>212</b> from the second replenishment location <b>304</b> to the fifth replenishment location <b>310</b> can be 95% of full battery capacity. Since the estimated consumption level <b>226</b> exceeds the current location estimated level <b>216</b>, the navigation system <b>100</b> can avoid selecting the fifth replenishment location <b>310</b> as one of the geographic locations representing the target location <b>238</b>.</p>
<p id="p-0075" num="0074">As another factor, the navigation system <b>100</b> can generate the target location <b>238</b> based on the allotted alternate transportation travel time <b>232</b> meeting or exceeding the estimated alternate transportation time <b>230</b>. For example, the allotted alternate transportation travel time <b>232</b> for traversing the alternate transportation route <b>228</b> from the second intermediate stop <b>314</b> to the destination <b>206</b> or from the second intermediate stop <b>314</b> to the fifth replenishment location <b>310</b> can be both 60 minutes. The estimated alternate transportation time <b>230</b> for traversing the alternate transportation route <b>228</b> from the second intermediate stop <b>314</b> to the destination <b>206</b> can be 40 minutes. Since the allotted alternate transportation travel time <b>232</b> exceeds the estimated alternate transportation time <b>230</b>, the navigation system <b>100</b> can select the destination <b>206</b> as one of the geographic locations representing the target location <b>238</b>.</p>
<p id="p-0076" num="0075">In contrast, the estimated alternate transportation time <b>230</b> for traversing the alternate transportation route <b>228</b> from the second intermediate stop <b>314</b> to the fifth replenishment location <b>310</b> can be 70 minutes. Since the estimated alternate transportation time <b>230</b> exceeds the allotted alternate transportation travel time <b>232</b>, the navigation system <b>100</b> can avoid selecting the fifth replenishment location <b>310</b> as one of the geographic locations representing the target location <b>238</b>.</p>
<p id="p-0077" num="0076">As another factor, the navigation system <b>100</b> can generate the target location <b>238</b> based on comparing the estimated sectional travel time <b>234</b> for traversing the travel section <b>212</b> to reach, the replenishment location <b>210</b>, the intermediate stop <b>208</b>, the destination <b>206</b>, or the combination thereof. For example, the estimated sectional travel time <b>234</b> for traversing the travel section <b>212</b> from the start location <b>204</b> to the first replenishment location <b>302</b> can be 40 minutes.</p>
<p id="p-0078" num="0077">In contrast, the estimated sectional travel time <b>234</b> for traversing the travel section <b>212</b> from the start location <b>204</b> to the first intermediate stop <b>312</b> can be 50 minutes. Since the estimated sectional travel time <b>234</b> for traversing the travel section <b>212</b> from the start location <b>204</b> to the first replenishment location <b>302</b> is less than from the start location <b>204</b> to the first intermediate stop <b>312</b>, the navigation system <b>100</b> can select the first replenishment location <b>302</b> and not select the first intermediate stop <b>312</b> as one of the geographic locations representing the target location <b>238</b>.</p>
<p id="p-0079" num="0078">As another factor, the navigation system <b>100</b> can generate the target location <b>238</b> based on comparing the estimated sectional financial cost <b>236</b> for traversing the travel section <b>212</b> to reach the start location <b>204</b>, the replenishment location <b>210</b>, the intermediate stop <b>208</b>, the destination <b>206</b>, or the combination thereof. For example, the estimated sectional financial cost <b>236</b> for traversing the travel section <b>212</b> from the first replenishment location <b>302</b> to the second replenishment location <b>304</b> can be USD $0.</p>
<p id="p-0080" num="0079">In contrast, the estimated sectional financial cost <b>236</b> for traversing the travel section <b>212</b> from the first replenishment location <b>302</b> to the third replenishment location <b>306</b> can be USD $7. Since the estimated sectional financial cost <b>236</b> for traversing the travel section <b>212</b> from the first replenishment location <b>302</b> to the second replenishment location <b>304</b> is less than from the first replenishment location <b>302</b> to the third replenishment location <b>306</b>, the navigation system <b>100</b> can select the second replenishment location <b>304</b> and not select the third replenishment location <b>306</b> as one of the geographic locations representing the target location <b>238</b>.</p>
<p id="p-0081" num="0080">From the factors discussed above, the navigation system <b>100</b> can generate the target location <b>238</b>. Continuing with the examples raised previously, the navigation system <b>100</b> can generate the target location <b>238</b> that can include the first replenishment location <b>302</b>, the second replenishment location <b>304</b>, the third replenishment location <b>306</b>, the second intermediate stop <b>314</b>, and the destination <b>206</b>.</p>
<p id="p-0082" num="0081">Referring now to <figref idref="DRAWINGS">FIG. 4</figref>, therein is shown an exemplary block diagram of the navigation system <b>100</b>. The navigation system <b>100</b> can include the first device <b>102</b>, the communication path <b>104</b>, and the second device <b>106</b>. The first device <b>102</b> can send information in a first device transmission <b>408</b> over the communication path <b>104</b> to the second device <b>106</b>. The second device <b>106</b> can send information in a second device transmission <b>410</b> over the communication path <b>104</b> to the first device <b>102</b>.</p>
<p id="p-0083" num="0082">For illustrative purposes, the navigation system <b>100</b> is shown with the first device <b>102</b> as a client device, although it is understood that the navigation system <b>100</b> can have the first device <b>102</b> as a different type of device. For example, the first device <b>102</b> can be a server.</p>
<p id="p-0084" num="0083">Also for illustrative purposes, the navigation system <b>100</b> is shown with the second device <b>106</b> as a server, although it is understood that the navigation system <b>100</b> can have the second device <b>106</b> as a different type of device. For example, the second device <b>106</b> can be a client device.</p>
<p id="p-0085" num="0084">For brevity of description in this embodiment of the present invention, the first device <b>102</b> will be described as a client device and the second device <b>106</b> will be described as a server device. The present invention is not limited to this selection for the type of devices. The selection is an example of the present invention.</p>
<p id="p-0086" num="0085">The first device <b>102</b> can include a first control unit <b>412</b>, a first storage unit <b>414</b>, a first communication unit <b>416</b>, a first user interface <b>418</b>, and a location unit <b>420</b>. The first device <b>102</b> can be similarly described by the first device <b>102</b>.</p>
<p id="p-0087" num="0086">The first control unit <b>412</b> can include a first control interface <b>422</b>. The first control unit <b>412</b> can execute a first software <b>426</b> to provide the intelligence of the navigation system <b>100</b>. The first control unit <b>412</b> can be implemented in a number of different manners. For example, the first control unit <b>412</b> can be a processor, an embedded processor, a microprocessor, a hardware control logic, a hardware finite state machine (FSM), a digital signal processor (DSP), or a combination thereof. The first control interface <b>422</b> can be used for communication between the first control unit <b>412</b> and other functional units in the first device <b>102</b>. The first control interface <b>422</b> can also be used for communication that is external to the first device <b>102</b>.</p>
<p id="p-0088" num="0087">The first control interface <b>422</b> can receive information from the other functional units or from external sources, or can transmit information to the other functional units or to external destinations. The external sources and the external destinations refer to sources and destinations external to the first device <b>102</b>.</p>
<p id="p-0089" num="0088">The first control interface <b>422</b> can be implemented in different ways and can include different implementations depending on which functional units or external units are being interfaced with the first control interface <b>422</b>. For example, the first control interface <b>422</b> can be implemented with a pressure sensor, an inertial sensor, a microelectromechanical system (MEMS), optical circuitry, waveguides, wireless circuitry, wireline circuitry, or a combination thereof.</p>
<p id="p-0090" num="0089">The location unit <b>420</b> can generate location information, current heading, and current speed of the first device <b>102</b>, as examples. The location unit <b>420</b> can be implemented in many ways. For example, the location unit <b>420</b> can function as at least a part of a global positioning system (GPS), an inertial navigation system, a cellular-tower location system, a pressure location system, or any combination thereof.</p>
<p id="p-0091" num="0090">The location unit <b>420</b> can include a location interface <b>432</b>. The location interface <b>432</b> can be used for communication between the location unit <b>420</b> and other functional units in the first device <b>102</b>. The location interface <b>432</b> can also be used for communication that is external to the first device <b>102</b>.</p>
<p id="p-0092" num="0091">The location interface <b>432</b> can receive information from the other functional units or from external sources, or can transmit information to the other functional units or to external destinations. The external sources and the external destinations refer to sources and destinations external to the first device <b>102</b>.</p>
<p id="p-0093" num="0092">The location interface <b>432</b> can include different implementations depending on which functional units or external units are being interfaced with the location unit <b>420</b>. The location interface <b>432</b> can be implemented with technologies and techniques similar to the implementation of the first control interface <b>422</b>.</p>
<p id="p-0094" num="0093">The first storage unit <b>414</b> can store the first software <b>426</b>. The first storage unit <b>414</b> can also store the relevant information, such as advertisements, points of interest (POI), navigation routing entries, or any combination thereof.</p>
<p id="p-0095" num="0094">The first storage unit <b>414</b> can be a volatile memory, a nonvolatile memory, an internal memory, an external memory, or a combination thereof. For example, the first storage unit <b>414</b> can be a nonvolatile storage such as non-volatile random access memory (NVRAM), Flash memory, disk storage, or a volatile storage such as static random access memory (SRAM).</p>
<p id="p-0096" num="0095">The first storage unit <b>414</b> can include a first storage interface <b>424</b>. The first storage interface <b>424</b> can be used for communication between the location unit <b>420</b> and other functional units in the first device <b>102</b>. The first storage interface <b>424</b> can also be used for communication that is external to the first device <b>102</b>.</p>
<p id="p-0097" num="0096">The first storage interface <b>424</b> can receive information from the other functional units or from external sources, or can transmit information to the other functional units or to external destinations. The external sources and the external destinations refer to sources and destinations external to the first device <b>102</b>.</p>
<p id="p-0098" num="0097">The first storage interface <b>424</b> can include different implementations depending on which functional units or external units are being interfaced with the first storage unit <b>414</b>. The first storage interface <b>424</b> can be implemented with technologies and techniques similar to the implementation of the first control interface <b>422</b>.</p>
<p id="p-0099" num="0098">The first communication unit <b>416</b> can enable external communication to and from the first device <b>102</b>. For example, the first communication unit <b>416</b> can permit the first device <b>102</b> to communicate with the second device <b>106</b> of <figref idref="DRAWINGS">FIG. 1</figref>, an attachment, such as a peripheral device or a computer desktop, and the communication path <b>104</b>.</p>
<p id="p-0100" num="0099">The first communication unit <b>416</b> can also function as a communication hub allowing the first device <b>102</b> to function as part of the communication path <b>104</b> and not limited to be an end point or terminal unit to the communication path <b>104</b>. The first communication unit <b>416</b> can include active and passive components, such as microelectronics or an antenna, for interaction with the communication path <b>104</b>.</p>
<p id="p-0101" num="0100">The first communication unit <b>416</b> can include a first communication interface <b>428</b>. The first communication interface <b>428</b> can be used for communication between the first communication unit <b>416</b> and other functional units in the first device <b>102</b>. The first communication interface <b>428</b> can receive information from the other functional units or can transmit information to the other functional units.</p>
<p id="p-0102" num="0101">The first communication interface <b>428</b> can include different implementations depending on which functional units are being interfaced with the first communication unit <b>416</b>. The first communication interface <b>428</b> can be implemented with technologies and techniques similar to the implementation of the first control interface <b>422</b>.</p>
<p id="p-0103" num="0102">The first user interface <b>418</b> allows a user (not shown) to interface and interact with the first device <b>102</b>. The first user interface <b>418</b> can include an input device and an output device. Examples of the input device of the first user interface <b>418</b> can include a keypad, a touchpad, soft-keys, a keyboard, a microphone, or any combination thereof to provide data and communication inputs.</p>
<p id="p-0104" num="0103">The first user interface <b>418</b> can include a first display interface <b>430</b>. The first display interface <b>430</b> can include a display, a projector, a video screen, a speaker, or any combination thereof.</p>
<p id="p-0105" num="0104">The first control unit <b>412</b> can operate the first user interface <b>418</b> to display information generated by the navigation system <b>100</b>. The first control unit <b>412</b> can also execute the first software <b>426</b> for the other functions of the navigation system <b>100</b>, including receiving location information from the location unit <b>420</b>. The first control unit <b>412</b> can further execute the first software <b>426</b> for interaction with the communication path <b>104</b> via the first communication unit <b>416</b>.</p>
<p id="p-0106" num="0105">The second device <b>106</b> can be optimized for implementing the present invention in a multiple device embodiment with the first device <b>102</b>. The second device <b>106</b> can provide the additional or higher performance processing power compared to the first device <b>102</b>. The second device <b>106</b> can include a second control unit <b>434</b>, a second communication unit <b>436</b>, and a second user interface <b>438</b>.</p>
<p id="p-0107" num="0106">The second user interface <b>438</b> allows a user (not shown) to interface and interact with the second device <b>106</b>. The second user interface <b>438</b> can include an input device and an output device. Examples of the input device of the second user interface <b>438</b> can include a keypad, a touchpad, soft-keys, a keyboard, a microphone, or any combination thereof to provide data and communication inputs. Examples of the output device of the second user interface <b>438</b> can include a second display interface <b>440</b>. The second display interface <b>440</b> can include a display, a projector, a video screen, a speaker, or any combination thereof.</p>
<p id="p-0108" num="0107">The second control unit <b>434</b> can execute a second software <b>442</b> to provide the intelligence of the second device <b>106</b> of the navigation system <b>100</b>. The second software <b>442</b> can operate in conjunction with the first software <b>426</b>. The second control unit <b>434</b> can provide additional performance compared to the first control unit <b>412</b>.</p>
<p id="p-0109" num="0108">The second control unit <b>434</b> can operate the second user interface <b>438</b> to display information. The second control unit <b>434</b> can also execute the second software <b>442</b> for the other functions of the navigation system <b>100</b>, including operating the second communication unit <b>436</b> to communicate with the first device <b>102</b> over the communication path <b>104</b>.</p>
<p id="p-0110" num="0109">The second control unit <b>434</b> can be implemented in a number of different manners. For example, the second control unit <b>434</b> can be a processor, an embedded processor, a microprocessor, a hardware control logic, a hardware finite state machine (FSM), a digital signal processor (DSP), or a combination thereof.</p>
<p id="p-0111" num="0110">The second control unit <b>434</b> can include a second controller interface <b>444</b>. The second controller interface <b>444</b> can be used for communication between the second control unit <b>434</b> and other functional units in the second device <b>106</b>. The second controller interface <b>444</b> can also be used for communication that is external to the second device <b>106</b>.</p>
<p id="p-0112" num="0111">The second controller interface <b>444</b> can receive information from the other functional units or from external sources, or can transmit information to the other functional units or to external destinations. The external sources and the external destinations refer to sources and destinations external to the second device <b>106</b>.</p>
<p id="p-0113" num="0112">The second controller interface <b>444</b> can be implemented in different ways and can include different implementations depending on which functional units or external units are being interfaced with the second controller interface <b>444</b>. For example, the second controller interface <b>444</b> can be implemented with a pressure sensor, an inertial sensor, a microelectromechanical system (MEMS), optical circuitry, waveguides, wireless circuitry, wireline circuitry, or a combination thereof.</p>
<p id="p-0114" num="0113">A second storage unit <b>446</b> can store the second software <b>442</b>. The second storage unit <b>446</b> can also store the relevant information, such as advertisements, points of interest (POI), navigation routing entries, or any combination thereof. The second storage unit <b>446</b> can be sized to provide the additional storage capacity to supplement the first storage unit <b>414</b>.</p>
<p id="p-0115" num="0114">For illustrative purposes, the second storage unit <b>446</b> is shown as a single element, although it is understood that the second storage unit <b>446</b> can be a distribution of storage elements. Also for illustrative purposes, the navigation system <b>100</b> is shown with the second storage unit <b>446</b> as a single hierarchy storage system, although it is understood that the navigation system <b>100</b> can have the second storage unit <b>446</b> in a different configuration. For example, the second storage unit <b>446</b> can be formed with different storage technologies forming a memory hierarchal system including different levels of caching, main memory, rotating media, or off-line storage.</p>
<p id="p-0116" num="0115">The second storage unit <b>446</b> can be a volatile memory, a nonvolatile memory, an internal memory, an external memory, or a combination thereof. For example, the second storage unit <b>446</b> can be a nonvolatile storage such as non-volatile random access memory (NVRAM), Flash memory, disk storage, or a volatile storage such as static random access memory (SRAM).</p>
<p id="p-0117" num="0116">The second storage unit <b>446</b> can include a second storage interface <b>448</b>. The second storage interface <b>448</b> can be used for communication between the location unit <b>420</b> and other functional units in the second device <b>106</b>. The second storage interface <b>448</b> can also be used for communication that is external to the second device <b>106</b>.</p>
<p id="p-0118" num="0117">The second storage interface <b>448</b> can receive information from the other functional units or from external sources, or can transmit information to the other functional units or to external destinations. The external sources and the external destinations refer to sources and destinations external to the second device <b>106</b>.</p>
<p id="p-0119" num="0118">The second storage interface <b>448</b> can include different implementations depending on which functional units or external units are being interfaced with the second storage unit <b>446</b>. The second storage interface <b>448</b> can be implemented with technologies and techniques similar to the implementation of the second controller interface <b>444</b>.</p>
<p id="p-0120" num="0119">The second communication unit <b>436</b> can enable external communication to and from the second device <b>106</b>. For example, the second communication unit <b>436</b> can permit the second device <b>106</b> to communicate with the first device <b>102</b> over the communication path <b>104</b>.</p>
<p id="p-0121" num="0120">The second communication unit <b>436</b> can also function as a communication hub allowing the second device <b>106</b> to function as part of the communication path <b>104</b> and not limited to be an end point or terminal unit to the communication path <b>104</b>. The second communication unit <b>436</b> can include active and passive components, such as microelectronics or an antenna, for interaction with the communication path <b>104</b>.</p>
<p id="p-0122" num="0121">The second communication unit <b>436</b> can include a second communication interface <b>450</b>. The second communication interface <b>450</b> can be used for communication between the second communication unit <b>436</b> and other functional units in the second device <b>106</b>. The second communication interface <b>450</b> can receive information from the other functional units or can transmit information to the other functional units.</p>
<p id="p-0123" num="0122">The second communication interface <b>450</b> can include different implementations depending on which functional units are being interfaced with the second communication unit <b>436</b>. The second communication interface <b>450</b> can be implemented with technologies and techniques similar to the implementation of the second controller interface <b>444</b>.</p>
<p id="p-0124" num="0123">The first communication unit <b>416</b> can couple with the communication path <b>104</b> to send information to the second device <b>106</b> in the first device transmission <b>408</b>. The second device <b>106</b> can receive information in the second communication unit <b>436</b> from the first device transmission <b>408</b> of the communication path <b>104</b>.</p>
<p id="p-0125" num="0124">The second communication unit <b>436</b> can couple with the communication path <b>104</b> to send information to the first device <b>102</b> in the second device transmission <b>410</b>. The first device <b>102</b> can receive information in the first communication unit <b>416</b> from the second device transmission <b>410</b> of the communication path <b>104</b>. The navigation system <b>100</b> can be executed by the first control unit <b>412</b>, the second control unit <b>434</b>, or a combination thereof.</p>
<p id="p-0126" num="0125">For illustrative purposes, the second device <b>106</b> is shown with the partition having the second user interface <b>438</b>, the second storage unit <b>446</b>, the second control unit <b>434</b>, and the second communication unit <b>436</b>, although it is understood that the second device <b>106</b> can have a different partition. For example, the second software <b>442</b> can be partitioned differently such that some or all of its function can be in the second control unit <b>434</b> and the second communication unit <b>436</b>. Also, the second device <b>106</b> can include other functional units not shown in <figref idref="DRAWINGS">FIG. 4</figref> for clarity.</p>
<p id="p-0127" num="0126">The functional units in the first device <b>102</b> can work individually and independently of the other functional units. The first device <b>102</b> can work individually and independently from the second device <b>106</b> and the communication path <b>104</b>.</p>
<p id="p-0128" num="0127">The functional units in the second device <b>106</b> can work individually and independently of the other functional units. The second device <b>106</b> can work individually and independently from the first device <b>102</b> and the communication path <b>104</b>.</p>
<p id="p-0129" num="0128">For illustrative purposes, the navigation system <b>100</b> is described by operation of the first device <b>102</b> and the second device <b>106</b>. It is understood that the first device <b>102</b> and the second device <b>106</b> can operate any of the modules and functions of the navigation system <b>100</b>. For example, the first device <b>102</b> is described to operate the location unit <b>420</b>, although it is understood that the second device <b>106</b> can also operate the location unit <b>420</b>.</p>
<p id="p-0130" num="0129">Referring now to <figref idref="DRAWINGS">FIG. 5</figref>, therein is shown a flow of the navigation system <b>100</b>. The flow of the navigation system <b>100</b> can utilize the graph theory for generating the travel route <b>214</b> of <figref idref="DRAWINGS">FIG. 2</figref>. The flow is not depicted by the graph theory format.</p>
<p id="p-0131" num="0130">The navigation system <b>100</b> can include a predetermined level module <b>502</b>. The predetermined level module <b>502</b> sets the minimum level of resource, fuel, or the combination thereof required for the vehicle when it arrives at each of the stopping points along the travel route <b>214</b>. For example, the predetermined level module <b>502</b> can set the predetermined arrival level <b>220</b> of <figref idref="DRAWINGS">FIG. 2</figref> for arriving at the replenishment location <b>210</b>, the destination <b>206</b>, the intermediate stop <b>208</b>, or the combination thereof. For a further example, the predetermined level module <b>502</b> can set the predetermined arrival level <b>220</b> for arriving at the second replenishment location <b>304</b> of <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0132" num="0131">The predetermined level module <b>502</b> can set the predetermined arrival level <b>220</b> in a number of ways. For example, the predetermined arrival level <b>220</b> can set the predetermined arrival level <b>220</b> for operating an electric vehicle by defining that the electric vehicle must have at least 5% of the full battery capacity upon arrival at each of the stopping points. As a different example, the predetermined level module <b>502</b> can set the predetermined arrival level <b>220</b> for operating a gasoline powered vehicle by defining that the gasoline powered vehicle must have at least 1 gallon of gasoline upon arrival at each of the stopping points.</p>
<p id="p-0133" num="0132">The navigation system <b>100</b> can include a predetermined distance calculator module <b>504</b>. The predetermined distance calculator module <b>504</b> calculates the straight line distance from one stopping point to another along the travel route <b>214</b>. For example, the predetermined distance calculator module <b>504</b> can calculate the predetermined distance <b>224</b> of <figref idref="DRAWINGS">FIG. 2</figref> for reaching the replenishment location <b>210</b>, the destination <b>206</b>, the intermediate stop <b>208</b>, or the combination thereof. For a further example, the predetermined distance calculator module <b>504</b> can calculate the predetermined distance <b>224</b> between the first replenishment location <b>302</b> of <figref idref="DRAWINGS">FIG. 3</figref> and the second replenishment location <b>304</b>. As a more specific example, the predetermined distance calculator module <b>504</b> can calculate the straight line distance between the GPS coordinates of the first replenishment location <b>302</b> and the second replenishment location <b>304</b> for the predetermined distance <b>224</b>.</p>
<p id="p-0134" num="0133">The navigation system <b>100</b> can include a pre-computation module <b>506</b>. The pre-computation module <b>506</b> reduces the number of map nodes considered for generating the travel route <b>214</b>. The travel section <b>212</b> between one stopping point to another stopping point can be computed in advance to produce a simplified graph with far fewer nodes. The nodes include the start location <b>204</b> of <figref idref="DRAWINGS">FIG. 2</figref>, the destination <b>206</b> of <figref idref="DRAWINGS">FIG. 2</figref>, the intermediate stop <b>208</b> of <figref idref="DRAWINGS">FIG. 2</figref>, the replenishment location <b>210</b> of <figref idref="DRAWINGS">FIG. 2</figref>, or the combination thereof. For example, the pre-computation module <b>506</b> can generate the target location <b>238</b> of <figref idref="DRAWINGS">FIG. 2</figref> based on the estimated arrival level <b>218</b> of <figref idref="DRAWINGS">FIG. 2</figref> meeting or exceeding the predetermined arrival level <b>220</b>. Details regarding the pre-computation module <b>506</b> will be discussed later.</p>
<p id="p-0135" num="0134">The navigation system <b>100</b> can include a pruning module <b>508</b>. The pruning module <b>508</b> prunes nodes based on eliminating the path that fails to reach the next stopping point. For example, the pruning module <b>508</b> can generate the target location <b>238</b> by selecting the replenishment location <b>210</b> based on the section distance <b>222</b> of <figref idref="DRAWINGS">FIG. 2</figref> meeting or exceeding the predetermined distance <b>224</b> of <figref idref="DRAWINGS">FIG. 2</figref>. Details regarding the pruning module <b>508</b> will be discussed later.</p>
<p id="p-0136" num="0135">The navigation system <b>100</b> can include a simplified graph generator module <b>510</b>. The simplified graph generator module <b>510</b> can generate the simplified graph based on the target location <b>238</b> for a route planning module <b>512</b> to generate the travel route <b>214</b>. Details regarding the simplified graph generator module <b>510</b> will be discussed later.</p>
<p id="p-0137" num="0136">The navigation system <b>100</b> can include the route planning module <b>512</b>. The route planning module <b>512</b> generates a path that ensures the vehicle utilizing the navigation system <b>100</b> with adequate amount of resource, fuel, or the combination thereof for reaching the target destination. For example, the route planning module <b>512</b> can generate the travel route <b>214</b> to the destination <b>206</b> based on selecting the replenishment location <b>210</b> from the target location <b>238</b> for displaying on the first device <b>102</b> of <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0138" num="0137">The route planning module <b>512</b> can generate the travel route <b>214</b> in a number of ways. For example, the route planning module <b>512</b> can include a uni-directional module <b>514</b>. The uni-directional module <b>514</b> can generate the travel route <b>214</b> from the start location <b>204</b> to the destination <b>206</b> based on the target location <b>238</b>. Details regarding the uni-directional module <b>514</b> will be discussed later.</p>
<p id="p-0139" num="0138">As a different example, the route planning module <b>512</b> can include a reverse uni-directional module <b>516</b>. The reverse uni-directional module <b>516</b> can generate the travel route <b>214</b> from the destination <b>206</b> to the start location <b>204</b> based on the target location <b>238</b>. Details regarding the reverse uni-directional module <b>516</b> will be discussed later.</p>
<p id="p-0140" num="0139">For another example, the route planning module <b>512</b> can include a bidirectional module <b>518</b>. The bidirectional module <b>518</b> can process the algorithm discussed in the uni-directional module <b>514</b> and the reverse uni-directional module <b>516</b> for generating the travel route <b>214</b>. Details regarding the bidirectional module <b>518</b> will be discussed later.</p>
<p id="p-0141" num="0140">The navigation system <b>100</b> can include a display module <b>520</b>. The display module <b>520</b> displays the travel route <b>214</b> for the user to follow to reach the destination <b>206</b>.</p>
<p id="p-0142" num="0141">The physical transformation from displaying the travel route <b>214</b> results in movement in the physical world, such as people using the first device <b>102</b> of <figref idref="DRAWINGS">FIG. 1</figref>, the vehicle, or a combination thereof, based on the operation of the navigation system <b>100</b>. As the movement in the physical world occurs, the movement itself creates additional information that is converted back to calculate the estimated arrival level <b>218</b>, the current location estimated level <b>216</b>, the estimated consumption level <b>226</b>, the estimated alternate transportation time <b>230</b>, the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof for generating the target location <b>238</b> for the continued operation of the navigation system <b>100</b> and to continue the movement in the physical world.</p>
<p id="p-0143" num="0142">The first software <b>426</b> of <figref idref="DRAWINGS">FIG. 4</figref> of the first device <b>102</b> of <figref idref="DRAWINGS">FIG. 4</figref> can include the navigation system <b>100</b>. For example, the first software <b>426</b> can include the predetermined level module <b>502</b>, the predetermined distance calculator module <b>504</b>, the pre-computation module <b>506</b>, the pruning module <b>508</b>, the route planning module <b>512</b>, and the display module <b>520</b>.</p>
<p id="p-0144" num="0143">The first control unit <b>412</b> of <figref idref="DRAWINGS">FIG. 4</figref> can execute the first software <b>426</b> for the predetermined level module <b>502</b> to calculate the predetermined arrival level <b>220</b>. The first control unit <b>412</b> of can execute the first software <b>426</b> for the predetermined distance calculator module <b>504</b> to calculate the predetermined distance <b>224</b>.</p>
<p id="p-0145" num="0144">The first control unit <b>412</b> of can execute the first software <b>426</b> for the pre-computation module <b>506</b>, the pruning module <b>508</b>, or the combination thereof to generate the target location <b>238</b>. The first control unit <b>412</b> of can execute the first software <b>426</b> for the simplified graph generator module <b>510</b> to generate the simplified graph. The first control unit <b>412</b> of can execute the first software <b>426</b> for the route planning module to generate the travel route <b>214</b> to the destination <b>206</b> based on the target location <b>238</b>.</p>
<p id="p-0146" num="0145">The display module <b>520</b> can represent the first display interface <b>430</b> of <figref idref="DRAWINGS">FIG. 4</figref>. The first control unit <b>412</b> of can execute the first display interface <b>430</b> to display the travel route <b>214</b>.</p>
<p id="p-0147" num="0146">The second software <b>442</b> of <figref idref="DRAWINGS">FIG. 4</figref> of the second device <b>106</b> of <figref idref="DRAWINGS">FIG. 4</figref> can include the navigation system <b>100</b>. For example, the second software <b>442</b> can include the predetermined level module <b>502</b>, the predetermined distance calculator module <b>504</b>, the pre-computation module <b>506</b>, the pruning module <b>508</b>, the route planning module <b>512</b>, and the display module <b>520</b>.</p>
<p id="p-0148" num="0147">The second control unit <b>434</b> of <figref idref="DRAWINGS">FIG. 4</figref> can execute the second software <b>442</b> for the predetermined level module <b>502</b> to calculate the predetermined arrival level <b>220</b>. The second control unit <b>434</b> can execute the second software <b>442</b> for the predetermined distance calculator module <b>504</b> to calculate the predetermined distance <b>224</b>.</p>
<p id="p-0149" num="0148">The second control unit <b>434</b> can execute the second software <b>442</b> for the pre-computation module <b>506</b>, the pruning module <b>508</b>, or the combination thereof to generate the target location <b>238</b>. The second control unit <b>434</b> can execute the second software <b>442</b> for the simplified graph generator module <b>510</b> to generate the simplified graph. The second control unit <b>434</b> can execute the second software <b>442</b> for the route planning module to generate the travel route <b>214</b> to the destination <b>206</b> based on the target location <b>238</b>.</p>
<p id="p-0150" num="0149">The display module <b>520</b> can represent the second display interface <b>440</b> of <figref idref="DRAWINGS">FIG. 4</figref>. The second control unit <b>434</b> can execute the second display interface <b>440</b> for displaying the travel route <b>214</b>.</p>
<p id="p-0151" num="0150">The navigation system <b>100</b> can be partitioned between the first software <b>426</b> and the second software <b>442</b>. For example, the second software <b>442</b> can include the predetermined level module <b>502</b>, the predetermined distance calculator module <b>504</b>, the pre-computation module <b>506</b>, the pruning module <b>508</b>, the simplified graph generator module <b>510</b>, and the route planning module <b>512</b>. The second control unit <b>434</b> can execute modules partitioned on the second software <b>442</b> as previously described.</p>
<p id="p-0152" num="0151">The first software <b>426</b> can include the display module <b>520</b>. Based on the size of the first storage unit <b>414</b> of <figref idref="DRAWINGS">FIG. 4</figref>, the first software <b>426</b> can include additional modules of the navigation system <b>100</b>. The first control unit <b>412</b> can execute the modules partitioned on the first software <b>426</b> as previously described.</p>
<p id="p-0153" num="0152">The first user interface <b>418</b> of <figref idref="DRAWINGS">FIG. 4</figref> can receive an entry by the user for the destination <b>206</b>. The first control unit <b>412</b> can operate the first communication unit <b>416</b> of <figref idref="DRAWINGS">FIG. 4</figref> to send the entry to the second device <b>106</b>. The first control unit <b>412</b> can operate the first software <b>426</b> to operate the location unit <b>420</b> of <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0154" num="0153">The second communication unit <b>436</b> of <figref idref="DRAWINGS">FIG. 4</figref> can send the travel route <b>214</b> to the first device <b>102</b> through the communication path <b>104</b> of <figref idref="DRAWINGS">FIG. 4</figref>. The travel route <b>214</b> can be displayed on the first display interface <b>430</b> and the second device.</p>
<p id="p-0155" num="0154">It has been discovered that the present invention provides the navigation system <b>100</b> for providing a safe operation of the navigation system <b>100</b> and other user interface system within a vehicle. The benefit is provided by generating the target location <b>238</b> for speeding up and reducing the computation burden for generating the travel route <b>214</b> to aid the user for viewing the travel route <b>214</b> more quickly to operate the vehicle more safely for reaching the destination <b>206</b>. Furthermore, by pre-computing, pruning, or the combination thereof to generate the target location <b>238</b>, the navigation system <b>100</b> can reduce the computation burden and calculate more accurate value for the estimated arrival level <b>218</b>, the estimated consumption level <b>226</b>, the estimated alternate transportation time <b>230</b>, the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof to aid the user of safer operation of the vehicle.</p>
<p id="p-0156" num="0155">The navigation system <b>100</b> describes the module functions or order as an example. The modules can be partitioned differently. For example, the uni-directional module <b>514</b> and the reverse uni-directional module <b>516</b> can be combined. Each of the modules can operate individually and independently of the other modules.</p>
<p id="p-0157" num="0156">Furthermore, data generated in one module can be used by another module without being directly coupled to each other. For example, the predetermined level module <b>502</b> can generate the predetermined arrival level <b>220</b>. The pruning module <b>508</b> can generate the target location <b>238</b> based on finding out whether the estimated arrival level <b>218</b> met or exceeded the predetermined arrival level <b>220</b>.</p>
<p id="p-0158" num="0157">Referring now to <figref idref="DRAWINGS">FIG. 6</figref>, therein is shown a flow of the pre-computation module <b>506</b>. The pre-computation module <b>506</b> generates a list of candidates for the next location where the vehicle can stop by before reaching the target destination. For example, the pre-computation module <b>506</b> can generate the target location <b>238</b> of <figref idref="DRAWINGS">FIG. 2</figref> by selecting the replenishment location <b>210</b> of <figref idref="DRAWINGS">FIG. 2</figref> based on the estimated arrival level <b>218</b> of <figref idref="DRAWINGS">FIG. 2</figref> meeting or exceeding the predetermined arrival level <b>220</b> of <figref idref="DRAWINGS">FIG. 2</figref>. The pre-computation module <b>506</b> can be shown in pseudo code format as in the following pseudo code 1:</p>
<p id="p-0159" num="0158">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Function RoutePrecompute(Graph, OriginId, targetCount, fullCharge,</entry>
</row>
<row>
<entry>minimumSafeCharge)</entry>
</row>
<row>
<entry>&#x2003;// initialize data structures</entry>
</row>
<row>
<entry>&#x2003;TargetList.clear( )</entry>
</row>
<row>
<entry>&#x2003;PriorityQueue.clear( )</entry>
</row>
<row>
<entry>&#x2003;NodeSet.clear( )</entry>
</row>
<row>
<entry>&#x2003;Origin = NodeSet.getNode(Graph,OriginId)</entry>
</row>
<row>
<entry>&#x2003;Origin.cost = 0</entry>
</row>
<row>
<entry>&#x2003;Origin.charge = fullCharge</entry>
</row>
<row>
<entry>&#x2003;Origin.altTime = 0</entry>
</row>
<row>
<entry>&#x2003;Origin.previous = NULL // signifies beginning of route, i.e., there is</entry>
</row>
<row>
<entry>&#x2003;no previous node on the route</entry>
</row>
<row>
<entry>&#x2003;PriorityQueue.insert(Origin) // sets Origin.inQueue = true</entry>
</row>
<row>
<entry>&#x2003;// search nodes in order of cost</entry>
</row>
<row>
<entry>&#x2003;While ( PriorityQueue.isEmpty( ) is false)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;Node = PriorityQueue.top( )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;Node.settled = true // getNode sets settled to false when node is</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;first encountered</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;If ( Node.target is true)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;TargetList.add(Node)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;If (TargetList.size( ) equals targetCount) // this check is</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;optional - the algorithm will terminate remaining targets are out</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;of range</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;Return TargetList</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;Links = Graph.getLinks(Node.id)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;For ( i = 0; i &#x3c; Links.count( ); i = i+1 )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;id = Links[i].nextId</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode = NodeSet.getNode(Graph,id)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;If ( NextNode.inQueue is true )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;If (NextNode.cost &#x3e; Links[i].cost + Node.cost )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;PriorityQueue.remove(NextNode)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.previous = pointer to Node // links nodes on</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;route back to origin</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.cost = Links[i].cost + Node.cost</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.charge = Node.charge &#x2212; Links[i].consumed</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.altTime = Node.altTime + Links[i].time</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;If (NextNode.charge &#x3e; minimumSafeCharge)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;PriorityQueue.insert(NextNode) // sets</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.inQueue = true</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;Else if ( NextNode.settled is false )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.previous = pointer to Node // links nodes on</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;route</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;back to origin</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.cost = Links[i].cost + Node.cost</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.charge = Node.charge &#x2212; Links[i].consumed</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.altTime = Node.altTime + Links[i].time</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;If (NextNode.charge &#x3e; minimumSafeCharge)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;PriorityQueue.insert(NextNode)</entry>
</row>
<row>
<entry>// cannot find all target locations</entry>
</row>
<row>
<entry>Return TargetList</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0160" num="0159">The pseudo code 1 and the pseudo codes that follow can be implemented in software, firmware, hardware, of a combination thereof. The pseudo codes describes the logic of the invention in exemplary form can be implemented in hardware description language, such as Verilog&#x2122; or VHDL&#x2122; and then synthesized to form hardware and logic circuits.</p>
<p id="p-0161" num="0160">The following table defines the mapping between the pseudo code and the specification elements. The table will be denoted as Table 1:</p>
<p id="p-0162" num="0161">
<tables id="TABLE-US-00002" num="00002">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="91pt" align="left"/>
<colspec colname="2" colwidth="126pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry>Pseudo Code Parameters</entry>
<entry>Specification Elements</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Graph</entry>
<entry>Geographic information for the start location</entry>
</row>
<row>
<entry/>
<entry>204, the replenishment location 210, the</entry>
</row>
<row>
<entry/>
<entry>intermediate stop 208, and the destination</entry>
</row>
<row>
<entry/>
<entry>206</entry>
</row>
<row>
<entry>Origin</entry>
<entry>The start location 204</entry>
</row>
<row>
<entry>Origin.charge = fullCharge</entry>
<entry>The current location estimated level 216 of</entry>
</row>
<row>
<entry/>
<entry>FIG. 2 at full capacity at the start location</entry>
</row>
<row>
<entry/>
<entry>204</entry>
</row>
<row>
<entry>Links</entry>
<entry>The travel section 212</entry>
</row>
<row>
<entry>Node</entry>
<entry>e.g., the replenishment location 210</entry>
</row>
<row>
<entry>NextNode</entry>
<entry>Next stopping point: e.g., the first</entry>
</row>
<row>
<entry/>
<entry>replenishment location 302 of FIG. 2.</entry>
</row>
<row>
<entry>cost</entry>
<entry>e.g., the estimated sectional travel time 234</entry>
</row>
<row>
<entry/>
<entry>of FIG. 2; the estimated sectional financial</entry>
</row>
<row>
<entry/>
<entry>cost 236 of FIG. 2, or the combination</entry>
</row>
<row>
<entry/>
<entry>thereof</entry>
</row>
<row>
<entry>charge</entry>
<entry>The estimated arrival level 218, the current</entry>
</row>
<row>
<entry/>
<entry>location estimated level 216, or the</entry>
</row>
<row>
<entry/>
<entry>combination thereof</entry>
</row>
<row>
<entry>Links[i].consumed</entry>
<entry>The estimated consumption level 226 of</entry>
</row>
<row>
<entry/>
<entry>FIG. 2</entry>
</row>
<row>
<entry>minimumSafeCharge</entry>
<entry>The predetermined arrival level 220</entry>
</row>
<row>
<entry>TargetList</entry>
<entry>e.g., the first replenishment location 302 of</entry>
</row>
<row>
<entry/>
<entry>FIG. 3; the first intermediate stop 312 of</entry>
</row>
<row>
<entry/>
<entry>FIG. 3; the destination 206 of FIG. 2. or the</entry>
</row>
<row>
<entry/>
<entry>combination thereof</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0163" num="0162">The pre-computation module <b>506</b> can include an initializer pre-computation submodule <b>602</b>. The initializer pre-computation submodule <b>602</b> includes the following functions to initialize the data structures used in pseudo code 1:</p>
<p id="p-0164" num="0163">
<tables id="TABLE-US-00003" num="00003">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>TargetList.clear( )</entry>
</row>
<row>
<entry/>
<entry>PriorityQueue.clear( )</entry>
</row>
<row>
<entry/>
<entry>NodeSet.clear( )</entry>
</row>
<row>
<entry/>
<entry>Origin = NodeSet.getNode(Graph,OriginId)</entry>
</row>
<row>
<entry/>
<entry>Origin.cost = 0</entry>
</row>
<row>
<entry/>
<entry>Origin.charge = fullCharge</entry>
</row>
<row>
<entry/>
<entry>Origin.altTime = 0</entry>
</row>
<row>
<entry/>
<entry>Origin.previous = NULL</entry>
</row>
<row>
<entry/>
<entry>PriorityQueue.insert(Origin)</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0165" num="0164">For example, the &#x201c;Graph&#x201d; is defined as a data structure that represents the geographic information for the geographic region where the user's vehicle can travel. &#x201c;Graph&#x201d; can be referred as Graph or graph going forward.</p>
<p id="p-0166" num="0165">A map can provide the geographic information on the graph. A &#x201c;Node&#x201d; is defined as the data structure representing the stopping points, such as the start location <b>204</b>, the replenishment location <b>210</b>, the intermediate stop <b>208</b>, the destination <b>206</b>, or the combination thereof on the graph. &#x201c;Node&#x201d; can be referred as Node or node going forward. The node can include the &#x201c;Origin,&#x201d; and the &#x201c;NextNode.&#x201d;</p>
<p id="p-0167" num="0166">The &#x201c;PriorityQueue&#x201d; is defined as a data structure representing a list of nodes discoverable by the pre-computation module <b>506</b> on the graph. The &#x201c;PriorityQueue.clear( )&#x201d; removes the node from the list so that the list is empty.</p>
<p id="p-0168" num="0167">&#x201c;NodeSet&#x201d; is defined as a data structure that records the node that have been encountered by a search performed by the pre-computation module <b>506</b> based on the identification (ID) in the graph. Each node can have a unique ID to allow the pre-computation module <b>506</b> to identify the node. For example, the ID for the first replenishment location <b>302</b> can be &#x201c;first&#x201d; of the first replenishment location <b>302</b>. &#x201c;NodeSet.clear( )&#x201d; removes the node from the &#x201c;NodeSet.&#x201d;</p>
<p id="p-0169" num="0168">The &#x201c;TargetList&#x201d; is defined as a data structure representing a list of nodes for the start location <b>204</b>, the replenishment location <b>210</b>, the intermediate stop <b>208</b>, the destination <b>206</b>, or the combination thereof selected by the pre-computation module <b>506</b> from the graph. The &#x201c;TargetList.clear( )&#x201d; initializes the &#x201c;TargetList&#x201d; by clearing the data structure.</p>
<p id="p-0170" num="0169">The &#x201c;Origin&#x201d; is defined as a data structure representing the start location <b>204</b>. &#x201c;NodeSet.getNode( )&#x201d; is defined as a function to identify the stopping point and return a node from the graph. For a more specific example, the &#x201c;Graph&#x201d; and &#x201c;OriginId&#x201d; are inputs for the function &#x201c;NodeSet.getNode( )&#x201d;</p>
<p id="p-0171" num="0170">The &#x201c;OriginId&#x201d; is defined as the ID for the start location <b>204</b>. For example, &#x201c;NodeSet.getNode(Graph,OriginId)&#x201d; can return the node representing the start location <b>204</b> from the graph based on the &#x201c;OriginId.&#x201d;</p>
<p id="p-0172" num="0171">The field is defined as a set of elements for the &#x201c;Node,&#x201d; &#x201c;Origin,&#x201d; and &#x201c;NextNode.&#x201d; An element is defined as the characteristic of the stopping points. &#x201c;NextNode&#x201d; is defined as a data structure representing the next stopping point. If a field is introduced without specifying either the &#x201c;Node,&#x201d; &#x201c;Origin,&#x201d; or &#x201c;NextNode,&#x201d; the field is shared by the &#x201c;Node,&#x201d; &#x201c;Origin,&#x201d; and &#x201c;NextNode.&#x201d; However, if the field is specific to the data structure, the field will be introduced with a specific data structure. For example, &#x201c;charge&#x201d; is defined as a field for the &#x201c;Node.&#x201d; The details regarding the &#x201c;NextNode&#x201d; will be discussed later.</p>
<p id="p-0173" num="0172">A &#x201c;cost&#x201d; is defined as a field representing the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof &#x201c;Origin.cost&#x201d; is defined as the data structure for the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof at the start location <b>204</b>. Here, &#x201c;Origin.cost=0&#x201d; can set the &#x201c;Origin.cost&#x201d; to &#x201c;0,&#x201d; because no &#x201c;cost&#x201d; is incurred when the vehicle is still at the &#x201c;Origin.&#x201d; A travel cost can represent the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof.</p>
<p id="p-0174" num="0173">A &#x201c;charge&#x201d; is defined as a field for the &#x201c;Node&#x201d; for the amount of resource, fuel, or the combination thereof that would remain after traveling the travel route <b>214</b> from the start location <b>204</b> to the next stopping point. &#x201c;fullCharge&#x201d; is defined as the resource, fuel, or the combination thereof being full capacity. For example, &#x201c;Origin.charge=fullCharge&#x201d; can represent that the current location estimated level <b>216</b> at the start location <b>204</b> for the resource, fuel, or the combination thereof being at full capacity.</p>
<p id="p-0175" num="0174">The variable &#x201c;previous&#x201d; is defined as a field or a pointer to the previous node. &#x201c;Origin.previous=NULL&#x201d; can signify that the vehicle is at the start location <b>204</b>. &#x201c;PriorityQueue.insert(Origin)&#x201d; can add the &#x201c;Origin&#x201d; in the &#x201c;PriorityQueue&#x201d; as the first node.</p>
<p id="p-0176" num="0175">The pre-computation module <b>506</b> can include a priority queue pre-computation submodule <b>604</b> and is coupled to the initializer pre-computation submodule <b>602</b>. The priority queue pre-computation submodule <b>604</b> establishes a condition for the pre-computation module <b>506</b> to search for the stopping points, such as the replenishment location <b>210</b>, the intermediate stop <b>208</b>, or the combination thereof. For example the priority queue pre-computation submodule <b>604</b> includes the following function from pseudo code 1:</p>
<p id="p-0177" num="0176">While (PriorityQueue.is Empty( ) is false)</p>
<p id="p-0178" num="0177">The priority queue pre-computation submodule <b>604</b> is shown as a decision box having a logical path that is either &#x201c;YES&#x201d; or &#x201c;NO&#x201d; for invoking the next submodule. The invoking of the submodule is defined as moving along the logical path to the next submodule and executing the next submodule.</p>
<p id="p-0179" num="0178">For example, if the condition for the priority queue pre-computation submodule <b>604</b> is met, a logical path for &#x201c;YES&#x201d; will be chosen and an incomplete pre-computation submodule <b>634</b> can be invoked. If the condition for the priority queue pre-computation submodule <b>604</b> is not met, a logical path for &#x201c;NO&#x201d; will be chosen and a settled pre-computation submodule <b>606</b> can be invoked. Throughout this specification going forward, a submodule that is a decision box is illustrated with a diamond shape. If a submodule is not a decision box, the submodule can be illustrated in a shape other than the diamond shape.</p>
<p id="p-0180" num="0179">For a further example, &#x201c;While (PriorityQueue.is Empty( ) is false)&#x201d; can establish the condition whether the &#x201c;PriorityQueue&#x201d; is empty or not. If the &#x201c;PriorityQueue&#x201d; is empty, the incomplete pre-computation submodule <b>634</b> can be invoked from the priority queue pre-computation submodule <b>604</b>. The details regarding the incomplete pre-computation submodule <b>634</b> will be discussed later.</p>
<p id="p-0181" num="0180">At the first invocation of the priority queue pre-computation submodule <b>604</b>, the &#x201c;PriorityQueue&#x201d; is defined as not empty if the &#x201c;PriorityQueue.insert(Origin)&#x201d; successfully adds the &#x201c;Origin&#x201d; in the &#x201c;PriorityQueue&#x201d; as the first node. While the &#x201c;PriorityQueue&#x201d; is not empty, the settled pre-computation submodule <b>606</b> can be invoked.</p>
<p id="p-0182" num="0181">The pre-computation module <b>506</b> can include the settled pre-computation submodule <b>606</b> and is coupled to the priority queue pre-computation submodule <b>604</b>. The settled pre-computation submodule <b>606</b> identifies the &#x201c;Node&#x201d; or the stopping point with the lowest value for the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof. For example, the settled pre-computation submodule <b>606</b> includes the following functions from pseudo code 1:</p>
<p id="p-0183" num="0182">
<tables id="TABLE-US-00004" num="00004">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="63pt" align="left"/>
<colspec colname="1" colwidth="154pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>Node = PriorityQueue.top( )&#x201d;</entry>
</row>
<row>
<entry/>
<entry>Node.settled = true</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0184" num="0183">&#x201c;PriorityQueue.top( )&#x201d; extracts the &#x201c;Node&#x201d; with the lowest value for the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof in the &#x201c;PriorityQueue.&#x201d; At the very first invocation of the settled pre-computation submodule <b>606</b>, the &#x201c;PriorityQueue&#x201d; can only include the &#x201c;Origin.&#x201d; The &#x201c;PriorityQueue.top( )&#x201d; will extract the &#x201c;Origin,&#x201d; from the &#x201c;PriorityQueue&#x201d; and sets the &#x201c;inQueue&#x201d; for the &#x201c;Origin&#x201d; to &#x201c;false.&#x201d;</p>
<p id="p-0185" num="0184">&#x201c;inQueue&#x201d; is a field representing the condition whether the &#x201c;Origin,&#x201d; &#x201c;Node,&#x201d; or &#x201c;NextNode&#x201d; is in the &#x201c;PriorityQueue.&#x201d; If the &#x201c;inQueue&#x201d; is set to &#x201c;false,&#x201d; the &#x201c;Node&#x201d; for example, is no longer in the &#x201c;PriorityQueue.&#x201d; If the &#x201c;inQueue&#x201d; is set to &#x201c;true,&#x201d; the &#x201c;Node&#x201d; for example, is in the &#x201c;PriorityQueue.&#x201d;</p>
<p id="p-0186" num="0185">&#x201c;Node=PriorityQueue.top( )&#x201d; represents assigning of the return value for &#x201c;PriorityQueue.top( )&#x201d; to the &#x201c;Node.&#x201d; For the very first invocation, the &#x201c;Origin&#x201d; will be assigned as the &#x201c;Node.&#x201d; The details regarding &#x201c;PriorityQueue.top( )&#x201d; extracting and assigning of the &#x201c;Node&#x201d; other than the &#x201c;Origin&#x201d; will be discussed later.</p>
<p id="p-0187" num="0186">&#x201c;settled&#x201d; is defined as a field to determine whether the lowest value for the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof had been found by the pre-computation module <b>506</b>. &#x201c;Node.settled=true&#x201d; represents a data structure for the &#x201c;Node&#x201d; having the lowest value for the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof had been found by the pre-computation module <b>506</b>.</p>
<p id="p-0188" num="0187">As discussed previously, at the first invocation of the settled pre-computation submodule <b>606</b>, &#x201c;PriorityQueue.top( )&#x201d; can extract the &#x201c;Origin.&#x201d; Since there is no value for the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof at the &#x201c;Origin,&#x201d; &#x201c;Node.settled&#x201d; will be set as &#x201c;true&#x201d; if &#x201c;PriorityQueue.top( )&#x201d; returns the &#x201c;Origin.&#x201d; However, once the pre-computation module <b>506</b> executes &#x201c;NextSet.getNode( )&#x201d; &#x201c;Node.settled&#x201d; will be set as &#x201c;false.&#x201d; The details regarding &#x201c;Node.settled=true&#x201d; determining the &#x201c;Node&#x201d; having the lowest value for the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof other than the &#x201c;Origin&#x201d; will be discussed later. The details regarding the execution of &#x201c;NextSet.getNode( )&#x201d; will be discussed later.</p>
<p id="p-0189" num="0188">The pre-computation module <b>506</b> can include a target determinator pre-computation submodule <b>608</b> and is coupled to the settled pre-computation submodule <b>606</b>. The target determinator pre-computation submodule <b>608</b> identifies whether the condition that a node is one of the stopping points that can be the target location <b>238</b> has been met or not. For example, the target determinator pre-computation submodule <b>608</b> includes the following function to identify the condition in pseudo code 1:</p>
<p id="p-0190" num="0189">If (Node.target is true)</p>
<p id="p-0191" num="0190">&#x201c;target&#x201d; is defined as a field for the node to be determine whether the node can be one of the stopping points that can be the target location <b>238</b> or not. If &#x201c;target&#x201d; is set to &#x201c;true,&#x201d; &#x201c;NodeSet.getNode&#x201d; can return the node to be included in the target location <b>238</b>. Furthermore, if &#x201c;target&#x201d; is &#x201c;true,&#x201d; the pre-computation module <b>506</b> can invoke an aggregator pre-computation submodule <b>610</b>. Details regarding the aggregator pre-computation submodule <b>610</b> will be discussed later.</p>
<p id="p-0192" num="0191">If &#x201c;target&#x201d; is set to &#x201c;false,&#x201d; the node cannot be included in the target location <b>238</b>. The pre-computation module <b>506</b> can invoke a get-link pre-computation submodule <b>614</b>.</p>
<p id="p-0193" num="0192">The get-link pre-computation submodule <b>614</b> is coupled to the target determinator pre-computation submodule <b>608</b>. The get-link pre-computation submodule <b>614</b> identifies the path from one stopping point to another. For example, the path can include the travel section <b>212</b> of <figref idref="DRAWINGS">FIG. 2</figref> between the start location <b>204</b> to the first replenishment location <b>302</b>. For a further example, the get-link pre-computation submodule <b>614</b> includes the following function to identify the path as described in pseudo code 1:</p>
<p id="p-0194" num="0193">Links=&#x201c;Graph.getLinks(Node.id)</p>
<p id="p-0195" num="0194">&#x201c;Links&#x201d; is defined as an array representing a number of paths originating from that one stopping point. For example, the travel section <b>212</b> can originate from the start location <b>204</b> to the first intermediate stop <b>312</b>.</p>
<p id="p-0196" num="0195">A node can have multiple numbers of &#x201c;Links&#x201d; originating from the same node. For example, the start location <b>204</b> can have two paths of the travel section <b>212</b> originating from the start location <b>204</b>. For a further example, &#x201c;Links&#x201d; from the start location <b>204</b> can include the travel section <b>212</b> to the first replenishment location <b>302</b> and the travel section <b>212</b> to the first intermediate stop <b>312</b>.</p>
<p id="p-0197" num="0196">&#x201c;Links&#x201d; can have the following fields: &#x201c;cost&#x201d; and &#x201c;nextId.&#x201d; &#x201c;Links cost&#x201d; is defined as a data structure representing the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof for traveling the &#x201c;Links.&#x201d; The &#x201c;nextId&#x201d; is defined as a field that represents the ID for the next stopping point following the current &#x201c;Node.&#x201d;</p>
<p id="p-0198" num="0197">&#x201c;id&#x201d; is defined as a field for the identification (ID). &#x201c;Graph.getLinks(Node.id)&#x201d; can identify the &#x201c;Links&#x201d; associated with the &#x201c;Node&#x201d; from the &#x201c;Graph.&#x201d; If the &#x201c;Node&#x201d; is not in the &#x201c;NodeSet,&#x201d; thus, the pre-computation module <b>506</b> has yet to encounter the &#x201c;Node,&#x201d; &#x201c;getLinks( )&#x201d; can also create a &#x201c;Node,&#x201d; set all the fields for the &#x201c;Node,&#x201d; and include the &#x201c;Node&#x201d; in the &#x201c;NodeSet.&#x201d;</p>
<p id="p-0199" num="0198">&#x201c;Links=Graph.getLinks(Node.id)&#x201d; can represent the get-link pre-computation submodule <b>614</b> assigning the paths associated with that &#x201c;Node.id&#x201d; to the &#x201c;Links&#x201d; For example, &#x201c;Graph.getLinks(Node.id)&#x201d; can identify the path originating from the start location <b>204</b>. For a more specific example, the &#x201c;Links&#x201d; for the start location <b>204</b> can represent the travel section <b>212</b> to the first replenishment location <b>302</b> and the travel section <b>212</b> to the first intermediate stop <b>312</b>.</p>
<p id="p-0200" num="0199">The pre-computation module <b>506</b> can include a link-counter pre-computation submodule <b>616</b> and is coupled to the get-link pre-computation submodule <b>614</b>. The link-counter pre-computation submodule <b>616</b> establishes a condition for the pre-computation module <b>506</b> to search for the stopping points, such as the replenishment location <b>210</b>, with the lowest value for the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof. For example, the link-counter pre-computation submodule <b>616</b> includes the following function to establish the condition:</p>
<p id="p-0201" num="0200">For (i=0; i&#x3c;Links.count( ); i=i+1)</p>
<p id="p-0202" num="0201">&#x201c;Links.count( )&#x201d; computes the number of paths that &#x201c;Links&#x201d; can have. From the previous example, the start location <b>204</b>, &#x201c;Links.count( )&#x201d; can return &#x201c;two&#x201d; as the number of paths originating from the start location <b>204</b>.</p>
<p id="p-0203" num="0202">&#x201c;i&#x201d; represents the position within the array representing the &#x201c;Links.&#x201d; For example, the first position of the array is signified as &#x201c;0.&#x201d; &#x201c;i=0&#x201d; signifies that &#x201c;i&#x201d; is positioned at the first position of the array. For this example, &#x201c;i=0&#x201d; signifies that &#x201c;i&#x201d; is positioned at the first position of the &#x201c;Links&#x201d; &#x201c;i++&#x201d; represents a function to move the position of &#x201c;i&#x201d; to the next position along the array. For example, the &#x201c;Links&#x201d; for the start location <b>204</b> can have the travel section <b>212</b> to the first replenishment location <b>302</b> and the travel section <b>212</b> to the first intermediate stop <b>312</b> in order. For a more specific example, &#x201c;i=0&#x201d; can represent the travel section <b>212</b> to the first replenishment location <b>302</b> as the first position of the &#x201c;Links&#x201d; &#x201c;i++&#x201d; can move &#x201c;i&#x201d; to &#x201c;i=1.&#x201d; &#x201c;i=1&#x201d; can represent the travel section <b>212</b> to the first intermediate stop <b>312</b> for the second portion of the &#x201c;Links.&#x201d;</p>
<p id="p-0204" num="0203">For a further example, &#x201c;For (i=0; i&#x3c;Links count( ); i=i+1)&#x201d; can establish the condition to search for the lowest value for the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof while &#x201c;Links.count( )&#x201d; can compute for the &#x201c;Links.&#x201d; More specifically, until &#x201c;For (i=0; i&#x3c;Links.count( ); i=i+1)&#x201d; can no longer increment the &#x201c;i,&#x201d; the pre-computation module <b>506</b> can continue to invoke the link-counter pre-computation submodule <b>616</b>.</p>
<p id="p-0205" num="0204">If &#x201c;Links.count( )&#x201d; can compute for &#x201c;Links,&#x201d; the pre-computation module <b>506</b> can invoke a get-node pre-computation submodule <b>618</b>. If &#x201c;Links.count( )&#x201d; cannot compute for &#x201c;Links,&#x201d; the pre-computation module <b>506</b> can invoke the priority queue pre-computation submodule <b>604</b>. The details regarding the get-node pre-computation submodule <b>618</b> will be discussed later.</p>
<p id="p-0206" num="0205">The pre-computation module <b>506</b> can include the get-node pre-computation submodule <b>618</b> and is coupled to the link-counter pre-computation submodule <b>616</b>. The get-node pre-computation submodule <b>618</b> identifies the candidate for the next stopping point based on the path available in the &#x201c;Links.&#x201d; For example, the get-node pre-computation submodule <b>618</b> includes the following functions to identify the candidate for the next stopping point as described in pseudo code 1:</p>
<p id="p-0207" num="0206">
<tables id="TABLE-US-00005" num="00005">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="168pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>id = Links[i].nextId</entry>
</row>
<row>
<entry/>
<entry>NextNode = NodeSet.getNode(Graph,id)</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0208" num="0207">&#x201c;id=Links[i].nextId&#x201d; sets the &#x201c;id&#x201d; based on the next stopping point after traversing the path available in the &#x201c;Links[i].&#x201d; For example, &#x201c;i&#x201d; can be &#x201c;0.&#x201d; For a further example, &#x201c;Links[0]&#x201d; can represent the travel section <b>212</b> from the start location <b>204</b> to the first replenishment location <b>302</b>. The next stopping point after traversing the travel section <b>212</b> can be the first replenishment location <b>302</b>. &#x201c;Links[i].nextId&#x201d; can represent a data structure for indicating the direction that a &#x201c;Links[i]&#x201d; or the path is heading towards. For example, &#x201c;Links[0].nextId&#x201d; can head towards the first replenishment location <b>302</b>. The get-node pre-computation submodule <b>618</b> can execute &#x201c;id=Links[i].nextId&#x201d; to set the &#x201c;id&#x201d; for the first replenishment location <b>302</b>.</p>
<p id="p-0209" num="0208">&#x201c;NodeSet.getNode(Graph,id)&#x201d; returns the &#x201c;Node&#x201d; having the &#x201c;id&#x201d; to be assigned for the &#x201c;NextNode.&#x201d; For example, &#x201c;id&#x201d; can represent the ID for the first replenishment location <b>302</b>. NodeSet.getNode(Graph,id)&#x201d; can return the &#x201c;Node&#x201d; for the first replenishment location <b>302</b>. &#x201c;NextNode=NodeSet.getNode(Graph,id)&#x201d; can set the first replenishment location <b>302</b> as the &#x201c;NextNode.&#x201d; The pre-computation module <b>506</b> can continue to invoke the get-node pre-computation submodule <b>618</b> until the link-counter pre-computation submodule <b>616</b> can no longer increment the &#x201c;i&#x201d; for &#x201c;Links.&#x201d;</p>
<p id="p-0210" num="0209">The pre-computation module <b>506</b> can include an in-queue pre-computation submodule <b>620</b> and is coupled to the get-node pre-computation submodule <b>618</b>. The in-queue pre-computation submodule <b>620</b> identifies whether the condition that the &#x201c;NextNode&#x201d; is in the &#x201c;PriorityQueue&#x201d; has been met or not. For example, the in-queue pre-computation submodule <b>620</b> includes the following functions to identify the condition as described in pseudo code 1:</p>
<p id="p-0211" num="0210">
<tables id="TABLE-US-00006" num="00006">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="56pt" align="left"/>
<colspec colname="1" colwidth="161pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>If ( NextNode.inQueue is true )</entry>
</row>
<row>
<entry/>
<entry>Else if ( NextNode.settled is false )</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0212" num="0211">At the very first invocation of the in-queue pre-computation submodule <b>620</b>, the &#x201c;NextNode&#x201d; will not be in the &#x201c;PriorityQueue.&#x201d; Subsequently, the condition for &#x201c;If (NextNode.inQueue is true)&#x201d; will not be met and the in-queue pre-computation submodule <b>620</b> can check whether the condition for &#x201c;Else if (NextNode.settled is false)&#x201d; is met or not.</p>
<p id="p-0213" num="0212">As discussed earlier, the execution of &#x201c;NodeSet.getNode( )&#x201d; sets the &#x201c;settled&#x201d; to &#x201c;false.&#x201d; Previously, the get-node pre-computation submodule <b>618</b> executed &#x201c;NodeSet.getNode(Graph,id)&#x201d; for the &#x201c;NextNode.&#x201d; Subsequently, &#x201c;NextNode.settled&#x201d; can be set to &#x201c;false.&#x201d;</p>
<p id="p-0214" num="0213">For example, by invoking &#x201c;NodeSet.getNode(Graph,id),&#x201d; the pre-computation module <b>506</b> can assume that a &#x201c;Node&#x201d; has at least one of the &#x201c;Links&#x201d; originating from that &#x201c;Node.&#x201d; Furthermore, the pre-computation module <b>506</b> can assume that the lowest value for the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof had not been found. Subsequently, &#x201c;NodeSet.getNode(Graph,id)&#x201d; sets the &#x201c;settled&#x201d; for the &#x201c;NextNode&#x201d; as &#x201c;false.&#x201d; Therefore, the very first invocation of the in-queue pre-computation submodule <b>620</b> can meet the condition for &#x201c;Else if (NextNode.settled is false).&#x201d;</p>
<p id="p-0215" num="0214">By meeting the condition for &#x201c;Else if (NextNode.settled is false),&#x201d; the pre-computation module <b>506</b> can invoke a calculator pre-computation submodule <b>622</b>. The details regarding the calculator pre-computation submodule <b>622</b> will be discussed later.</p>
<p id="p-0216" num="0215">As a contrast to the very first invocation, if the &#x201c;NextNode.inQueue&#x201d; is &#x201c;true,&#x201d; thus the condition for &#x201c;If (NextNode.inQueue is true)&#x201d; is met, the pre-computation module <b>506</b> can invoke a cost pre-computation submodule <b>624</b>. The details regarding the cost pre-computation submodule <b>624</b> will be discussed later.</p>
<p id="p-0217" num="0216">The pre-computation module <b>506</b> can include the calculator pre-computation submodule <b>622</b> and is coupled to the in-queue pre-computation submodule <b>620</b>. The calculator pre-computation submodule <b>622</b> calculates the &#x201c;cost&#x201d; for traveling to the next stopping point. For example, the calculator pre-computation submodule <b>622</b> can calculate the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof for traversing the travel section <b>212</b>.</p>
<p id="p-0218" num="0217">The calculator pre-computation submodule <b>622</b> also calculates the estimation for the amount of resource, fuel, or the combination thereof remaining when reaching the next stopping point. For example, the calculator pre-computation submodule <b>622</b> can calculate the estimated arrival level <b>218</b> for arriving at one or more of the stopping points after traversing the travel section <b>212</b>. For a further example, the calculator pre-computation submodule <b>622</b> can calculate the estimated arrival level <b>218</b> for arriving at the replenishment location <b>210</b>, the destination <b>206</b>, the intermediate stop <b>208</b>, or the combination thereof.</p>
<p id="p-0219" num="0218">The calculator pre-computation submodule <b>622</b> also calculates the estimation for the amount of resource, fuel, or the combination available before continuing on with the trip. For example, the calculator pre-computation submodule <b>622</b> can calculate the current location estimated level <b>216</b> at the replenishment location <b>210</b>, the destination <b>206</b>, the intermediate stop <b>208</b>, or the combination thereof. For a further example, the calculator pre-computation submodule <b>622</b> can calculate the current location estimated level <b>216</b> at the first replenishment location <b>302</b>.</p>
<p id="p-0220" num="0219">The calculator pre-computation submodule <b>622</b> also calculates the estimation for the amount of time required to reach the next stopping point traveling on a vehicle other than the user's vehicle. For example, the calculator pre-computation submodule <b>622</b> can calculate the estimated alternate transportation time <b>230</b> for traversing the alternate transportation route <b>228</b> of <figref idref="DRAWINGS">FIG. 2</figref> to reach the replenishment location <b>210</b>, the destination <b>206</b>, the intermediate stop <b>208</b>, or the combination thereof.</p>
<p id="p-0221" num="0220">The calculator pre-computation submodule <b>622</b> includes the following functions to calculate the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, the estimated arrival level <b>218</b>, the current location estimated level <b>216</b>, and the estimated alternate transportation time <b>230</b> as described from pseudo code 1:</p>
<p id="p-0222" num="0221">
<tables id="TABLE-US-00007" num="00007">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>NextNode.previous = pointer to Node</entry>
</row>
<row>
<entry/>
<entry>NextNode.cost = Links[i].cost + Node.cost</entry>
</row>
<row>
<entry/>
<entry>NextNode.charge = Node.charge &#x2212; Links[i].consumed</entry>
</row>
<row>
<entry/>
<entry>NextNode.altTime = Node.altTime + Links[i].time</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0223" num="0222">&#x201c;NextNode.previous=pointer to Node&#x201d; sets the pointer to the previous stopping point. For example, the &#x201c;NextNode&#x201d; can be the second replenishment location <b>304</b> of <figref idref="DRAWINGS">FIG. 3</figref>. &#x201c;NextNode.previous&#x201d; can represent the first replenishment location <b>302</b>.</p>
<p id="p-0224" num="0223">&#x201c;NextNode.cost&#x201d; is defined as the aggregation of the &#x201c;cost&#x201d; for traveling along the path to reach the next stopping point. For example, &#x201c;NextNode.cost&#x201d; can represent the aggregation of the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof for reaching the next stopping point from the start location <b>204</b> or the &#x201c;Origin.&#x201d;</p>
<p id="p-0225" num="0224">The calculator pre-computation submodule <b>622</b> can calculate the &#x201c;NextNode.cost&#x201d; by aggregating the &#x201c;Links[i].cost&#x201d; and &#x201c;Node.cost.&#x201d; For a further example, &#x201c;Links[i].cost&#x201d; can represent the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof for traveling the path to reach the next stopping point from the current stopping point. For a more specific example, &#x201c;Links[0].cost&#x201d; can represent the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof for traveling the travel section <b>212</b> from the first replenishment location <b>302</b>, the current stopping point, to the second replenishment location <b>304</b>, the next stopping point.</p>
<p id="p-0226" num="0225">&#x201c;Node.cost&#x201d; can represent the aggregation of the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof for traveling the path to reach the current stopping point from the &#x201c;Origin.&#x201d; For example, the current stopping point or the &#x201c;Node&#x201d; can be the first replenishment location <b>302</b>. &#x201c;Node.cost&#x201d; can represent the aggregation of the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof for traveling the travel section <b>212</b> from the start location <b>204</b> to reach the first replenishment location <b>302</b>. Subsequently, &#x201c;NextNode.cost&#x201d; can represent the aggregation of the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof for the travel section <b>212</b> from the start location <b>204</b> to the first replenishment location <b>302</b> and the travel section <b>212</b> from the first replenishment location <b>302</b> to the second replenishment location <b>304</b>.</p>
<p id="p-0227" num="0226">&#x201c;NextNode.charge&#x201d; can represent the estimated arrival level <b>218</b> for reaching the next stopping point or the &#x201c;NextNode.&#x201d; For example, the &#x201c;NextNode.charge&#x201d; can represent the estimated arrival level <b>218</b> after arriving at the second replenishment location <b>304</b> from the first replenishment location <b>302</b>. The calculator pre-computation submodule <b>622</b> can calculate the &#x201c;NextNode.charge&#x201d; by subtracting the &#x201c;Links[i].consumed&#x201d; from the &#x201c;Node.charge.&#x201d;</p>
<p id="p-0228" num="0227">&#x201c;Node.charge&#x201d; is defined as the amount of resource, fuel, or the combination thereof at the stopping point. For example, &#x201c;Node.charge&#x201d; can represent the current location estimated level <b>216</b> representing an electric charge for the electric vehicle when the vehicle was at the first replenishment location <b>302</b>. For a further example, the current location estimated level <b>216</b> at the first replenishment location <b>302</b> can be 100% of full battery capacity.</p>
<p id="p-0229" num="0228">The estimated consumption level <b>226</b> or &#x201c;Links[i].consumed&#x201d; is defined as the estimation of the resource, fuel, or the combination thereof required by the vehicle for traveling the path. For example, &#x201c;Links[0].consumed&#x201d; can represent the estimated consumption level <b>226</b> for traveling the travel section <b>212</b> from the first replenishment location <b>302</b> to the second replenishment location <b>304</b> or the &#x201c;NextNode.&#x201d; For a further example, the calculator pre-computation submodule <b>622</b> can calculate the estimated consumption level <b>226</b> for traversing the travel section <b>212</b>. More specifically, the estimated consumption level <b>226</b> can be 75% of the full battery capacity.</p>
<p id="p-0230" num="0229">The &#x201c;NextNode.charge&#x201d; can represent the estimated arrival level <b>218</b> when the vehicle reaches the second replenishment location <b>304</b>. The calculator pre-computation submodule <b>622</b> can calculate the &#x201c;NextNode.charge&#x201d; by subtracting the Links[i].consumed from the &#x201c;Node.charge.&#x201d; For this example, &#x201c;NextNode.charge&#x201d; or the estimated arrival level <b>218</b> after arriving at the second replenishment location <b>304</b> can be 25% of full battery capacity.</p>
<p id="p-0231" num="0230">&#x201c;altTime&#x201d; is defined as a field for the &#x201c;Node&#x201d; representing the estimation of the time that the user can accumulate on the alternate transportation route <b>228</b>. For example, &#x201c;altTime&#x201d; can represent the aggregation of the estimated alternate transportation time <b>230</b> for traveling along the alternate transportation route <b>228</b>.</p>
<p id="p-0232" num="0231">&#x201c;time&#x201d; is defined as a filed for the &#x201c;Links&#x201d; representing the estimation of the time that the user can take to travel the length of the path. For further definition, &#x201c;time&#x201d; can be the same as the &#x201c;cost.&#x201d; For example, &#x201c;time&#x201d; can represent the estimated sectional travel time <b>234</b>.</p>
<p id="p-0233" num="0232">The &#x201c;NextNode.altTime&#x201d; is defined as the time accumulated on the alternate transportation route <b>228</b> to reach the &#x201c;NextNode.&#x201d; For example, the &#x201c;Node&#x201d; can be the second intermediate stop <b>314</b> and the &#x201c;NextNode&#x201d; can be the destination <b>206</b>. For a further example, &#x201c;Links[1]&#x201d; can represent the travel section <b>212</b> from the second intermediate stop <b>314</b> of <figref idref="DRAWINGS">FIG. 3</figref> to the destination <b>206</b> of <figref idref="DRAWINGS">FIG. 2</figref>. The travel section <b>212</b> can be the alternate transportation route <b>228</b> for reaching the destination <b>206</b> or the &#x201c;NextNode.&#x201d; &#x201c;Links[1].time&#x201d; can represent the time user can spend on traveling the travel section <b>212</b>. &#x201c;Links [1].time&#x201d; can be 40 minutes.</p>
<p id="p-0234" num="0233">The calculator pre-computation submodule <b>622</b> can execute &#x201c;Node.altTime+Links[i].time&#x201d; to calculate the &#x201c;NextNode.altTime.&#x201d; For example, the travel section <b>212</b> from the third replenishment location <b>306</b> of <figref idref="DRAWINGS">FIG. 3</figref> to the second intermediate stop <b>314</b> and the travel section <b>212</b> from the second intermediate stop <b>314</b> to the destination <b>206</b> can represent the alternate transportation route <b>228</b>. The estimated alternate transportation time <b>230</b> for traveling the travel section <b>212</b> from the third replenishment location <b>306</b> to the second intermediate stop <b>314</b> can be 70 minutes. From the previous example, &#x201c;Links [1].time&#x201d; can be 40 minutes to travel the travel section <b>212</b> from the second intermediate stop <b>314</b> to the destination <b>206</b>. The aggregation of the estimated alternate transportation time <b>230</b> or &#x201c;NextNode.altTime&#x201d; for traveling the two paths of the travel section <b>212</b> can be 110 minutes.</p>
<p id="p-0235" num="0234">The pre-computation module <b>506</b> can include a safe charge pre-computation submodule <b>628</b> and is coupled to the calculator pre-computation submodule <b>622</b>. The safe charge pre-computation submodule <b>628</b> identifies whether the condition that the estimation of resource, fuel, or the combination thereof for arriving at the next stopping point will be greater than the minimum threshold allowed by the navigation system <b>100</b> has been met or not. For example, the safe charge pre-computation submodule <b>628</b> can identify whether the estimated arrival level <b>218</b> for reaching the second replenishment location <b>304</b> will be greater than the predetermined arrival level <b>220</b> generated by the predetermined level module <b>502</b> of <figref idref="DRAWINGS">FIG. 5</figref>. For a further example, the safe charge pre-computation submodule <b>628</b> includes the following function to identify the condition, as described from pseudo code 1:</p>
<p id="p-0236" num="0235">If (NextNode.charge&#x3e;minimumSafeCharge)</p>
<p id="p-0237" num="0236">&#x201c;minimumSafeCharge&#x201d; is defined as the minimum threshold allowed by the navigation system <b>100</b> for planning the travel route <b>214</b> to reach the next stopping point. For example, the &#x201c;minimumSafeCharge&#x201d; can represent the predetermined arrival level <b>220</b>.</p>
<p id="p-0238" num="0237">Continuing from the example, the &#x201c;NextNode.Charge&#x201d; or the estimated arrival level <b>218</b> after arriving at the second replenishment location <b>304</b> can be 25% of full battery capacity. The predetermined level module <b>502</b> can generate the predetermined arrival level <b>220</b> to be 5%. Since the estimated arrival level <b>218</b> after arriving at the second replenishment location <b>304</b> can exceed the predetermined arrival level <b>220</b>, the safe charge pre-computation submodule <b>628</b> can identify that the vehicle can travel along the travel section <b>212</b> from the first replenishment location <b>302</b> to the second replenishment location <b>304</b> and meet the condition for If (NextNode.charge&#x3e;minimumSafeCharge).</p>
<p id="p-0239" num="0238">By meeting the condition for If (NextNode.charge&#x3e;minimumSafeCharge), the pre-computation module <b>506</b> can invoke an insert pre-computation submodule <b>630</b>. If the estimated arrival level <b>218</b> is less than the minimum fuel level, thus, failing to meet the condition for If (NextNode.charge&#x3e;minimumSafeCharge), the pre-computation module <b>506</b> cannot invoke the insert pre-computation submodule <b>630</b>. The details regarding the insert pre-computation submodule <b>630</b> will be discussed later.</p>
<p id="p-0240" num="0239">The safe charge pre-computation submodule <b>628</b> can include an additional condition. For example, in addition to &#x201c;NextNode.charge&#x3e;minimumSafeCharge,&#x201d; the safe charge pre-computation submodule <b>628</b> can include &#x201c;NextNode.altTime is no greater than maxAltTime.&#x201d;</p>
<p id="p-0241" num="0240">&#x201c;maxAltTime&#x201d; is defined as the maximum amount of time found to be reasonable for the user to travel on the alternate transportation route <b>228</b>. For example, the safe charge pre-computation submodule <b>628</b> can calculate the allotted alternate transportation travel time <b>232</b> of <figref idref="DRAWINGS">FIG. 2</figref> for traversing the alternate transportation route <b>228</b> to reach the replenishment location <b>210</b>, the destination <b>206</b>, the intermediate stop <b>208</b>, or the combination thereof. For a further example, the &#x201c;maxAltTime&#x201d; can represent the allotted alternate transportation travel time <b>232</b>.</p>
<p id="p-0242" num="0241">From the previous example, &#x201c;NextNode&#x201d; can be the destination <b>206</b>. The &#x201c;NextNode.altTime&#x201d; can be 110 minutes. The allotted alternate transportation travel time <b>232</b> can be 120 minutes. Since the &#x201c;NextNode.altTime&#x201d; is less than the &#x201c;maxAltTime,&#x201d; the condition for &#x201c;NextNode.altTime is no greater than maxAltTime&#x201d; can be met.</p>
<p id="p-0243" num="0242">The pre-computation module <b>506</b> can include the insert pre-computation submodule <b>630</b> and is coupled to the safe charge pre-computation submodule <b>628</b>. The insert pre-computation submodule <b>630</b> adds the next stopping point into the &#x201c;PriorityQueue&#x201d; by the following function, from pseudo code 1:</p>
<p id="p-0244" num="0243">PriorityQueue.insert(NextNode)</p>
<p id="p-0245" num="0244">For example, the insert pre-computation submodule <b>630</b> add the second replenishment location <b>304</b> to the &#x201c;PriorityQueue&#x201d; by executing &#x201c;PriorityQueue.insert(NextNode)&#x201d; and setting the &#x201c;inQueue&#x201d; field for the &#x201c;NextNode&#x201d; as &#x201c;true.&#x201d; The insert pre-computation submodule <b>630</b> can invoke the link-counter pre-computation submodule <b>616</b> after executing the &#x201c;PriorityQueue.insert(NextNode).&#x201d; Continuing with the previous example, the pre-computation module <b>506</b> can re-invoke the in-queue pre-computation submodule <b>620</b>, because the insert pre-computation submodule <b>630</b> added the &#x201c;NextNode&#x201d; in the &#x201c;PriorityQueue.&#x201d; The in-queue pre-computation submodule <b>620</b> can invoke the cost pre-computation submodule <b>624</b> if the condition for &#x201c;If (NextNode.inQueue is true)&#x201d; is met.</p>
<p id="p-0246" num="0245">The pre-computation module <b>506</b> can include the cost pre-computation submodule <b>624</b> and is coupled to the in-queue pre-computation submodule <b>620</b>. The cost pre-computation submodule <b>624</b> compares the &#x201c;NextNode.cost&#x201d; between the &#x201c;Links&#x201d; to establish the condition to maintain the search for the lowest &#x201c;NextNode.cost&#x201d; or the lowest value for the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof.</p>
<p id="p-0247" num="0246">For example, the cost pre-computation submodule <b>624</b> can compare the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof for each of the paths representing the travel section <b>212</b>. For a further example, the cost pre-computation submodule <b>624</b> can compare the &#x201c;NextNode.cost&#x201d; between traveling from the start location <b>204</b> to the first replenishment location <b>302</b> versus traveling from the start location <b>204</b> to the first intermediate stop <b>312</b>. The cost pre-computation submodule <b>624</b> includes the following function to compare and establish the condition, as found in pseudo code 1.</p>
<p id="p-0248" num="0247">If (NextNode.cost&#x3e;Links[i].cost+Node.cost)</p>
<p id="p-0249" num="0248">For a specific example, &#x201c;Links count( )&#x201d; can be two. &#x201c;NextNode.cost&#x201d; here can represent the &#x201c;NextNode.cost&#x201d; for the &#x201c;NextNode&#x201d; already in the &#x201c;PriorityQueue.&#x201d; For a further example, the &#x201c;NextNode.cost&#x201d; can represent the aggregation of the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof for &#x201c;Links[0]&#x201d; or reaching the first replenishment location <b>302</b>.</p>
<p id="p-0250" num="0249">&#x201c;Links[i].cost+Node.cost&#x201d; here invoked in the cost pre-computation submodule <b>624</b> can represent the aggregation of the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof for, as an example, &#x201c;Links[1]&#x201d; or the &#x201c;NextNode&#x201d; not in the &#x201c;PriorityQueue.&#x201d; For this example, &#x201c;Node.cost&#x201d; can represent the &#x201c;Origin.cost&#x201d; or &#x201c;0.&#x201d; For a further example, &#x201c;Links[1].cost+Node.cost&#x201d; can represent the aggregation of the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof for reaching the first intermediate stop <b>312</b>.</p>
<p id="p-0251" num="0250">Continuing with the example, if the aggregation for the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof for &#x201c;Links[0]&#x201d; is greater than &#x201c;Links[1],&#x201d; the pre-computation module <b>506</b> can invoke a remove pre-computation submodule <b>626</b>. The invocation of the remove pre-computation submodule <b>626</b> can signify that the aggregation for the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof is greater to reach the first replenishment location <b>302</b> than the first intermediate stop <b>312</b>. In contrast, if the aggregation for the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof for &#x201c;Links[0]&#x201d; is less than &#x201c;Links[1],&#x201d; the pre-computation module <b>506</b> can invoke the link-counter pre-computation submodule <b>616</b>.</p>
<p id="p-0252" num="0251">The pre-computation module <b>506</b> can include the remove pre-computation submodule <b>626</b> and is coupled to the cost pre-computation submodule <b>624</b>. The remove pre-computation submodule <b>626</b> removes the &#x201c;NextNode&#x201d; already in the queue that failed to meet the condition specified in the cost pre-computation submodule <b>624</b>. For example, the remove pre-computation submodule <b>626</b> includes the following function to remove the &#x201c;NextNode&#x201d; as found in pseudo code 1.</p>
<p id="p-0253" num="0252">PriorityQueue.remove(NextNode)</p>
<p id="p-0254" num="0253">Continuing from the previous example, if the aggregation for the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof for &#x201c;Links[0]&#x201d; is greater than &#x201c;Links[1],&#x201d; the remove pre-computation submodule <b>626</b> can execute &#x201c;PriorityQueue.remove(NextNode)&#x201d; to remove the &#x201c;NextNode&#x201d; representing the first replenishment location <b>302</b>. After the removal, the pre-computation module <b>506</b> can invoke the calculator pre-computation submodule <b>622</b> to set the &#x201c;NextNode.cost&#x201d; based on, for example, &#x201c;Links[1].cost+Node.cost,&#x201d; because the aggregation for the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof reaching the first intermediate stop <b>312</b> can be less than the first replenishment location <b>302</b>.</p>
<p id="p-0255" num="0254">The pre-computation module <b>506</b> can include the aggregator pre-computation submodule <b>610</b> and is coupled to the target determinator pre-computation submodule <b>608</b>. The aggregator pre-computation submodule <b>610</b> adds the &#x201c;Node&#x201d; having the &#x201c;target&#x201d; as &#x201c;true&#x201d; to the &#x201c;TargetList.&#x201d; &#x201c;TargetList&#x201d; is defined as a data structure representing a list of stopping points discovered by the pre-computation module <b>506</b> that can be selected in the target location <b>238</b>.</p>
<p id="p-0256" num="0255">For example, the aggregator pre-computation submodule <b>610</b> can select the replenishment location <b>210</b>, the intermediate stop <b>208</b>, the destination <b>206</b>, or the combination thereof based on the estimated arrival level <b>218</b> meeting or exceeding the predetermined arrival level <b>220</b>. By having the estimated arrival level <b>218</b> meeting or exceeding the predetermined arrival level <b>220</b>, the current location estimated level <b>216</b> can meet or exceed the estimated consumption level <b>226</b>. Subsequently, the aggregator pre-computation submodule <b>610</b> can select the replenishment location <b>210</b>, the intermediate stop <b>208</b>, the destination <b>206</b>, or the combination thereof based on the current location estimated level <b>216</b> meeting or exceeding the estimated consumption level <b>226</b>.</p>
<p id="p-0257" num="0256">Additionally, by meeting the condition for &#x201c;NextNode.altTime is no greater than maxAltTime,&#x201d; the aggregator pre-computation submodule <b>610</b> can select the replenishment location <b>210</b>, the intermediate stop <b>208</b>, the destination <b>206</b>, or the combination thereof based on the allotted alternate transportation travel time <b>232</b> meeting or exceeding the estimated alternate transportation time <b>230</b>. After the invocation of the cost pre-computation submodule <b>624</b>, the aggregator pre-computation submodule <b>610</b> can select the replenishment location <b>210</b>, the intermediate stop <b>208</b>, the destination <b>206</b>, or the combination thereof with the shortest of the estimated sectional travel time <b>234</b>, with the lowest of the estimated sectional financial cost <b>236</b>, or the combination thereof for traversing each of the paths representing the travel section <b>212</b>.</p>
<p id="p-0258" num="0257">For example, the aggregator pre-computation submodule <b>610</b> includes the following function to add the &#x201c;Node&#x201d; as shown from pseudo code 1:</p>
<p id="p-0259" num="0258">TargetList.add(Node)</p>
<p id="p-0260" num="0259">The aggregator pre-computation submodule <b>610</b> can execute TargetList.add(Node) to add a &#x201c;Node&#x201d; representing the replenishment location <b>210</b>, which can be one out of many, to the &#x201c;TargetList.&#x201d; The pre-computation module <b>506</b> can invoke a target count pre-computation submodule <b>612</b> once the &#x201c;Node&#x201d; is added to the &#x201c;TargetList.&#x201d;</p>
<p id="p-0261" num="0260">The pre-computation module <b>506</b> can include the target count pre-computation submodule <b>612</b> and is coupled to the aggregator pre-computation submodule <b>610</b>. The target count pre-computation submodule <b>612</b> identifies whether the condition that the size of the &#x201c;TargetList&#x201d; equals the &#x201c;targetCount.&#x201d; For example, the aggregator pre-computation submodule <b>610</b> includes the following function to identify the condition, also found in pseudo code 1:</p>
<p id="p-0262" num="0261">If (TargetList.size( ) equals targetCount)</p>
<p id="p-0263" num="0262">The pre-computation module <b>506</b> can include a return pre-computation submodule <b>632</b> and is coupled to the target count pre-computation submodule <b>612</b>. The return pre-computation submodule <b>632</b> returns the list of stopping points. For example, the return pre-computation submodule <b>632</b> can generate the target location <b>238</b> based on the estimated arrival level <b>218</b> meeting or exceeding the predetermined arrival level <b>220</b>. For a further example, the return pre-computation submodule <b>632</b> includes the following function, as shown in pseudo code 1:</p>
<p id="p-0264" num="0263">Return TargetList</p>
<p id="p-0265" num="0264">For a specific example, &#x201c;TargetList&#x201d; can include the first replenishment location <b>302</b>, the second replenishment location <b>304</b>, the third replenishment location <b>306</b>, the second intermediate stop <b>314</b>, and the destination <b>206</b>. The first replenishment location <b>302</b>, the second replenishment location <b>304</b>, the third replenishment location <b>306</b>, the second intermediate stop <b>314</b>, and the destination <b>206</b> can represent the stopping points for the vehicle to safely stop by without running out of resource, fuel, or the combination thereof.</p>
<p id="p-0266" num="0265">The pre-computation module <b>506</b> can include the incomplete pre-computation submodule <b>634</b> and is coupled to the priority queue pre-computation submodule <b>604</b>. The incomplete pre-computation submodule <b>634</b> returns the incomplete list of the stopping points if the condition for the priority queue pre-computation submodule <b>604</b> is not met. For example, the incomplete pre-computation submodule <b>634</b> includes the following function:</p>
<p id="p-0267" num="0266">Return TargetList</p>
<p id="p-0268" num="0267">The physical transformation from calculating the estimated arrival level <b>218</b>, the current location estimated level <b>216</b>, the estimated consumption level <b>226</b>, the estimated alternate transportation time <b>230</b>, the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof results in movement in the physical world, such as people using the first device <b>102</b> of <figref idref="DRAWINGS">FIG. 1</figref>, the vehicle, or a combination thereof, based on the operation of the navigation system <b>100</b>. As the movement in the physical world occurs, the movement itself creates additional information that is converted back to generate the target location <b>238</b> for the continued operation of the navigation system <b>100</b> and to continue the movement in the physical world.</p>
<p id="p-0269" num="0268">It has been discovered that the present invention provides the navigation system <b>100</b> to generate the target location <b>238</b> for reducing the number of nodes that need to be considered in order to generate the travel route <b>214</b> by the navigation system <b>100</b>. Routes representing the travel section <b>212</b> between the start location <b>204</b>, the replenishment location <b>210</b>, the intermediate stop <b>208</b>, the destination <b>206</b>, or the combination thereof can be computed in advance for producing the simplified graph with far fewer nodes. The generation of the target location <b>238</b> having the nodes pre-computed can aid by permitting the navigation system <b>100</b> to generate the travel route <b>214</b> more rapidly and accurately for the safer operation of vehicle to reach the destination <b>206</b>.</p>
<p id="p-0270" num="0269">Referring now to <figref idref="DRAWINGS">FIG. 7</figref>, therein is shown a flow of the pruning module <b>508</b>. The pruning module <b>508</b> prunes unnecessary nodes that can be ignored. For example, the pruning module <b>508</b> can generate the target location <b>238</b> of <figref idref="DRAWINGS">FIG. 2</figref> by selecting the replenishment location <b>210</b> of <figref idref="DRAWINGS">FIG. 2</figref>, the destination <b>206</b> of <figref idref="DRAWINGS">FIG. 2</figref>, the intermediate stop <b>208</b> of <figref idref="DRAWINGS">FIG. 2</figref>, or the combination thereof based on the section distance <b>222</b> of <figref idref="DRAWINGS">FIG. 2</figref> meeting or exceeding the predetermined distance <b>224</b> of <figref idref="DRAWINGS">FIG. 2</figref>. The pruning module <b>508</b> can be shown in pseudo code format as in the following pseudo code 2:</p>
<p id="p-0271" num="0270">
<tables id="TABLE-US-00008" num="00008">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Function RoutePrecompute(Graph, OriginId, targetCount, fullCharge,</entry>
</row>
<row>
<entry>minimumSafeCharge)</entry>
</row>
<row>
<entry>&#x2003;// initialize data structures</entry>
</row>
<row>
<entry>&#x2003;TargetList.clear( )</entry>
</row>
<row>
<entry>&#x2003;PriorityQueue.clear( )</entry>
</row>
<row>
<entry>&#x2003;NodeSet.clear( )</entry>
</row>
<row>
<entry>&#x2003;Origin = NodeSet.getNode(Graph,OriginId)</entry>
</row>
<row>
<entry>&#x2003;Origin.cost = 0</entry>
</row>
<row>
<entry>&#x2003;Origin.charge = fullCharge</entry>
</row>
<row>
<entry>&#x2003;Origin.altTime = 0</entry>
</row>
<row>
<entry>&#x2003;Origin.distance = 0</entry>
</row>
<row>
<entry>&#x2003;Origin.previous = NULL // signifies beginning of route, i.e., there is no</entry>
</row>
<row>
<entry>&#x2003;previous node on the route</entry>
</row>
<row>
<entry>&#x2003;PriorityQueue.insert(Origin) // sets Origin.inQueue = true</entry>
</row>
<row>
<entry>&#x2003;// search nodes in order of cost</entry>
</row>
<row>
<entry>&#x2003;While ( PriorityQueue.isEmpty( ) is false)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;Node = PriorityQueue.top( )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;Node.settled = true // getNode sets settled to false when node is first</entry>
</row>
<row>
<entry>&#x2003;&#x2003;encountered</entry>
</row>
<row>
<entry>&#x2003;&#x2003;If ( Node.target is true)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;TargetList.add(Node)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;If (TargetList.size( ) equals targetCount) // this check is optional -</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;the algorithm will terminate remaining targets are out of range</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;Return TargetList</entry>
</row>
<row>
<entry>&#x2003;&#x2003;Links = Graph.getLinks(Node.id)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;For ( i = 0; i &#x3c; Links.count( ); i = i + 1 )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;id = Links[i].nextId</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;NextNode = NodeSet.getNode(Graph,id)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;If ( NextNode.inQueue is true )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;If (NextNode.cost &#x3e; Links[i].cost + Node.cost )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;PriorityQueue.remove(NextNode)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.previous = pointer to Node // links nodes on</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;route back to origin</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.cost = Links[i].cost + Node.cost</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.charge = Node.charge &#x2212; Links[i].consumed</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.altTime = Node.altTime + Links[i].time</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.distance = Node.distance + Links[i].distance</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;If (NextNode.charge &#x3e; minimumSafeCharge)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;If ( NextNode.reach is not less than NextNode.distance</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;or not less than graph.minDistance(id) )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;PriorityQueue.insert(NextNode) // sets</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.inQueue = true</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;Else if ( NextNode.settled is false )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.previous = pointer to Node // links nodes on route</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;back to origin</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.cost = Links[i].cost + Node.cost</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.charge = Node.charge &#x2212; Links[i].consumed</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.altTime = Node.altTime + Links[i].time</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.distance = Node.distance + Links[i].distance</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;If (NextNode.charge &#x3e; minimumSafeCharge)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;If ( NextNode.reach is not less than NextNode.distance or</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;not less than graph.minDistance(id) )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;PriorityQueue.insert(NextNode)</entry>
</row>
<row>
<entry>// cannot find all target locations</entry>
</row>
<row>
<entry>Return TargetList</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0272" num="0271">The following table defines the mapping between the pseudo code and the specification elements. The table will be denoted as Table 2:</p>
<p id="p-0273" num="0272">
<tables id="TABLE-US-00009" num="00009">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="91pt" align="left"/>
<colspec colname="2" colwidth="112pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Pseudo Code Parameters</entry>
<entry>Specification Elements</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>distance</entry>
<entry>The section distance 222</entry>
</row>
<row>
<entry/>
<entry>graph.minDistance(id)</entry>
<entry>The predetermined distance 224</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0274" num="0273">The pruning module <b>508</b> can include the priority queue pre-computation submodule <b>604</b>, the settled pre-computation submodule <b>606</b>, the target determinator pre-computation submodule <b>608</b>, and the get-link pre-computation submodule <b>614</b> with each having the same function, establishing the same condition, or the combination thereof as described in <figref idref="DRAWINGS">FIG. 6</figref>. The pruning module <b>508</b> can include the aggregator pre-computation submodule <b>610</b>, the target count pre-computation submodule <b>612</b>, the return pre-computation submodule <b>632</b>, and the incomplete pre-computation submodule <b>634</b> with each having the same function, establishing the same condition, or the combination thereof as described in <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0275" num="0274">The pruning module <b>508</b> can include the link-counter pre-computation submodule <b>616</b>, the get-node pre-computation submodule <b>618</b>, the in-queue pre-computation submodule <b>620</b>, and the cost pre-computation submodule <b>624</b> with each having the same function, establishing the same condition, or the combination thereof as described in <figref idref="DRAWINGS">FIG. 6</figref>. The pruning module <b>508</b> can include the remove pre-computation submodule <b>626</b>, the safe charge pre-computation submodule <b>628</b>, and the fifteenth pre-computation submodule with each having the same function, establishing the same condition, or the combination thereof as described in <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0276" num="0275">The pruning module <b>508</b> can include an initializer pruning submodule <b>702</b>. The initializer pruning submodule <b>702</b> can include the same functions as the initializer pre-computation submodule <b>602</b> of <figref idref="DRAWINGS">FIG. 6</figref> with the following modifications to initialize the data structures used in the pseudo code 2:</p>
<p id="p-0277" num="0276">Origin.distance=0</p>
<p id="p-0278" num="0277">&#x201c;distance&#x201d; is defined as a field for the node to determine the physical distance from the &#x201c;Origin&#x201d; to the node on the route computed to the node. For example, the &#x201c;distance&#x201d; can represent the section distance <b>222</b>. Here, &#x201c;Origin.distance&#x201d; is set to &#x201c;0,&#x201d; because no travel has been made by the vehicle.</p>
<p id="p-0279" num="0278">The pruning module <b>508</b> can include a distance pruning submodule <b>704</b> and is coupled to the in-queue pre-computation submodule <b>620</b>. The distance pruning submodule <b>704</b> calculates the length of path from one stopping point to another. For example, the distance pruning submodule <b>704</b> can calculate the section distance <b>222</b> of the travel section <b>212</b> of <figref idref="DRAWINGS">FIG. 2</figref> for reaching the replenishment location <b>210</b>, the intermediate stop <b>208</b>, the destination <b>206</b>, or the combination thereof. The distance pruning submodule <b>704</b> can include the same functions as the calculator pre-computation submodule <b>622</b> of <figref idref="DRAWINGS">FIG. 6</figref> with the following modifications to initialize the data structures used in the pseudo code 2:</p>
<p id="p-0280" num="0279">NextNode.distance=Node.distance+Links[i].distance</p>
<p id="p-0281" num="0280">&#x201c;NextNode.distance&#x201d; can represent the aggregation of the section distance <b>222</b> from the start location <b>204</b> of <figref idref="DRAWINGS">FIG. 2</figref> to the next stopping point. &#x201c;Node.distance&#x201d; can represent the aggregation of the section distance <b>222</b> from the start location <b>204</b> to the current stopping point. &#x201c;Links[i].distance&#x201d; can represent the section distance <b>222</b> of the path from the current stopping point to the next stopping point. &#x201c;Links[i]&#x201d; can signify that there can be more than one path representing the travel section <b>212</b> from the current stopping point to the next stopping point.</p>
<p id="p-0282" num="0281">For example, &#x201c;Node&#x201d; can represent the first replenishment location <b>302</b> of <figref idref="DRAWINGS">FIG. 3</figref>. &#x201c;Node.distance&#x201d; can be 40 kilometers. &#x201c;Links[i].distance&#x201d; can represent the section distance <b>222</b> from the first replenishment location <b>302</b> to the &#x201c;NextNode.&#x201d; For a more specific example, &#x201c;Links[0].distance&#x201d; can represent the section distance <b>222</b> for the travel section <b>212</b> from the first replenishment location <b>302</b> to the second replenishment location <b>304</b> of <figref idref="DRAWINGS">FIG. 3</figref>. &#x201c;Links[0].distance&#x201d; can be 50 kilometers. Subsequently, &#x201c;NextNode.distance&#x201d; can be 90 kilometers.</p>
<p id="p-0283" num="0282">The pruning module <b>508</b> can include a conditional pruning submodule <b>706</b> and is coupled to the safe charge pre-computation submodule <b>628</b>. The conditional pruning submodule <b>706</b> tests whether a path exists from the current location to the next stopping that is either less than the &#x201c;NextNode.distance&#x201d; or the predetermined distance <b>224</b>. The conditional pruning submodule <b>706</b> includes the following function from the pseudo code 2 to determine whether the condition has been met or not:</p>
<p id="p-0284" num="0283">
<tables id="TABLE-US-00010" num="00010">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>&#x2003;&#x2003;If&#x2003;(&#x2003;NextNode.reach&#x2003;is&#x2003;not&#x2003;less&#x2003;than&#x2003;NextNode.distance</entry>
</row>
<row>
<entry>or&#x2003;not&#x2003;less&#x2003;than graph.minDistance(id))</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0285" num="0284">&#x201c;reach&#x201d; is defined as a field for the node representing a reach bound of the node. &#x201c;graph.minDistance(id)&#x201d; is defined as a function to calculate the Euclidean distance from the &#x201c;Node&#x201d; to the &#x201c;NextNode.&#x201d; For example, &#x201c;graph.minDistance(id)&#x201d; can calculate the predetermined distance <b>224</b>.</p>
<p id="p-0286" num="0285">For a further example, &#x201c;Node&#x201d; can represent the first intermediate stop <b>312</b> of <figref idref="DRAWINGS">FIG. 3</figref>. The predetermined distance <b>224</b> from the first intermediate stop <b>312</b> to the fourth replenishment location <b>308</b> of <figref idref="DRAWINGS">FIG. 3</figref> can be 25 kilometers. However, the section distance <b>222</b> for the travel section <b>212</b> from the first intermediate stop <b>312</b> to the fourth replenishment location <b>308</b> can be 15 kilometers. Since the section distance <b>222</b> is less than the predetermined distance <b>224</b>, the travel section <b>212</b> from the first intermediate stop <b>312</b> to the four the replenishment location <b>210</b> can be pruned. Subsequently, the pruning module <b>508</b> can avoid considering the travel section <b>212</b> by not selecting the travel section <b>212</b> to the target location <b>238</b>. If the travel section <b>212</b> was the only path to arrive at the fourth replenishment location <b>308</b>, the pruning module <b>508</b> can prune the fourth replenishment location <b>308</b> also.</p>
<p id="p-0287" num="0286">In contrast, the predetermined distance <b>224</b> from the start location <b>204</b> to the first replenishment location <b>302</b> can be 35 kilometers. The section distance <b>222</b> from the start location <b>204</b> to the first replenishment location <b>302</b> can be 40 kilometers. The pruning module <b>508</b> can select the travel section <b>212</b> from the start location <b>204</b> to the first replenishment location <b>302</b> and the first replenishment location <b>302</b> for the target location <b>238</b>. For example, the aggregator pre-computation submodule <b>610</b> can select the replenishment location <b>210</b>, the intermediate stop <b>208</b>, the destination <b>206</b>, or the combination thereof based on the section distance <b>222</b> meeting or exceeding the predetermined distance <b>224</b>.</p>
<p id="p-0288" num="0287">The physical transformation from calculating the predetermined distance <b>224</b>, the section distance <b>222</b>, or the combination thereof results in movement in the physical world, such as people using the first device <b>102</b> of <figref idref="DRAWINGS">FIG. 1</figref>, the vehicle, or a combination thereof, based on the operation of the navigation system <b>100</b>. As the movement in the physical world occurs, the movement itself creates additional information that is converted back to generate the target location <b>238</b> for the continued operation of the navigation system <b>100</b> and to continue the movement in the physical world.</p>
<p id="p-0289" num="0288">It has been discovered that the present invention provides the navigation system <b>100</b> to generate the target location <b>238</b> for pruning the nodes that can be ignored to improve efficiency for the navigation system <b>100</b> to generate the travel route <b>214</b>. Routes representing the travel section <b>212</b> that fall short of the predetermined distance <b>224</b> can be ignored to alleviate computation burden for consideration made by the navigation system <b>100</b> to generate the travel route <b>214</b>. The generation of the target location <b>238</b> having the nodes pruned can aid by permitting the navigation system <b>100</b> to generate the travel route <b>214</b> more rapidly and accurately for the safer operation of vehicle to reach the destination <b>206</b>.</p>
<p id="p-0290" num="0289">Referring now to <figref idref="DRAWINGS">FIG. 8</figref>, therein is shown a flow of the simplified graph generator module <b>510</b>. The simplified graph generator module <b>510</b> creates a simplified graph. The simplified graph generator module <b>510</b> can be shown in pseudo code format as in the following pseudo code 3:</p>
<p id="p-0291" num="0290">
<tables id="TABLE-US-00011" num="00011">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>PopulateWithShortcuts(Graph, OriginList, TargetListSize, NewGraph,</entry>
</row>
<row>
<entry>fullCharge, minimumSafeCharge)</entry>
</row>
<row>
<entry>&#x2003;For each Node in OriginList</entry>
</row>
<row>
<entry>&#x2003;&#x2003;TargetNodeList = RoutePrecompute(Graph, Node, TargetListSize,</entry>
</row>
<row>
<entry>&#x2003;&#x2003;fullCharge, minimumSafeCharge)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;For each TargetNode in TargetNodeList</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;Create Link with</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;Link.originId = Node.id</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;Link.nextId = TargetNode.id</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;Link.cost = TargetNode.cost</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;Link.consumed = fullCharge &#x2212; TargetNode.charge</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;Link.time = TargetNode.altTime // only needed when Graph is</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;an alternate transportation network</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;Add Link to NewGraph as follows:</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;Copy node with id Link.originId from Graph to NewGraph if not</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;already copied</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;Copy node with id Link.nextId from Graph to NewGraph if not</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;already copied</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;Create a link in NewGraph with the same field values as Link</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0292" num="0291">The following table defines the mapping between the pseudo code and the specification elements. The table will be denoted as Table 3:</p>
<p id="p-0293" num="0292">
<tables id="TABLE-US-00012" num="00012">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="91pt" align="left"/>
<colspec colname="2" colwidth="112pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Pseudo Code Parameters</entry>
<entry>Specification Elements</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>TargetNodeList</entry>
<entry>The target location 238 of FIG. 2</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0294" num="0293">The simplified graph generator module <b>510</b> can include an initializer simplified graph generator submodule <b>802</b>. The initializer simplified graph generator submodule <b>802</b> includes the following function to generate the target location <b>238</b> as used in pseudo code 3:</p>
<p id="p-0295" num="0294">
<tables id="TABLE-US-00013" num="00013">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>For each Node in OriginList</entry>
</row>
<row>
<entry>&#x2003;&#x2003;TargetNodeList = RoutePrecompute(Graph, Node, TargetListSize,</entry>
</row>
<row>
<entry>&#x2003;&#x2003;fullCharge, minimumSafeCharge)</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0296" num="0295">&#x201c;OriginList&#x201d; is defined as a list of nodes from which the routes to be computed will start. For example, from the start location <b>204</b> of <figref idref="DRAWINGS">FIG. 2</figref>, the &#x201c;OriginList&#x201d; can include the first replenishment location <b>302</b> of <figref idref="DRAWINGS">FIG. 3</figref>, the first intermediate stop <b>312</b> of <figref idref="DRAWINGS">FIG. 3</figref>, or the combination thereof.</p>
<p id="p-0297" num="0296">&#x201c;TargetListSize&#x201d; is defined as the number of target nodes in the graph. For example from <figref idref="DRAWINGS">FIG. 3</figref>, the target location <b>238</b> can include the first replenishment location <b>302</b>, the second replenishment location <b>304</b> of <figref idref="DRAWINGS">FIG. 3</figref>, the third replenishment location <b>306</b> of <figref idref="DRAWINGS">FIG. 3</figref>, the second intermediate stop <b>314</b> of <figref idref="DRAWINGS">FIG. 3</figref>, and the destination <b>206</b> of <figref idref="DRAWINGS">FIG. 2</figref>. The &#x201c;TargetListSize&#x201d; can be 5.</p>
<p id="p-0298" num="0297">&#x201c;RoutePrecompute( )&#x201d; is defined as a function that returns the target location <b>238</b> and set it to the &#x201c;TargetNodeList.&#x201d; For example, &#x201c;RoutePrecompute( )&#x201d; can return the target location <b>238</b> that includes the first replenishment location <b>302</b>, the second replenishment location <b>304</b>, the third replenishment location <b>306</b>, the second intermediate stop <b>314</b>, and the destination <b>206</b>.</p>
<p id="p-0299" num="0298">&#x201c;TargetNodeList&#x201d; is defined as the list of target nodes. For example, the &#x201c;TargetNodeList&#x201d; can represent the target location <b>238</b>.</p>
<p id="p-0300" num="0299">The simplified graph generator module <b>510</b> can include a linking simplified graph generator submodule <b>804</b> and is coupled to the initializer simplified graph generator submodule <b>802</b>. The linking simplified graph generator submodule <b>804</b> includes the following functions to create links for each node in the target location <b>238</b> as used in the pseudo code 3:</p>
<p id="p-0301" num="0300">
<tables id="TABLE-US-00014" num="00014">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="196pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>For each TargetNode in TargetNodeList</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;Create Link with</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;Link.originId = Node.id</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;Link.nextId = TargetNode.id</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;Link.cost = TargetNode.cost</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;Link.consumed = fullCharge &#x2212; TargetNode.charge</entry>
</row>
<row>
<entry/>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;Link.time = TargetNode.altTime</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0302" num="0301">&#x201c;Link&#x201d; is defined as the path from one node to another. &#x201c;Link&#x201d; can have the same characteristic as &#x201c;Links&#x201d; as previously described.</p>
<p id="p-0303" num="0302">For example, &#x201c;Link.originId=Node.id&#x201d; identifies the ID of the stopping point where the &#x201c;Link&#x201d; is starting from. More specifically, if &#x201c;Node.id&#x201d; is the ID for the start location <b>204</b>, the &#x201c;Link.originID&#x201d; can be associated as the &#x201c;Link&#x201d; starting from the start location <b>204</b>.</p>
<p id="p-0304" num="0303">&#x201c;Link.nextId=TargetNode.id&#x201d; identifies the ID of the stopping point where the &#x201c;Link&#x201d; is ending at. More specifically, &#x201c;TargetNode&#x201d; can represent stopping point in the target location <b>238</b>. For example, the &#x201c;TargetNode&#x201d; can represent the first replenishment location <b>302</b>. The &#x201c;Link.nextId&#x201d; can be associated as the &#x201c;Link&#x201d; reaching the first replenishment location <b>302</b> from the start location <b>204</b>.</p>
<p id="p-0305" num="0304">&#x201c;Link.cost=TargetNode.cost&#x201d; calculates the estimation of the cost to travel to the next stopping point. More specifically, &#x201c;TargetNode.cost&#x201d; can represent the estimated sectional travel time <b>234</b> of <figref idref="DRAWINGS">FIG. 2</figref>, the estimated sectional financial cost <b>236</b> of <figref idref="DRAWINGS">FIG. 2</figref>, or the combination thereof to reach the stopping point representing the target location <b>238</b>. For example, the &#x201c;Link.cost&#x201d; can represent the estimated sectional travel time <b>234</b> for reaching the first replenishment location <b>302</b>.</p>
<p id="p-0306" num="0305">&#x201c;Link.consumed=fullCharge&#x2212;TargetNode.charge&#x201d; calculates the estimation of the amount of resource, fuel, or the combination thereof that a vehicle can require for traveling the path reach the next stopping point. More specifically, &#x201c;Link.consumed&#x201d; can represent the estimated consumption level <b>226</b> of <figref idref="DRAWINGS">FIG. 2</figref>. &#x201c;fullCharge&#x201d; can represent the full battery capacity. The &#x201c;TargetNode.charge&#x201d; can represent the estimated arrival level <b>218</b> for reaching the next stopping point. For example, the estimated consumption level <b>226</b> for traveling the travel section <b>212</b> of <figref idref="DRAWINGS">FIG. 2</figref> from the start location <b>204</b> to the first replenishment location <b>302</b> can be calculated by subtracting the estimated arrival level <b>218</b> from the full battery capacity.</p>
<p id="p-0307" num="0306">&#x201c;Link.time=TargetNode.altTime&#x201d; calculates the estimation of the amount of time required to travel along the alternate transportation route <b>228</b> of <figref idref="DRAWINGS">FIG. 2</figref> for reaching the next stopping point. More specifically, &#x201c;TargetNode.altTime&#x201d; can represent the estimated alternate transportation time <b>230</b> of <figref idref="DRAWINGS">FIG. 2</figref> to reach the stopping point representing the target location <b>238</b>. For example, the &#x201c;Link.time&#x201d; can represent the estimated alternate transportation time <b>230</b> for reaching the destination <b>206</b> of <figref idref="DRAWINGS">FIG. 2</figref> from the second intermediate stop <b>314</b> of <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0308" num="0307">The simplified graph generator module <b>510</b> can include a transfer simplified graph generator submodule <b>806</b> and is coupled to the linking simplified graph generator submodule <b>804</b>. The transfer simplified graph generator submodule <b>806</b> includes the following function to create a simplified graph as used in the pseudo code 3:</p>
<p id="p-0309" num="0308">
<tables id="TABLE-US-00015" num="00015">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Add Link to NewGraph as follows:</entry>
</row>
<row>
<entry>&#x2003;&#x2009;Copy node with id Link.originId from Graph to NewGraph if not</entry>
</row>
<row>
<entry>&#x2003;&#x2009;already copied</entry>
</row>
<row>
<entry>Copy node with id Link.nextId from Graph to NewGraph if not already</entry>
</row>
<row>
<entry>copied</entry>
</row>
<row>
<entry>Create a link in NewGraph with the same field values as Link</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0310" num="0309">&#x201c;NewGraph&#x201d; is defined as the simplified graph to which the pre-computed routes are added as links Continuing from the previous example, &#x201c;Copy node with id Link.originId from Graph to NewGraph if not already copied&#x201d; can assign the ID for the start location <b>204</b> from the &#x201c;Graph&#x201d; to the &#x201c;NewGraph.&#x201d; &#x201c;Copy node with id Link.nextId from Graph to NewGraph if not already copied&#x201d; can assign the ID for the first replenishment location <b>302</b> from the &#x201c;Graph&#x201d; to the &#x201c;NewGraph.&#x201d;</p>
<p id="p-0311" num="0310">&#x201c;Create a link in NewGraph with the same field values as Link&#x201d; can assign from the &#x201c;Graph&#x201d; to the &#x201c;NewGraph&#x201d; a link having the estimated sectional travel time <b>234</b>, the estimated sectional financial cost <b>236</b>, or the combination thereof traveling from the start location <b>204</b> to the first replenishment location <b>302</b>. &#x201c;Create a link in NewGraph with the same field values as Link&#x201d; can also assign from the &#x201c;Graph&#x201d; to the &#x201c;NewGraph&#x201d; a link having the estimated consumption level <b>226</b> and the estimated alternate transportation time <b>230</b> traveling from the second intermediate stop <b>314</b> to the destination <b>206</b>.</p>
<p id="p-0312" num="0311">The physical transformation from creating the simplified graph results in movement in the physical world, such as people using the first device <b>102</b> of <figref idref="DRAWINGS">FIG. 1</figref>, the vehicle, or a combination thereof, based on the operation of the navigation system <b>100</b>. As the movement in the physical world occurs, the movement itself creates additional information that is converted back to generate the travel route <b>214</b> for the continued operation of the navigation system <b>100</b> and to continue the movement in the physical world.</p>
<p id="p-0313" num="0312">It has been discovered that the present invention provides the navigation system <b>100</b> to generate the travel route <b>214</b> based on the simplified graph more efficiently by eliminating the number of nodes required to be considered for generating the travel route <b>214</b>. Nodes that failed to make it on the simplified graph can be ignored to alleviate computation burden for generating the travel route <b>214</b>. The simplified graph can aid by permitting the navigation system <b>100</b> to generate the travel route <b>214</b> more rapidly and accurately for the safer operation of vehicle to reach the destination <b>206</b>.</p>
<p id="p-0314" num="0313">Referring now to <figref idref="DRAWINGS">FIG. 9</figref>, therein is shown a flow of the uni-directional module <b>514</b>. The uni-directional module <b>514</b> generates a path from the &#x201c;Origin&#x201d; to the target destination. More specifically, the uni-directional module <b>514</b> can generate the path between multiple locations representing the replenishment location <b>210</b> of <figref idref="DRAWINGS">FIG. 2</figref> based on the links calculated in the simplified graph.</p>
<p id="p-0315" num="0314">For example, the uni-directional module <b>514</b> can generate the travel route <b>214</b> of <figref idref="DRAWINGS">FIG. 2</figref> through the replenishment location <b>210</b> of <figref idref="DRAWINGS">FIG. 2</figref>, the intermediate stop <b>208</b> of <figref idref="DRAWINGS">FIG. 2</figref>, or the combination thereof to the destination <b>206</b> of <figref idref="DRAWINGS">FIG. 2</figref>. The uni-directional module <b>514</b> can be shown in pseudo code format as in the following pseudo code 4:</p>
<p id="p-0316" num="0315">
<tables id="TABLE-US-00016" num="00016">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>// initialize data structures</entry>
</row>
<row>
<entry>PriorityQueue.clear( )</entry>
</row>
<row>
<entry>NodeSet.clear( )</entry>
</row>
<row>
<entry>Origin = NodeSet.getNode(Graph, OriginId, initialCharge)</entry>
</row>
<row>
<entry>Origin.cost = 0</entry>
</row>
<row>
<entry>Origin.state = 1</entry>
</row>
<row>
<entry>Origin.previous = NULL // signifies beginning of route, i.e., there is no</entry>
</row>
<row>
<entry>previous node on the route</entry>
</row>
<row>
<entry>PriorityQueue.insert(Origin) // sets Origin.inQueue = true</entry>
</row>
<row>
<entry>// search nodes in order of cost</entry>
</row>
<row>
<entry>While ( PriorityQueue.isEmpty( ) is false)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;Node = PriorityQueue.top( )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;Node.settled = true // getNode sets settled to false when node is</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;first encountered</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;If ( Node.id equals DestinationId )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;Reconstruct Route by following linked list starting at</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;Node.previous</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;Return route</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;Links = Graph.getLinks(Node.id)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;If ( Node.replenishment is true and Node.state is less than 3)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;// add a waiting link for recharging</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;Link.nextId = Node.id</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;Link.cost = Graph.rechargeCost(Node.id, fullCharge,</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;Node.charge) // waiting time or monetary cost</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;Link.consumed = Node.charge &#x2212; fullCharge // a negative value</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;means charge is increased</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;Links.add(Link) // adds a link to the array of links</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;For ( i = 0; i &#x3c; Links.count( ); i = i+1 )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;id = Links[i].nextId</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode = NodeSet.getNode(Graph, id, Node.charge &#x2212;</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;Links[i].consumed)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;If ( Node.replenishment is true and Node.id equals id )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;NextNode. replenishment = false // second node at</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;replenishment location</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;If ( NextNode.inQueue is true )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;If ( NextNode.cost &#x3e; Links[i].cost + Node.cost )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;PriorityQueue.remove(NextNode)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.previous = pointer to Node // links</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;nodes on route back to origin</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.cost = Links[i].cost + Node.cost</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;If ( Node.replenishment is true and Node.id</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;equals id )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;NextNode.state = 2</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;Else if (NextNode.replenishment equals false</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;and Node.state equals 2)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;NextNode.state = 3</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;Else</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;NextNode.state = Node.state</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;If (NextNode.charge &#x3e; minimumSafeCharge)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;PriorityQueue.insert(NextNode) // sets</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;NextNode.inQueue = true</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;Else if ( NextNode.settled is false )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.previous = pointer to Node // links</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;nodes on route back to origin</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;NextNode.cost = Links[i].cost + Node.cost</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;If ( Node.replenishment is true and Node.id</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;equals id )</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;NextNode.state = 2</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;Else if (NextNode.replenishment equals false and</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;Node.state equals 2)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;NextNode.state = 3</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;Else</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;NextNode.state = Node.state</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;If (NextNode.charge &#x3e; minimumSafeCharge)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;PriorityQueue.insert(NextNode)</entry>
</row>
<row>
<entry>// no feasible route exists to destination with the given amount of charge</entry>
</row>
<row>
<entry>and charge capacity</entry>
</row>
<row>
<entry>Return error</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0317" num="0316">The following table defines the mapping between the pseudo code and the specification elements. The table will be denoted as Table 4:</p>
<p id="p-0318" num="0317">
<tables id="TABLE-US-00017" num="00017">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="98pt" align="left"/>
<colspec colname="2" colwidth="91pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Pseudo Code Parameters</entry>
<entry>Specification Elements</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>state</entry>
<entry>No equivalence</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0319" num="0318">The uni-directional module <b>514</b> can include the priority queue pre-computation submodule <b>604</b>, the settled pre-computation submodule <b>606</b>, and the get-link pre-computation submodule <b>614</b> with each having the same function, establishing the same condition, or the combination thereof as described in <figref idref="DRAWINGS">FIG. 6</figref>. The uni-directional module <b>514</b> can include the link-counter pre-computation submodule <b>616</b>, the in-queue pre-computation submodule <b>620</b>, the calculator pre-computation submodule <b>622</b>, the cost pre-computation submodule <b>624</b>, and the remove pre-computation submodule <b>626</b> with each having the same function, establishing the same condition, or the combination thereof as described in <figref idref="DRAWINGS">FIG. 6</figref>. The uni-directional module <b>514</b> can include the safe charge pre-computation submodule <b>628</b>, and the fifteenth pre-computation submodule with each having the same function, establishing the same condition, or the combination thereof as described in <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0320" num="0319">The uni-directional module <b>514</b> can include an initializer uni-directional submodule <b>902</b>. The initializer uni-directional submodule <b>902</b> includes the following functions to initialize the data structures used in the pseudo code 4:</p>
<p id="p-0321" num="0320">
<tables id="TABLE-US-00018" num="00018">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="196pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>PriorityQueue.clear( )</entry>
</row>
<row>
<entry/>
<entry>NodeSet.clear( )</entry>
</row>
<row>
<entry/>
<entry>Origin = NodeSet.getNode(Graph,OriginId, initialCharge)</entry>
</row>
<row>
<entry/>
<entry>Origin.cost = 0</entry>
</row>
<row>
<entry/>
<entry>Origin.state = 1</entry>
</row>
<row>
<entry/>
<entry>Origin.previous = NULL</entry>
</row>
<row>
<entry/>
<entry>PriorityQueue.insert(Origin)</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0322" num="0321">&#x201c;initialCharge&#x201d; is defined as a field for the &#x201c;Origin&#x201d; for amount of resource, fuel, or the combination thereof available at the start location <b>204</b>. &#x201c;state&#x201d; is defined as a field of a node representing the status of whether stopping point has been added to the target location <b>238</b> of <figref idref="DRAWINGS">FIG. 2</figref>. For example, the &#x201c;state&#x201d; equals to &#x201c;1&#x201d; if the path computed to the node does not yet include pre-computed replenishment links. The &#x201c;state&#x201d; equals to &#x201c;2&#x201d; if the most recent link, excluding any waiting links, are pre-computed replenishment links. In other scenarios, the &#x201c;state&#x201d; equals to &#x201c;3,&#x201d; and replenishment is not considered. &#x201c;Origin.state=1&#x201d; sets the &#x201c;state&#x201d; for the &#x201c;Origin&#x201d; to &#x201c;1,&#x201d; because the pre-computation of the links to the start location <b>204</b> is not required.</p>
<p id="p-0323" num="0322">The uni-directional module <b>514</b> can include a destination uni-directional submodule <b>904</b> and is coupled to the initializer uni-directional submodule <b>902</b>. The destination uni-directional submodule <b>904</b> identifies the condition of whether the node is a target destination has been met or not. For example, the destination uni-directional submodule <b>904</b> can identify the intermediate stop <b>208</b>, the destination <b>206</b>, or the combination thereof from the target location <b>238</b>. For a further example, the destination uni-directional submodule <b>904</b> includes the following function to identify the condition in pseudo code 4:</p>
<p id="p-0324" num="0323">If (Node.id equals DestinationId)</p>
<p id="p-0325" num="0324">&#x201c;DestinationId&#x201d; is defined as the ID for the node representing the destination <b>206</b>. If the &#x201c;Node.id&#x201d; equals the &#x201c;DestinationId,&#x201d; the destination uni-directional submodule <b>904</b> can identify the node as the destination <b>206</b>. If the &#x201c;Node.id&#x201d; can equal the &#x201c;DestinationId,&#x201d; the destination uni-directional submodule <b>904</b> can invoke an error uni-directional submodule <b>928</b>. In contrast, if the Node.id&#x201d; does not equal the &#x201c;DestinationId,&#x201d; the destination uni-directional submodule <b>904</b> can invoke the get-link pre-computation submodule <b>614</b>.</p>
<p id="p-0326" num="0325">The uni-directional module <b>514</b> can include an identifier uni-directional submodule <b>906</b> and is coupled to the get-link pre-computation submodule <b>614</b>. The identifier uni-directional submodule <b>906</b> identifies the condition of whether the node is the replenishment location <b>210</b> has been met or not. For example, the identifier uni-directional submodule <b>906</b> can identify the replenishment location <b>210</b> from the target location <b>238</b>.</p>
<p id="p-0327" num="0326">Additionally, the identifier uni-directional submodule <b>906</b> identifies the condition of whether the value of the &#x201c;state&#x201d; is less than 3. For a further example, the identifier uni-directional submodule <b>906</b> includes the following function to identify the conditions from pseudo code 4:</p>
<p id="p-0328" num="0327">If (Node.replenishment is true and Node.state is less than 3)</p>
<p id="p-0329" num="0328">&#x201c;replenishment&#x201d; is defined as a field of the node to represent whether the node is the replenishment location <b>210</b> or not. If &#x201c;replenishment&#x201d; is set to &#x201c;true,&#x201d; the node is a stopping point representing the replenishment location <b>210</b>. For example, a node representing the first replenishment location <b>302</b> of <figref idref="DRAWINGS">FIG. 3</figref> can have the &#x201c;replenishment&#x201d; set to &#x201c;true.&#x201d;</p>
<p id="p-0330" num="0329">If the node is one of the stopping points representing the target location <b>238</b>, the value of the &#x201c;state&#x201d; for the node can be less than &#x201c;3.&#x201d; For example, the first replenishment location <b>302</b> can be one of the stopping points representing the target location <b>238</b>. The uni-directional module <b>514</b> identifying the first replenishment location <b>302</b> can satisfy the condition for If (Node.replenishment is true and Node.state is less than 3).</p>
<p id="p-0331" num="0330">The uni-directional module <b>514</b> can include a cost uni-directional submodule <b>908</b> and is coupled to the identifier uni-directional submodule <b>906</b>. The cost uni-directional submodule <b>908</b> calculates the time cost, the monetary cost, or the combination thereof associated with replenishing the vehicle at the replenishment location <b>210</b>.</p>
<p id="p-0332" num="0331">For further example, the cost uni-directional submodule <b>908</b> can calculate the time cost, the monetary cost, or the combination thereof for replenishing the resource, fuel, or the combination thereof for the vehicle. For another example, the cost uni-directional submodule <b>908</b> includes the following functions to calculate the time cost, the monetary cost, or the combination thereof as from pseudo code 3:</p>
<p id="p-0333" num="0332">
<tables id="TABLE-US-00019" num="00019">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>Link.nextId = Node.id</entry>
</row>
<row>
<entry/>
<entry>Link.cost = Graph.rechargeCost(Node.id, fullCharge, Node.charge)</entry>
</row>
<row>
<entry/>
<entry>Link.consumed = Node.charge &#x2212; fullCharge</entry>
</row>
<row>
<entry/>
<entry>Links.add(Link)</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0334" num="0333">&#x201c;Link&#x201d; here is defined as a data structure representing the waiting link for replenishing the vehicle for each replenishment opportunity. For example, that stopping point or &#x201c;Node.id&#x201d; can represent the first replenishment location <b>302</b>. For a further example, &#x201c;Link.nextId&#x201d; can represent the waiting link at the first replenishment location <b>302</b>.</p>
<p id="p-0335" num="0334">&#x201c;Link.cost&#x201d; is defined as the time cost, the monetary cost, or the combination thereof associated with replenishing the vehicle at the replenishment location <b>210</b>. The cost uni-directional submodule <b>908</b> can calculate the &#x201c;Link.cost&#x201d; by executing the &#x201c;Graph.rechargeCost( )&#x201d; The &#x201c;Graph.rechargeCost( )&#x201d; can extract the &#x201c;cost&#x201d; information related to the replenishing of the vehicle from the simplified graph.</p>
<p id="p-0336" num="0335">&#x201c;Link.consumed&#x201d; is defined as the amount of replenishment required to replenish the vehicle to full capacity. For example, the amount of replenishment can be equivalent to the estimated consumption level <b>226</b> of <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="p-0337" num="0336">&#x201c;Links.add(Link)&#x201d; adds the link to the array of links. By adding &#x201c;Link&#x201d; to &#x201c;Links,&#x201d; the cost uni-directional submodule <b>908</b> can calculate the &#x201c;cost&#x201d; associate for traveling that particular &#x201c;Links.&#x201d;</p>
<p id="p-0338" num="0337">The uni-directional module <b>514</b> can include a get-node uni-directional submodule <b>910</b> and is coupled to the link-counter pre-computation submodule <b>616</b>. The get-node uni-directional submodule <b>910</b> identifies the candidate for the next stopping point based on the estimated arrival level <b>218</b> of <figref idref="DRAWINGS">FIG. 2</figref> for the vehicle arriving at the next stopping point. For example, the get-node uni-directional submodule <b>910</b> can include the same functions as described in the get-node pre-computation submodule <b>618</b> of <figref idref="DRAWINGS">FIG. 6</figref> with one additional input for &#x201c;NodeSet.getNode( )&#x201d;, as from pseudo code 4:</p>
<p id="p-0339" num="0338">NextNode=NodeSet.getNode(Graph, id, Node.charge&#x2212;Links[i].consumed)</p>
<p id="p-0340" num="0339">The function &#x201c;NodeSet.getNode(Graph, id, Node.charge&#x2212;Links[i].consumed)&#x201d; can represent the same function as &#x201c;NodeSet.getNode( )&#x201d; described in <figref idref="DRAWINGS">FIG. 6</figref> with one additional input &#x201c;Node.charge&#x2212;Links[i].consumed.&#x201d; &#x201c;Node.charge&#x201d; is as described in <figref idref="DRAWINGS">FIG. 6</figref>. &#x201c;Links[i].consumed&#x201d; is as described in <figref idref="DRAWINGS">FIG. 6</figref>. The get-node uni-directional submodule <b>910</b> can execute &#x201c;NodeSet.getNode(Graph, id, Node.charge&#x2212;Links[i].consumed)&#x201d; to return the next stopping point having the &#x201c;NextNode.charge&#x201d; as described in <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0341" num="0340">For a more specific example, the &#x201c;NextNode&#x201d; will have the &#x201c;NextNode.charge&#x201d; or the estimated arrival level <b>218</b> as described in <figref idref="DRAWINGS">FIG. 6</figref>. As illustrated in <figref idref="DRAWINGS">FIG. 6</figref>, &#x201c;NodeSet.getNode(Graph, id, Node.charge&#x2212;Links[i].consumed)&#x201d; can return the first replenishment location <b>302</b> with the vehicle having the &#x201c;NextNode.charge&#x201d; or the estimated arrival level <b>218</b> of 25%.</p>
<p id="p-0342" num="0341">The uni-directional module <b>514</b> can include a true uni-directional submodule <b>912</b> and is coupled to the get-node uni-directional submodule <b>910</b>. The true uni-directional submodule <b>912</b> identifies whether the condition that &#x201c;NextNode&#x201d; is not the same as the &#x201c;Node.&#x201d; For example, the true uni-directional submodule <b>912</b> includes the following function to identify the condition, as described from pseudo code 4:</p>
<p id="p-0343" num="0342">If (Node.replenishment is true and Node.id equals id)</p>
<p id="p-0344" num="0343">For a further example, &#x201c;If (Node.replenishment is true and Node.id equals id)&#x201d; can be the same function as &#x201c;If (Node.replenishment is true)&#x201d; of the target determinator pre-computation submodule <b>608</b> of <figref idref="DRAWINGS">FIG. 6</figref> with one additional input. &#x201c;Node.id equals id&#x201d; verifies whether the &#x201c;NextNode.id&#x201d; is the same as the &#x201c;Node.id.&#x201d; For example, the &#x201c;Node.id&#x201d; can represent the first replenishment location <b>302</b>. If the &#x201c;NextNode.id&#x201d; also represents the first replenishment location <b>302</b>, the true uni-directional submodule <b>912</b> can invoke a non-replenish uni-directional submodule <b>914</b>.</p>
<p id="p-0345" num="0344">The uni-directional module <b>514</b> can include the non-replenish uni-directional submodule <b>914</b> and is coupled to the true uni-directional submodule <b>912</b>. The non-replenish uni-directional submodule <b>914</b> sets the &#x201c;replenishment&#x201d; to &#x201c;false&#x201d; for the &#x201c;NextNode.&#x201d; For example the non-replenish uni-directional submodule <b>914</b> can set the &#x201c;replenishment&#x201d; with the following function from pseudo code 4:</p>
<p id="p-0346" num="0345">NextNode.replenishment=false</p>
<p id="p-0347" num="0346">By setting the &#x201c;replenishment&#x201d; as &#x201c;false,&#x201d; the uni-directional module <b>514</b> cannot include that the &#x201c;NextNode.id&#x201d; is the same as the &#x201c;Node.id.&#x201d; More specifically, the uni-directional module <b>514</b> can avoid duplicate generation of the travel route <b>214</b> to the same location for the replenishment location <b>210</b>.</p>
<p id="p-0348" num="0347">The uni-directional module <b>514</b> can include a validifier uni-directional submodule <b>916</b> and is coupled to the calculator pre-computation submodule <b>622</b>. The validifier uni-directional submodule <b>916</b> can identify the same condition as described in the true uni-directional submodule <b>912</b>.</p>
<p id="p-0349" num="0348">The uni-directional module <b>514</b> can include a state uni-directional submodule <b>918</b> and is coupled to the validifier uni-directional submodule <b>916</b>. The state uni-directional submodule <b>918</b> can set the value of the &#x201c;state&#x201d; for the &#x201c;NextNode&#x201d; with the following function from pseudo code 4:</p>
<p id="p-0350" num="0349">NextNode.state=2</p>
<p id="p-0351" num="0350">For example, by meeting the condition of &#x201c;Node.id equals id&#x201d; for the validifier uni-directional submodule <b>916</b>, the stopping point can be one of the most recent links pre-computed by the pre-computation module <b>506</b> of <figref idref="DRAWINGS">FIG. 5</figref>. Subsequently, the state uni-directional submodule <b>918</b> can set the value of the &#x201c;state&#x201d; for the &#x201c;NextNode&#x201d; to &#x201c;2.&#x201d;</p>
<p id="p-0352" num="0351">The uni-directional module <b>514</b> can include an invalidifier uni-directional submodule <b>920</b> and is coupled to the validifier uni-directional submodule <b>916</b>. The invalidifier uni-directional submodule <b>920</b> identifies whether the condition that although the path to the &#x201c;Node&#x201d; is a most recent link, &#x201c;NextNode&#x201d; is not a stopping representing the replenishment location <b>210</b> has been met or not. For example, the invalidifier uni-directional submodule <b>920</b> includes the following function to identify the condition from pseudo code 4:</p>
<p id="p-0353" num="0352">If (Node.replenishment is false and Node.state equals 2)</p>
<p id="p-0354" num="0353">For pseudo code 4, the invalidifier uni-directional submodule <b>920</b> can establish a condition that allows the uni-directional module <b>514</b> to avoid calculating the waiting links for replenishing the vehicle if the stopping point is not one of the replenishment location <b>210</b>. For example, if the condition is not met, the invalidifier uni-directional submodule <b>920</b> can invoke a non-state uni-directional submodule <b>922</b>.</p>
<p id="p-0355" num="0354">The uni-directional module <b>514</b> can include the non-state uni-directional submodule <b>922</b> and is coupled to the invalidifier uni-directional submodule <b>920</b>. The non-state uni-directional submodule <b>922</b> can set the value of the &#x201c;state&#x201d; for the &#x201c;NextNode&#x201d; with the following function from pseudo code 4:</p>
<p id="p-0356" num="0355">NextNode.state=3</p>
<p id="p-0357" num="0356">As stated previously, the uni-directional module <b>514</b> can avoid invoking the cost uni-directional submodule <b>908</b> if the value for the &#x201c;state&#x201d; is set to &#x201c;3.&#x201d; More specifically, the waiting link for the &#x201c;NextNode&#x201d; will not be calculated.</p>
<p id="p-0358" num="0357">The uni-directional module <b>514</b> can include a status uni-directional submodule <b>924</b> and is coupled to the invalidifier uni-directional submodule <b>920</b>. The status uni-directional submodule <b>924</b> can set the value of the &#x201c;state&#x201d; for the &#x201c;NextNode&#x201d; with the following function from pseudo code 4:</p>
<p id="p-0359" num="0358">NextNode.state=Node.state</p>
<p id="p-0360" num="0359">The status uni-directional submodule <b>924</b> sets the value of the &#x201c;state&#x201d; for the &#x201c;NextNode&#x201d; as the same as the stopping previous to the &#x201c;NextNode.&#x201d; For example, the value of the &#x201c;state&#x201d; for the &#x201c;NextNode&#x201d; can be equal to the &#x201c;Node.&#x201d;</p>
<p id="p-0361" num="0360">The uni-directional module <b>514</b> can include a constructor uni-directional submodule <b>926</b> and is coupled to the destination uni-directional submodule <b>904</b>. The constructor uni-directional submodule <b>926</b> generates the route to each of the stopping points selected from the target location <b>238</b>. For example, the constructor uni-directional submodule <b>926</b> can generate the travel route <b>214</b> to the replenishment location <b>210</b>, to the intermediate stop <b>208</b>, the destination <b>206</b>, or the combination thereof. For a further example, the constructor uni-directional submodule <b>926</b> includes the following function to generate the travel route <b>214</b> from pseudo code 4:</p>
<p id="p-0362" num="0361">
<tables id="TABLE-US-00020" num="00020">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>Recontruct Route by following linked list starting at Node.previous</entry>
</row>
<row>
<entry/>
<entry>Return route</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0363" num="0362">For example, the constructor uni-directional submodule <b>926</b> can generate the travel route <b>214</b> from the start location <b>204</b> through the replenishment location <b>210</b>, the intermediate stop <b>208</b>, or the combination thereof to the destination <b>206</b>. The constructor uni-directional submodule <b>926</b> can send the travel route <b>214</b> to the display module <b>520</b> of <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0364" num="0363">The uni-directional module <b>514</b> can include the error uni-directional submodule <b>928</b> and is coupled to the priority queue pre-computation submodule <b>604</b>. The error uni-directional submodule <b>928</b> can return &#x201c;error&#x201d; if the uni-directional module <b>514</b> fails to generate the travel route <b>214</b>.</p>
<p id="p-0365" num="0364">The physical transformation from identifying the replenishment location <b>210</b>, the intermediate stop <b>208</b>, the destination <b>206</b>, or the combination thereof from the target location <b>238</b> results in movement in the physical world, such as people using the first device <b>102</b> of <figref idref="DRAWINGS">FIG. 1</figref>, the vehicle, or a combination thereof, based on the operation of the navigation system <b>100</b>. As the movement in the physical world occurs, the movement itself creates additional information that is converted back to generate the travel route <b>214</b> for the continued operation of the navigation system <b>100</b> and to continue the movement in the physical world.</p>
<p id="p-0366" num="0365">It has been discovered that the present invention provides the navigation system <b>100</b> to generate the travel route <b>214</b> based on incorporating the links pre-computed by the pre-computation module <b>506</b>, the pruning module <b>508</b>, or the combination thereof. The identification of the &#x201c;state&#x201d; of each node aids the navigation system <b>100</b> to identify the replenishment location <b>210</b>, the intermediate stop <b>208</b>, the destination <b>206</b>, or the combination thereof more accurately and rapidly for generating the travel route <b>214</b>. The quicker and more accurate generation of the travel route <b>214</b> can aid the user of a safer operation of the vehicle to reach the destination <b>206</b>.</p>
<p id="p-0367" num="0366">Referring now to <figref idref="DRAWINGS">FIG. 10</figref>, therein is shown a flow of the reverse uni-directional module <b>516</b>. The reverse uni-directional module <b>516</b> generates a path from the target destination to the &#x201c;Origin.&#x201d;</p>
<p id="p-0368" num="0367">For example, the reverse uni-directional module <b>516</b> can generate the reverse travel route <b>240</b> from the destination <b>206</b> of <figref idref="DRAWINGS">FIG. 2</figref> to the start location <b>204</b> of <figref idref="DRAWINGS">FIG. 2</figref> based on selecting the replenishment location <b>210</b> of <figref idref="DRAWINGS">FIG. 2</figref>, the intermediate stop <b>208</b> of <figref idref="DRAWINGS">FIG. 2</figref>, or the combination thereof from the target location <b>238</b> of <figref idref="DRAWINGS">FIG. 2</figref>. The reverse uni-directional module <b>516</b> can be shown in pseudo code format as in the pseudo code 4 with the following modification. The &#x201c;Graph&#x201d; in the pseudo code 4 can be replaced with &#x201c;ReverseGraph.&#x201d;</p>
<p id="p-0369" num="0368">The &#x201c;ReverseGraph&#x201d; is defined as the data structure representing a graph like &#x201c;Graph&#x201d; but in which every link from a node A to a node B has been replaced by a link from node B to node A. Such a link still represents travel from node A to node B, but &#x201c;ReverseGraph.getLinks( ) returns the link when given node B instead when given node A.</p>
<p id="p-0370" num="0369">The reverse uni-directional module <b>516</b> can include the priority queue pre-computation submodule <b>604</b>, and the settled pre-computation submodule <b>606</b> with each having the same function, establishing the same condition, or the combination thereof as described in <figref idref="DRAWINGS">FIG. 6</figref>. The reverse uni-directional module <b>516</b> can include the link-counter pre-computation submodule <b>616</b>, the in-queue pre-computation submodule <b>620</b>, the calculator pre-computation submodule <b>622</b>, the cost pre-computation submodule <b>624</b>, and the remove pre-computation submodule <b>626</b> with each having the same function, establishing the same condition, or the combination thereof as described in <figref idref="DRAWINGS">FIG. 6</figref>. The reverse uni-directional module <b>516</b> can include the safe charge pre-computation submodule <b>628</b>, and the fifteenth pre-computation submodule with each having the same function, establishing the same condition, or the combination thereof as described in <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0371" num="0370">The reverse uni-directional module <b>516</b> can include the destination uni-directional submodule <b>904</b>, the identifier uni-directional submodule <b>906</b>, the true uni-directional submodule <b>912</b>, and the non-replenish uni-directional submodule <b>914</b> with each having the same function, establishing the same condition, or the combination thereof as described in <figref idref="DRAWINGS">FIG. 9</figref>. The reverse uni-directional module <b>516</b> can include the validifier uni-directional submodule <b>916</b>, the state uni-directional submodule <b>918</b>, the invalidifier uni-directional submodule <b>920</b>, and the non-state uni-directional submodule <b>922</b> with each having the same function, establishing the same condition, or the combination thereof as described in <figref idref="DRAWINGS">FIG. 9</figref>. The reverse uni-directional module <b>516</b> can include the status uni-directional submodule <b>924</b>, the constructor uni-directional submodule <b>926</b>, and the error uni-directional submodule <b>928</b> with each having the same function, establishing the same condition, or the combination thereof as described in <figref idref="DRAWINGS">FIG. 9</figref>.</p>
<p id="p-0372" num="0371">The reverse uni-directional module <b>516</b> can include an initializer reverse uni-directional submodule <b>1002</b> with having the same function, establishing the same condition, or the combination thereof as described in the initializer uni-directional submodule <b>902</b> of <figref idref="DRAWINGS">FIG. 9</figref> with the &#x201c;Graph&#x201d; replaced to &#x201c;ReverseGraph,&#x201d; the &#x201c;Origin&#x201d; replaced to the destination <b>206</b>, and the &#x201c;OriginId&#x201d; replaced to &#x201c;DestinationId.&#x201d; The reverse uni-directional module <b>516</b> can include a destination reverse uni-directional submodule <b>1004</b> with having the same function, establishing the same condition, or the combination thereof as described in the destination uni-directional submodule <b>904</b> of <figref idref="DRAWINGS">FIG. 9</figref> with the &#x201c;OriginId&#x201d; replaced to &#x201c;DestinationId.&#x201d; The reverse uni-directional module <b>516</b> can include a get-link reverse uni-directional submodule <b>1006</b> with having the same function, establishing the same condition, or the combination thereof as described in the get-link pre-computation submodule <b>614</b> of <figref idref="DRAWINGS">FIG. 6</figref> with the &#x201c;Graph&#x201d; replaced to &#x201c;ReverseGraph.&#x201d;</p>
<p id="p-0373" num="0372">The reverse uni-directional module <b>516</b> can include a cost reverse uni-directional submodule <b>1008</b> with having the same function, establishing the same condition, or the combination thereof as described in the cost uni-directional submodule <b>908</b> of <figref idref="DRAWINGS">FIG. 9</figref> with the &#x201c;Graph&#x201d; replaced to &#x201c;ReverseGraph.&#x201d; The reverse uni-directional module <b>516</b> can include a get-node reverse uni-directional submodule <b>1010</b> with having the same function, establishing the same condition, or the combination thereof as described in the get-node uni-directional submodule <b>910</b> of <figref idref="DRAWINGS">FIG. 9</figref> with the &#x201c;Graph&#x201d; replaced to &#x201c;ReverseGraph.&#x201d;</p>
<p id="p-0374" num="0373">It has been discovered that the present invention provides the navigation system <b>100</b> to generate the reverse travel route <b>240</b> based on incorporating the links pre-computed by the pre-computation module <b>506</b>, the pruning module <b>508</b>, or the combination thereof from the destination <b>206</b> to the start location <b>204</b>. By identifying each stopping point from the reverse direction, the navigation system <b>100</b> can identify whether the travel route <b>214</b> generated from the start location <b>204</b> to the destination <b>206</b> is the most optimal path the user can travel to reach the destination. By identifying the most optimal route can aid the user a safer operation of the vehicle to reach the destination <b>206</b> without running out of resource, fuel, or the combination thereof.</p>
<p id="p-0375" num="0374">Referring now to <figref idref="DRAWINGS">FIG. 11</figref>, therein is shown a flow of the bidirectional module <b>518</b>. The bidirectional module <b>518</b> searches for the travel route <b>214</b> of <figref idref="DRAWINGS">FIG. 2</figref> when at most one stopping point for the replenishment location <b>210</b> of <figref idref="DRAWINGS">FIG. 2</figref> is needed. For example, the bidirectional module <b>518</b> can generate the reverse travel route <b>240</b> of <figref idref="DRAWINGS">FIG. 2</figref> from the destination <b>206</b> of <figref idref="DRAWINGS">FIG. 2</figref> through the replenishment location <b>210</b>, the intermediate stop <b>208</b> of <figref idref="DRAWINGS">FIG. 2</figref>, or the combination thereof for reaching the start location <b>204</b> of <figref idref="DRAWINGS">FIG. 2</figref>. The bidirectional module <b>518</b> can be described by a pseudo code 5:</p>
<p id="p-0376" num="0375">
<tables id="TABLE-US-00021" num="00021">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>ResultForward = Route1Replenishment(Graph, OriginId, DestinationId,</entry>
</row>
<row>
<entry>initialCharge, ReplenishmentIds)</entry>
</row>
<row>
<entry>If (ResultForward contains a route)</entry>
</row>
<row>
<entry>&#x2003;&#x2002;// No replenishment is needed using the route returned.</entry>
</row>
<row>
<entry>&#x2003;&#x2002;Return the route</entry>
</row>
<row>
<entry>If ResultForward contains no list of nodes</entry>
</row>
<row>
<entry>&#x2003;&#x2002;// there is no route to reach destination with only one replenishment</entry>
</row>
<row>
<entry>&#x2003;&#x2002;Return error</entry>
</row>
<row>
<entry>// Otherwise search backward from destination</entry>
</row>
<row>
<entry>ResultBackward = Route1Replenishment(ReverseGraph, DestinationId,</entry>
</row>
<row>
<entry>OriginId, fullCharge, ReplenishmentIds)</entry>
</row>
<row>
<entry>If (ResultBackward contains a route)</entry>
</row>
<row>
<entry>&#x2003;&#x2002;// something went wrong; should not happen</entry>
</row>
<row>
<entry>&#x2003;&#x2002;Return error</entry>
</row>
<row>
<entry>If ResultBackward contains no nodes</entry>
</row>
<row>
<entry>&#x2003;&#x2002;// there is no route that to reach destination with only one</entry>
</row>
<row>
<entry>&#x2003;&#x2002;replenishment</entry>
</row>
<row>
<entry>&#x2003;&#x2002;Return error</entry>
</row>
<row>
<entry>// Find all replenishment nodes in ResultForward that match replenishment</entry>
</row>
<row>
<entry>// nodes in ResultBackward</entry>
</row>
<row>
<entry>Matches = all pairs NodeForward from ResultForward and NodeBackward</entry>
</row>
<row>
<entry>from ResultBackward for which</entry>
</row>
<row>
<entry>&#x2003;&#x2002;NodeForward.id = NodeBackward.id</entry>
</row>
<row>
<entry>If Matches is empty</entry>
</row>
<row>
<entry>&#x2003;&#x2002;// there is no route to reach destination with only one replenishment</entry>
</row>
<row>
<entry>&#x2003;&#x2002;Return error</entry>
</row>
<row>
<entry>MinCost = &#x221e;</entry>
</row>
<row>
<entry>&#x2002;For each pair, NodeForward and NodeBackward, in Matches</entry>
</row>
<row>
<entry>&#x2003;&#x2002;replenishmentTime = value computed from initialCharge,</entry>
</row>
<row>
<entry>&#x2003;&#x2002;NodeForward.charge, and (maybe) NodeBackward.charge</entry>
</row>
<row>
<entry>&#x2003;&#x2002;If (NodeForward.cost + NodeBackward.cost + replenishmentTime &#x3c;</entry>
</row>
<row>
<entry>&#x2003;&#x2002;MinCost)</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;MinCost = NodeForward.cost + NodeBackward.cost +</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;replenishmentTime</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;MinNodeForward = NodeForward</entry>
</row>
<row>
<entry>&#x2003;&#x2003;&#x2003;&#x2003;&#x2002;MinNodeBackward = NodeBackward</entry>
</row>
<row>
<entry>&#x2003;&#x2003;Construct route by following linked lists starting at</entry>
</row>
<row>
<entry>MinNodeForward.previous and MinNodeBackward.previous</entry>
</row>
<row>
<entry>&#x2003;&#x2002;Return route</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0377" num="0376">Here, &#x201c;Graph&#x201d; is a data structure representing the graph. &#x201c;ReverseGraph&#x201d; is the data structure that is a graph like &#x201c;Graph&#x201d; but in which every link from a node A to a node B has been replaced by a link from node B to node A. Such a link still represents travel from node A to node B, but &#x201c;ReverseGraph.getLinks( )&#x201d; returns the link when given node B instead when given node A.</p>
<p id="p-0378" num="0377">&#x201c;OriginId&#x201d; and &#x201c;DestinationId&#x201d; are inputs and are the identifications of nodes in the graph which represent the origin and destination. &#x201c;ReplenishmentIds&#x201d; is an input which is an array containing the identifications of nodes representing replenishment location. A &#x201c;fullCharge&#x201d; is the amount of a full charge for the vehicle operating with or in conjunction with the navigation system <b>100</b>.</p>
<p id="p-0379" num="0378">The pseudo code 5 is depicted in the flow chart in <figref idref="DRAWINGS">FIG. 11</figref>. The bidirectional module <b>518</b> includes a forward bidirectional submodule <b>1102</b> and performs a forward search by executing the uni-directional module <b>514</b> of <figref idref="DRAWINGS">FIG. 5</figref> by invoking &#x201c;Route1Replenishment&#x201d; and shown in the pseudo code 5:</p>
<p id="p-0380" num="0379">
<tables id="TABLE-US-00022" num="00022">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>ResultForward = Route1Replenishment(Graph, OriginId, DestinationId,</entry>
</row>
<row>
<entry>initialCharge, ReplenishmentIds)</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0381" num="0380">The bidirectional module <b>518</b> includes a result forward bidirectional submodule <b>1104</b> and tests of the forward route from the start location <b>204</b> to the destination <b>206</b> includes one of stopping point for the replenishment location <b>210</b> of <figref idref="DRAWINGS">FIG. 2</figref> and shown in the pseudo code 5:</p>
<p id="p-0382" num="0381">If (ResultForward contains a route)</p>
<p id="p-0383" num="0382">The bidirectional module <b>518</b> includes a return bidirectional submodule <b>1106</b> and executes if the test from the result forward bidirectional submodule <b>1104</b> results in a true condition, then no replenishment is needed and the route generated from the uni-directional module <b>514</b> is returned, as described in the pseudo code 5:</p>
<p id="p-0384" num="0383">
<tables id="TABLE-US-00023" num="00023">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>// No replenishment is needed using the route returned.</entry>
</row>
<row>
<entry/>
<entry>Return the route</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0385" num="0384">The bidirectional module <b>518</b> includes a forward-empty bidirectional submodule <b>1108</b> and executes if the test from the result forward bidirectional submodule <b>1104</b> results in a false condition. The forward-empty bidirectional submodule <b>1108</b> tests if a route exists with only one of the stopping point representing the replenishment location <b>210</b> to the destination <b>206</b> and shown in the pseudo code 5:</p>
<p id="p-0386" num="0385">If ResultForward contains no list of nodes</p>
<p id="p-0387" num="0386">The bidirectional module <b>518</b> includes an error bidirectional submodule <b>1110</b>. The error bidirectional submodule <b>1110</b> generates an error if the forward-empty bidirectional submodule <b>1108</b> results in a condition where no route exists or in a true condition that the route does not exist, as shown in the pseudo code 5:</p>
<p id="p-0388" num="0387">
<tables id="TABLE-US-00024" num="00024">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>// there is no route to reach destination with only one replenishment</entry>
</row>
<row>
<entry/>
<entry>Return error</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0389" num="0388">The bidirectional module <b>518</b> includes a backward bidirectional submodule <b>1112</b>. The backward bidirectional submodule <b>1112</b> searches for a route backwards from the destination <b>206</b> to the start location <b>204</b>. The backward bidirectional submodule <b>1112</b> performs a backward search by executing the reverse uni-directional module <b>516</b> of <figref idref="DRAWINGS">FIG. 10</figref> by invoking &#x201c;Route1Replenishment&#x201d; and shown in the pseudo code 5:</p>
<p id="p-0390" num="0389">
<tables id="TABLE-US-00025" num="00025">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>// Otherwise search backward from destination</entry>
</row>
<row>
<entry>ResultBackward = Route1Replenishment(ReverseGraph, DestinationId,</entry>
</row>
<row>
<entry>OriginId, fullCharge, ReplenishmentIds)</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0391" num="0390">The bidirectional module <b>518</b> includes a result backward bidirectional submodule <b>1114</b>. The result backward bidirectional submodule <b>1114</b> tests if a route from the backward bidirectional submodule <b>1112</b> with one of the stopping point representing the replenishment location <b>210</b>, as shown in the pseudo code 5:</p>
<p id="p-0392" num="0391">If (ResultBackward contains a route)</p>
<p id="p-0393" num="0392">If the result backward bidirectional submodule <b>1114</b> results in a true condition, this condition should not occur and the bidirectional module <b>518</b> returns an error with the error bidirectional submodule <b>1110</b>, as shown in the pseudo code 5:</p>
<p id="p-0394" num="0393">
<tables id="TABLE-US-00026" num="00026">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>// something went wrong; should not happen</entry>
</row>
<row>
<entry/>
<entry>Return error</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0395" num="0394">The bidirectional module <b>518</b> includes a backward-empty bidirectional submodule <b>1116</b>. The result backward bidirectional submodule <b>1114</b> tests if a route exists from the backward bidirectional submodule <b>1112</b> with one of the stopping point representing the replenishment location <b>210</b>. The result backward bidirectional submodule <b>1114</b> operates for the non-true condition from the result backward bidirectional submodule <b>1114</b> and shown in the pseudo code 5:</p>
<p id="p-0396" num="0395">If ResultBackward contains no nodes</p>
<p id="p-0397" num="0396">The bidirectional module <b>518</b> includes a matcher bidirectional submodule <b>1118</b>. The matcher bidirectional submodule <b>1118</b> executes if the tests leading to the error bidirectional submodule <b>1110</b> do not occur. The matcher bidirectional submodule <b>1118</b> finds all locations representing the replenishment location <b>210</b> that matches between the route generated from the forward search in &#x201c;ResultForward&#x201d; and the route generated from the backwards search in &#x201c;ResultBackward&#x201d;, as shown in the pseudo code 5:</p>
<p id="p-0398" num="0397">
<tables id="TABLE-US-00027" num="00027">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>// Find all replenishment nodes in ResultForward that match replenishment</entry>
</row>
<row>
<entry>// nodes in ResultBackward</entry>
</row>
<row>
<entry>Matches = all pairs NodeForward from ResultForward and NodeBackward</entry>
</row>
<row>
<entry>from ResultBackward for which</entry>
</row>
<row>
<entry>&#x2003;&#x2002;NodeForward.id = NodeBackward.id</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0399" num="0398">The bidirectional module <b>518</b> includes an empty bidirectional submodule <b>1120</b>. The empty bidirectional submodule <b>1120</b> tests if the &#x201c;Matches&#x201d; generated from the matcher bidirectional submodule <b>1118</b> is empty or not, as shown in the pseudo code 5:</p>
<p id="p-0400" num="0399">If Matches is empty</p>
<p id="p-0401" num="0400">If the empty bidirectional submodule <b>1120</b> results in a true condition such that &#x201c;Matches&#x201d; is empty, then the bidirectional module <b>518</b> returns an error with the error bidirectional submodule <b>1110</b>.</p>
<p id="p-0402" num="0401">The bidirectional module <b>518</b> includes an infinite bidirectional submodule <b>1122</b>. The infinite bidirectional submodule <b>1122</b> initializes a minimum cost, &#x201c;MinCost&#x201d; to a high water mark as infinity, as shown in the pseudo code 5:</p>
<p id="p-0403" num="0402">MinCost=&#x221e;</p>
<p id="p-0404" num="0403">The bidirectional module <b>518</b> includes a pair bidirectional submodule <b>1124</b>, a time bidirectional submodule <b>1126</b>, a lower bidirectional submodule <b>1128</b>, and a checker bidirectional submodule <b>1130</b>. The pair bidirectional submodule <b>1124</b> runs through all the nodes in &#x201c;Matches&#x201d;, as shown in the pseudo code 5:</p>
<p id="p-0405" num="0404">For each pair, NodeForward and NodeBackward, in Matches</p>
<p id="p-0406" num="0405">The time bidirectional submodule <b>1126</b>, the lower bidirectional submodule <b>1128</b>, and the checker bidirectional submodule <b>1130</b> operates until the all the matches in &#x201c;Matches&#x201d; have been examined. The time bidirectional submodule <b>1126</b> calculates the time to replenish at a node found in &#x201c;Matches&#x201d; based on the initial charge, &#x201c;initialCharge&#x201d;, the remaining charge from traversing on the forward route, &#x201c;NodeForward.charge&#x201d;, and optionally with the remaining charge from traversing along the backwards route, &#x201c;NodeBackward.charge&#x201d;, as shown in the pseudo code 5:</p>
<p id="p-0407" num="0406">
<tables id="TABLE-US-00028" num="00028">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="196pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>replenishmentTime = value computed from initialCharge,</entry>
</row>
<row>
<entry/>
<entry>NodeForward.charge, and (maybe) NodeBackward.charge</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0408" num="0407">The lower bidirectional submodule <b>1128</b> tests to see if the current node in &#x201c;Matches&#x201d; along with the replenishment time is lower than a previously calculated or set minimum cost, &#x201c;MinCost&#x201d;, as shown in the pseudo code 5:</p>
<p id="p-0409" num="0408">If (NodeForward.cost+NodeBackward.cost+replenishmentTime&#x3c;MinCost)</p>
<p id="p-0410" num="0409">If the lower bidirectional submodule <b>1128</b> results in the current node not being less than the previously calculated or set minimum cost, &#x201c;MinCost&#x201d;, than the search continues through the &#x201c;Matches&#x201d; list and returns to the pair bidirectional submodule <b>1124</b>.</p>
<p id="p-0411" num="0410">The checker bidirectional submodule <b>1130</b> operates if the lower bidirectional submodule <b>1128</b> results in the current node being less than the previously calculated or set minimum cost, &#x201c;MinCost&#x201d;. The checker bidirectional submodule <b>1130</b> sets the minimum cost, &#x201c;MinCost&#x201d; with the current cost calculated in the lower bidirectional submodule <b>1128</b>, the minimum forward node &#x201c;MinNodeForward&#x201d;, and a minimum backward node &#x201c;MinNodeBackward&#x201d;, as shown in the pseudo code 5:</p>
<p id="p-0412" num="0411">
<tables id="TABLE-US-00029" num="00029">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>MinCost = NodeForward.cost + NodeBackward.cost + replenishmentTime</entry>
</row>
<row>
<entry>MinNodeForward = NodeForward</entry>
</row>
<row>
<entry>MinNodeBackward = NodeBackward</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0413" num="0412">The bidirectional module <b>518</b> includes a constructor bidirectional submodule <b>1132</b>. From the checker bidirectional submodule <b>1130</b>, the search continues through the &#x201c;Matches&#x201d; list and returns to the pair bidirectional submodule <b>1124</b>. When the search through the matches completes, the pair bidirectional submodule <b>1124</b> continues to the constructor bidirectional submodule <b>1132</b>.</p>
<p id="p-0414" num="0413">The constructor bidirectional submodule <b>1132</b> constructs the route with the minimum forward node &#x201c;MinNodeForward&#x201d;, and a minimum backward node &#x201c;MinNodeBackward&#x201d; calculated in the checker bidirectional submodule <b>1130</b>, as shown in the pseudo code 5:</p>
<p id="p-0415" num="0414">
<tables id="TABLE-US-00030" num="00030">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="196pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>&#x2003;&#x2003;Construct route by following linked lists starting at</entry>
</row>
<row>
<entry/>
<entry>MinNodeForward.previous and MinNodeBackward.previous</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0416" num="0415">The bidirectional module <b>518</b> includes an output bidirectional submodule <b>1134</b>. The output bidirectional submodule <b>1134</b> returns the route constructed from the constructor bidirectional submodule <b>1132</b> for the output for the bidirectional module <b>518</b>.</p>
<p id="p-0417" num="0416">The physical transformation from generating the travel route <b>214</b>, the reverse travel route <b>240</b>, or the combination thereof results in movement in the physical world, such as people using the first device <b>102</b> of <figref idref="DRAWINGS">FIG. 1</figref>, the vehicle, or a combination thereof, based on the operation of the navigation system <b>100</b>. As the movement in the physical world occurs, the movement itself creates additional information that is converted back to generate the travel route <b>214</b>, the reverse travel route <b>240</b>, or the combination thereof for the continued operation of the navigation system <b>100</b> and to continue the movement in the physical world.</p>
<p id="p-0418" num="0417">It has been discovered that the present invention provides the navigation system <b>100</b> to identify the replenishment location <b>210</b> accurately and generate the travel route <b>214</b> efficiently for safer operation of the vehicle, the navigation system <b>100</b>, and other user interface system within the vehicle. The accuracy is provided by identifying the replenishment location <b>210</b> by searching not only from the start location <b>204</b> to the destination <b>206</b>, but also from the destination <b>206</b> to the start location <b>204</b>. The bi-directional approach can reduce error for identifying the replenishment location <b>210</b> that the vehicle can safely reach. Subsequently, the navigation system <b>100</b> can generate the travel route <b>214</b> that can aid the vehicle to safely reach the destination <b>206</b> via the replenishment location <b>210</b> most suitable for the vehicle for replenishment.</p>
<p id="p-0419" num="0418">Referring now to <figref idref="DRAWINGS">FIG. 12</figref>, therein is shown a flow chart of a method <b>1200</b> of operation of the navigation system <b>100</b> with constrained resource route planning optimizer in a further embodiment of the present invention. The method <b>1200</b> includes setting a predetermined arrival level for arriving at a replenishment location in a block <b>1202</b>; calculating an estimated arrival level for arriving at a replenishment location in a block <b>1204</b>; generating a target location based on the estimated arrival level meeting or exceeding the predetermined arrival level in a block <b>1206</b>; and generating a travel route to a destination based on selecting the replenishment location from the target location for displaying on a device in a block <b>1208</b>.</p>
<p id="p-0420" num="0419">The resulting method, process, apparatus, device, product, and/or system is straightforward, cost-effective, uncomplicated, highly versatile, accurate, sensitive, and effective, and can be implemented by adapting known components for ready, efficient, and economical manufacturing, application, and utilization. Another important aspect of the present invention is that it valuably supports and services the historical trend of reducing costs, simplifying systems, and increasing performance. These and other valuable aspects of the present invention consequently further the state of the technology to at least the next level.</p>
<p id="p-0421" num="0420">While the invention has been described in conjunction with a specific best mode, it is to be understood that many alternatives, modifications, and variations will be apparent to those skilled in the art in light of the aforegoing description. Accordingly, it is intended to embrace all such alternatives, modifications, and variations that fall within the scope of the included claims. All matters hithertofore set forth herein or shown in the accompanying drawings are to be interpreted in an illustrative and non-limiting sense.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method of operation of a navigation system comprising:
<claim-text>setting a predetermined arrival level for arriving at a replenishment location;</claim-text>
<claim-text>calculating an estimated arrival level for arriving at the replenishment location;</claim-text>
<claim-text>calculating an estimated sectional travel time for traversing one or more travel sections;</claim-text>
<claim-text>comparing the estimated sectional travel time for traversing each of the travel sections;</claim-text>
<claim-text>generating a target location based on the estimated arrival level meeting or exceeding the predetermined arrival level; and</claim-text>
<claim-text>generating a travel route to a destination with a control unit based on selecting the replenishment location from the target location with the shortest of the estimated sectional travel time for traversing each of the travel sections for displaying on a device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising:
<claim-text>calculating a predetermined distance for reaching the replenishment location;</claim-text>
<claim-text>calculating a section distance for reaching the replenishment location; and</claim-text>
<claim-text>wherein generating the target location includes selecting the replenishment location based on the section distance meeting or exceeding the predetermined distance for at least reaching the replenishment location.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising:
<claim-text>calculating a current location estimated level at the replenishment location;</claim-text>
<claim-text>calculating an estimated consumption level for traversing one or more of the travel sections; and</claim-text>
<claim-text>wherein generating the target location includes selecting the replenishment location based on the current location estimated level meeting or exceeding the estimated consumption level.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising:
<claim-text>calculating an allotted alternate transportation travel time for traversing an alternate transportation route to reach the replenishment location;</claim-text>
<claim-text>calculating an estimated alternate transportation time for traversing the alternate transportation route to reach the replenishment location; and</claim-text>
<claim-text>wherein generating the target location includes selecting the replenishment location based on the allotted alternate transportation travel time meeting or exceeding the estimated alternate transportation time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising:
<claim-text>calculating an estimated sectional financial cost for traversing one or more of the travel sections; and</claim-text>
<claim-text>wherein generating the target location includes:</claim-text>
<claim-text>comparing the estimated sectional financial cost for traversing each of the travel sections; and</claim-text>
<claim-text>selecting the replenishment location with the lowest of the estimated sectional financial cost for traversing each of the travel sections.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein generating the travel route includes generating a reverse travel route from the destination to a start location based on selecting the replenishment location from the target location.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein generating the travel route includes generating a reverse travel route from the destination to a start location based on selecting an intermediate stop from the target location.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein generating the travel route to the destination based on the target location includes:
<claim-text>identifying the destination from the target location; and</claim-text>
<claim-text>generating the travel route through the replenishment location, an intermediate stop, or a combination thereof to the destination.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein generating the travel route to the destination based on the target location includes:
<claim-text>identifying the replenishment location from the target location; and</claim-text>
<claim-text>generating the travel route to the replenishment location.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein generating the travel route to the destination based on the target location includes:
<claim-text>identifying an intermediate stop from the target location; and</claim-text>
<claim-text>generating the travel route to the intermediate stop.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A method of operation of a navigation system comprising:
<claim-text>setting a predetermined arrival level for arriving at a replenishment location;</claim-text>
<claim-text>calculating an estimated arrival level for arriving at the replenishment location;</claim-text>
<claim-text>calculating an estimated sectional travel time for traversing one or more travel sections;</claim-text>
<claim-text>comparing the estimated sectional travel time for traversing each of the travel sections;</claim-text>
<claim-text>generating a target location based on the estimated arrival level meeting or exceeding the predetermined arrival level;</claim-text>
<claim-text>identifying the replenishment location with the shortest of the estimated sectional travel time for traversing each of the travel sections from the target location; and</claim-text>
<claim-text>generating a travel route through the replenishment location to a destination with a control unit for displaying on a device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method as claimed in <claim-ref idref="CLM-00011">claim 11</claim-ref> further comprising generating a reverse travel route from the destination through the replenishment location for reaching a start location.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method as claimed in <claim-ref idref="CLM-00011">claim 11</claim-ref> wherein:
<claim-text>setting the predetermined arrival level includes setting the predetermined arrival level for arriving at the destination;</claim-text>
<claim-text>calculating the estimated arrival level includes calculating the estimated arrival level for arriving at the destination; and</claim-text>
<claim-text>generating the target location includes selecting the destination based on the estimated arrival level meeting or exceeding the predetermined arrival level.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method as claimed in <claim-ref idref="CLM-00011">claim 11</claim-ref> wherein:
<claim-text>setting the predetermined arrival level includes setting the predetermined arrival level for arriving at an intermediate stop;</claim-text>
<claim-text>calculating the estimated arrival level includes calculating the estimated arrival level for arriving at the intermediate stop; and</claim-text>
<claim-text>generating the target location includes selecting the intermediate stop based on the estimated arrival level meeting or exceeding the predetermined arrival level.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method as claimed in <claim-ref idref="CLM-00011">claim 11</claim-ref> further comprising:
<claim-text>calculating a current location estimated level at the destination;</claim-text>
<claim-text>calculating an estimated consumption level for traversing a travel section; and</claim-text>
<claim-text>wherein generating the target location includes selecting the destination based on the current location estimated level meeting or exceeding the estimated consumption level.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method as claimed in <claim-ref idref="CLM-00011">claim 11</claim-ref> further comprising:
<claim-text>calculating a current location estimated level at an intermediate stop;</claim-text>
<claim-text>calculating an estimated consumption level for traversing a travel section; and</claim-text>
<claim-text>wherein generating the target location includes selecting the intermediate stop based on the current location estimated level meeting or exceeding the estimated consumption level.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The method as claimed in <claim-ref idref="CLM-00011">claim 11</claim-ref> further comprising:
<claim-text>calculating a predetermined distance for reaching the destination;</claim-text>
<claim-text>calculating a section distance for reaching the destination; and</claim-text>
<claim-text>wherein generating the target location includes selecting the destination based on the section distance meeting or exceeding the predetermined distance.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method as claimed in <claim-ref idref="CLM-00011">claim 11</claim-ref> further comprising:
<claim-text>calculating a predetermined distance for reaching an intermediate stop;</claim-text>
<claim-text>calculating a section distance for reaching the intermediate stop; and</claim-text>
<claim-text>wherein generating the target location includes selecting the intermediate stop based on the section distance meeting or exceeding the predetermined distance.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method as claimed in <claim-ref idref="CLM-00011">claim 11</claim-ref> further comprising:
<claim-text>calculating an allotted alternate transportation travel time for traversing an alternate transportation route to reach the destination;</claim-text>
<claim-text>calculating an estimated alternate transportation time for traversing the alternate transportation route to reach the destination; and</claim-text>
<claim-text>wherein generating the target location includes selecting the destination based on the allotted alternate transportation travel time meeting or exceeding the estimated alternate transportation time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The method as claimed in <claim-ref idref="CLM-00011">claim 11</claim-ref> further comprising:
<claim-text>calculating an allotted alternate transportation travel time for traversing an alternate transportation route to reach an intermediate stop;</claim-text>
<claim-text>calculating an estimated alternate transportation time for traversing the alternate transportation route to reach the intermediate stop; and</claim-text>
<claim-text>wherein generating the target location includes selecting the intermediate stop based on the allotted alternate transportation travel time meeting or exceeding the estimated alternate transportation time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The method as claimed in <claim-ref idref="CLM-00011">claim 11</claim-ref> further comprising:
<claim-text>calculating the estimated sectional travel time for traversing one or more of the travel sections; and</claim-text>
<claim-text>wherein generating the target location includes:</claim-text>
<claim-text>comparing the estimated sectional travel time for traversing each of the travel sections; and</claim-text>
<claim-text>selecting the destination with the shortest of the estimated sectional travel time for traversing each of the travel sections.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The method as claimed in <claim-ref idref="CLM-00011">claim 11</claim-ref> further comprising:
<claim-text>calculating the estimated sectional travel time for traversing one or more of the travel sections; and</claim-text>
<claim-text>wherein generating the target location includes:</claim-text>
<claim-text>comparing the estimated sectional travel time for traversing each of the travel sections; and</claim-text>
<claim-text>selecting an intermediate stop with the shortest of the estimated sectional travel time for traversing each of the travel sections.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The method as claimed in <claim-ref idref="CLM-00011">claim 11</claim-ref> further comprising:
<claim-text>calculating an estimated sectional financial cost for traversing one or more of the travel sections; and</claim-text>
<claim-text>wherein generating the target location includes:</claim-text>
<claim-text>comparing the estimated sectional financial cost for traversing each of the travel sections; and</claim-text>
<claim-text>selecting the destination with the lowest of the estimated sectional financial cost for traversing each of the travel sections.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The method as claimed in <claim-ref idref="CLM-00013">claim 13</claim-ref> further comprising:
<claim-text>calculating an estimated sectional financial cost for traversing one or more of the travel sections; and</claim-text>
<claim-text>wherein generating the target location includes:</claim-text>
<claim-text>comparing the estimated sectional financial cost for traversing each of the travel sections; and</claim-text>
<claim-text>selecting an intermediate stop with the lowest of the estimated sectional financial cost for traversing each of the travel sections.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. A navigation system comprising:
<claim-text>a predetermined level module for setting a predetermined arrival level for arriving at a replenishment location;</claim-text>
<claim-text>a calculator pre-computation submodule, coupled to the predetermined level module, for:
<claim-text>calculating an estimated arrival level for arriving at the replenishment location, and</claim-text>
<claim-text>calculating an estimated sectional travel time for traversing one or more travel sections; and</claim-text>
</claim-text>
<claim-text>a cost pre-computation submodule, coupled to the predetermined level module, for comparing the estimated sectional travel time for traversing each of the travel sections;</claim-text>
<claim-text>a return pre-computation submodule, coupled to the predetermined level module, for generating a target location based on the estimated arrival level meeting or exceeding the predetermined arrival level; and</claim-text>
<claim-text>a route planning module, coupled to the return pre-computation submodule, for generating a travel route to a destination based on selecting the replenishment location from the target location with the shortest of the estimated sectional travel time for traversing each of the travel sections for displaying on a device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The system as claimed in <claim-ref idref="CLM-00025">claim 25</claim-ref> further comprising:
<claim-text>a predetermined distance calculator module, coupled to the predetermined level module, for calculating a predetermined distance for reaching the replenishment location;</claim-text>
<claim-text>a distance pruning submodule, coupled to the predetermined distance calculator module, for calculating a section distance for reaching the replenishment location; and</claim-text>
<claim-text>an aggregator pre-computation submodule, coupled to the distance pruning submodule, for selecting the replenishment location based on the section distance meeting or exceeding the predetermined distance for at least reaching the replenishment location.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The system as claimed in <claim-ref idref="CLM-00025">claim 25</claim-ref> wherein:
<claim-text>the calculator pre-computation submodule is for calculating a current location estimated level at the replenishment location; and</claim-text>
<claim-text>further comprising:</claim-text>
<claim-text>a pre-computation module, coupled to the predetermined level module, for calculating an estimated consumption level for traversing a travel section; and</claim-text>
<claim-text>an aggregator pre-computation submodule, coupled to the predetermined level module, for selecting the replenishment location based on the current location estimated level meeting or exceeding the estimated consumption level.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. The system as claimed in <claim-ref idref="CLM-00025">claim 25</claim-ref> further comprising:
<claim-text>a safe charge pre-computation submodule, coupled to the predetermined level module, for calculating an allotted alternate transportation travel time for traversing an alternate transportation route to reach the replenishment location;</claim-text>
<claim-text>a pre-computation module, coupled to the predetermined level module, for calculating an estimated alternate transportation time for traversing the alternate transportation route to reach the replenishment location; and</claim-text>
<claim-text>an aggregator pre-computation submodule, coupled to the predetermined level module, for selecting the replenishment location based on the allotted alternate transportation travel time meeting or exceeding the estimated alternate transportation time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. The system as claimed in <claim-ref idref="CLM-00025">claim 25</claim-ref> wherein:
<claim-text>the calculator pre-computation submodule is for calculating an estimated sectional financial cost for traversing one or more of the travel sections; and</claim-text>
<claim-text>further comprising:</claim-text>
<claim-text>a cost pre-computation submodule, coupled to the predetermined level module, for comparing the estimated sectional financial cost for traversing each of the travel sections; and</claim-text>
<claim-text>an aggregator pre-computation submodule, coupled to the predetermined level module, for selecting the replenishment location with the lowest of the estimated sectional financial cost for traversing each of the travel sections.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00030" num="00030">
<claim-text>30. The system as claimed in <claim-ref idref="CLM-00025">claim 25</claim-ref> wherein the route planning module is for generating a reverse travel route from the destination to a start location based on selecting the replenishment location from the target location.</claim-text>
</claim>
<claim id="CLM-00031" num="00031">
<claim-text>31. The system as claimed in <claim-ref idref="CLM-00025">claim 25</claim-ref> wherein the route planning module is for generating a reverse travel route from the destination to a start location based on selecting an intermediate stop from the target location.</claim-text>
</claim>
<claim id="CLM-00032" num="00032">
<claim-text>32. The system as claimed in <claim-ref idref="CLM-00025">claim 25</claim-ref> wherein the route planning module includes:
<claim-text>a destination uni-directional submodule for identifying the destination from the target location; and</claim-text>
<claim-text>a constructor uni-directional submodule for generating the travel route through the replenishment location, an intermediate stop, or a combination thereof to the destination.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00033" num="00033">
<claim-text>33. The system as claimed in <claim-ref idref="CLM-00025">claim 25</claim-ref> wherein the route planning module includes:
<claim-text>an identifier uni-directional submodule for identifying the replenishment location from the target location; and</claim-text>
<claim-text>a constructor uni-directional submodule for generating the travel route to the replenishment location.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00034" num="00034">
<claim-text>34. The system as claimed in <claim-ref idref="CLM-00025">claim 25</claim-ref> wherein the route planning module includes:
<claim-text>a destination uni-directional submodule for identifying an intermediate stop from the target location; and</claim-text>
<claim-text>a constructor uni-directional submodule for generating the travel route to the intermediate stop.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00035" num="00035">
<claim-text>35. The system as claimed in <claim-ref idref="CLM-00025">claim 25</claim-ref> further comprising:
<claim-text>a destination uni-directional submodule, coupled to the predetermined level module, for identifying the replenishment location from the target location; and</claim-text>
<claim-text>wherein:</claim-text>
<claim-text>the route planning module is for generating the travel route through the replenishment location to the destination for displaying on the device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00036" num="00036">
<claim-text>36. The system as claimed in <claim-ref idref="CLM-00035">claim 35</claim-ref> wherein the route planning module is for generating a reverse travel route from the destination through the replenishment location for reaching a start location.</claim-text>
</claim>
<claim id="CLM-00037" num="00037">
<claim-text>37. The system as claimed in <claim-ref idref="CLM-00035">claim 35</claim-ref> wherein the return pre-computation submodule is for selecting the destination based on the estimated arrival level meeting or exceeding the predetermined arrival level.</claim-text>
</claim>
<claim id="CLM-00038" num="00038">
<claim-text>38. The system as claimed in <claim-ref idref="CLM-00035">claim 35</claim-ref> wherein the return pre-computation submodule is for selecting an intermediate stop based on the estimated arrival level meeting or exceeding the predetermined arrival level.</claim-text>
</claim>
<claim id="CLM-00039" num="00039">
<claim-text>39. The system as claimed in <claim-ref idref="CLM-00035">claim 35</claim-ref> further comprising:
<claim-text>a pre-computation module, coupled to the predetermined level module, for calculating a current location estimated level at the destination;</claim-text>
<claim-text>wherein:</claim-text>
<claim-text>the calculator pre-computation submodule is for calculating an estimated consumption level for traversing a travel section; and</claim-text>
<claim-text>the pre-computation module is for selecting the destination based on the current location estimated level meeting or exceeding the estimated consumption level.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00040" num="00040">
<claim-text>40. The system as claimed in <claim-ref idref="CLM-00035">claim 35</claim-ref> further comprising:
<claim-text>a pre-computation module, coupled to the predetermined level module, for calculating a current location estimated level at an intermediate stop;</claim-text>
<claim-text>wherein:</claim-text>
<claim-text>the calculator pre-computation submodule is for calculating an estimated consumption level for traversing a travel section; and</claim-text>
<claim-text>the pre-computation module is for selecting the intermediate stop based on the current location estimated level meeting or exceeding the estimated consumption level.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00041" num="00041">
<claim-text>41. The system as claimed in <claim-ref idref="CLM-00035">claim 35</claim-ref> further comprising:
<claim-text>a predetermined distance calculator module, coupled to the predetermined level module, for calculating a predetermined distance for reaching the destination;</claim-text>
<claim-text>a distance pruning submodule, coupled to the predetermined distance calculator module, for calculating a section distance for reaching the destination; and</claim-text>
<claim-text>an aggregator pre-computation submodule, coupled to the predetermined distance calculator module, for selecting the destination based on the section distance meeting or exceeding the predetermined distance.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00042" num="00042">
<claim-text>42. The system as claimed in <claim-ref idref="CLM-00035">claim 35</claim-ref> further comprising:
<claim-text>a predetermined distance calculator module, coupled to the predetermined level module, for calculating a predetermined distance for reaching an intermediate stop;</claim-text>
<claim-text>a distance pruning submodule, coupled to the predetermined distance calculator module, for calculating a section distance for reaching the intermediate stop; and</claim-text>
<claim-text>an aggregator pre-computation submodule, coupled to the predetermined distance calculator module, for selecting the intermediate stop based on the section distance meeting or exceeding the predetermined distance.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00043" num="00043">
<claim-text>43. The system as claimed in <claim-ref idref="CLM-00035">claim 35</claim-ref> further comprising:
<claim-text>a safe charge pre-computation submodule, coupled to the predetermined level module, for calculating an allotted alternate transportation travel time for traversing an alternate transportation route to reach the destination;</claim-text>
<claim-text>a pre-computation module, coupled to the predetermined level module, for calculating an estimated alternate transportation time for traversing the alternate transportation route to reach the destination; and</claim-text>
<claim-text>an aggregator pre-computation submodule, coupled to the predetermined level module, for selecting the destination based on the allotted alternate transportation travel time meeting or exceeding the estimated alternate transportation time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00044" num="00044">
<claim-text>44. The system as claimed in <claim-ref idref="CLM-00035">claim 35</claim-ref> further comprising:
<claim-text>a safe charge pre-computation submodule, coupled to the predetermined level module, for calculating an allotted alternate transportation travel time for traversing an alternate transportation route to reach an intermediate stop;</claim-text>
<claim-text>a pre-computation module, coupled to the predetermined level module, for calculating an estimated alternate transportation time for traversing the alternate transportation route to reach the intermediate stop; and</claim-text>
<claim-text>an aggregator pre-computation submodule, coupled to the predetermined level module, for selecting the intermediate stop based on the allotted alternate transportation travel time meeting or exceeding the estimated alternate transportation time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00045" num="00045">
<claim-text>45. The system as claimed in <claim-ref idref="CLM-00035">claim 35</claim-ref> wherein:
<claim-text>the calculator pre-computation submodule is for calculating the estimated sectional travel time for traversing one or more of the travel sections; and</claim-text>
<claim-text>further comprising:</claim-text>
<claim-text>a cost pre-computation submodule, coupled to the predetermined level module, for comparing the estimated sectional travel time for traversing each of the travel sections; and</claim-text>
<claim-text>an aggregator pre-computation submodule, coupled to the predetermined level module, for selecting the destination with the shortest of the estimated sectional travel time for traversing each of the travel sections.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00046" num="00046">
<claim-text>46. The system as claimed in <claim-ref idref="CLM-00035">claim 35</claim-ref> wherein:
<claim-text>the calculator pre-computation submodule is for calculating the estimated sectional travel time for traversing one or more of the travel sections; and</claim-text>
<claim-text>further comprising:</claim-text>
<claim-text>a cost pre-computation submodule, coupled to the predetermined level module, for comparing the estimated sectional travel time for traversing each of the travel sections; and</claim-text>
<claim-text>an aggregator pre-computation submodule, coupled to the predetermined level module, for selecting an intermediate stop with the shortest of the estimated sectional travel time for traversing each of the travel sections.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00047" num="00047">
<claim-text>47. The system as claimed in <claim-ref idref="CLM-00035">claim 35</claim-ref> wherein:
<claim-text>the calculator pre-computation submodule is for calculating an estimated sectional financial cost for traversing one or more of the travel sections; and</claim-text>
<claim-text>further comprising:</claim-text>
<claim-text>a cost pre-computation submodule, coupled to the predetermined level module, for comparing the estimated sectional financial cost for traversing each of the travel sections; and</claim-text>
<claim-text>an aggregator pre-computation submodule, coupled to the predetermined level module, for selecting the destination with the lowest of the estimated sectional financial cost for traversing each of the travel sections.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00048" num="00048">
<claim-text>48. The system as claimed in <claim-ref idref="CLM-00035">claim 35</claim-ref> wherein:
<claim-text>the calculator pre-computation submodule is for calculating an estimated sectional financial cost for traversing one or more of the travel sections; and</claim-text>
<claim-text>further comprising:</claim-text>
<claim-text>a cost pre-computation submodule, coupled to the predetermined level module, for comparing the estimated sectional financial cost for traversing each of the travel sections; and</claim-text>
<claim-text>an aggregator pre-computation submodule, coupled to the predetermined level module, for selecting an intermediate stop with the lowest of the estimated sectional financial cost for traversing each of the travel sections.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
