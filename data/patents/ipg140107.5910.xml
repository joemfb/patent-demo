<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627019-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627019</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13323918</doc-number>
<date>20111213</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>KR</country>
<doc-number>10-2010-0128792</doc-number>
<date>20101216</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>204</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>12</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>711149</main-classification>
<further-classification>711103</further-classification>
</classification-national>
<invention-title id="d2e71">Method and device of controlling memory area of multi-port memory device in memory link architecture</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>7606982</doc-number>
<kind>B2</kind>
<name>Hwang et al.</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711147</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2008/0320204</doc-number>
<kind>A1</kind>
<name>Jo et al.</name>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711100</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2010/0077130</doc-number>
<kind>A1</kind>
<name>Kwon</name>
<date>20100300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2011/0035575</doc-number>
<kind>A1</kind>
<name>Kwon</name>
<date>20110200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2011/0153959</doc-number>
<kind>A1</kind>
<name>Chu et al.</name>
<date>20110600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711149</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>KR</country>
<doc-number>1020100034415</doc-number>
<kind>A</kind>
<date>20100400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>KR</country>
<doc-number>1020110013867</doc-number>
<kind>A</kind>
<date>20110200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>13</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>711149</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711103</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>5</number-of-drawing-sheets>
<number-of-figures>5</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120159049</doc-number>
<kind>A1</kind>
<date>20120621</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Yang</last-name>
<first-name>Jung Woong</first-name>
<address>
<city>Yongin-si</city>
<country>KR</country>
</address>
</addressbook>
<residence>
<country>KR</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Yang</last-name>
<first-name>Jung Woong</first-name>
<address>
<city>Yongin-si</city>
<country>KR</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Volentine &#x26; Whitt, PLLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Samsung Electronics Co., Ltd.</orgname>
<role>03</role>
<address>
<city>Suwon-si, Gyeonggi-do</city>
<country>KR</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Farrokh</last-name>
<first-name>Hashem</first-name>
<department>2188</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A memory area managing method of a multi-port memory device in a memory link architecture which includes a multi-port memory device, a memory controller, and a flash memory, the method including performing a data processing step in which data stored in a host CPU area of the multi-port memory device is processed by a host CPU connected with the multi-port memory device, the processed data being stored in a shared area; performing a file data generating step in which file data on the processed data stored in the shared area is generated according to a write command of the host CPU, the file data being stored in a memory controller area of the multi-port memory device; and performing a file data storing step in which the file data is read out from the memory controller area and the read file data is sent to the flash memory.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="101.68mm" wi="232.66mm" file="US08627019-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="161.29mm" wi="168.91mm" file="US08627019-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="250.53mm" wi="153.08mm" orientation="landscape" file="US08627019-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="236.14mm" wi="143.93mm" orientation="landscape" file="US08627019-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="264.92mm" wi="154.01mm" orientation="landscape" file="US08627019-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="224.28mm" wi="139.62mm" file="US08627019-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">A claim for priority under 35 U.S.C &#xa7;119 is made to Korean Patent Application No. 10-2010-0128792 filed Dec. 16, 2010, the entirety of which is incorporated by reference herein.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">The inventive concepts described herein relate to an embedded memory device, and more particularly, relate to a method and device capable of managing a memory area of a multi-port memory device in a memory link architecture.</p>
<p id="p-0004" num="0003">An embedded memory device is a device which is connected with a host such as a handheld phone, a digital camera, an MP3 player, etc., and which stores data (e.g., moving pictures, pictures, etc.) transferred from the host.</p>
<p id="p-0005" num="0004">Examples of embedded memory devices include an embedded multimedia card (EMMC), a security digital (SD) card, a memory link architecture (MLA), etc., which are formed as including a flash memory and a controller for controlling data exchange between the flash memory and a host.</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram illustrating a typical embedded memory device. Referring to <figref idref="DRAWINGS">FIG. 1</figref>, an EMMC is shown as an example of embedded memory device <b>100</b>. The embedded memory device <b>100</b> includes a flash memory <b>110</b> and a controller <b>120</b>.</p>
<p id="p-0007" num="0006">In the embedded memory device <b>100</b>, the controller <b>120</b> maps file data transferred from host <b>10</b> using a flash translation layer (FTL), and stores the data in the flash memory <b>110</b>.</p>
<p id="p-0008" num="0007">The host <b>10</b> connected with the embedded memory device <b>100</b> includes a CPU <b>11</b> and a memory <b>12</b>. The host <b>10</b> processes data stored in the memory <b>12</b> using an application included in the CPU <b>11</b>, and converts the processed data into a file format using a file system. The host <b>10</b> maps the converted file and transfers it to the embedded memory device <b>100</b> using an EMMC driver included in the CPU <b>11</b>.</p>
<p id="p-0009" num="0008">Both an application and a file system are driven by the CPU <b>11</b> included in the host <b>10</b> to which the embedded memory device <b>100</b> is connected. This means that the efficiency of CPU resources is lowered when the CPU <b>11</b> controls an internal operation of the host <b>10</b> and other operations thereof.</p>
<p id="p-0010" num="0009">In particular, performance (e.g., speed) of the CPU <b>11</b>, which is used in a multimedia device to which more complicated and various functions are added as technology advances, is lowered. Further, power consumption of the host <b>10</b> increases since a file system is driven by the CPU <b>11</b>.</p>
<p id="p-0011" num="0010">In addition, in the embedded memory device, a sudden power off recovery (SPOR) phenomenon arises due to an asynchronous characteristic between file data generated by the CPU <b>11</b> of the host <b>10</b> and file data converted by the FTL stored in the embedded memory device.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0012" num="0011">A memory area managing method of a multi-port memory device in a memory link architecture and a device using the same are provided to make better use of resources of a CPU of a host connected with an embedded memory device.</p>
<p id="p-0013" num="0012">The memory area managing method of a multi-port memory device in the memory link architecture and the device using the same are further provided to reduce power consumption of a host connected with an embedded memory device and to prevent a sudden power off recovery (SPOR) phenomenon.</p>
<p id="p-0014" num="0013">In an embodiment of the inventive concept, a memory area managing method of a multi-port memory device in a memory link architecture which includes a multi-port memory device, a memory controller, and a flash memory, includes performing a data processing step in which data stored in a host CPU area of the multi-port memory device is processed by a host CPU connected with the multi-port memory device, the processed data being stored in a shared area of the multi-port memory device; performing a file data generating step in which file data is generated from the processed data stored in the shared area according to a write command of the host CPU, the file data being stored in a memory controller area of the multi-port memory device; and performing a file data storing step in which the file data is read out from the memory controller area and the read file data is sent to the flash memory.</p>
<p id="p-0015" num="0014">In another embodiment of the inventive concept, a device for managing a memory area of a multi-port memory device in a memory link architecture comprises a flash memory; a multi-port memory device including a plurality of memory areas configured to store data transferred from a host, data processed by a host CPU, and file data; and a memory controller configured to generate file data from processed data stored in the multi-port memory device according to a write command of the host CPU, the file data being stored in the flash memory.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE FIGURES</heading>
<p id="p-0016" num="0015">The above and other objects and features will become apparent from the following description with reference to the following figures, wherein like reference numerals refer to like parts throughout the various figures unless otherwise specified, and wherein</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram illustrating a typical embedded memory device;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram illustrating a memory link architecture according to an exemplary embodiment of the inventive concept;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram for describing an operation of a memory link architecture in <figref idref="DRAWINGS">FIG. 2</figref>;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram illustrating another example of an MLA according to an exemplary embodiment of the inventive concept; and</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart for describing a method of managing a memory area of a multi-port memory device in a memory link architecture according to an exemplary embodiment of the inventive concept.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0022" num="0021">The inventive concept is described more fully hereinafter with reference to the accompanying drawings, in which embodiments of the inventive concept are shown. This inventive concept may, however, be embodied in many different forms and should not be construed as limited to the embodiments set forth herein. Rather, these embodiments are provided so that this disclosure will be thorough and complete, and will fully convey the scope of the inventive concept to those skilled in the art. In the drawings, the size and relative sizes of layers and regions may be exaggerated for clarity. Like numbers refer to like elements throughout.</p>
<p id="p-0023" num="0022">It will be understood that, although the terms first, second, third etc. may be used herein to describe various elements, components, regions, layers and/or sections, these elements, components, regions, layers and/or sections should not be limited by these terms. These terms are only used to distinguish one element, component, region, layer or section from another region, layer or section. Thus, a first element, component, region, layer or section discussed below could be termed a second element, component, region, layer or section without departing from the teachings of the inventive concept.</p>
<p id="p-0024" num="0023">Spatially relative terms, such as &#x201c;beneath&#x201d;, &#x201c;below&#x201d;, &#x201c;lower&#x201d;, &#x201c;under&#x201d;, &#x201c;above&#x201d;, &#x201c;upper&#x201d; and the like, may be used herein for ease of description to describe one element or feature's relationship to another element(s) or feature(s) as illustrated in the figures. It will be understood that the spatially relative terms are intended to encompass different orientations of the device in use or operation in addition to the orientation depicted in the figures. For example, if the device in the figures is turned over, elements described as &#x201c;below&#x201d; or &#x201c;beneath&#x201d; or &#x201c;under&#x201d; other elements or features would then be oriented &#x201c;above&#x201d; the other elements or features. Thus, the exemplary terms &#x201c;below&#x201d; and &#x201c;under&#x201d; can encompass both an orientation of above and below. The device may be otherwise oriented (rotated 90 degrees or at other orientations) and the spatially relative descriptors used herein interpreted accordingly. In addition, it will also be understood that when a layer is referred to as being &#x201c;between&#x201d; two layers, it can be the only layer between the two layers, or one or more intervening layers may also be present.</p>
<p id="p-0025" num="0024">The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the inventive concept. As used herein, the singular forms &#x201c;a&#x201d;, &#x201c;an&#x201d; and &#x201c;the&#x201d; are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms &#x201c;comprises&#x201d; and/or &#x201c;comprising,&#x201d; when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and/or groups thereof. As used herein, the term &#x201c;and/or&#x201d; includes any and all combinations of one or more of the associated listed items.</p>
<p id="p-0026" num="0025">It will be understood that when an element or layer is referred to as being &#x201c;on&#x201d;, &#x201c;connected to&#x201d;, &#x201c;coupled to&#x201d;, or &#x201c;adjacent to&#x201d; another element or layer, it can be directly on, connected, coupled, or adjacent to the other element or layer, or intervening elements or layers may be present. In contrast, when an element is referred to as being &#x201c;directly on,&#x201d; &#x201c;directly connected to&#x201d;, &#x201c;directly coupled to&#x201d;, or &#x201c;immediately adjacent to&#x201d; another element or layer, there are no intervening elements or layers present.</p>
<p id="p-0027" num="0026">Unless otherwise defined, all terms (including technical and scientific terms) used herein have the same meaning as commonly understood by one of ordinary skill in the art to which this inventive concept belongs. It will be further understood that terms, such as those defined in commonly used dictionaries, should be interpreted as having a meaning that is consistent with their meaning in the context of the relevant art and/or the present specification and will not be interpreted in an idealized or overly formal sense unless expressly so defined herein.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram illustrating a memory link architecture according to an exemplary embodiment of the inventive concept, and <figref idref="DRAWINGS">FIG. 3</figref> is a diagram for describing an operation of a memory link architecture in <figref idref="DRAWINGS">FIG. 2</figref>. Referring to <figref idref="DRAWINGS">FIG. 2</figref>, a memory link architecture (MLA) <b>200</b> includes a multi-port memory <b>210</b>, a memory controller <b>220</b>, and a flash memory <b>230</b>. The MLA <b>200</b> is connected with a host <b>300</b> and stores data transferred from the host <b>300</b>. The MLA <b>200</b> is an embedded storage/memory device.</p>
<p id="p-0029" num="0028">The host <b>300</b> includes a CPU <b>310</b>. CPU <b>310</b> includes an application <b>311</b> and an MLA driver <b>312</b>. The host <b>300</b> may be a multimedia device such as a digital camera, a handheld phone, a PMP, or an MP3P.</p>
<p id="p-0030" num="0029">The multi-port memory device <b>210</b> includes a host CPU area <b>211</b>, a shared area <b>212</b>, and a memory controller area <b>213</b>. The multi-port memory device <b>210</b> may be a oneDRAM. The multi-port memory device <b>210</b> stores data transferred from the host <b>300</b> in the host CPU area <b>211</b>.</p>
<p id="p-0031" num="0030">If data (raw data) is stored in the host CPU area <b>211</b>, the host CPU <b>310</b> reads data via an access to the host CPU area <b>211</b> of the multi-port memory device <b>210</b>, processes the read data via execution of the application <b>311</b>, and stores the processed data in the host CPU area <b>211</b>, as shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0032" num="0031">If execution of the application <b>311</b> is completed, the MLA driver <b>312</b> in the CPU <b>310</b> of the host <b>300</b> transfers the processed data stored in the host CPU area <b>211</b> into the shared area <b>212</b>, as also shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0033" num="0032">If transferring of the processed data is completed, the controller <b>220</b> of the MLA <b>200</b> generates file data by executing a file system on the processed data stored in the shared area <b>212</b> according to a write command of the host CPU <b>310</b>, and stores the file data in the memory controller area <b>213</b> as the generated data as also shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0034" num="0033">That is, the file system <b>221</b> in the memory controller <b>220</b> reads the processed data stored in the shared area <b>212</b> according to a write command of the host CPU <b>310</b> and generates file data on the processed data. The controller <b>220</b> may be formed of an application specific IC (ASIC).</p>
<p id="p-0035" num="0034">The MLA driver <b>223</b> in the memory controller <b>220</b> also receives file data generated by the file system <b>221</b>, and stores it in the memory controller area <b>213</b> of the multi-port memory device <b>210</b>.</p>
<p id="p-0036" num="0035">If storing of the file data in the multi-port memory device <b>210</b> is ended, the controller <b>220</b> reads the stored file data, maps the read file data for storage in the flash memory <b>230</b> using a flash translation layer (FTL) <b>222</b>, and sends it to the flash memory <b>230</b>. That is, the file data may be stored in the flash memory <b>230</b>. The storing operation of the file data may be performed by the flash driver <b>224</b>.</p>
<p id="p-0037" num="0036">The flash memory <b>230</b> may be formed of a NAND flash memory.</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram illustrating another example of an MLA according to an exemplary embodiment of the inventive concept. In <figref idref="DRAWINGS">FIG. 4</figref>, there is exemplarily illustrated the case that the MLA <b>200</b> is connected with host <b>300</b>, which may be an image pick-up device (e.g., a digital camera), to compress images and store the compressed images.</p>
<p id="p-0039" num="0038">Referring to <figref idref="DRAWINGS">FIGS. 2 and 4</figref>, an image received via a lens <b>320</b>, which is an input device of host (image pick-up device) <b>300</b>, is converted into imaged data via a charge-coupled device (CCD) <b>330</b>.</p>
<p id="p-0040" num="0039">Host CPU <b>310</b> in the host <b>300</b> may be configured to include application <b>311</b> and MLA driver <b>312</b> as shown in <figref idref="DRAWINGS">FIG. 2</figref>. Host <b>310</b> sends the input image data to a host CPU area <b>211</b> of a multi-port memory device <b>210</b> in the MLA <b>200</b>. At this time, the image data is raw data which is not yet compressed.</p>
<p id="p-0041" num="0040">If the image data is stored in the host CPU area <b>211</b> of the multi-port memory device <b>210</b>, the host CPU <b>310</b> compresses data via execution of a compression application (or, driving of an application <b>311</b>) on the image data and stores the compressed image data in the host CPU area <b>211</b>.</p>
<p id="p-0042" num="0041">In the event that data compression of the host CPU <b>310</b> is ended, the MLA driver <b>312</b> of the host CPU <b>310</b> reads the compressed image data stored in the host CPU area <b>211</b> of the multi-port memory device <b>210</b> and transfers it to a shared area <b>212</b> of the multi-port memory device <b>210</b>.</p>
<p id="p-0043" num="0042">Once the compressed image data is sent to the shared area <b>212</b>, the memory controller <b>220</b> of the MLA <b>200</b> which may include file system <b>221</b>, FTL <b>222</b>, MLA driver <b>223</b> and flash driver <b>224</b> as shown in <figref idref="DRAWINGS">FIG. 2</figref>, reads the compressed image data stored in the shared area <b>212</b>, generates file data on the compressed image data via driving of a file system <b>221</b>, and stores the file data (image file) in a memory controller area <b>213</b> of the multi-port memory device <b>210</b> via the MLA driver <b>223</b> in the memory controller <b>220</b>.</p>
<p id="p-0044" num="0043">If the file data is generated, the memory controller <b>220</b> reads the file data stored in the memory controller area <b>213</b> of the multi-port memory device <b>210</b> and maps it using the flash translation layer <b>222</b> so as to be stored in the flash memory <b>230</b>.</p>
<p id="p-0045" num="0044">A flash memory driver <b>224</b> in the memory controller <b>220</b> transfers the file data mapped by the flash translation layer <b>222</b> to the flash memory <b>230</b>, so that the compressed image data is stored in the flash memory <b>230</b>.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart for describing a method of managing a memory area of a multi-port memory device in a memory link architecture according to an exemplary embodiment of the inventive concept. Referring to <figref idref="DRAWINGS">FIGS. 2 and 5</figref>, a memory area managing method <b>100</b> of a multi-port memory device <b>210</b> in a memory link architecture includes a data processing step S<b>110</b>, a file data generating step S<b>120</b>, and a file storing step S<b>130</b>.</p>
<p id="p-0047" num="0046">In the data processing step S<b>110</b>, data stored in a host CPU area <b>211</b> of a multi-port memory device <b>210</b> is processed by a host CPU <b>310</b> connected with the multi-port memory device <b>210</b>, and the processed data is stored in a shared area <b>212</b>.</p>
<p id="p-0048" num="0047">In particular, the data processing step S<b>110</b> includes storing data transferred from a host <b>300</b> in the host CPU area <b>211</b> of the multi-port memory device <b>210</b> (S<b>111</b>), processing data stored in the host CPU area <b>211</b> by executing an application (S<b>112</b>), and sending the processed data obtained from the data stored in the host CPU area <b>211</b> to a shared area <b>212</b> (S<b>113</b>). Herein, the processing and the sending may be made by the host CPU <b>310</b>.</p>
<p id="p-0049" num="0048">In the file data generating step S<b>120</b>, file data on the processed data stored in the shared area <b>212</b> of a multi-port memory device <b>210</b> is generated according to a write command of the host CPU <b>310</b>, and the file data is stored in a memory controller area <b>213</b> of the multi-port memory device <b>210</b>.</p>
<p id="p-0050" num="0049">In particular, the file data generating step S<b>120</b> includes generating file data by executing a file system on the processed data stored in the shared area <b>212</b> (S<b>121</b>) and sending the generated file data to the memory controller area <b>213</b> of the multi-port memory device <b>210</b> (S<b>122</b>).</p>
<p id="p-0051" num="0050">In the file data storing step S<b>130</b>, the file data stored in the memory controller area <b>213</b> of the multi-port memory device <b>210</b> is stored in a flash memory <b>230</b>.</p>
<p id="p-0052" num="0051">The file data storing step S<b>130</b> includes mapping the file data read from the memory controller area <b>213</b> of the multi-port memory device <b>210</b> using a flash translation layer (FTL) (S<b>131</b>) and sending the mapped file data to the flash memory <b>230</b> (S<b>132</b>). That is, the mapped file data is stored in the flash memory <b>230</b>.</p>
<p id="p-0053" num="0052">As described above, the host CPU <b>310</b> only drives an application for processing data stored in the multi-port memory device <b>210</b>, and the file system <b>221</b> for generating file data is driven within the MLA <b>200</b> connected with the host <b>300</b> to store the file data. Accordingly, it is possible to make better use of the host CPU <b>310</b> and to reduce power consumption.</p>
<p id="p-0054" num="0053">Further, it is possible to prevent a sudden power off recovery (SPOR) phenomenon by reducing an asynchronous characteristic between file data generated by the file system <b>221</b> and file data converted by the flash translation layer (FTL).</p>
<p id="p-0055" num="0054">The above-disclosed subject matter is to be considered illustrative, and not restrictive, and the appended claims are intended to cover all such modifications, enhancements, and other embodiments, which fall within the true spirit and scope. Thus, to the maximum extent allowed by law, the scope is to be determined by the broadest permissible interpretation of the following claims and their equivalents, and shall not be restricted or limited by the foregoing detailed description.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A memory area managing method of a multi-port memory device in a memory link architecture which includes a multi-port memory device, a memory controller, and a flash memory, the memory area managing method comprising:
<claim-text>performing a data processing step in which data stored in a host CPU area of the multi-port memory device is processed by a host CPU connected with the multi-port memory device, the processed data being stored in a shared area of the multi-port memory device;</claim-text>
<claim-text>performing a file data generating step in which file data is generated from the processed data stored in the shared area according to a write command of the host CPU, the file data being stored in a memory controller area of the multi-port memory device; and</claim-text>
<claim-text>performing a file data storing step in which the file data is read out from the memory controller area and the read file data is sent to the flash memory.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The memory area managing method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the data processing step comprises:
<claim-text>storing data transferred from the host CPU in the host CPU area of the multi-port memory device;</claim-text>
<claim-text>executing an application to process data stored in the host CPU area, the application being executed by the host CPU; and</claim-text>
<claim-text>sending the processed data stored in the host CPU area to the shared area under a control of the host CPU.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The memory area managing method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the file data generating step comprises:
<claim-text>generating file data by executing a file system on the processed data stored in the shared area; and</claim-text>
<claim-text>sending the generated file data to the memory controller area.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The memory area managing method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the file data storing step comprises:
<claim-text>reading file data stored in the memory controller area to map the read file data using a flash translation layer; and</claim-text>
<claim-text>sending the file data mapped by the flash translation layer to the flash memory.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The memory area managing method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the processed data comprises compressed image data.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A device for managing a memory area of a multi-port memory device in a memory link architecture, the device comprising:
<claim-text>a flash memory;</claim-text>
<claim-text>a multi-port memory device including a plurality of memory areas configured to store data transferred from a host, data processed by a host CPU, and file data; and</claim-text>
<claim-text>a memory controller configured to generate file data from processed data stored in the multi-port memory device according to a write command of the host CPU, and to store the file data into the flash memory.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The device of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the plurality of memory areas comprises:
<claim-text>a host CPU area configured to store data transferred from the host and data processed by the host CPU;</claim-text>
<claim-text>a shared area configured to store the processed data, the processed data in the shared area being read by the memory controller; and</claim-text>
<claim-text>a memory controller area configured to store file data of the processed data, the file data being generated by the memory controller.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The device of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the memory controller comprises:
<claim-text>a file system configured to generate file data from the processed data;</claim-text>
<claim-text>a memory link architecture driver configured to transfer the processed data to the file system or to transfer the file data generated by the file system to a memory controller area of the multi-port memory device;</claim-text>
<claim-text>a flash translation layer configured to map the file data for storage in the flash memory; and</claim-text>
<claim-text>a flash driver configured to send the mapped file data to the flash memory.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The device of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the processed data comprises compressed image data.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The device of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the memory controller is an application specific integrated circuit.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The device of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the memory link architecture is an embedded storage/memory device.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A device for managing a memory area of a multi-port memory device in a memory link architecture, the device comprising:
<claim-text>a flash memory;</claim-text>
<claim-text>a multi-port memory device including a plurality of memory areas; and</claim-text>
<claim-text>a memory controller configured to generate file data from data stored in the multi-port memory device responsive to a write command from a host and to store the file data in the flash memory,</claim-text>
<claim-text>wherein the plurality of memory areas include a host area configured to store raw image data transferred by the host and compressed image data processed by the host, a shared area configured to store the compressed image data under control of the memory controller, and a memory controller area configured to store the file data generated by the memory controller, and</claim-text>
<claim-text>wherein the memory controller generates the file data from the compressed image data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The device of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the memory controller comprises:
<claim-text>a file system configured to generate file data from the compressed image data;</claim-text>
<claim-text>a memory link architecture driver configured to transfer the compressed image data to the file system or to transfer the file data generated by the file system to the memory controller area of the multi-port memory device;</claim-text>
<claim-text>a flash translation layer configured to map the file data for storage in the flash memory; and</claim-text>
<claim-text>a flash driver configured to send the mapped file data to the flash memory. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
