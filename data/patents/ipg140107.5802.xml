<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626909-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626909</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13477779</doc-number>
<date>20120522</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>45</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>173</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>709224</main-classification>
<further-classification>382219</further-classification>
<further-classification>370252</further-classification>
<further-classification>714 471</further-classification>
</classification-national>
<invention-title id="d2e53">Page phase time</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>7213059</doc-number>
<kind>B2</kind>
<name>Bhogal et</name>
<date>20070500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7634562</doc-number>
<kind>B2</kind>
<name>Litofsky et al.</name>
<date>20091200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7765295</doc-number>
<kind>B2</kind>
<name>Anastas et al.</name>
<date>20100700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2004/0221034</doc-number>
<kind>A1</kind>
<name>Kausik et al.</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709224</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2009/0172703</doc-number>
<kind>A1</kind>
<name>Nakano et al.</name>
<date>20090700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>719318</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2010/0325615</doc-number>
<kind>A1</kind>
<name>Ramot</name>
<date>20101200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2012/0317271</doc-number>
<kind>A1</kind>
<name>Funk et al.</name>
<date>20121200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709224</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2013/0121599</doc-number>
<kind>A1</kind>
<name>Shmouely et al.</name>
<date>20130500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382219</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00009">
<othercit>Rajamony, R. and Elnozahy, M., &#x201c;Measuring Client-Perceived Response Times on the WWW&#x201d;, (2001), USENIX Symposium on Internet Technologies and Systems, pp. 4-5.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>Meenan, P., &#x201c;How Fast is Your Website?&#x201d;, (Apr. 2013), Communications of the ACM, vol. 56, No. 4., pp. 49-55.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00011">
<othercit>Brutlag, J., Abrams, Z., and Meenan, P., &#x201c;Above the Fold Time: Measuring Web Page Performance Visually&#x201d;, (2011), http://cdn.oreillystatic.com/en/assets/1/event/62/Above%20the%20Fold%20Time<sub>&#x2014;</sub>%20Measuring%20Web%20Page%20Performance%20Visually%20Presentation.pdf.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00012">
<othercit>Li, Zhichun et al., &#x201c;WebProphet: Automating Performance Prediction for Web Services,&#x201d; Proceedings of the 7th USENIX Conference on Networked Systems Design and Implementation, pp. 1-16 (Apr. 28, 2010) &#x3c;http://research.microsoft.com/en-us/people/mzh/webprophet.pdf&#x3e;.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00013">
<othercit>&#x201c;How Does Real User Monitoring Work?&#x201d; New Relic, Inc., pp. 5 (Retrieved Date: Apr. 2, 2012) &#x3c;http://newrelic.com/docs/features/how-does-real-user-monitoring-work&#x3e;.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00014">
<othercit>Souders, Steve, &#x201c;Episodes: a Framework for Measuring Web Page Load Times,&#x201d; pp. 1-10 (Jul. 2008) &#x3c;http://stevesouders.com/episodes/paper.php&#x3e;.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00015">
<othercit>&#x201c;Measuring Load time for a Web Page,&#x201d; pp. 1, (Published Date: Jan. 11, 2010) &#x3c;http://technet.microsoft.com/en-us/library/cc778898%WS.10%29.aspx&#x3e;.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>11</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>382219</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382221</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>6</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20130318227</doc-number>
<kind>A1</kind>
<date>20131128</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Feng</last-name>
<first-name>Chao</first-name>
<address>
<city>Issaquah</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Chai</last-name>
<first-name>Yi</first-name>
<address>
<city>Bellevue</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Feng</last-name>
<first-name>Chao</first-name>
<address>
<city>Issaquah</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Chai</last-name>
<first-name>Yi</first-name>
<address>
<city>Bellevue</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Microsoft Corporation</orgname>
<role>02</role>
<address>
<city>Redmond</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Pham</last-name>
<first-name>Luu</first-name>
<department>2437</department>
</primary-examiner>
<assistant-examiner>
<last-name>Elmore</last-name>
<first-name>Gregory M</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method of measuring load time for a web page includes video recording a duration of the web page load including capturing N frames in a series of frames 1 through N of the web page. The method includes comparing each frame from frame 1 through frame N&#x2212;1 with a next frame from frame 2 through frame N in the series of frames to determine a pixel change amount between the compared frames. The method includes defining a series of page phases for the duration of the web page load, each page phase defined by a start time and an end time with each phase start time determined based on estimating user perceptible pixel change amount levels.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="218.95mm" wi="106.68mm" file="US08626909-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="217.17mm" wi="144.95mm" orientation="landscape" file="US08626909-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="231.99mm" wi="163.07mm" orientation="landscape" file="US08626909-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="255.35mm" wi="120.90mm" orientation="landscape" file="US08626909-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="236.56mm" wi="114.98mm" file="US08626909-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="247.14mm" wi="116.33mm" file="US08626909-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="185.84mm" wi="124.54mm" file="US08626909-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">In today's web performance industry, one example measurement standard for page load time (PLT) is based on determining a start rendering time and finish rendering time. Start rendering time in this PLT measurement standard is defined as the time when a web page starts rendering something on the computer screen. Finish rendering time in this PLT measurement standard is defined as the time when a web page finishes rendering all the content of the given web page on the computer screen. Finish rendering time is also referred to as above folder time (AFT). Another example PLT measurement standard is referred to as time to last byte (TTLB).</p>
<p id="p-0003" num="0002">These above example PLT measurement standards can be employed with many static web pages which do not have significant rich content and/or content changing dynamically after the content gets downloaded. Web sites, however, are increasingly getting fancier with more rich content and more dynamic content (e.g., dynamic images, videos, Adobe Flash content, etc.). The above example PLT measurement standards are not easily employed with rich content and/or dynamic content web pages and the measurement results can be ambiguous.</p>
<heading id="h-0002" level="1">SUMMARY</heading>
<p id="p-0004" num="0003">This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.</p>
<p id="p-0005" num="0004">The disclosure is directed to a page phase time (PPT) method of measuring load time for a web page including video recording a duration of the web page load including capturing N frames in a series of frames 1 through N of the web page. The PPT method includes comparing each frame from frame 1 through frame N&#x2212;1 with a next frame from frame 2 through frame N in the series of frames to determine a pixel change amount between the compared frames. The PPT method includes defining a series of page phases for the duration of the web page load. Each page phase defined by a start time and an end time with each phase start time determined based on estimating user perceptible pixel change amount levels.</p>
<p id="p-0006" num="0005">One embodiment of the PPT method reports corresponding different information defining corresponding different selected page phases in the series of page phases to corresponding different teams.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0007" num="0006">The accompanying drawings are included to provide a further understanding of embodiments and are incorporated in and constitute a part of this specification. The drawings illustrate embodiments and together with the description serve to explain principles of embodiments. Other embodiments and many of the intended advantages of embodiments will be readily appreciated, as they become better understood by reference to the following detailed description. The elements of the drawings are not necessarily to scale relative to each other. Like reference numerals and other indicators (collectively alpha-numerics in this disclosure) designate corresponding similar features.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram illustrating an example computing device that can implement page phase time (PPT) methods.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram of one embodiment of a networked Internet environment including a client computer and a server computer.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram illustrating an example web page load scenario having a chain of video captured screenshots for an example automobile Brand Z web page.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 4</figref> is a flow diagram illustrating a PPT method that measures load time for a web page that includes defining a series of page phases for the duration of the web page load.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 5</figref> is a flow diagram illustrating a PPT method that measures load time for a web page that includes defining a series of page phases for the duration of the web page load.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 6</figref> is a flow diagram illustrating a PPT method that minimizes at least one selected page phase in a series of page phases.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0014" num="0013">In the following Detailed Description, reference is made to the accompanying drawings, which form a part hereof, and in which is shown by way of illustration specific embodiments in which the invention may be practiced. It is to be understood that other embodiments may be utilized and structural or logical changes may be made without departing from the scope of the present invention. The following detailed description, therefore, is not to be taken in a limiting sense, and the scope of the present invention is defined by the appended claims. It is also to be understood that features of the various exemplary embodiments described herein may be combined with each other, unless specifically noted otherwise.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an exemplary computer system that can be employed as an operating environment includes a computing device, such as computing device <b>100</b>. In a basic configuration, computing device <b>100</b> typically includes a processor architecture having at least two processing units, i.e., processors <b>102</b>, and memory <b>104</b>. Depending on the exact configuration and type of computing device, memory <b>104</b> may be volatile (such as random access memory (RAM)), non-volatile (such as read only memory (ROM), flash memory, etc.), or some combination of the two. Each of the processing units include a cache <b>105</b> interposed between the processor <b>102</b> and the memory <b>104</b>. This basic configuration is illustrated in <figref idref="DRAWINGS">FIG. 1</figref> by line <b>106</b>. The computing device can take one or more of several forms. Such forms include a personal computer, a server, a handheld device, a consumer electronic device (such as a video game console), or other.</p>
<p id="p-0016" num="0015">Computing device <b>100</b> can also have additional features/functionality. For example, computing device <b>100</b> may also include additional storage (removable and/or non-removable) including, but not limited to, magnetic or optical disks or solid state memory, or flash storage devices such as removable storage <b>108</b> and non-removable storage <b>110</b>. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any suitable method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Memory <b>104</b>, removable storage <b>108</b> and non-removable storage <b>110</b> are all examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile discs (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, universal serial bus (USB) flash drive, flash memory card, or other flash storage devices, or any other storage medium that can be used to store the desired information and that can be accessed by computing device <b>100</b>. Any such computer storage media may be part of computing device <b>100</b>.</p>
<p id="p-0017" num="0016">Computing device <b>100</b> includes one or more communication connections <b>114</b> that allow computing device <b>100</b> to communicate with other computers/applications <b>115</b>. Computing device <b>100</b> may also include input device(s) <b>112</b>, such as keyboard, pointing device (e.g., mouse), pen, voice input device, touch input device, etc. Computing device <b>100</b> may also include output device(s) <b>111</b>, such as a display, speakers, printer, etc.</p>
<p id="p-0018" num="0017">The computing device <b>100</b> can be configured to run an operating system software program and one or more software applications, which make up a system platform. In one example, the computing device <b>100</b> includes a software component referred to as a managed environment. The managed environment can be included as part of the operating system or can be included later as a software download. The managed environment typically includes pre-coded solutions to common programming problems to aid software developers to create software programs such as applications to run in the managed environment, and it also typically includes a virtual machine that allows the software applications to run in the managed environment so that the programmers need not consider the capabilities of the specific processors <b>102</b>. A managed environment can include cache coherency protocols and cache management algorithms.</p>
<p id="p-0019" num="0018">The computing device <b>100</b> can be coupled to a computer network, which can be classified according to a wide variety of characteristics such as topology, connection method, and scale. A network is a collection of computing devices and possibly other devices interconnected by communications channels that facilitate communications and allows sharing of resources and information among interconnected devices. Examples of computer networks include a local area network, a wide area network, the Internet, or other network.</p>
<p id="p-0020" num="0019">One embodiment of a networked Internet environment <b>220</b> is illustrated in block diagram form in <figref idref="DRAWINGS">FIG. 2</figref>. Networked Internet environment <b>220</b> includes a client computer <b>222</b> and a server computer <b>224</b>. Client computer <b>222</b> is coupled to server computer <b>224</b> via the Internet indicated at <b>226</b>. Client computer <b>222</b> is coupled to Internet <b>226</b> via bi-directional communication paths <b>228</b>. Server computer <b>224</b> is coupled to Internet <b>226</b> via bi-directional communication paths <b>230</b>.</p>
<p id="p-0021" num="0020">The embodiments described herein can be implemented in any corresponding suitable client computer environment or corresponding suitable server computer environment. Client computer <b>222</b> or server computer <b>224</b> can each be implemented with a suitable computing device, such as computing device <b>100</b>. In one embodiment, however, server computer <b>224</b> includes a larger hard drive and more memory capacity (e.g., more random access memory (RAM)) compared to client computer <b>222</b>.</p>
<p id="p-0022" num="0021">Client computer <b>222</b> includes memory <b>232</b> which stores application programs <b>234</b> which are locally executed on client computer <b>222</b>. Application programs <b>234</b> include a web browser <b>236</b>. Client computer <b>222</b> includes a cache <b>238</b> for storing recently requested web pages and web data.</p>
<p id="p-0023" num="0022">Server computer <b>224</b> includes memory <b>242</b> which stores application programs <b>244</b> which are locally executed on server computer <b>224</b>. Application programs <b>244</b> include a web server <b>246</b>. Server computer <b>224</b> includes a cache <b>248</b> for storing recently accessed or pre-fetched web pages and/or data.</p>
<p id="p-0024" num="0023">A database <b>250</b> stores web pages and other web data in database files. Database <b>250</b> bi-directionally communicates with web server <b>246</b> via communication paths <b>252</b>. In one embodiment, database <b>250</b> is implemented in a remote computer or other remote device. In one embodiment, database <b>250</b> is implemented in server computer <b>224</b>. In either embodiment, web server <b>246</b> can access data stored in cache <b>248</b> faster that it can access data stored in database <b>250</b>.</p>
<p id="p-0025" num="0024">Generally, web browser <b>236</b> makes user requests and/or provides user input as indicated at <b>254</b> via Internet <b>226</b> to web server <b>246</b>. Web server <b>246</b> receives the user request/input indicated at <b>254</b> and fetches the requested web page/data from database <b>250</b> via communication path <b>252</b> if the requested web page/data is not already stored in cache <b>248</b>. Web server <b>246</b> stores the fetched data from database <b>250</b> in cache <b>248</b> and returns the fetched web page/data as indicated at <b>256</b> to web browser <b>236</b> via Internet <b>226</b>.</p>
<p id="p-0026" num="0025">In one embodiment, once a network connection is established between client computer <b>222</b> and server computer <b>224</b>, a user of client computer <b>222</b> can access a desired web page by supplying web browser <b>236</b> with a corresponding web address (e.g., a uniform resource locator (URL)) for that web page. A web page, in this context, refers to content accessed via a URL, including text, graphics and other such information. The URL address can be supplied through any of various techniques, such as for example direct keyboard entry by a user, selection among a stored list of addresses (i.e., bookmarks), or clicking on a user interactable component (e.g., link) via a pointing device, such as a mouse, for that URL address, then appearing on a browser control bar or a home page or other web page currently being displayed by web browser <b>236</b>.</p>
<p id="p-0027" num="0026">Once a user has supplied input to web browser <b>236</b>, the browser sends appropriate user requests/input as indicated at <b>254</b> to web server <b>246</b>. This user request/input can be the URL address for a web page itself or a request to retrieve a stored file for a web page for which the user has then supplied an address. Upon receipt of the web pages/data file from web server <b>246</b>, web browser <b>236</b> processes the web pages/data file and assembles and renders a web page represented by the file or updates the already rendered web page with new data from the file. The rendered web page is typically displayed on a local display of client computer <b>222</b> from which the user can examine the rendered web page. Once the displayed web page is fully rendered or fully updated or the user has instructed web browser <b>36</b> to stop rendering the web page via an explicit stop command or via a click on a link already rendered, the user can then enter a new web address via a link or update data in the rendered web page via a click of another link. For example, in one embodiment by simple successive pointing and clicking of the user pointing device on appropriate links corresponding to desired web pages or updates to web pages, a user can easily retrieve desired web pages or update data in web pages in succession from one or more corresponding web sites during a typical web session.</p>
<p id="p-0028" num="0027">There is, however, a desire to provide a faster experience to users of a given web site for updating web pages and data in a rendered web page. Furthermore, web pages increasingly have much more rich content. Web pages often render in several phases with different types of static and dynamic content in the phases. The traditional web performance industry page load time (PLT) measurement standards, such as the discussed in the Background Section (e.g., start render time/finish render time and time to last byte (TTLB)) just provide one general PLT number indicating a speed a whole page renders, which cannot reflect the real user experience on rich and/or dynamic content web page. Accordingly, it is difficult for the web performance industry to provide real business, engineering, or marketing data for PLT reporting that properly correlates with real user experience on rich and/or dynamic content web sites.</p>
<p id="p-0029" num="0028">One embodiment of web server <b>246</b>, web browser <b>236</b>, or some web performance software that runs on a suitable computing device, such as computing device <b>100</b>, performs a page phase time (PPT) method of measuring load time for a web page that includes defining a series of page phases for the duration of the web page load. Each page phase is defined by a start time and end time with each phase start time determined based on estimating user perceptible pixel change amount levels.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an example web page load scenario having a chain of video captured screenshots for an example automobile Brand Z web page with X (e.g., 10) frames captured per second. At <b>302</b> (video capture time 0.0 seconds), a client computer's web browser (e.g., web browser <b>236</b> of client computer <b>222</b>) sends a request to the example automobile Brand Z web page. At <b>304</b> (video capture time 1.3 seconds), the example automobile Brand Z web page starts rendering something by painting the background color.</p>
<p id="p-0031" num="0030">At <b>306</b> (video capture time 1.9 seconds), the example automobile Brand Z web page paints some meaningful text (e.g., a label in white background). At <b>308</b> (video capture time 2.1 seconds to 3.2 seconds), the example automobile Brand Z web page renders a Brand Z car Adobe Flash image. At <b>310</b> (video capture time 3.3 seconds), the Brand Z car Adobe Flash image disappears and the example automobile Brand Z web page displays the Brand Z portal page with a selected city view image as the background.</p>
<p id="p-0032" num="0031">At <b>312</b> (video capture time 3.7 seconds), the example automobile Brand Z web page starts to render a video player. At <b>314</b> (video capture time 4.0 seconds), the rendered video player in the example automobile Brand Z web page starts playing a video. At <b>316</b> (video capture time 10.8 seconds), the video player finishes playing the video in the example automobile Brand Z web page.</p>
<p id="p-0033" num="0032">The below Table I includes a series of defined page phases for the example automobile Brand Z web page that are easy for a user to visually distinguish between the different page phases during a web page load.</p>
<p id="p-0034" num="0033">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="1" colwidth="49pt" align="center"/>
<colspec colname="2" colwidth="42pt" align="center"/>
<colspec colname="3" colwidth="49pt" align="center"/>
<colspec colname="4" colwidth="77pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="4" rowsep="1">TABLE I</entry>
</row>
<row>
<entry namest="1" nameend="4" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Phase Start </entry>
<entry>Phase End </entry>
<entry/>
</row>
<row>
<entry>Phases</entry>
<entry>Time</entry>
<entry>Time</entry>
<entry>Description</entry>
</row>
<row>
<entry namest="1" nameend="4" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="1" colwidth="49pt" align="char" char="."/>
<colspec colname="2" colwidth="42pt" align="char" char="."/>
<colspec colname="3" colwidth="49pt" align="char" char="."/>
<colspec colname="4" colwidth="77pt" align="left"/>
<tbody valign="top">
<row>
<entry>1</entry>
<entry>1.3</entry>
<entry>1.8</entry>
<entry>Renders background </entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>color</entry>
</row>
<row>
<entry>2</entry>
<entry>1.9</entry>
<entry>2.0</entry>
<entry>Paints white label</entry>
</row>
<row>
<entry>3</entry>
<entry>2.1</entry>
<entry>3.2</entry>
<entry>Renders Brand Z Adobe</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>Flash car image</entry>
</row>
<row>
<entry>4</entry>
<entry>3.3</entry>
<entry>3.6</entry>
<entry>Displays Brand Z portal</entry>
</row>
<row>
<entry>5</entry>
<entry>3.7</entry>
<entry>3.9</entry>
<entry>Renders video player</entry>
</row>
<row>
<entry>6</entry>
<entry>4.0</entry>
<entry>10.8</entry>
<entry>Plays video</entry>
</row>
<row>
<entry namest="1" nameend="4" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a PPT method <b>400</b> performed by a web server (e.g., web server <b>246</b>), a web browser (e.g., web browser <b>236</b>), or some web performance software that runs on a suitable computing device, such as computing device <b>100</b>. PPT method <b>400</b> measures load time for a web page that includes defining a series of page phases for the duration of the web page load.</p>
<p id="p-0036" num="0035">At <b>402</b>, a duration of the web page load is video recorded with X frames captured per second (e.g., 10 frames/second). The video recording includes capturing N frames in a series of frames 1 through N of the web page. In one embodiment, the video recording at <b>402</b> is for a whole duration of a web page load. In one embodiment, the video recording at <b>402</b> is for only a portion of a whole duration of a web page load. At <b>404</b>, each frame from frame 1 through frame N&#x2212;1 is compared with a next frame from frame 2 through frame N in the series of frames to determine a pixel change amount between the compared frames. At <b>406</b>, a series of page phases are defined for the duration of the web page load. Each page phase is defined by a start time and an end time with each phase start time determined based on estimating user perceptible pixel change amount levels (i.e., easy for a user to visually distinguish between the different page phases). In one embodiment, the pixel change amount is a pixel change ratio (e.g., 30%).</p>
<p id="p-0037" num="0036">In one embodiment, PPT method <b>400</b>, during a video playing on the web page, at <b>408</b>, detects the video playing and determines a start video time and an end video time of the video playing that defines one page phase.</p>
<p id="p-0038" num="0037">One embodiment of PPT method <b>400</b> defines each frame to have a frame capture time. In this embodiment, the defining at <b>406</b>, for each comparing, if the pixel change amount is greater than a phase threshold, a first of the compared frames' capture time is set as an end time of a previous phase and a second of the compared frames' capture time is set as a start time of a next phase.</p>
<p id="p-0039" num="0038">One embodiment of PPT method <b>400</b> reports PPT information defining the page phases in the series of page phases. In one example of this embodiment, PPT method <b>400</b> reports corresponding different PPT information defining corresponding different selected page phases in the series of page phases to corresponding different teams (e.g., different engineering teams, different business teams, and/or different marketing teams).</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 5</figref> illustrates a PPT method <b>500</b> performed by a web server (e.g., web server <b>246</b>), a web browser (e.g., web browser <b>236</b>), or some web performance software that runs on a suitable computing device, such as computing device <b>100</b>. PPT method <b>500</b> measures load time for a web page that includes defining a series of page phases for the duration of the web page load.</p>
<p id="p-0041" num="0040">At <b>502</b>, a duration of the web page load is video recorded with X frames captured per second (e.g., 10 frames/second). The video recording includes capturing N frames in a series of frames 1 through N of the web page. Each frame has a corresponding frame capture time. In one embodiment, the video recording at <b>502</b> is for a whole duration of a web page load. In one embodiment, the video recording at <b>502</b> is for only a portion of a whole duration of a web page load. At <b>504</b>, a series of multiple page phases are defined for the duration of the web page load. At <b>506</b>, a number of pixels are compared in each frame from frame 1 through frame N&#x2212;1 with a next frame from frame 2 through frame N in the series of frames to determine a pixel change amount between the compared frames. At <b>508</b>, for each comparing, if the pixel change amount is greater than a phase threshold, a first of the compared frames' capture time is set as an end time of a previous phase and a second of the compared frames' capture time is set as a start time of a next phase. In one embodiment, the pixel change amount is a pixel change ratio (e.g., 30%).</p>
<p id="p-0042" num="0041">In one embodiment, PPT method <b>500</b>, during a video playing on the web page, at <b>510</b>, detects the video playing and determines a start video time and an end video time of the video playing that defines one page phase.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 6</figref> illustrates a PPT method <b>600</b> performed by software that runs on a suitable computing device, such as computing device <b>100</b>. At <b>602</b>, PPT information is received. The PPT information defines a series of page phases of a duration of a web page load. In one embodiment, the duration of the web page load is for a whole duration of a web page load. In one embodiment, the duration of the web page load is for only a portion of a whole duration of a web page load. At <b>604</b>, web server resources and/or parameters are adjusted in response to the PPT information to minimize at least one selected page phase in the series of page phases.</p>
<p id="p-0044" num="0043">In one embodiment, the adjusting at <b>604</b> includes adjusting web server resources and/or parameters to meet business goals. In one embodiment, the adjusting at <b>604</b> includes adjusting web server resources and/or parameters to meet engineering goals. In one embodiment, the adjusting at <b>604</b> includes adjusting web server resources and/or parameters to meet marketing goals.</p>
<p id="p-0045" num="0044">In one embodiment of PPT method <b>600</b>, selected key business content is loaded during the minimized at least one selected page phase in the series of page phases.</p>
<p id="p-0046" num="0045">One embodiment of PPT method <b>600</b> reports corresponding different PPT information defining corresponding different selected page phases in the series of page phases to corresponding different engineering teams, corresponding different business teams, and/or corresponding different marketing teams.</p>
<p id="p-0047" num="0046">One embodiment of PPT method <b>600</b> markets at least one page phase time of the minimized at least one selected page phase in the series of page phases.</p>
<p id="p-0048" num="0047">The computer implemented PPT method <b>400</b> or PPT method <b>500</b> can be employed to obtain the defined page phases 1-6 of the above Table I for the example automobile Brand Z web page scenario illustrated in <figref idref="DRAWINGS">FIG. 3</figref>. These defined page phases 1-6 obtained for the example scenario are easy for a user to visually distinguish between the different page phases during a web page load and provide valuable PPT information that defines the page phases in the series of page phases. The PPT information can be reported in a way where corresponding different PPT information defining corresponding different selected page phases in the series of page phases to corresponding different teams (e.g., different engineering teams, different business teams, and/or different marketing teams). The corresponding teams can than properly and precisely adjust web server resources and/or parameters according with PPT method <b>600</b> to obtain optimized web page load performance by adjusting minimizing selected page phases in the series of page phases.</p>
<p id="p-0049" num="0048">Although specific embodiments have been illustrated and described herein, it will be appreciated by those of ordinary skill in the art that a variety of alternate and/or equivalent implementations may be substituted for the specific embodiments shown and described without departing from the scope of the present invention. This application is intended to cover any adaptations or variations of the specific embodiments discussed herein. Therefore, it is intended that this invention be limited only by the claims and the equivalents thereof.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer readable storage device storing computer-executable instructions for controlling a computing device to perform a method of measuring load time for a web page, the method comprising:
<claim-text>video recording a duration of the web page load including capturing N frames in a series of frames 1 through N of the web page, wherein N is an integer greater than 1;</claim-text>
<claim-text>comparing each frame from frame 1 through frame N&#x2212;1 with a next frame from frame 2 through frame N in the series of frames to determine a pixel change amount between the compared frames, wherein the pixel change amount is a pixel change ratio; and</claim-text>
<claim-text>defining a series of page phases for the duration of the webpage load, each page phase defined by a start time and an end time with each phase start time determined based on estimating user perceptible pixel change amount levels.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The computer readable storage medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the video recording comprises:
<claim-text>video recording a whole duration of a web page load.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The computer readable storage medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the video recording comprises:
<claim-text>video recording only a portion of a whole duration of a web page load.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The computer readable storage medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the method comprising:
<claim-text>detecting a video playing on the web page and determining a start video time and an end video time of the video playing that defines one page phase.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The computer readable storage medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein each frame has a frame capture time and the defining comprises:
<claim-text>for each comparing, if the pixel change amount is greater than a phase threshold, setting a first of the compared frames' capture time as an end time of a previous phase and setting a second of the compared frames' capture time as a start time of a next phase.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The computer readable storage medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the method comprising:
<claim-text>reporting page phase time (PPT) information defining the page phases in the series of page phases.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The computer readable storage medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the method comprising:
<claim-text>reporting corresponding different page phase time (PPT) information defining corresponding different selected page phases in the series of page phases to corresponding different teams.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A computing device implemented method of measuring load time for a web page, the method comprising:
<claim-text>video recording a duration of the web page load including capturing N frames in a series of frames 1 through N of the web page, wherein N is an integer greater than 1, each frame having a frame capture time; and</claim-text>
<claim-text>defining multiple page phases for the duration of the web page load by:</claim-text>
<claim-text>comparing a number of pixels in each frame from frame 1 through frame N&#x2212;1 with a next frame from frame 2 through frame N in the series of frames to determine a pixel change amount between the compared frames, wherein the pixel change amount is a pixel change ratio; and</claim-text>
<claim-text>for each comparing, if the pixel change amount is greater than a phase threshold, setting a first of the compared frames' capture time as an end time of a previous phase and setting a second of the compared frames' capture time as start time of a next phase.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref> wherein the video recording comprises:
<claim-text>video recording a whole duration of a web page load.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref> wherein the video recording comprises:
<claim-text>video recording only a portion of a whole duration of a web page load.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref> comprising:
<claim-text>detecting a video playing on the web page and determining a start video time and an end video time of the video playing that defines one page phase. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
