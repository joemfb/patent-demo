<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08624712-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08624712</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12954346</doc-number>
<date>20101124</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>402</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>Q</subclass>
<main-group>5</main-group>
<subgroup>22</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>01</class>
<subclass>R</subclass>
<main-group>31</main-group>
<subgroup>08</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>B</subclass>
<main-group>17</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>340 1051</main-classification>
<further-classification>340 101</further-classification>
<further-classification>340 102</further-classification>
<further-classification>340 103</further-classification>
<further-classification>340 104</further-classification>
<further-classification>370241</further-classification>
<further-classification>370252</further-classification>
</classification-national>
<invention-title id="d2e53">Reader control system</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4730307</doc-number>
<kind>A</kind>
<name>Hughes et al.</name>
<date>19880300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5375252</doc-number>
<kind>A</kind>
<name>Hashimoto</name>
<date>19941200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5610595</doc-number>
<kind>A</kind>
<name>Garrabrant et al.</name>
<date>19970300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5619444</doc-number>
<kind>A</kind>
<name>Agranat et al.</name>
<date>19970400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>5640002</doc-number>
<kind>A</kind>
<name>Ruppert et al.</name>
<date>19970600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>5668803</doc-number>
<kind>A</kind>
<name>Tymes et al.</name>
<date>19970900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>5671020</doc-number>
<kind>A</kind>
<name>Law</name>
<date>19970900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>5686902</doc-number>
<kind>A</kind>
<name>Reis et al.</name>
<date>19971100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>5793661</doc-number>
<kind>A</kind>
<name>Dulong et al.</name>
<date>19980800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>5895375</doc-number>
<kind>A</kind>
<name>Wilcox et al.</name>
<date>19990400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>5896375</doc-number>
<kind>A</kind>
<name>Dent et al.</name>
<date>19990400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>5917840</doc-number>
<kind>A</kind>
<name>Cheney et al.</name>
<date>19990600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>5952922</doc-number>
<kind>A</kind>
<name>Shober</name>
<date>19990900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>5973613</doc-number>
<kind>A</kind>
<name>Reis et al.</name>
<date>19991000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>6122505</doc-number>
<kind>A</kind>
<name>Genell et al.</name>
<date>20000900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>6138228</doc-number>
<kind>A</kind>
<name>Douady</name>
<date>20001000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>6154486</doc-number>
<kind>A</kind>
<name>Scott et al.</name>
<date>20001100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>6172596</doc-number>
<kind>B1</kind>
<name>Cesar et al.</name>
<date>20010100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>6209112</doc-number>
<kind>B1</kind>
<name>Stevenson</name>
<date>20010300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>6330971</doc-number>
<kind>B1</kind>
<name>Mabry et al.</name>
<date>20011200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>6336142</doc-number>
<kind>B1</kind>
<name>Kato et al.</name>
<date>20020100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>6343292</doc-number>
<kind>B1</kind>
<name>Roach et al.</name>
<date>20020100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>6379058</doc-number>
<kind>B1</kind>
<name>Petteruti et al.</name>
<date>20020400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>6430677</doc-number>
<kind>B2</kind>
<name>Pechanek et al.</name>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>6590962</doc-number>
<kind>B1</kind>
<name>Groessl et al.</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>6680979</doc-number>
<kind>B2</kind>
<name>Kato et al.</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00027">
<document-id>
<country>US</country>
<doc-number>6690979</doc-number>
<kind>B1</kind>
<name>Smith</name>
<date>20040200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00028">
<document-id>
<country>US</country>
<doc-number>6782044</doc-number>
<kind>B1</kind>
<name>Wright et al.</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00029">
<document-id>
<country>US</country>
<doc-number>6804578</doc-number>
<kind>B1</kind>
<name>Ghaffari</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00030">
<document-id>
<country>US</country>
<doc-number>6812824</doc-number>
<kind>B1</kind>
<name>Goldinger et al.</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00031">
<document-id>
<country>US</country>
<doc-number>6892052</doc-number>
<kind>B2</kind>
<name>Kotola et al.</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>455 412</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00032">
<document-id>
<country>US</country>
<doc-number>6912211</doc-number>
<kind>B2</kind>
<name>Gerakoulis</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00033">
<document-id>
<country>US</country>
<doc-number>6940392</doc-number>
<kind>B2</kind>
<name>Chan et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00034">
<document-id>
<country>US</country>
<doc-number>6946950</doc-number>
<kind>B1</kind>
<name>Ueno et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00035">
<document-id>
<country>US</country>
<doc-number>6957219</doc-number>
<kind>B1</kind>
<name>Lin et al.</name>
<date>20051000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00036">
<document-id>
<country>US</country>
<doc-number>6960999</doc-number>
<kind>B2</kind>
<name>Haimovitch et al.</name>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00037">
<document-id>
<country>US</country>
<doc-number>6970066</doc-number>
<kind>B2</kind>
<name>Sakamoto et al.</name>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00038">
<document-id>
<country>US</country>
<doc-number>6985757</doc-number>
<kind>B2</kind>
<name>Liu et al.</name>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00039">
<document-id>
<country>US</country>
<doc-number>7032080</doc-number>
<kind>B2</kind>
<name>Mugitani et al.</name>
<date>20060400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00040">
<document-id>
<country>US</country>
<doc-number>7054298</doc-number>
<kind>B1</kind>
<name>Kim et al.</name>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00041">
<document-id>
<country>US</country>
<doc-number>7088246</doc-number>
<kind>B2</kind>
<name>Fukuoka</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00042">
<document-id>
<country>US</country>
<doc-number>7099294</doc-number>
<kind>B2</kind>
<name>Sayeedi</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00043">
<document-id>
<country>US</country>
<doc-number>7212121</doc-number>
<kind>B2</kind>
<name>Hashimoto</name>
<date>20070500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00044">
<document-id>
<country>US</country>
<doc-number>7221269</doc-number>
<kind>B2</kind>
<name>Onderko et al.</name>
<date>20070500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00045">
<document-id>
<country>US</country>
<doc-number>7257107</doc-number>
<kind>B2</kind>
<name>Swier, Jr. et al.</name>
<date>20070800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00046">
<document-id>
<country>US</country>
<doc-number>7271674</doc-number>
<kind>B1</kind>
<name>Butenhoff et al.</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00047">
<document-id>
<country>US</country>
<doc-number>7274909</doc-number>
<kind>B2</kind>
<name>Perttila et al.</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00048">
<document-id>
<country>US</country>
<doc-number>7277016</doc-number>
<kind>B2</kind>
<name>Moskowitz et al.</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00049">
<document-id>
<country>US</country>
<doc-number>7283037</doc-number>
<kind>B2</kind>
<name>Diorio et al.</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00050">
<document-id>
<country>US</country>
<doc-number>7333479</doc-number>
<kind>B2</kind>
<name>Jalkanen et al.</name>
<date>20080200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00051">
<document-id>
<country>US</country>
<doc-number>7336926</doc-number>
<kind>B2</kind>
<name>Noda et al.</name>
<date>20080200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>455 412</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00052">
<document-id>
<country>US</country>
<doc-number>7369635</doc-number>
<kind>B2</kind>
<name>Spital et al.</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00053">
<document-id>
<country>US</country>
<doc-number>7437585</doc-number>
<kind>B2</kind>
<name>Nakano et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00054">
<document-id>
<country>US</country>
<doc-number>7471745</doc-number>
<kind>B2</kind>
<name>Anim-Appiah et al.</name>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00055">
<document-id>
<country>US</country>
<doc-number>7474211</doc-number>
<kind>B2</kind>
<name>Kramer</name>
<date>20090100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00056">
<document-id>
<country>US</country>
<doc-number>7546469</doc-number>
<kind>B2</kind>
<name>Suzuki et al.</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00057">
<document-id>
<country>US</country>
<doc-number>7565391</doc-number>
<kind>B2</kind>
<name>Hu</name>
<date>20090700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00058">
<document-id>
<country>US</country>
<doc-number>RE40883</doc-number>
<kind>E</kind>
<name>Pechanek et al.</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00059">
<document-id>
<country>US</country>
<doc-number>7573916</doc-number>
<kind>B1</kind>
<name>Bechtolsheim et al.</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00060">
<document-id>
<country>US</country>
<doc-number>7577261</doc-number>
<kind>B2</kind>
<name>Liu et al.</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00061">
<document-id>
<country>US</country>
<doc-number>7602274</doc-number>
<kind>B2</kind>
<name>Lee et al.</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00062">
<document-id>
<country>US</country>
<doc-number>7603465</doc-number>
<kind>B2</kind>
<name>Akashika et al.</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00063">
<document-id>
<country>US</country>
<doc-number>7646300</doc-number>
<kind>B2</kind>
<name>Stewart et al.</name>
<date>20100100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00064">
<document-id>
<country>US</country>
<doc-number>7656837</doc-number>
<kind>B2</kind>
<name>Gerakoulis</name>
<date>20100200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00065">
<document-id>
<country>US</country>
<doc-number>7667572</doc-number>
<kind>B2</kind>
<name>Husak et al.</name>
<date>20100200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>340 101</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00066">
<document-id>
<country>US</country>
<doc-number>7705712</doc-number>
<kind>B2</kind>
<name>Kelly et al.</name>
<date>20100400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00067">
<document-id>
<country>US</country>
<doc-number>RE41530</doc-number>
<kind>E</kind>
<name>Wood, Jr.</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00068">
<document-id>
<country>US</country>
<doc-number>7768389</doc-number>
<kind>B2</kind>
<name>Frank</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00069">
<document-id>
<country>US</country>
<doc-number>7772963</doc-number>
<kind>B2</kind>
<name>Davis</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00070">
<document-id>
<country>US</country>
<doc-number>7792043</doc-number>
<kind>B2</kind>
<name>McNutt et al.</name>
<date>20100900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00071">
<document-id>
<country>US</country>
<doc-number>7835314</doc-number>
<kind>B2</kind>
<name>Yee et al.</name>
<date>20101100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00072">
<document-id>
<country>US</country>
<doc-number>7873767</doc-number>
<kind>B2</kind>
<name>Moritani et al.</name>
<date>20110100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00073">
<document-id>
<country>US</country>
<doc-number>7884702</doc-number>
<kind>B2</kind>
<name>Drago et al.</name>
<date>20110200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00074">
<document-id>
<country>US</country>
<doc-number>7932876</doc-number>
<kind>B2</kind>
<name>Jo et al.</name>
<date>20110400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00075">
<document-id>
<country>US</country>
<doc-number>8115595</doc-number>
<kind>B2</kind>
<name>Ryoo et al.</name>
<date>20120200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>340 101</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00076">
<document-id>
<country>US</country>
<doc-number>8115604</doc-number>
<kind>B2</kind>
<name>Ryoo et al.</name>
<date>20120200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>340 1051</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00077">
<document-id>
<country>US</country>
<doc-number>8378790</doc-number>
<kind>B2</kind>
<name>Ryoo et al.</name>
<date>20130200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>340 105</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00078">
<document-id>
<country>US</country>
<doc-number>2001/0038032</doc-number>
<kind>A1</kind>
<name>Kang et al.</name>
<date>20011100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00079">
<document-id>
<country>US</country>
<doc-number>2002/0174254</doc-number>
<kind>A1</kind>
<name>Kita et al.</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00080">
<document-id>
<country>US</country>
<doc-number>2002/0175805</doc-number>
<kind>A9</kind>
<name>Armstrong et al.</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00081">
<document-id>
<country>US</country>
<doc-number>2003/0032451</doc-number>
<kind>A1</kind>
<name>Hu</name>
<date>20030200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00082">
<document-id>
<country>US</country>
<doc-number>2003/0120745</doc-number>
<kind>A1</kind>
<name>Katagishi et al.</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00083">
<document-id>
<country>US</country>
<doc-number>2003/0179730</doc-number>
<kind>A1</kind>
<name>Lee et al.</name>
<date>20030900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00084">
<document-id>
<country>US</country>
<doc-number>2003/0223599</doc-number>
<kind>A1</kind>
<name>Abe et al.</name>
<date>20031200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00085">
<document-id>
<country>US</country>
<doc-number>2003/0227392</doc-number>
<kind>A1</kind>
<name>Ebert et al.</name>
<date>20031200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00086">
<document-id>
<country>US</country>
<doc-number>2004/0003276</doc-number>
<kind>A1</kind>
<name>Kouznetsov et al.</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00087">
<document-id>
<country>US</country>
<doc-number>2004/0032308</doc-number>
<kind>A1</kind>
<name>Cheung et al.</name>
<date>20040200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00088">
<document-id>
<country>US</country>
<doc-number>2004/0048608</doc-number>
<kind>A1</kind>
<name>Matsuo et al.</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00089">
<document-id>
<country>US</country>
<doc-number>2004/0065733</doc-number>
<kind>A1</kind>
<name>Fukuoka</name>
<date>20040400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00090">
<document-id>
<country>US</country>
<doc-number>2004/0107246</doc-number>
<kind>A1</kind>
<name>Akashika et al.</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00091">
<document-id>
<country>US</country>
<doc-number>2004/0117423</doc-number>
<kind>A1</kind>
<name>Shi et al.</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00092">
<document-id>
<country>US</country>
<doc-number>2004/0160310</doc-number>
<kind>A1</kind>
<name>Chen et al.</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00093">
<document-id>
<country>US</country>
<doc-number>2004/0202137</doc-number>
<kind>A1</kind>
<name>Gerakoulis</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00094">
<document-id>
<country>US</country>
<doc-number>2004/0214524</doc-number>
<kind>A1</kind>
<name>Noda et al.</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00095">
<document-id>
<country>US</country>
<doc-number>2004/0264441</doc-number>
<kind>A1</kind>
<name>Jalkanen et al.</name>
<date>20041200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00096">
<document-id>
<country>US</country>
<doc-number>2005/0015536</doc-number>
<kind>A1</kind>
<name>Lee</name>
<date>20050100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00097">
<document-id>
<country>US</country>
<doc-number>2005/0030929</doc-number>
<kind>A1</kind>
<name>Swier, Jr. et al.</name>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00098">
<document-id>
<country>US</country>
<doc-number>2005/0043028</doc-number>
<kind>A1</kind>
<name>Suomi</name>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00099">
<document-id>
<country>US</country>
<doc-number>2005/0096031</doc-number>
<kind>A1</kind>
<name>Sugaya et al.</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00100">
<document-id>
<country>US</country>
<doc-number>2005/0108559</doc-number>
<kind>A1</kind>
<name>Suzuki et al.</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00101">
<document-id>
<country>US</country>
<doc-number>2005/0162256</doc-number>
<kind>A1</kind>
<name>Kinoshita</name>
<date>20050700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00102">
<document-id>
<country>US</country>
<doc-number>2005/0195930</doc-number>
<kind>A1</kind>
<name>Spital et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00103">
<document-id>
<country>US</country>
<doc-number>2005/0199716</doc-number>
<kind>A1</kind>
<name>Shafer et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00104">
<document-id>
<country>US</country>
<doc-number>2005/0272377</doc-number>
<kind>A1</kind>
<name>Oh et al.</name>
<date>20051200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00105">
<document-id>
<country>US</country>
<doc-number>2005/0283607</doc-number>
<kind>A1</kind>
<name>Zhang et al.</name>
<date>20051200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00106">
<document-id>
<country>US</country>
<doc-number>2006/0006987</doc-number>
<kind>A1</kind>
<name>Hashimoto et al.</name>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00107">
<document-id>
<country>US</country>
<doc-number>2006/0026297</doc-number>
<kind>A1</kind>
<name>Kung et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00108">
<document-id>
<country>US</country>
<doc-number>2006/0044113</doc-number>
<kind>A1</kind>
<name>Hashimoto et al.</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00109">
<document-id>
<country>US</country>
<doc-number>2006/0049250</doc-number>
<kind>A1</kind>
<name>Sullivan</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00110">
<document-id>
<country>US</country>
<doc-number>2006/0148480</doc-number>
<kind>A1</kind>
<name>Thorson et al.</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00111">
<document-id>
<country>US</country>
<doc-number>2006/0152217</doc-number>
<kind>A1</kind>
<name>Withanawasam</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00112">
<document-id>
<country>US</country>
<doc-number>2006/0174150</doc-number>
<kind>A1</kind>
<name>Nakano et al.</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00113">
<document-id>
<country>US</country>
<doc-number>2006/0187031</doc-number>
<kind>A1</kind>
<name>Moretti et al.</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00114">
<document-id>
<country>US</country>
<doc-number>2006/0274657</doc-number>
<kind>A1</kind>
<name>Olgaard et al.</name>
<date>20061200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00115">
<document-id>
<country>US</country>
<doc-number>2007/0014341</doc-number>
<kind>A1</kind>
<name>Rowse et al.</name>
<date>20070100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00116">
<document-id>
<country>US</country>
<doc-number>2007/0024426</doc-number>
<kind>A1</kind>
<name>Akiyama et al.</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00117">
<document-id>
<country>US</country>
<doc-number>2007/0030797</doc-number>
<kind>A1</kind>
<name>Baek</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00118">
<document-id>
<country>US</country>
<doc-number>2007/0075834</doc-number>
<kind>A1</kind>
<name>Armstrong et al.</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00119">
<document-id>
<country>US</country>
<doc-number>2007/0096883</doc-number>
<kind>A1</kind>
<name>Kim</name>
<date>20070500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00120">
<document-id>
<country>US</country>
<doc-number>2007/0136626</doc-number>
<kind>A1</kind>
<name>Chung</name>
<date>20070600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714718</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00121">
<document-id>
<country>US</country>
<doc-number>2007/0171201</doc-number>
<kind>A1</kind>
<name>Pi et al.</name>
<date>20070700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00122">
<document-id>
<country>US</country>
<doc-number>2007/0229926</doc-number>
<kind>A1</kind>
<name>Morisaki et al.</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00123">
<document-id>
<country>US</country>
<doc-number>2007/0276984</doc-number>
<kind>A1</kind>
<name>Schuessler</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00124">
<document-id>
<country>US</country>
<doc-number>2007/0291756</doc-number>
<kind>A1</kind>
<name>Akhtar et al.</name>
<date>20071200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00125">
<document-id>
<country>US</country>
<doc-number>2008/0010622</doc-number>
<kind>A1</kind>
<name>Hsu et al.</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00126">
<document-id>
<country>US</country>
<doc-number>2008/0059659</doc-number>
<kind>A1</kind>
<name>Moritani et al.</name>
<date>20080300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00127">
<document-id>
<country>US</country>
<doc-number>2008/0065792</doc-number>
<kind>A1</kind>
<name>Wu et al.</name>
<date>20080300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00128">
<document-id>
<country>US</country>
<doc-number>2008/0068133</doc-number>
<kind>A1</kind>
<name>Hashimoto et al.</name>
<date>20080300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00129">
<document-id>
<country>US</country>
<doc-number>2008/0094183</doc-number>
<kind>A1</kind>
<name>Fukushima et al.</name>
<date>20080400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00130">
<document-id>
<country>US</country>
<doc-number>2008/0125885</doc-number>
<kind>A1</kind>
<name>McNutt et al.</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00131">
<document-id>
<country>US</country>
<doc-number>2008/0133789</doc-number>
<kind>A1</kind>
<name>McNutt et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00132">
<document-id>
<country>US</country>
<doc-number>2008/0139117</doc-number>
<kind>A1</kind>
<name>Madine et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00133">
<document-id>
<country>US</country>
<doc-number>2008/0141073</doc-number>
<kind>A1</kind>
<name>Shih et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00134">
<document-id>
<country>US</country>
<doc-number>2008/0262770</doc-number>
<kind>A1</kind>
<name>Higaki et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00135">
<document-id>
<country>US</country>
<doc-number>2009/0003828</doc-number>
<kind>A1</kind>
<name>So</name>
<date>20090100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00136">
<document-id>
<country>US</country>
<doc-number>2009/0006675</doc-number>
<kind>A1</kind>
<name>Rofougaran</name>
<date>20090100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00137">
<document-id>
<country>US</country>
<doc-number>2009/0033493</doc-number>
<kind>A1</kind>
<name>Lin et al.</name>
<date>20090200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00138">
<document-id>
<country>US</country>
<doc-number>2009/0075630</doc-number>
<kind>A1</kind>
<name>McLean</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00139">
<document-id>
<country>US</country>
<doc-number>2009/0201529</doc-number>
<kind>A1</kind>
<name>Takahara</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00140">
<document-id>
<country>US</country>
<doc-number>2009/0256684</doc-number>
<kind>A1</kind>
<name>Fukuda</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00141">
<document-id>
<country>US</country>
<doc-number>2009/0282154</doc-number>
<kind>A1</kind>
<name>Akashika et al.</name>
<date>20091100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00142">
<document-id>
<country>US</country>
<doc-number>2010/0027523</doc-number>
<kind>A1</kind>
<name>Chan et al.</name>
<date>20100200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00143">
<document-id>
<country>US</country>
<doc-number>2010/0248783</doc-number>
<kind>A1</kind>
<name>Jolivet</name>
<date>20100900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00144">
<document-id>
<country>US</country>
<doc-number>2010/0289627</doc-number>
<kind>A1</kind>
<name>McAllister et al.</name>
<date>20101100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00145">
<document-id>
<country>JP</country>
<doc-number>11-338739</doc-number>
<kind>A</kind>
<date>19991200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00146">
<document-id>
<country>KR</country>
<doc-number>10-2000-0069897</doc-number>
<kind>A</kind>
<date>20001100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00147">
<document-id>
<country>KR</country>
<doc-number>10-2005-0021612</doc-number>
<date>20050300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00148">
<document-id>
<country>WO</country>
<doc-number>WO 2004/079970</doc-number>
<date>20040900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00149">
<othercit>U.S. Office Action dated Dec. 22, 2011 for U.S. Appl. No. 11/912,641.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00150">
<othercit>&#x201c;An Authentication Protocol in a Security Layer for RFID Smart Tags&#x201d; (IEE Melecon 2004, May 12-15, 2004, Dubrovnik, Croatia); Martin Feldhofer Institute for Applied Information Processing and Communications (IAIK) Graz University of Technology, Inffeldgasse 16a, 8010 Graz, Austria; Email: Martin.Felhofer @iaik.tugraz.at.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00151">
<othercit>&#x201c;An Ubiquitous Architectural Framework and Protocol for Object Tracking using RFID Tags&#x201d; Prdip De, Kalyan Basu and Sajl K. Das; Center for Research in Wirless Mobility and Networking (CReWMaN) Department of Computer Science and Engineering University of Texas at Arlington, TX 76019-0015 [pradipde, basu, das] @cse.uta.edu, 2004.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00152">
<othercit>U.S. Appl. No. 12/954,434, filed Nov. 24, 2010.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00153">
<othercit>U.S. Appl. No. 12/954,446, filed Nov. 24, 2010.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00154">
<othercit>U.S. Appl. No. 12/954,491, filed Nov. 24, 2010.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>10</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>340 101</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>340 102- 105</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>3405721-5729</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>455 412</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>455 661</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>235375-379</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709203</main-classification>
</classification-national>
<classification-cpc-text>G05B 19/00</classification-cpc-text>
<classification-cpc-text>H04B 5/00</classification-cpc-text>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>11</number-of-drawing-sheets>
<number-of-figures>83</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>11912646</doc-number>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>8115595</doc-number>
<date>20120214</date>
</document-id>
</parent-grant-document>
<parent-pct-document>
<document-id>
<country>WO</country>
<doc-number>PCT/KR2006/001568</doc-number>
<date>20060425</date>
</document-id>
</parent-pct-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>12954346</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60674765</doc-number>
<date>20050425</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60689784</doc-number>
<date>20050609</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60719460</doc-number>
<date>20050921</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60757480</doc-number>
<date>20060110</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110072318</doc-number>
<kind>A1</kind>
<date>20110324</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Ryoo</last-name>
<first-name>Seung Hyup</first-name>
<address>
<city>Gyeonggi-do</city>
<country>KR</country>
</address>
</addressbook>
<residence>
<country>KR</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Kim</last-name>
<first-name>Jin Tae</first-name>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
<residence>
<country>KR</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Min</last-name>
<first-name>Sang Cheol</first-name>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
<residence>
<country>KR</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Kim</last-name>
<first-name>Hee Seung</first-name>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
<residence>
<country>KR</country>
</residence>
</us-applicant>
<us-applicant sequence="005" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Park</last-name>
<first-name>Jae Joon</first-name>
<address>
<city>Gyeonggi-do</city>
<country>KR</country>
</address>
</addressbook>
<residence>
<country>KR</country>
</residence>
</us-applicant>
<us-applicant sequence="006" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Lee</last-name>
<first-name>Dong Hyun</first-name>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
<residence>
<country>KR</country>
</residence>
</us-applicant>
<us-applicant sequence="007" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Kim</last-name>
<first-name>Yong Sam</first-name>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
<residence>
<country>KR</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Ryoo</last-name>
<first-name>Seung Hyup</first-name>
<address>
<city>Gyeonggi-do</city>
<country>KR</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Kim</last-name>
<first-name>Jin Tae</first-name>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Min</last-name>
<first-name>Sang Cheol</first-name>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Kim</last-name>
<first-name>Hee Seung</first-name>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
</inventor>
<inventor sequence="005" designation="us-only">
<addressbook>
<last-name>Park</last-name>
<first-name>Jae Joon</first-name>
<address>
<city>Gyeonggi-do</city>
<country>KR</country>
</address>
</addressbook>
</inventor>
<inventor sequence="006" designation="us-only">
<addressbook>
<last-name>Lee</last-name>
<first-name>Dong Hyun</first-name>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
</inventor>
<inventor sequence="007" designation="us-only">
<addressbook>
<last-name>Kim</last-name>
<first-name>Yong Sam</first-name>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Birch, Stewart, Kolasch &#x26; Birch, LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>LG Electronics Inc.</orgname>
<role>03</role>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Nguyen</last-name>
<first-name>Nam V</first-name>
<department>2682</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">An RFID reader control system and method is provided. A protocol for controlling an RFID reader and an RFID reader control unit of a mobile phone is defined. Messages, information, commands, responses, and notification are constructed and transmitted between the RFID reader and the RFID reader control unit.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="89.83mm" wi="129.29mm" file="US08624712-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="202.95mm" wi="154.52mm" file="US08624712-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="184.83mm" wi="168.06mm" file="US08624712-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="199.64mm" wi="157.48mm" file="US08624712-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="255.69mm" wi="157.14mm" file="US08624712-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="253.07mm" wi="150.28mm" file="US08624712-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="261.62mm" wi="168.99mm" file="US08624712-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="235.54mm" wi="170.69mm" file="US08624712-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="258.32mm" wi="176.61mm" file="US08624712-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="231.31mm" wi="168.66mm" file="US08624712-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="258.66mm" wi="174.92mm" file="US08624712-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="237.91mm" wi="161.46mm" file="US08624712-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<p id="p-0002" num="0001">This application is a Continuation of application Ser. No. 11/912,646 filed on May 7, 2008, (now U.S. Pat. No. 8,115,595, issued Feb. 14, 2012) which is the national phase of PCT International Application No. PCT/KR2006/001568 filed on Apr. 25, 2006, which claims the benefit of U.S. Provisional Application Nos. 60/674,765, 60/689,784, 60/719,460 and 60/757,480 filed on Apr. 25, 2005, Jun. 9, 2005, Sep. 21, 2005 and Jan. 10, 2006, respectively. The entire contents of all of the above applications are hereby incorporated by reference.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">TECHNICAL FIELD</heading>
<p id="p-0003" num="0002">The present invention relates to a reader control system.</p>
<heading id="h-0002" level="1">BACKGROUND ART</heading>
<p id="p-0004" num="0003">The ISO and EPC standards define a reader protocol that supports connection of an RFID reader to a host through a network. In RFID systems, an RFID reader is mounted on a mobile phone or attached to a mobile phone in a dongle configuration. Such RFID systems require a protocol that enables an RFID reader control unit of the mobile phone to control the RFID reader.</p>
<p id="p-0005" num="0004">In mobile phone environments, an RFID system is employed between a processor (e.g., MPU and MCU) of a mobile phone and an RFID reader chip installed in the mobile phone. Alternatively, a reader protocol is employed between a mobile phone and an RFID reader attached onto the mobile phone in a dongle configuration. When an RFID reader is attached onto a mobile phone in a dongle configuration, the RFID reader and the mobile phone are connected by an interface unit such as UART or USB. In this case, an efficient protocol is needed between the RFID reader and the mobile phone.</p>
<p id="p-0006" num="0005">The ISO and EPC standards provide protocols that are applied mainly for the case where an RFID reader is connected through a network. Therefore required is an RFID system including an RFID reader control protocol suitable for mobile phone environments.</p>
<heading id="h-0003" level="1">DISCLOSURE OF INVENTION</heading>
<heading id="h-0004" level="1">Technical Problem</heading>
<p id="p-0007" num="0006">Accordingly, the present invention is directed to a reader control system that substantially obviates one or more problems due to limitations and disadvantages of the related art.</p>
<p id="p-0008" num="0007">An object of the present invention is to provide a reader control system and method suitable for mobile terminal environments. In the system and method, a protocol for controlling a reader and a reader control unit of a mobile terminal is defined and messages, information, commands, responses, and notification are constructed and transmitted between the reader and the reader control unit.</p>
<heading id="h-0005" level="1">Technical Solution</heading>
<p id="p-0009" num="0008">To achieve these objects and other advantages and in accordance with the purpose of the invention, as embodied and broadly described herein, there are provided commands and responses that are exchanged between a reader and a reader control unit such as a processor of a terminal.</p>
<p id="p-0010" num="0009">In another aspect of the present invention, there are provided a reader control protocol format and respective fields that are used between a reader and a reader control unit such as a processor of a terminal.</p>
<p id="p-0011" num="0010">In another aspect of the present invention, there are provided protocol messages, fields of each protocol message, and the content of each field, with respect to commands, responses, and notifications that are used in a reader control protocol that is performed between a reader and a reader control unit such as a processor of a terminal.</p>
<p id="p-0012" num="0011">In a further aspect of the present invention, there is provided a method of using respective fields of a reader control protocol format that is exchanged between a reader and a reader control unit such as a processor of a terminal.</p>
<p id="p-0013" num="0012">In a further aspect of the present invention, there is provided a method of constructing a message and information in a reader control protocol that is performed between a reader and a reader control unit such as a processor of a terminal.</p>
<p id="p-0014" num="0013">In a further aspect of the present invention, there is provided a method of transmitting a message and/or information in a reader control protocol that is performed between a reader and a reader control unit such as a processor of a terminal.</p>
<p id="p-0015" num="0014">In a further aspect of the present invention, there is provided a method of constructing and transmitting a protocol bit stream in a reader control protocol that is performed between a processor, a reader, and a reader control unit such as a processor of a terminal.</p>
<p id="p-0016" num="0015">In a further aspect of the present invention, there is provided a method of constructing and storing a message and/or information in a reader control protocol that is performed between a processor, a reader, and a reader control unit such as a processor of a terminal.</p>
<p id="p-0017" num="0016">In a further aspect of the present invention, there is provided a method of controlling and managing a reader in a reader control protocol that is performed between a processor, a reader, and a reader control unit such as a processor of a terminal.</p>
<p id="p-0018" num="0017">In a further aspect of the present invention, there is provided a method of reading, writing, changing, querying, protecting, and killing (or deleting) a reader message and/or information in a reader control protocol that is performed between a processor, a reader, and a reader control unit such as a processor of a terminal.</p>
<p id="p-0019" num="0018">In a further aspect of the present invention, there are provided a response and an error process to a message and/or information and the implementation and use method of additional functions, in a reader control protocol that is performed between a processor, a reader, and a reader control unit such as a processor of a terminal.</p>
<p id="p-0020" num="0019">It is to be understood that both the foregoing general description and the following detailed description of the present invention are exemplary and explanatory and are intended to provide further explanation of the invention as claimed.</p>
<heading id="h-0006" level="1">Advantageous Effects</heading>
<p id="p-0021" num="0020">According to the present invention, the present invention is directed a reader control system and method suitable for mobile terminal environments. In the system and method, a protocol for controlling a reader and a reader control unit of a mobile terminal is defined and messages, information, commands, responses, and notification are constructed and transmitted between the reader and the reader control unit.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0007" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0022" num="0021">The accompanying drawings, which are included to provide a further understanding of the invention and are incorporated in and constitute a part of this application, illustrate embodiment(s) of the invention and together with the description serve to explain the principle of the invention. In the drawings:</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIGS. 1 and 2</figref> illustrate the configuration of mobile RFID systems to which the present invention is applied;</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 3</figref> illustrates a mobile RFID reader control protocol format according to an embodiment of the present invention;</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIGS. 4 through 6</figref> illustrates a payload type according to an embodiment of the present invention; and</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIGS. 7 through 83</figref> illustrate mobile RFID reader control protocol message structures according to embodiments of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0008" level="1">BEST MODE FOR CARRYING OUT THE INVENTION</heading>
<p id="p-0027" num="0026">Reference will now be made in detail to the preferred embodiments of the present invention, examples of which are illustrated in the accompanying drawings. Wherever possible, the same reference numbers will be used throughout the drawings to refer to the same or like parts.</p>
<p id="p-0028" num="0027">In the following embodiments of the present invention, a mobile terminal (e.g., a mobile phone) with an RFID reader control unit is taken as an example of a terminal with an RFID reader control unit.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 1</figref> illustrates a mobile RFID system configuration when a mobile RFID reader is installed in a mobile phone. <figref idref="DRAWINGS">FIG. 2</figref> illustrates a mobile RFID system configuration when a mobile RFID reader is attached to the outside of a mobile phone in a dongle configuration.</p>
<p id="p-0030" num="0029">Referring to <figref idref="DRAWINGS">FIG. 1</figref>, a mobile phone <b>100</b> includes a mobile phone processor <b>110</b> and a chip-type or module-type mobile RFID reader <b>120</b>. The present invention proposes a mobile RFID reader control protocol executed between the processor <b>110</b> and the RFID reader <b>120</b>.</p>
<p id="p-0031" num="0030">Referring to <figref idref="DRAWINGS">FIG. 2</figref>, a mobile phone <b>100</b> includes a mobile phone processor <b>110</b> and a receptacle connector <b>120</b>. A mobile RFID reader dongle <b>200</b> includes a chip-type or module-type mobile RFID reader <b>210</b> and a receptacle connector <b>220</b>. The RFID reader <b>210</b> is connected to the mobile phone <b>100</b> by the receptacle connectors <b>120</b> and <b>220</b>. The present invention proposes a mobile RFID reader control protocol executed between the processor <b>110</b> and the RFID reader <b>210</b>.</p>
<p id="p-0032" num="0031">Terms in the embodiments of the present invention are based on the MRF document &#x2018;Term Definition of Mobile RFID Service Standards&#x2019;. For example, the term &#x2018;Q&#x2019; is a parameter used in a tag based on the ISO 18000-6C standards. When a reader transmits the parameter Q to a tag, the tag generates (2<sup>Q</sup>&#x2212;1) time slots and sends a response in synchronization with one of the (2<sup>Q</sup>&#x2212;1) time slots.</p>
<p id="p-0033" num="0032">[1] Format of Mobile RFID Reader Control Protocol</p>
<p id="p-0034" num="0033">A mobile RFID reader control protocol according to an embodiment of the present invention includes a preamble, a header, a payload, and an end mark. <figref idref="DRAWINGS">FIG. 3</figref> illustrates a format of a mobile RFID reader control protocol according to an embodiment of the present invention. A preamble includes information for indicating the start of a protocol message, which is used to discern protocol messages. For example, the preamble may be configured in 8 bits and may have a value of OxBB. A header includes information for indicating a message type, a corresponding code, and a payload length. That is, payload length information is stored in the header. Information received from an RFID tag is stored in the payload. An end mark includes information for indicating the end of a protocol message, which is used to discern protocol messages together with the preamble. For example, the end mark may be configured in 8 bits and may have a value of Ox7E.</p>
<p id="p-0035" num="0034">[1.1] Preamble Field and End Mark Field</p>
<p id="p-0036" num="0035">For example, in each protocol message, the preamble and the end mark each have a 8-bit data, which indicate the start and end of the protocol message. The preamble and the end mark are located at the start and end of the protocol message, respectively, and have a predetermined value. For example, the preamble may have a value of OxBB, and the end mark may have a value of Ox7E. It is preferable that the preamble and the end mark have a different value than those used in a message type field and a code field of the header.</p>
<p id="p-0037" num="0036">[1.2] Header Field</p>
<p id="p-0038" num="0037">The header includes three fields describing an RFID tag type, command/response/notification type and code, and a payload length. The message type field is used to discern a command that is transmitted from the processor to the reader and a response and a notification that are transmitted from the reader to the processor. The code field is used to discern a variety of types of command, response or notification. Also, the code field includes information about success or failure of command in response and notification. The payload length field includes information indicating the length of a payload located right after the header, which represents the length in byte.</p>
<p id="p-0039" num="0038">[1.2.1] Message Type Field</p>
<p id="p-0040" num="0039">The message type field includes information about which one of a command, a response and a notification in a protocol format, which may be represented in a total of 8 bits. The message type (e.g., command, response and notification) can be discerned using values shown in Table 1 below.</p>
<p id="p-0041" num="0040">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="14pt" align="left"/>
<colspec colname="2" colwidth="98pt" align="left"/>
<colspec colname="3" colwidth="105pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" rowsep="1">TABLE 1</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Command/</entry>
<entry>Corresponding Code Value</entry>
</row>
<row>
<entry/>
<entry>Response/Notification Type</entry>
<entry>(Hexadecimal)</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>Command</entry>
<entry>0x00</entry>
</row>
<row>
<entry/>
<entry>Response</entry>
<entry>0x01</entry>
</row>
<row>
<entry/>
<entry>Notification</entry>
<entry>0x02</entry>
</row>
<row>
<entry/>
<entry>Test Mode</entry>
<entry>0x03</entry>
</row>
<row>
<entry/>
<entry>Reserved</entry>
<entry>0x04-0xFF</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0042" num="0041">As shown in Table 1, a code value indicating a command is 0x00, a code value indicating a response is 0x01, a code value indicating a notification is 0x02, a code value indicating a test mode is 0x03, and code values indicating &#x201c;Reserved&#x201d; are 0x04&#x2dc;0xFF. The command, the response, the notification, and the test mode shown in Table 1 will be described in detail later.</p>
<p id="p-0043" num="0042">[1.2.2] Code Field</p>
<p id="p-0044" num="0043">A code field is used to discern the types of a command, a response, and a notification. There may be various commands to be processed by a mobile RFID reader. Also, there may be various responses to the commands and various notifications to be sent by the reader. Therefore, when a different code is assigned to each kind of command, response and notification, the reader can accurately discern them by referring to the message type field and the code field. For example, when a value 0x00 and a value 0x01 are respectively assigned to a message type field and a code field for a power control command, the reader can recognize a received command as the power control command by the assigned values.</p>
<p id="p-0045" num="0044">[1.2.3] Payload Length Field</p>
<p id="p-0046" num="0045">A payload length field indicates the length of a payload field located after a header field. For example, the payload length field may be composed of 16 bits. Here, the unit of length is byte. When a payload length is represented in byte using 16 bits, the maximum representable length becomes 65,536 bytes. This means that the maximum length of a payload cannot exceed 65,535.</p>
<p id="p-0047" num="0046">[1.3] Payload Field</p>
<p id="p-0048" num="0047">A payload field stores various types of data. The payload field may include arguments related to a command transmitted from the processor to the RFID reader, and various data contained in a response transmitted from the RFID reader to the processor. There may be various types of payloads suitable for respective commands and responses, such as payloads illustrated in <figref idref="DRAWINGS">FIGS. 4 through 6</figref>. <figref idref="DRAWINGS">FIGS. 4 through 6</figref> illustrate Type A through Type X.</p>
<p id="p-0049" num="0048">Each of the payloads illustrated in <figref idref="DRAWINGS">FIGS. 3 through 6</figref> includes a specific field. The use of the specific field and the method thereof will be described in detail later. The generation and configuration of each payload type will now be described in detail. The number of bits and order mentioned in the following payload configurations are merely examples, and the present invention is not limited to this.</p>
<p id="p-0050" num="0049">A payload Type A includes an 8-bit argument.</p>
<p id="p-0051" num="0050">A payload Type B includes a variable-length argument.</p>
<p id="p-0052" num="0051">A payload Type C is generated to include an 8-bit modulation index, an 8-bit byte mask, and an 8-bit address, which are transmitted in the order named.</p>
<p id="p-0053" num="0052">A payload Type D includes a 3-bit target, a 3-bit action, a 2-bit MB, a 32-bit pointer, an 8-bit mask length, T, RFU (Reserved for Future Use), and a mask of maximum 25 bits, which are transmitted in the order named.</p>
<p id="p-0054" num="0053">A payload Type E includes a 2-bit DR, a 4-bit M, a 2-bit TR, a 2-bit Sel, a 2-bit S, T, a 4-bit Q, and a 3-bit UpDn, which are transmitted in the order named.</p>
<p id="p-0055" num="0054">A payload Type F includes a 16-bit argument <b>1</b> and an 8-bit argument <b>2</b>, which are transmitted in the order named.</p>
<p id="p-0056" num="0055">A payload Type G includes a 32-bit argument.</p>
<p id="p-0057" num="0056">A payload Type H includes a 16-bit argument <b>1</b> and a variable-length argument <b>2</b>, which are transmitted in the order named.</p>
<p id="p-0058" num="0057">A payload Type I includes a 64-bit argument <b>1</b>, a 16-bit argument <b>2</b>, and a 16-bit argument <b>3</b>, which are transmitted in the order named.</p>
<p id="p-0059" num="0058">A payload Type J includes a variable-length argument <b>1</b>, a 16-bit argument <b>2</b>, and a 16-bit argument <b>3</b>, which are transmitted in the order named.</p>
<p id="p-0060" num="0059">A payload Type K includes a 16-bit argument.</p>
<p id="p-0061" num="0060">A payload Type L includes a 64-bit UID, a 16-bit manufacturer, a 16-bit hardware type, a 48-bit memory layout, and a variable-length user data, which are transmitted in the order named.</p>
<p id="p-0062" num="0061">A payload Type M includes a 64-bit UID, a 16-bit manufacturer, a 16-bit hardware type, an 8-bit EAC, an 8-bit AFID, an 8-bit SDF, an 8-bit USL, and an 8-bit ASL, which are transmitted in the order named.</p>
<p id="p-0063" num="0062">A payload Type N includes a 16-bit TID bank length, a variable-length TID bank, a 16-bit UII (Unique Item Identifier) length, a 16-bit PC, a variable-length UII or UII set, and a variable-length user data, which are transmitted in the order named.</p>
<p id="p-0064" num="0063">A payload Type O includes an 8-bit argument <b>1</b> and a 16-bit argument <b>2</b>, which are transmitted in the order named.</p>
<p id="p-0065" num="0064">A payload Type P includes a 32-bit access password, a 16-bit UII length, a variable-length UII, a 16-bit new UII length, a variable-length new UII, and a 16-bit PC, which are transmitted in the order named.</p>
<p id="p-0066" num="0065">A payload Type Q includes a 64-bit UID, a 16-bit start address, a 16-bit length, and a variable-length user data, which are transmitted in the order named.</p>
<p id="p-0067" num="0066">A payload Type R includes a 32-bit access password, a 16-bit UII length, a variable-length UII, a 16-bit start address, a 16-bit length, and a variable-length user data, which are transmitted in the order named.</p>
<p id="p-0068" num="0067">A payload Type S includes a 64-bit UID, a 48-bit memory layout, a 16-bit user data length, and a variable-length user data, which are transmitted in the order named.</p>
<p id="p-0069" num="0068">A payload Type T includes a 32-bit access password, a 16-bit UII length, a variable-length UII, a 16-bit new UII length, a variable-length new UII, a 16-bit PC, a 16-bit user data length, a variable-length user data, a variable-length reserved bank length, and a variable-length reserved bank data, which are transmitted in the order named.</p>
<p id="p-0070" num="0069">A payload Type U includes a 32-bit access password, a 32-bit kill password, a 16-bit UII length, and a variable-length UII, which are transmitted in the order named.</p>
<p id="p-0071" num="0070">A payload Type V includes a 64-bit UID and an 8-bit argument, which are transmitted in the order named.</p>
<p id="p-0072" num="0071">A payload Type W includes a 32-bit access password, a 16-bit UII length, a variable-length UII, and a 24-bit lock data, which are transmitted in the order named.</p>
<p id="p-0073" num="0072">A payload Type X includes a DR, a 2-bit M, TR, a 2-bit Sel, a 2-bit S, T, a 4-bit Q, and a 3-bit UpDn, which are transmitted in the order named.</p>
<p id="p-0074" num="0073">The description of the foregoing payload types, the use of each field, and the use method thereof will be described in detail later.</p>
<p id="p-0075" num="0074">[1.4] Endian Format and Transmission Order Format</p>
<p id="p-0076" num="0075">All the fields constructing the mobile RFID reader control protocol format follow the big-Endian format. According to the big-Endian format, the most significant byte value is first written and then the least significant byte value is written. A preamble field, a header field, a payload field, and an end mark field are transmitted in the order named. In the header field, a message type field, a code field, and a payload length field are transmitted in the order named. In the payload field, a target field, an argument type field, a payload data length field, and a payload data and pending field are transmitted in the order named. In each field, the most significant byte is first transmitted.</p>
<p id="p-0077" num="0076">[1.5] Method of Describing Small-Size Data in Fixed-Size Field</p>
<p id="p-0078" num="0077">When a small-size data needs to be inserted into a protocol field larger than the small-sized data, the less significant bytes are first filled and then the remaining more significant bytes are filled with 0x00. In this case, the big-Endian format is also applied. For example, when a value of 12 needs to be inserted into a 16-bit length field, the less significant bytes are filed with 0x0C and the more significant bytes are filled with 0x00.</p>
<p id="p-0079" num="0078">[2] Summary and List of Command, Response, and Notification</p>
<p id="p-0080" num="0079">A protocol between a processor of a mobile terminal and an RFID reader can be classified into a command, a response, and a notification, which are defined in the ISO and EPC standards.</p>
<p id="p-0081" num="0080">In the embodiment of the present invention, the command and the response always exist and operate in pairs. Only after a response to a command has been received, the next command is executed. Each command has a specific code, which is described in a code field of a header and represented in 8 bits. When a response is successful, a code of a corresponding command is described in a code field and a response-related content is described in a payload field. On the other hand, when a response is unsuccessful, a value of 0xFF is described in a code field and a result code is described in a payload field. A payload varies according to a command and a response. Detailed types of the payload will be described in detail later.</p>
<p id="p-0082" num="0081">[2.1] Command and Response</p>
<p id="p-0083" num="0082">In the embodiment of the present invention, commands and responses in a mobile RFID reader protocol are categorized into reader control/management, tag read, tag write, tag lock/unlock, tag kill, and additional functions. Table 2 below shows an example of a command list according to the present invention. In Table 2, the commands are classified into mandatory commands and optional commands. All the commands have the corresponding responses. Commands corresponding to a tag write category, a tag kill category, and a tag lock category must be implemented carefully. The reason for this is that such commands may change the contents of a tag. When these commands are wrongly used, security problems may occur to cause corresponding damages.</p>
<p id="p-0084" num="0083">
<tables id="TABLE-US-00002" num="00002">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="70pt" align="left"/>
<colspec colname="2" colwidth="77pt" align="left"/>
<colspec colname="3" colwidth="70pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" rowsep="1">TABLE 2</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Type</entry>
<entry>Mandatory Command</entry>
<entry>Optional Command</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Readercontrol/</entry>
<entry>Reader Power </entry>
<entry>Get Type B A/I </entry>
</row>
<row>
<entry>management</entry>
<entry>ControlReader</entry>
<entry>Parameters</entry>
</row>
<row>
<entry>category</entry>
<entry>Connection ControlGet </entry>
<entry>Set Type B A/I</entry>
</row>
<row>
<entry/>
<entry>Reader Information</entry>
<entry>ParametersGet</entry>
</row>
<row>
<entry/>
<entry>Get Signal StrengthSet </entry>
<entry>Automatic</entry>
</row>
<row>
<entry/>
<entry>Signal</entry>
<entry>Read </entry>
</row>
<row>
<entry/>
<entry>StrengthGet RegionSet </entry>
<entry>ParametersSet</entry>
</row>
<row>
<entry/>
<entry>RegionReset</entry>
<entry>Automatic Read</entry>
</row>
<row>
<entry/>
<entry>ReaderGet Type C A/I </entry>
<entry>Parameters</entry>
</row>
<row>
<entry/>
<entry>Select Parameters</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Set Type C A/I Select </entry>
<entry/>
</row>
<row>
<entry/>
<entry>Parameters</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Get Type C A/I Query-</entry>
<entry/>
</row>
<row>
<entry/>
<entry>related</entry>
<entry/>
</row>
<row>
<entry/>
<entry>ParametersSet Type C </entry>
<entry/>
</row>
<row>
<entry/>
<entry>A/I Query-related</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Parameters</entry>
<entry/>
</row>
<row>
<entry>Tag</entry>
<entry>Read Type C UII </entry>
<entry>Read Type B </entry>
</row>
<row>
<entry>ReadCategory</entry>
<entry>BlockRead </entry>
<entry>TIDRead</entry>
</row>
<row>
<entry/>
<entry>Type C User</entry>
<entry>Type B User </entry>
</row>
<row>
<entry/>
<entry>DataRead Entire </entry>
<entry>DataRead</entry>
</row>
<row>
<entry/>
<entry>Type C TagStart</entry>
<entry>Entire Type </entry>
</row>
<row>
<entry/>
<entry>Automatic ReadStop </entry>
<entry>B Tag</entry>
</row>
<row>
<entry/>
<entry>Automatic Read</entry>
<entry/>
</row>
<row>
<entry>Tag</entry>
<entry/>
<entry>Write Type B </entry>
</row>
<row>
<entry>WriteCategory</entry>
<entry/>
<entry>UII SetWrite</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Type C UII </entry>
</row>
<row>
<entry/>
<entry/>
<entry>BlockWrite</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Type B User </entry>
</row>
<row>
<entry/>
<entry/>
<entry>DataWrite</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Type C User </entry>
</row>
<row>
<entry/>
<entry/>
<entry>DataWrite</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Entire Type B </entry>
</row>
<row>
<entry/>
<entry/>
<entry>TagWrite</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Entire Type C </entry>
</row>
<row>
<entry/>
<entry/>
<entry>Tag</entry>
</row>
<row>
<entry>Tag</entry>
<entry>Kill Type C Tag</entry>
<entry/>
</row>
<row>
<entry>KillCategory</entry>
<entry/>
<entry/>
</row>
<row>
<entry>Tag</entry>
<entry/>
<entry>Lock Type B </entry>
</row>
<row>
<entry>LockCategory</entry>
<entry/>
<entry>TagLock</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Type C Tag</entry>
</row>
<row>
<entry>AdditionalFunction-</entry>
<entry>Start Test ModeStop </entry>
<entry>Get Last </entry>
</row>
<row>
<entry>Category</entry>
<entry>Test ModeStar</entry>
<entry>Result</entry>
</row>
<row>
<entry/>
<entry>Receive TestStop </entry>
<entry/>
</row>
<row>
<entry/>
<entry>Receive Test</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0085" num="0084">[2.2] Mobile RFID Reader Control/Management Category</p>
<p id="p-0086" num="0085">An RFID reader control/management command category includes commands shown in Table 3 below. The main commands relate to reader power control, reader connection control, get reader information, reader RF signal strength control, and reader filter function control. The reader power control command and the reset reader command, which are the most basic reader control commands, may be directly controlled by a hardware interface such as GIPO. In this case, the foregoing two commands may not be implemented separately.</p>
<p id="p-0087" num="0086">
<tables id="TABLE-US-00003" num="00003">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="63pt" align="left"/>
<colspec colname="2" colwidth="49pt" align="left"/>
<colspec colname="3" colwidth="105pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" rowsep="1">TABLE 3</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Code</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Value</entry>
<entry/>
</row>
<row>
<entry>Command Name</entry>
<entry>(Hexadecimal)</entry>
<entry>Description of Command</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Reader Power</entry>
<entry>0x01</entry>
<entry>Power on/off reader (Active/Sleep)</entry>
</row>
<row>
<entry>Control</entry>
<entry/>
<entry/>
</row>
<row>
<entry>Reader</entry>
<entry>0x02</entry>
<entry>Initialize or end communication </entry>
</row>
<row>
<entry>Connection</entry>
<entry/>
<entry>with reader</entry>
</row>
<row>
<entry>Control</entry>
<entry/>
<entry/>
</row>
<row>
<entry>Get Reader </entry>
<entry>0x03</entry>
<entry>Get reader-related information </entry>
</row>
<row>
<entry>Information</entry>
<entry/>
<entry>(Reader at least have information </entry>
</row>
<row>
<entry/>
<entry/>
<entry>about model, manufacturer, S/N, </entry>
</row>
<row>
<entry/>
<entry/>
<entry>usable frequency, and supportable </entry>
</row>
<row>
<entry/>
<entry/>
<entry>tag type)</entry>
</row>
<row>
<entry>Get Signal</entry>
<entry>0x04</entry>
<entry>Get RF signal strength of reader</entry>
</row>
<row>
<entry>Strength</entry>
<entry/>
<entry/>
</row>
<row>
<entry>Set Signal</entry>
<entry>0x05</entry>
<entry>Set RF signal strength of reader</entry>
</row>
<row>
<entry>Strength</entry>
<entry/>
<entry/>
</row>
<row>
<entry>Get Region</entry>
<entry>0x06</entry>
<entry>Get nation/region information of </entry>
</row>
<row>
<entry/>
<entry/>
<entry>reader</entry>
</row>
<row>
<entry>Set Region</entry>
<entry>0x07</entry>
<entry>Set nation/region information of </entry>
</row>
<row>
<entry/>
<entry/>
<entry>reader</entry>
</row>
<row>
<entry>Reset Reader</entry>
<entry>0x08</entry>
<entry>Immediately end all operations of </entry>
</row>
<row>
<entry/>
<entry/>
<entry>reader and initialize reader. </entry>
</row>
<row>
<entry/>
<entry/>
<entry>Thereafter, reader control requires </entry>
</row>
<row>
<entry/>
<entry/>
<entry>using Reader connection control</entry>
</row>
<row>
<entry/>
<entry/>
<entry>command</entry>
</row>
<row>
<entry>Get Type B A/I</entry>
<entry>0x09</entry>
<entry>Get air interface parameters related </entry>
</row>
<row>
<entry>Parameters</entry>
<entry/>
<entry>to Type B standard</entry>
</row>
<row>
<entry>Set Type B A/I</entry>
<entry>0x0A</entry>
<entry>Set air interface parameters related </entry>
</row>
<row>
<entry>Parameters</entry>
<entry/>
<entry>to Type B standard</entry>
</row>
<row>
<entry>Get Type C A/I</entry>
<entry>0x0B</entry>
<entry>Get select parameters of air </entry>
</row>
<row>
<entry>Select Parameters</entry>
<entry/>
<entry>interface related to Type C </entry>
</row>
<row>
<entry/>
<entry/>
<entry>standard</entry>
</row>
<row>
<entry>Set Type C A/I</entry>
<entry>0x0C</entry>
<entry>Set select parameters of air </entry>
</row>
<row>
<entry>Select Parameters</entry>
<entry/>
<entry>interface related to Type C </entry>
</row>
<row>
<entry/>
<entry/>
<entry>standard</entry>
</row>
<row>
<entry>Get Type C A/I</entry>
<entry>0x0D</entry>
<entry>Get query-related parameters of air </entry>
</row>
<row>
<entry>Query related</entry>
<entry/>
<entry>interface related to Type C </entry>
</row>
<row>
<entry>Parameters</entry>
<entry/>
<entry>standard</entry>
</row>
<row>
<entry>Set Type C A/I</entry>
<entry>0x0E</entry>
<entry>Set query-related parameters of air </entry>
</row>
<row>
<entry>Query related</entry>
<entry/>
<entry>interface related to Type C </entry>
</row>
<row>
<entry>Parameters</entry>
<entry/>
<entry>standard</entry>
</row>
<row>
<entry>Get Automatic</entry>
<entry>0x0F</entry>
<entry>Get parameters related to </entry>
</row>
<row>
<entry>read Parameters</entry>
<entry/>
<entry>automatic mode read</entry>
</row>
<row>
<entry>Set Automatic</entry>
<entry>0x10</entry>
<entry>Set parameters related to automatic </entry>
</row>
<row>
<entry>read Parameters</entry>
<entry/>
<entry>mode read</entry>
</row>
<row>
<entry>Vendor Specific</entry>
<entry>0x11-0x17</entry>
<entry>Vendor can be defined</entry>
</row>
<row>
<entry>Reserved</entry>
<entry>0x18-0x1F</entry>
<entry>reserved</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0088" num="0087">Referring to Table 3, the reader control/management category includes a get automatic read parameters command and a set automatic read parameters command for getting and setting commands related to an automatic read command. These commands operate according to preset parameters. These preset parameters include a read cycle indicating the number of times of performance of a read operation, and also include a read delay time indicating a delay time between read operations when the reader performs a read operation more than two times.</p>
<p id="p-0089" num="0088">[2.3] Tag Read Category</p>
<p id="p-0090" num="0089">A tag read category includes commands shown in Table 4 below. These commands are mainly used to read the specific ID of a tag (TID), a UII set (e.g., mCodes of MRF and EPC codes indicating things), and a user memory bank area.</p>
<p id="p-0091" num="0090">
<tables id="TABLE-US-00004" num="00004">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="63pt" align="left"/>
<colspec colname="2" colwidth="49pt" align="left"/>
<colspec colname="3" colwidth="105pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" rowsep="1">TABLE 4</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Code</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Value</entry>
<entry/>
</row>
<row>
<entry>Command Name</entry>
<entry>(Hexadecimal)</entry>
<entry>Description of Command</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Read Type B TID</entry>
<entry>0x21</entry>
<entry>Read 8th through 16th address </entry>
</row>
<row>
<entry/>
<entry/>
<entry>values and TID of ISO 18000-6B </entry>
</row>
<row>
<entry/>
<entry/>
<entry>Tag</entry>
</row>
<row>
<entry>Read Type C UII</entry>
<entry>0x22</entry>
<entry>Read UII block of ISO 18000-6C </entry>
</row>
<row>
<entry>Block</entry>
<entry/>
<entry>Tag (UII or UII Set and PC are </entry>
</row>
<row>
<entry/>
<entry/>
<entry>readed)</entry>
</row>
<row>
<entry>Read Type B User</entry>
<entry>0x23</entry>
<entry>Read user memory bank of ISO </entry>
</row>
<row>
<entry>Data</entry>
<entry/>
<entry>18000-6B Tag</entry>
</row>
<row>
<entry>Read Type C User</entry>
<entry>0x24</entry>
<entry>Read user memory bank of ISO </entry>
</row>
<row>
<entry>data</entry>
<entry/>
<entry>18000-6C Tag</entry>
</row>
<row>
<entry>Read Entire Type</entry>
<entry>0x25</entry>
<entry>Read all area of ISO 18000-6B </entry>
</row>
<row>
<entry>B Tag</entry>
<entry/>
<entry>Tag</entry>
</row>
<row>
<entry>Read Entire Type</entry>
<entry>0x26</entry>
<entry>Read all area of ISO 18000-6C </entry>
</row>
<row>
<entry>C Tag</entry>
<entry/>
<entry>Tag</entry>
</row>
<row>
<entry>Start Automatic</entry>
<entry>0x27</entry>
<entry>Perform automatic mode read </entry>
</row>
<row>
<entry>Read</entry>
<entry/>
<entry>operation (applicable to the above </entry>
</row>
<row>
<entry/>
<entry/>
<entry>6 commands)</entry>
</row>
<row>
<entry>Stop Automatic</entry>
<entry>0x28</entry>
<entry>Stop automatic mode read </entry>
</row>
<row>
<entry>Read</entry>
<entry/>
<entry>operation</entry>
</row>
<row>
<entry>Vendor Specific</entry>
<entry>0x29-0x37</entry>
<entry>Vendor can be defined</entry>
</row>
<row>
<entry>Reserved</entry>
<entry/>
<entry>reserved</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0092" num="0091">Referring to Table 4, the tag read category further includes commands for automatically reading a plurality of successive tags. The commands related to the automatic read operation include a start automatic read command and a stop automatic read command.</p>
<p id="p-0093" num="0092">The start automatic read command is configured to designate codes (0x21&#x2dc;0x26) of read commands to be repeated and a repeat cycle, which indicates which number of times a read operation of a read cycle designated in the set automatic read parameters command needs to be repeated. That is, the total number of times of a read operation of the RFID reader equals Read cycle&#xd7;Repeat cycle. When a repeat cycle is an invalid value, a response indicating a wrong value is generated in a result code. When a read operation has been performed by the repeat cycle or there is no tag to be read, the RFID reader automatically stops a read operation.</p>
<p id="p-0094" num="0093">The stop automatic read command is used to stop the read operation that is being performed by the start automatic read command.</p>
<p id="p-0095" num="0094">Most commands cannot be executed during the automatic read operation. If such a command is to be executed, the command is regarded as failed and the result code receives 0x0D of Automatic Read in Operation. Examples of commands executable during the automatic read operation are reset reader, get signal strength, set signal strength, and stop automatic read.</p>
<p id="p-0096" num="0095">Data obtained from an RFID tag by a tag read command are transmitted to the processor of the terminal through a notification or a response to a command. In the embodiment of the present invention, a buffer function of storing data obtained from a tag by a reader chip is set to be optional. However, when the buffer function needs to be implemented, a vendor-specific command code area of the additional function category must be used and the implementation must be based on the HAL API standards.</p>
<p id="p-0097" num="0096">[2.4] Tag Write Category</p>
<p id="p-0098" num="0097">A tag write category includes commands shown in Table 5 below. These commands are used to write an ID code, a user memory bank area, and additional information in the tag.</p>
<p id="p-0099" num="0098">
<tables id="TABLE-US-00005" num="00005">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="63pt" align="left"/>
<colspec colname="2" colwidth="49pt" align="left"/>
<colspec colname="3" colwidth="105pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" rowsep="1">TABLE 5</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Code</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Value </entry>
<entry/>
</row>
<row>
<entry>Command Name</entry>
<entry>(Hexadecimal)</entry>
<entry>Description of Command</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Write Type C UII</entry>
<entry>0x41</entry>
<entry>Write UII block of ISO 18000-</entry>
</row>
<row>
<entry>Block</entry>
<entry/>
<entry>6C Tag (UII set, PC and CRC </entry>
</row>
<row>
<entry/>
<entry/>
<entry>values must be written)</entry>
</row>
<row>
<entry>Write Type B User</entry>
<entry>0x42</entry>
<entry>Write user memory bank area of </entry>
</row>
<row>
<entry>Data</entry>
<entry/>
<entry>ISO 18000-6B Tag</entry>
</row>
<row>
<entry>Write Type C User</entry>
<entry>0x43</entry>
<entry>Write user memory bank area of </entry>
</row>
<row>
<entry>Data</entry>
<entry/>
<entry>ISO 18000-6C Tag</entry>
</row>
<row>
<entry>Write Entire Type</entry>
<entry>0x44</entry>
<entry>Write entire content of ISO </entry>
</row>
<row>
<entry>B Tag</entry>
<entry/>
<entry>18000-6B Tag</entry>
</row>
<row>
<entry>Write Entire Type</entry>
<entry>0x45</entry>
<entry>Write entire content of ISO </entry>
</row>
<row>
<entry>C Tag</entry>
<entry/>
<entry>18000-6C Tag</entry>
</row>
<row>
<entry>Vendor Specific</entry>
<entry>0x46-0x57</entry>
<entry>Vendor can be defined</entry>
</row>
<row>
<entry>Reserved</entry>
<entry>0x58-0x5F</entry>
<entry>reserved</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0100" num="0099">[2.5] Tag Kill Category</p>
<p id="p-0101" num="0100">A tag kill category includes commands shown in Table 6 below. These commands are used to kill (erase) the contents of a tag.</p>
<p id="p-0102" num="0101">
<tables id="TABLE-US-00006" num="00006">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="63pt" align="left"/>
<colspec colname="2" colwidth="77pt" align="left"/>
<colspec colname="3" colwidth="77pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" rowsep="1">TABLE 6</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Code</entry>
<entry/>
</row>
<row>
<entry>Command Name</entry>
<entry>Value (Hexadecimal)</entry>
<entry>Description of Command</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Kill Type c Tag</entry>
<entry>0x61</entry>
<entry>Kill Type C Tag</entry>
</row>
<row>
<entry>Vendor Specific</entry>
<entry>0x62-0x77</entry>
<entry>Vendor can be defined</entry>
</row>
<row>
<entry>Reserved</entry>
<entry>0x78-0x7F</entry>
<entry>reserved</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0103" num="0102">[2.6] Tag Lock Control Category</p>
<p id="p-0104" num="0103">A tag lock control category includes commands for controlling a lock function for preventing the contents of a tag to be changed or erased, which are shown in Table 7 below.</p>
<p id="p-0105" num="0104">
<tables id="TABLE-US-00007" num="00007">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="56pt" align="left"/>
<colspec colname="2" colwidth="56pt" align="left"/>
<colspec colname="3" colwidth="105pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" rowsep="1">TABLE 7</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Code Value</entry>
<entry/>
</row>
<row>
<entry>Command Name</entry>
<entry>(Hexadecimal)</entry>
<entry>Description of Command</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Lock Type B Tag</entry>
<entry>0x81</entry>
<entry>Control lock of ISO1800-6B Tag</entry>
</row>
<row>
<entry>Lock Type C Tag</entry>
<entry>0x82</entry>
<entry>Control lock of ISO 1800-6C Tag</entry>
</row>
<row>
<entry>Vendor Specific</entry>
<entry>0x83-0x97</entry>
<entry>Vendor can be defined</entry>
</row>
<row>
<entry>Reserved</entry>
<entry>0x98-0x9F</entry>
<entry>reserved</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0106" num="0105">A lock command is configured such that different commands are assigned to tags. Also, arguments necessary for the lock command are based on the air interface standards.</p>
<p id="p-0107" num="0106">[2.7] Additional Function Category</p>
<p id="p-0108" num="0107">An additional function category includes commands for additional functions, which are shown in Table 8 below.</p>
<p id="p-0109" num="0108">
<tables id="TABLE-US-00008" num="00008">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="63pt" align="left"/>
<colspec colname="2" colwidth="49pt" align="left"/>
<colspec colname="3" colwidth="105pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" rowsep="1">TABLE 8</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Code</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Value </entry>
<entry/>
</row>
<row>
<entry>Command Name</entry>
<entry>(Hexadecimal)</entry>
<entry>Description of Command</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Get Last Result</entry>
<entry>0xA1</entry>
<entry>Reader gets the last event</entry>
</row>
<row>
<entry>Stat Test Mode</entry>
<entry>0xA2</entry>
<entry>Convert mode of reader into test </entry>
</row>
<row>
<entry/>
<entry/>
<entry>mode</entry>
</row>
<row>
<entry>Stop Test Mode</entry>
<entry>0xA3</entry>
<entry>Stop test mode of reader</entry>
</row>
<row>
<entry>Stat Receive Test</entry>
<entry>0xA4</entry>
<entry>Start count of successfully-</entry>
</row>
<row>
<entry/>
<entry/>
<entry>received air interface packet to </entry>
</row>
<row>
<entry/>
<entry/>
<entry>measure receive sensitivity</entry>
</row>
<row>
<entry>Stop Receive Test</entry>
<entry>0xA5</entry>
<entry>Stop count of successfully-</entry>
</row>
<row>
<entry/>
<entry/>
<entry>received air interface packet for </entry>
</row>
<row>
<entry/>
<entry/>
<entry>measurement of receive sensitivity</entry>
</row>
<row>
<entry>Vendor Specific</entry>
<entry>0xA6-0xB7</entry>
<entry>Vendor can be defined</entry>
</row>
<row>
<entry>Reserved</entry>
<entry>0xB8-0xFE</entry>
<entry>reserved</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0110" num="0109">The additional function category includes convenience-providing functions other than basic contents for processing a tag by the reader. These include a filter function of the reader and commands for getting and setting the tag access status of the reader. The additional function category further includes commands for starting or ending a test mode. A start receive test command and a stop receive test command for measurement of receive sensitivity can be used only in the test mode. The test mode will be described in detail later.</p>
<p id="p-0111" num="0110">[2.8] Result Code</p>
<p id="p-0112" num="0111">A result code is used for a response to a command. The result code indicates results of both success and failure. For the case of Success, a code value of a corresponding command is inserted into the code field of the header of a response protocol message. For the case of Failure, a value of 0xFF is inserted. Also, an 8-bit result code is inserted into a payload data section. This facilitates discrimination between contents of errors when commands are incorrectly executed. A result code 0x00 indicates success, which is used in case that no separate result value exists when a command is successful. Table 9 below illustrates the types of results and corresponding codes.</p>
<p id="p-0113" num="0112">
<tables id="TABLE-US-00009" num="00009">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="77pt" align="left"/>
<colspec colname="2" colwidth="42pt" align="left"/>
<colspec colname="3" colwidth="98pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" rowsep="1">TABLE 9</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Error Type</entry>
<entry>Error Code</entry>
<entry>Description</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Success</entry>
<entry>0x00</entry>
<entry>Indicates success of command</entry>
</row>
<row>
<entry>Power Control Failure</entry>
<entry>0x01</entry>
<entry>Power control on/off </entry>
</row>
<row>
<entry/>
<entry/>
<entry>operation is failed</entry>
</row>
<row>
<entry>Connection control</entry>
<entry>0x02</entry>
<entry>Connection control operation </entry>
</row>
<row>
<entry>Failure</entry>
<entry/>
<entry>is failed</entry>
</row>
<row>
<entry>Cannot Get Reader Info</entry>
<entry>0x03</entry>
<entry>Reader ID cannot be set or got</entry>
</row>
<row>
<entry>Cannot Get Signal</entry>
<entry>0x04</entry>
<entry>Signal strength cannot be got</entry>
</row>
<row>
<entry>Strength</entry>
<entry/>
<entry/>
</row>
<row>
<entry>Signal Strength Control</entry>
<entry>0x05</entry>
<entry>Signal strength cannot be set</entry>
</row>
<row>
<entry>Failure</entry>
<entry/>
<entry/>
</row>
<row>
<entry>Reader Filter Control</entry>
<entry>0x06</entry>
<entry>Reader Filter cannot be </entry>
</row>
<row>
<entry>Failure</entry>
<entry/>
<entry>control</entry>
</row>
<row>
<entry>Cannot Get Region</entry>
<entry>0x07</entry>
<entry>Region information of reader </entry>
</row>
<row>
<entry/>
<entry/>
<entry>cannot be got</entry>
</row>
<row>
<entry>Region control Failure</entry>
<entry>0x08</entry>
<entry>Region of reader cannot be set</entry>
</row>
<row>
<entry>Read Failure</entry>
<entry>0x09</entry>
<entry>Read operation is failed</entry>
</row>
<row>
<entry>Automatic Read Failure</entry>
<entry>0x0A</entry>
<entry>Automatic mode read operation is failed</entry>
</row>
<row>
<entry>Automatic Read in</entry>
<entry>0x0B</entry>
<entry>Automatic read is already in </entry>
</row>
<row>
<entry>Operation</entry>
<entry/>
<entry>operation</entry>
</row>
<row>
<entry>Cannot Stop Automatic</entry>
<entry>0x0C</entry>
<entry>Automatic mode read cannot </entry>
</row>
<row>
<entry>Read</entry>
<entry/>
<entry>be stopped</entry>
</row>
<row>
<entry>Not in Automatic Mode</entry>
<entry>0x0D</entry>
<entry>Automatic read is not in </entry>
</row>
<row>
<entry/>
<entry/>
<entry>operation</entry>
</row>
<row>
<entry>Invalid Parameter</entry>
<entry>0x0E</entry>
<entry>Parameter is invalid</entry>
</row>
<row>
<entry>Cannot Get Automatic</entry>
<entry>0x0F</entry>
<entry>Automatic mode parameters </entry>
</row>
<row>
<entry>Parameters</entry>
<entry/>
<entry>cannot be got</entry>
</row>
<row>
<entry>Write Failure</entry>
<entry>0x10</entry>
<entry>Write operation is failed</entry>
</row>
<row>
<entry>Erasure Failure</entry>
<entry>0x11</entry>
<entry>Erase operation is failed</entry>
</row>
<row>
<entry>Kill Failure</entry>
<entry>0x12</entry>
<entry>Kill operation is failed</entry>
</row>
<row>
<entry>Lock Control Failure</entry>
<entry>0x13</entry>
<entry>Lock operation is failed</entry>
</row>
<row>
<entry>Cannot Get Last Result</entry>
<entry>0x14</entry>
<entry>Last event cannot be got</entry>
</row>
<row>
<entry>No Tag Detected</entry>
<entry>0x15</entry>
<entry>No tag is detected</entry>
</row>
<row>
<entry>Password not Match</entry>
<entry>0x16</entry>
<entry>Password does not match</entry>
</row>
<row>
<entry>Not Supported</entry>
<entry>0x17</entry>
<entry>Command is not supported</entry>
</row>
<row>
<entry>Command</entry>
<entry/>
<entry/>
</row>
<row>
<entry>Undefined command</entry>
<entry>0x18</entry>
<entry>Command is not defined</entry>
</row>
<row>
<entry>Cannot Reset Reader</entry>
<entry>0x19</entry>
<entry>Reader cannot be reset</entry>
</row>
<row>
<entry>Cannot Control Type B</entry>
<entry>0x1A</entry>
<entry>Air interface parameters </entry>
</row>
<row>
<entry>A/I Parameters</entry>
<entry/>
<entry>related to Type B</entry>
</row>
<row>
<entry/>
<entry/>
<entry>standard cannot be set or got</entry>
</row>
<row>
<entry>Cannot Control Type C</entry>
<entry>0x1B</entry>
<entry>Air interface parameters </entry>
</row>
<row>
<entry>A/I Parameters</entry>
<entry/>
<entry>related to Type C standard</entry>
</row>
<row>
<entry/>
<entry/>
<entry>cannot be set or got</entry>
</row>
<row>
<entry>No User Data</entry>
<entry>0x1C</entry>
<entry>User memory bank does not </entry>
</row>
<row>
<entry/>
<entry/>
<entry>exist</entry>
</row>
<row>
<entry>Reader is not in Test</entry>
<entry>0x1D</entry>
<entry>Reader is not in current test </entry>
</row>
<row>
<entry>Mode</entry>
<entry/>
<entry>mode</entry>
</row>
<row>
<entry>Test Mode Control</entry>
<entry>0x1E</entry>
<entry>Test mode control is failed</entry>
</row>
<row>
<entry>Failure</entry>
<entry/>
<entry/>
</row>
<row>
<entry>Automatic Read</entry>
<entry>0x1F</entry>
<entry>Automatic read is completed</entry>
</row>
<row>
<entry>Complete</entry>
<entry/>
<entry/>
</row>
<row>
<entry>No more Tags to Read</entry>
<entry>0x20</entry>
<entry>No more tags remain to be red</entry>
</row>
<row>
<entry>Vendor Specific</entry>
<entry>0x30-0xDF</entry>
<entry/>
</row>
<row>
<entry>Reserved</entry>
<entry>0xE0-0xFF</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0114" num="0113">[2.9] Vendor-Specific Command and Response</p>
<p id="p-0115" num="0114">In addition to the commands proposed in the present invention, vendor-specific commands of an RFID reader manufacturer may be further included in all the categories described above. Preferably, these vendor-specific commands use code values of a vendor-specific area in accordance with the categories proposed in the present invention. For example, when a specific command corresponding to a tag read function needs to be added, it preferably uses a code value of 0x29&#x2dc;0x37 that is a vendor-specific area of a tag read category.</p>
<p id="p-0116" num="0115">[2.10] Notification</p>
<p id="p-0117" num="0116">A notification is a protocol message that is transmitted from the RFID reader to the processor of the terminal. Unlike a response message, the notification protocol message is independent of a command. The notification is mainly used as a response for indicating a result for an operation repeated in an automatic mode, and is used for critical errors generated in the RFID reader.</p>
<p id="p-0118" num="0117">In the embodiment of the present invention, the notification protocol message may have the same format as the response protocol message. However, for example, a value of 0x02 may be used in a message type field to discriminate the notification protocol message from the response protocol message.</p>
<p id="p-0119" num="0118">In addition, when a critical error is generated in the reader, the notification may be used to inform the processor of the error. In this case, a format may be identical to that of a command containing the error, which is identical to what is designated as a notification in a message type field. The critical errors are not defined in the present invention, but may be those defined by a vendor. An error that needs to be transmitted by a notification may be defined using a vendor-specific area of a result code.</p>
<p id="p-0120" num="0119">[2.11] Compatibility with HAL API Standards</p>
<p id="p-0121" num="0120">Tables 10 and 11 below show relationships between commands defined in the HAL API standards and the mobile reader protocol commands proposed in the present invention. One HAL API command may correspond to several of the mobile reader protocol commands, and vice versa. A driver must be implemented in accordance with the relationships.</p>
<p id="p-0122" num="0121">For example, a MH_rfidReportReaderStatus command is implemented using a considerably large number of mobile reader protocol commands. In this case, the implemented is preferably made by including a status parameter in the driver. When the results of a performed mobile reader protocol are stored in the status parameter, it is possible to reduce the number of reader protocol commands that needs to be performed when the MH_rfidReportReaderStatus command is received. In addition, since a return value for an HAL API function must be given, the corresponding results must be stored in the status parameter.</p>
<p id="p-0123" num="0122">Among the HAL API commands, commands related to control of a buffer and management of a filter may be selectively implemented. The present invention assumes that the buffer and the filter may exist in any one of the HAL or the mobile reader chip. Accordingly, in order to implement a buffer function or a filter function in a reader chip, a mobile reader protocol command must be implemented such that the relationship with an HAL API command is proper. In this case, the mobile reader protocol may use a code value of a vendor-specific command field.</p>
<p id="p-0124" num="0123">
<tables id="TABLE-US-00010" num="00010">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="35pt" align="left"/>
<colspec colname="2" colwidth="91pt" align="left"/>
<colspec colname="3" colwidth="91pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" rowsep="1">TABLE 10</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>HAL API Standard</entry>
<entry>Mobile Reader Protocol</entry>
</row>
<row>
<entry>Type</entry>
<entry>Command</entry>
<entry>Standard Command</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Reader</entry>
<entry>MH_rfidPowerOnMH_rfid</entry>
<entry>Reader Power ControlReader </entry>
</row>
<row>
<entry/>
<entry/>
<entry>Power Control</entry>
</row>
<row>
<entry>Control</entry>
<entry>PowerOffMH_rfidOpen</entry>
<entry>Reader Connection </entry>
</row>
<row>
<entry/>
<entry>ReaderMH_rfidCloseReader</entry>
<entry>ControlReader</entry>
</row>
<row>
<entry/>
<entry>MH_rfidResetReaderMH_</entry>
<entry>Connection controlReset </entry>
</row>
<row>
<entry/>
<entry>rfidSetRegionMH_rfidGet</entry>
<entry>ReaderReader</entry>
</row>
<row>
<entry/>
<entry>RegionMH_rfidSetRFStrength</entry>
<entry>Connection ControlSet </entry>
</row>
<row>
<entry/>
<entry>MH_rfidGetRFStrength</entry>
<entry>RegionGet RegionSet</entry>
</row>
<row>
<entry/>
<entry>MH_rfidGetManufacturer</entry>
<entry>Signal StrengthGet Signal </entry>
</row>
<row>
<entry/>
<entry>MH_rfidGetModelMH_rfidis</entry>
<entry>StrengthGet Reader</entry>
</row>
<row>
<entry/>
<entry>OpenReaderMH_rfidisBusy</entry>
<entry>InfoGet Reader InfoProcess </entry>
</row>
<row>
<entry/>
<entry>ReaderMH_rfidSetQMH</entry>
<entry>in driver: Response</entry>
</row>
<row>
<entry/>
<entry>_rfidGetQMH_rfidSetRead</entry>
<entry>to Reader Connection </entry>
</row>
<row>
<entry/>
<entry>CycleMH_rfidGetRead</entry>
<entry>ControlProcess in driver:</entry>
</row>
<row>
<entry/>
<entry>CycleMH_rfidSetReadDelay</entry>
<entry>Check of automatic reading </entry>
</row>
<row>
<entry/>
<entry>timeMH_rfidGetReadDelay</entry>
<entry>or notSet Type C</entry>
</row>
<row>
<entry/>
<entry>time</entry>
<entry>A/I Query Related </entry>
</row>
<row>
<entry/>
<entry/>
<entry>ParametersGet Type C A/I</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Query Related ParametersSet </entry>
</row>
<row>
<entry/>
<entry/>
<entry>Automatic Read</entry>
</row>
<row>
<entry/>
<entry/>
<entry>ParametersGet Automatic </entry>
</row>
<row>
<entry/>
<entry/>
<entry>Read ParametersSet</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Automatic Read </entry>
</row>
<row>
<entry/>
<entry/>
<entry>ParametersGet Automatic</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Read Parameters</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0125" num="0124">
<tables id="TABLE-US-00011" num="00011">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="56pt" align="left"/>
<colspec colname="2" colwidth="91pt" align="left"/>
<colspec colname="3" colwidth="70pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" rowsep="1">TABLE 11</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry/>
<entry>Mobile </entry>
</row>
<row>
<entry/>
<entry>HAL API Standard</entry>
<entry>Reader Protocol </entry>
</row>
<row>
<entry>Type</entry>
<entry>Command</entry>
<entry>Standard Command</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>TagControl</entry>
<entry>MH_rfidReadTIDCMH_rfid</entry>
<entry>Read Type C UII </entry>
</row>
<row>
<entry/>
<entry>ReadUIISetCMH_rfidRead</entry>
<entry>BlockRead Type C </entry>
</row>
<row>
<entry/>
<entry>UIIBlockCMH_rfidReadUser</entry>
<entry>UII BlockRead Type </entry>
</row>
<row>
<entry/>
<entry>DataCMH_rfidStopReadMH_</entry>
<entry>C UII BlockRead </entry>
</row>
<row>
<entry/>
<entry>rfiReadUIISetBMH_rfidRead</entry>
<entry>Type C User DataStop </entry>
</row>
<row>
<entry/>
<entry>UserDataBMH_rfidWriteUser</entry>
<entry>Automatic ReadRead </entry>
</row>
<row>
<entry/>
<entry>DataBMH_rfidLockBMH_rfid</entry>
<entry>Type B User </entry>
</row>
<row>
<entry/>
<entry>WriteUIISetCMH_rfidWrite</entry>
<entry>DataRead Type B </entry>
</row>
<row>
<entry/>
<entry>UIIBlockCMH_rfidWriteUser</entry>
<entry>User DataWrite</entry>
</row>
<row>
<entry/>
<entry>DataCMH_rfidLockCMH_rfid</entry>
<entry>Type B User </entry>
</row>
<row>
<entry/>
<entry>UnlockCMH_rfidKillTagC</entry>
<entry>DataLock Type B </entry>
</row>
<row>
<entry/>
<entry/>
<entry>TagWrite Type C UII </entry>
</row>
<row>
<entry/>
<entry/>
<entry>BlockWrite Type C </entry>
</row>
<row>
<entry/>
<entry/>
<entry>UII BlockWrite Type </entry>
</row>
<row>
<entry/>
<entry/>
<entry>C User DataLock </entry>
</row>
<row>
<entry/>
<entry/>
<entry>Type C TagLock Type </entry>
</row>
<row>
<entry/>
<entry/>
<entry>C TagKill Type C Tag</entry>
</row>
<row>
<entry>BufferControl</entry>
<entry>MH_rfidCreateBufferMH_rfid</entry>
<entry>Cannot be supported </entry>
</row>
<row>
<entry/>
<entry>DestroyBufferMH_rfidRead</entry>
<entry>by mobile reader</entry>
</row>
<row>
<entry/>
<entry>BufferMH_rfidWriteBuffer</entry>
<entry>protocol but can be </entry>
</row>
<row>
<entry/>
<entry>MH_rfidDeleteBufferMH_rfid</entry>
<entry>implemented in </entry>
</row>
<row>
<entry/>
<entry>ClearBufferMH_rfidGetNum</entry>
<entry>vendor-</entry>
</row>
<row>
<entry/>
<entry>BufferMH_rfidGetMaxNum</entry>
<entry>specific fashion</entry>
</row>
<row>
<entry/>
<entry>BufferMH_rfidSortBufferMH</entry>
<entry/>
</row>
<row>
<entry/>
<entry>_rfidValidateBuffer</entry>
<entry/>
</row>
<row>
<entry>FilterControl</entry>
<entry>MH_rfidAddFilterMH_rfid</entry>
<entry>Cannot be supported </entry>
</row>
<row>
<entry/>
<entry>DeleteFilterMH_rfidEnable</entry>
<entry>by mobile reader</entry>
</row>
<row>
<entry/>
<entry>FilterMH_rfidDisableFilter</entry>
<entry>protocol but can be </entry>
</row>
<row>
<entry/>
<entry/>
<entry>implemented in </entry>
</row>
<row>
<entry/>
<entry/>
<entry>vendor-</entry>
</row>
<row>
<entry/>
<entry/>
<entry>specific fashion</entry>
</row>
<row>
<entry>StatusReport</entry>
<entry>MH_rfidReportReaderStatus</entry>
<entry>Process in reader: </entry>
</row>
<row>
<entry/>
<entry/>
<entry>Status parameters are</entry>
</row>
<row>
<entry/>
<entry/>
<entry>stored and processed </entry>
</row>
<row>
<entry/>
<entry/>
<entry>in case of Power and</entry>
</row>
<row>
<entry/>
<entry/>
<entry>OpenGet Automatic </entry>
</row>
<row>
<entry/>
<entry/>
<entry>Read ParametersGet</entry>
</row>
<row>
<entry/>
<entry/>
<entry>RegionGet Signal </entry>
</row>
<row>
<entry/>
<entry/>
<entry>StrengthGet Reader </entry>
</row>
<row>
<entry/>
<entry/>
<entry>Information Get Type </entry>
</row>
<row>
<entry/>
<entry/>
<entry>C A/I Query Related</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Parameters</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0126" num="0125">[3] Details of Command, Response, and Notification</p>
<p id="p-0127" num="0126">This section [3] describes details of the commands, the responses, and the notifications that are stated above. The following descriptions illustrate arguments needed by the commands and the responses, their types, and notifications. Also illustrated are the relationship between the abovementioned protocol format and the command/response/the notification, and protocol streams for representing them.</p>
<p id="p-0128" num="0127">[3.1] Reader Control/Management Category</p>
<p id="p-0129" num="0128">[3.1.2] Reader Power Control</p>
<p id="p-0130" num="0129">A reader power control command is used to control turning on/off power supplied to the hardware of the RFID reader. Power is supplied to the reader in the on state, while no power is supplied to the reader in the off state.</p>
<p id="p-0131" num="0130">The reader power control command is constructed to include a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x01 indicating reader power control. The payload type may be represented by Payload Type A. The argument is 8-bit power state information, which may be represented by 0xFF in an on state and by 0x00 in an off state.</p>
<p id="p-0132" num="0131"><figref idref="DRAWINGS">FIG. 7</figref> illustrates the structure of a protocol message in a power on state. Specifically, <figref idref="DRAWINGS">FIG. 7</figref> illustrates values of a preamble field, a message type field, a code field, a payload field MSB, a payload field LSB, an argument field, and an end mark field.</p>
<p id="p-0133" num="0132">A response to the reader power control command is constructed to include a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x01 for the case of Success, and by 0xFF for the case of Failure. The payload type may be represented by Payload Type A. The argument may be represented by a result code 0x00 indicating success and by a result code 0x01 indicating power control failure.</p>
<p id="p-0134" num="0133"><figref idref="DRAWINGS">FIG. 8</figref> illustrates the structure of a protocol message for a reader power control response for the case of Success. Specifically, <figref idref="DRAWINGS">FIG. 8</figref> illustrates values of a preamble field, a message type field, a code field, a payload field MSB, a payload field LSB, an argument field, and an end mark field.</p>
<p id="p-0135" num="0134">[3.1.2] Reader Connection Control</p>
<p id="p-0136" num="0135">A reader connection control command is used to connect/disconnect the processor to/from the reader. When the processor is connected to the reader, the reader can receive and process all commands. On the other hand, when the processor is disconnected from the reader, the reader can process only power/connection control commands. When the reader was supplied with power but cannot be connected, the minimum power is supplied.</p>
<p id="p-0137" num="0136">The reader connection control command is constructed to include a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x02 indicating reader connection control. The payload type may be represented by Payload Type A. The argument is 8-bit reader connection state information, which may be represented by 0xFF in case of connection and by 0x00 in case of disconnection.</p>
<p id="p-0138" num="0137"><figref idref="DRAWINGS">FIG. 9</figref> illustrates the structure of a protocol message in a connection state. Specifically, <figref idref="DRAWINGS">FIG. 9</figref> illustrates values of a preamble field, a message type field, a code field, a payload field MSB, a payload field LSB, an argument field, and an end mark field.</p>
<p id="p-0139" num="0138">A response to the reader connection control command is constructed to include a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x02 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A. The argument may be represented by a result code 0x00 indicating success and by a result code 0x02 indicating Connection Control Failure.</p>
<p id="p-0140" num="0139"><figref idref="DRAWINGS">FIG. 10</figref> illustrates the structure of a protocol message for a reader connection control response for the case of Success. Specifically, <figref idref="DRAWINGS">FIG. 10</figref> illustrates values of a preamble field, a message type field, a code field, a payload field MSB, a payload field LSB, an argument field, and an end mark field.</p>
<p id="p-0141" num="0140">[3.1.3] Command for Getting Information of the Reader (Get Reader Information)</p>
<p id="p-0142" num="0141">A get reader Information command is used to get information from the reader. The information includes a model name, an S/N, a manufacturer, a use frequency, and the type of a tag supported.</p>
<p id="p-0143" num="0142">The get reader information control command is constructed to include a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x03 indicating the get reader information command. The payload type may be represented by Payload Type A. The argument is an 8-bit information type data indicating the type of information to be requested from the reader, which may include a reader model name (0x00), a reader S/N (0x01), a reader manufacturer (0x02), a reader use frequency (0x03), and the type (0x04) of a tag supported by the reader.</p>
<p id="p-0144" num="0143"><figref idref="DRAWINGS">FIG. 11</figref> illustrates the structure of a protocol message when the reader manufacturer is requested. Specifically, <figref idref="DRAWINGS">FIG. 11</figref> illustrates values of a preamble field, a message type field, a code field, a payload field MSB, a payload field LSB, an argument field, and an end mark field.</p>
<p id="p-0145" num="0144">A response to the get reader information command is constructed to include a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x03 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type B in case of model name, S/N, manufacturer and frequency, by Payload Type A in case of the tag type supported by the reader, and by Payload Type A in case of command failure. The argument may be represented by a variable-length corresponding string in case of model name, S/N, manufacturer and frequency, by an 8-bit value 00000001 (ISO 18000-6B) or 00000010 (ISO 18000-6C) in case of the tag type supported by the reader, by &#x2018;Bit OR&#x2019; in case of supporting plurality, and by a result code 0x03 indicating Cannot Get Reader Info in case of command failure.</p>
<p id="p-0146" num="0145"><figref idref="DRAWINGS">FIG. 12</figref> illustrates the structure of a protocol message for a get reader information response when the manufacture is &#x2018;LC ELECTRONICS&#x2019;. Specifically, <figref idref="DRAWINGS">FIG. 12</figref> illustrates values of a preamble field, a message type field, a code field, a payload field MSB, a payload field LSB, an argument field, and an end mark field. <figref idref="DRAWINGS">FIG. 13</figref> illustrates a response when the tag type supported by the reader is 18000-B/C.</p>
<p id="p-0147" num="0146">[3.1.4] Command for Getting an RF Signal Strength of the Reader (Get Signal Strength)</p>
<p id="p-0148" num="0147">A get signal strength command is used to get a currently-set RF signal strength of an RFID reader. The signal strength can be represented in percentage, and the maximum signal strength the reader can provide can be regarded as 100%.</p>
<p id="p-0149" num="0148">The get signal strength command includes a message type and a code, but does not include a payload type and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x04 indicating Get Signal Strength.</p>
<p id="p-0150" num="0149"><figref idref="DRAWINGS">FIG. 14</figref> illustrates the structure of a protocol message for a get signal strength command. Specifically, <figref idref="DRAWINGS">FIG. 14</figref> illustrates values of a preamble field, a message type field, a code field, a payload field MSB, a payload field LSB, and an end mark field.</p>
<p id="p-0151" num="0150">A response to the get signal strength command is constructed to include a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x04 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A. The argument may be represented by 0&#x2dc;100 (0x00&#x2dc;0x64) indicating the signal strength in percentage, and by a result code 0x04 indicating Cannot Get Signal Strength.</p>
<p id="p-0152" num="0151"><figref idref="DRAWINGS">FIG. 15</figref> illustrates the structure of a protocol message for a Get Signal Strength response for the case of Success when the signal strength is 75%. Specifically, <figref idref="DRAWINGS">FIG. 15</figref> illustrates values of a preamble field, a message type field, a code field, a payload field MSB, a payload field LSB, an argument field, and an end mark field.</p>
<p id="p-0153" num="0152">[3.1.5] Command for Setting an RF Signal Strength of the Reader (Set Signal Strength)</p>
<p id="p-0154" num="0153">A set signal strength command is used to set an RF signal strength of the reader.</p>
<p id="p-0155" num="0154">The signal strength can be represented in percentage, and the maximum signal strength the reader can provide can be regarded as 100%.</p>
<p id="p-0156" num="0155">The set signal strength command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x05 indicating Set Signal Strength. The payload type may be represented by Payload Type A. The argument may be represented by 0x00&#x2dc;0x64 (0&#x2dc;100) indicating an 8-bit signal strength value.</p>
<p id="p-0157" num="0156"><figref idref="DRAWINGS">FIG. 16</figref> illustrates the structure of a protocol message for a set signal strength command when the signal strength is 50%. Specifically, <figref idref="DRAWINGS">FIG. 16</figref> illustrates values of a preamble field, a message type field, a code field, a payload field MSB, a payload field LSB, an argument field, and an end mark field.</p>
<p id="p-0158" num="0157">A response to the set signal strength command is constructed to include a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x05 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A. The argument may be represented by a result code 0x00 indicating success, and by a result code 0x04 indicating Signal Strength Control Failure.</p>
<p id="p-0159" num="0158"><figref idref="DRAWINGS">FIG. 17</figref> illustrates the structure of a protocol message for a get Signal Strength response for the case of Success. Specifically, <figref idref="DRAWINGS">FIG. 17</figref> illustrates values of a preamble field, a message type field, a code field, a payload field MSB, a payload field LSB, an argument field, and an end mark field.</p>
<p id="p-0160" num="0159">[3.1.6] Command for Getting Region/Nation Information Set in the Reader (Get Region)</p>
<p id="p-0161" num="0160">A get region command is used to get region/nation information set in the reader. That is, since the radio wave standard the RFID reader can use is different according to nations and regions, the get region command is used to get such region/nation information.</p>
<p id="p-0162" num="0161">The get region command includes a message type and a code, but does not include a payload type and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x06 indicating Get Region.</p>
<p id="p-0163" num="0162"><figref idref="DRAWINGS">FIG. 18</figref> illustrates the structure of a protocol message for the get region command. Specifically, <figref idref="DRAWINGS">FIG. 18</figref> illustrates values of a preamble field, a message type field, a code field, a payload field MSB, a payload field LSB, and an end mark field.</p>
<p id="p-0164" num="0163">A response to the get region command is constructed to include a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x06 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A. The argument may be represented by an 8-bit value indicating a region or a nation set in the reader, and by a result code 0x07 indicating Cannot Get Region. For example, Korea, America, Europe, Japan, and China may be represented by 0x01, 0x02, 0x04, 0x08, and 0x10, respectively.</p>
<p id="p-0165" num="0164"><figref idref="DRAWINGS">FIG. 19</figref> illustrates the structure of a protocol message for a get region response when a region set in the reader is Korea. Specifically, <figref idref="DRAWINGS">FIG. 19</figref> illustrates values of a preamble field, a message type field, a code field, a payload field MSB, a payload field LSB, an argument field, and an end mark field.</p>
<p id="p-0166" num="0165">[3.1.7] Command for Setting Region/Nation Information in the Reader (Set Region)</p>
<p id="p-0167" num="0166">A set region command is used to set region/nation information in the reader. That is, since the radio wave standard the RFID reader can use is different according to nations and regions, the set region command is used to set such region/nation information.</p>
<p id="p-0168" num="0167">The set region command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x07 indicating Set Region. The payload type may be represented by an 8-bit value indicating a region set in the reader, which is identical to that of Get Region.</p>
<p id="p-0169" num="0168"><figref idref="DRAWINGS">FIG. 20</figref> illustrates the structure of a protocol message for the set region command when a nation set in the reader is Korea, which may include values of a preamble field, a message type field, a code field, a payload field MSB, a payload field LSB, an argument field, and an end mark field.</p>
<p id="p-0170" num="0169">A response to the set region command is constructed to include a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x07 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A. The argument may be represented by a result code 0x00 indicating success and by a result code 0x08 indicating Region Control Failure.</p>
<p id="p-0171" num="0170"><figref idref="DRAWINGS">FIG. 21</figref> illustrates the structure of a protocol message for a set region response when a region set in the reader is Korea. Specifically, <figref idref="DRAWINGS">FIG. 21</figref> illustrates values of a preamble field, a message type field, a code field, a payload field MSB, a payload field LSB, an argument field, and an end mark field.</p>
<p id="p-0172" num="0171">[3.1.8] Reset Reader</p>
<p id="p-0173" num="0172">A reset reader command is used to promptly stop all operations of the reader and initialize the reader. Upon completion of the initialization, a response to the reset reader command is transmitted to the reader. Right after execution of the reset reader command, the aforementioned reader connection control command must be used to connect the reader since the reader is initialized to a state where only power is supplied.</p>
<p id="p-0174" num="0173">The reset reader command includes a message type and a code, but does not include a payload and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x08 indicating Reset Reader.</p>
<p id="p-0175" num="0174"><figref idref="DRAWINGS">FIG. 22</figref> illustrates the structure of a protocol message for the reset reader command, which may include values of a preamble field, a message type field, a code field, a payload field MSB, a payload field LSB, and an end mark field.</p>
<p id="p-0176" num="0175">A response to the reset reader command is constructed to include a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x08 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A. The argument may be represented by a result code 0x00 indicating success and by a result code 0x19 indicating Cannot Reset Reader.</p>
<p id="p-0177" num="0176"><figref idref="DRAWINGS">FIG. 23</figref> illustrates the structure of a protocol message for a response to the reset reader command in case of Success. Specifically, <figref idref="DRAWINGS">FIG. 23</figref> illustrates values of a preamble field, a message type field, a code field, a payload field MSB, a payload field LSB, an argument field, and an end mark field.</p>
<p id="p-0178" num="0177">[3.1.9] Command for Getting Air Interface Parameters (Get Type B A/I Parameters)</p>
<p id="p-0179" num="0178">A get type B A/I parameters command is used to get air interface (A/I) parameters related to the ISO 18000-6B standards. For example, these A/I parameters may be an modulation index (MI), a byte mask (BM), and an address. The get type B A/I parameters command includes a message type and a code, but does not include a payload type and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x09 indicating Get Type B A/I Parameters. <figref idref="DRAWINGS">FIG. 24</figref> illustrates the structure of a protocol message for the get type B A/I parameters command, which includes values of a preamble field, a message type field, a code field, a payload field MSB, a payload field LSB, an argument, and an end mark field.</p>
<p id="p-0180" num="0179">A response to the get type B A/I parameters command is constructed to include a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x09 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type C in case of Success, and by Payload Type A in case of Failure.</p>
<p id="p-0181" num="0180">In case of Success, the argument represents a modulation index, a byte mask, and an address. The modulation index may be represented by an 8-bit value, which determines the ISO 18000-6B modulation scheme. That is, MI=18% (0x00), MI=100% (0xFF), and the like are represented. The byte mask may be represented by an 8-bit value, which is an 8-bit byte mask value defined in the ISO 18000-6B standards to determine which bit of one byte is compared. The address may be represented by an 8-bit value, which is an address defined in the ISO 18000-6B standards to determine which portion of a tag is compared. In case of Failure, the address may be represented by a result code 0x1A indicating Cannot Control Type B A/I Parameters and a result code 0x17 indicating Not Supported Command.</p>
<p id="p-0182" num="0181"><figref idref="DRAWINGS">FIG. 25</figref> illustrates the structure of a response protocol message for the get type B A/I parameters command. Here, MI=18%, BM=0xFF, and Address=0xFF.</p>
<p id="p-0183" num="0182">[3.1.10] Command for Setting A/I Parameters (Set Type B A/I Parameters)</p>
<p id="p-0184" num="0183">A set type B A/I parameters command is used to A/I parameters related to the ISO 18000-6B standards. The set type B A/I parameters command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x0A indicating Set Type B A/I Parameters. The payload type may be represented by Payload Type C.</p>
<p id="p-0185" num="0184">The argument represents a modulation index, a byte mask, and an address. The modulation index may be represented by an 8-bit value, which determines the ISO 18000-6B modulation scheme. That is, MI=18% (0x00), MI=100% (0xFF), and the like are represented. The byte mask may be represented by an 8-bit value, which is an 8-bit byte mask value defined in the ISO 18000-6B standards to determine which bit of one byte is compared. The address may be represented by an 8-bit value, which is an address defined in the ISO 18000-6B standards to determine which portion of a tag is compared.</p>
<p id="p-0186" num="0185"><figref idref="DRAWINGS">FIG. 26</figref> illustrates the structure of a protocol message for the set type B A/I parameters command, wherein MI=18%, BM=0xFF, and Address=0xFF.</p>
<p id="p-0187" num="0186">A response to the set type B A/I parameters command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x0A in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A.</p>
<p id="p-0188" num="0187">The argument may be represented by a result code 0x00 in case of Success, by a result code 0x1A in case of Cannot Control Type B A/I Parameters, and by 0x17 in case of Not Supported Command.</p>
<p id="p-0189" num="0188"><figref idref="DRAWINGS">FIG. 27</figref> illustrates the structure of a response protocol message for the case of Success.</p>
<p id="p-0190" num="0189">[3.1.11] Command for Getting A/I Select Parameters (Get Type C A/I Select Parameters)</p>
<p id="p-0191" num="0190">A get type C A/I select parameters command is used to get A/I select parameters related to the ISO 18000-6C standards. The get type C A/I select parameters command includes a message type and a code, but does not include a payload type and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x0B indicating Get Type C A/I Select Parameters.</p>
<p id="p-0192" num="0191"><figref idref="DRAWINGS">FIG. 28</figref> illustrates the structure of a protocol message for the get type C A/I select parameters command.</p>
<p id="p-0193" num="0192">A response to the get type C A/I select parameters command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x0B in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type D, and by Payload Type A in case of Failure.</p>
<p id="p-0194" num="0193">In case of Failure, the argument may be represented by a result code 0x1B. In case of Success, the argument may be represented by a 3-bit target value to which a parameter is applied [Inventoried S0(000), Inventoried S1(001), Inventoried S2(010), Inventoried S3(011), SL(100)], a 3-bit action value defined in Type C, a 2-bit value indicating a memory bank of a tag [RFU(00), UII(01), TID(10), User(11)], a 32-bit start (or bit) address pointer of a tag memory to be compared, an 8-bit length value of the tag memory to be compared, a 1-bit truncated flag representing Enable(1) and Disable(0), a 7-bit RFU (Reserved for Further) (use a reserved value of 0000000), and a bit mask (0&#x2dc;255 bit) defined in Type C.</p>
<p id="p-0195" num="0194"><figref idref="DRAWINGS">FIG. 29</figref> illustrates the structure of a response protocol message to the Get Type C A/I Select Parameters command in case that Target=S0, Action=assert SL or inventoried&#x2192;A, MB=User, Pointer=0x000000FF, Length=0x20, T=0, and Mask=11111111111111110000000000000000.</p>
<p id="p-0196" num="0195">[3.1.12] Command for Setting A/I Select Parameters (Set Type C A/I Select Parameters)</p>
<p id="p-0197" num="0196">A set type C A/I select parameters command is used to set A/I select parameters related to the ISO 18000-6C standards. The set type C A/I select parameters command includes a message type, a code, a payload type, and an argument.</p>
<p id="p-0198" num="0197">The message type may be represented by 0x00 indicating a command. The code may be represented by 0x0C indicating Set Type C A/I Select Parameters. The payload type may be represented by Payload Type D.</p>
<p id="p-0199" num="0198">The argument may be represented by a 3-bit target value to which a parameter is applied [Inventoried S0(000), Inventoried S1(001), Inventoried S2(010), Inventoried S3(011), SL(100)], a 3-bit action value defined in Type C, a 2-bit value indicating a memory bank of a tag [RFU(00), UII(01), TID(10), User(11)], a 32-bit start (or bit) address pointer of a tag memory to be compared, an 8-bit length value of the tag memory to be compared, a 1-bit truncated flag representing Enable(1) and Disable(0), a 7-bit RFU (use a reserved value of 0000000), and a bit mask (0&#x2dc;255 bit) defined in Type C.</p>
<p id="p-0200" num="0199"><figref idref="DRAWINGS">FIG. 30</figref> illustrates the structure of a protocol message for the set type C A/I select parameters command in case that Target=S0, Action=assert SL or inventoried&#x2192;A, MB=User, Pointer=0x000000FF, Length=0x20, T=0, and Mask=11111111111111110000000000000000.</p>
<p id="p-0201" num="0200">A response to the set type C A/I select parameters command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x0C in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A.</p>
<p id="p-0202" num="0201">The argument may be represented by a result code 0x00 in case of Success, and by a result code 0x1B in case of Cannot Control Type C A/I Parameters.</p>
<p id="p-0203" num="0202"><figref idref="DRAWINGS">FIG. 31</figref> illustrates the structure of a response protocol message to the Set Type C A/I Select Parameters command.</p>
<p id="p-0204" num="0203">[3.1.13] Command for Getting A/I Query-Related Parameters (Get Type C A/I Query-Related Parameters)</p>
<p id="p-0205" num="0204">A get type C A/I query-related parameters command is used to get A/I query-related parameters related to the ISO 18000-6C standards.</p>
<p id="p-0206" num="0205">The get type C A/I query-related parameters command includes a message type and a code, but does not include a payload type and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x0D indicating Get Type C A/I Query-related Parameters. <figref idref="DRAWINGS">FIG. 32</figref> illustrates the structure of a protocol message for the get type C A/I query-related parameters command.</p>
<p id="p-0207" num="0206">A response to the get type C A/I query-related parameters command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x0D in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type E in case of Success, and by Payload Type A in case of Failure. In case of Cannot Control Type C A/I Parameters, the argument may be represented by a result code 0x1B.</p>
<p id="p-0208" num="0207">In case of Success, the argument may be represented by a 1-bit value indicating DR (TRcal divide ratio) (if DR is 8 or 64/3, the 1-bit value is set to &#x2018;0&#x2019; or &#x2018;1&#x2019;, respectively), a 2-bit value M indicating the number of cycles per symbol (if the number of cycles is 1, 2, 4, or 8, M is set to &#x2018;00&#x2019;, &#x2018;01&#x2019;, &#x2018;10&#x2019;, or &#x2018;11&#x2019;, respectively), a 1-bit Trex value (if Pilot Tone exists, the value is set to &#x2018;1&#x2019;; if not, the value is set to &#x2018;0&#x2019;), a 2-bit Sel value (A11:&#x2018;00&#x2019; or &#x2018;01&#x2019;; &#x2dc;SL:&#x2018;10&#x2019;; and SL:&#x2018;11&#x2019;), a 2-bit session value (S0:&#x2018;00&#x2019;; S1:&#x2018;01&#x2019;; S2:&#x2018;10&#x2019;; and S3:&#x2018;11&#x2019;), a 1-bit target value (A:&#x2018;0&#x2019;; and B: &#x2018;1&#x2019;), a 4-bit value Q indicating the number of slots per round, and a 3-bit UpDn value (if Q is unchanged, it is set to &#x2018;000&#x2019;; if Q=Q+1, Q is set to &#x2018;110&#x2019;; and if Q=Q&#x2212;1, Q is set to &#x2018;011&#x2019;).</p>
<p id="p-0209" num="0208"><figref idref="DRAWINGS">FIG. 33</figref> illustrates the structure of a response protocol message to the get type C A/I query-related parameters command for the case where DR=8, M=1, Trex=no pilot tone, Sel=A11, Session=S0, Target=A, Q=8, and UpDn=not changed.</p>
<p id="p-0210" num="0209">[3.1.14] Command for Setting A/I Query-Related Parameters (Set Type C A/I Query-Related Parameters)</p>
<p id="p-0211" num="0210">A set type C A/I query-related parameters command is used to set A/I query-related parameters related to the ISO 18000-6C standards.</p>
<p id="p-0212" num="0211">The set type C A/I query-related parameters command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x0E indicating Set Type C A/I Query-related Parameters. The payload type may be represented by Payload Type E. The argument may be represented by a 1-bit value indicating DR (TRcal divide ratio) (if DR is 8 or 64/3, the 1-bit value is set to &#x2018;0&#x2019; or &#x2018;1&#x2019;, respectively), a 2-bit value M indicating the number of cycles per symbol (if the number of cycles is 1, 2, 4, or 8, M is set to &#x2018;00&#x2019;, &#x2018;01&#x2019;, &#x2018;10&#x2019;, or &#x2018;11&#x2019;, respectively), a 1-bit Trex value (if Pilot Tone exists, the value is set to &#x2018;1&#x2019;; if not, the value is set to &#x2018;0&#x2019;), a 2-bit Sel value (A11:&#x2018;00&#x2019; or &#x2018;01&#x2019;; &#x2dc;SL:&#x2018;10&#x2019;; and SL:&#x2018;11&#x2019;), a 2-bit session value (S0:&#x2018;00&#x2019;: S1:&#x2018;01&#x2019;; S2:&#x2018;10&#x2019;; and S3:&#x2018;11&#x2019;), a 1-bit target value (A:&#x2018;0&#x2019;; and B: &#x2018;1&#x2019;), a 4-bit value Q indicating the number of slots per round, and a 3-bit UpDn value (if Q is unchanged, it is set to &#x2018;000&#x2019;; if Q=Q+1, Q is set to &#x2018;110&#x2019;; and if Q=Q&#x2212;1, Q is set to &#x2018;011&#x2019;).</p>
<p id="p-0213" num="0212"><figref idref="DRAWINGS">FIG. 34</figref> illustrates the structure of a protocol message for the set type C A/I query-related parameters command for the case where DR=8, M=1, Trex=no pilot tone, Sel=A11, Session=S0, Target=A, Q=8, and UpDn=not changed.</p>
<p id="p-0214" num="0213">A response to the set type C A/I query-related parameters command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x0E in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A. The argument may be represented by a result code 0x00 in case of Success, and by a result code 0x1B in case of Cannot Control Type C A/I Parameters.</p>
<p id="p-0215" num="0214"><figref idref="DRAWINGS">FIG. 35</figref> illustrates the structure of a response protocol message to the set type C A/I query-related parameters command.</p>
<p id="p-0216" num="0215">[3.1.15] Command for Getting Automatic Tag Read Parameters (Get Automatic Read Parameters)</p>
<p id="p-0217" num="0216">A get automatic read parameters command is used to get automatic tag read parameters.</p>
<p id="p-0218" num="0217">The get automatic read parameters command includes a message type and a code, but does not include a payload type and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x1F indicating Get Automatic Read Parameters. <figref idref="DRAWINGS">FIG. 36</figref> illustrates the structure of a protocol message for the get automatic read parameters (Read Entire Type A Tag) command.</p>
<p id="p-0219" num="0218">A response to the get automatic read parameters command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x0F in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type F in case of Success, and by Payload Type A in case of Failure. In case of Success, the argument may include a 16-bit read cycle value indicating the number of times of read operation performed by the reader, and an 8-bit read delay time value representing a delay (msec) between read operations performed by the reader. In case of Cannot Get Automatic Parameters, the argument may include a result code 0x0F. In case of Not Supported Command, the payload may include a result code 0x17. <figref idref="DRAWINGS">FIG. 37</figref> illustrates the structure of a response protocol message to the set automatic read parameters command for the case where Read Cycle=50, and Read Delay Time=50 msec.</p>
<p id="p-0220" num="0219">[3.1.16] Command for Setting Automatic Tag Read Parameters (Set Automatic Read Parameters)</p>
<p id="p-0221" num="0220">A set automatic read parameters command is used to set automatic read parameters.</p>
<p id="p-0222" num="0221">The set automatic read parameters command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x10 indicating Set Automatic Read Parameters. The payload type may be represented by Payload Type F. The argument may include a 16-bit read cycle value indicating the number of times of read operation performed by the reader, and an 8-bit read delay time value representing a delay (msec) between read operations performed by the reader. <figref idref="DRAWINGS">FIG. 38</figref> illustrates the structure of a protocol message for the set automatic read parameters command for the case where Read Cycle=50, and Read Delay Time=50 msec.</p>
<p id="p-0223" num="0222">A response to the set automatic read parameters command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x10 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A. The argument may be represented by a result code 0x00 in case of Success, and by a result code 0x10 in case of Automatic Parameter Control Failure. When Read Cycle and Read Delay Time have invalid parameters, the argument may be represented by a result code 0x0E. In case of Not Supported Command, the argument may be represented by 0x17. <figref idref="DRAWINGS">FIG. 39</figref> illustrates the structure of a response protocol message for the case of Success.</p>
<p id="p-0224" num="0223">[3.2] Tag Read Category</p>
<p id="p-0225" num="0224">[3.2.1] Command for Reading a Tag UID (Read Type B UID)</p>
<p id="p-0226" num="0225">A read type B U command is used to read a UID of an ISO 18000-B tag. The</p>
<p id="p-0227" num="0226">UID has a length of 64 bits and is essential when a write operation is performed on a corresponding tag. A 40-bit SUID may be used instead of the 64-bit UID. However, the present invention is described with respect to the use of the 64-bit UID. The read type B UID command is used to read 8th through 16th address values from a tag, which correspond to the length of UII Set and the length of AD Set, respectively. The address values are, respectively;</p>
<p id="p-0228" num="0227">08&#x2dc;09: Tag manufacturer</p>
<p id="p-0229" num="0228">10&#x2dc;11: Hardware Type</p>
<p id="p-0230" num="0229">12: Embedded Application code</p>
<p id="p-0231" num="0230">13: Application Family ID</p>
<p id="p-0232" num="0231">14: Storage Data Format (Referring to ISO/IEC15961 8.2, 15962 B.63, and 15962 E.4)</p>
<p id="p-0233" num="0232">15: Length of UII Set (bytes)</p>
<p id="p-0234" num="0233">16: Length of AD Set (bytes)</p>
<p id="p-0235" num="0234">The read type B UID command includes a message type and a code, but does not include a payload type and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x21 indicating Read Type B UID. <figref idref="DRAWINGS">FIG. 40</figref> illustrates the structure of a protocol message for the read Type B UID command.</p>
<p id="p-0236" num="0235">A response to the read type B UID command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x21 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type M in case of Success, and Payload Type A in case of Failure or when there is no tag to be read (No Tag Detected).</p>
<p id="p-0237" num="0236">The argument represent Success, No Tag Detected, and Failure. In case of Success, the argument may be represented by the UID, Manufacturer, Hardware Type, Embedded Application Code (EAC), Application Family ID (AFID), Storage Data Format (SDF), UII Set Length, and the AD Set Length. In case of No Tag Detected, the argument may be represented by a result code 0x15. In case of Read Failure, the argument may be represented by a result code 0x09. In case of Not Supported Command, the argument may be represented by a result code 0x17. <figref idref="DRAWINGS">FIG. 41</figref> illustrates the structure of a response protocol message for the read type B UID command for the case where UID=0xE035000000000001, Manufacturer=0x1234, Hardware Type=0x5678, EAC=0x0A, AFID=0x01, SDF=0x00, UII Set Length=8, and AD Set Length=16.</p>
<p id="p-0238" num="0237">[3.2.2] Command for Reading a UID Block of a Tag (Read Type C UII Block)</p>
<p id="p-0239" num="0238">A read type C UII block command is used to read and inform a UII block of an ISO 18000-C tag. The UII block exists in a UII memory bank of a tag and denotes all of UII or UII Set and a PC section of the type C tag. The UII or the UII Set has a variable length, while the PC section has a fixed length. Therefore, when interpreting a response, the length of the UII or the UII Set can be found by subtracting 2 from Payload Length.</p>
<p id="p-0240" num="0239">The read type C UII block command includes a message type and a code, but does not include a payload type and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x22 indicating Read Type C UII Block. <figref idref="DRAWINGS">FIG. 42</figref> illustrates the structure of a protocol message for the read Type C UII Block command.</p>
<p id="p-0241" num="0240">A response to the read type C UII Block command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x22 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type H in case of Success, and Payload Type A in case of Failure or in case of No Tag Detected.</p>
<p id="p-0242" num="0241">In case of Success, the argument may be represented by the UII Block (UII+PC). In case of No Tag Detected, the argument may be represented by a result code 0x15. In case of Read Failure, the argument may be represented by a result code 0x09. <figref idref="DRAWINGS">FIG. 43</figref> illustrates the structure of a Read Type C UII Block Response protocol message for the case of a 96-bit UII, that is, the case where PC=0x2000, and UII=0x30F4257BF4625F8000000002.</p>
<p id="p-0243" num="0242">[3.2.3] Command for Reading a User Memory Bank Area of a Tag (Read Type B User Data)</p>
<p id="p-0244" num="0243">A read type B user data command is used to read a user memory bank area of an ISO 18000-B tag. The user memory bank area is read by its length from a start address. In Type B, since UII or UII Set is stored in the first address of the user memory bank area, the start address must be set to &#x2018;0&#x2019; to read the UII or the UII Set.</p>
<p id="p-0245" num="0244">The read type B user data command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x23 indicating Read Type B User Data. The payload type may be represented by Payload Type I. The argument may include a 64-bit UID of a tag to read a user memory bank, a 16-bit start address of a user memory bank area, and 16-bit length (User Data Length, on a byte basis) by which the user memory bank area is to be read. <figref idref="DRAWINGS">FIG. 44</figref> illustrates the structure of a protocol message for the read type B user data command for the case where UID=0xE035000000000001, Start Address=0x0000, and Length=8 byte.</p>
<p id="p-0246" num="0245">A response to the read type B user data command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x23 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type B in case of Success, and by Payload Type A in case of Failure or in case of No Tag Detected. In case of Success, the argument may include the contents of the user memory bank (e.g., UII Set). In case of No Tag Detected, the argument may include a result code 0x15. In case of Read Failure, the argument may include a result code 0x09. In case of No User Data, the argument may include a result code 0x1C. In case of Not Supported Command, the argument may include a result code 0x17. <figref idref="DRAWINGS">FIG. 45</figref> illustrates the structure of a response protocol message to the Read Type B user data command for the case where UII Set=0x123456789ABCDEF0.</p>
<p id="p-0247" num="0246">[3.2.4] Command for Reading a User Memory Bank Area of a Tag (Read Type C User Data)</p>
<p id="p-0248" num="0247">A read type C user data command is used to read a user memory bank area of an ISO 18000-C tag. The user memory bank area is read by its length from a start address. When a protocol message for the read type C user data command is written. UII or UII Set indicating a tag to read the user memory bank is needed. The UII or the UII Set has a variable length, while other arguments have a fixed length. Therefore, Payload Length can be found by adding 4 to the length of the UII or the UII Set.</p>
<p id="p-0249" num="0248">The read type C user data command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x24 indicating Read Type C User Data. The payload type may be represented by Payload Type J. The argument may include a 64-bit UID or UII Set (variable length) of a tag to read a user memory bank, a 16-bit start address of a user memory bank area, and 16-bit length (User Data Length, on a byte basis) by which the user memory bank area is to be read. <figref idref="DRAWINGS">FIG. 46</figref> illustrates the structure of a protocol message for the read type C user data command for the case where UID=0x30F4257BF8000000002, Start Address=0x0000, and Length=15 byte.</p>
<p id="p-0250" num="0249">A response to the read type C user data command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x24 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type G in case of Success, and by Payload Type A in case of Failure, No Tag Detected, or No User Data.</p>
<p id="p-0251" num="0250">In case of Success, the argument may include the contents of the user memory bank. In case of No Tag Detected, the argument may include a result code 0x15. In case of Read Failure, the argument may include a result code 0x09. In case of No User Data, the argument may include a result code 0x1C. <figref idref="DRAWINGS">FIG. 47</figref> illustrates the structure of a response protocol message to the Read Type C user data command for the case where the contents of the user memory bank=&#x2018;FLATRON L1740BQ&#x2019;.</p>
<p id="p-0252" num="0251">[3.2.5] Command for Reading the Entire Contents of a Tag (Read Entire Type B Tag)</p>
<p id="p-0253" num="0252">A Read Entire Type B Tag command is used to read the entire contents of an ISO 18000-B tag, and the entire contents of the tag is received as a response. However, a user memory bank is read by a predetermined length. Since only data read from a user memory bank area of all fields of the response have a variable length, this length can be found by subtracting 24 from Payload Length. Wherein, a memory layout is represented by 12th through 17th address of Type B Tag. The value of 12th through 17th address is referred to the value of address of the Read Type B UID command.</p>
<p id="p-0254" num="0253">The Read Entire Type B Tag command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x25 indicating Read Entire Type B Tag. The payload type may be represented by Payload Type K. The argument may include a 16-bit User Data Length indicating the size of data read from the user memory bank. <figref idref="DRAWINGS">FIG. 48</figref> illustrates the structure of a protocol message for the Read Entire Type B Tag command for the case where User Data Length=15.</p>
<p id="p-0255" num="0254">A response message for the Read Entire Type B Tag command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x25 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type L in case of Success, and by Payload Type A in case of Failure or No Tag Detected.</p>
<p id="p-0256" num="0255">In case of Success, the argument may include UID, Manufacturer, Hardware Type, Memory Layout, and User Data. In case of No Tag Detected, the argument may include a result code 0x15. In case of Read Failure, the argument may include a result code 0x09. In case of Not Supported Command, the argument may include a result code 0x17. <figref idref="DRAWINGS">FIG. 49</figref> illustrates the structure of a response protocol message to the Read Entire Type B Tag command for the case where UID=0xE035000000000001, Manufacturer=0x1234, H/W Type=0x5678, Memory Layout=0x000000000000, and Data to be written=&#x2018;FLATRON L1740BQ.</p>
<p id="p-0257" num="0256">[3.2.6] Command for Reading the Entire Contents of a Tag (Read Entire Type C Tag)</p>
<p id="p-0258" num="0257">A Read Entire Type C Tag command is used to read the entire contents of an ISO 18000-C tag. The ISO 18000-C tag has four memory banks including Reserved, TID, UII, and User Data. This command is used to read three memory banks including TID, UII, and User Data, except Reserved.</p>
<p id="p-0259" num="0258">The Read Entire Type C Tag command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x26 indicating Read Entire Type C Tag. The payload type may be represented by Payload Type K. The argument may include a 16-bit User Data Length indicating the size of data read from the user memory bank. <figref idref="DRAWINGS">FIG. 50</figref> illustrates the structure of a protocol message for the Read Entire Type C Tag command for the case where User Data Length=14.</p>
<p id="p-0260" num="0259">A response message for the Read Entire Type C Tag command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x26 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type N in case of Success, and by Payload Type A in case of Failure or No Tag Detected.</p>
<p id="p-0261" num="0260">In case of Success, the argument may include a TID memory bank, UII or UII Set, PC, and data read from the user memory bank. In case of No Tag Detected, the argument may include a result code 0x15. In case of Read Failure, the argument may include a result code 0x09. <figref idref="DRAWINGS">FIG. 51</figref> illustrates the structure of a response protocol message to the Read Entire Type C Tag command for the case where TID=0xA98654E2, PC=0x2000, 96-bit UII=0x30F4257BF4625F8000000002, and Data of User Memory Bank=&#x2018;FLATRON L1740B.</p>
<p id="p-0262" num="0261">[3.2.7] Command for Starting an Automatic Tag Read Operation (Start Automatic Read)</p>
<p id="p-0263" num="0262">A Start Automatic Read command is used to start an automatic tag read operation. A protocol message constituting this command may include a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x27 indicating Start Automatic Read. The payload type may be represented by Payload Type 0.</p>
<p id="p-0264" num="0263">The argument may be represented by an 8-bit Command Code (0x21&#x2dc;0x26; an automatic read operation is not performed for other values) and a 16-bit Repeat Cycle. The 8-bit Command Code indicates a code of a command to perform an automatic read operation. When a read operation of a designated unit in a Read Cycle is regarded as one Repeat Cycle, the 16-bit Repeat Cycle indicates the number of times of repetition of the Repeat Cycle (i.e., the reading number of times=ReadCycle&#xd7;RepeatCycle). <figref idref="DRAWINGS">FIG. 52</figref> illustrates the structure of a protocol message for the Start Automatic Read command for the case where Read Entire Type C Tag, Access Password=0x12345678, and Read Cycle=100.</p>
<p id="p-0265" num="0264">A response protocol message for the Start Automatic Read command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x27 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A.</p>
<p id="p-0266" num="0265">In case of Success, the argument may include a result code 0x00. In case of Automatic Read Failure, the argument may include a result code 0x0A, a result code 0x0E for the case where a code of the command is not in the range of 0x21&#x2dc;0x26, a result code 0x0E for the case where Repeat Cycle is not &#x2018;0&#x2019;, and a result code 0x0B for the case where an automatic read operation is being performed (Automatic Read in Operation). <figref idref="DRAWINGS">FIG. 53</figref> illustrates the structure of a response protocol message for the case of Success.</p>
<p id="p-0267" num="0266">A notification message may be used for Start Automatic Read. This notification message may include a message type, a code, a payload type, and an argument. The message type may be represented by 0x02 indicating Notification. The code may be identical to the command code that is used as the argument in the Start Automatic Read command. In case where data read from a tag is transmitted, the payload type may be identical to the response corresponding to a command code 0x21&#x2dc;0x26. In case where the automatic read operation is performed by the predetermined number of times and thus completed (Automatic Read Completed), the payload type may be represented by Payload Type A.</p>
<p id="p-0268" num="0267">Meanwhile, in case where data read from a tag is transmitted, the argument may be identical to a response corresponding to a command code 0x21&#x2dc;0x26. In case where the automatic read operation is performed by the predetermined number of times and thus completed (Automatic Read Completed), the argument may include a result code 0x1F. When there are no more tags to read (No more Tags to Read), the argument may include a result code 0x20. <figref idref="DRAWINGS">FIG. 54</figref> illustrates the structure of a notification protocol message for the case of Automatic Read Completed. In case where data read from a tag is transmitted, the notification protocol message may be identical to the response corresponding to the command code 0x21&#x2dc;0x26.</p>
<p id="p-0269" num="0268">[3.2.8] Command for Stopping an Automatic Tag Read Operation (Stop Automatic Read)</p>
<p id="p-0270" num="0269">A Stop Automatic Read command is used to stop an automatic tag read operation. The Stop Automatic Read command includes a message type and a code, but does not include a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x28 indicating Stop Automatic Read. <figref idref="DRAWINGS">FIG. 55</figref> illustrates the structure of a protocol message for the Stop Automatic Read command for the case of Read Entire Type A Tag command.</p>
<p id="p-0271" num="0270">A response protocol message for the Stop Automatic Read command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x28 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A. In case of Success, the argument may include a result code 0x00. In case of Cannot Stop Automatic Read, the argument may include a result code 0x0C. In case where an automatic read operation is not being performed, the argument may include a result code 0x0D. <figref idref="DRAWINGS">FIG. 56</figref> illustrates the structure of a protocol message for the Stop Automatic Read Response for the case of Success.</p>
<p id="p-0272" num="0271">[3.3] Tag Write Category</p>
<p id="p-0273" num="0272">[3.3.1] Command for Writing a UII Block in a UII Memory Bank of a Tag (Write Type C UII Block)</p>
<p id="p-0274" num="0273">A Write Type C UII Block command is used to write a UII block in a UII memory bank of an ISO 1800-C tag, wherein CRC is calculated and process by the mobile RFID reader. The Write Type C UII Block command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x41 indicating Write Type C UII Block. The payload type may be represented by Payload Type P. The argument may include a 32-bit Access Password for writing a Type C tag, a 16-bit UII Length for representing the length of UII or UII Set, a UII or UII Set (variable) for indicating a tag to be written in, a 16-bit New UII Length for representing the length of new UII or UII Set, a New UII or UII Set (variable) for representing a New UII or UII Set to be written in the tag, and a PC for representing a PC value to be written in the tag. <figref idref="DRAWINGS">FIG. 57</figref> illustrates the structure of a protocol message for the Write Type C UII Block command for the case where Access Password=0x87651234, UII=0x30F4257BF46258000000001, New UII=0x30F4257BF46258000000002, and PC=0x2000.</p>
<p id="p-0275" num="0274">A response message for the Write Type C UII Block command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x41 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A. The argument may include a result code 0x00 for the case of Success, a result code 0x10 for the case of Write Failure, and a result code 0x17 for the case of Not Supported Command. <figref idref="DRAWINGS">FIG. 58</figref> illustrates the structure of a response protocol message for the Write Type C UII Block command.</p>
<p id="p-0276" num="0275">[3.3.2] Command for Writing the Entire Contents of a Tag (Write Type B User Data)</p>
<p id="p-0277" num="0276">A Write Type B User Data command is used to write the entire contents of an ISO 1800-B tag. The Write Type B User Data command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x42 indicating Write Type B User Data. The payload type may be represented by Payload Type Q. The argument may include a 64-bit UID of a tag to be written in, a 16-bit Start Address representing a start address of a user memory bank area in which data are to be written, a 16-bit Length representing the size (on a byte basis) of data to be written, and a User Data (variable) to be written in the user memory bank by a length designated by the 16-bit Length. <figref idref="DRAWINGS">FIG. 59</figref> illustrates the structure of a protocol message for the Write Type B User Data command for the case where UID=0xE35000000000001, Start Address=0x00, Length=15, and User Memory Bank=&#x2018;FLATRON L1740BQ.</p>
<p id="p-0278" num="0277">A response message for the Write Type B User Data command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x42 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A. The argument may include a result code 0x00 for the case of Success, a result code 0x15 for the case of No Tag Detected, a result code 0x10 for the case of Write Failure, and a result code 0x17 for the case of Not Supported Command. <figref idref="DRAWINGS">FIG. 60</figref> illustrates the structure of a response protocol message for the Write Type B User Data command.</p>
<p id="p-0279" num="0278">[3.3.3] Command for Writing the Entire Contents of a Tag (Write Type C User Data)</p>
<p id="p-0280" num="0279">A Write Type C User Data command is used to write the entire contents of an ISO 1800-C tag. The Write Type C User Data command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x43 indicating Write Type C User Data. The payload type may be represented by Payload Type R. The argument may include a 32-bit Access Password necessary for writing data in a user memory bank area, a 16-bit UII Length (variable) representing the length of UII or UII Set, a 16-bit Start Address representing a start address of the user memory bank area in which data are to be written, a 16-bit User Data Length representing the size (on a byte basis) of data to be written, and a User Data (variable) to be written corresponding to a length designated by the 16-bit User Data Length. <figref idref="DRAWINGS">FIG. 61</figref> illustrates the structure of a protocol message for the Write Type C User Data command for the case where Access Password=0x87651234, UII=0x30F4257BF46258000000001, Start Address=0x00, and Data to be written=&#x2018;FLATRON L1740BQ&#x2019;.</p>
<p id="p-0281" num="0280">A response message for the Write Type C User Data command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x43 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A. The argument may include a result code 0x00 for the case of Success, a result code 0x15 for the case of No Tag Detected, a result code 0x10 for the case of Write Failure, and a result code 0x17 for the case of Not Supported Command. <figref idref="DRAWINGS">FIG. 62</figref> illustrates the structure of a response protocol message for the Write Type C User Data command.</p>
<p id="p-0282" num="0281">[3.3.4] Command for Writing the Entire Contents in a Tag (Write Entire Type B Tag)</p>
<p id="p-0283" num="0282">A Write Entire Type B Tag command is used to write the entire contents in an ISO 1800-B tag. Data can be written in UID, Memory Layout and a user memory bank area. However, regions of Manufacture and H/W Type are designated at a manufacturing stage and thus cannot be written.</p>
<p id="p-0284" num="0283">The Write Entire Type B Tag command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x44 indicating Write Entire Type B Tag. The payload type may be represented by Payload Type S. The argument may include a 64-bit UID of a Type B tag to be written, a 48-bit Memory Layout that can be designated and written by User Application (if necessary), a 16-bit User Data Length indicating the size of data to be written in the user memory bank, and a User Data indicating data to be written in the user memory bank of a tag (if necessary). <figref idref="DRAWINGS">FIG. 63</figref> illustrates the structure of a protocol message for the Write Entire Type B Tag command for the case where UID=0xE35000000000001, Memory Layout=0x000000000000, and Data to be written=&#x2018;FLATRON L1740BQ&#x2019;.</p>
<p id="p-0285" num="0284">A response protocol message for the Write Entire Type B Tag command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x44 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A. The argument may include a result code 0x00 for the case of Success, a result code 0x15 for the case of No Tag Detected, a result code 0x10 for the case of Write Failure, and a result code 0x17 for the case of Not Supported Command. <figref idref="DRAWINGS">FIG. 64</figref> illustrates the structure of a response protocol message for the Write Entire Type B Tag command.</p>
<p id="p-0286" num="0285">[3.3.5] Command for Writing the Entire Contents in a Tag (Write Entire Type C Tag)</p>
<p id="p-0287" num="0286">A Write Entire Type C Tag command is used to write the entire contents in an ISO 1800-C tag. The Write Entire Type C Tag command is useful for simultaneously writing a MI Block and a user memory bank. Also, the Write Entire Type C Tag command can be used to write a Reserved Bank area in which Kill Password and Access Password are sequentially included. If a password needs to be changed, it must be written in a Reserved Bank area.</p>
<p id="p-0288" num="0287">The Write Entire Type C Tag command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x45 indicating Write Entire Type C Tag. The payload type may be represented by Payload Type T.</p>
<p id="p-0289" num="0288">The argument may include a 32-bit Access Password for writing a Type C tag, a 16-bit UII Length for representing the length of UII or UII Set, a UII or UII Set (variable) for indicating a tag to be written in, a 16-bit New UII Length for representing the length of new UII or UII Set, a New UII or UII Set (variable) for representing a New UII or UII Set to be written in the tag, a 64-bit PC to be written in the tag, a User Data used when there are data to be written in a user memory bank of the tag, a 16-bit Reserved Bank Length representing the length of data to be written in a reserved bank, a Reserved Bank Data (variable) to be written in the reserved bank.</p>
<p id="p-0290" num="0289"><figref idref="DRAWINGS">FIG. 65</figref> illustrates the structure of a protocol message for the Write Entire Type C Tag command for the case where Access Password=0x87651234, UII=0x30F4357BF46258000000001, New UII=0x30F4357BF46258000000002, PC=0x2000, Data to be written=&#x2018;FLATRON L1740BQ&#x2019;, Kill Password=0x12345678, and Access Password=0x87654321.</p>
<p id="p-0291" num="0290">A response protocol message for the Write Entire Type C Tag command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x45 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A.</p>
<p id="p-0292" num="0291">The argument may include a result code 0x00 for the case of Success, a result code 0x15 for the case of No Tag Detected, a result code 0x10 for the case of Write Failure, and a result code 0x17 for the case of Not Supported Command. <figref idref="DRAWINGS">FIG. 66</figref> illustrates the structure of a response protocol message for the Write Entire Type C Tag command for the case of Success.</p>
<p id="p-0293" num="0292">[3.4] Tag Kill Category</p>
<p id="p-0294" num="0293">[3.4.1] Command for Killing a Tag (Kill Type C Tag)</p>
<p id="p-0295" num="0294">A Kill Type C Tag command is used to kill an ISO 1800-C tag. Access Password and Kill Password are all required for the killing operation, which aims at security.</p>
<p id="p-0296" num="0295">The Kill Type C Tag command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x61 indicating Kill Type C Tag. The payload type may be represented by Payload Type U.</p>
<p id="p-0297" num="0296">The argument may include a 32-bit Access Password required for accessing a tag, a 32-bit Kill Password required for killing a tag, a 16-bit UII Length indicating the length of UII or UII Set, and a UII or UII Set (variable) indicating a Type C tag to be killed. <figref idref="DRAWINGS">FIG. 67</figref> illustrates the structure of a protocol message for the Kill Type C Tag command for the case where Access Password=0x12345678, Kill Password=0x87654321, and UII=0x30F4357BF46258000000001.</p>
<p id="p-0298" num="0297">A response message for the Kill Type C Tag command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x61 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A.</p>
<p id="p-0299" num="0298">The argument protocol may include a result code 0x00 for the case of Success, a result code 0x15 for the case where there is no tag to be killed (No Tag Detected), and a result code 0x12 for the case of Kill Failure. <figref idref="DRAWINGS">FIG. 68</figref> illustrates the structure of a response protocol message for the Kill Type C Tag command for the case of Success.</p>
<p id="p-0300" num="0299">[3.5] Tag Lock Control Related Category</p>
<p id="p-0301" num="0300">[3.5.1] Command for Controlling Lock of a Type B Tag (Lock Type B Tag)</p>
<p id="p-0302" num="0301">A Lock Type B Tag command is used to control lock of a Type B tag. The Lock Type B Tag command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x81 indicating Lock Type B Tag. The payload type may be represented by Payload Type V.</p>
<p id="p-0303" num="0302">The argument may include a 64-bit UID required for selecting a tag to be locked, and an 8-bit Address (0x00&#x2dc;0xFF) representing an address of a tag to be killed <figref idref="DRAWINGS">FIG. 69</figref> illustrates the structure of a protocol message for the Lock Type B Tag command for the case where UID=0xE035000000000001 and the 30<sup>th </sup>block is locked.</p>
<p id="p-0304" num="0303">A response protocol message for the Lock Type B Tag command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x81 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A.</p>
<p id="p-0305" num="0304">The argument may include a result code 0x00 for the case of Success, a result code 0x15 for the case where there is no tag to be locked (No Tag Detected), a result code 0x13 for the case of Lock Control Failure, and a result code 0x17 for the case of Not Supported Command. <figref idref="DRAWINGS">FIG. 70</figref> illustrates the structure of a response protocol message for the Lock Type B Tag command for the case of Success.</p>
<p id="p-0306" num="0305">[3.5.2] Command for Controlling Lock of a Type C Tag (Lock Type C Tag)</p>
<p id="p-0307" num="0306">A Lock Type C Tag command is used to control lock of a Type C tag. The Lock Type C Tag command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0x82 indicating Lock Type C Tag. The payload type may be represented by Payload Type W. The argument may include a 32-bit Access Password required for a locking operation, a 16-bit UII Length indicating the length of UII or UII Set, a UII or UII Set (variable) indicating a Type C tag to be locked, and a 24-bit Lock Data for controlling a locking operation (use a 20-bit flag for controlling a locking operation and the less significant 20 bits; the less significant 4 bits=&#x2018;0&#x2019;). <figref idref="DRAWINGS">FIG. 71</figref> illustrates the structure of a protocol message for the Lock Type C Tag command for the case where UII=0x30F4257BF46258000000001, Access Password=0x87654321, and a UII code is permanently locked.</p>
<p id="p-0308" num="0307">A response protocol message for the Lock Type C Tag command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0x82 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A.</p>
<p id="p-0309" num="0308">The argument may include a result code 0x00 for the case of Success, a result code 0x15 for the case where there is no tag to be locked (No Tag Detected), a result code 0x13 for the case of Lock Control Failure, and a result code 0x17 for the case of Not Supported Command. <figref idref="DRAWINGS">FIG. 72</figref> illustrates the structure of a response protocol message for the Lock Type C Tag command for the case of Success.</p>
<p id="p-0310" num="0309">[3.6] Additional Function Category</p>
<p id="p-0311" num="0310">[3.6.1] Command for Getting the Last Result Code (Get Last Result)</p>
<p id="p-0312" num="0311">A Get Last Result command is used to get the last result code. The Get Last Result command includes a message type and a code, but does not include a payload type and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0xA1 indicating Get Last Result. <figref idref="DRAWINGS">FIG. 73</figref> illustrates the structure of a protocol message for the Get Last Result command.</p>
<p id="p-0313" num="0312">A response protocol message for the Get Last Result command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0xA1 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A. The argument may include the last result code for the case of Success, a result code 0x14 for the case of Cannot Get Last Result, and a result code 0x17 for the case of Not Supported Command. <figref idref="DRAWINGS">FIG. 74</figref> illustrates the structure of a response protocol message for the case where the last result is Read Failure.</p>
<p id="p-0314" num="0313">[3.6.2] Command for Starting a Test Mode (Start Test Mode)</p>
<p id="p-0315" num="0314">A Start Test Mode command is used to change the RFID reader into a test mode. The Start Test Mode command includes a message type and a code, but does not include a payload type and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0xA2 indicating Start Test Mode. <figref idref="DRAWINGS">FIG. 75</figref> illustrates the structure of a protocol message for the Start Test Mode command.</p>
<p id="p-0316" num="0315">A response protocol message for the Start Test Mode command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0xA2 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A. The argument may include a result code 0x00 for the case of Success, and a result code 0x1E for the case of Test Mode Control Failure. <figref idref="DRAWINGS">FIG. 76</figref> illustrates the structure of a response protocol message for the case of Success.</p>
<p id="p-0317" num="0316">[3.6.3] Command for Stopping a Test Mode (Stop Test Mode)</p>
<p id="p-0318" num="0317">A Stop Test Mode command is used to stop a test mode of the reader. The Stop Test Mode command includes a message type and a code, but does not include a payload type and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0xA3 indicating Stop Test Mode. <figref idref="DRAWINGS">FIG. 77</figref> illustrates the structure of a protocol message for the Stop Test Mode command.</p>
<p id="p-0319" num="0318">A response protocol message for the Stop Test Mode command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0xA3 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A.</p>
<p id="p-0320" num="0319">The argument may include a result code 0x00 for the case of Success, and a result code 0x1E for the case of Test Mode Control Failure. <figref idref="DRAWINGS">FIG. 78</figref> illustrates the structure of a response protocol message for the Stop Test Mode command for the case of Success.</p>
<p id="p-0321" num="0320">[3.6.4] Command for Starting a Receive Test Mode (Start Receive Test)</p>
<p id="p-0322" num="0321">A Start Receive Test command can be used only in a test mode, and is used to test the receive sensitivity of the reader. Upon receiving the Start Receive Test command, the reader enters a receive standby mode to accumulatively add the number of successfully-received bits.</p>
<p id="p-0323" num="0322">The Start Receive Test command includes a message type and a code, but does not include a payload type and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0xA4 indicating Start Test Mode. <figref idref="DRAWINGS">FIG. 79</figref> illustrates the structure of a protocol message for the Start Receive Test command.</p>
<p id="p-0324" num="0323">A response protocol message for the Start Receive Test command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0xA4 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type A.</p>
<p id="p-0325" num="0324">The argument may include a result code 0x00 for the case of Success, and a result code 0x1D for the case where the reader is not in a test mode. <figref idref="DRAWINGS">FIG. 80</figref> illustrates the structure of a response protocol message for the Start Receive Test command for the case of Success.</p>
<p id="p-0326" num="0325">[3.6.5] Command for Stopping a Receive Test (Stop Receive Test)</p>
<p id="p-0327" num="0326">A Stop Receive Test command can be used only in a test mode, and is used to test the receive sensitivity of the reader. When receiving the Stop Receive Test command, the reader exits the standby mode to receive an A/I packet and then transmits the number of successfully-received bits to the processor.</p>
<p id="p-0328" num="0327">The Stop Receive Test command includes a message type and a code, but does not include a payload type and an argument. The message type may be represented by 0x00 indicating a command. The code may be represented by 0xA5 indicating Stop Test Mode. <figref idref="DRAWINGS">FIG. 81</figref> illustrates the structure of a protocol message for the Stop Receive Test command.</p>
<p id="p-0329" num="0328">A response protocol message for the Stop Receive Test command includes a message type, a code, a payload type, and an argument. The message type may be represented by 0x01 indicating a response. The code may be represented by 0xA5 in case of Success, and by 0xFF in case of Failure. The payload type may be represented by Payload Type G in case of Success, and by Payload Type A in case of Failure. In case of Success, the argument may include a 32-bit value indicating the number of received bits. In case of Test Mode Control Failure, the argument may include a result code 0x1E. <figref idref="DRAWINGS">FIG. 82</figref> illustrates the structure of a response protocol message for the case where the number of received bits is 100000.</p>
<p id="p-0330" num="0329">[3.7] Appendices for Command, Response, and Notification</p>
<p id="p-0331" num="0330">[3.7.1] Commonly Applied Result Codes</p>
<p id="p-0332" num="0331">The following result codes are commonly used for all of commands, responses and notifications.
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0332">Success: The result generated when a command is successfully executed, which can be represented by, for example, 0x00.</li>
        <li id="ul0002-0002" num="0333">Invalid Parameter: The result generated when an argument of a command has an invalid value, which can be represented by, for example, 0x0E.</li>
        <li id="ul0002-0003" num="0334">Not Supported Command: The result generated when the reader cannot support a command. An optional command may not be implemented in the reader. The result can be used in this case. This code can be represented by, for example, 0x17.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0333" num="0335">Undefined Command: The result generated when the reader receives a command that was not defined by the present invention or the vendor, which can be represented by, for example, 0x18.
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0000">
    <ul id="ul0004" list-style="none">
        <li id="ul0004-0001" num="0336">Reader is not in Test Mode: The result generated when a command usable only in a test mode is issued when the reader is not in the test mode, which can be represented by, for example, 0x1D.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0334" num="0337">[3.7.2] Valid Value Ranges of Parameters Used in Commands</p>
<p id="p-0335" num="0338">Table 12 below illustrates valid value ranges of parameters used in each command. When a parameter value deviates from such range, the aforementioned Invalid Parameter (0x0E) error code must be included in a response message to be transmitted. Since Table 12 does not deal with parameters for a password necessary for a Type C tag related command, a command of a tag write category, commands of a tag lock control related category, such parameters must be based on the corresponding standard document.</p>
<p id="p-0336" num="0339">
<tables id="TABLE-US-00012" num="00012">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="105pt" align="left"/>
<colspec colname="2" colwidth="56pt" align="left"/>
<colspec colname="3" colwidth="56pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" rowsep="1">TABLE 12</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry/>
<entry>Valid Value</entry>
</row>
<row>
<entry>Command</entry>
<entry>Use Parameter</entry>
<entry>Range</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Reader Power Control</entry>
<entry>&#x2002;8-bit arg</entry>
<entry>0x00 or 0xFF</entry>
</row>
<row>
<entry>Reader Connection Control</entry>
<entry>&#x2002;8-bit arg</entry>
<entry>0x00 or 0xFF</entry>
</row>
<row>
<entry>Get Reader Info</entry>
<entry>&#x2002;8-bit arg</entry>
<entry>0x00~0x04</entry>
</row>
<row>
<entry>Set Signal Strength</entry>
<entry>&#x2002;8-bit arg</entry>
<entry>0x00~0x64</entry>
</row>
<row>
<entry>Set Region</entry>
<entry>&#x2002;8-bit arg</entry>
<entry>0x01~0x1F</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="105pt" align="left"/>
<colspec colname="2" colwidth="112pt" align="left"/>
<tbody valign="top">
<row>
<entry>Set Type B A/I Parameters</entry>
<entry>Based on ISO 18000-6B Standards</entry>
</row>
<row>
<entry>Set Type C A/I Select Parameters</entry>
<entry>Based on ISO 18000-6C Standards</entry>
</row>
<row>
<entry>Set Type C A/I Query related</entry>
<entry>Based on ISO 18000-6C Standards</entry>
</row>
<row>
<entry>Parameters</entry>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="105pt" align="left"/>
<colspec colname="2" colwidth="56pt" align="left"/>
<colspec colname="3" colwidth="56pt" align="left"/>
<tbody valign="top">
<row>
<entry>Set Automatic Read Parameters</entry>
<entry>16-bit Read</entry>
<entry>0x0001~0xFFFF</entry>
</row>
<row>
<entry/>
<entry>Cycle</entry>
<entry/>
</row>
<row>
<entry/>
<entry>&#x2002;8-bit Read</entry>
<entry>0x00~0xFF</entry>
</row>
<row>
<entry/>
<entry>Delay Time</entry>
<entry/>
</row>
<row>
<entry>Read Type B User Data</entry>
<entry>16-bit User Data</entry>
<entry>0x0001~0xFFFF</entry>
</row>
<row>
<entry/>
<entry>Length</entry>
<entry/>
</row>
<row>
<entry>Read Type C User Data</entry>
<entry>16-bit User Data</entry>
<entry>0x0001~0xFFFF</entry>
</row>
<row>
<entry/>
<entry>Length</entry>
<entry/>
</row>
<row>
<entry>Start Automatic Read</entry>
<entry>16-bit Repeat</entry>
<entry>0x0001~0xFFFF</entry>
</row>
<row>
<entry/>
<entry>Cycle</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0337" num="0340">[3.7.3] Process Performed when there is No Response to a Command.</p>
<p id="p-0338" num="0341">In the RFID reader control system according to the present invention, the following process is performed when there is no response to a command issued from the processor to the reader.</p>
<p id="p-0339" num="0342">When a driver receives no response from the reader even after a predetermine time from the transmission time of a command, it transmits an error message to an upper layer. A response message received right after the above process is disregarded and deleted. A response waiting time Trespdly may be set to a predetermined value, for example, 500 msec. When a corresponding default value is adjusted, a changed value must be clearly expressed.</p>
<p id="p-0340" num="0343">[3.7.4] Management of Reader Status</p>
<p id="p-0341" num="0344">For management of a reader status, a reader power status and a reader connection status are managed by the driver.</p>
<p id="p-0342" num="0345">[3.7.5] Details about Notification Related to Automatic Read</p>
<p id="p-0343" num="0346">When two or more tags are read, one notification must be performed for each of the read tags. When there is no tag to be read by the reader, the reader transmits a result code of &#x2018;No more Tags to Read&#x2019; by a notification using a payload type A and stops an automatic read operation. Such notification must be clearly transmitted to an upper layer.</p>
<p id="p-0344" num="0347">[4] Test Certification and Test Mode</p>
<p id="p-0345" num="0348">The present invention enables test certification to be performed on the A/I protocol standards implemented in a mobile RFID reader according to the mobile RFID forum test certification standards. For the test certification, the A/I section defined in the ISO 18000-6C standards is mandatory and the contents about the ISO 18000-6B standards are optional.</p>
<p id="p-0346" num="0349">[4.1] Test Mode</p>
<p id="p-0347" num="0350">In the test mode, a protocol defined in the A/I standards implemented in a mobile RFID reader for test certification is received as it is, and to give a response thereto is supported. That is, a command is directly given in the format of a protocol defined in the A/I standards, and a response thereto is also received in the format of a protocol defined in the A/I standards. As above, a protocol message defined in the A/I standards is used, as it is, to make it possible to perform the test certification.</p>
<p id="p-0348" num="0351">In order to convert the reader into the test mode, corresponding commands within the abovementioned additional category must be used. At this time, the reader must be in a power-on state and must be connected to the processor. The corresponding commands are the Start Test Mode command and the Stop Test Mode command that have been described above. When the Start Test Mode command is executed, a response thereto is received. When a normal response is received, the reader converts into the test mode. In the test mode, only a protocol message having a message type field of 0x03 in its header can be used. That is, commands of several categories defined above cannot be used. When receiving a general command in the test mode, the reader transmits the result code of &#x2018;Reader is not in Test Mode&#x2019; to the processor and disregards the general command.</p>
<p id="p-0349" num="0352">The Stop Test Mode command is use to stop the test mode. When receiving the Stop Test Mode command, the reader exits the test mode and can receive and process a general command.</p>
<p id="p-0350" num="0353">[4.2] Protocol Message in Test Mode</p>
<p id="p-0351" num="0354">In the test mode, an A/I protocol to receive the test certification can be used as it is. The A/I protocol is encapsulated into the payload field defined in the present invention. The contents of the protocol message in the test mode are as follows:
<ul id="ul0005" list-style="none">
    <li id="ul0005-0001" num="0000">
    <ul id="ul0006" list-style="none">
        <li id="ul0006-0001" num="0355">Preamble and End Mark values are used in the same manner.</li>
        <li id="ul0006-0002" num="0356">The Message Type field of a header uses information (e.g., 0x03) indicating a protocol message in the test mode.</li>
        <li id="ul0006-0003" num="0357">The Code field of the header includes a value 0x00 in case of a command based on the A/I protocol, and includes a value 0x01 in case of a response. A command is a protocol message that is transmitted from a reader to a tag, while the response is a protocol message that is transmitted from a tag to a reader.</li>
        <li id="ul0006-0004" num="0358">The Payload Length field of the header indicates the total length of the A/I protocol message included in the payload.</li>
        <li id="ul0006-0005" num="0359">The payload field itself corresponds to the A/I protocol message.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0352" num="0360"><figref idref="DRAWINGS">FIG. 83</figref> illustrates the structure of a protocol message used in the test mode.</p>
<p id="p-0353" num="0361">[4.3] Procedure for Processing Protocol Message in Test Mode</p>
<p id="p-0354" num="0362">The RFID reader may process a protocol message of the test mode according to the following procedure.</p>
<p id="p-0355" num="0363">[4.3.1] When the Reader Receives a Message in the Test Mode</p>
<p id="p-0356" num="0364">(a). The reader reads a header field from a message received according to an RFID protocol.</p>
<p id="p-0357" num="0365">(b). The reader checks a preamble.</p>
<p id="p-0358" num="0366">(c). The reader ascertains that a Message Type field value is 0x03</p>
<p id="p-0359" num="0367">(d). The reader ascertains that a Code field value is 0x00</p>
<p id="p-0360" num="0368">(e). The reader reads the Read Payload Length field to check the length of an A/I protocol message in a payload section</p>
<p id="p-0361" num="0369">(f). The reader reads the A/I protocol message from the payload section designated by the Payload Length field</p>
<p id="p-0362" num="0370">(g). The reader transfers the read A/I protocol message to the A/I unit. The A/I unit transfers the received A/I protocol message to a tag.</p>
<p id="p-0363" num="0371">[4.3.2] When the Reader Transmits a Message in the Test Mode</p>
<p id="p-0364" num="0372">(a). An A/I unit receives an A/I protocol message from a tag.</p>
<p id="p-0365" num="0373">(b). The received A/I protocol message itself acts as a payload.</p>
<p id="p-0366" num="0374">(c). The entire A/I protocol message is inserted into a Payload Length field.</p>
<p id="p-0367" num="0375">(d). A Code field value is set to 0x01.</p>
<p id="p-0368" num="0376">(e). A Message Type field value is set to 0x03.</p>
<p id="p-0369" num="0377">(f). Preamble and End Mark are added and transmitted.</p>
<p id="p-0370" num="0378">[4.4] Test the Receive Sensitivity of the Reader</p>
<p id="p-0371" num="0379">In the test mode, two commands are provided to test the receive sensitivity of the reader. The two commands are respectively the Start Receive Test command and the Stop Receive Test command that are defined in the additional function category.</p>
<p id="p-0372" num="0380">When the Start Receive Test command is issued, the reader enters a receive standby mode. In the receive standby mode, a BER can be measured. In the receive sensitivity test, an A/I packet, a bit pattern, or a PN code may be used. When receiving them, the reader must accumulatively add the number of successfully-received bits.</p>
<p id="p-0373" num="0381">When the receive sensitivity test ends, the Stop Receive Test command is transmitted and thus the number of the successfully-received bits is received by a response. A ratio of the number of the successfully-received bit to the number of bits transmitted in a test environment is obtained to calculate the BER.</p>
<p id="p-0374" num="0382">Meanwhile, the content of an A/I protocol packet for the receive sensitivity test is determined in the test environment. The reader must support to set and change the determined contents.</p>
<heading id="h-0009" level="1">INDUSTRIAL APPLICABILITY</heading>
<p id="p-0375" num="0383">According to the present invention, it is possible to provide a method of defining a protocol for controlling an RFID reader and an RFID reader control unit (e.g., processor) of a mobile terminal, and constructing and transmitting messages, information, commands, and responses between the RFID reader and the RFID reader control unit.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method of managing a result code, the method performed by a reading device and comprising:
<claim-text>receiving, from a mobile processor, a command for a specific operation;</claim-text>
<claim-text>determining whether or not the specific operation is performed, according to the command;</claim-text>
<claim-text>when the specific operation fails, storing a result code indicating a reason of the failure;</claim-text>
<claim-text>receiving, from the mobile processor, a result requesting command, wherein the result requesting command is used to get the stored result code, the stored result code indicating a last result code, and wherein the result requesting command includes a message type field, a code field and a payload length field, and does not include an argument field; and</claim-text>
<claim-text>transmitting, to the mobile processor, a response message in response to the received result requesting command, including last result code that was successful.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the code field included in the result requesting command includes a code value discerning a type of a command.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein when the result requesting command is performed successfully, the response message further includes the code value included in the specific command.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further updating the result code based on a reason failure occurred by the received result requesting command, when the result requesting command failed.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the result requesting command and the response message operate in pairs.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A reading device for managing a result code, the reading device comprising:
<claim-text>an interface unit configured to transmit/receive data to/from a mobile processor; and</claim-text>
<claim-text>a control unit configured to:
<claim-text>receive, from the mobile processor via the interface unit, a command for a specific operation,</claim-text>
<claim-text>determine whether or not the specific operation is performed, according to the command,</claim-text>
<claim-text>when the specific operation fails, store a result code indicating a reason of the failure, and</claim-text>
<claim-text>receive, from the mobile processor via the interface unit, a result requesting command,</claim-text>
</claim-text>
<claim-text>wherein the result requesting command is used to get the stored result code, the stored result code indicating a last result code,</claim-text>
<claim-text>wherein the result requesting command includes a message type field, a code field and a payload length field, and does not include an argument field, and</claim-text>
<claim-text>wherein the response message includes the argument field, the argument field including a last result code that was successful.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The reading device of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the code field included in the result requesting command includes a code value discerning a type of a command.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The reading device of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein when the result requesting command is performed successfully, the response message further includes the code value included in the specific command.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The reading device of <claim-ref idref="CLM-00007">claim 7</claim-ref>, further updating the result code based on a reason failure occurred by the received result requesting command, when the result requesting command failed.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The reading device of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the result requesting command and the response message operate in pairs.</claim-text>
</claim>
</claims>
</us-patent-grant>
