<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627494-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627494</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12561813</doc-number>
<date>20090917</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>598</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20130101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>21</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>726 27</main-classification>
</classification-national>
<invention-title id="d2e53">Classification separation router</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6665786</doc-number>
<kind>B2</kind>
<name>McMichael et al.</name>
<date>20031200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6801948</doc-number>
<kind>B2</kind>
<name>Clark et al.</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709231</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7185192</doc-number>
<kind>B1</kind>
<name>Kahn</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713155</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2003/0023826</doc-number>
<kind>A1</kind>
<name>McMichael et al.</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2005/0132070</doc-number>
<kind>A1</kind>
<name>Redlich et al.</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709228</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2007/0250921</doc-number>
<kind>A1</kind>
<name>LiVecchi</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2008/0066143</doc-number>
<kind>A1</kind>
<name>Tai et al.</name>
<date>20080300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00008">
<othercit>Boettcher et al., &#x201c;The MILS Component Integration Approach to Secure Information Sharing,&#x201d; Digital Avionics Systems Conference, 2008.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00009">
<othercit>Alves-Foss J. et al., &#x201c;The MILS Architecture for High-Assurance Embedded Systems,&#x201d; International Journal of Embedded Systems, Feb. 2005, pp. 1-9.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>17</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>726 27</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711173</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>5</number-of-drawing-sheets>
<number-of-figures>5</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110067113</doc-number>
<kind>A1</kind>
<date>20110317</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Jones</last-name>
<first-name>Daniel H.</first-name>
<address>
<city>Round Rock</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Lendacky</last-name>
<first-name>Thomas G.</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Ratliff</last-name>
<first-name>Emily J</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Wilson</last-name>
<first-name>George C.</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Jones</last-name>
<first-name>Daniel H.</first-name>
<address>
<city>Round Rock</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Lendacky</last-name>
<first-name>Thomas G.</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Ratliff</last-name>
<first-name>Emily J</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Wilson</last-name>
<first-name>George C.</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Lieberman &#x26; Brandsdorfer, LLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>International Business Machines Corporation</orgname>
<role>02</role>
<address>
<city>Armonk</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Zand</last-name>
<first-name>Kambiz</first-name>
<department>2493</department>
</primary-examiner>
<assistant-examiner>
<last-name>Shayanfar</last-name>
<first-name>Ali</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method and system are provided to classify and convey data to satisfy a client request. The classification system is a two dimensional data classification system, including a first dimension pertaining to subject matter and a second dimension pertaining to data security. A partition is dynamically created, and data that satisfies the request populates the created partition to convey parsed data based satisfying both dimensions of the request.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="214.21mm" wi="177.63mm" file="US08627494-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="234.61mm" wi="194.65mm" file="US08627494-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="206.25mm" wi="196.43mm" file="US08627494-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="193.12mm" wi="183.90mm" file="US08627494-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="204.05mm" wi="189.74mm" file="US08627494-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="224.87mm" wi="192.19mm" file="US08627494-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0002" num="0001">1. Technical Field</p>
<p id="p-0003" num="0002">This invention relates to classification of electronic data. More specifically, partitions, containing only data at a given classification, are dynamically instantiated and employed for conveyance of classified data to ensure data security.</p>
<p id="p-0004" num="0003">2. Description of the Prior Art</p>
<p id="p-0005" num="0004">Information technology systems are becoming increasingly important to all aspects of organizations. As a result, the size and complexity of many information technology systems are growing rapidly. For example, an enterprise information technology system may include data centers at a plurality of sites, with a plurality of high-bandwidth communications channels between each data center. In addition, each data center may include a plurality of devices, herein referred to as elements, including mainframe computers, servers, data storage libraries, data storage devices, routers, switches, terminals, workstations, printers, and the like.</p>
<p id="p-0006" num="0005">With the growth of such systems has come the expansion of data. In recent years, data storage mediums have become relatively inexpensive, and as such, there has been an increased awareness of data storage. Tools have developed to process requests for data retained within the vast quantities of data storage. However, with the growth of electronic data, also comes concern with security of the data. Within an employment structure, a hierarchy is established with different security level assignments within the hierarchy. This is to ensure that those that access different levels in the hierarchy have limits on the data to which they have access. It is known in such a system to create partitions to limit access to the data. One example is shown in U.S. Pat. No. 6,665,786 to McMichael et al. Such partitions are persistent as they are created in the storage system itself. However, there is a danger pertaining to the security of persistent partitions, as they are known, including the security of the partition itself.</p>
<p id="p-0007" num="0006">From the foregoing discussion, it should be apparent that a need exists for an apparatus, system, and method that provide a venue to convey data in a secure and non-persistent manner. Such an apparatus, system, and method would provide focused data security through a non-persistent venue.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0008" num="0007">This invention comprises a method, system, and article for using dynamically created ephemeral partitions to securely deliver classified electronic data.</p>
<p id="p-0009" num="0008">In one aspect of the invention, a method is provided for addressing a request for classified electronic data from a trusted server. Data is segregated into at least two classifications. The server obtains the request for data, filtering any information not appropriate for the classification of the requestor. An identifier associated with the request includes a security attribute. To satisfy the request, data is filtered from the storage based upon presence of the security attribute in one or more classifications of the data and based upon presence of a security policy that defines access to the data classifications. In addition, a partition is dynamically created to contain the filtered data. The newly created partition is populated with a copy of the filtered data to satisfy the request.</p>
<p id="p-0010" num="0009">In another aspect of the invention, a computer system is provided with a server in communication with a data storage medium, wherein data stored local to the storage is segregated into at least two classifications. A receiving manager is provided in communication with the server. The receiving manager is configured to receive a request for data, with the request having an identifier with a security attribute. A filter is provided in communication with the receiving manager. The filter parses data from the storage based upon presence of the security attribute in at least one of the classifications of the data, and based upon presence of a security policy defining access to the classifications of data. In addition, a partition manager is provided in communication with the receiving manager. The partition manager is responsible for dynamically creating a partition to contain the filtered data. More specifically, the partition manager satisfies the request by populating the created partition with a copy of the filtered data.</p>
<p id="p-0011" num="0010">In yet another aspect of the invention, an article is provided with a computer-readable carrier including computer program instructions configured to address a request for classified electronic data. Instructions are provided to separate stored data into at least two classifications, and to receive a request for data. An identifier associated with the request includes a security attribute. Instructions are provided to filter data from the storage based upon presence of the security parameter in at least one of the classifications of the data and based upon presence of a security policy defining access to the classifications of data. In addition, instructions are provided to dynamically create a partition configured to contain the filtered data. To satisfy the request, the created partition is populated with a copy of the filtered data.</p>
<p id="p-0012" num="0011">Other features and advantages of this invention will become apparent from the following detailed description of the presently preferred embodiment of the invention, taken in conjunction with the accompanying drawings.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0013" num="0012">The drawings referenced herein form a part of the specification. Features shown in the drawing are meant as illustrative of only some embodiments of the invention, and not of all embodiments of the invention unless otherwise explicitly indicated. Implications to the contrary are otherwise not to be made.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 1</figref> is a flow chart illustrating creation of a single level partition within a multi-level partition.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 2</figref> is a flow chart illustrating communication of data from a server to a single level partition.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 3</figref> is a flow chart illustrating an alternative process for conveying data through a single level partition.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 4</figref> is a flow chart illustrating expiration of a single level partition.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 5</figref> is a block diagram illustrating creation of one or more single level partitions for satisfying data requests according to the preferred embodiment of this invention, and is suggested for printing on the first page of the issued patent.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DESCRIPTION OF THE PREFERRED EMBODIMENT</heading>
<p id="p-0019" num="0018">It will be readily understood that the components of the present invention, as generally described and illustrated in the Figures herein, may be arranged and designed in a wide variety of different configurations. Thus, the following detailed description of the embodiments of the apparatus, system, and method of the present invention, as presented in the Figures, is not intended to limit the scope of the invention, as claimed, but is merely representative of selected embodiments of the invention.</p>
<p id="p-0020" num="0019">The functional units described in this specification have been labeled as managers. A manager may be implemented in programmable hardware devices such as field programmable gate arrays, programmable array logic, programmable logic devices, or the like. The manager may also be implemented in software for processing by various types of processors. An identified manager of executable code may, for instance, comprise one or more physical or logical blocks of computer instructions which may, for instance, be organized as an object, procedure, function, or other construct. Nevertheless, the executables of an identified manager need not be physically located together, but may comprise disparate instructions stored in different locations which, when joined logically together, comprise the manager and achieve the stated purpose of the manager.</p>
<p id="p-0021" num="0020">Indeed, a manager of executable code could be a single instruction, or many instructions, and may even be distributed over several different code segments, among different applications, and across several memory devices. Similarly, operational data may be identified and illustrated herein within the manager, and may be embodied in any suitable form and organized within any suitable type of data structure. The operational data may be collected as a single data set, or may be distributed over different locations including over different storage devices, and may exist, at least partially, as electronic signals on a system or network.</p>
<p id="p-0022" num="0021">Reference throughout this specification to &#x201c;a select embodiment,&#x201d; &#x201c;one embodiment,&#x201d; or &#x201c;an embodiment&#x201d; means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, appearances of the phrases &#x201c;a select embodiment,&#x201d; &#x201c;in one embodiment,&#x201d; or &#x201c;in an embodiment&#x201d; in various places throughout this specification are not necessarily referring to the same embodiment.</p>
<p id="p-0023" num="0022">Furthermore, the described features, structures, or characteristics may be combined in any suitable manner in one or more embodiments. In the following description, numerous specific details are provided, such as examples of receiving manager, filter, partition manager, etc., to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the invention can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.</p>
<p id="p-0024" num="0023">The illustrated embodiments of the invention will be best understood by reference to the drawings, wherein like parts are designated by like numerals throughout. The following description is intended only by way of example, and simply illustrates certain selected embodiments of devices, systems, and processes that are consistent with the invention as claimed herein.</p>
<heading id="h-0005" level="1">Overview</heading>
<p id="p-0025" num="0024">Data may be classified for various reasons, including topics and/or security. By classifying data, it may be parsed to satisfy data requests and to yield results specific to a request. Security classification may be based upon security labels consisting of a hierarchy of security levels and non-hierarchical categories, roles, groups, organizations, etc. Each security classification is associated with an identifier, which is then employed as a field to satisfy a data request.</p>
<p id="p-0026" num="0025">A system which has access to all classifications of data, and which interacts directly with users to deliver only the classified data to which the requester is authorized, is at risk of leaking unauthorized data. The leak may be the result of an intentional exploitation of vulnerability, or may be an inadvertent result of a software defect. A system which only hosts single classifications of data cannot leak other data classifications even if it is successfully attacked. While single category systems enhance data security, there may be insufficient resources to simultaneously host all categories. Dynamically instantiated ephemeral partitions allow a potentially large number of data classifications to be delivered from single classification partitions with fewer resources.</p>
<heading id="h-0006" level="1">Technical Details</heading>
<p id="p-0027" num="0026">In the following description of the embodiments, reference is made to the accompanying drawings that form a part hereof, and which shows by way of illustration the specific embodiment in which the invention may be practiced. It is to be understood that other embodiments may be utilized because structural changes may be made without departing form the scope of the present invention.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 1</figref> is a flow chart (<b>100</b>) illustrating the process of creating a single level partition within a multiple level partition for requested data. Initially a client machine requests data from a server (<b>102</b>). The requested data includes two fields, a first field containing a subject category, and a second field containing a data security level. Upon receipt of the data request at step (<b>102</b>), the server obtains the classification level from the data request (<b>104</b>). In one embodiment, the server employs a hypervisor for receipt and management of data requests. A hypervisor is a software program that manages multiple operating systems, or multiple instances of the same operating system, on a single computer system. The hypervisor manages the system's processor, memory, and other resources to allocate resources based upon the requirements of each operating system. Following step (<b>104</b>), it is determined if a partition at the classification level of the data request is present in the system (<b>106</b>). In one embodiment, the determination at step (<b>106</b>) includes an investigation of the multiple level partitions for the requested classification level associated with the data request. A negative response to the determination at step (<b>106</b>) is followed by creation of a single level partition at the classification level of the data request (<b>108</b>). In one embodiment, the partition created at step (<b>108</b>) is a new single level partition within the multiple level partitions. Following step (<b>108</b>) or a negative response to the determination at step (<b>106</b>), a route is created to communicate the requested data to the appropriate single level partition (<b>110</b>). Regardless of whether the partition previously existed or was dynamically created in response to the data request, it is determined if a time interval for which the single level partition will remain active should be assigned to the partition (<b>112</b>). A positive response to the determination at step (<b>112</b>) is followed by entry of a time interval for the subject partition (<b>114</b>). Conversely, a negative response to the determination at step (<b>112</b>) is followed by omission of a time interval assignment to the subject partition (<b>116</b>). Accordingly, a single level partition is employed to route data at a particular classification level within a multi-level partition of the server.</p>
<p id="p-0029" num="0028">Once the single level partition is created, or identified as existing in the system, a route for data communication is established. <figref idref="DRAWINGS">FIG. 2</figref> is a flow chart (<b>200</b>) illustrating a process for communicating data from the server to the subject single level partition. Initially, it is determined if there is data in the subject single level partition (<b>202</b>). A positive response is followed by the subject single level partition returning data to the client machine (<b>204</b>). In one embodiment, the pre-existence of the subject single level partition is an indication that it has been pre-populated with data that satisfies the data request. Conversely, a negative response to the determination at step (<b>204</b>) is followed by the subject single level partition requesting data from the multiple level partition to satisfy the client request (<b>206</b>). In response to the data request (<b>206</b>), the multiple level partitions sanitize the requested data (<b>208</b>). Each data request from a client machine includes a subject category field and a data security level field. As such, all data must be redacted to protect the security policy for each single level partition. In one embodiment, and as demonstrated herein, the security policy is enforced when data is placed in the partition. The aspect of security enforcement does not change data; rather it ensures that data for each single level partition is unique to that partition. In one embodiment, the security policy may be enforced at the partition creation or data population thereof, and the invention should not be limited to the embodiment shown herein. Once the data has been sanitized to meet the security level of the respective single level partition, it is determined if there is any data that meets both the subject category field and a data security level (<b>210</b>). A negative response to the determination at step (<b>210</b>) concludes the data request by returning an empty set to the requesting client (<b>212</b>). Conversely, a positive response to the determination at step (<b>210</b>) is followed by populating the subject single level partition with the data that meets both the subject category field and the data security level (<b>214</b>). Thereafter, the subject single level partition with the populated data returns the populated data to the client machine. Accordingly, a single level partition is employed or dynamically created as a logical volume to convey data pertaining to a specific category and data security level to a client machine.</p>
<p id="p-0030" num="0029">In <figref idref="DRAWINGS">FIGS. 1 and 2</figref>, a single level partition is employed or created and populated with data in response to the client request. <figref idref="DRAWINGS">FIG. 3</figref> is a flow chart (<b>300</b>) illustrating an alternative process for conveying data to a client through a single level partition. As shown, a client machine requests data from a server (<b>302</b>). The requested data includes two fields, a first field for a subject category and a second field for a data security level. In one embodiment, the request includes an identifier in the form of a security attribute. Upon receipt of the data request at step (<b>302</b>), the server obtains the classification level from the data request (<b>304</b>). In one embodiment, the server employs a hypervisor for receipt and management of data requests. Following step (<b>304</b>), it is determined if a partition at the classification level of the data request is present in the system (<b>306</b>). A negative response to the determination at step (<b>306</b>) is followed by creation of a single level partition at the classification level of the data request (<b>308</b>), together with pre-populating the created partition with parsed data that meets the client request based upon both the request subject matter and data security level. Conversely, a positive response to the determination at step (<b>306</b>) is followed by the server routing the requested data to the subject partition (<b>310</b>). In one embodiment, a hypervisor local to the server routes the requested data to the subject partition. Following completion of the population of data in the subject partition at either step (<b>308</b>) or (<b>310</b>), the subject partition returns the data to the requesting client (<b>312</b>). Accordingly, the process shown herein is an alternative aspect of dynamically creating a subject single level partition, populating the subject partition with parsed data, and communicating the populated data of the subject partition to the requesting client.</p>
<p id="p-0031" num="0030">The multiple level partitions may create a plurality of single level partitions to communicate a plurality of data requests to one or more client machines in communication with the server. In one embodiment, the single level partition may only be active for a specific duration of time. Once the time duration expires, the single level partition expires as well. <figref idref="DRAWINGS">FIG. 4</figref> is a flow chart (<b>400</b>) illustrating a process for addressing expiration of a single level data partition. A single level partition is created in response to a client request for data (<b>402</b>). At the time of creation of the partition, time duration is assigned to the subject partition (<b>404</b>). The time duration identifies the maximum time the subject partition will remain active and available to the client machine. Following step (<b>404</b>), it is determined if the time duration for the subject partition has ended (<b>406</b>). A negative response to the determination at step (<b>406</b>) is followed by waiting a period of time (<b>416</b>) and a return to step (<b>406</b>). Conversely, a positive response to the determination at step (<b>406</b>) is followed by a subsequent determination indicating whether the subject partition will be archived following expiration of the time duration (<b>408</b>). A positive response to the determination at step (<b>408</b>) is followed by retention of a copy of the filtered data (<b>410</b>). In one embodiment, the data in the partition is archived and the partition is removed. Conversely, a negative response to the determination at step (<b>408</b>) is followed by destruction of the data retained in the subject partition (<b>412</b>) and removal of the subject partition (<b>414</b>). Accordingly, each subject single level partition may be removed with or without archiving the data stored within the partition.</p>
<p id="p-0032" num="0031">Data requests are submitted to a server from a requestor. The server processes the request(s) based upon the request parameters. As described above, each data request is accompanied by two identifiers, one for a subject category, and the second for security classification information. <figref idref="DRAWINGS">FIG. 5</figref> is a block diagram (<b>500</b>) of a computer system employing a multiple level partition for creation of multiple single level partitions to address one or more requests for data having different characteristics. As shown, a server (<b>502</b>) is provided in communication with a distributed network (<b>520</b>) from which it gathers and receives data and a client machine (<b>540</b>) to which it services request for data. The server (<b>502</b>) includes a processing unit (<b>504</b>) in communication with memory (<b>506</b>) across a bus (<b>508</b>). Although only one processing unit (<b>504</b>) is shown, the invention should not be limited to the quantity shown herein. In one embodiment, two or more processing units may be provided in the server. The server is also provided with a receiving manager (<b>512</b>) in communication with the processing unit (<b>504</b>) and memory (<b>506</b>), and data storage (<b>514</b>). The receiving manager (<b>512</b>) is configured to receive data requests from one or more client machines. Each data request is accompanied with both the subject identifier and the security level identifier. The receiving manager (<b>512</b>) is in communication with a filter (<b>516</b>), which parses the data based upon the identifiers provided with the request. In one embodiment, the filter (<b>516</b>) redacts data for both the requests subject category and data security level. All data that satisfies the request is then processed by a partition manager (<b>518</b>), which is in communication with the receiving manager (<b>512</b>). The partition manager (<b>518</b>) either dynamically creates a temporary partition (<b>528</b>) or employs an appropriately categorized and previously created temporary partition to receive the parsed data. In one embodiment, the partition manager (<b>518</b>) is in the form of a hypervisor which creates one or more partitions in the form of logical computing systems within a physical computing system.</p>
<p id="p-0033" num="0032">A client machine (<b>530</b>) is provided in communication with the server (<b>502</b>). The client machine includes a processing unit (<b>534</b>) in communication with memory (<b>536</b>) across a bus (<b>538</b>). Although only one processing unit (<b>534</b>) is shown, the invention should not be limited to the quantity shown herein. In one embodiment, two or more processing unit may be provided in the client machine (<b>530</b>). An application (<b>540</b>) is provided to request and receive data from the server (<b>502</b>). In one embodiment, the application is in the form of a browser. Each request (<b>542</b>) for data transmitted from the client machine (<b>530</b>) includes a subject identifier (<b>544</b>) and a classification identifier (<b>546</b>). Upon receipt of the request (<b>542</b>) by the server (<b>502</b>), hypervisor (<b>512</b>) creates a temporary partition (<b>550</b>) to service the request. All parsed data that satisfies the request is placed in the temporary partition (<b>550</b>), which is then forwarded to the client machine (<b>530</b>). In one embodiment, the temporary partition is a logical computer within the server. The partition is logically isolated from other resources on the system and only contains data at the security level appropriate for users granted access to the partition. In one embodiment, the temporary partition is a non-persistent partition that is logically isolated. The temporary partition propagates data to the client machine (<b>530</b>), which may store the received data in a local storage medium.</p>
<p id="p-0034" num="0033">In one embodiment, a time manager (<b>560</b>) may be provided local to the client machine (<b>530</b>). The time manager (<b>560</b>) functions to either destroy or archive the data conveyed in the temporary partition. More specifically, the time manager (<b>560</b>) may remove the temporary partition following expiration of a time interval. Removal of the partition includes destroying all of the data maintained local to the partition. Conversely, the time manager (<b>560</b>) may archive the temporary partition, which may include but is not limited to, maintaining a copy of the filtered data in data storage (<b>562</b>) local to the client machine (<b>530</b>). Accordingly, the populated temporary partition may be retained in local data storage of the requesting client, or removed following an expiration of a time interval.</p>
<p id="p-0035" num="0034">Embodiments within the scope of the present invention also include articles of manufacture comprising program storage means having encoded therein program code. Such program storage means can be any available media which can be accessed by a general purpose or special purpose computer. By way of example, and not limitation, such program storage means can include RAM, ROM, EEPROM, CD-ROM, or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired program code means and which can be accessed by a general purpose or special purpose computer. Combinations of the above should also be included in the scope of the program storage means.</p>
<p id="p-0036" num="0035">The medium is an electronic, magnetic, optical, or semiconductor system (or apparatus or device). Examples of a computer-readable medium include a semiconductor or solid state memory, magnetic tape, a removable computer diskette, random access memory (RAM), read-only memory (ROM), a rigid magnetic disk, and an optical disk. Current examples of optical disks include compact disk B read only (CD-ROM), compact disk B read/write (CD-R/W) and DVD.</p>
<p id="p-0037" num="0036">A data processing system suitable for storing and/or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual processing of the program code, bulk storage, and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during processing.</p>
<p id="p-0038" num="0037">Input/output or I/O devices (including but not limited to keyboards, displays, pointing devices, etc.) can be coupled to the system either directly or through intervening I/O controllers. Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening networks.</p>
<p id="p-0039" num="0038">The software implementation can take the form of a computer program product accessible from a computer-useable or computer-readable medium providing program code for use by or in connection with a computer or any instruction processing system.</p>
<heading id="h-0007" level="1">Advantages Over the Prior Art</heading>
<p id="p-0040" num="0039">Multiple single level (MSL) security separates different classifications of data using separate machines (or virtual machines) for each classification. Use of dynamically created ephemeral partitions, as taught herein, provides the security of Multiple Single Level (MSL) systems with minimal hardware resources, thereby making it a cost effective solution while providing enhanced security for communication of data.</p>
<heading id="h-0008" level="1">Alternative Embodiments</heading>
<p id="p-0041" num="0040">It will be appreciated that, although specific embodiments of the invention have been described herein for purposes of illustration, various modifications may be made without departing from the spirit and scope of the invention. In particular, data categorization may be expanded to include one or more additional categories to further define and parse the data. Accordingly, the scope of protection of this invention is limited only by the following claims and their equivalents.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>We claim:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for addressing a request for classified electronic data, comprising:
<claim-text>segregating data stored in a storage into at least two classifications;</claim-text>
<claim-text>receiving a request for data, wherein an identifier associated with the request includes a security attribute and a subject category;</claim-text>
<claim-text>filtering data from the storage based upon presence of the security attribute in at least one of the classifications of the data and based upon presence of a security policy defining access to the classifications of data;</claim-text>
<claim-text>dynamically creating a partition to contain request-specific filtered data in response to the request;</claim-text>
<claim-text>populating the created partition with a copy of the filtered data, wherein the created partition contains only data meeting the security policy and the subject category of the request; and</claim-text>
<claim-text>redirecting the request to the created partition to satisfy the request from the created partition.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising assigning a time interval for active status of the created partition.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising destroying the created partition following expiration of the time interval.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, further comprising destroying the filtered data maintained local to the partition.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising archiving the created partition following expiration of the time interval.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the created partition is configured to receive data filtered for a single classification.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A computer system, comprising:
<claim-text>a server in communication with a data storage medium;</claim-text>
<claim-text>data stored local to the storage medium segregated into at least two classifications;</claim-text>
<claim-text>a receiving manager in communication with the server configured to receive a request for data, the request having an identifier with a security attribute and a subject category;</claim-text>
<claim-text>a filter in communication with the receiving manager, the filter to parse data from the storage medium based upon presence of the security attribute in at least one of the classifications of the data and based upon presence of a security policy that defines access to the classifications of data;</claim-text>
<claim-text>a partition manager in communication with the receiving manager, the partition manager to dynamically create a partition to contain request-specific filtered data in response to the request, wherein the created partition contains only data meeting the security policy and the subject category of the request;</claim-text>
<claim-text>the partition manager to populate the created partition with a copy of the filtered data to satisfy the request.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The system of <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising a time interval assigned to an active status of the created partition.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising a time manager to destroy the created partition following expiration of the time interval, including destroying the filtered data maintained local to the partition.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising a time manager to archive the created partition following expiration of the time interval, including maintenance of a copy of the filtered data in local data storage.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The system of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the created partition is configured to receive data for a single classification.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. An article comprising:
<claim-text>a computer-readable data storage device including computer program instructions configured to address a request for classified electronic data, the instructions comprising:
<claim-text>instructions to separate stored data into at least two classifications;</claim-text>
</claim-text>
<claim-text>instructions to receive a request for data, wherein an identifier associated with the request includes a security attribute;
<claim-text>instructions to filter data from a storage based upon presence of the security parameter in at least one of the classifications of the data and based upon presence of a security policy defining access to the classifications of data;</claim-text>
<claim-text>instructions to dynamically create a partition configured to contain the filtered data in response to the request; and</claim-text>
<claim-text>instructions to satisfy the request from the created partition, including populating the created partition with a copy of request-specific filtered data and redirecting the request to the created partition, wherein the created partition contains only data meeting the security policy and the subject category of the request.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The article of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising instructions to assign a time interval for active status of the created partition.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The article of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising instructions to destroy the created partition following expiration of the time interval.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The article of <claim-ref idref="CLM-00014">claim 14</claim-ref>, further comprising instructions to destroy the filtered data maintained local to the partition.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The article of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising instructions to archive the created partition following expiration of the time interval.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The article of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the created partition is configured to receive data filtered for a single classification. </claim-text>
</claim>
</claims>
</us-patent-grant>
