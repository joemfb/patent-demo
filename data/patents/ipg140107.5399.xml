<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626499-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626499</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12840293</doc-number>
<date>20100720</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>633</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>13</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>704224</main-classification>
</classification-national>
<invention-title id="d2e53">Multimedia signal latency management by skipping</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6006300</doc-number>
<kind>A</kind>
<name>Toutant</name>
<date>19991200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710314</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6012110</doc-number>
<kind>A</kind>
<name>Olson et al.</name>
<date>20000100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710 60</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6920118</doc-number>
<kind>B2</kind>
<name>Lozano</name>
<date>20050700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370329</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7982739</doc-number>
<kind>B2</kind>
<name>Pasula</name>
<date>20110700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345473</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2002/0075831</doc-number>
<kind>A1</kind>
<name>Lozano</name>
<date>20020600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370335</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2007/0087836</doc-number>
<kind>A1</kind>
<name>Pasula</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>463 43</main-classification></classification-national>
</us-citation>
</us-references-cited>
<number-of-claims>23</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>709224</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>8</number-of-drawing-sheets>
<number-of-figures>8</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61227396</doc-number>
<date>20090721</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110022705</doc-number>
<kind>A1</kind>
<date>20110127</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Yellamraju</last-name>
<first-name>SivaKiran Venkata</first-name>
<address>
<city>Santa Clara</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Katasani</last-name>
<first-name>Simha Sundeep Reddy</first-name>
<address>
<city>Santa Clara</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Yellamraju</last-name>
<first-name>SivaKiran Venkata</first-name>
<address>
<city>Santa Clara</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Katasani</last-name>
<first-name>Simha Sundeep Reddy</first-name>
<address>
<city>Santa Clara</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Wong, Cabello, Lutsch, Rutherford &#x26; Brucculeri, L.L.P.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>ViVu, Inc.</orgname>
<role>02</role>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Harrell</last-name>
<first-name>Robert B</first-name>
<department>2442</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method or system for enabling client devices connected to a network to subscribe to a one or more multimedia signals available in a selection of bandwidths, based on an analysis of capabilities of the client, the quality of the connection, and the real-time changes in the ability of the client to process the signal.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="196.26mm" wi="141.05mm" file="US08626499-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="150.28mm" wi="140.12mm" file="US08626499-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="205.49mm" wi="164.34mm" file="US08626499-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="220.13mm" wi="153.16mm" file="US08626499-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="219.03mm" wi="162.22mm" file="US08626499-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="168.40mm" wi="163.49mm" file="US08626499-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="112.61mm" wi="156.04mm" file="US08626499-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="176.11mm" wi="164.51mm" file="US08626499-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="211.07mm" wi="170.26mm" file="US08626499-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CLAIM OF PRIORITY</heading>
<p id="p-0002" num="0001">This application claims the benefit of U.S. Provisional Patent Application No. 61/227,396 titled &#x201c;Method and Apparatus for Subscription-based Bandwidth Balancing for Interactive Heterogeneous Clients'&#x201d; filed Jul. 21, 2009.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND OF INVENTION</heading>
<p id="p-0003" num="0002">1. Field of the Invention</p>
<p id="p-0004" num="0003">This invention relates to a method and apparatus for enabling interaction between users using two or more client devices with different capabilities and bandwidths.</p>
<p id="p-0005" num="0004">2. Background and Description of the Related Art</p>
<p id="p-0006" num="0005">In a heterogeneous network, different client devices have different capabilities. If a single stream is being viewed by these client devices, either the server must slow down to the rate of the slowest client or one or more clients will lose packets. Either way, the quality of the presentation will suffer.</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 1</figref> shows an example of such a system in the prior art. In this example, we show three clients. A client which can handle high speed data streams <b>102</b>, a client which can handle medium speed data streams <b>106</b>, and a client which can handle low speed data streams <b>104</b>. In this scenario, a media server <b>108</b> sends a high speed data stream to the network <b>110</b>. The media server has no knowledge of the clients <b>102</b>, <b>104</b>, <b>106</b> who are accepting the data stream, as they are passively integrated with the network <b>110</b> as well. The result will be that the client capable of keeping up with the stream <b>102</b> will be able to process it successfully. The other two <b>104</b>, <b>106</b> will experience differing levels of degradation ranging from what appears to be noisy or distorted information being presented to the client to complete loss blocks of information.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0008" num="0007">A method or system for enabling client devices connected to a network to subscribe to a one or more multimedia signals available in a selection of bandwidths, based on an analysis of capabilities of the client, the quality of the connection, and the real-time changes in the ability of the client to process the signal.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0009" num="0008">A better understanding of the present invention can be obtained from the following detailed description in conjunction with the following drawings, in which:</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 1</figref> illustrates the process of heterogeneous client-server interactions in the prior art.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 2</figref> illustrates the environment in which an embodiment of the subscription-based multimedia bandwidth balancing is executed.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 3</figref> illustrates one embodiment of a subscription server.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 4</figref> illustrates one embodiment of a subscription multimedia client.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 5</figref> illustrates one embodiment of the media exchange table.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 6</figref> illustrates how the system processes a data stream where the client is slower than the stream.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 7</figref> illustrates a process associated with handling an incoming media stream.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 8</figref> illustrates a method of managing the impact of signal latency on the reception of a multimedia signal by a client device coupled to a network.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<p id="p-0018" num="0017">The figures are provided in order to provide a thorough understanding of the present invention. The figures should not be construed as limiting the breath of the invention in any manner.</p>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0019" num="0018">An embodiment of the device consists of a computer connected to a network and one or more interactive input devices. These input devices may include but are not limited to a mouse, keyboard and webcam. Each participant is assigned a role.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 2</figref> illustrates one environment in which one or more embodiments of the invention may operate. However, not all of these components may be required to practice the invention, and variations in the arrangement and type of the components may be made without departing from the spirit or scope of the invention.</p>
<p id="p-0021" num="0020">As shown in <figref idref="DRAWINGS">FIG. 2</figref>, system includes subscription multimedia client devices <b>202</b>, a primary network <b>208</b>, and a subscription server <b>210</b>. The primary network <b>208</b> is in communication with and enables communication between each of the subscription multimedia client devices <b>202</b> and subscription server <b>210</b>. In one or more embodiments, one or client devices without subscription capabilities <b>228</b> may be connected via an intermediary network <b>220</b>, such as a cellular or telephony network. The subscription server <b>210</b> may then interconnect with this intermediary network either indirectly via a gateway <b>222</b>, or directly through its own interface <b>224</b>.</p>
<p id="p-0022" num="0021">Subscription multimedia client devices <b>202</b> may include virtually any network-capable device which can send and receive messages over a network <b>208</b>, to and from another interactive device, such as the subscription server <b>210</b>, each other, and the like. The set of such interactive devices may include devices that typically connect using a wired communications medium such as personal computers, multiprocessor systems, microprocessor-based or programmable consumer electronics, network PCs and the like. The set of such devices may also include devices that typically connect using a wireless communications network such as smart phones, integrated devices combining one or more of the preceding devices, or virtually any mobile device, and the like. Similarly, subscription multimedia client devices <b>202</b> may be any device that is capable of connecting using a wired or wireless communication medium such as a PDA, Pocket PC, wearable computer, and any other device that is equipped to communicate over a wired and/or wireless communication medium.</p>
<p id="p-0023" num="0022">Each subscription multimedia client device <b>202</b> may include a browser application that is configured to receive and to send web pages, and the like. The browser application may be configured to receive and display graphics, text, multimedia, and the like, employing virtually any web-based language, including but not limited to a Standard Generalized Markup Language (SGML), such as Hyper Text Markup Language (HTML), a wireless application protocol (WAP), a Handheld Device Markup Language (HDML) such as Wireless Markup Language (WML), WMLScript, JavaScript, and the like.</p>
<p id="p-0024" num="0023">Subscription multimedia client devices <b>202</b> may further include a client application that is configured to manage various actions on behalf of the subscription multimedia client device. For example, the client application may enable a user to interact with the browser application, email application, and the like.</p>
<p id="p-0025" num="0024">The primary network <b>208</b> is configured to couple one interactive device to another interactive device to enable them to communicate. In one or more embodiments, the primary network <b>208</b> is configured to employ any form of computer readable media for communicating information from one electronic device to another. In one or more embodiments, the primary network <b>208</b> may include a wireless interface, and/or a wired interface, such as the Internet, in addition to local area networks (LANs), wide area networks (WANs), direct connections such as through a universal serial bus (USB) port, other forms of computer-readable media, or any combination thereof.</p>
<p id="p-0026" num="0025">The media used to transmit information in communication links as described above illustrates one type of computer-readable media, namely communication media. Generally, computer-readable media includes any media that can be accessed by a computing device. Computer-readable media may include computer storage media, communication media, or any combination thereof.</p>
<p id="p-0027" num="0026">Additionally, communication media typically embodies computer-readable instructions, data structures, program modules, or other data in a modulated data signal such as a carrier wave, data signal, or other transport mechanism and includes any information delivery media. The term &#x201c;modulated data signal&#x201d; and &#x201c;carrier-wave signal&#x201d; includes a signal that has one or more of its characteristics set or changed in such a manner as to encode information, instructions, data, and the like, in the signal.</p>
<p id="p-0028" num="0027">One embodiment of the subscription server <b>210</b> is described in more detail below in conjunction with <figref idref="DRAWINGS">FIG. 3</figref>. Briefly, however, the subscription server <b>210</b> may include any computing device capable of connecting to the primary network <b>208</b> to manage one or more interactions with two or more users through the subscription multimedia client devices <b>202</b>. Devices that may operate as the subscription server <b>210</b> include personal computers, multiprocessor systems, servers, and the like.</p>
<p id="p-0029" num="0028">The subscription server <b>210</b> may be configured to receive information associated either with a subscription multimedia client device <b>202</b>, and to enable a user to customize a view based in part on the received information. The received information may include, but is not limited to capability information.</p>
<p id="p-0030" num="0029">The term &#x201c;capability information&#x201d; is meant to encompass information about a client device and user to include information that is specific to how the user can interact with the subscription server <b>210</b> on a particular interaction session. For instance, if the user is dialed in or connected via a voice channel such as Skype&#x2122;, then it would be voice only and no capabilities like graphics or chat would be available. However, if the user was connected via a personal computer with no microphone or camera, they would have graphical capabilities, could do chats, but could not subscribe to sound information.</p>
<p id="p-0031" num="0030">The term &#x201c;subscriber&#x201d; is meant to encompass a user who is part of an interaction session but is not in control of the information being presented to other participants.</p>
<p id="p-0032" num="0031">The term &#x201c;publisher&#x201d; is meant to encompass a user who is part of an interaction session and is in control of the information being presented to other participants.</p>
<p id="p-0033" num="0032">The capability information may be stored in media that includes database, text, files and the like, that are configured to maintain and store information associated with the user and interaction session.</p>
<p id="p-0034" num="0033">The &#x201c;quality&#x201d; of the media stream refers to the bandwidth of the stream. The higher the bandwidth, the higher the quality of the stream. A client device which has high available bandwidth can accommodate a higher quality media stream at a without losing or skipping parts of the signal. A client device with less available bandwidth will have to either subscribe to a lower quality stream or constantly skip ahead in using a signal buffer in order to keep up with the incoming signal.</p>
<p id="p-0035" num="0034">In one or more embodiments, the subscription multimedia client device <b>202</b> would make itself known to the subscription server <b>210</b> by requesting to join a session. On request to join a session, the subscription server <b>210</b> sends the subscription multimedia client device <b>202</b> a list of all media streams associated with that session, including a unique identifier for the stream, the type of stream, and one or more bandwidths available for that stream. On request for some set of available media streams, the response from the subscription server <b>210</b> would be limited to those media streams in available bandwidths. In one or more embodiments, the subscription multimedia client device <b>202</b> includes display logic enabling a user to select the stream or streams desired. In one or more embodiments this can be limited to just the identifiers and then logic would be employed in the subscription multimedia client device <b>202</b> to maximize the number and quality of the streams. In other embodiments, the client may prioritize the streams such that the best quality of each stream is received or not received at all. In other embodiments, the client may select the actual bandwidth to associate with each stream.</p>
<p id="p-0036" num="0035">In one or more embodiments, the subscription server <b>210</b> would include logic to limit this set to media streams which are applicable to a subscription multimedia client device <b>202</b>. In one or more embodiments, where the subscription multimedia client device <b>202</b> logs in through some fixed interface such as Skype&#x2122; or even a non-interactive device such as a telephone or radio, the subscription server <b>210</b> would either detect or assume this fixed bandwidth and select the appropriate stream based on some information provided by the connection such as through an IVR, the phone number dialed into, and the like.</p>
<p id="p-0037" num="0036">For each signal there is a publisher and subscriber. The subscription server <b>210</b> acts as a mediator between publishers and subscribers by storing the capabilities of all client devices. If the client devices have processing capabilities, they notify the subscription server <b>210</b> of their capabilities. If they do not, the subscription server <b>210</b> determines their capabilities based on the network (such as telephony) they are attached to.</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 3</figref> shows one embodiment of the Subscription Server <b>300</b>. Although illustrated in <figref idref="DRAWINGS">FIG. 3</figref> in distinct components, the Media Exchange Table (MXT) Manager <b>330</b>, Publishing Manager <b>332</b>, Subscription Manager <b>334</b>, and Capability Manager <b>336</b> may be arranged, combined, and the like, in any of a variety of ways, with other components embodied on the client, without departing from the scope of the present invention. For example, for some types of client devices that support storage or client program execution beyond render a graphic and sending interaction inputs (such as from a touch screen, keyboard or mouse) to a server, the software that is said to be embodied on the subscription server <b>300</b> may be on the client, and may be arranged as part of the component herein identified as the MXT Manager <b>330</b>. In one or more embodiments, the information associated with each user and the logic to process the information would be stored on the client. Each client then would broadcast requests to all other clients listening on the network, such that each client would have its own embodiment of an MXT manager, publishing manager, capability manager, and subscription manager. In one or more embodiments, some clients such as simple telephone equipment or video monitors would not be capable of doing this, and so the logic would be needed on the server.</p>
<p id="p-0039" num="0038">In one or more embodiments, the subscription server <b>300</b> includes input/output interfaces <b>324</b> for communicating with external devices, such as a mouse, keyboard, scanner, Network interfaces <b>304</b> for communicating over one or more networks, or other devices not shown in <figref idref="DRAWINGS">FIG. 3</figref>. In one or more embodiments, for the execution of the programs necessary for the subscription server to run, there is no need for direct human interaction on the server. However, the subscription server <b>300</b> may include one or more Video Display Adapters <b>310</b> to enable direct interaction with the server. The subscription server <b>300</b> may further include additional mass storage facilities such as a CD-ROM/DVD-ROM drive <b>326</b> or hard disk drive <b>328</b>. Hard disk drive <b>328</b> may be utilized to store, among other things, application programs, databases, and the like. However, in other embodiments, the information may be stored on another form of persistence store such as a flash drive, read-only memory <b>312</b> (ROM), or network access storage (NAS) drives.</p>
<p id="p-0040" num="0039">Computers generally run programs by stepping through a program or aggregate of programs called an operating system (O/S) <b>308</b>. Parts of the O/S may run in random-access memory <b>306</b> and execute on a central processing unit (CPU) <b>302</b>. In one or more embodiments, the RAM <b>306</b> is loaded at startup with parts of the O/S <b>308</b> and the ROM <b>312</b> contains the Basic Input/Output System (BIOS) <b>314</b>. However, one or more embodiments a computer may include some or all of these components, such as a computer that runs only on software burned into ROM <b>312</b>, using RAM <b>306</b> only for temporary data storage.</p>
<p id="p-0041" num="0040">In one or more embodiments, each client's MXT Handler <b>406</b> would manage the relationship between the available media streams and the client stream players. Some clients such as telephones may not have compute capability. The MXT Manager <b>330</b> then maintains the subscriptions of all clients, unless the client is capable of doing its own processing and overrides it.</p>
<p id="p-0042" num="0041">In one or more embodiments, the Publishing Manager <b>332</b> tracks the streams which are published from a client. The streams are published based on available bandwidth and priority. In one or more embodiments, the streams are published from the least bandwidth of each signal, in order of priority, then the next highest bandwidth of each signal in order of priority, until bandwidth is used up.</p>
<p id="p-0043" num="0042">In one or more embodiments, the Subscription Manager <b>334</b> interacts with the MXT Manager <b>334</b> to request which streams to subscribe to based on the reported bandwidth and the available streams. When the client logs in, the MXT Manager <b>330</b> receives the set of media streams available and updates the MXT. The Subscription Manager <b>334</b> queries the MXT Manager <b>330</b> for streams and determines which streams to subscribe to based on priority of the signal type and the available bandwidth.</p>
<p id="p-0044" num="0043">In one or more embodiments, the Capability Manager <b>336</b> manages the capabilities of all clients. If the clients have processing capabilities, they notify the server of their capabilities. If they do not, the server determines their capabilities based on the network (such as telephony) they are attached to. For those clients that don't have the ability to determine their own capabilities, the Capability Manager <b>336</b> interacts with the Subscription Manager <b>334</b> to send stream or streams to clients based on the capabilities of the client and bandwidth of the network. For example, if the client is part of a fixed network such as a telephony network, only a fixed rate audio stream would be available. If the client were on a local area network with a high available bandwidth, then multiple streams at different bit rates could be made available simultaneously. This includes the same information published at multiple bit rates.</p>
<p id="p-0045" num="0044">In one or more embodiments, a client logs in to a session, determines its capabilities based on available hardware and bandwidth, then sends its capabilities to the server. However, if the client is not capable of processing, then the server will decide for itself based on the type of connection. A Capability Manager <b>336</b> exists on the server to be the aggregation of capabilities from all clients including the &#x201c;dumb&#x201d; clients.</p>
<p id="p-0046" num="0045">The MXT Handler <b>204</b> manages the multimedia streams that the subscription multimedia client device <b>202</b> can subscribe to or publish based on available bandwidth. The CSP <b>206</b> manages the reception of the subscribed streams, including any quality issues associated with those streams. The ALF <b>226</b> manages the latency of the signal so that the buffer length is maintained such that the signal breaks are minimized to maintain the quality of the signal in balancing the bandwidth capacity of the client against the bandwidth requirements of the media streams. These components will be discussed in detail with <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 4</figref> shows one embodiment of a Subscription Multimedia Client <b>400</b>. Although illustrated in <figref idref="DRAWINGS">FIG. 4</figref> in distinct components, the MXT Handler <b>406</b>, Client Stream Player (CSP) <b>408</b>, Adaptive Latency Filter (ALF) <b>410</b>, Subscription Handler <b>412</b>, Monitoring Module <b>414</b>, and Capability Handler <b>416</b> may be arranged, combined, and the like, in any of a variety of ways, with other components embodied on the client or server, without departing from the scope of the present invention.</p>
<p id="p-0048" num="0047">In one or more embodiments, the Subscription Multimedia Client device <b>400</b> includes input/output interface <b>424</b> for communicating with external devices, such as a mouse, keyboard, scanner, or other devices not shown in <figref idref="DRAWINGS">FIG. 4</figref>. However, in one or more embodiments, for the execution of the programs necessary for the Subscription Server to run, there is no need for direct human interaction on the server as the purpose of the server is to maintain sessions through presence requests and notification. Likewise, the Subscription Server may further include additional mass storage facilities such as a CD-ROM/DVD-ROM drive <b>420</b> or hard disk drive <b>422</b>. Hard disk drive <b>422</b> may be utilized to store, among other things, application programs, databases and the like. However, in other embodiments, the information may be stored on another form of persistence store such as a flash drive, read-only memory (ROM), or network access storage (NAS) drives.</p>
<p id="p-0049" num="0048">In one or more embodiments, Subscription Multimedia Client devices <b>400</b> may also send requests to the Subscription Server <b>300</b> that they are publishing one or more media streams. The Subscription Multimedia Client device <b>400</b> would calculate the total bandwidth of these streams such that the sum of the bandwidth used to publish streams does not exceed the total bandwidth available. The total bandwidth available is reduced by the media streams that the Subscription Multimedia Client device <b>400</b> has subscribed to.</p>
<p id="p-0050" num="0049">In one or more embodiments, the Subscription Multimedia Client device <b>400</b> can adjust the quality of the streams subscribed to as the bandwidth available degrades or improves. If the Subscription Multimedia Client Device <b>400</b> detects a temporary degradation in bandwidth it can change subscriptions to streams to a lower bandwidth stream if available or drop a stream entirely. In one or more embodiments, the algorithm to do this could vary with the state of the client, so that it might be programmed to keep published streams dropping subscribed streams first, drop video keeping voice channels, or based on some user-selected priority scheme.</p>
<p id="p-0051" num="0050">In one or more embodiments the MXT Handler <b>406</b> manages the relationship between the available media streams and the client stream players. The MXT Handler <b>406</b> tracks the total available bandwidth and signal quality. Both the available bandwidth and signal quality changes as a function of time. The ALF <b>410</b> determines that the signal quality has changed based on time series calculations around thresholds. If the ALF <b>410</b> determines that a threshold has been crossed indicating that the signal quality has decreased, it commands the CSP <b>408</b> playing that stream to downgrade. If a lower grade stream is available, the CSP <b>408</b> will downgrade the stream. If the signal quality has increased, the ALF <b>410</b> will command the CSP <b>408</b> to upgrade the stream if available. If more bandwidth is introduced because one or more streams are no longer associated with CSPs <b>408</b>, the other CSPs <b>408</b> are commanded to upgrade based on the amount of bandwidth available and the priority of the signals. In one or more embodiments, the priority of each signal is determined based on an algorithm which ranks by media type and bandwidth.</p>
<p id="p-0052" num="0051">The MXT Handler <b>406</b> will act on the signal parameters based on the MXT. The MXT is always the same for all clients logged into a specific session, covering all published streams in that session. When a device is logged into the server it will receive the MXT associated with that session based on what streams are available from the Publisher Manager on the particular Subscription Server they are connected to.</p>
<p id="p-0053" num="0052">In one or more embodiments, the CSP <b>408</b> plays the media stream on behalf of the client. One or more CSPs <b>408</b> are created on a client, one for each media stream generated for the client. A media stream is associated with a Subscription Handler <b>412</b>. In one or more embodiments, each Subscription Handler <b>412</b> maintains the state of a stream, It assigns the stream to a CSP <b>408</b>. As the bandwidth or signal quality changes such that the signal is no longer available, the Subscription Handler <b>412</b> commands the CSP <b>408</b> to play a different media stream.</p>
<p id="p-0054" num="0053">In one or more embodiments, there are one or more instantiations of the CSP <b>408</b> to play video, slides, audio, or other kinds of streams. Each CSP <b>408</b> connects to an instance of a Subscription Handler to obtain a stream. Once the CSP <b>408</b> starts playing, there could be glitches in the signal such as network drops which are accounted for by the buffering logic.</p>
<p id="p-0055" num="0054">Each stream is associated with a monitoring module <b>414</b> that monitors the stream latency. The latency statistics from the monitoring module <b>414</b> are reported to the ALF <b>410</b> which calculates the rate of change of the latency (i.e. derivative) to adapt the stream by feeding back actions to the CSP <b>408</b> to skip ahead in the buffer, increase or decrease buffer sizes, and the like. The ALF <b>410</b> will command a CSP <b>408</b> with its actions; if a stream gets disconnected, that gives more bandwidth and other CSPs could then go &#x201c;upscale&#x201d; to get more bandwidth. If there is an improvement in the incoming signal quality, the ALF <b>410</b> will command the CSP <b>408</b> to reset and eliminate any delay.</p>
<p id="p-0056" num="0055">The MXT Handler <b>406</b> maintains the state of the media. For example, if you playing a low quality stream so you are in a state called &#x201c;LOW&#x201d;. If a high quality stream is published, the Subscription Handler <b>412</b> should command the CSP <b>408</b> to consult the MXT Handler <b>406</b> to see if there is enough bandwidth to use it. If the ALF <b>410</b> reports a lot of resets, then the ALF <b>410</b> will command the CSP <b>408</b> to downgrade, and so the CSP <b>408</b> will query the MXT Handler <b>406</b> to see if it can downgrade the signal. If no signal is available to downgrade to, the CSP <b>408</b> will stop playing the signal altogether until the quality improves. As soon as it downgrades, the MXT Handler <b>406</b> will update the state of the stream. The MXT Handler <b>406</b> will maintain the total bandwidth available, total bandwidth used, total bandwidth free, thus maintaining the state of a CSP <b>408</b> as being mapped to a stream at a specific quality.</p>
<p id="p-0057" num="0056">In one or more embodiment client devices which support adequate processing have their own Capability Handler <b>416</b>. The Capability Handler <b>416</b> figures out what the capabilities of the client are by reflecting bandwidth to the server as well as determining what hardware (webcam, CPU, RAM) are available on the client. Based on its' report to the Subscription Server <b>300</b>, the Subscription Server determines the proper set of streams to send to the Subscription Multimedia Client device <b>400</b>.</p>
<p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. 5</figref> shows an embodiment of a data structure to store the information the MXT Handler needs, called the Media Exchange Table (MXT) <b>500</b>. The MXT <b>500</b> is an embodiment of a list of the available media streams to publish and subscribe to. Logic in the client stream player would choose which streams to publish and subscribe to based on the available bandwidth and the priority algorithm programmed into it. The MXT <b>500</b> would store the identifier or name <b>502</b>, speed <b>504</b>, type <b>506</b>, and source <b>508</b> for each available stream. The name <b>502</b> could be a human-readable descriptor or in another embodiment encoded information to include other parts of the information such as stream type or source. In one or more embodiments, the speed <b>504</b> is a number representing a measure of a bandwidth. In other embodiments the value for speed represents some arbitrary unit based on the units of that the bandwidth is stored in. The type field <b>506</b> provides some indication of how the media stream will be presented to the user. In one or more embodiments, there may only be one voice stream that can be played at a time. The source field <b>508</b> provides an indication of where the stream came from, so that the client device or server can inform that device whether or not it is available via messages to all devices that have subscribed.</p>
<p id="p-0059" num="0058">In <figref idref="DRAWINGS">FIG. 5</figref>, the first entry in the table is for a signal named &#x201c;VIDEO ONE&#x201d; <b>510</b> with a speed of 584 KPS <b>512</b>, type of &#x201c;VIDEO&#x201d; <b>514</b>, and source of SERVER <b>516</b>. Another signal with the same name <b>526</b>, type <b>530</b>, and source <b>532</b>, but a different speed <b>528</b> is also available. That means that if this signal is one that the user is interested in, he can accept the higher bandwidth signal <b>512</b> unless required bandwidth is not available. If available bandwidth is insufficient, then go to the lower bandwidth signal <b>528</b>, before having to reject it altogether. There is also a text signal <b>518</b>-<b>524</b> and a video signal <b>534</b>-<b>540</b> from other clients named CLIENT3 <b>524</b> and CLIENT2 <b>540</b> respectively. Depending on the algorithm used by the client device to select if it is bandwidth limited, one or more of the named signals may not be subscribed to.</p>
<p id="p-0060" num="0059">In one or more embodiments, each subscription multimedia client device has a component called an Adaptive Latency Filter (ALF). The ALF measures the latency of each signal subscribed to over time. In one or more embodiments, this is done by buffering approximately the last 30 seconds of the signal. Although the 30 seconds is not a specific value that the processor must adhere to, if it is too long then the time between resets is very long and the signal may degrade significantly between resets. If it is too short, then the number of resets becomes large and the signal appears or sounds very choppy. In other embodiments, the value of the buffering time is adaptive based on the rate of resets over some period of time. In one or more embodiments, if you have a higher rate of resets (i.e. resets over some period of time like 60 seconds), the size of the signal buffer is increased. In one or more embodiments, the buffer size is parameterized with min and max limits. In one or more embodiments, the buffer sizes are increased or decreased in fixed steps. In other embodiments the buffer size is changed based on a size proportional to the reset rate. In other embodiments, if the reset rate over a period of time falls below some threshold associated with a minimum number of skips over a period of time, the CSP associated with the signal is commanded to upgrade the signal if available; if it goes above a threshold associated with a maximum number of skips over a period of time, the CSP associated with the signal is commanded to downgrade the signal if available.</p>
<p id="p-0061" num="0060">The &#x201c;norm&#x201d; is a measure of a weighted average of the moving average of latency over some recent period of time. In one or more embodiments, the period of time is 30 seconds. The &#x201c;norm&#x201d; is used to determine the threshold for reset. In one or more embodiments the weighted average is based on the value of the moving average; the higher the value the lower the weight. The moving average is what you observe over the 30 second period. The &#x201c;best norm&#x201d; is the minimum norm measure over the session up to that point in time. We define thresholds relative to the absolute value of the norm and best norm. A threshold relative to the norm will be lower than threshold on best norm, for instance, the norm is 1 sec, best norm is 2 seconds. It could also be a fixed percentage above the value as well. If measured signal latency is above either of those by a threshold percentage period of time, then the CSP playing that media stream is commanded to skip part of the signal.</p>
<p id="p-0062" num="0061">The ALF <b>410</b> calculates the average latency over some period of time. In one or more embodiments the calculation of average latency is done by calculating the derivative of the latency vs. time. In one or more embodiments, the ALF <b>410</b> maintains the minimum latency over the current session. If the moving average is greater than some preset value, part of the signal is skipped to allow the stream in the CSP <b>408</b> to catch up, but no more than a specified amount over a specified time period. This is done to minimize the effect of the signal going faster when it falls behind, but the amount you generally lose is a few tenths of a second of signal every few seconds so that the signal remains intelligible. A typical value for the amount of signal skipped would be about 0.5 second, which is more than enough for a user to notice, but not enough to seriously degrade the quality of the user experience.</p>
<p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. 6</figref> shows an example of a graph of latency vs. time and how an embodiment of the ALF <b>410</b> might process it. In one or more embodiments, over some period of time since the start of the session, a mean value for the latency is calculated <b>608</b>. Then a band around the mean value defined as a percentage of the mean value above <b>602</b> and below <b>606</b> is set. If the rate of increase of the latency is above some value for some configured period of time <b>610</b> then a small part of the signal is skipped to reduce the latency in two steps <b>612</b>. The value of the percentage is not fixed, but 150% has been found empirically to be a good value to start with. If the band is much smaller, you risk continuous resets, reducing the quality of the signal. If the band is too wide, the signal will be allowed to drift significantly between resets, again significantly reducing the quality of the signal. In one or more embodiments, the percentage of the mean used to define the band is dynamic based on the number of resets over some period of time significantly longer than time to calculate the mean. The size of the part of the signal that is skipped is on the order of 0.5 seconds. It can be longer, but the longer it is the more the user experience is degraded. The shorter it is, the longer it will take for the stream to &#x201c;catch up&#x201d; and the more often it will have to skip part of the signal.</p>
<p id="p-0064" num="0063">In one or more embodiments, the use of a derivative measurement may cause changes in the latency to be missed if the latency drifts slowly over a period of time. In such a case, the moving average algorithm would miss the drift but its' absolute value would be greater than some percentage of the minimum value, it also resets. As shown in <figref idref="DRAWINGS">FIG. 6</figref>, if the slope of the change in latency is low <b>614</b>, if the latency exceeds some preset value <b>602</b> then parts of the signal will be skipped <b>616</b>.</p>
<p id="p-0065" num="0064">In one or more embodiments, there would be two moving averages, a short moving average is compared to a long moving average, and if the shorter moving average is greater than the substantially longer moving average, some fraction of a second of the signal is skipped. Then it repeats every some preset period until it catches up. In one embodiment, the short moving average would be 5 seconds and the long moving average would be 30 seconds. The period of the short moving average should be substantially longer than the reset period, but substantially shorter than the long moving average. If the period of the shorter moving average is too short, then the signal quality would be affected too much by momentary changes in the signal quality. If the period of the shorter moving average is too long, then you might not see a lot of the drift because it would drift right along with the longer moving average.</p>
<p id="p-0066" num="0065">In one or more embodiments, we also can use a concept called dynamic aggression to avoid choppy signals. Dynamic aggression means that, if resetting occurs some number of times in a row over some period, then the size of the skip is increased by some percentage and the time between allowable skips is increased by some other percentage.</p>
<p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. 7</figref> illustrates one embodiment of the process associated with handling an incoming media stream. When a user's login is accepted, the Subscription Server will send a message <b>704</b> to request capabilities of a client device. If the client device has a Capability Handler <b>416</b>, it will query <b>706</b> the existing client hardware <b>708</b> to determine the capabilities of the user and the hardware. It will also send messages on the network <b>702</b> to determine the bandwidth it sees. It then responds <b>702</b> to the request from the Subscription Server with a set of capabilities that the server will use to determine what media streams should be made available to this client. The Subscription Server will use this information to send the information <b>710</b> on the available media streams to the MXT Handler, which will then use this to initialize its Media Exchange Table <b>500</b>. Once the Media Exchange Table <b>500</b> is established, the MXT Handler <b>406</b> can create a Subscription Handler <b>412</b>, Signal Buffer <b>720</b>, and CSP <b>408</b> for each media stream to be processed. The Subscription Handler <b>412</b> will monitor the incoming media stream to determine the general quality of the stream, and report it to the MXT Handler <b>713</b>. If the quality of the incoming stream falls below a threshold where the signal is no longer of reasonable quality, the CSP is commanded <b>718</b> to stop playing the stream. The signal enters a signal buffer <b>720</b> and is played into the CSP <b>722</b> with some measurable latency. This latency is measured by the monitoring module <b>414</b>. The measured latency is reported to the ALF <b>410</b> which calculates the quality of the signal processing based on the derivative of the latency. As the quality of the signal processing changes, the ALF <b>410</b> will command <b>725</b> the Signal Buffer <b>720</b> associated with the media stream to grow and shrink, and command <b>726</b> the CSP <b>408</b> associated with the media stream to skip ahead or reset its position in the signal buffer <b>720</b>.</p>
<p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. 8</figref> illustrates a flow chart of a method executed by client device <b>400</b> for managing the impact of signal latency on the reception of a multimedia device. The method starts at block <b>801</b> and includes buffering a part of the signal <b>802</b>. At <b>803</b>, a moving average of latency over a first period of time is calculated. Additionally, at <b>804</b>, a minimum of the moving average of the latency over a session is calculated. If this latency exceeds a first percentage of the calculated minimum (block <b>805</b>) then a portion of the playback is skipped (block <b>806</b>). After this skipping, it is determined whether it is the end of the session (block <b>810</b>). If so, the process ends (block <b>812</b>). Otherwise, the process returns to block <b>802</b>.</p>
<p id="p-0069" num="0068">Otherwise, if it was determined at block <b>805</b> that the latency was not greater than a first percentage of the minimum of the moving average of the latency, a change in latency is measured at block <b>807</b>. If, at block <b>808</b>, this change in latency is greater than a threshold (a/k/a configured value) then a portion of the playback is skipped (block <b>806</b>). As above, it is then determined whether the session has ended (block <b>810</b>), and, if so, the process ends (block <b>812</b>). Otherwise the process returns to block <b>802</b>.</p>
<p id="p-0070" num="0069">Otherwise, if it is determined at block <b>808</b> that the change in latency does not exceed the threshold, it is determined whether the latency is greater than a second percentage of the calculated minimum (block <b>809</b>). If not, it is determined whether it is the end of the session (block <b>810</b>) and, if so, the process ends at block <b>812</b> or, if not, the process returns to block <b>802</b>. If it is determined at block <b>809</b> that the latency does exceed the second percentage of the calculated minimum of the moving average of the latency, then, at block <b>811</b>, it is determined whether the time since a portion of playback was last skipped is greater than a threshold. If so, then a portion of the playback is skipped (block <b>806</b>). Otherwise, of after this skipping, it is determined whether the session has ended (block <b>810</b>), and process proceeds accordingly either to the end (block <b>812</b>) or back to block <b>802</b>.</p>
<p id="p-0071" num="0070">In one or more embodiments, programming instructions for executing above described methods and systems are provided. The programming instructions are stored in a computer readable media.</p>
<p id="p-0072" num="0071">With the above embodiments in mind, it should be understood that one or more embodiments of the invention may employ various computer-implemented operations involving data stored in computer systems. These operations are those requiring physical manipulation of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated. Further, the manipulations performed are often referred to in terms, such as producing, identifying, determining, or comparing.</p>
<p id="p-0073" num="0072">Any of the operations described herein that form part of one or more embodiments of the invention are useful machine operations. One or more embodiments of the invention also relates to a device or an apparatus for performing these operations. The apparatus may be specially constructed for the required purposes, such as the carrier network discussed above, or it may be a general purpose computer selectively activated or configured by a computer program stored in the computer. In particular, various general purpose machines may be used with computer programs written in accordance with the teachings herein, or it may be more convenient to construct a more specialized apparatus to perform the required operations.</p>
<p id="p-0074" num="0073">The programming modules and software subsystems described herein can be implemented using programming languages such as Flash, JAVA&#x2122;, C++, C, C#, Visual Basic, JavaScript, PHP, XML, HTML etc., or a combination of programming languages. Commonly available protocols such as SOAP/HTTP may be used in implementing interfaces between programming modules. As would be known to those skilled in the art the components and functionality described above and elsewhere herein may be implemented on any desktop operating system such as different versions of Microsoft Windows, Apple Mac, Unix/X-Windows, Linux, etc., executing in a virtualized or non-virtualized environment, using any programming language suitable for desktop software development.</p>
<p id="p-0075" num="0074">The programming modules and ancillary software components, including configuration file or files, along with setup files required for providing the method and apparatus for troubleshooting subscribers on a telecommunications network and related functionality as described herein may be stored on a computer readable medium. Any computer medium such as a flash drive, a CD-ROM disk, an optical disk, a floppy disk, a hard drive, a shared drive, and storage suitable for providing downloads from connected computers, could be used for storing the programming modules and ancillary software components. It would be known to a person skilled in the art that any storage medium could be used for storing these software components so long as the storage medium can be read by a computer system.</p>
<p id="p-0076" num="0075">One or more embodiments of the invention may be practiced with other computer system configurations including hand-held devices, microprocessor systems, microprocessor-based or programmable consumer electronics, minicomputers, mainframe computers and the like. The invention may also be practiced in distributing computing environments where tasks are performed by remote processing devices that are linked through a network.</p>
<p id="p-0077" num="0076">One or more embodiments of the invention can also be embodied as computer readable code on a computer readable medium. The computer readable medium is any data storage device that can store data, which can thereafter be read by a computer system. Examples of the computer readable medium include hard drives, network attached storage (NAS), read-only memory, random-access memory, CD-ROMs, CD-Rs, CD-RWs, DVDs, Flash, magnetic tapes, and other optical and non-optical data storage devices. The computer readable medium can also be distributed over a network coupled computer systems so that the computer readable code is stored and executed in a distributed fashion.</p>
<p id="p-0078" num="0077">While one or more embodiments of the present invention have been described, it will be appreciated that those skilled in the art upon reading the specification and studying the drawings will realize various alterations, additions, permutations and equivalents thereof. It is therefore intended that embodiments of the present invention include all such alterations, additions, permutations, and equivalents as fall within the true spirit and scope of the invention as defined in the following claims. Thus, the scope of the invention should be defined by the claims, including the full scope of equivalents thereof.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method executing on hardware of a client device coupled to a network for managing the impact of signal latency on the reception of a multimedia signal by the client device, the method comprising:
<claim-text>calculating, on the client device, a first moving average of the signal latency over a first period of time;</claim-text>
<claim-text>calculating, on the client device, a minimum of a first moving average of the latency over a session;</claim-text>
<claim-text>measuring, on the client device, a change in signal latency over some configured period of time;</claim-text>
<claim-text>buffering, on the client device, a part of the signal having a length corresponding to a selected period of time prior to presenting it;</claim-text>
<claim-text>skipping playback, on the client device, of a defined period of time of the signal if the change in signal latency exceeds some configured value;</claim-text>
<claim-text>skipping playback, on the client device, of the defined period of time of the signal if the signal latency exceeds a first configured percentage of the measurement of the minimum of the first moving average; and</claim-text>
<claim-text>skipping playback, on the client device, of the defined period of time of the signal if the signal latency exceeds a second configured percentage of the first moving average of the signal latency a third configured period of time after the last time a part of the signal was skipped.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method in <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the defined period of time for which playback is skipped is smaller than the buffer length.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method in <claim-ref idref="CLM-00002">claim 2</claim-ref>, where the defined period of time for which playback is skipped is less than 0.5 seconds.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method in <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the first period of time over which the first moving average of the signal latency is calculated is shorter than the size of the buffer but longer than the second configured period of time.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method in <claim-ref idref="CLM-00004">claim 4</claim-ref>, where the first period of time over which the first moving average of the signal latency is calculated is at least 3 seconds but not more than 10 seconds, and the second period of time is at least 30 seconds but not more than 2 minutes.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method in <claim-ref idref="CLM-00001">claim 1</claim-ref>, where method further comprises:
<claim-text>calculating, on the client device, a second moving average over a second period of time, wherein the second period of time is longer than the first period of time; shorter than the expected length of a session; and</claim-text>
<claim-text>skipping, on the client device, the defined period of time of the signal if the first moving average exceeds the second moving average at least the second period of time after the last time a part of the signal was skipped.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method in <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the determining of the measurement of the minimum signal latency further comprises initializing the minimum signal latency as a current latency measured some configured time into the current session, thereafter for the duration of the session comparing a current value of the minimum signal latency to a current latency value, and setting the minimum signal latency value to the current latency value if the current latency value is less that the minimum signal latency value.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method in <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the selected period of time corresponding to the length of the buffered signal is larger than the expected signal latency but smaller than the expected length of a session.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein buffering a part of the signal having a length corresponding to a selected period of time comprises buffering no less than 15 seconds and no more than 1 minute of the signal.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method in <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the change in signal latency is calculated by comparing the latency measured at the first configured period of time prior to the most recent measurement.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method in <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the first configured percentage is at least 50% and no more than 200%.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method in <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the second configured percentage is at least 25% and no more than 100%.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the third configured period of time is at least the length of time of the first period of time.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. A method executing on hardware of a client device for maintaining the output quality of a media stream received and presented by the client device, the method comprising:
<claim-text>initializing a signal buffer on the client device to hold at least 30 seconds of a media signal at the start of a session;</claim-text>
<claim-text>measuring, on the client device, the latency of the signal processing relative to the realtime position in the signal buffer;</claim-text>
<claim-text>calculating, on the client device, the derivative of the latency over time;</claim-text>
<claim-text>calculating, on the client device, a first moving average of the latency over the first 30 second time period;</claim-text>
<claim-text>defining, on the client device, a first threshold associated with the first moving average, greater than the first moving average by some fixed percentage; and</claim-text>
<claim-text>determining, on the client device, if the absolute value of the signal latency is above the first threshold, and if so commanding the device performing the signal processing to perform a series of skips of the signal over a first period until the derivative of the signal latency is no longer exceeds the first threshold.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method in <claim-ref idref="CLM-00014">claim 14</claim-ref>, further comprising:
<claim-text>calculating, on the client device, a second moving average of the derivative of the latency over the most recent 5 second time period;</claim-text>
<claim-text>calculating, on the client device, a third moving average of the derivative of the latency over the most recent 30 second time period; and</claim-text>
<claim-text>determining, on the client device, if the second moving average exceeds the third moving average, and if so commanding the device performing the signal processing to perform a series of skips of the signal over a first period until the third moving average exceeds the second moving average.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method in <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:
<claim-text>defining, on the client device, a first value, associated with expected number of skips over a first period of time greater than the largest moving average but less than 10 minutes;</claim-text>
<claim-text>defining, on the client device, a second value associated with the first value, greater than the first value by some fixed percentage;</claim-text>
<claim-text>defining, on the client device, a third value associated with the first value, less than the first value by some fixed percentage;</claim-text>
<claim-text>determining, on the client device, if the number of skips over the last first period of time exceeds the second value, and if so command the device performing the signal processing to select a signal of lower quality if available, or stop playing otherwise; and</claim-text>
<claim-text>determining, on the client device, if the number of skips over the last first period of time is less than the third value, and if so command the device performing the signal processing to select a signal of greater quality if available.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The method in <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:
<claim-text>defining, on the client device, a fourth value associated with the maximum number of skips allowed over some period of time, between the first value and the second value;</claim-text>
<claim-text>defining, on the client device, a fifth value associated with the minimum number of skips allowed over some period of time, between the first value and the third value;</claim-text>
<claim-text>defining, on the client device, a sixth value associated with the initial time between signal skips;</claim-text>
<claim-text>determining, on the client device, if the number of skips over the last first period of time exceeds the fourth value, and if so command the device performing the signal processing to skip a larger portion of the signal over a period larger than the sixth value, both increased by a fixed percentage, until the number of skips over the last period of time is below the fourth value; and</claim-text>
<claim-text>determining, on the client device, if the number of skips over the last first period of time is less than the fifth value, and if so command the device performing the signal processing to skip a smaller portion of the signal over a period less than the sixth value, both decreased by a fixed percentage, until the number of skips over the last period of time is above the fifth value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method in <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:
<claim-text>determining, on the client device, if the derivative of the signal latency exceeds 150% of the first moving average, and if so commanding the device performing the signal processing to perform a series of skips of the signal over a first period until the derivative of the signal latency no longer exceeds 150% of the first moving average.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. A computer readable medium having stored thereon instructions that, when executed by a computer, causes the computer to perform a method for maintaining the output quality of a media stream, the medium comprising:
<claim-text>programming instructions for initializing a signal buffer to hold at least 30 seconds of a media signal at the start of a session;</claim-text>
<claim-text>programming instructions for measuring the latency of the signal processing relative to the real-time position in the signal buffer;</claim-text>
<claim-text>programming instructions for calculating the derivative of the latency over time;</claim-text>
<claim-text>programming instructions for calculating a first moving average of the latency over the first 30 second time period;</claim-text>
<claim-text>programming instructions for defining a first threshold associated with the first moving average, greater than the first moving average by some fixed percentage; and</claim-text>
<claim-text>programming instructions for determining if the absolute value of the signal latency is above the first threshold, and if so commanding the device performing the signal processing to perform a series of skips of the signal over a first period until the derivative of the signal latency is no longer exceeds the first threshold.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The computer readable media in <claim-ref idref="CLM-00019">claim 19</claim-ref>, further comprising:
<claim-text>programming instructions for calculating a second moving average of the derivative of the latency over the most recent 5 second time period;</claim-text>
<claim-text>programming instructions for calculating a third moving average of the derivative of the latency over the most recent 30 second time period; and</claim-text>
<claim-text>programming instructions for determining if the second moving average exceeds the third moving average, and if so commanding the device performing the signal processing to perform a series of skips of the signal over a first period until the third moving average exceeds the second moving average.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The computer readable media in <claim-ref idref="CLM-00019">claim 19</claim-ref>, further comprising:
<claim-text>programming instructions for defining a first value, associated with expected number of skips over a first period of time greater than the largest moving average but less than 10 minutes;</claim-text>
<claim-text>programming instructions for defining a second value associated with the first value, greater than the first value by some fixed percentage;</claim-text>
<claim-text>programming instructions for defining a third value associated with the first value, less than the first value by some fixed percentage;</claim-text>
<claim-text>programming instructions for determining if the number of skips over the last first period of time exceeds the second value, and if so command the device performing the signal processing to select a signal of lower quality if available, or stop playing otherwise; and</claim-text>
<claim-text>programming instructions for determining if the number of skips over the last first period of time is less than the third value, and if so command the device performing the signal processing to select a signal of greater quality if available.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The computer readable media in <claim-ref idref="CLM-00019">claim 19</claim-ref>, further comprising:
<claim-text>programming instructions for defining a fourth value associated with the maximum number of skips allowed over some period of time, between the first value and the second value;</claim-text>
<claim-text>programming instructions for defining a fifth value associated with the minimum number of skips allowed over some period of time, between the first value and the third value;</claim-text>
<claim-text>programming instructions for defining a sixth value associated with the initial time between signal skips;</claim-text>
<claim-text>programming instructions for determining if the number of skips over the last first period of time exceeds the fourth value, and if so command the device performing the signal processing to skip a larger portion of the signal over a period larger than the sixth value, both increased by a fixed percentage, until the number of skips over the last period of time is below the fourth value; and</claim-text>
<claim-text>programming instructions for determining if the number of skips over the last first period of time is less than the fifth value, and if so command the device performing the signal processing to skip a smaller portion of the signal over a period less than the sixth value, both decreased by a fixed percentage, until the number of skips over the last period of time is above the fifth value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The computer readable media of <claim-ref idref="CLM-00019">claim 19</claim-ref>, further comprising:
<claim-text>computer instructions for determining if the derivative of the signal latency exceeds 150% of the first moving average, and if so commanding the device performing the signal processing to perform a series of skips of the signal over a first period until the derivative of the signal latency no longer exceeds 150% of the first moving average. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
