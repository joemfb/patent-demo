<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625142-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625142</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13617601</doc-number>
<date>20120914</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2008-172646</doc-number>
<date>20080701</date>
</priority-claim>
</priority-claims>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>358  115</main-classification>
</classification-national>
<invention-title id="d2e61">Printing apparatus and control method thereof and program</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>2002/0186413</doc-number>
<kind>A1</kind>
<name>Ito</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  118</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2004/0170443</doc-number>
<kind>A1</kind>
<name>Maeshima</name>
<date>20040900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2007/0229896</doc-number>
<kind>A1</kind>
<name>Fujimori et al.</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>JP</country>
<doc-number>10-322483</doc-number>
<kind>A</kind>
<date>19981200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>JP</country>
<doc-number>2005-151415</doc-number>
<kind>A</kind>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>JP</country>
<doc-number>2006039938</doc-number>
<kind>A</kind>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>JP</country>
<doc-number>2007-272901</doc-number>
<kind>A</kind>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>JP</country>
<doc-number>2008-085400</doc-number>
<kind>A</kind>
<date>20080400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00009">
<othercit>Japanese office action cited in Japanese counterpart application No. JP2008-172646, dated Mar. 22, 2013.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>Japanese Office Action for corresponding JP 2008-172646, mail date Oct. 5, 2012.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>10</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>358  115</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>19</number-of-drawing-sheets>
<number-of-figures>19</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>12434050</doc-number>
<date>20090501</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>8335003</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13617601</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20130094052</doc-number>
<kind>A1</kind>
<date>20130418</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Tachibana</last-name>
<first-name>Yoshiro</first-name>
<address>
<city>Inagi</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Tachibana</last-name>
<first-name>Yoshiro</first-name>
<address>
<city>Inagi</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Rossi, Kimms &#x26; McDowell LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Canon Kabushiki Kaisha</orgname>
<role>03</role>
<address>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Dehkordy</last-name>
<first-name>Saeid Ebrahimi</first-name>
<department>2673</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">It is determined whether or not a change request for changing an array of a plurality of items of job information on a job list screen to a second array being different from a first array is inputted via a user interface. If it is determined that the change request is inputted, a job list screen is displayed in which the array of the plurality of items of job information is changed to the second array. Display contents of the user interface are changed in response to a user operation with respect to a print job displayed on the job list screen. The job list screen in the second array, or the job list screen in the first array, is redisplayed, based on the nature of the change request.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="107.44mm" wi="153.33mm" file="US08625142-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="142.41mm" wi="160.10mm" file="US08625142-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="220.05mm" wi="163.49mm" orientation="landscape" file="US08625142-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="247.31mm" wi="158.07mm" orientation="landscape" file="US08625142-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="245.28mm" wi="167.56mm" orientation="landscape" file="US08625142-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="193.46mm" wi="116.50mm" file="US08625142-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="261.62mm" wi="183.22mm" orientation="landscape" file="US08625142-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="259.50mm" wi="184.57mm" orientation="landscape" file="US08625142-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="234.36mm" wi="153.25mm" file="US08625142-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="227.50mm" wi="179.15mm" file="US08625142-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="232.33mm" wi="177.12mm" file="US08625142-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="239.10mm" wi="180.51mm" file="US08625142-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="226.14mm" wi="174.41mm" file="US08625142-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="246.63mm" wi="178.48mm" file="US08625142-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="253.41mm" wi="173.06mm" file="US08625142-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="254.76mm" wi="180.51mm" file="US08625142-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="251.38mm" wi="176.45mm" orientation="landscape" file="US08625142-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="259.50mm" wi="197.53mm" file="US08625142-20140107-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="254.08mm" wi="173.74mm" file="US08625142-20140107-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="253.41mm" wi="183.90mm" orientation="landscape" file="US08625142-20140107-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This is a continuation of U.S. patent application Ser. No. 12/434,050, filed May 1, 2009, which is based on and claims priority from Japanese Application No. JP2008-172646, filed Jul. 1, 2008. The disclosure of the priority applications, in their entirety, including the drawings, claims, and the specifications thereof, are herein incorporated by reference.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">1. Field of the Invention</p>
<p id="p-0004" num="0003">The present invention relates to a printing apparatus that causes a user interface to display a job list screen displaying a plurality of items of job information regarding a plurality of print jobs in a predetermined array, a control method thereof, and a program.</p>
<p id="p-0005" num="0004">2. Description of the Related Art</p>
<p id="p-0006" num="0005">A print management system is known in which a plurality of printers, a plurality of client computers, and a print management server are connected via a network. For such a print management system, a method is proposed in which a single panel for listing all managing print jobs is provided at a print management server so as to enable a dedicated operator to promptly and accurately identify a status of a print job (refer to Japanese Patent Laid-Open No. 2007-272901).</p>
<p id="p-0007" num="0006">Japanese Patent Laid-Open No. 2007-272901 also proposes a method for sorting an order of print jobs on the single panel provided at the print management server so as to enable the operator to readily find a desired print job or information related thereto.</p>
<p id="p-0008" num="0007">However, with the conventional technique described above, when switching from a screen on which all print jobs are listed to another screen, a display format, according to which the print jobs were sorted, is not retained. Consequently, it is difficult to find a desired print job on a screen listing all print jobs after switching to another screen. Therefore, an instruction for re-sorting the print jobs is required, which in turn disadvantageously requires an operation by an operator.</p>
<p id="p-0009" num="0008">In addition, in a case where a print management server is shared by a plurality of dedicated operators or the like, demands may arise for displaying print jobs in a state where a display order has been set for each operator. However, conventionally, such demands can not be satisfied.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0010" num="0009">An aspect of the present invention is to eliminate the above-described problems with the conventional technology.</p>
<p id="p-0011" num="0010">According to an aspect of the present invention, after a display array of job information of print jobs on the job list screen is changed, if the job list screen is switched to another screen by a user operation and then the job list screen is restored, then a display array of job information of print jobs on the job list screen is restored to the display array before switching to the another screen. Accordingly, a printing apparatus with superior operability, a control method thereof, and a program can be provided.</p>
<p id="p-0012" num="0011">According to an aspect of the present invention, there is provided a printing apparatus for causing a user interface to display a job list screen displaying a plurality of items of job information regarding a plurality of print jobs in a first array, the printing apparatus comprising: a determination unit that determines whether or not a change request for changing an array of the plurality of items of job information on the job list screen to a second array being different from the first array is inputted via the user interface; an array change unit that displays the job list screen in which the array of the plurality of items of job information is changed to the second array, in a case that the determination unit determines that the change request is inputted; a display changeover unit that changes display contents of the user interface in response to a user operation with respect to a print job displayed on the job list screen; and a display control unit that redisplays the job list screen in the second array upon the conclusion of processing due to the user operation in a case that the change request is inputted prior to the user operation, and redisplays the job list screen in the first array in a case that the change request is not inputted prior to the user operation.</p>
<p id="p-0013" num="0012">Further features and aspects of the present invention will become apparent from the following description of exemplary embodiments, with reference to the attached drawings.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0014" num="0013">The accompanying drawings, which are incorporated in and constitute a part of the specification, illustrate embodiments of the invention and, together with the description, serve to explain the principles of the invention.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 1</figref> is a system configuration diagram of an entire print management system according to an exemplary embodiment of the present invention;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 2</figref> depicts a view illustrating a cross-sectional structure of an MFP according to the present embodiment;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram showing a configuration of a controller of the MFP according to the present embodiment;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram illustrating an example of an overview of processing by an MFP controller according to the present embodiment;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart describing processing by a job controller, which is one of the processing programs of the MFP controller according to the present embodiment;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 6</figref> depicts a view illustrating an example of a print setting screen of a printer driver of a client computer according to the present embodiment;</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 7</figref> depicts a view illustrating an example of a setting screen displayed when a user specifies a &#x201c;property&#x201d; button on the screen shown in <figref idref="DRAWINGS">FIG. 6</figref> with a pointing device;</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 8</figref> is a diagram describing a structure of print data transferred to the MFP according to the present embodiment;</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 9</figref> depicts a view illustrating an example of a screen displayed on a display unit of a console unit of the MFP according to the present embodiment;</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIGS. 10A and 10B</figref> are diagrams showing an example of screen transitions of a hold tab displayed when an operator repeatedly touches a &#x201c;date/time&#x201d; button on the display unit of the console unit of the MFP according to the present embodiment;</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIGS. 11A and 11B</figref> are diagrams showing an example of screen transitions of a hold tab displayed when an operator repeatedly touches a &#x201c;job name&#x201d; button on the display unit of the console unit of the MFP according to the present embodiment;</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 12</figref> depicts a view illustrating an example of a screen displayed on the display unit of the console unit of the MFP according to the present embodiment;</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 13</figref> is a diagram describing examples of tables for managing jobs of the MFP according to the present embodiment;</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 14</figref> is a diagram describing an example of a user information management table for managing user information of the MFP according to the present embodiment;</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 15</figref> is a flowchart describing processing by the MFP controller according to the present embodiment; and</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIGS. 16A and 16B</figref> are flowcharts describing display processing of a hold job list by the MFP controller and processing in response to an input made on a touch panel by an operator, according to the present embodiment.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DESCRIPTION OF THE EMBODIMENTS</heading>
<p id="p-0031" num="0030">Embodiments of the present invention will now be described hereinafter in detail, with reference to the accompanying drawings. It is to be understood that the following embodiments are not intended to limit the claims of the present invention, and that not all of the combinations of the aspects that are described according to the following embodiments are necessarily required with respect to the means to solve the problems according to the present invention.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 1</figref> is a system configuration diagram of an entire print management system according to an exemplary embodiment of the present invention.</p>
<p id="p-0033" num="0032">In <figref idref="DRAWINGS">FIG. 1</figref>, a multi function peripheral (MFP) <b>100</b>, a client computer <b>200</b>, and a print management server <b>300</b> are connected to a network <b>400</b>. While <figref idref="DRAWINGS">FIG. 1</figref> shows an example in which only one of each of the apparatuses is connected to the network <b>400</b>, the number of connected apparatuses is unrestricted.</p>
<p id="p-0034" num="0033">The MFP <b>100</b> is equipped with a scanner unit that reads a document to generate image data of the document and a printer unit that forms an image on a recording paper, and functions as a printing apparatus having various functions such as those of a network printer and a copier. The client computer <b>200</b> executes various application programs in compliance with instructions from an operator and outputs print data to the network <b>400</b> in response to a print request from the operator. In addition, the client computer <b>200</b> also performs processing so as to assist in the monitoring and control of the MFP <b>100</b> and print jobs managed by the print management server <b>300</b>. When printing with the MFP <b>100</b>, applicable methods include directly transferring print data generated by the client computer <b>200</b> to the MFP <b>100</b> and transferring the print data to the MFP <b>100</b> via the print management server <b>300</b>.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 2</figref> depicts a view illustrating a cross-sectional structure of the MFP <b>100</b> according to the present embodiment.</p>
<p id="p-0036" num="0035">The MFP <b>100</b> is provided with a scanner unit <b>110</b> that reads an image recorded on a face of a document, a printer unit <b>160</b> having respective units <b>120</b>, <b>130</b>, <b>140</b>, and <b>150</b>, and a controller <b>170</b>.</p>
<p id="p-0037" num="0036">The controller <b>170</b> is responsible for controlling the entire MFP <b>100</b> and is mounted as a printed circuit board including a microprocessor on the MFP. The controller <b>170</b> controls the scanner unit <b>110</b>, performs network communication, and processing in accordance with the contents of various operations by an operator, and performs print processing described below.</p>
<p id="p-0038" num="0037">The scanner unit <b>110</b> illuminates a document face, and is provided with an illumination unit <b>111</b> that scans and moves and a line CCD <b>112</b> that performs imaging on reflected light from the document face and converts the reflected light into an electric signal. The controller <b>170</b> A/D-converts signals successively outputted from the line CCD <b>112</b>, and captures the A/D-converted signals as image data to perform various processing thereon.</p>
<p id="p-0039" num="0038">In addition, in order to scan laser light from a laser element, not shown, which is driven by the controller <b>170</b>, a laser exposure unit <b>120</b> of the printer unit <b>160</b> includes a polygonal mirror <b>121</b> rotated by a motor and a mirror <b>122</b> that reflects the laser light towards a photosensitive drum <b>135</b>. An image forming unit <b>130</b> rotationally drives the photosensitive drum <b>135</b> and charges the surface of the photosensitive drum <b>135</b> with a charger. Due to the scanning of laser light by the laser exposure unit <b>120</b>, the photosensitive drum <b>135</b> retains an electrostatic latent image on its surface. Developing units <b>131</b> to <b>134</b>, having toners of the respective colors of magenta (M), cyan (C), yellow (Y), and black, transfer toner to the electrostatic latent image formed on the surface of the photosensitive drum <b>135</b> to form a toner image corresponding to the electrostatic latent image. The toner image formed in this manner on the photosensitive drum <b>135</b> is transferred to a recording paper (sheet). For this reason, a transfer drum <b>136</b> that rotates with the photosensitive drum <b>135</b> is provided. The transfer drum <b>136</b> wraps a sheet conveyed from a feed/conveyance unit <b>140</b> around itself using the action of static electricity. By performing, four times, a process in which a toner image of a single color component generated on the photosensitive drum <b>135</b> is transferred onto the sheet wrapped around itself, the transfer drum <b>136</b> forms a color image having four color components on the sheet.</p>
<p id="p-0040" num="0039">Upon finishing transfer of the toner image of the four color components onto the sheet as described above, the controller <b>170</b> separates the sheet from the transfer drum <b>136</b> and conveys the sheet to a fixing unit <b>150</b>. The fixing unit <b>150</b> has a built-in fixing roller <b>151</b> heated by a heat source such as a halogen heater. The fixing roller <b>151</b> heats and fixes the toner transferred on the sheet conveyed from the image forming unit <b>130</b> onto the sheet by heat and pressure. A discharge roller <b>152</b> discharges the toner-fixed sheet to the outside (finisher).</p>
<p id="p-0041" num="0040">The MFP <b>100</b> according to the present embodiment is also capable of performing double-sided printing. A sheet sensor (not shown) is provided on an upstream side (the side of the image forming unit <b>130</b>) of the discharge roller <b>152</b>. Therefore, during double-sided printing, when the sheet sensor detects a trailing edge of a sheet, the controller <b>170</b> rotationally moves a flapper <b>153</b> by a predetermined angle and inversely rotates the discharge roller <b>152</b> to turn the sheet upside down and conveys the sheet towards a double-sided feed path <b>142</b> inside the feed/conveyance unit <b>140</b>. The feed/conveyance unit <b>140</b> includes a sheet stocker <b>143</b> for double-sided recording which holds single-side-printed sheets from the aforementioned double-sided feed path <b>142</b>, as well as one or more sheet cassettes <b>141</b> as typified by a paper deck. In response to an instruction from the controller <b>170</b>, the feed/conveyance unit <b>140</b> separates a sheet from a plurality of sheets held in the sheet cassette <b>141</b> and conveys the sheet to the image forming unit <b>130</b>, and from the image forming unit <b>130</b> to the fixing unit <b>150</b>.</p>
<p id="p-0042" num="0041">Next, a configuration of the controller <b>170</b> of the MFP <b>100</b> according to the present embodiment will be described.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram showing a configuration of the controller <b>170</b> of the MFP <b>100</b> according to the present embodiment.</p>
<p id="p-0044" num="0043">The controller <b>170</b> of the MFP <b>100</b> includes an MFP controller <b>1000</b> that is provided with: a CPU <b>301</b> that is a microprocessor or the like; a RAM <b>302</b> that stores a processing program and various data, and provides a work area; and a ROM <b>303</b> that stores a boot program and various data. The MFP controller <b>1000</b> undertakes a role of a traffic regulator which, depending on the application of the MFP, temporarily saves image data, determines a data path among various processing units to be described later, and the like. A program to be loaded to the RAM <b>302</b> is installed in an HDD <b>1500</b>, and when an instruction to execute the program (function) is issued, the program is loaded from the HDD <b>1500</b> to the RAM <b>302</b> to be executed.</p>
<p id="p-0045" num="0044">The controller <b>170</b> is provided with a hard disk (hereinafter HDD) <b>1500</b> that is a large capacity storage device capable of storing data of a plurality of print jobs. However, as long as the capacity is large and random access is enabled, the storage device need not be limited to an HDD and any storage device shall suffice. The MFP controller <b>1000</b> utilizes the HDD <b>1500</b> as a buffer. The MFP controller <b>1000</b> realizes a plurality of functions including copy processing of image data outputted from the scanner unit <b>110</b>, and print processing based on print data outputted from the client computer <b>200</b> or the print management server <b>300</b> on the network <b>400</b>, and the like. The MFP <b>100</b> comes in two types: a full-color device and a black-and-white device. With the exception of color processing, internal data and the like, these devices share the same basic components. In addition, since a configuration of the full-color device is inclusive of a configuration of the black-and-white device, the full-color device will be primarily described herein and descriptions on the black-and-white device will be occasionally added as needed.</p>
<p id="p-0046" num="0045">As shown in <figref idref="DRAWINGS">FIG. 3</figref>, a plurality of processing units are connected to the MFP controller <b>1000</b>. An input-image processor <b>1001</b> reads an image on a paper document or the like and performs image processing on the read image data. A network interface unit <b>1003</b> transmits and receives print data and apparatus information via the network <b>400</b>. A document manager <b>1006</b> performs processing under the control of the MFP controller <b>1000</b> for storing image data from the input-image processor <b>1001</b> and image data obtained by analyzing print data received via the network interface unit <b>1003</b> into the HDD <b>1500</b>. The document manager <b>1006</b> also performs processing under the control of the MFP controller <b>1000</b> for reading image data stored in the HDD <b>1500</b>. Following an instruction by an operator from a console unit <b>1008</b>, the MFP controller <b>1000</b> determines an output destination of image data read from the HDD <b>1500</b>. For example, if the MFP controller <b>1000</b> has set a print processor <b>1007</b> as the output destination, print processing is performed. The document manager <b>1006</b> compresses image data as required when storing the same into the HDD <b>1500</b> and, conversely, when reading compressed data stored in the HDD <b>1500</b>, expands (decodes) the compressed data into the original image data. For this purpose, the controller <b>170</b> is provided with a codec <b>1009</b>. In addition, when print data received via the network interface unit <b>1003</b> is compressed data such as JPEG, JBIG, ZIP, or the like, the MFP controller <b>1000</b> performs control so as to decompress (expand) such data by the codec <b>1009</b>. A resource manager <b>1010</b> retains and manages, under the control of the MFP controller <b>1000</b>, various parameter tables and the like commonly handled by fonts, color profiles, gamma tables, and the like so as to enable them to be read. In addition, in response to a request from the MFP controller <b>1000</b>, the resource manager <b>1010</b> stores new parameter tables and corrects and modifies existing parameter tables.</p>
<p id="p-0047" num="0046">Next, processing performed when the MFP controller <b>1000</b> receives print data via the network interface unit <b>1003</b> will be described.</p>
<p id="p-0048" num="0047">When the MFP controller <b>1000</b> receives print data, raster image processing is performed by a RIP (raster image processor) unit <b>1011</b>. In addition, on an image to be printed, the MFP controller <b>1000</b> performs image processing for printing as required with an output-image processor <b>1012</b>. Furthermore, the MFP controller <b>1000</b> stores intermediate data of print data and print-ready data (bitmap data for printing or compressed data thereof) created during such image processing into the HDD <b>1500</b> via the document manager <b>1006</b> as required. The processing for storing to the HDD <b>1500</b> is asynchronous to the operation of the print processor <b>1007</b>.</p>
<p id="p-0049" num="0048">In addition, in concurrence with the print processing timing of the print processor <b>1007</b>, the MFP controller <b>1000</b> performs processing for reading image data of respective pages stored in the HDD <b>1500</b> via the document manager <b>1006</b> and outputting the image data to the print processor <b>1007</b>. When doing so, the MFP controller <b>1000</b> controls a post processor <b>1013</b> in accordance with the description of the print data. The post processor <b>1013</b> controls a finisher that performs sheet sorting processing and sheet finishing processing.</p>
<p id="p-0050" num="0049">Furthermore, the console unit <b>1008</b> functions as a user interface for selecting various functions and issuing operation instructions. The console unit <b>1008</b> is also provided with a high-resolution display apparatus, various instruction buttons, and a touch panel so as to be capable of presenting various display menus to the operator and displaying a preview of image data managed by the document manager <b>1006</b>. Even when performing copying, the operator is to issue a copy instruction by operating the console unit <b>1008</b>.</p>
<p id="p-0051" num="0050">Next, an example of an overview of processing by the MFP controller <b>1000</b> according to the present embodiment will be described. The processing is realized by the CPU <b>301</b>, the RAM <b>302</b> and the ROM <b>303</b> storing firmware of the MFP controller <b>1000</b>, and by the various processing units shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram illustrating an example of an overview of processing by the MFP controller <b>1000</b> according to the present embodiment.</p>
<p id="p-0053" num="0052">A network interface controller <b>1601</b> is responsible for controlling the network interface unit <b>1003</b> shown in <figref idref="DRAWINGS">FIG. 3</figref>. In addition, the network interface controller <b>1601</b> performs processing for analyzing a communication protocol, receiving print data from the client computer <b>200</b> or the print management server <b>300</b>, and transmitting the received print data to a job ticket analyzer <b>1602</b>. The job ticket analyzer <b>1602</b> analyzes a job ticket and relays an attribute of a print job to a job controller <b>1600</b>, registers the print job into a management table (not shown) and stores the print data in a reception buffer <b>1610</b>. Upon detecting that print data has been stored in the reception buffer <b>1610</b>, a print data analyzer <b>1603</b> commences processing for analyzing the print data. That is, the print data analyzer <b>1603</b> reads print data stored in the reception buffer <b>1610</b>, analyzes the print data and generates an object (intermediate code) corresponding to each command, and stores the object in an intermediate buffer <b>1611</b>. While the present embodiment assumes commands supported by the printer unit <b>160</b> to be PDL (page description language), besides PDL data, a command may be of any type of data as long as per-page printing is enabled.</p>
<p id="p-0054" num="0053">Upon detecting that data has been stored in the intermediate buffer <b>1611</b>, a rendering processor <b>1604</b> commences processing for rendering. That is, the rendering processor <b>1604</b> reads intermediate data from the intermediate buffer <b>1611</b> on a per-page basis, and in the case of regular printing (when storage to a Hold queue <b>1612</b> has not been instructed), generates one page's worth of image data and stores the image data in an image buffer <b>1613</b>.</p>
<p id="p-0055" num="0054">Upon detecting that one page's worth of image data is stored in the image buffer <b>1613</b>, an output controller <b>1605</b> performs processing for reading the image data and outputting the image data to a printer controller <b>1607</b> responsible for the control of the print processor <b>1007</b>. In addition, in the case of a print job specifying storage to the Hold queue <b>1612</b>, the rendering processor <b>1604</b> successively stores rendered image data of the respective pages in the Hold queue <b>1612</b>. In this case, the output controller <b>1605</b> is not immediately activated, but performs printing of the job once a print instruction from the Hold queue <b>1612</b> is issued by a UI controller <b>1606</b>. Here, Hold refers to a function in which data is not immediately printed but once stored as a print job in a storage device such as an HDD, and printing only commences when a print instruction is issued from an operator via the console unit <b>1008</b>. The Hold function is used for test-printing a print job stored in the Hold queue <b>1612</b>, and if no problems are found in the print result, for performing regular printing (plurality of copies) and the like. As a result, during regular printing, it is no longer necessary to re-transmit the print data from the client computer <b>200</b> or the print management server <b>300</b> to the MFP <b>100</b>.</p>
<p id="p-0056" num="0055">The UI controller <b>1606</b> is a unit that controls the user interface and performs processing for transferring display data to the console unit <b>1008</b> and notifying the MFP controller <b>1000</b> of input from the console unit <b>1008</b>. In the present embodiment, a display unit provided at the console unit <b>1008</b> is a liquid crystal display. In addition, several keys are disposed at the console unit <b>1008</b>, and a touch panel is provided in front of the liquid crystal display. The UI controller <b>1606</b> performs control such as displaying a character string, switching screens, and relaying a set value to another module in accordance with a user operation. The job controller <b>1600</b> manages jobs within the MFP <b>100</b> and controls job generation and extinction, job statuses, job processing orders, and the like. In particular, the job controller <b>1600</b> is internally provided with a print execution queue for determining whichever of image data of the image buffer <b>1613</b> or image data of the Hold queue <b>1612</b> is to be outputted to the output controller <b>1605</b>. While the print execution queue may be stored in the HDD <b>1500</b>, since the amount of information is small, it is hereby assumed that the print execution queue is stored in the RAM <b>302</b> of the MFP controller <b>1000</b>. In the case of a regular print job, information (a job ID to be described later) identifying the job is to be automatically set in the print execution queue. In addition, in the case of a print job stored in the Hold queue <b>1612</b>, the job ID is registered in the print execution queue only after the operator executes printing. Therefore, the job controller <b>1600</b> determines whichever of the image buffer <b>1613</b> and the Hold queue <b>1612</b> store the relevant image data based on a job ID registered in the print execution queue. Once the buffer storing the image data is identified, control is performed so as to output image data of the respective pages constituting the relevant print job to the output controller <b>1605</b>.</p>
<p id="p-0057" num="0056">Next, processing by the job controller <b>1600</b> that is one of the processing programs of the MFP controller <b>1000</b> will be described.</p>
<p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart describing processing by the job controller <b>1600</b> that is one of the processing programs of the MFP controller <b>1000</b> according to the present embodiment. The processing shown in the flowchart is to be executed under the control of the CPU <b>301</b> in accordance with a program stored in the RAM <b>302</b> of the MFP controller <b>1000</b>.</p>
<p id="p-0059" num="0058">First, in step S<b>101</b>, the MFP controller <b>1000</b> reads the print execution queue. The process proceeds to step S<b>102</b> to determine whether an unprinted job exists or not. If the MFP controller <b>1000</b> determines that there are no unprinted jobs, the process returns to the processing of step S<b>101</b>. On the other hand, if the MFP controller <b>1000</b> determines in step S<b>102</b> that there is an unprinted job in the print execution queue, the process proceeds to step S<b>103</b>. In step S<b>103</b>, the MFP controller <b>1000</b> finds out whether relevant image data is in the image buffer <b>1613</b> or in the Hold queue <b>1612</b> from the job ID (to be described later) of the unprinted job, and reads one page's worth of image data to perform print processing. Next, the processing of S<b>103</b> is repeated until it is determined in step S<b>104</b> that printing of all pages has been completed. If the MFP controller <b>1000</b> determines in step S<b>104</b> that print processing for all pages has been completed, the process proceeds to step S<b>105</b>. In step S<b>105</b>, the MFP controller <b>1000</b> deletes the ID of the print job for which printing has been completed from the print execution queue and deletes the print job on which processing has been completed from the HDD <b>1500</b>. Moreover, as will be described later, in the case of test printing, the MFP controller <b>1000</b> deletes the job ID from the print execution queue but not the actual print job.</p>
<p id="p-0060" num="0059">Meanwhile, various applications and a printer driver for using the MFP <b>100</b> according to the present embodiment are installed in the client computer <b>200</b>.</p>
<p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. 6</figref> depicts a view illustrating an example of a print setting screen of a printer driver of the client computer <b>200</b> according to the present embodiment. The printer driver displays this screen when the user selects a print menu of a running application.</p>
<p id="p-0062" num="0061">&#x201c;Printer name&#x201d; <b>601</b> in the setting screen is arranged as a pull-down list box. At this point, when the user selects an MFP to be used, as represented by reference numeral <b>602</b>, a status of the MFP is displayed in &#x201c;status&#x201d; therebelow, a type of the printer driver in &#x201c;type&#x201d;, information on where the MFP is placed in &#x201c;where&#x201d;, and comment information from a manager of the MFP in &#x201c;comment&#x201d;. These items of information are obtained by issuing a data request message to a relevant MFP when the print setting screen is displayed or when an MFP to be used is selected. Moreover, when it is desirable to output print data to a file without printing the print data with the MFP, a &#x201c;print to file&#x201d; check box <b>603</b> is checked. By doing so, print data generated by the printer driver can be stored as a file in a storage device provided in the client computer <b>200</b>.</p>
<p id="p-0063" num="0062">&#x201c;Page range&#x201d; <b>604</b> is provided with radio buttons &#x201c;all&#x201d;, &#x201c;current page&#x201d;, &#x201c;selection&#x201d;, and &#x201c;pages&#x201d; as items for selecting which pages are to be printed. The user is to select one of these items (&#x201c;all&#x201d; is the default setting). If the user selects &#x201c;pages&#x201d; using a pointing device, an edit box transitions to an input-enabled state where the user is to input the number of one or more pages to be printed using a keyboard.</p>
<p id="p-0064" num="0063">Furthermore, a &#x201c;print what&#x201d; pull-down list box <b>605</b> enables selection of an attribute of a document to become a print object. A &#x201c;print&#x201d; pull-down list box <b>606</b> enables specification of whether all the pages are to be printed or just odd number or even number pages are to be printed.</p>
<p id="p-0065" num="0064">&#x201c;Copies&#x201d; <b>607</b> enables setting the number of copies to be printed. The user is to input the number of copies to be printed in a &#x201c;number of copies&#x201d; spin box. In addition, when printing a plurality of copies per set as opposed to printing per page, a &#x201c;collate&#x201d; check box <b>608</b> is made selectable.</p>
<p id="p-0066" num="0065">&#x201c;Zoom&#x201d; <b>609</b> enables specification of N-up printing (printing in which a plurality of pages can be laid out on a single printing sheet) through a &#x201c;pages per sheet&#x201d; pull-down list box <b>610</b>. A &#x201c;scale to paper size&#x201d; pull-down list box <b>611</b> is for selecting a paper size of a paper (sheet) with respect to the size of a document. In addition, a &#x201c;property&#x201d; button <b>612</b> is for further setting more detailed print attributes.</p>
<p id="p-0067" num="0066">Once the user completes setting of the printer driver setting screen, by specifying an &#x201c;OK&#x201d; button <b>613</b>, print data may either be transferred to the MFP <b>100</b> to be printed or outputted to a file. In addition, when canceling printing or file output, specifying a &#x201c;cancel&#x201d; button <b>614</b> shall suffice.</p>
<p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. 7</figref> depicts a view illustrating an example of a setting screen displayed when the user specifies the &#x201c;property&#x201d; button <b>612</b> on the screen shown in <figref idref="DRAWINGS">FIG. 6</figref> with a pointing device. Moreover, the setting screen is provided with a plurality of tabs. Initially, a state is shown in which a &#x201c;page settings&#x201d; tab has been selected.</p>
<p id="p-0069" num="0068">A &#x201c;favorites&#x201d; pull-down list box <b>701</b> is for selecting an optimal page setting from predetermined page setting modes. In addition, when the printer driver detects that a &#x201c;confirmation&#x201d; button <b>702</b> has been specified, a print image of the top page is displayed in a page image area displayed above the &#x201c;confirmation&#x201d; button <b>702</b> in accordance with contents set by the property setting screen.</p>
<p id="p-0070" num="0069">With an &#x201c;output type&#x201d; pull-down list box <b>703</b>, an output method is specified such as having the MFP <b>100</b> perform regular printing or storing in the Hold queue <b>1612</b> of the MFP <b>100</b>. In the diagram, &#x201c;Hold&#x201d; representing storing in the Hold queue <b>1612</b> is specified by a cursor. When storing in the Hold queue <b>1612</b> is specified in this manner, the printer driver generates and outputs print data including a job ticket signifying storing in the Hold queue <b>1612</b>. Upon reception thereof, the MFP controller <b>1000</b> performs processing for generating image data and subsequently performs processing up to storing the respective pages in the Hold queue <b>1612</b>. In other words, print processing is not performed. Print processing is commenced when the MFP controller <b>1000</b> determines that a print instruction has been inputted via the console unit <b>1008</b>.</p>
<p id="p-0071" num="0070">A &#x201c;document size&#x201d; pull-down list box <b>704</b> and a &#x201c;paper scaling&#x201d; pull-down list box <b>705</b> are for selecting a size of a document to become a print object and a paper size of a sheet. A &#x201c;copies&#x201d; spin box <b>706</b> is for inputting the number of copies to be printed, and an &#x201c;orientation&#x201d; radio button is for selecting a sheet orientation such as &#x201c;portrait&#x201d;, &#x201c;landscape&#x201d;, and the like. A &#x201c;layout&#x201d; pull-down list box <b>707</b> is for specifying N-up printing (printing in which a plurality of pages are laid out on a single printing face). When a &#x201c;scaling&#x201d; check box <b>708</b> is checked, a scale of enlargement/reduction can be designated in % units in a &#x201c;scale&#x201d; spin box <b>709</b>. When a &#x201c;stamp&#x201d; check box <b>710</b> is checked, predetermined stamp types become selectable at a pull-down list box <b>711</b>. Specifying an &#x201c;edit stamp&#x201d; button <b>712</b> enables a stamp type to be added or edited. A &#x201c;user defined paper&#x201d; button <b>713</b> enables the user to define a sheet. A &#x201c;page option&#x201d; button <b>714</b> enables the user to set more detailed page options. In addition, a &#x201c;restore default&#x201d; button <b>715</b> restores various setting contents to default setting contents.</p>
<p id="p-0072" num="0071">Once the user completes setting of the printer driver property setting screen, the user designates an &#x201c;OK&#x201d; button <b>716</b>. When it is detected that the &#x201c;OK&#x201d; button <b>716</b> has been designated, the printer driver reflects the print attributes set on the setting screen to actual printing. A &#x201c;cancel&#x201d; button <b>717</b> is to be pressed when canceling setting of the property setting screen. A &#x201c;help&#x201d; button <b>718</b> is for displaying a help screen of the property setting screen.</p>
<p id="p-0073" num="0072">At this point, a CPU (not shown) of the client computer <b>200</b> detects that the &#x201c;OK&#x201d; button <b>613</b> shown in <figref idref="DRAWINGS">FIG. 6</figref> has been designated by the user. Consequently, in accordance with a printer driver program, data handed over by an application is received and generation processing of print data constituted by a job ticket and PDL data is performed. Subsequently, an OS of the client computer <b>200</b> transfers the print data as a print job to the MFP <b>100</b> according to the present embodiment.</p>
<p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. 8</figref> is a diagram describing a structure of print data transferred to the MFP <b>100</b> according to the present embodiment. In this case, the print data includes attribute information (job ticket) and PDL data.</p>
<p id="p-0075" num="0074">In the example shown in <figref idref="DRAWINGS">FIG. 8</figref>, stored in attribute information (overall setting) are attribute IDs and respective setting values of &#x201c;job name&#x201d;, &#x201c;number of copies&#x201d;, &#x201c;paper size&#x201d;, &#x201c;paper type&#x201d;, &#x201c;print type&#x201d;, &#x201c;orientation&#x201d;, &#x201c;color mode&#x201d;, &#x201c;output type&#x201d;, and the like. In addition, it is assumed that attribute information is described in XML format or the like. Set in each attribute are setting values in accordance with settings made on the printer driver setting screen shown in <figref idref="DRAWINGS">FIG. 6</figref> and on the property setting screen shown in <figref idref="DRAWINGS">FIG. 7</figref>. In addition, as shown in <figref idref="DRAWINGS">FIG. 7</figref>, it is assumed that &#x201c;Hold&#x201d; has been specified as the output type.</p>
<p id="p-0076" num="0075">Next, a display example on the console unit <b>1008</b> of the MFP <b>100</b> according to the present embodiment will be described.</p>
<p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. 9</figref> depicts a view illustrating an example of a screen displayed on a display unit of the console unit <b>1008</b> of the MFP <b>100</b> according to the present embodiment. A touch panel is used as the display unit of the console unit <b>1008</b> of the MFP <b>100</b> according to the present embodiment. In addition, various tabs are provided for different functions. In the present embodiment, &#x201c;copy&#x201d; and &#x201c;hold&#x201d; tabs are provided.</p>
<p id="p-0078" num="0077">Reference numeral <b>900</b> denotes a state where the &#x201c;hold&#x201d; tab among the two tabs is active. The display screen is referred to as a main screen of the hold tab (hold job list screen). In the hold job list screen, job information of the respective print jobs stored in the Hold queue <b>1612</b> in the HDD <b>1500</b> is displayed in a list format. Only one Hold queue <b>1612</b> exists in the MFP <b>100</b> and is used for the purpose of temporarily storing print jobs. In addition, in <figref idref="DRAWINGS">FIG. 9</figref>, a job name, a user name, and a date/time (the date and time at which a print job was stored) are displayed as job information of a print job stored in the Hold queue <b>1612</b>. Furthermore, job information of the respective print jobs stored in the Hold queue <b>1612</b> is displayed in an ascending order of date/time (a chronological order of date/time).</p>
<p id="p-0079" num="0078">On the hold job list screen, an operator touches a &#x201c;job name&#x201d; button <b>901</b> or a &#x201c;date/time&#x201d; button <b>902</b> among the job list items. Consequently, job information of the respective print jobs stored in the Hold queue <b>1612</b> can be sorted and displayed according to name or date/time. When the MFP controller <b>1000</b> detects that the &#x201c;job name&#x201d; button <b>901</b> or the &#x201c;date/time&#x201d; button <b>902</b> has been touched, the MFP controller <b>1000</b> sorts the job information of the respective print jobs stored in the Hold queue <b>1612</b>. In other words, the job information is sorted in the order of &#x201c;job name&#x201d; or &#x201c;date/time&#x201d; as specified. Subsequently, processing is performed for reflecting the sorting result onto the display screen of the console unit <b>1008</b>. Touching a line of lines in which the respective jobs are displayed on the screen shown in <figref idref="DRAWINGS">FIG. 9</figref> enables selection of a print job that is a print object. In addition, a plurality of print jobs can be selected. When a plurality of print jobs are selected, since numbers (not shown) are to be displayed to the left of the job names of the print jobs, a selection order can be discerned by the numbers. When selecting a plurality of print jobs and issuing a print instruction, after jobs to be printed are set to a selected state, a &#x201c;print&#x201d; button <b>903</b> is touched. As a result, print processing is commenced according to the selected order.</p>
<p id="p-0080" num="0079">In addition, by selecting a print job and touching a button at the bottom of the screen, the operator is able to perform operations on a relevant job. Buttons for specifying such an operation include &#x201c;preview&#x201d;, &#x201c;test print&#x201d;, &#x201c;print&#x201d;, &#x201c;delete&#x201d;, and &#x201c;edit&#x201d;. &#x201c;Preview&#x201d; displays a preview of a selected print job. &#x201c;Test print&#x201d; displays a test print setting of a selected print job. &#x201c;Print&#x201d; performs formal printing of a selected print job. &#x201c;Delete&#x201d; deletes a selected print job from a hold job list screen (the actual print job is retained). &#x201c;Edit&#x201d; enables changes to be made to the print settings of a selected print job.</p>
<p id="p-0081" num="0080">A user name and a password can be set when using the MFP <b>100</b>. Reference numeral <b>910</b> denotes an example of a login screen displayed upon activation of the MFP <b>100</b> when a user name and a password has been set for the MFP <b>100</b>. When a user name and a correct password are inputted on the login screen <b>910</b>, the login screen transitions to a &#x201c;copy tab&#x201d; main screen or a &#x201c;hold tab&#x201d; main screen. Note that it is similarly assumed that a touch keyboard is to be displayed on the display screen of the console unit <b>1008</b> and a user name and a password are to be inputted using the touch keyboard.</p>
<p id="p-0082" num="0081">When a user name and a password have been set for the MFP <b>100</b>, a &#x201c;logout&#x201d; button <b>904</b> is displayed. When the MFP controller <b>1000</b> detects that the &#x201c;logout&#x201d; button <b>904</b> has been touched, the login screen <b>910</b> is displayed. Inputting a user name and a corresponding password results in successful authentication, whereby the screen returns to the hold job list screen denoted by reference numeral <b>900</b> to enable user operations.</p>
<p id="p-0083" num="0082"><figref idref="DRAWINGS">FIGS. 10A and 10B</figref> are diagrams showing an example of transitions of a hold tab screen displayed when the operator repeatedly touches (operation for item specification) the &#x201c;date/time&#x201d; button <b>902</b> on the display unit of the console unit <b>1008</b> of the MFP <b>100</b> according to the present embodiment.</p>
<p id="p-0084" num="0083">In <figref idref="DRAWINGS">FIG. 10A</figref>, reference numeral <b>10000</b> corresponds to the hold job list screen denoted by reference numeral <b>900</b> in <figref idref="DRAWINGS">FIG. 9</figref>. Job information of the respective print jobs stored in the Hold queue <b>1612</b> is displayed in an ascending order of date/time. At this point, if the MFP controller <b>1000</b> detects that the &#x201c;date/time&#x201d; button <b>902</b> has been touched, then the MFP controller <b>1000</b> displays a popup dialog and displays a message (sorting in progress) to the effect that job information of the respective print jobs is currently being sorted, as indicated by reference numeral <b>10001</b>. The MFP controller <b>1000</b> waits for the sort processing of the job information of the respective print jobs to conclude. When the sort processing is concluded in this manner, the MFP controller <b>1000</b> displays a hold job list screen as denoted by reference numeral <b>10002</b> (<figref idref="DRAWINGS">FIG. 10B</figref>). Here, job information of the respective print jobs stored in the Hold queue <b>1612</b> is displayed in a descending order of date/time (a reverse chronological order of date/time). Furthermore, in this state, if the MFP controller <b>1000</b> detects that the &#x201c;date/time&#x201d; button <b>902</b> has been touched, then the MFP controller <b>1000</b> displays a popup dialog indicating that sorting is in progress and waits for the sort processing of the job information of the respective print jobs to conclude, as represented by reference numeral <b>10003</b> (<figref idref="DRAWINGS">FIG. 10B</figref>). When the sort processing is concluded, the MFP controller <b>1000</b> displays the hold job list screen denoted by reference numeral <b>10000</b>. In the hold tab screen <b>10000</b>, job information of the respective print jobs stored in the Hold queue <b>1612</b> are displayed in an ascending order of date/time (a chronological order of date/time).</p>
<p id="p-0085" num="0084"><figref idref="DRAWINGS">FIGS. 11A and 11B</figref> are diagrams showing an example of transitions of a hold tab screen displayed when the operator repeatedly touches the &#x201c;job name&#x201d; button <b>901</b> on the display unit of the console unit <b>1008</b> of the MFP <b>100</b> according to the present embodiment.</p>
<p id="p-0086" num="0085">Reference numeral <b>1100</b> denotes a case in which job information of the respective print jobs stored in the Hold queue <b>1612</b> are displayed in an ascending order of job names. In this case, a list of print jobs in an order (ascending order) of job names is displayed. In this state, if the MFP controller <b>1000</b> detects that the &#x201c;job name&#x201d; button <b>901</b> has been touched, then the MFP controller <b>1000</b> displays a popup dialog indicating that sorting is in progress and waits for the sort processing of the job information of the respective print jobs to conclude, as represented by reference numeral <b>1101</b>. When the sort processing is concluded, the MFP controller <b>1000</b> displays a hold job list screen as denoted by reference numeral <b>1102</b> (<figref idref="DRAWINGS">FIG. 11B</figref>). In the hold job list screen <b>1102</b>, job information of the respective print jobs stored in the Hold queue <b>1612</b> are displayed in a descending order of job names. Furthermore, in the state represented by reference numeral <b>1102</b>, if the MFP controller <b>1000</b> detects that the &#x201c;job name&#x201d; button <b>901</b> has been touched, then the MFP controller <b>1000</b> displays a popup dialog indicating that sorting is in progress and waits for the sort processing of the job information of the respective print jobs to conclude, as denoted by reference numeral <b>1103</b> (<figref idref="DRAWINGS">FIG. 11B</figref>). When the sort processing is concluded in this manner, the MFP controller <b>1000</b> displays a hold job list screen as denoted by reference numeral <b>1100</b> in which job information is displayed in an ascending order of job names. In this example, a case is shown in which 50 print jobs (documents) are stored in the Hold queue <b>1612</b>.</p>
<p id="p-0087" num="0086">In the present embodiment, an array order of job names or date/time is switched back and forth between an ascending order and a descending order in response to a change request made using the &#x201c;job name&#x201d; button <b>901</b> or the &#x201c;date/time&#x201d; button <b>902</b>. However, the present invention is not limited to this arrangement and job names or date/time may always be displayed in an ascending order or a descending order.</p>
<p id="p-0088" num="0087"><figref idref="DRAWINGS">FIG. 12</figref> depicts a view illustrating an example of a screen displayed on the display unit of the console unit <b>1008</b> of the MFP <b>100</b> according to the present embodiment. In this case, an example of a hold job list screen displayed when an operator touches the hold tab is shown. Here, as represented by reference numeral <b>1100</b> of <figref idref="DRAWINGS">FIG. 11A</figref> described earlier, a hold job list screen is displayed in which job information is displayed in an ascending order of job names.</p>
<p id="p-0089" num="0088">Reference numeral <b>1200</b> denotes a state in which job information of the respective print jobs stored in the Hold queue <b>1612</b> is displayed in an ascending order of job names and a job corresponding to a job name &#x201c;document 3&#x201d; has been selected. In this state, if the MFP controller <b>1000</b> detects that a &#x201c;test print&#x201d; button <b>1201</b> has been touched, the screen shown as shown by numeral <b>1202</b> is displayed. This screen <b>1202</b> is a display example in a case where the test print has been set for the print job of &#x201c;document 3&#x201d;. A number indicating an order (in this case, &#x201c;1&#x201d;) of the aforementioned document is displayed to the left of &#x201c;document 3&#x201d;. Moreover, the screen <b>1202</b> is provided with the respective buttons of &#x201c;all pages&#x201d;, &#x201c;specified pages&#x201d;, &#x201c;first page&#x201d;, &#x201c;last page&#x201d;, &#x201c;cancel&#x201d;, and &#x201c;print start&#x201d;.</p>
<p id="p-0090" num="0089">When test-printing all pages of a print job, the operator must touch the &#x201c;all pages&#x201d; button. On the other hand, when test-printing only a part of the pages of a print job, the operator must touch the &#x201c;specified pages&#x201d; button. If the &#x201c;specified pages&#x201d; button has been touched, when the operator touches the &#x201c;first page&#x201d; button, a first page of the test print can be inputted using numeric keys provided on the console unit <b>1008</b>. In addition, when the operator touches the &#x201c;last page&#x201d; button, a last page of the test print can be inputted using numeric keys provided on the console unit <b>1008</b>. In the example shown in <figref idref="DRAWINGS">FIG. 12</figref>, a test print of five pages of page <b>5</b> to page <b>10</b> is specified in which the first page is page <b>5</b> and the last page is page <b>10</b>.</p>
<p id="p-0091" num="0090">In this state, when the operator touches a &#x201c;print start&#x201d; button <b>1203</b>, test print of the print job commences. In other words, when the MFP controller <b>1000</b> detects that the &#x201c;print start&#x201d; button <b>1203</b> has been touched, the MFP controller <b>1000</b> performs processing for registering the print job in the print execution queue. In addition, if the operator touches a &#x201c;cancel&#x201d; button <b>1204</b>, the screen <b>1200</b> is restored. At this point, on the hold job list screen <b>1200</b>, job information of the print jobs stored in the Hold queue <b>1612</b> is redisplayed in the display format prior to the transition to the test print setting screen or, in other words, in a state where a display format for displaying the job names in an ascending order is retained.</p>
<p id="p-0092" num="0091"><figref idref="DRAWINGS">FIG. 13</figref> is a diagram describing examples of tables for managing jobs of the MFP <b>100</b> according to the present embodiment. These tables are retained in the HDD <b>1500</b>.</p>
<p id="p-0093" num="0092">A job management table <b>1300</b> includes job IDs, pointers to an attribute information management table <b>1301</b>, and pointers to image data <b>1302</b>. A job ID is issued by the MFP controller <b>1000</b> in order to manage a corresponding job. Tables <b>1300</b><i>a</i>, <b>1300</b><i>b</i>, and <b>1300</b><i>c</i>, respectively for active jobs, hold jobs, and hold job list display exist in the job management table <b>1300</b>. Upon detecting that either the &#x201c;job name&#x201d; button <b>901</b> or the &#x201c;date/time&#x201d; button <b>902</b> in <figref idref="DRAWINGS">FIG. 9</figref> has been touched, the MFP controller <b>1000</b> decides a display format of the hold job list screen. Subsequently, based on the job management table <b>1300</b><i>b </i>for hold jobs, the job management table <b>1300</b><i>c </i>for hold job list display is reconstructed. Here, for example, an array order of job IDs of the job management table <b>1300</b><i>c </i>for hold job list display is changed in correspondence to a display order such as that denoted by reference numeral <b>1200</b> in <figref idref="DRAWINGS">FIG. 12</figref>. Therefore, by displaying print jobs according to the array order of the job management table <b>1300</b><i>c </i>for hold job list display, a list of held print jobs can be displayed in a display order changed by the most latest operation by the user. The attribute information management table <b>1301</b> stores the respective attributes of print jobs. In addition, an attribute ID corresponding to each print job and a setting value corresponding to the attribute ID are registered in the attribute information management table <b>1301</b>. Moreover, image data <b>1302</b> is managed on a per-page basis for each print job.</p>
<p id="p-0094" num="0093"><figref idref="DRAWINGS">FIG. 14</figref> is a diagram describing an example of a user information management table for managing user information of the MFP <b>100</b> according to the present embodiment. The user information management table (array retaining unit) is also retained in the HDD <b>1500</b>.</p>
<p id="p-0095" num="0094">The user information management table includes user IDs, user names, passwords, and job list display formats. By default, &#x201c;null&#x201d; is stored in all user name and password fields, and any of &#x201c;ascending order of date/time&#x201d;, &#x201c;descending order of date/time&#x201d;, &#x201c;ascending order of job name&#x201d;, and &#x201c;descending order of job name&#x201d; is stored in the job list display format fields. When &#x201c;null&#x201d; is stored in all user name and password fields, the MFP controller <b>1000</b> determines that a user name and a password have not been set for the MFP <b>100</b>. On the other hand, if data other than &#x201c;null&#x201d; is stored, then the MFP controller <b>1000</b> determines that a user name and a password have been set.</p>
<p id="p-0096" num="0095">If it is determined that a user name and a correct password have been inputted on the login screen represented by reference numeral <b>910</b> shown in <figref idref="DRAWINGS">FIG. 9</figref>, the MFP controller <b>1000</b> reads a job list display format associated with a user ID thereof from the HDD <b>1500</b>. Subsequently, based on the job management table <b>1300</b><i>b </i>for hold jobs shown in <figref idref="DRAWINGS">FIG. 13</figref>, the job management table <b>1300</b><i>c </i>for hold job list display is reconstructed.</p>
<p id="p-0097" num="0096">Next, a processing procedure of the MFP controller <b>1000</b> according to the present embodiment will be described in accordance with the flowcharts shown in <figref idref="DRAWINGS">FIGS. 15</figref>, <b>16</b>A, and <b>16</b>B.</p>
<p id="p-0098" num="0097"><figref idref="DRAWINGS">FIG. 15</figref> is a flowchart describing processing by the MFP controller <b>1000</b> according to the present embodiment. A program that executes this processing is stored in the RAM <b>302</b> upon execution and is executed under the control of the CPU <b>301</b>.</p>
<p id="p-0099" num="0098">When the MFP <b>100</b> is powered on, in step S<b>201</b>, the MFP controller <b>1000</b> waits for print data to be received. When the MFP controller <b>1000</b> detects reception of the print data, the process proceeds to step S<b>202</b> to perform input processing of the print data. The processing of the steps S<b>201</b> and S<b>202</b> is the processing of the network interface controller <b>1601</b> to be executed by the MFP controller <b>1000</b>.</p>
<p id="p-0100" num="0099">Next, the MFP controller <b>1000</b> advances processing to step S<b>203</b> to execute the processing of the job ticket analyzer <b>1602</b> and analyze the inputted print data. As a result of the analysis, the MFP controller <b>1000</b> stores print data (PDL data) in the reception buffer <b>1610</b> of the HDD <b>1500</b>. In addition, the MFP controller <b>1000</b> analyzes a job ticket to determine whether the job is for storage to the Hold queue <b>1612</b> or regular printing. If it is determined that the job is for storage to the Hold queue <b>1612</b>, then the MFP controller <b>1000</b> performs processing for registering the job in the job management table <b>1300</b><i>b </i>for hold jobs. On the other hand, in the case that it is determined for the regular printing, since the job is to be registered as-is in the print execution queue, the MFP controller <b>1000</b> performs processing for registering the job in the job management table <b>1300</b><i>a </i>for active jobs.</p>
<p id="p-0101" num="0100">The MFP controller <b>1000</b> next advances processing to step S<b>204</b> to analyze PDL data stored in the reception buffer <b>1610</b> (details on PDL data analysis processing will be described later). Next, the MFP controller <b>1000</b> proceeds to step S<b>205</b> to determine whether a command is a page close instruction or not (including checking whether the command is an instruction indicating the end of a single page). If the MFP controller <b>1000</b> determines that the command is the page close instruction, then the MFP controller <b>1000</b> advances processing to step S<b>206</b> to perform processing for recognizing an intermediate code generated up to then as one page's worth of data. An intermediate code is to be managed on a per-page basis as described earlier.</p>
<p id="p-0102" num="0101">On the other hand, if the MFP controller <b>1000</b> determines in step S<b>205</b> that the command is other than the page close instruction, the MFP controller <b>1000</b> advances processing to step S<b>207</b> and generates an intermediate code with a format suitable for internal processing in accordance with each command.</p>
<p id="p-0103" num="0102">After executing either step S<b>206</b> or step S<b>207</b> in this manner, the MFP controller <b>1000</b> advances processing to step S<b>208</b> and determines whether data to be analyzed exists in the reception buffer <b>1610</b> or not. If the MFP controller <b>1000</b> determines that data to be analyzed exists, then the process returns to step S<b>204</b> to repeat the PDL data analysis processing. On the other hand, if the MFP controller <b>1000</b> determines that data to be analyzed does not exist in the reception buffer <b>1610</b>, then the process advances to step S<b>209</b>. In step S<b>209</b>, the MFP controller <b>1000</b> determines whether an intermediate code of one page's worth or more exists or not. If the MFP controller <b>1000</b> determines that the intermediate code of one page's worth or more does not exist, then the MFP controller <b>1000</b> proceeds to the reception processing in step S<b>201</b>. If the MFP controller <b>1000</b> determines that the intermediate code of one page's worth or more exists, then the process proceeds to S<b>210</b> to read the intermediate code of one page's worth from the intermediate buffer <b>1611</b> and perform processing for generating image data based on the intermediate code. The MFP controller <b>1000</b> next proceeds process to step S<b>211</b> to determine whether or not the print job is a job for which storage in the Hold queue <b>1612</b> has been specified. In the case of a job for which storage in the Hold queue <b>1612</b> has been specified, the MFP controller <b>1000</b> advances processing to step S<b>212</b> and stores the generated image data in the Hold queue <b>1612</b> secured in the HDD <b>1500</b>.</p>
<p id="p-0104" num="0103">On the other hand, if the MFP controller <b>1000</b> determines that the print job is a job for which storage in the Hold queue <b>1612</b> has not been specified, then the MFP controller <b>1000</b> advances processing to step S<b>213</b>. In step S<b>213</b>, the MFP controller <b>1000</b> stores one page's worth of image data in the image buffer <b>1613</b>. The process then proceeds to step S<b>214</b> to register the job ID of the page stored in the image buffer <b>1613</b> in the print execution queue if the stored page is a top page of a regular print job. At this point, if print processing of another job is not being performed or, in other words, if the job ID is registered to the top of the print execution queue, one page's worth of image data is read from the image buffer <b>1613</b>. Subsequently, the MFP controller <b>1000</b> converts the image data into a video signal and commences processing for transferring the video signal to the printer controller <b>1607</b>. Accordingly, the printer controller <b>1607</b> is to actually perform printing on a recording paper (sheet) based on the video signal and perform processing for discharging the printed recording paper to the outside of the MFP <b>100</b>.</p>
<p id="p-0105" num="0104">The video signal transfer to the printer controller <b>1607</b> and the storage processing to the image buffer <b>1613</b> are not synchronous. Normally, since a conversion rate to image data proceeds at a faster rate than the printing speed of the printer unit <b>160</b>, image data of not yet printed pages gradually accumulate in the image buffer <b>1613</b>.</p>
<p id="p-0106" num="0105">After the processing of step S<b>214</b> as described above, the process returns to step S<b>209</b>. When one page's worth of intermediate code has not been completed in step S<b>209</b>, the process further returns to step S<b>201</b> to await subsequent input data.</p>
<p id="p-0107" num="0106"><figref idref="DRAWINGS">FIGS. 16A and 16B</figref> are flowcharts describing display processing of a hold job list by the MFP controller <b>1000</b> and processing in response to an input made on the touch panel by an operator, according to the present embodiment. The MFP controller <b>1000</b> executes the processing represented by the flowcharts shown in <figref idref="DRAWINGS">FIGS. 16A and 16B</figref> as separate tasks from the main processing shown in <figref idref="DRAWINGS">FIG. 15</figref>. A program that executes this processing is stored in the RAM <b>302</b> upon execution thereof and is executed under the control of the CPU <b>301</b>.</p>
<p id="p-0108" num="0107">First, in step S<b>301</b>, the MFP controller <b>1000</b> reads the user information management table shown in <figref idref="DRAWINGS">FIG. 14</figref> from the HDD <b>1500</b> and determines whether a user name and a password have been set for the MFP <b>100</b>. If the MFP controller <b>1000</b> determines that a user name and a password have not been set for the MFP <b>100</b>, then the MFP controller <b>1000</b> omits input of a user name and a password and advances processing to step S<b>304</b>.</p>
<p id="p-0109" num="0108">On the other hand, if the MFP controller <b>1000</b> determines that a user name and a password have been set for the MFP <b>100</b>, then the MFP controller <b>1000</b> advances processing to step S<b>302</b> to display a login screen as shown by numeral <b>910</b> in <figref idref="DRAWINGS">FIG. 9</figref>. The process proceeds to step S<b>303</b>, and the MFP controller <b>1000</b> determines whether the user name and the password inputted by the operator are correct or not. If correct, the MFP controller <b>1000</b> advances processing to step S<b>304</b>, but if not, the process returns to step S<b>302</b>.</p>
<p id="p-0110" num="0109">In step S<b>304</b>, the MFP controller <b>1000</b> reconstructs the job management table <b>1300</b><i>c </i>for hold job list display based on the job management table <b>1300</b><i>b </i>for hold jobs in accordance with the job list display format of the user information management table. The process advances to step S<b>305</b> to display a hold job list of the user in accordance with the information of the job management table <b>1300</b><i>c </i>for hold job list display.</p>
<p id="p-0111" num="0110">Next, the MFP controller <b>1000</b> advances processing to step S<b>306</b> to await key input. Upon detecting key input, the MFP controller <b>1000</b> advances processing to step S<b>307</b>. In step S<b>307</b>, based on location information of a touch by the operator from the console unit <b>1008</b>, the MFP controller <b>1000</b> determines whether or not the &#x201c;job name&#x201d; button <b>901</b> or the &#x201c;date/time&#x201d; button <b>902</b> has been touched. Hereinafter, a simple expression such as &#x201c;the MFP controller <b>1000</b> determines whether an &#x201c;xxxx&#x201d; button has been touched or not&#x201d; shall be used. If the MFP controller <b>1000</b> detects that either the &#x201c;job name&#x201d; button <b>901</b> or the &#x201c;date/time&#x201d; button <b>902</b> has been touched, then the MFP controller <b>1000</b> advances processing to step S<b>308</b> to display a popup dialog such as shown by numeral <b>10001</b> in <figref idref="DRAWINGS">FIG. 10A</figref>. In the popup dialog, based on the touched button and the job management table <b>1300</b><i>c </i>for hold job list display, a message is displayed which indicates that sort processing for sorting the order of the print job list display is in progress. The process advances to step S<b>309</b>, and the MFP controller <b>1000</b> decides a new job list display format from the type of the touched button and the job list display format stored in the user information management table, and stores a value thereof in the user information management table (<figref idref="DRAWINGS">FIG. 14</figref>). For example, if the &#x201c;job name&#x201d; button <b>901</b> has been touched and &#x201c;descending order of job names&#x201d; is registered as the job list display format of a corresponding user name, &#x201c;descending order of job names&#x201d; is replaced with &#x201c;ascending order of job names&#x201d;. In addition, if the &#x201c;date/time&#x201d; button <b>902</b> has been touched and &#x201c;ascending order of date/time&#x201d; is registered as the job list display format of a corresponding user name, &#x201c;ascending order of date/time&#x201d; is replaced with &#x201c;descending order of date/time&#x201d;.</p>
<p id="p-0112" num="0111">The process proceeds to step S<b>310</b>, and the MFP controller <b>1000</b> reconstructs the job management table <b>1300</b><i>c </i>for hold job list display based on the job management table <b>1300</b><i>b </i>for hold jobs in accordance with the job list display format of the user information management table. Once sort processing is concluded in this manner, the MFP controller <b>1000</b> advances processing to step S<b>311</b> to close the popup dialog. Subsequently, the process proceeds to step S<b>312</b> to redisplay a hold job list in accordance with the information of the job management table <b>1300</b><i>c </i>for hold job list display, and the process proceeds to step S<b>313</b> (<figref idref="DRAWINGS">FIG. 16B</figref>). Meanwhile, even if the MFP controller <b>1000</b> determines in step S<b>307</b> that the touched button is neither the &#x201c;job name&#x201d; button <b>901</b> nor the &#x201c;date/time&#x201d; button <b>902</b>, the MFP controller <b>1000</b> advances processing to step S<b>313</b> (<figref idref="DRAWINGS">FIG. 16B</figref>).</p>
<p id="p-0113" num="0112">In step S<b>313</b>, the MFP controller <b>1000</b> determines whether or not a print job has been selected. If the MFP controller <b>1000</b> determines that a print job has been selected, the MFP controller <b>1000</b> advances processing to step S<b>314</b>. In step S<b>314</b>, the MFP controller <b>1000</b> determines, for example, whether or not the &#x201c;preview&#x201d; button shown in <figref idref="DRAWINGS">FIG. 12</figref> has been touched. If the MFP controller <b>1000</b> determines that the &#x201c;preview&#x201d; button has been touched, the MFP controller <b>1000</b> advances processing to step S<b>315</b> to display a separate screen for previewing the top page of the selected job, and changes the display contents of the user interface screen (display change). The MFP controller <b>1000</b> advances processing to step S<b>316</b> to determine whether or not a button for closing the separate screen for previewing has been touched. If the MFP controller <b>1000</b> determines that the button for closing the separate screen has been touched, the MFP controller <b>1000</b> advances processing to step S<b>317</b>. In step S<b>317</b>, the MFP controller <b>1000</b> reconstructs the job management table <b>1300</b><i>c </i>for hold job list display based on the job management table <b>1300</b><i>b </i>for hold jobs stored in the HDD <b>1500</b> in accordance with the job list display format (<figref idref="DRAWINGS">FIG. 14</figref>) of the user information management table. Next, the MFP controller <b>1000</b> advances processing to step S<b>318</b> to close the separate screen. Subsequently, the MFP controller <b>1000</b> advances processing to step S<b>319</b> to redisplay a hold job list in accordance with the information of the job management table <b>1300</b><i>c </i>for hold job list display, and the process proceeds to step S<b>329</b>. Accordingly, after the user interface screen is switched by an user operation and upon conclusion of processing by the user operation, display control is performed so that a job list screen is displayed in an array set prior to the user operation such as &#x201c;preview&#x201d;, &#x201c;test print&#x201d;, &#x201c;print&#x201d;, &#x201c;edit&#x201d;, or the like.</p>
<p id="p-0114" num="0113">On the other hand, if it is determined that the &#x201c;preview&#x201d; button has not been touched in step S<b>314</b>, then the MFP controller <b>1000</b> advances processing to step S<b>320</b> to determine whether the &#x201c;test print&#x201d; button has been touched or not. If the MFP controller <b>1000</b> determines that the &#x201c;test print&#x201d; button has been touched, then the MFP controller <b>1000</b> advances processing to step S<b>321</b> to display a separate screen for setting test printing of the selected job. Next, the MFP controller <b>1000</b> advances processing to step S<b>316</b> to determine whether or not a button for closing the separate screen for setting test printing has been touched.</p>
<p id="p-0115" num="0114">On the other hand, if the MFP controller <b>1000</b> determines in step S<b>320</b> that the &#x201c;test print&#x201d; button has not been touched, then the MFP controller <b>1000</b> proceeds to step S<b>322</b> to determine whether or not the &#x201c;print&#x201d; button <b>903</b> has been touched. If the MFP controller <b>1000</b> determines that the &#x201c;print&#x201d; button has been touched, then the MFP controller <b>1000</b> advances processing to step S<b>323</b> to commence print processing of the selected job. Next, the MFP controller <b>1000</b> advances processing to step S<b>324</b> to display a separate screen for an active job list. Subsequently, the MFP controller <b>1000</b> advances processing to step S<b>316</b> to determine whether or not a button for closing the separate screen for an active job list has been touched.</p>
<p id="p-0116" num="0115">Moreover, if the MFP controller <b>1000</b> determines in step S<b>322</b> that the &#x201c;print&#x201d; button <b>903</b> has not been touched, then the MFP controller <b>1000</b> proceeds processing to step S<b>325</b> to determine whether or not the &#x201c;edit&#x201d; button has been touched. If the MFP controller <b>1000</b> determines that the &#x201c;edit&#x201d; button has been touched, then the MFP controller <b>1000</b> advances processing to step S<b>326</b> to display a separate screen for job ticket editing. Subsequently, the MFP controller <b>1000</b> advances processing to step S<b>316</b> to determine whether or not a button for closing the separate screen for job ticket editing has been touched.</p>
<p id="p-0117" num="0116">Furthermore, if the MFP controller <b>1000</b> determines in step S<b>325</b> that the &#x201c;edit&#x201d; button has not been touched, then the MFP controller <b>1000</b> proceeds processing to step S<b>327</b> to determine whether or not the &#x201c;delete&#x201d; button has been touched. If the MFP controller <b>1000</b> determines that the &#x201c;delete&#x201d; button has been touched, then the MFP controller <b>1000</b> advances processing to step S<b>328</b> to delete the selected job. More specifically, the MFP controller <b>1000</b> deletes relevant data from the job management table for hold jobs and erases image data of the Hold queue <b>1612</b>.</p>
<p id="p-0118" num="0117">On the other hand, if the MFP controller <b>1000</b> determines in step S<b>313</b> that a print job has not been selected or determines in step S<b>327</b> that the &#x201c;delete&#x201d; button has not been touched, then the MFP controller <b>1000</b> advances processing to step S<b>329</b>. In step S<b>329</b>, the MFP controller <b>1000</b> determines whether or not the &#x201c;logout&#x201d; button has been touched. If it is determined that the &#x201c;logout&#x201d; button has been touched, then the MFP controller <b>1000</b> returns processing to step S<b>302</b> (<figref idref="DRAWINGS">FIG. 16A</figref>). On the other hand, if the MFP controller <b>1000</b> determines in step S<b>329</b> that the &#x201c;logout&#x201d; button has not been touched, then the MFP controller <b>1000</b> returns to the processing of step S<b>306</b> (<figref idref="DRAWINGS">FIG. 16A</figref>).</p>
<p id="p-0119" num="0118">As described above, according to the present embodiment, a user operation regarding a print job is performed on a separate screen such as the test print setting screen which differs from the hold job list screen, and when subsequently returning to the hold job list screen for redisplay, the hold job list screen prior to the user operation can be restored. In other words, by storing a job list display format in the user information management table, when returning to an original list screen after switching to a different screen display, the user information management table can be referenced to enable display in the original job list display format. Accordingly, the operator can now easily find a desired print job from the job list display.</p>
<p id="p-0120" num="0119">In addition, according to the present embodiment, even in a case where a printing apparatus is shared and used by a plurality of dedicated operators, by storing job list display formats in the user information management table, print jobs can now be list-displayed by each user in a desired display format.</p>
<p id="p-0121" num="0120">Moreover, in the present embodiment, while an array change request has been described using a case where the &#x201c;job name&#x201d; button or the &#x201c;date/time&#x201d; button is specified, the present invention is not limited thereto. Alternatively, providing and specifying a button for size (data volume), file type, or the like shall suffice. In such a case, an array order of print jobs is to be changed in accordance with size or file type. In addition, the plurality of item buttons may be arranged so as to be specifiable, whereby a display order (array) may be changed by combining items of specified buttons.</p>
<p id="p-0122" num="0121">Heretofore, an embodiment of the present invention has been described through an example in which the present invention is applied to an MFP or a multifunction peripheral as a printing apparatus. However, it should be obvious that an independent printing apparatus including a console unit and a large-capacity storage device described in the present embodiment shall also suffice.</p>
<p id="p-0123" num="0122">Furthermore, in the present embodiment, means for authenticating a user has been described through an example of a password authentication method in which a user name and a password are inputted via the console unit <b>1008</b>. However, other authentication processing may be applied to the printing apparatus, such as performing card authentication by having the operator set an IC card on a card reader and reading information on the IC card.</p>
<p id="p-0124" num="0123">(Other Embodiments)</p>
<p id="p-0125" num="0124">The present invention can also be achieved by having a program of software realizing the functions of the embodiment described above supplied directly or remotely to a system or an apparatus, and having a computer of the system or the apparatus read out and execute the supplied program. In this case, a program format need not necessarily be adhered to as long as the functions of the program are provided.</p>
<p id="p-0126" num="0125">Therefore, a program code itself that is installed to the computer in order to have the functions and processing of the present invention realized through the computer also achieves the present invention. In other words, the claims of the present invention also include a computer-executable program itself for realizing the functions and processing of the present invention. In this case, as long as the functions of the program are provided, the format of the program is irrelevant and may be an object code, an interpreter-executed program, script data to be supplied to an OS, and the like.</p>
<p id="p-0127" num="0126">In addition, the present invention can also be achieved by modes other than realizing the functions of the embodiment described above by having a computer read out and execute a program. For example, the functions of the embodiment described above can be realized by having an OS or the like running on a computer perform a part or all of the actual processing based on instructions of the program.</p>
<p id="p-0128" num="0127">Furthermore, a program read out from a storage medium may be arranged to be written into a memory provided on an expansion board inserted into a computer or on an expansion unit connected to the computer. In this case, subsequently, a CPU or the like provided on the expansion board or the expansion unit performs a part of or all of the actual processing based on instructions contained in the program, whereby the functions of the embodiment described earlier are realized by such processing.</p>
<p id="p-0129" num="0128">While the present invention has been described with reference to exemplary embodiments, it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures and functions.</p>
<p id="p-0130" num="0129">This application claims priority from Japanese Patent Application No. 2008-172646, filed Jul. 1, 2008, which is hereby incorporated by reference herein in its entirety.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A printing apparatus comprising:
<claim-text>a storage unit configured to store a plurality of items of image data to be printed by a printing unit;</claim-text>
<claim-text>a display control unit configured to cause a display unit to display a first list of the plurality of items of image data stored in the storage unit, wherein the plurality of items of image data are arranged in a first display order in the first list; and</claim-text>
<claim-text>an acceptance unit configured to accept an instruction for instructing to change a display order of the plurality of items of image data displayed on the display unit into a second display order being different from the first display order;</claim-text>
<claim-text>wherein the display control unit configured to cause the display unit to display a second list of the plurality of items of image data in a case that the acceptance unit accepts the instruction, wherein the plurality of items of image data are arranged in the second display order in the second list;</claim-text>
<claim-text>wherein the display control unit configured to cause the display unit to display a setting screen for setting of a print setting of image data among the plurality of items of image data displayed in the first or second list, in a case that a print instruction for instructing to print the image data is received; and</claim-text>
<claim-text>wherein when the setting screen is closed, the display control unit configured to cause the display unit to display the first list if the first list was displayed upon receiving the print instruction and to display the second list if the second list was displayed upon receiving the print instruction.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The printing apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the storage unit is a hard disk drive (HDD) unit.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The printing apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising;
<claim-text>an authentication unit configured to authenticate a user; and</claim-text>
<claim-text>a holding unit configured to hold a display order of the plurality of items of image data displayed on the display unit in associated with information of the user authenticated by the authentication unit,</claim-text>
<claim-text>wherein the display control unit causes the display unit to display a list of the plurality of items of image data in the display order, associated with a user, held in the holding unit, in a case that the authentication unit has authenticated the user.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The printing apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising a dialog display unit configured to cause the display unit to display a dialog for indicating a state in which a display order of the plurality of items of image data are being changed in a case that the acceptance unit accepts the instruction.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The printing apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising a printing unit configured to print image data stored in the storage unit.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The printing apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the display order of the plurality of items of image data is an ascending order or a descending order.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A method of controlling a printing apparatus, comprising:
<claim-text>storing a plurality of items of image data to be printed by a printing unit into a storage unit;</claim-text>
<claim-text>displaying a first list of the plurality of items of image data stored in the storage unit on a display unit, wherein the plurality of items of image data are arranged in a first display order in the first list;</claim-text>
<claim-text>accepting an instruction for instructing to change a display order of the plurality of items of image data displayed on the display unit into a second display order;</claim-text>
<claim-text>displaying a second list of the plurality of items of image data in a case that the instruction is accepted, wherein the plurality of items of image data are arranged in the second display order in the second list;</claim-text>
<claim-text>displaying a setting screen for setting a print setting for printing image data among the plurality of items of image data displayed in the first or second list on the display unit, in a case that a print instruction for printing the image data is received; and</claim-text>
<claim-text>when the setting screen is closed, displaying the first list if the first list was displayed upon receiving the print instruction, and displaying the second list if the second list was displayed upon receiving the print instruction.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the storage unit is a hard disk drive (HDD) unit.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising;
<claim-text>printing image data stored in the storage unit.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising;
<claim-text>authenticating a user;</claim-text>
<claim-text>holding a display order of the plurality of items of image data displayed on the display unit in associated with information of the authenticated user; and</claim-text>
<claim-text>displaying a list of the plurality of items of image data in the held display order, associated with a user, in a case that the user has been authenticated.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
