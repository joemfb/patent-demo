<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625117-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625117</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13073266</doc-number>
<date>20110328</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2010-113466</doc-number>
<date>20100517</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>159</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>3</main-group>
<subgroup>12</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>358  113</main-classification>
<further-classification>358  115</further-classification>
</classification-national>
<invention-title id="d2e71">Apparatus for controlling image formation, computer readable device having stored thereon computer-executable instructions for forming images, and method of generating image formation setting information</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6847466</doc-number>
<kind>B1</kind>
<name>Gazdik et al.</name>
<date>20050100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  115</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7884952</doc-number>
<kind>B2</kind>
<name>Takagi</name>
<date>20110200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2006/0221361</doc-number>
<kind>A1</kind>
<name>Takagi</name>
<date>20061000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2007/0146759</doc-number>
<kind>A1</kind>
<name>Saito</name>
<date>20070600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  113</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>JP</country>
<doc-number>2005-148928</doc-number>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>JP</country>
<doc-number>2005-182694</doc-number>
<kind>A</kind>
<date>20050700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>JP</country>
<doc-number>2006-285870</doc-number>
<kind>A</kind>
<date>20061000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>JP</country>
<doc-number>2008-310495</doc-number>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>JP</country>
<doc-number>2009-003712</doc-number>
<kind>A</kind>
<date>20090100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>Notification of Reasons for Refusual issued in corresponding Japanese Patent Application No. 2010-113466 dated Aug. 6, 2013.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>13</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>10</number-of-drawing-sheets>
<number-of-figures>10</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110279843</doc-number>
<kind>A1</kind>
<date>20111117</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Miyata</last-name>
<first-name>Yuji</first-name>
<address>
<city>Kitanagoya</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Miyata</last-name>
<first-name>Yuji</first-name>
<address>
<city>Kitanagoya</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Banner &#x26; Witcoff, Ltd.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Brother Kogyo Kabushiki Kaisha</orgname>
<role>03</role>
<address>
<city>Nagoya-shi, Aichi-ken</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Cordero</last-name>
<first-name>Marivelisse Santiago</first-name>
<department>2676</department>
</primary-examiner>
<assistant-examiner>
<last-name>Diaby</last-name>
<first-name>Moustapha</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A computer readable device has stored thereon computer-executable instructions that, when executed, cause a computer to function as a generation module, a setting module and a production module. The generation module is configured to generate a data structure including a first region storing a first image formation condition and a second region for storing location information representing a location of the second region and in which a second image formation condition is written by an application program based on the location information. The setting module is configured to set the first image formation condition in the first region based on the second image formation condition written in the second region by the application program. The production module is configured to produce image formation data based on the first image formation condition stored in the first region.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="229.95mm" wi="165.69mm" file="US08625117-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="219.03mm" wi="150.37mm" orientation="landscape" file="US08625117-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="226.91mm" wi="187.79mm" orientation="landscape" file="US08625117-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="231.06mm" wi="191.18mm" file="US08625117-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="220.39mm" wi="153.42mm" orientation="landscape" file="US08625117-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="152.06mm" wi="174.07mm" file="US08625117-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="198.71mm" wi="190.84mm" file="US08625117-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="212.26mm" wi="188.89mm" file="US08625117-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="238.25mm" wi="178.82mm" file="US08625117-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="226.74mm" wi="200.91mm" file="US08625117-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="187.79mm" wi="159.26mm" file="US08625117-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATION</heading>
<p id="p-0002" num="0001">The present application claims priority from Japanese Patent Application No. 2010-113466 filed on May 17, 2010. The entire content of this priority application is incorporated herein by reference.</p>
<heading id="h-0002" level="1">TECHNICAL FIELD</heading>
<p id="p-0003" num="0002">The present disclosure relates to an apparatus for controlling image formation, a computer readable device having computer program product for forming images and a method of forming image formation setting information.</p>
<heading id="h-0003" level="1">BACKGROUND</heading>
<p id="p-0004" num="0003">The Microsoft Windows (registered trademark) operating system provides an image formation system in which the printing condition determined according to an application program or a printer driver is stored as binary-type print setting information that is a DEVMODE data structure.</p>
<p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. 10</figref> is a diagram illustrating a structure of the DEVMODE data structure. The DEVMODE data structure is roughly configured by two regions. One is a Public region that is open to public, and the other is a Private region that is not open to public. The Public region stores print conditions related to basic print functions that are common to a plurality of printer types. Since the specification for the Public region is open, it is possible for a user to change the print conditions stored in the Public region through the application program.</p>
<p id="p-0006" num="0005">The Private region stores print conditions related to print functions that are unique to each printer. The specification for the Private region is unique to each developer of the printer drivers. Since the specification for the Private region is not open, the print conditions stored in the Private region cannot be changed by the user through the application program.</p>
<p id="p-0007" num="0006">However, the user may wish to change the print conditions stored in the Private region through the application program. In such a case, an expanding API (Application Programming Interface) is implemented in the printer driver to change the print condition stored in the Private region through the application program, and the application program calls the expanding API to change the print condition.</p>
<p id="p-0008" num="0007">However, when the application program calls the expanding API to change the print condition, following problems occur.</p>
<p id="p-0009" num="0008">The OS includes a 32-bit OS that handles 32-bit data and a 64-bit OS that handles 64-bit data. Similarly, the printer driver includes a 32-bit driver that handles 32-bit data and a 64-bit driver that handles 64-bit data. Only the 32-bit driver can be used on the 32-bit OS and only the 64-bit driver can used on the 64-bit OS.</p>
<p id="p-0010" num="0009">Similarly, the application program includes a 32-bit application that handles 32-bit data and a 64-bit application that handles 64-bit data. Only the 32-bit application can be operated on the 32-bit OS. However, both of the 32-bit application and the 64-bit application can be operated on the 64-bit OS.</p>
<p id="p-0011" num="0010">The 32-bit application cannot call the expanding API that is implemented in the 64-bit driver. Therefore, the 32-bit application that is operated on the 64-bit OS cannot change the print condition stored in the Private region.</p>
<heading id="h-0004" level="1">SUMMARY</heading>
<p id="p-0012" num="0011">According to an aspect of the present invention, a computer readable device has stored thereon computer-executable instructions that, when executed, cause a computer to function as a generation module, a setting module and a production module. The generation module is configured to generate a data structure including a first region storing a first image formation condition and a second region for storing location information representing a location of the second region and in which a second image formation condition is written by an application program based on the location information. The setting module is configured to set the first image formation condition in the first region based on the second image formation condition written in the second region by the application program. The production module is configured to produce image formation data based on the first image formation condition stored in the first region.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0013" num="0012">Illustrative aspects in accordance with the present invention will be described in detail with reference to the following drawings wherein:</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram illustrating an electrical configuration of a computer according to an illustrative aspect of the present invention;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram illustrating a logical configuration of a print program;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram illustrating a DEVMODE data structure according to the illustrative aspect;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram illustrating values stored in each input value and output value;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 5</figref> is a diagram illustrating an example of an application print setting screen;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 6</figref> is a flowchart illustrating a flow of a display process of the application print setting screen;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 7</figref> is a flowchart illustrating a flow for changing the print condition from the application;</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 8</figref> is a flowchart illustrating a flow of a setting process;</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 9</figref> is a flowchart illustrating a flow of the setting process; and</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 10</figref> is a diagram illustrating a configuration of a conventional DEVMODE data structure.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0024" num="0023">&#x3c;Illustrative Aspect&#x3e;</p>
<p id="p-0025" num="0024">An illustrative aspect of the present invention will be hereinafter explained with reference to <figref idref="DRAWINGS">FIGS. 1 to 9</figref>.</p>
<p id="p-0026" num="0025">(1) Structure of Computer</p>
<p id="p-0027" num="0026">An electrical configuration of a computer <b>1</b> (hereinafter referred to as a PC) will be explained with reference to <figref idref="DRAWINGS">FIG. 1</figref>. The PC <b>1</b> includes a CPU <b>11</b>, a ROM <b>12</b>, a RAM <b>13</b>, a storing section <b>14</b>, a display drive circuit <b>15</b>, and a USB interface (USB I/F) <b>16</b>.</p>
<p id="p-0028" num="0027">The CPU <b>11</b> executes various programs stored in the ROM <b>12</b> and the storing section <b>14</b> and controls each component in the PC <b>1</b>. The ROM <b>12</b> stores various programs that are executed by the CPU <b>11</b> and data. The RAM <b>13</b> is a main memory that is used when the CPU <b>11</b> executes various processes.</p>
<p id="p-0029" num="0028">The storing section <b>14</b> is an external memory for storing various programs and data using a non-volatile storing medium such as a hard drive or a flash memory. The storing section <b>14</b> stores an operating system (OS), print programs such as an image forming program. The Microsoft Windows (registered trademark) operating system is used in the illustrative aspect as an example.</p>
<p id="p-0030" num="0029">The display drive circuit <b>15</b> is a circuit that drives a display device <b>17</b> such as a CRT and a liquid crystal display and connected to the display device <b>17</b> via a cable.</p>
<p id="p-0031" num="0030">The USB interface <b>16</b> is provided as a USB (Universal Serial Bus) host interface and connected to devices via a USB cable. The devices include the printer <b>2</b> and an input device <b>18</b> such as a mouse and a keyboard.</p>
<p id="p-0032" num="0031">The printer <b>2</b> forms images on a recording medium such as a paper by an electrophotographic method or an ink jet method. The printer <b>2</b> may be connected to the PC <b>1</b> via the communication network such as LAN.</p>
<p id="p-0033" num="0032">Logical Structure of Print Program</p>
<p id="p-0034" num="0033">A logical structure of a print program will be explained with reference to <figref idref="DRAWINGS">FIG. 2</figref>. The print program <b>30</b> includes a printer driver <b>31</b> and an application program <b>32</b> (hereinafter referred to as an application). Data representing a print condition is passed between the printer driver <b>31</b> and the application <b>32</b> with using a DEVMODE data structure <b>40</b>.</p>
<p id="p-0035" num="0034">Various commands output from the application <b>32</b> to the printer driver <b>31</b> is transmitted to the printer driver <b>31</b> via an API that is provided by the OS. The various commands include a print command such as a GDI command or a command for setting a setting value in the Private region or the Public region based on the print condition that is written in a passing region <b>42</b> (see <figref idref="DRAWINGS">FIG. 3</figref>).</p>
<p id="p-0036" num="0035">(2-1) DEVMODE Data Structure</p>
<p id="p-0037" num="0036">A structure of a DEVMODE data structure will be explained with reference to <figref idref="DRAWINGS">FIG. 3</figref>. The DEVMODE data structure <b>40</b> is configured by a Public region <b>43</b> and a Private region <b>41</b>.</p>
<p id="p-0038" num="0037">The Public region <b>43</b> stores information relating to the DEVMODE data structure itself such as a size of the DEVMODE data structure and also stores setting values for print setting items relating to basic print functions that are common to a plurality of printer types such as a paper size, the number of copies, print quality, color printing and two-sided printing. A specification of the Public region <b>43</b> is determined by Microsoft and therefore the developer of a printer driver cannot set a new item in the Public region <b>43</b>.</p>
<p id="p-0039" num="0038">The Private region <b>41</b> stores setting values for print setting items relating to print functions unique to the printer <b>2</b> such as borderless printing, plural pages on one side and a margin size. A specification of the Private region <b>41</b> is unique to a developer of the printer driver, and the specification of the Private region <b>41</b> is not usually open. Therefore, the print condition stored in the Private region <b>41</b> cannot be changed through the application <b>32</b>.</p>
<p id="p-0040" num="0039">The DEVMODE data structure <b>40</b> of the illustrative aspect is different from the conventional DEVMODE data structure in <figref idref="DRAWINGS">FIG. 10</figref> in that the passing region <b>42</b> is provided in the Private region <b>41</b>.</p>
<p id="p-0041" num="0040">The passing region <b>42</b> is used to change the setting value of a part of the print setting items stored in the Private region <b>41</b> from the application <b>32</b>. In the illustrative aspect, the setting value of &#x201c;borderless printing&#x201d; is changed.</p>
<p id="p-0042" num="0041">The passing region <b>42</b> is used to notify the application <b>32</b> if the printer has a specific print function. In the illustrative aspect, the application <b>32</b> is notified if the printer has a two-sided printing function.</p>
<p id="p-0043" num="0042">The passing region <b>42</b> is also used when the setting value that is stored in the Public region <b>43</b> is not wanted to be changed directly from the application <b>32</b>. In such a case, the setting value stored in the Public region <b>43</b> is written in the passing region <b>42</b> from the application <b>32</b> and then, a setting value is set in the Public region <b>43</b> based on the setting value written in the passing region <b>42</b> by the printer driver <b>31</b>. That is, the setting value in the Public region <b>43</b> is determined with reference to the setting value in the passing region <b>42</b>.</p>
<p id="p-0044" num="0043">When the setting value of &#x201c;two-sided printing&#x201d; stored in the Public region <b>43</b> is wanted to be changed in relation to the setting value of &#x201c;margin size&#x201d; stored in the Private region <b>41</b>, the following process is executed. Specifically, when the two-sided printing is executed for a postcard-size paper, the margin size is set to 0 mm.</p>
<p id="p-0045" num="0044">In such a case, the application <b>32</b> writes the setting value of &#x201c;two-sided printing&#x201d; in the passing region <b>42</b> so that the printer driver <b>31</b> can change the setting values of &#x201c;two-sided printing&#x201d; and &#x201c;margin size&#x201d; in relation to each other.</p>
<p id="p-0046" num="0045">Location information of the passing region is stored at the end of the DEVMODE data structure <b>40</b>. The application <b>32</b> acquires the end address of the DEVMODE data structure <b>40</b> from the size of the DEVMODE data structure stored in the Public region <b>43</b>. The application <b>32</b> reads the location information of the passing region from the end address of the DEVMODE data structure <b>40</b> to access the passing region <b>42</b>.</p>
<p id="p-0047" num="0046">The passing region <b>42</b> stores values of four items including an input value <b>1</b>, an input value <b>2</b>, an output value <b>1</b> and an output value <b>2</b>.</p>
<p id="p-0048" num="0047">The values stored in each input value and output value will be explained with reference to <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0049" num="0048">The input value <b>1</b> is an item in which the application <b>32</b> writes the setting value of &#x201c;two-sided printing&#x201d;. One of the setting values of &#x201c;no change&#x201d;, &#x201c;execution of two-sided printing&#x201d; and &#x201c;no-execution of two-sided printing&#x201d; is written in the input value <b>1</b>.</p>
<p id="p-0050" num="0049">The input value <b>2</b> is an item in which the application <b>32</b> writes the setting value of &#x201c;borderless printing&#x201d;. One of the setting values of &#x201c;no change&#x201d;, &#x201c;execution of borderless printing&#x201d; and &#x201c;no-execution of borderless printing&#x201d; is written in the input value <b>2</b>.</p>
<p id="p-0051" num="0050">The input values are not limited to the setting values of &#x201c;two-sided printing&#x201d; and &#x201c;borderless printing&#x201d; but may be the setting values of other print functions if the print functions are allowed to be changed from the application. The number of items stored in the passing region <b>42</b> is not limited to two but may be arbitrarily determined.</p>
<p id="p-0052" num="0051">The output value <b>1</b> is an item in which the printer driver <b>31</b> writes the print function information representing if the printer <b>2</b> is provided with a specific print function. In the illustrative aspect, the print function information represents if the printer <b>2</b> is provided with the two-sided printing function. If the printer <b>2</b> is provided with the two-sided printing function, &#x201c;yes&#x201d; is written in the output value <b>1</b> and if the printer <b>2</b> is not provided with the two-sided printing function, &#x201c;no&#x201d; is written therein. The specific print function is not limited to the two-sided printing function but may be other function if the function is provided in the printer. The number of specific print function stored in the passing region <b>42</b> is not limited to one.</p>
<p id="p-0053" num="0052">The output value <b>2</b> is an item in which a determination result is written. The determination result is obtained when the printer driver <b>31</b> determines if the setting value in the input value <b>1</b> or the input value <b>2</b> is effective based on the setting values in the input value <b>1</b> or <b>2</b> and the print function of the printer. Details will be described later. The determination result is not always successful but may be false. If the determination result is successful, &#x201c;effective&#x201d; is written in the output value <b>2</b>. If the determination result is false, &#x201c;ineffective&#x201d; is written therein.</p>
<p id="p-0054" num="0053">(2-2) Logical Configuration of Printer Driver</p>
<p id="p-0055" num="0054">The printer driver <b>31</b> includes a generation module <b>31</b><i>a</i>, a storing module <b>31</b><i>b</i>, a setting module <b>31</b><i>c</i>, a producing module <b>31</b><i>d </i>and a print function information writing module <b>31</b><i>e</i>, as illustrated in <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="p-0056" num="0055">The generation module <b>31</b><i>a </i>is executed to generate the DEVMODE data structure <b>40</b>. Specifically, the generation module <b>31</b><i>a </i>obtains an instance of the DEVMODE data structure (hereinafter simply referred to as a DEMVODE data structure) in the RAM <b>13</b> according to a definition code of the DEVMODE data structure.</p>
<p id="p-0057" num="0056">The storing module <b>31</b><i>b </i>stores setting values of each print setting item in the Public region <b>43</b> and the Private region <b>41</b> of the DEVMODE data structure <b>40</b>. Specifically, when the generation module <b>31</b><i>a </i>generates the DEVMODE data structure <b>40</b>, the storing module <b>31</b><i>b </i>stores a predetermined default value in each print setting item of the generated DEVMODE data structure <b>40</b>.</p>
<p id="p-0058" num="0057">The application <b>32</b> can call the storing module <b>31</b><i>b </i>of the printer driver <b>31</b> from an application print setting screen <b>50</b> (see <figref idref="DRAWINGS">FIG. 5</figref>). The storing module <b>31</b><i>b </i>that is called by the application <b>32</b> displays a driver print setting screen for setting a print condition. On the driver print setting screen, the setting values stored in the Private region <b>41</b> can be changed.</p>
<p id="p-0059" num="0058">The setting module <b>31</b><i>c </i>sets the setting values of the print condition stored in the Public region <b>43</b> and the Private region <b>41</b> based on the setting values of each print setting item that are written in the passing region <b>42</b> by the application <b>32</b>.</p>
<p id="p-0060" num="0059">The producing module <b>31</b><i>d </i>produces image formation data based on a print command output by the application <b>32</b>, the print condition stored in the Public region <b>43</b> and the print condition stored in the Private region <b>41</b> and outputs the produced image formation data to the printer <b>2</b>.</p>
<p id="p-0061" num="0060">The print function information writing module <b>31</b><i>e </i>writes print function information that represents if the printer <b>2</b> is provided with a specific print function in the output value <b>1</b> of the passing region <b>42</b>. In this illustrative aspect, the print function information writing module <b>31</b><i>e </i>writes in the output value <b>1</b> the print function information that represents if the printer <b>2</b> is provided with a two-sided printing function.</p>
<p id="p-0062" num="0061">(2-3) Logical Configuration of Application Program</p>
<p id="p-0063" num="0062">As described above, the setting values stored in the Private region <b>41</b> can be changed on the driver print setting screen. However, in such a case, a user is required to call the driver print setting screen from the application print setting screen <b>50</b>. This increases the number of operations and this may be inconvenient to some users.</p>
<p id="p-0064" num="0063">According to the illustrative aspect, the application <b>32</b> can change the setting values of the print setting items stored in the Public region <b>43</b> and also the setting values of some of the print setting items stored in the Private region <b>41</b> without calling the driver print setting screen. Specifically, the application <b>32</b> can change the setting value of &#x201c;borderless printing&#x201d; stored in the Private region <b>41</b> without calling the driver print setting screen.</p>
<p id="p-0065" num="0064">The application <b>32</b> includes an application module <b>32</b><i>a </i>and an access module <b>32</b><i>b. </i></p>
<p id="p-0066" num="0065">The application module <b>32</b><i>a </i>includes a word processing software, a spreadsheet software, an image editing software and the like.</p>
<p id="p-0067" num="0066">The access module <b>32</b><i>b </i>reads the values from the output value <b>1</b> and the output value <b>2</b> of the passing region <b>42</b> and writes the setting values in the input value <b>1</b> &#x201c;two-sided printing&#x201d; and in the input value <b>2</b> &#x201c;borderless printing&#x201d;. Specifically, the access module <b>32</b><i>b </i>displays the application print setting screen <b>50</b> on the display device <b>17</b> and writes in the input value <b>1</b> and the input value <b>2</b> of the passing region <b>42</b> the values that are set by a user from the application print setting screen <b>50</b>. In this displaying process, the access module <b>32</b><i>b </i>reads the values from the output value <b>1</b> and the output value <b>2</b> to control the display.</p>
<p id="p-0068" num="0067">(3) Display Process of Application Print Setting Screen</p>
<p id="p-0069" num="0068">The display process of the application print setting screen <b>50</b> will be explained with reference to <figref idref="DRAWINGS">FIG. 5</figref>. For easy understanding, three print setting items of &#x201c;paper size&#x201d;, &#x201c;two-sided printing&#x201d; and &#x201c;borderless printing&#x201d; will be explained.</p>
<p id="p-0070" num="0069">A print paper size is selected in a paper size field <b>50</b><i>a</i>. If a user selects a paper size in the paper size filed <b>50</b><i>a</i>, the selected paper size is stored in the &#x201c;paper size&#x201d; <b>43</b><i>a </i>of the Public region <b>43</b> by the application <b>32</b>.</p>
<p id="p-0071" num="0070">A two-sided printing field <b>50</b><i>b </i>is used for selecting the two-sided printing. If a user selects executing the two-sided printing, a checkbox for the two-sided printing is checked. If a user selects not executing the two-sided printing, the checkbox is cleared.</p>
<p id="p-0072" num="0071">The borderless printing is selected in a borderless printing field <b>50</b><i>c</i>. If a user selects executing the borderless printing, a checkbox for the borderless printing is checked. If a user selects not executing the borderless printing, the checkbox is cleared.</p>
<p id="p-0073" num="0072">A property button <b>50</b><i>d </i>is used to call the driver print setting screen.</p>
<p id="p-0074" num="0073">An OK button <b>50</b><i>e </i>is used when a user orders execution of printing. If a user clicks the OK button <b>50</b><i>e</i>, the application <b>32</b> outputs a print command for printing a print object page to the printer driver <b>31</b> via an API provided by the OS. When receiving the print command, the printer driver <b>31</b> produces print data based on the print command, the print condition stored in the Public region <b>43</b> and the print condition stored in the Private region <b>41</b>, and transmits the produced print data to the printer <b>2</b>.</p>
<p id="p-0075" num="0074">The two-sided printing field <b>50</b><i>b </i>is displayed on the application print setting screen <b>50</b> in <figref idref="DRAWINGS">FIG. 5</figref>. When displaying the application print setting screen <b>50</b>, the application <b>32</b> confirms if the printer <b>2</b> is provided with the two-sided printing function. If the application <b>32</b> determines that the printer <b>2</b> does not have capability of the two-sided printing function, the two-sided printing field <b>50</b><i>b </i>is not displayed. The borderless printing field <b>50</b><i>e </i>may always be displayed. Hereinafter, the display process of the application print setting screen <b>50</b> will be explained.</p>
<p id="p-0076" num="0075">A flow of the display process of the application print setting screen <b>50</b> will be explained with reference to <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0077" num="0076">If a user selects &#x201c;print&#x201d; from a menu displayed by the application <b>32</b>, the application <b>32</b> requests the printer driver <b>31</b> via the OS to acquire a pointer of the DEVMODE data structure <b>40</b>. The pointer represents an address on a memory.</p>
<p id="p-0078" num="0077">The printer driver <b>31</b> that is requested to provide the pointer generates the DEVMODE data structure <b>40</b> and stores predetermined default values therein. The printer driver <b>31</b> returns the pointer of the DEVMODE data structure <b>40</b> to the application <b>32</b> as a return value. &#x201c;No change&#x201d; is set in the input value <b>1</b> and the input value <b>2</b> as default values and no value is set in the output value <b>1</b> and the output value <b>2</b>.</p>
<p id="p-0079" num="0078">If the pointer of the DEVMODE data structure <b>40</b> is returned to the application <b>32</b> from the printer driver <b>31</b>, the following display process starts.</p>
<p id="p-0080" num="0079">Hereinafter, the CPU <b>11</b> that executes the application <b>32</b> will be referred to as the application <b>32</b>. The CPU <b>11</b> that executes the printer driver <b>31</b> will be referred to as the printer driver <b>31</b>. At step S<b>101</b>, the application <b>32</b> reads the location information of the passing region from the end of the DEVMODE data structure <b>40</b>. Thus, the application <b>32</b> reads the location information of the passing region to specify the location of the passing region <b>42</b>. Therefore, even if the passing region <b>42</b> is provided in the Private region <b>41</b>, the application <b>32</b> can read and write data from/in the passing region <b>42</b>. The end address of the DEVMODE data structure <b>40</b> can be specified by the size of the DEVMODE data structure stored in the Public region (<figref idref="DRAWINGS">FIG. 3</figref>) and a beginning address of the DEVMODE data structure.</p>
<p id="p-0081" num="0080">At step S<b>102</b>, the application <b>32</b> calls Document Properties Function that is an API provided by the OS. Then, the OS calls Dry Document Properties Function that is provided by the printer driver <b>31</b>. When the Dry Document Properties Function is called, the printer driver <b>31</b> executes a setting process. Details will be described later. In the setting process, the printer driver <b>31</b> writes in the output value <b>1</b> of the DEVMODE data structure <b>40</b> the data representing if the printer <b>2</b> is capable of the two-sided printing function.</p>
<p id="p-0082" num="0081">At step S<b>103</b>, the application <b>32</b> reads from the passing region <b>42</b> the value of the output value <b>1</b> that represents if the printer <b>2</b> is capable of the two-sided printing function.</p>
<p id="p-0083" num="0082">At step S<b>104</b>, the application <b>32</b> determines if the printer <b>2</b> is capable of the two-sided printing function based on the value of the output value <b>1</b>. If the determination is affirmative, the process proceeds to step S<b>105</b>. If the determination is negative, the process proceeds to step S<b>106</b>.</p>
<p id="p-0084" num="0083">At step S<b>105</b>, the application <b>32</b> displays the application print setting screen <b>50</b> and also displays the two-sided printing field <b>50</b><i>b </i>thereon.</p>
<p id="p-0085" num="0084">At step S<b>106</b>, the application <b>32</b> displays the application print setting screen <b>50</b> and does not display the two-sided printing field <b>50</b><i>b </i>thereon.</p>
<p id="p-0086" num="0085">(4) Change of Print Condition from Application Program</p>
<p id="p-0087" num="0086">A process flow for changing the print condition from the application <b>32</b> will be explained with reference to <figref idref="DRAWINGS">FIG. 7</figref>. In the illustrative aspect, the printer <b>2</b> is capable of the two-sided printing function and a user changes the setting value of the &#x201c;two-sided printing&#x201d; on the application print setting screen <b>50</b>. The similar process is executed when a user changes the setting value of the &#x201c;borderless printing&#x201d;. This process is started when a user checks the checkbox for the two-sided printing field <b>50</b><i>b </i>on the application print setting screen <b>50</b> or when a user clears the checkbox for the two-sided printing field <b>50</b><i>b. </i></p>
<p id="p-0088" num="0087">At step S<b>201</b>, the application <b>32</b> reads the location information of the passing region from the end of the DEVMODE data structure <b>40</b>.</p>
<p id="p-0089" num="0088">At step S<b>202</b>, according to the operation by the user, the application <b>32</b> writes the setting value in the input value <b>1</b> of the passing region <b>42</b> that represents if the two-sided printing is executed.</p>
<p id="p-0090" num="0089">Specifically, for example, if a user clicks the empty checkbox, the checkbox is now checked and the application <b>32</b> writes &#x201c;execution of two-sided printing&#x201d; in the input value <b>1</b>. On the other hand, if a user clicks the checked checkbox, the checkbox is now cleared and the application <b>32</b> writes &#x201c;no-execution of two-sided printing&#x201d; in the input value <b>1</b>.</p>
<p id="p-0091" num="0090">At step S<b>203</b>, the application <b>32</b> calls the Document Properties Function. When the Document Properties Function is called, the printer driver <b>31</b> executes the setting process. Details will be described later. In the setting process, the printer driver <b>31</b> determines if the value written in the input value <b>1</b> is effective and writes the determination result in the output value <b>2</b> of the passing region <b>42</b>. The printer driver <b>31</b> sets the setting values in the Public region <b>43</b> and the Private region <b>41</b> based on the determination result.</p>
<p id="p-0092" num="0091">At step <b>204</b>, the application <b>32</b> reads the value of the output value <b>2</b> from the passing region <b>42</b> that represents if the determination result is successful or false.</p>
<p id="p-0093" num="0092">If the determination result is successful at step S<b>205</b>, the process proceeds to step S<b>206</b> and if the determination result is false, the process proceeds to step S<b>207</b>.</p>
<p id="p-0094" num="0093">At step S<b>206</b>, the application <b>32</b> updates the display of the application print setting screen <b>50</b>. Specifically, if the check mark is not displayed in the checkbox of the two-sided printing field <b>50</b><i>b</i>, the application <b>32</b> displays the check mark therein. If the check mark is displayed in the checkbox of the two-sided printing field <b>50</b><i>b</i>, the checkbox is cleared.</p>
<p id="p-0095" num="0094">At step S<b>207</b>, the application <b>32</b> informs a user that the setting value input by a user is ineffective. For example, an error message of &#x201c;selected setting is unavailable&#x201d; is displayed on the display device <b>17</b>. If the setting value input by a user is ineffective, the check mark is not displayed in the checkbox of the two-sided printing field <b>50</b><i>b </i>even if the user checks the checkbox at the beginning of this process.</p>
<p id="p-0096" num="0095">(5) Setting Process</p>
<p id="p-0097" num="0096">A flow of the setting process executed in step S<b>102</b> and step S<b>203</b> will be explained with reference to <figref idref="DRAWINGS">FIGS. 5 and 9</figref>.</p>
<p id="p-0098" num="0097">At step S<b>301</b>, the printer driver <b>31</b> reads the location information of the passing region from the end of the DEVMODE data structure <b>40</b>.</p>
<p id="p-0099" num="0098">In the processes of the steps S<b>302</b> to S<b>304</b>, the setting value representing if the printer <b>2</b> is capable of the two-sided printing function is written in the output value <b>1</b> of the DEVMODE data structure <b>40</b>.</p>
<p id="p-0100" num="0099">At step S<b>302</b>, the printer driver <b>31</b> determines if the printer <b>2</b> is capable of with the two-sided printing function. If the determination is affirmative, the process proceeds to step S<b>303</b>. If the determination is negative, the process proceeds to step S<b>304</b>.</p>
<p id="p-0101" num="0100">The printer driver <b>31</b> is programmed for each type of printers <b>2</b> and has information of printing functions of the printer <b>2</b> acceptable for the printer driver <b>31</b>.</p>
<p id="p-0102" num="0101">At step S<b>303</b>, the printer driver <b>31</b> writes &#x201c;Yes&#x201d; in the output value <b>1</b> of the passing region <b>42</b>.</p>
<p id="p-0103" num="0102">At step S<b>304</b>, the printer driver <b>31</b> writes &#x201c;No&#x201d; in the output value <b>1</b> of the passing region <b>42</b>.</p>
<p id="p-0104" num="0103">In the steps S<b>305</b> to S<b>319</b>, based on the setting value written in the input value <b>1</b> and the setting value written in the input value <b>2</b>, it is determined if the setting values are &#x201c;effective&#x201d;, and the determination result is written in the output value <b>2</b> of the passing region <b>42</b>.</p>
<p id="p-0105" num="0104">At step S<b>305</b>, the printer driver <b>31</b> writes in the output value <b>2</b> of the passing region <b>42</b> &#x201c;effective&#x201d; as an initial value of the determination result.</p>
<p id="p-0106" num="0105">At step S<b>306</b>, the printer driver <b>31</b> reads from the passing region <b>42</b> the setting value of the input value <b>1</b> that represents if the two-sided printing is executed.</p>
<p id="p-0107" num="0106">At step S<b>307</b>, if the setting value of the input value <b>1</b> is &#x201c;no-execution of two-sided printing&#x201d;, the process proceeds to step S<b>308</b>. If the setting value of the input value <b>1</b> is &#x201c;execution of two-sided printing&#x201d;, the process proceeds to step S<b>309</b>. If the setting value of the input value <b>1</b> is &#x201c;no change&#x201d;, nothing is executed and the process proceeds to step S<b>313</b>.</p>
<p id="p-0108" num="0107">In the following case, &#x201c;no change&#x201d; is set in the input value <b>1</b>. The setting process is called every time when an operation is executed for the two-sided printing field <b>50</b><i>b </i>and for the borderless printing field <b>50</b><i>c</i>. Therefore, if an operation is executed for the borderless printing field <b>50</b><i>c </i>first, &#x201c;no change&#x201d; that is a default value is set in the input value <b>1</b>. If &#x201c;no change&#x201d; is set in the input value <b>1</b>, the processes of steps S<b>308</b> to S<b>312</b> are not necessary. Therefore, the printer driver <b>31</b> skips the processes of steps S<b>308</b> to S<b>312</b> and proceeds to step S<b>313</b>.</p>
<p id="p-0109" num="0108">At step S<b>308</b>, the printer driver <b>31</b> writes &#x201c;no-execution of two-sided printing&#x201d; in the &#x201c;two-sided printing&#x201d; <b>43</b><i>b </i>of the Public region <b>43</b>.</p>
<p id="p-0110" num="0109">At step S<b>309</b>, the printer driver <b>31</b> determines if the printer <b>2</b> is capable of the two-sided printing function. If the determination is affirmative, the process proceeds to step S<b>310</b>. If the determination is negative, the process proceeds to step S<b>311</b>.</p>
<p id="p-0111" num="0110">It is determined if the printer <b>2</b> is capable of the two-sided printing function at step S<b>309</b> due to the following reasons.</p>
<p id="p-0112" num="0111">If the printer <b>2</b> is not capable of the two-sided printing function, the two-sided printing field <b>50</b><i>b </i>is not displayed at step S<b>106</b> in the display process. Therefore, a user cannot check or clear the checkbox of the two-sided printing field <b>50</b><i>b</i>, and the value of the input value <b>1</b> is supposed to be &#x201c;no change&#x201d;. Therefore, if the printer <b>2</b> is not capable of the two-sided printing function, the process does not proceed to step S<b>309</b>. However, some application may display the two-sided printing filed <b>50</b><i>b </i>on the application print setting screen <b>50</b> without confirming if the printer is capable of the two-sided printing function. Such application may display the two-sided printing field <b>50</b><i>b </i>on the application print setting screen <b>50</b> although the printer <b>2</b> is not capable of the two-sided printing function, and a user may select execution of the two-sided printing. Accordingly, &#x201c;execution of two-sided printing&#x201d; is set in the input value <b>1</b>. Therefore, the printer driver <b>31</b> reconfirms if the printer is capable of the two-sided printing function at step S<b>309</b>.</p>
<p id="p-0113" num="0112">At step <b>309</b>, it is determined if the printer <b>2</b> is capable of the two-sided printing function and also determined if the set paper size is acceptable for the two-sided printing. Some of paper sizes may not be acceptable for the two-sided printing. For example, &#x201c;postcard&#x201d; or &#x201c;A4&#x201d; may be acceptable and &#x201c;A3&#x201d; may not be acceptable for the two-sided printing. In such a case, if the printer <b>2</b> is capable of the two-sided printing function and the paper size stored in the &#x201c;paper size&#x201d; <b>43</b><i>a </i>of the Public region <b>43</b> is &#x201c;postcard&#x201d; or &#x201c;A4&#x201d;, it may be determined that the printer <b>2</b> is capable of the two-sided printing function.</p>
<p id="p-0114" num="0113">At step S<b>310</b>, the printer driver <b>31</b> determines that the setting value of the input value <b>1</b> is an effective print condition and writes &#x201c;execution of two-sided printing&#x201d; in the &#x201c;two-sided printing&#x201d; <b>43</b><i>b </i>of the public region <b>43</b>. &#x201c;Effective&#x201d; is set in the output value <b>2</b> as a default value of the determination result at step S<b>305</b>.</p>
<p id="p-0115" num="0114">Then, the printer driver <b>31</b> determines if the paper size stored in the &#x201c;paper size&#x201d; <b>43</b><i>a </i>of the Public region <b>43</b> is &#x201c;postcard&#x201d;. If determined that the paper size is &#x201c;postcard&#x201d;, the printer driver <b>31</b> writes &#x201c;0 mm&#x201d; in the &#x201c;margin size&#x201d; <b>41</b><i>a </i>of the Private region <b>41</b>.</p>
<p id="p-0116" num="0115">At step S<b>311</b>, the printer driver <b>31</b> determines that the setting value of the input value is not an effective print condition and writes &#x201c;ineffective&#x201d; in the output value <b>2</b> of the passing region <b>42</b> as a determination result.</p>
<p id="p-0117" num="0116">Since the setting value relating to the input value <b>1</b> is set in the Public region <b>43</b> or the Private region <b>41</b> based on the setting values of the input value <b>1</b>, the output value <b>1</b> and the output value <b>2</b>, the printer driver <b>31</b> returns the setting value in the input value <b>1</b> to &#x201c;no change&#x201d; at step S<b>312</b>.</p>
<p id="p-0118" num="0117">At step S<b>313</b>, the printer driver <b>31</b> reads the setting value in the input value <b>2</b> of the passing region <b>42</b>.</p>
<p id="p-0119" num="0118">At step S<b>314</b>, if the setting value in the input value <b>2</b> is &#x201c;no-execution of borderless printing&#x201d;, the process proceeds to step S<b>315</b>. If the setting value in the input value <b>2</b> is &#x201c;execution of borderless printing&#x201d;, the process proceeds to step S<b>316</b>. If the setting value in the input value <b>2</b> is &#x201c;no change&#x201d;, nothing is executed and the process proceeds to step S<b>320</b>.</p>
<p id="p-0120" num="0119">At step S<b>315</b>, the printer driver <b>31</b> writes in the &#x201c;borderless printing&#x201d; <b>41</b><i>b </i>of the Private region <b>41</b> &#x201c;no-execution of borderless printing&#x201d;.</p>
<p id="p-0121" num="0120">At step S<b>316</b>, the printer driver <b>31</b> determines if the printer <b>2</b> is capable of the borderless printing function. If the determination is affirmative, the process proceeds to step S<b>317</b>. If the determination is negative, the process proceeds to step S<b>318</b>.</p>
<p id="p-0122" num="0121">At step S<b>316</b>, it is determined if the printer <b>2</b> is capable of the borderless printing function and also determined if the set paper size is acceptable for the borderless printing. Some print sizes may not be acceptable for the borderless printing. For example, &#x201c;A4&#x201d; may be acceptable for the borderless printing and &#x201c;A3&#x201d; may not be acceptable. Therefore, if the printer <b>2</b> is capable the borderless printing function and the paper size stored in the &#x201c;paper size&#x201d; <b>43</b><i>a </i>of the Public region <b>43</b> is &#x201c;A4&#x201d;, it may be determined that the printer <b>2</b> is capable of the borderless printing function.</p>
<p id="p-0123" num="0122">At step S<b>317</b>, the printer driver <b>31</b> determines that the setting value in the input value <b>2</b> is an effective print condition and writes &#x201c;execution of borderless printing&#x201d; in the &#x201c;borderless printing&#x201d; <b>41</b><i>b </i>of the Private region <b>41</b>. &#x201c;Effective&#x201d; is set in the output value <b>2</b> as the default value at step S<b>312</b>.</p>
<p id="p-0124" num="0123">At step S<b>318</b>, the printer driver <b>31</b> determines that the setting value in the input value <b>2</b> is not an effective print condition and writes &#x201c;ineffective&#x201d; in the output value <b>2</b> of the passing region <b>42</b> as a reflected result.</p>
<p id="p-0125" num="0124">Since the setting value relating to the input value <b>2</b> is set in the Public region <b>43</b> or the Private region <b>41</b> based on the setting values of the input value <b>2</b> and the output value <b>2</b>, the printer driver <b>31</b> returns the setting value in the input value <b>2</b> of the passing region <b>42</b> to &#x201c;no change&#x201d; at step S<b>319</b>.</p>
<p id="p-0126" num="0125">At step S<b>320</b>, the printer driver <b>31</b> determines if the value in the output value <b>2</b> of the passing region <b>42</b> that represents a determination result is successful or false. If the determination result is false, the process proceeds to step S<b>321</b>. If the determination result is successful, the process is terminated.</p>
<p id="p-0127" num="0126">At step S<b>321</b>, the printer driver <b>31</b> returns the setting values set in the regions other than the passing region <b>42</b> in this process to original values.</p>
<p id="p-0128" num="0127">In the illustrative aspect, it is determined if the setting value written in the input value <b>1</b> or the input value <b>2</b> by the application <b>32</b> is effective or not. If it is available, the setting value is written in the Private region <b>41</b>. If it is unavailable, the setting value is not written in the Private region <b>41</b>. However, the setting value written in the input value <b>1</b> or the input value <b>2</b> by the application may be set in the Private region <b>41</b> without determining if the setting value is effective or not.</p>
<p id="p-0129" num="0128">For example, if the setting value is validated by the application <b>32</b> so that only an effective setting value is written in the Private region <b>41</b>, the printer driver <b>31</b> may write the setting value in the Private region <b>41</b> without determining if the setting value is effective or not.</p>
<p id="p-0130" num="0129">(6) Effects of Illustrative Aspect</p>
<p id="p-0131" num="0130">The specification for the private region <b>41</b> is not open to public and therefore the print condition stored in the Private region <b>41</b> may not be changed through the application <b>32</b>. According to the printer driver <b>31</b> of the illustrative aspect, the application <b>32</b> writes the print condition in the input value <b>1</b> and the input value <b>2</b> of the passing region <b>42</b>, and the application <b>32</b> can change the print condition stored in the Private region <b>41</b>.</p>
<p id="p-0132" num="0131">Specifically, after the application <b>32</b> writes the input value in the passing region <b>42</b>, the application <b>32</b> calls the Document Properties Function, that is an API provided by the OS, at step S<b>102</b>. This makes the printer driver <b>31</b> execute the setting process for the input value written in the passing region <b>42</b>.</p>
<p id="p-0133" num="0132">Therefore, according to the printer driver <b>31</b>, the printer driver <b>31</b> is not required to implement the API to change the print condition stored in the Private region <b>41</b> through the application <b>32</b>, and the print condition can be changed through the application <b>32</b>. Accordingly, even if the 32-bit application is operated on the 64-bit OS, the print condition stored in the Private region <b>41</b> can be changed.</p>
<p id="p-0134" num="0133">Further, according to the printer driver <b>31</b>, since the passing region <b>42</b> is provided in the Private region <b>41</b>, the region in which the application writes a print condition is provided in the DEVMODE data structure <b>40</b>.</p>
<p id="p-0135" num="0134">Further, according to the printer driver <b>31</b>, if the print condition written in the passing region <b>42</b> is related to both of the print condition stored in the Public region <b>43</b> and the print condition stored in the Private region <b>41</b>, the setting values of the print condition stored in the Private region <b>41</b> and the Public region <b>43</b> are set based on the print condition written in the passing region <b>42</b>. Therefore, this reduces inconsistency or mismatch between the print condition stored in the Private region <b>41</b> and the print condition stored in the Public region <b>43</b>.</p>
<p id="p-0136" num="0135">Further, according to the printer driver <b>31</b>, it is determined if the print condition written in the passing region <b>42</b> by the application <b>32</b> is an effective print condition. If it is determined that the print condition is an effective print condition, the setting values are set in the Private region <b>41</b> and the Public region <b>43</b> based on the effective print condition, and the determination result representing that the determination result is successful is written in the passing region <b>42</b>. If it is determined that the print condition is not an effective print condition, the determination result representing that the determination result is false is written in the passing region <b>42</b>. Therefore, application <b>32</b> can be informed if the print condition written in the passing region <b>42</b> is effective or ineffective.</p>
<p id="p-0137" num="0136">Further, according to the printer driver <b>31</b>, the print function information representing if the printer <b>2</b> is capable of the two-sided printing function is written in the output value <b>1</b> of the passing region <b>42</b>. Therefore, the application <b>32</b> can be informed if the printer <b>2</b> is capable of the two-sided printing function.</p>
<p id="p-0138" num="0137">Further, according to the printer driver <b>31</b>, the location information representing the location of the passing region <b>42</b> in the DEVMODE data structure <b>40</b> is described at the end of the DEVMODE data structure <b>40</b>. Therefore, the application <b>32</b> reads the location information from the end of the DEVMODE data structure <b>40</b> so as to be able to know the location of the passing region <b>42</b>.</p>
<p id="p-0139" num="0138">Further, according to the print program <b>30</b>, the application <b>32</b> reads the value in the output value <b>1</b> of the passing region. If the printer <b>2</b> is capable of the two-sided printing function, the application print setting screen <b>50</b> is displayed. A user sets the print condition related to the two-sided printing function from the application print setting screen <b>50</b>.</p>
<p id="p-0140" num="0139">&#x3c;Other Illustrative Aspects&#x3e;</p>
<p id="p-0141" num="0140">The scope of the present invention is not limited to the aspects explained in the above description made with reference to the drawings. The following aspects may be included in the technical scope of the present invention.</p>
<p id="p-0142" num="0141">(1) The setting value only in the Public region <b>43</b> may be set based on the setting value written in the passing region <b>42</b>.</p>
<p id="p-0143" num="0142">Although the setting value for the print quality is stored in the Public region <b>43</b>, the setting value for the print quality may not be desired to be changed through the application <b>32</b> due to the relation to the setting value in other print setting item. In such a case, the input value in which a setting value for the print quality is written by the application <b>32</b> may be provided in the passing region <b>42</b>, and the setting value in the &#x201c;print quality&#x201d; <b>43</b><i>c </i>in the Public region <b>43</b> may be set based on the setting value written in the input value by the printer driver <b>31</b>.</p>
<p id="p-0144" num="0143">In case of setting the setting value only in the Public region <b>43</b> based on the setting value written in the passing region <b>42</b>, the Public region <b>43</b> corresponds to an example of the first region. In such a case, the passing region <b>42</b> that corresponds to the second region is not provided in the first region.</p>
<p id="p-0145" num="0144">(2) In the above illustrative aspect, a printing operation is explained as an example of the image formation. Display of a print preview on the display device <b>17</b> may be an example of the image formation.</p>
<p id="p-0146" num="0145">(3) In the above illustrative aspects, the print conditions stored in the Public region <b>43</b> and the Private region <b>41</b> are changed from the application <b>32</b>. However, if the default value is not set in the DEVMODE data structure, the setting value is not changed but may be newly stored in the Public region <b>43</b> and the Private region <b>41</b></p>
<p id="p-0147" num="0146">(4) In the above illustrative aspects, the print program <b>30</b> including the printer driver <b>31</b> and the application program <b>32</b> is executed by the CPU <b>11</b>. However, each of the printer driver <b>31</b> and the application program <b>32</b> may be executed by an independent CPU. Further, each of the modules of the printer driver <b>31</b> and the application program <b>32</b> may be executed by an independent CPU.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A non-transitory computer readable medium having stored thereon computer-executable instructions, including a printer driver, that, when executed, cause a computer to function as:
<claim-text>a generation module configured to generate a data structure including:</claim-text>
<claim-text>a first private region storing a first image formation condition relating to image formation functions unique to each model of image forming apparatuses,</claim-text>
<claim-text>a second private region in which a second image formation condition is written by an application program; and</claim-text>
<claim-text>a public region storing a third image formation condition relating to image formation functions common to a plurality of models of image forming apparatuses;</claim-text>
<claim-text>a setting module configured to:</claim-text>
<claim-text>determine whether an image forming apparatus connected to the computer is provided with a specific image forming function;</claim-text>
<claim-text>determine that the second image formation condition written in the second private region by the application program is effective upon determining that the second image formation condition matches the specific image forming function with which the image forming apparatus is provided;</claim-text>
<claim-text>determine that the second image formation condition written in the second private region by the application program is ineffective upon determining that the second image formation condition does not match the specific image forming function with which the image forming apparatus is provided;</claim-text>
<claim-text>set the second image formation condition in the second private region to the third image formation condition in the public region upon determining that the second image formation condition in the second private region is effective;</claim-text>
<claim-text>write a successful setting result to the second private region, the successful setting result indicating that setting of the second image formation condition to the third image formation condition is successful; and</claim-text>
<claim-text>write a failure setting result to the second private region, the failure setting result indicating that setting of the second image formation condition to the third image formation condition is failed upon determining that the second image formation condition in the second private region is ineffective; and</claim-text>
<claim-text>a production module configured to produce image formation data based on the first image formation condition stored in the first private region and the third image formation condition stored in the public region.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The computer readable medium according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the computer-executable instructions, including the printer driver, when executed, cause the computer to further function as:
<claim-text>an image forming function information writing module configured to write in the second private region image formation function information representing if the image forming apparatus is provided with the specific image forming function.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The computer readable medium according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein location information representing a location of the second private region is described at an end of the data structure.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The computer readable medium according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the computer-executable instructions, including the printer driver, when executed, cause the computer to further function as:
<claim-text>an image forming function information writing module configured to write in the second private region image formation function information representing if the image forming apparatus is provided with the specific image forming function, and</claim-text>
<claim-text>wherein the image forming function information is read from the second private region by the application program and a setting screen is displayed on a display device by the application program if the image forming apparatus is provided with the specific image forming function.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The computer readable medium according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the data structure is a DEVMODE data structure and the second private region is a Private region in the DEVMODE data structure.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The non-transitory computer readable medium of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the setting module is further configured to:
<claim-text>determine whether another third image formation condition is set to be a predetermined condition; and</claim-text>
<claim-text>set automatically another first print formation condition that is related to the effective second image formation condition to be a predetermined condition.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. An apparatus comprising:
<claim-text>a processing unit; and</claim-text>
<claim-text>memory for storing executable instructions that, when executed by the processing unit, cause the apparatus to function as:</claim-text>
<claim-text>a generation module configured to generate a data structure including:</claim-text>
<claim-text>a first private region storing a first image formation condition relating to image formation functions unique to each model of image forming apparatuses,</claim-text>
<claim-text>a second private region in which a second image formation condition is written by an application program; and</claim-text>
<claim-text>a public region storing a third image formation condition relating to image formation functions common to a plurality of models of image forming apparatuses;</claim-text>
<claim-text>a setting module configured to:</claim-text>
<claim-text>determine whether an image forming apparatus connected to the computer is provided with a specific image forming function;</claim-text>
<claim-text>determine that the second image formation condition written in the second private region by the application program is effective upon determining that the second image formation condition matches the specific image forming function with which the image forming apparatus is provided;</claim-text>
<claim-text>determine that the second image formation condition written in the second private region by the application program is ineffective upon determining that the second image formation condition does not match the specific image forming function with which the image forming apparatus is provided;</claim-text>
<claim-text>set the second image formation condition in the second private region to the third image formation condition in the public region upon determining that the second image formation condition in the second private region is effective;</claim-text>
<claim-text>write a successful setting result to the second private region, the successful setting result indicating that setting of the second image formation condition to the third image formation condition is successful; and</claim-text>
<claim-text>write a failure setting result to the second private region, the failure setting result indicating that setting of the second image formation condition to the third image formation condition is failed upon determining that the second image formation condition in the second private region is ineffective; and</claim-text>
<claim-text>a production module configured to produce image formation data based on the first image formation condition stored in the first private region and the third image formation condition stored in the public region.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The apparatus according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the executable instructions, when executed by the processing unit, cause the apparatus to further function as:
<claim-text>an image forming function information writing module configured to write in the second private region image formation function information representing if the image forming apparatus is provided with the specific image forming function.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The apparatus according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein location information representing a location of the second private region is described at an end of the data structure.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The apparatus according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the computer-executable instruction, when executed by the processing unit, cause the apparatus to further function as:
<claim-text>an image forming function information writing module configured to write in the second private region image formation function information representing if the image forming apparatus is provided with the specific image forming function, and</claim-text>
<claim-text>the image forming function information is read from the second private region by the application program and a setting screen is displayed on a display device by the application program if the image forming apparatus is provided with the specific image forming function.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The apparatus according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the data structure is a DEVMODE data structure and the second private region is a Private region in the DEVMODE data structure.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A method comprising:
<claim-text>generating, by a computing device, a data structure including:
<claim-text>a first private region storing a first image formation condition relating to image formation functions unique to each model of image forming apparatuses,</claim-text>
<claim-text>a second private region in which a second image formation condition is written by an application program, and</claim-text>
<claim-text>a public region storing a third image formation condition relating to image formation functions common to a plurality of models of image forming apparatuses;</claim-text>
</claim-text>
<claim-text>determining, by the computing device, that an image forming apparatus connected to the computing device is provided with a specific image forming function;</claim-text>
<claim-text>determining, by the computing device, that the second image formation condition written in the second private region by the application program is effective upon determining that the second image formation condition matches the specific image forming function with which the image forming apparatus is provided;</claim-text>
<claim-text>setting, by the computing device, the second image formation condition in the second private region to the third image formation condition in the public region upon determining that the second image formation condition in the second private region is effective;</claim-text>
<claim-text>writing, by the computing device, a successful setting result to the second private region, the successful setting result indicating that setting of the second image formation condition to the third image formation condition is successful; and</claim-text>
<claim-text>producing, by the computing device, image formation data based on the first image formation condition stored in the first private region and the third image formation condition stored in the public region.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the data structure is a DEVMODE data structure and the second private region is a Private region in the DEVMODE data structure.</claim-text>
</claim>
</claims>
</us-patent-grant>
