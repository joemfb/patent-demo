<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626937-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626937</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13303282</doc-number>
<date>20111123</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2010-267483</doc-number>
<date>20101130</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>121</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>16</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>709230</main-classification>
<further-classification>709203</further-classification>
<further-classification>709224</further-classification>
<further-classification>715744</further-classification>
</classification-national>
<invention-title id="d2e71">Server device in thin-client system</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6584404</doc-number>
<kind>B1</kind>
<name>McBurney et al.</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>701482</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7085577</doc-number>
<kind>B1</kind>
<name>Katsuno et al.</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>4554563</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2004/0254724</doc-number>
<kind>A1</kind>
<name>Mattila</name>
<date>20041200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>701209</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2008/0248810</doc-number>
<kind>A1</kind>
<name>Obradovich</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>4554561</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2009/0055525</doc-number>
<kind>A1</kind>
<name>Slepov et al.</name>
<date>20090200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709224</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2009/0077546</doc-number>
<kind>A1</kind>
<name>Huang et al.</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717165</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2009/0089296</doc-number>
<kind>A1</kind>
<name>Stemeseder et al.</name>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707 10</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2009/0097930</doc-number>
<kind>A1</kind>
<name>Fogg</name>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>408211</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2009/0238112</doc-number>
<kind>A1</kind>
<name>Hong et al.</name>
<date>20090900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370328</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2010/0114994</doc-number>
<kind>A1</kind>
<name>Huang et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707811</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2010/0257413</doc-number>
<kind>A1</kind>
<name>Brunet et al.</name>
<date>20101000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 57</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2010/0268831</doc-number>
<kind>A1</kind>
<name>Scott et al.</name>
<date>20101000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709228</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>JP</country>
<doc-number>11-203303</doc-number>
<date>19990700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>JP</country>
<doc-number>2010-223691</doc-number>
<date>20101000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>WO</country>
<doc-number>2007070459</doc-number>
<date>20070600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00016">
<othercit>First Office Action for Japanese Patent Application No. 2010-267483 Dated Mar. 5, 2013, 6 pgs.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>9</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>709203</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709230</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709224</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>9</number-of-drawing-sheets>
<number-of-figures>10</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120136924</doc-number>
<kind>A1</kind>
<date>20120531</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Tomida</last-name>
<first-name>Takahiro</first-name>
<address>
<city>Hamura</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Tomida</last-name>
<first-name>Takahiro</first-name>
<address>
<city>Hamura</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Turocy &#x26; Watson, LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Casio Computer Co., Ltd</orgname>
<role>03</role>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Winder</last-name>
<first-name>Patrice</first-name>
<department>2452</department>
</primary-examiner>
<assistant-examiner>
<last-name>Hagos</last-name>
<first-name>Eyob</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A server device for use in a thin-client system includes a determination unit configured to determine whether or not an application program executed on the server device based on an input event from the client terminal has requested sensor information in a present environment of a device, an obtaining unit configured to, when the determination unit has determined the application program has requested sensor information, obtain sensor information in a present environment of the client terminal instead of obtaining sensor information in an present environment of the server device, and a transmission unit configured to cause the application program to run based on the sensor information on the client terminal obtained at the obtaining unit and transmits screen data created by the execution to the client terminal.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="149.18mm" wi="242.23mm" file="US08626937-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="164.93mm" wi="186.77mm" file="US08626937-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="248.24mm" wi="166.62mm" orientation="landscape" file="US08626937-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="215.39mm" wi="151.47mm" file="US08626937-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="217.93mm" wi="145.54mm" file="US08626937-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="249.85mm" wi="178.39mm" file="US08626937-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="197.70mm" wi="169.08mm" file="US08626937-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="225.47mm" wi="171.62mm" file="US08626937-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="262.55mm" wi="145.54mm" file="US08626937-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="214.55mm" wi="180.93mm" file="US08626937-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is based upon and claims the benefit of priority from prior Japanese Patent Application No. 2010-267483, filed Nov. 30, 2010, the entire contents of which are incorporated herein by reference.</p>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">1. Field of the Invention</p>
<p id="p-0004" num="0003">The present invention relates to a server device for use in a screen-transfer thin-client system where a computer on which an application program runs differs physically from a computer operated by the user.</p>
<p id="p-0005" num="0004">2. Description of the Related Art</p>
<p id="p-0006" num="0005">In recent years, the use of web applications has been increasing in the field of personal computers (PCs) connectable to a communication network, such as the Internet, and mobile computers.</p>
<p id="p-0007" num="0006">This is because web applications have the merit of enabling the user to use the applications only with a standard web browser without installing them, whereas traditionally the user installed applications on the user's computer and ran them.</p>
<p id="p-0008" num="0007">Recently, a thin-client system has been attracting attention because it has an advantage in information security.</p>
<p id="p-0009" num="0008">In the thin-client system, an application runs on a server and only its screen information is transferred to a client terminal. The terminal has no actual data in it. Therefore, for example, a person who takes their computer (mobile terminal) out of the company for use in a business situation has the merit of being at low risk of information leakage because there is no data in the terminal even if they should lose the terminal.</p>
<p id="p-0010" num="0009">A recent mobile information device, such as a mobile phone or a smartphone, is normally equipped with various sensors, including an orientation sensor, a Global Positioning System (GPS) sensor, and an acceleration sensor. Therefore, some of the web applications which have been designed to offer convenient services using the sensors, such as map navigation, have started to attract people's attention.</p>
<p id="p-0011" num="0010">A system which uses position information in web applications has been disclosed in, for example, International Publication No. WO 2007/070459.</p>
<p id="p-0012" num="0011">In the conventional thin-client system, a web application that uses information from a sensor cannot be used directly.</p>
<p id="p-0013" num="0012">The reason is as follows. In the thin-client system, a web browser on which a web application is running is functioning on a thin-client system server located far away from the user who has a client terminal. For example, when position information from a GPS sensor is used, even if the web application has obtained position information on the server and used it, it has no meaning to the user.</p>
<heading id="h-0003" level="1">BRIEF SUMMARY OF THE INVENTION</heading>
<p id="p-0014" num="0013">Accordingly, it is an object of the present invention to provide a technique which enables a web application or the like running on a server device in a thin-client system to use sensor information on a thin-client terminal efficiently.</p>
<p id="p-0015" num="0014">According to one aspect of the present invention, there is provided a server device for use in a thin-client system configured to execute an application program corresponding to an input event received from a client terminal and transmit screen data created based on the execution of the application program to the client terminal, the server device comprising: a determination unit configured to determine whether or not an application program executed on the server device based on an input event from the client terminal has requested sensor information in a present environment of a device; an obtaining unit configured to, when the determination unit has determined the application program has requested sensor information, obtain sensor information in a present environment of the client terminal instead of obtaining sensor information in an present environment of the server device; and a transmission unit configured to cause the application program to run based on the sensor information on the client terminal obtained at the obtaining unit and transmits screen data created by the execution to the client terminal.</p>
<p id="p-0016" num="0015">According to the present invention, it is possible to provide a server device which enables a web application or the like running on a server in a thin-client system to use sensor information on a client terminal efficiently.</p>
<p id="p-0017" num="0016">Additional objects and advantages of the invention will be set forth in the description which follows, and in part will be obvious from the description, or may be learned by practice of the invention. The objects and advantages of the invention may be realized and obtained by means of the instrumentalities and combinations particularly pointed out hereinafter.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWING</heading>
<p id="p-0018" num="0017">The accompanying drawings, which are incorporated in and constitute a part of the specification, illustrate embodiments of the invention, and together with the general description given above and the detailed description of the embodiments given below, serve to explain the principles of the invention.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 1</figref> shows an overall configuration of a thin-client system according to an embodiment of the invention;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 2</figref> shows a configuration of an operating program in a thin-client system server <b>10</b> and a client terminal <b>20</b> in the thin-client system;</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram showing a circuit configuration of the thin-client system server <b>10</b> in the thin-client system;</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram showing a circuit configuration of the client terminal <b>20</b> in the thin-client system;</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart to explain a thin-client system server process performed by a thin-client system server program <b>15</b><i>a </i>in the thin-client system server <b>10</b>;</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 6</figref> is a flowchart to explain a terminal position information obtaining process by an add-on program <b>15</b><i>b</i>&#x2032; added to a standard API of a web browser program <b>15</b><i>b </i>in the thin-client system server <b>10</b>;</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 7</figref> is a flowchart to explain a position information request process in the thin-client system server process (<figref idref="DRAWINGS">FIG. 5</figref>) performed by the thin-client system server <b>10</b>;</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 8</figref> is a flowchart to explain a position information reception process in the thin-client system server process (<figref idref="DRAWINGS">FIG. 5</figref>) performed by the thin-client system server <b>10</b>;</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 9</figref> is a flowchart to explain a client process performed by a thin-client system client program <b>23</b><i>a </i>in the client terminal <b>20</b>; and</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 10</figref> is a flowchart to explain a position information transmission process in the client process (<figref idref="DRAWINGS">FIG. 9</figref>) performed by the client terminal <b>20</b>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0029" num="0028">Hereinafter, referring to the accompanying drawings, embodiments of the invention will be explained.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 1</figref> shows an overall configuration of a thin-client system according to an embodiment of the invention.</p>
<p id="p-0031" num="0030">The thin-client system includes a thin-client system server <b>10</b> connected to a communication network N, such as the Internet, and client terminals (thin clients) <b>20</b> . . . connected to the communication network N. Various web servers <b>30</b> . . . are also connected to the communication network N.</p>
<p id="p-0032" num="0031">For example, mobile terminals are used as the client terminals <b>20</b> in the embodiment.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 2</figref> shows a configuration of an operating program in the thin-client system server <b>10</b> and a client terminal <b>20</b> in the thin-client system.</p>
<p id="p-0034" num="0033">The thin-client system server <b>10</b> includes not only a thin-client system server program <b>15</b><i>a </i>that supervises the server's basic operation but also a plurality of application programs, including a web browser program <b>15</b><i>b</i>, a mail handling program, and a text creation program. These application programs are activated and perform their processes in the operation of the thin-client system server program <b>15</b><i>a </i>according to an input event signal produced by a user operation on the thin-client terminal <b>20</b> connected to the thin-client system server <b>10</b>.</p>
<p id="p-0035" num="0034">The client terminal <b>20</b>, which includes a thin-client system client program <b>23</b><i>a</i>, operates according to an input signal corresponding to a user operation or a response signal from the thin-client system server <b>10</b>.</p>
<p id="p-0036" num="0035">In the thin-client system server <b>10</b>, screen drawing data G created on a client virtual frame buffer <b>16</b> (see <figref idref="DRAWINGS">FIG. 3</figref>) is transferred to the accessing client terminal <b>20</b> as a result of the execution of an application program according to an input event signal from the client terminal <b>20</b>.</p>
<p id="p-0037" num="0036">Then, at the client terminal <b>20</b>, the screen drawing data G transferred from the thin-client system server <b>10</b> is developed over a frame buffer <b>24</b> (see <figref idref="DRAWINGS">FIG. 4</figref>) and displayed on the display screen of a display unit <b>25</b>.</p>
<p id="p-0038" num="0037">Specifically, the client terminal (mobile terminal) <b>20</b> in the thin-client system has an input function according to a user operation on various keys or pointer buttons, an output function for an LCD display unit or the like, a wire or wireless communication function for connecting with a communication network N, such as a WAN or a LAN, as main functions. The client terminal <b>20</b> need not have at least the various application functions and data file management functions which the thin-client system server <b>10</b> has.</p>
<p id="p-0039" num="0038">Data files created by various application processes activated and performed by the thin-client system server <b>10</b> according to an input event signal from the client terminal <b>20</b> are basically stored by user account or as shared files in the thin-client system server <b>10</b> or in a file server (not shown) connected to and managed by the server <b>10</b>.</p>
<p id="p-0040" num="0039">In a general thin-client system, when the web browser program <b>15</b><i>b </i>of the thin-client system server <b>10</b> is activated by an input event from the client terminal <b>20</b> and a web content or a web application program offered by a desired web server <b>30</b> on the communication network N is used, a web application program <b>15</b><i>c </i>taken into the thin-client system server <b>10</b> runs with the web browser program <b>15</b><i>b. </i></p>
<p id="p-0041" num="0040">Then, the web browser program <b>15</b><i>b </i>accepts an input event from the client terminal <b>20</b> via the thin-client system server program <b>15</b><i>a </i>and, in response to this, sends screen data of web content taken in according to the operation of the web application program <b>15</b><i>c </i>to the client terminal <b>20</b> via the thin-client system server program <b>15</b><i>a. </i></p>
<p id="p-0042" num="0041">Here, when the web application program <b>15</b><i>c </i>has the function of running on the basis of sensor information on the user side, such as position information or temperature information, a conventional web browser program has the function of taking in sensor information from the thin-client system server <b>10</b> on which the web browser program is running and responding to the web application program <b>15</b><i>c</i>, but does not have the function of requesting sensor information from the client terminal <b>20</b> via the thin-client system server program <b>15</b><i>a </i>and taking in sensor information from the client terminal <b>20</b>.</p>
<p id="p-0043" num="0042">Therefore, as shown in <figref idref="DRAWINGS">FIG. 2</figref>, there is provided an add-on program <b>15</b><i>b</i>&#x2032; for requesting sensor information from the client terminal <b>20</b> via the thin-client system server program <b>15</b><i>a </i>upon a request of the web application program <b>15</b><i>c </i>for sensor information, taking in sensor information from the client terminal <b>20</b>, and responding to the web application program <b>15</b><i>c</i>. This add-on program <b>15</b><i>b</i>&#x2032; is added to the web browser program <b>15</b><i>b </i>which is caused to run on the thin-client system server <b>10</b> of the embodiment.</p>
<p id="p-0044" num="0043">An &#x201c;add-on&#x201d; is a mechanism for expanding a web browser with a unique function. Most standard web browsers have this add-on mechanism.</p>
<p id="p-0045" num="0044">The add-on program <b>15</b><i>b</i>&#x2032; offers a standard application program interface (API) to the web application program <b>15</b><i>c. </i></p>
<p id="p-0046" num="0045">As for standard APIs, for example, the geolocation API (http://dev.w3.org/geo/api/spec-source.html) is available. Designing a program according to the API specification provides the merit of assuring the same operation even on a different browser.</p>
<p id="p-0047" num="0046">The add-on program <b>15</b><i>b</i>&#x2032; of the embodiment overwrites the standard API with a unique function. The add-on program <b>15</b><i>b</i>&#x2032; is generally written in, for example, JavaScript (registered trademark). This is because almost all web browsers have normally been provided with a JavaScript execution environment. JavaScript enables an overwrite method to be used. This method enables the API to be overwritten easily.</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram showing a circuit configuration of the thin-client system server <b>10</b> in the thin-client system.</p>
<p id="p-0049" num="0048">The thin-client system server <b>10</b> includes a CPU <b>11</b> as a computer. Connected via a bus <b>12</b> to the CPU <b>11</b> are a storage device <b>13</b>, a RAM <b>14</b>, a program storage unit <b>15</b>, a virtual frame buffer <b>16</b>, and a network control unit <b>17</b>.</p>
<p id="p-0050" num="0049">The CPU <b>11</b> controls the operations of various parts of the circuit using the storage unit <b>13</b> and RAM <b>14</b> as a work area according to various server control programs, including the thin-client system server program <b>15</b><i>a</i>, web browser program <b>15</b><i>b </i>which has the add-on program <b>15</b><i>b</i>&#x2032; overwritten on the standard API, web application program <b>15</b><i>c</i>, and other application programs stored in the program storage unit <b>15</b> and programs externally read and stored in the storage unit <b>13</b>. Various programs are activated and executed in cooperation with one another according to an input event signal corresponding to a user operation on the client terminal <b>20</b> received via the network control unit <b>17</b>.</p>
<p id="p-0051" num="0050">In the thin-client system server <b>10</b>, various items of data created using the RAM <b>14</b> according to an application program executed in response to the input event signal from the client terminal <b>20</b> are stored in the storage unit <b>13</b> so as to correspond to, for example, the user's ID.</p>
<p id="p-0052" num="0051">In addition, client screen drawing data G is created using the virtual frame buffer <b>16</b> and is compressed. Then, the resulting data is transferred from the network control unit <b>17</b> to the client terminal <b>20</b> that has input the event. The client terminal <b>20</b> then displays the data.</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram showing a circuit configuration of the client terminal <b>20</b> in the thin-client system.</p>
<p id="p-0054" num="0053">The client terminal <b>20</b> includes a CPU <b>21</b> as a computer. A storage unit <b>23</b> and a frame buffer <b>24</b> are connected to the CPU <b>21</b> via a bus <b>22</b>. Screen drawing data G written in the frame buffer <b>24</b> is output to the display unit <b>25</b>, which displays the data.</p>
<p id="p-0055" num="0054">Further connected to the CPU <b>21</b> via the bus <b>22</b> are an input unit <b>26</b> that includes various keys and pointer buttons, a key assign information memory <b>27</b> for setting an input code corresponding to the key or pointer input on the input unit <b>26</b>, a sensor device that includes various sensors, including a GPS sensor (for detecting positions), an acceleration sensor (for counting steps), a temperature sensor, a humidity sensor, and a barometric sensor, and a network control unit <b>29</b> for communicating with an access point on the communication network N.</p>
<p id="p-0056" num="0055">The CPU <b>21</b> controls the operations of various parts of the circuit using the storage unit <b>23</b> or key assign information memory <b>27</b> as a work area according to the thin-client system client program <b>23</b><i>a </i>previously stored in the storage unit <b>23</b> or externally loaded in the storage unit <b>23</b>. The thin-client system client program <b>23</b><i>a </i>is activated and executed according to a key signal or a pointer move signal from the input unit <b>26</b>, a sensor signal from the sensor device <b>28</b>, an application response signal or screen drawing data G from the thin-client system server <b>10</b> received via the network control unit <b>29</b>.</p>
<p id="p-0057" num="0056">In the client terminal <b>20</b>, an application program in the thin-client system server <b>10</b> is run according to the input event signal from the input unit <b>26</b> to create screen drawing data G. The screen drawing data G received from the server <b>10</b> is decompressed and written to the frame buffer <b>24</b> and is displayed on the display unit <b>25</b>.</p>
<p id="p-0058" num="0057">In the thin-client system configured as described above, the CPU <b>11</b> controls the operations of various parts of the circuit according to instructions written in the server control programs (thin-client system server program <b>15</b><i>a</i>/web browser program <b>15</b><i>b</i>/add-on program <b>15</b><i>b</i>&#x2032;/web application program <b>15</b><i>c</i>) so as to cause software and hardware to operate in cooperation with each other, thereby causing the thin-client system server <b>10</b> to realize functions described below.</p>
<p id="p-0059" num="0058">In addition, the CPU <b>21</b> controls the operations of various parts of the circuit according to instructions written in the client control program (thin-client system client program <b>23</b><i>a</i>) so as to cause software and hardware to operate in cooperation with each other, thereby causing the client terminal <b>20</b> to realize functions described below.</p>
<p id="p-0060" num="0059">Next, the operation of the thin-client system with the above configuration will be explained.</p>
<p id="p-0061" num="0060">A concrete example of the operation of the embodiment will be explained below. The web browser program <b>15</b><i>b </i>of the thin-client system server <b>10</b> is activated according to a user operation on the client terminal <b>20</b>. A web application program <b>15</b><i>c </i>downloaded from a user-specified web server <b>30</b> according to the operation of the web browser program <b>15</b><i>b </i>is executed. The web application program <b>15</b><i>c</i>, which offers navigation services to the user, requires position information on the user periodically.</p>
<p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart to explain a thin-client system server process performed by the thin-client system server program <b>15</b><i>a </i>in the thin-client system server <b>10</b>.</p>
<p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. 6</figref> is a flowchart to explain a terminal position information obtaining process by the add-on program <b>15</b><i>b</i>&#x2032; added to a standard API of the web browser program <b>15</b><i>b </i>in the thin-client system server <b>10</b>.</p>
<p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. 7</figref> is a flowchart to explain a position information request process in the thin-client system server process (<figref idref="DRAWINGS">FIG. 5</figref>) performed by the thin-client system server <b>10</b>.</p>
<p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. 8</figref> is a flowchart to explain a position information reception process in the thin-client system server process (<figref idref="DRAWINGS">FIG. 5</figref>) performed by the thin-client system server <b>10</b>.</p>
<p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. 9</figref> is a flowchart to explain a client process performed by the thin-client system client program <b>23</b><i>a </i>in the client terminal <b>20</b>.</p>
<p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. 10</figref> is a flowchart to explain a position information transmission process in the client process (<figref idref="DRAWINGS">FIG. 9</figref>) performed by the client terminal <b>20</b>.</p>
<p id="p-0068" num="0067">When a server connection request including the user and terminal ID is transmitted to the thin-client system server <b>10</b> in response to a start-up operation of the client terminal <b>20</b> (step C<b>1</b>), it is determined in a server process of the thin-client system server <b>10</b> whether or not the authentication of the user and terminal ID required for connection is OK (step S<b>1</b> [Yes]&#x2192;S<b>2</b>).</p>
<p id="p-0069" num="0068">Then, when it has been determined that the authentication of the user and terminal ID is OK (Yes in step S<b>2</b>), the client terminal <b>20</b> is informed that the authentication is OK and connection between the client terminal <b>20</b> and thin-client system server <b>10</b> is established (Yes in step C<b>2</b>).</p>
<p id="p-0070" num="0069">At this time, initial display screen drawing data G is created in the virtual frame buffer <b>16</b> at the thin-client system server <b>10</b>. Then, the data G is compressed and transmitted to the client terminal <b>20</b> identified by the terminal ID (steps S<b>11</b> to S<b>13</b>).</p>
<p id="p-0071" num="0070">Then, at the client terminal <b>20</b>, the initial display screen drawing data G received from the thin-client system server <b>10</b> is decompressed and extracted on the frame buffer <b>24</b>. The resulting data is displayed on the display unit <b>25</b> (step C<b>3</b> [Yes]&#x2192;C<b>4</b> [Yes]&#x2192;C<b>5</b>).</p>
<p id="p-0072" num="0071">When a web browser start-up request is transmitted as an input event to the thin-client system server <b>10</b> according to a user operation on the client terminal <b>20</b> (step C<b>6</b> [Yes] thin-C<b>7</b>, C<b>8</b>), the web browser program <b>15</b><i>b </i>is activated according to the received input event at the thin-client system server <b>10</b> (step S<b>3</b> [Yes]&#x2192;S<b>4</b> [Yes]&#x2192;S<b>5</b>, S<b>6</b> [Yes]&#x2192;S<b>7</b>).</p>
<p id="p-0073" num="0072">Then, the web application program <b>15</b><i>c </i>is downloaded from the web server <b>30</b> that offers the user-specified navigation service according to the operation of the activated web browser program <b>15</b><i>b</i>. Then, when the web application program <b>15</b><i>c </i>is activated, the standard API on the web browser (<b>15</b><i>b</i>) is called to obtain position information according to the operation of the web application program <b>15</b><i>c. </i></p>
<p id="p-0074" num="0073">When the API has been called according to the operation of the web application program <b>15</b><i>c </i>in a terminal position information obtaining process (see <figref idref="DRAWINGS">FIG. 6</figref>) performed by the add-on program <b>15</b><i>b</i>&#x2032; added to the standard API on the web browser (<b>15</b><i>b</i>) (step A<b>1</b>), an API call repetition determination process is performed (step A<b>2</b>).</p>
<p id="p-0075" num="0074">The API call repetition determination process is such that, for example, the average and variance of time intervals between an n number of calls most recently made in the API call are determined and, if a variation in the time interval is within a specific value, it is determined that the call has been repeated (step A<b>2</b>), and if it is determined that the call has not been repeated (No in step A<b>3</b>), a position information request is transmitted to the thin-client system server program <b>15</b><i>a </i>(step A<b>4</b>).</p>
<p id="p-0076" num="0075">Then, a determination of whether or not the reception of position information has been notified according to a thin-client system server process (see <figref idref="DRAWINGS">FIG. 5</figref>) is waited for (step A<b>7</b>).</p>
<p id="p-0077" num="0076">When it is determined in the thin-client system server process (see <figref idref="DRAWINGS">FIG. 5</figref>) that a position information request transmitted according to a terminal position information obtaining process (see <figref idref="DRAWINGS">FIG. 6</figref>) by the add-on program <b>15</b>&#x2032; has been received (Yes in step S<b>10</b>), control is passed to a position information request process in <figref idref="DRAWINGS">FIG. 7</figref> (step SR) and a position information request command is transmitted to the client terminal <b>20</b> identified by the terminal ID (step R<b>2</b> [Yes]&#x2192;R<b>3</b>).</p>
<p id="p-0078" num="0077">When the client terminal <b>20</b> has received the position information request command transmitted from the thin-client system server <b>10</b> (Yes in step C<b>3</b>), control is passed to a position information transmission process in <figref idref="DRAWINGS">FIG. 10</figref> (step CQ) and position information is obtained by an operation based on sensor data from a GPS sensor provided on the sensor device <b>28</b> (step Q<b>2</b> [Yes]&#x2192;Q<b>3</b>). Then, the obtained position information is transmitted to the thin-client system server <b>10</b> (step Q<b>4</b>).</p>
<p id="p-0079" num="0078">When the thin-client system server <b>10</b> has received the position information transmitted from the client terminal <b>20</b> (Yes in step S<b>3</b>), control is passed to a position information reception process in <figref idref="DRAWINGS">FIG. 8</figref> (step SP) and the received position information is written in the storage unit <b>13</b> (step P<b>1</b> [Yes]&#x2192;P<b>2</b>). Then, the add-on program <b>15</b><i>b</i>&#x2032; (see <figref idref="DRAWINGS">FIG. 6</figref>) on the web browser (<b>15</b><i>b</i>) is informed of the reception of the position information (step P<b>3</b>).</p>
<p id="p-0080" num="0079">Then, in a terminal position information obtaining process (see <figref idref="DRAWINGS">FIG. 6</figref>) by the add-on program <b>15</b><i>b</i>&#x2032;, it is determined that the reception of position information has been notified according to the thin-client system server process (Yes in step A<b>7</b>) and position information on the client terminal <b>20</b> stored in the storage unit <b>13</b> is read (step A<b>8</b>). Then, the position information on the client terminal <b>20</b> identified by the terminal ID read from the storage unit <b>13</b> is given to the web application program <b>15</b><i>c </i>which has called the API (step A<b>9</b>).</p>
<p id="p-0081" num="0080">Then, according to the operation of the web application program <b>15</b><i>c</i>, navigation data corresponding to the position information on the client terminal <b>20</b> is downloaded from the web server <b>30</b> and screen drawing data G corresponding to the navigation data is created on the virtual frame buffer <b>16</b> (step S<b>21</b> [Yes]&#x2192;S<b>12</b>). Then, the navigation screen drawing data created on the virtual frame buffer <b>16</b> is transmitted to the client terminal <b>20</b> identified by the terminal ID (step S<b>13</b>).</p>
<p id="p-0082" num="0081">Then, the client terminal <b>20</b> receives the navigation screen drawing data G corresponding to the position information on the client terminal <b>20</b> itself transmitted from the thin-client system server <b>10</b> (step C<b>3</b> [Yes]&#x2192;C<b>4</b> [Yes]) and the data is written in the frame buffer <b>24</b> and displayed on the display unit <b>15</b> (step C<b>5</b>).</p>
<p id="p-0083" num="0082">Therefore, even with the thin-client system, position information requested by the API of the web browser (<b>15</b><i>b</i>) according to the web application program <b>15</b><i>c </i>in the navigation service downloaded to the thin-client system server <b>10</b> can be returned as position information measured with the GPS sensor, the sensor device <b>28</b> of the client terminal <b>20</b>, which enables a navigation service according to the position of the user of the client terminal <b>20</b> to be offered.</p>
<p id="p-0084" num="0083">That is, even with the thin-client system, a web application service corresponding to sensor information on the client terminal <b>20</b> itself can be used.</p>
<p id="p-0085" num="0084">Thereafter, when the API has been called again according to the operation of the web application program <b>15</b><i>c </i>(step A<b>1</b>) in the terminal position information obtaining process (seen <figref idref="DRAWINGS">FIG. 6</figref>) by the add-on program <b>15</b><i>b</i>&#x2032; on the web browser (<b>15</b><i>b</i>), if the API call repetition determination process has determined that the call has been repeated (steps A<b>2</b>, A<b>3</b> [Yes]), it is determined according to the preceding repetition determination process whether or not a repetition request has been made (step A<b>5</b>).</p>
<p id="p-0086" num="0085">If it has been determined that a repetition request has not been made (No in step A<b>5</b>), a repetition request is transmitted to the thin-client system server program <b>15</b><i>a </i>(step A<b>6</b>).</p>
<p id="p-0087" num="0086">Then, a determination of whether or not the reception of position information has been notified according to the thin-client system server process (see <figref idref="DRAWINGS">FIG. 5</figref>) is waited for (step A<b>7</b>).</p>
<p id="p-0088" num="0087">If in the thin-client system server process (see <figref idref="DRAWINGS">FIG. 5</figref>), it has been determined that a repetition request has been received according to the terminal position information obtaining process (see <figref idref="DRAWINGS">FIG. 6</figref>) by the add-on program <b>15</b><i>b</i>&#x2032; (Yes in step S<b>10</b>), control is passed to a position information request process in <figref idref="DRAWINGS">FIG. 7</figref> (step SR) and a repetition period T is transmitted to the client terminal <b>20</b> identified by the terminal ID (step R<b>1</b> [Yes]&#x2192;R<b>4</b>).</p>
<p id="p-0089" num="0088">When the client terminal <b>20</b> has received the repetition period T transmitted from the thin-client system server <b>10</b> (Yes in step C<b>3</b>), control is passed to a position information transmission process in <figref idref="DRAWINGS">FIG. 10</figref> (step CQ) and the repetition period T is set as timeout period T of a timer (step Q<b>1</b> [Yes]&#x2192;Q<b>5</b>).</p>
<p id="p-0090" num="0089">Then, pedometer data calculated on the basis of sensor data of the acceleration sensor provided on the sensor device <b>28</b> is obtained (step Q<b>6</b>) and is compared with, for example, the preceding obtained value, thereby determining whether or not the client terminal <b>20</b> itself has moved (step Q<b>7</b>).</p>
<p id="p-0091" num="0090">If it has been determined that the client terminal <b>20</b> itself has moved (Yes in step Q<b>7</b>), new position information is obtained by calculations based on sensor data from the GPS sensor provided on the sensor device <b>28</b> (step Q<b>3</b>) and is transmitted to the thin-client system server <b>10</b> (step Q<b>4</b>).</p>
<p id="p-0092" num="0091">When the thin-client system server <b>10</b> has received the new position information transmitted from the client terminal <b>20</b> (Yes in step S<b>3</b>), control is passed to the position information reception process in <figref idref="DRAWINGS">FIG. 8</figref> (step SP) and the received position information is overwritten in the storage unit <b>13</b> (step <b>21</b> [Yes]&#x2192;P<b>2</b>). Then, the add-on program <b>15</b><i>b</i>&#x2032; (see <figref idref="DRAWINGS">FIG. 6</figref>) on the web browser (<b>15</b><i>b</i>) is informed of the reception of the position information (step P<b>3</b>).</p>
<p id="p-0093" num="0092">On the other hand, if in the position information transmission process (see <figref idref="DRAWINGS">FIG. 10</figref>) at the client terminal <b>20</b>, it has been determined that the client terminal <b>20</b> itself has not moved (No in step Q<b>7</b>), neither the position information obtaining process from the GPS sensor in step Q<b>3</b> nor the position information transmission process to the thin-client system server <b>10</b> in step Q<b>4</b> is performed.</p>
<p id="p-0094" num="0093">After this, in the position information transmission process at the client terminal <b>20</b>, it is determined whether or not the client terminal has moved in accordance with the pedometer data (steps Q<b>5</b> to Q<b>7</b>) each time the passage of timeout period T set in the timer is determined (Yes in step Q<b>8</b>) until a position information request command according to the position information request process (see <figref idref="DRAWINGS">FIG. 7</figref>) at the thin-client system server <b>10</b> has been newly received. Then, only when it has been determined that the client terminal <b>20</b> itself has moved (Yes in step Q<b>7</b>), new position information obtained on the basis of the GPS sensor is transmitted to the thin-client system server <b>10</b> (steps Q<b>3</b>, Q<b>4</b>).</p>
<p id="p-0095" num="0094">Accordingly, during the operation of the timer at the client terminal <b>20</b>, only when the client terminal <b>20</b> has moved, the process of obtaining position information from the GPS sensor and the process of transmitting the position information are performed. Therefore, the power consumption can be reduced by removing unnecessary processes at the client terminal <b>20</b>.</p>
<p id="p-0096" num="0095">Then, position information on the client terminal <b>20</b> stored in the storage unit <b>13</b> according to the position information reception process (see <figref idref="DRAWINGS">FIG. 8</figref>) at the thin-client system server <b>10</b> is overwritten with new position information during the operation of the timer at the client terminal <b>20</b> only when the client terminal <b>20</b> has moved.</p>
<p id="p-0097" num="0096">In the terminal position information obtaining process (see <figref idref="DRAWINGS">FIG. 6</figref>) by the add-on program <b>15</b><i>b</i>&#x2032; on the web browser (<b>15</b><i>b</i>), if it has been determined that the reception of position information has been notified according to the position information reception process (see <figref idref="DRAWINGS">FIG. 8</figref>) in the thin-client system server process (Yes in step A<b>7</b>) after a repetition request has been transmitted to the thin-client system server program <b>15</b><i>a </i>(step A<b>6</b>), position information on the client terminal <b>20</b> stored in the storage unit <b>13</b> is read (step A<b>8</b>). Then, the position information on the client terminal <b>20</b> identified by the terminal ID read from the storage unit <b>13</b> is given to the web application program <b>15</b><i>c </i>that has called the API (step A<b>9</b>).</p>
<p id="p-0098" num="0097">In addition, when the API has been called according to the operation of the web application program <b>15</b><i>c </i>(step A<b>1</b>), if it has been determined that the API call repetition determination process has determined that the call has been repeated (steps A<b>2</b>, A<b>3</b> [Yes]) and that a repetition request has been made (Yes in step A<b>5</b>), position information on the client terminal <b>20</b> stored in the storage unit <b>13</b> is directly read (step A<b>8</b>) without making a request to the thin-client system server program <b>15</b><i>a </i>and the position information is given to the web application program <b>15</b><i>c </i>that has called the API (step A<b>9</b>).</p>
<p id="p-0099" num="0098">Then, according to the operation of the web application program <b>15</b><i>c</i>, navigation data corresponding to new position information resulting from the movement of the client terminal <b>20</b> is downloaded from the web server <b>30</b> and screen drawing data G corresponding to the navigation data is created on the virtual frame buffer <b>16</b> (step S<b>21</b> [Yes]&#x2192;S<b>12</b>). Then, the navigation screen drawing data G created on the virtual frame buffer <b>16</b> is transmitted to the client terminal <b>20</b> identified by the terminal ID (step S<b>13</b>).</p>
<p id="p-0100" num="0099">Then, the client terminal <b>20</b> receives the navigation screen drawing data G corresponding to position information resulting from the movement of the client terminal <b>20</b> itself transmitted from the thin-client system server <b>10</b> (step C<b>3</b> [Yes]&#x2192;C<b>4</b> [Yes]). Then, the data G is written in the frame buffer <b>24</b> and displayed on the display unit <b>15</b> (step C<b>5</b>).</p>
<p id="p-0101" num="0100">Accordingly, position information requested repeatedly by the API of the web browser (<b>15</b><i>b</i>) according to the web application program <b>15</b><i>c </i>in a navigation service downloaded into the thin-client system server <b>10</b> can be returned efficiently as position information measured by the GPS sensor, the sensor device <b>28</b> of the client terminal <b>20</b>, each time position information is requested, without making a request to the client terminal <b>20</b> via the position information request process in the thin-client system server process. Therefore, navigation services corresponding to the moving position of the user of the client terminal <b>20</b> can be received.</p>
<p id="p-0102" num="0101">That is, even with the thin-client system, web application services corresponding to sensor information on the client terminal <b>20</b> itself can be received efficiently.</p>
<p id="p-0103" num="0102">In other words, even in a screen transfer thin-client system where a computer (thin-client system server <b>10</b>) on which a web application runs differs physically from a computer (client terminal <b>20</b>) the user has at hand, the web application can use sensor information on the client terminal <b>20</b>.</p>
<p id="p-0104" num="0103">Thereafter, if the thin-client system server <b>10</b> has received an input event that specifies the end of the web browser according to a user operation on the client terminal <b>20</b> (step S<b>3</b> [Yes]&#x2192;S<b>4</b> [Yes]&#x2192;S<b>5</b>, S<b>8</b> [Yes]), the operation based on the web browser program <b>15</b><i>b </i>is terminated and access to web server <b>30</b> that offers the navigation services is prevented (step S<b>9</b>).</p>
<p id="p-0105" num="0104">Then, in the client terminal <b>20</b>, if it has determined that a disconnection instruction has been input (Yes in step C<b>9</b>), the process of making a disconnection from the thin-client system server <b>10</b> is performed (step C<b>10</b>). In addition, if it has been determined that an end instruction has been input (Yes in step C<b>11</b>), the series of thin-client processes is terminated (step C<b>12</b>).</p>
<p id="p-0106" num="0105">Furthermore, in the thin-client system server <b>10</b>, if it has been determined that a disconnection request has been received from the client terminal <b>20</b> (Yes in step S<b>14</b>), the process of making a disconnection from the client terminal <b>20</b> is performed (step S<b>15</b>).</p>
<p id="p-0107" num="0106">Then, if it has been determined that an end instruction has been input according to a user operation on the thin-client system server <b>10</b> itself (Yes in step S<b>16</b>), the series of thin-client system server processes is terminated (step C<b>17</b>).</p>
<p id="p-0108" num="0107">Accordingly, with the thin-client system configured as described above, the sensor information obtaining API on the web browser program <b>15</b><i>b </i>in the thin-client system server <b>10</b> is overwritten with the add-on program <b>15</b><i>b</i>&#x2032; which is caused to have the function of making a request to the client terminal <b>20</b> for sensor information via the operation of the thin-client system server program <b>15</b><i>a </i>when the API is called according to the operation of the web application program <b>15</b><i>c</i>, taking in sensor information transmitted from the client terminal <b>20</b> in response to the request, and returning the sensor information to the web application program <b>15</b><i>c. </i></p>
<p id="p-0109" num="0108">Therefore, while a general web application program <b>15</b><i>c </i>running on the thin-client system server <b>10</b> is caused to remain unchanged, the web application (<b>15</b><i>c</i>) can obtain sensor information corresponding to the request from the client terminal <b>20</b>. Accordingly, even a terminal user of the thin-client system can obtain a navigation screen according to the terminal position by using directly, for example, a web application (<b>15</b><i>c</i>) that offers navigation services.</p>
<p id="p-0110" num="0109">Furthermore, in the thin-client system with the above configuration, sensor information received from the client terminal <b>20</b> according to the operation of the thin-client system server program <b>15</b><i>a </i>is stored in the storage unit <b>13</b> and taken in according to the add-on program <b>15</b><i>b</i>&#x2032;. The add-on program <b>15</b><i>b</i>&#x2032; is caused to further have the function of, when it has been determined that a call for the sensor information obtaining API made by the web application program <b>15</b><i>c </i>has been repeated, requesting the client terminal <b>20</b> to obtain sensor information repeatedly via the operation of the thin-client system server program <b>15</b><i>a</i>, then taking in directly sensor information on the client terminal <b>20</b> stored in the storage unit <b>13</b>, and returning the sensor information to the web application program <b>15</b><i>c. </i></p>
<p id="p-0111" num="0110">Therefore, when the sensor information obtaining API on the web browser program <b>15</b><i>b </i>is called repeatedly by the web application program <b>15</b><i>c</i>, the web application (<b>15</b><i>c</i>) can obtain sensor information on the client terminal <b>20</b> in response to the request without requesting sensor information from the client terminal <b>20</b> via the operation of the thin-client system server program <b>15</b><i>a </i>each time the API is called.</p>
<p id="p-0112" num="0111">The methods of the individual processes performed by the thin-client system described in the embodiments, that is, the individual methods, including the server process by the thin-client system server <b>10</b> shown in the flowchart of <figref idref="DRAWINGS">FIG. 5</figref>, the terminal position information obtaining process by the add-on program <b>15</b><i>b</i>&#x2032; added to the web browser program <b>15</b><i>b </i>of the thin-client system server <b>10</b> shown in the flowchart of <figref idref="DRAWINGS">FIG. 6</figref>, the position information request process in the thin-client system server process (see <figref idref="DRAWINGS">FIG. 5</figref>) shown in the flowchart of <figref idref="DRAWINGS">FIG. 7</figref>, the position information reception process in the thin-client system server process (see <figref idref="DRAWINGS">FIG. 5</figref>) shown in the flowchart of <figref idref="DRAWINGS">FIG. 8</figref>, the client process by the client terminal <b>20</b> shown in the flowchart of <figref idref="DRAWINGS">FIG. 9</figref>, and the position information transmission process in the client process (see <figref idref="DRAWINGS">FIG. 9</figref>) shown in the flowchart of <figref idref="DRAWINGS">FIG. 10</figref>, can be stored in an external recording medium, such as a memory card (e.g., a ROM card or a RAM card), a magnetic disk (e.g., a floppy disk or a hard disk), an optical disk (e.g., a CD-ROM or a DVD), or a semiconductor memory, in the form of programs the computer can execute. Then, the mediums can be delivered. The computers (CPU <b>11</b>, <b>21</b>) of the thin-client system server <b>10</b> and client terminal <b>20</b> load the programs stored in the external recording media into the storage units (<b>13</b>, <b>33</b>). The computers are controlled by the read programs, thereby realizing the function of taking in sensor information from the thin-client terminal <b>20</b> that uses directly the existing web application program <b>15</b><i>c </i>explained in the embodiment, which enables the same processes in the aforementioned methods to be carried out.</p>
<p id="p-0113" num="0112">Furthermore, the programs which realize the above methods can be transferred in the form of program code through a communication network (N). The program data can be loaded from a computer device (program server) connected to the communication network (N) into the storage units (<b>13</b>, <b>23</b>), thereby realizing the function of taking in sensor information from the thin-client terminal <b>20</b> that uses directly the existing web application program <b>15</b><i>c </i>explained above.</p>
<p id="p-0114" num="0113">The present invention is not limited to the above embodiments and, on the basis of available skills in the present or future implementation phase, may be practiced or embodied in still other ways without departing from the spirit or character thereof. The embodiments include inventions of different stages and therefore various inventions can be extracted by combining suitably a plurality of structural requirements disclosed in the embodiments. For example, even if some are removed from all of the structural requirements shown in the embodiments or some structural requirements are combined in a different mode, the resulting configuration can be extracted as an invention, provided that the subject to be achieved by the invention is accomplished and the effect of the invention is obtained.</p>
<p id="p-0115" num="0114">Additional advantages and modifications will readily occur to those skilled in the art. Therefore, the invention in its broader aspects is not limited to the specific details and representative embodiments shown and described herein. Accordingly, various modifications may be made without departing from the spirit or scope of the general inventive concept as defined by the appended claims and their equivalents.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A server device for use in a thin-client system configured to execute an application program corresponding to an input event received from a client terminal and transmit screen data created based on the execution of the application program to the client terminal, the server device comprising:
<claim-text>a determination unit configured to, when an application program executed on the server device based on an input event from the client terminal has requested sensor information in a present environment of the client terminal, determine whether or not the request is a repetition request that requires the sensor information repeatedly;</claim-text>
<claim-text>an obtaining unit configured to, when the determination unit has determined that the request is the repetition request, obtain sensor information in a present environment of the client terminal repeatedly, by transmitting a repetition request that requires the client terminal to transmit the sensor information repeatedly in predetermined intervals of time and sequentially receiving the sensor information transmitted from the client terminal repeatedly; and</claim-text>
<claim-text>a transmission unit configured to, every time the sensor information is obtained repeatedly by the obtaining unit, cause the application program to run based on the sensor information and transmit screen data created by the execution to the client terminal.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The server device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the determination unit is configured to determine whether or not the request is the repetition request based on whether or not a request calling for sensor information from the application program has been repeated within a predetermined period of time.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The server device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the application program includes an add-on program, and</claim-text>
<claim-text>the determination unit determines whether or not the add-on program has requested sensor information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The server device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the request for sensor information in the present environment is a request for sensor information that indicates the position where the device is at present.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. A thin-client system comprising:
<claim-text>a server device configured to execute an application program corresponding to an input event received from a thin-client terminal device and transmit screen data created according to the application program to the thin-client terminal device and;</claim-text>
<claim-text>a thin-client terminal device configured to transmit an input event corresponding to a user operation to the server device and display screen data received from the server device in response to the input event,</claim-text>
<claim-text>the server device comprising
<claim-text>a sensor information request unit configured to transmit a request for sensor information to the thin-client terminal device in response to a call from an application program executed according to an input event from the thin-client terminal device, and</claim-text>
<claim-text>a sensor information obtaining unit configured to receive sensor information from the thin-client terminal device and return the sensor information as sensor information on the thin-client terminal device to the calling application program, and</claim-text>
</claim-text>
<claim-text>the thin-client terminal device comprising
<claim-text>a request reception unit configured to receive a request for sensor information transmitted from the server device,</claim-text>
<claim-text>a sensor information detection unit configured to detect sensor information held by the thin-client terminal device in response to the request for sensor information received by the request reception unit, and</claim-text>
<claim-text>a sensor information transmission unit configured to transmit sensor information detected by the sensor information detection unit to the server device, wherein,</claim-text>
<claim-text>in the server device,</claim-text>
<claim-text>the sensor information request unit comprises</claim-text>
<claim-text>a repetition determination unit configured to determine whether or not a call from the application program executed according to an input event from the thin-client terminal device has been repeated within a predetermined period of time, and</claim-text>
<claim-text>a repetition determination coping unit configured to, when the repetition determination unit has determined that a call from the application program has been repeated, transmit a repetition request for sensor information to the thin-client terminal device only when it has been determined for the first time that a call has been repeated, without transmitting a request for the second and later times, and</claim-text>
</claim-text>
<claim-text>the sensor information obtaining unit receives and stores sensor information transmitted from the thin-client terminal device and returns the stored sensor information as sensor information on the thin-client terminal device to the calling application program and</claim-text>
<claim-text>in the thin-client terminal device,</claim-text>
<claim-text>the sensor information detection unit comprises
<claim-text>a repetition request determination configured to determine whether or</claim-text>
<claim-text>not a request for sensor information received by the request reception unit has been repeated, and</claim-text>
<claim-text>a repetition detection unit configured to, when the repetition request determination unit has determined that the request for sensor information has been repeated, detect sensor information held by the thin-client terminal device at predetermined intervals of time.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The thin-client system according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein:
<claim-text>the application program executed on the server device includes an add-on program, and</claim-text>
<claim-text>the sensor information request unit and the sensor information obtaining unit function according to a process based on the add-on program.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The thin-client system according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein:
<claim-text>the thin-client terminal device comprises a move determination unit configured to determine whether or not the thin-client terminal device itself has moved, and</claim-text>
<claim-text>the repetition detection unit, when the repetition request determination unit has determined that the request for sensor information has been repeated, causes the move determination unit to determine at predetermined intervals of time whether or not the terminal device itself has moved and, only when the move determination unit has determined that the terminal device has moved, detects sensor information held by the terminal device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A non-transitory computer-readable storage medium having program code stored thereon for controlling a computer of a server device for use in a thin-client system which executes an application program corresponding to an input event received from a client terminal and transmits screen data created based on the execution of the application program to the client terminal, the program code comprising:
<claim-text>determining, when an application program executed on the server device based on an input event from the client terminal has requested sensor information in a present environment of the client terminal, whether or not the request is a repetition request that requires the sensor information repeatedly;</claim-text>
<claim-text>obtaining, when it is determined that the request is the repetition request, sensor information in a present environment of the client terminal repeatedly, by transmitting a repetition request that requires the client terminal to transmit the sensor information repeatedly in predetermined intervals of time and sequentially receiving the sensor information transmitted from the client terminal repeatedly; and</claim-text>
<claim-text>causing, every time the sensor information is obtained repeatedly, the application program to run based on the sensor information and transmit screen data created by the execution to the client terminal.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The server device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the obtaining unit is configured to, when the determination unit has determined that the request is the repetition request, transmit the repetition request to the client terminal when the determination is made for the first time, without transmitting a request for the second and later times, and repeatedly obtain the sensor information which is repeatedly detected by the client terminal has received the repetition request. </claim-text>
</claim>
</claims>
</us-patent-grant>
