<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625128-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625128</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12432049</doc-number>
<date>20090429</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2008-244709</doc-number>
<date>20080924</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>549</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>358  115</main-classification>
<further-classification>709219</further-classification>
</classification-national>
<invention-title id="d2e71">Information-processing device, an information-processing system, and a storing medium</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>2004/0205376</doc-number>
<kind>A1</kind>
<name>Iida</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2005/0027825</doc-number>
<kind>A1</kind>
<name>Hikawa et al.</name>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709219</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2005/0206913</doc-number>
<kind>A1</kind>
<name>Matsuda et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2007/0154076</doc-number>
<kind>A1</kind>
<name>Numata et al.</name>
<date>20070700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382128</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2007/0226261</doc-number>
<kind>A1</kind>
<name>Urita</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>7071041</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2008/0002220</doc-number>
<kind>A1</kind>
<name>Song</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  115</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2008/0147773</doc-number>
<kind>A1</kind>
<name>Aaron</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709201</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2009/0091783</doc-number>
<kind>A1</kind>
<name>Kazume et al.</name>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  115</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2009/0207460</doc-number>
<kind>A1</kind>
<name>Hikawa et al.</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358448</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2009/0257090</doc-number>
<kind>A1</kind>
<name>Ozawa et al.</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  115</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>JP</country>
<doc-number>2004-157676</doc-number>
<kind>A</kind>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>JP</country>
<doc-number>2004-288026</doc-number>
<kind>A</kind>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>JP</country>
<doc-number>2005-295515</doc-number>
<kind>A</kind>
<date>20051000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>JP</country>
<doc-number>2006-277696</doc-number>
<kind>A</kind>
<date>20061000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>JP</country>
<doc-number>2006-302038</doc-number>
<kind>A</kind>
<date>20061100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00016">
<othercit>Office Action issued in Japanese Patent Application No. 2008-244709 dated Jan. 22, 2013.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00017">
<othercit>Office Action issued in the Japanese Patent Application No. 2008-244609 on Apr. 2, 2013.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>8</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>8</number-of-drawing-sheets>
<number-of-figures>26</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20100073710</doc-number>
<kind>A1</kind>
<date>20100325</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Tajima</last-name>
<first-name>Yukio</first-name>
<address>
<city>Ebina</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Tajima</last-name>
<first-name>Yukio</first-name>
<address>
<city>Ebina</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Sughrue Mion, PLLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Fuji Xerox Co., Ltd.</orgname>
<role>03</role>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Haskins</last-name>
<first-name>Twyler</first-name>
<department>2672</department>
</primary-examiner>
<assistant-examiner>
<last-name>Zong</last-name>
<first-name>Helen Q</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">An information-processing device includes: an execution unit that executes a first part of a process, based on process instruction data representing a process including a first part and a second part of the process, the first part and the second part of the process performed by the information-processing device and an external device, respectively; an instruction unit that instructs the external device to execute the second part of the process; a receiving unit that receives data from the external device regarding the history of the second part of the process; and a memory that stores data regarding the history of the first part of the process and data received by the receiving unit.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="76.37mm" wi="170.26mm" file="US08625128-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="256.71mm" wi="169.67mm" file="US08625128-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="250.02mm" wi="169.67mm" file="US08625128-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="250.36mm" wi="168.99mm" file="US08625128-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="235.54mm" wi="167.30mm" file="US08625128-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="256.29mm" wi="165.95mm" orientation="landscape" file="US08625128-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="245.96mm" wi="128.02mm" orientation="landscape" file="US08625128-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="244.60mm" wi="163.58mm" file="US08625128-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="243.25mm" wi="176.02mm" file="US08625128-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is based on and claims priority under 35 U.S.C. 119 from Japanese Patent Application No. 2008-244709, which was filed on Sep. 24, 2008.</p>
<heading id="h-0002" level="1">TECHNICAL FIELD</heading>
<p id="p-0003" num="0002">The present invention relates to an information-processing device, an information-processing system, and a storing medium storing a computer program.</p>
<heading id="h-0003" level="1">BACKGROUND</heading>
<p id="p-0004" num="0003">A portal server device that manages a history of collaboration between multiple applications executed by a computer device has been developed.</p>
<heading id="h-0004" level="1">SUMMARY</heading>
<p id="p-0005" num="0004">According to an aspect of the present invention, there is provided an information-processing device including: an execution unit that executes a first part of a process, based on process instruction data representing a process including a first part and a second part of the process, the first part and the second part of the process performed by the information-processing device and an external device, respectively; an instruction unit that instructs the external device to execute the second part of the process; a receiving unit that receives data from the external device regarding the history of the second part of the process; and a memory that stores data regarding the history of the first part of the process and data received by the receiving unit.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0006" num="0005">Exemplary embodiments of the present invention are described in detail based on the following figures, wherein:</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 1</figref> is an outline diagram of the overall configuration of one exemplary embodiment of the present invention;</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram of the hardware configuration of the image-forming device <b>10</b>;</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram of functions implemented in the image-forming device;</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram of the hardware configuration of the server device <b>20</b>A;</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 5</figref> is a functional block diagram of functions implemented on the server device <b>20</b>A;</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 6</figref> is a functional block diagram of functions implemented on the server device <b>20</b>B;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 7</figref> is a block diagram of the hardware configuration of the computer device <b>30</b>;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 8</figref> is a diagram showing the contents of the process instruction data D;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 9</figref> is a diagram for explaining the action of the exemplary embodiment;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 10</figref> is a diagram showing data stored in the image-forming device <b>10</b>;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 11</figref> is a diagram showing data stored in the image-forming device <b>10</b>;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 12</figref> is a diagram showing data stored on the server device <b>20</b>A;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 13</figref> is a diagram showing the contents of the process instruction data DA;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 14</figref> is a diagram showing the contents of the process instruction data DB;</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 15</figref> is a diagram illustrating a screen displayed on the display <b>107</b>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION</heading>
<p id="h-0007" num="0000">Overall Configuration</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram illustrating the overall configuration of one exemplary embodiment of the present invention. The image-forming device <b>10</b> is a device equipped with a function for reproducing documents, a function for reading a document and generating image data of the read document, and a function for forming an image, shown by the image data, on paper, etc. Furthermore, the server devices <b>20</b>A and <b>20</b>B are devices that provide service upon a request from a device that is a client. Moreover, the computer device <b>30</b> is a device that executes stored programs, thereby implementing a variety of functions. The respective devices are connected to a communication line <b>40</b> that connects the devices to enable communication, allowing communication among each other via the communication line <b>40</b>. Note that one image-forming device, one computer device, and two server devices are illustrated in <figref idref="DRAWINGS">FIG. 1</figref>, but the communication line <b>40</b> may be connected to two or more image-forming devices or computer devices, and may be connected to three or more server devices.</p>
<p id="h-0008" num="0000">Configuration of the Image-Forming Device <b>10</b></p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram illustrating the hardware configuration of the image-forming device <b>10</b> according to the present exemplary embodiment. As shown in the same figure, the respective portions of the image-forming device <b>10</b> are connected to a bus <b>101</b> and various types of data are transferred via this bus <b>101</b>.</p>
<p id="p-0024" num="0023">The operating portion <b>106</b> includes multiple operators for operating the image-forming device <b>10</b>. When a user of the image-forming device <b>10</b> operates an operator, the operator that has been operated is detected by a CPU (Central Processing Unit) <b>102</b>, and the CPU <b>102</b> controls the respective portions, depending on the operated operator. The display <b>107</b> has a liquid crystal display, for example, as a display device, and displays a menu screen for operating the image-forming device <b>10</b>, data regarding the image-forming device <b>10</b>, etc., under the control of the CPU <b>102</b>. A communication portion <b>110</b> is connected to the communication line <b>40</b> and functions as a communication interface that communicates with other devices connected to the communication line <b>40</b>.</p>
<p id="p-0025" num="0024">The image-reading portion <b>108</b> includes an image reader (omitted from the figure) that reads a document, generates image data representing an image of the read document, and outputs the generated image data to the image-processing portion <b>111</b>. The image-processing portion <b>111</b> is for treating an image, represented by image data that is input, with image processing such as color correction and tone correction, generating image data of an image for each color&#x2014;yellow (Y), magenta (M), cyan (C), and black (K)&#x2014;from the image treated with image processing, in order to output it to the image-forming portion <b>109</b>.</p>
<p id="p-0026" num="0025">The image-forming portion <b>109</b> is equipped with image-forming mechanisms (omitted from the figure) to form a toner image on a memory medium such as paper via the electrographic method. Specifically, these image-forming mechanisms include an image-forming mechanism to form a toner image that is yellow (Y) in color, an image-forming mechanism to form a toner image that is magenta (M) in color, an image-forming mechanism to form a toner image that is cyan (C) in color, and an image-forming mechanism to form a toner image that is black (K) in color. After forming an electrostatic latent image on a photoreceptor according to the image data output from the image-processing portion <b>111</b>, each image-forming mechanism attaches toner to the surface of the photoreceptor to form a toner image of each color of Y, M, C, and K, and transfers this toner image to the memory medium. Then, after applying heat and pressure to the toner image transferred to the memory medium to set it in place, the memory medium on which the toner image has been formed is moved out of the image-forming device <b>10</b>.</p>
<p id="p-0027" num="0026">The memory <b>105</b> is equipped with a memory device and stores data received by the communication portion <b>110</b>, data generated by the image-forming device <b>10</b>, etc. The ROM (Read Only Memory) <b>103</b> has stored control programs to be executed by the CPU <b>102</b>. The CPU <b>102</b> reads out a control program stored in the ROM <b>103</b> and executes the control program, with the RAM (Random Access Memory) <b>104</b> as a working area. When the control program is executed by the CPU <b>102</b>, the respective portions of the image-forming device <b>10</b> are controlled by the CPU <b>102</b>, allowing the image-forming device <b>10</b> to form an image on paper and output it, to read a document and generate image data of the document, to communicate with other devices via the communication line, etc.</p>
<p id="p-0028" num="0027">Furthermore, when the control program is executed by the CPU <b>102</b>, the functions illustrated in the functional block diagram in <figref idref="DRAWINGS">FIG. 3</figref> are implemented, thereby implementing an execution function <b>150</b> for performing a process based on data that is input, an instruction function <b>151</b> for instructing other devices to process data based on data that is input, a data-receiving function <b>152</b> for acquiring data regarding processes instructed to other devices, a memory function <b>153</b> for storing data acquired from other devices, etc. In this way, because the image-forming device <b>10</b> has functions for processing data, it can be the one that it has the functions of an information-processing device.</p>
<p id="h-0009" num="0000">Configuration of the Server Devices <b>20</b>A and <b>20</b>B</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram illustrating the hardware configuration of the server device <b>20</b>A. As shown in the same figure, the respective portions of the server device <b>20</b>A are connected to a bus <b>201</b>, and various types of data are transferred via this bus <b>201</b>.</p>
<p id="p-0030" num="0029">The operating portion <b>206</b> includes devices for operating the server device <b>20</b>A, such as a keyboard and a mouse. When these devices are operated by the user of the server device <b>20</b>A, the CPU <b>202</b> performs various types of processes depending on the operation performed. The display <b>207</b> has a liquid crystal display as a display device and displays a menu screen for operating the server device <b>20</b>A, data possessed by the server device <b>20</b>A, etc., under the control of the CPU <b>202</b>. The communication portion <b>210</b> is connected to the communication line <b>40</b> and functions as a communication interface that communicates with other devices connected to the communication line <b>40</b>.</p>
<p id="p-0031" num="0030">The memory <b>205</b> is equipped with a memory device and stores an OS program <b>205</b>A that implements operating system functions on the server device <b>20</b>A. Furthermore, the memory <b>205</b> interprets the process instruction data that represents the contents of a process to be performed by the server device <b>20</b>A, and stores the application program <b>205</b>B that implements the functions illustrated in the functional block diagram in <figref idref="DRAWINGS">FIG. 5</figref>, such as the execution function <b>250</b> for performing a process represented by the process instruction data, the instruction function <b>251</b> for instructing other devices to process data according to the contents described in the process instruction data, the data-receiving function <b>252</b> for acquiring data regarding processes executed by other devices, the output function <b>253</b> for outputting data regarding executed processes, the memory function <b>254</b> for storing data in the memory <b>205</b>, etc.</p>
<p id="p-0032" num="0031">The ROM <b>203</b> stores an IPL (Initial Program Loader). When the server device <b>20</b>A is powered on, the CPU <b>202</b> reads out the IPL from the ROM <b>203</b> in order to activate it. When the IPL is activated by the CPU <b>202</b>, the OS program <b>205</b>A stored in the memory <b>205</b> is executed, implementing basic functions as a computer device, such as control of the memory <b>205</b>, and a communication function for communicating via the communication line <b>40</b>. Moreover, when the application program <b>205</b>B is executed by the CPU <b>202</b>, the various functions described above are implemented.</p>
<p id="p-0033" num="0032">Furthermore, the hardware configuration of the server device <b>20</b>B is the same as that of the server device <b>20</b>A, which is the hardware configuration shown in <figref idref="DRAWINGS">FIG. 4</figref>. The server device <b>20</b>B differs from the server device <b>20</b>A in that programs stored in the memory <b>205</b> are different. Specifically, the memory <b>205</b> of the server device <b>20</b>B stores the application program <b>205</b>C in place of the application program <b>205</b>B. When this application program <b>205</b>C is executed, as shown in the functional block diagram in <figref idref="DRAWINGS">FIG. 6</figref>, the execution function <b>250</b>, the instruction function <b>251</b>, the data-receiving function <b>252</b>, and the output function <b>253</b> are implemented, and the character recognition function <b>255</b> for recognizing characters in images is implemented in place of the memory function <b>254</b>.</p>
<p id="h-0010" num="0000">Configuration of the Computer Device <b>30</b></p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 7</figref> is a block diagram illustrating the hardware configuration of the computer device <b>30</b>. As shown in the same figure, the respective portions of the computer device <b>30</b> are connected to a bus <b>301</b>, and various types of data are transferred via this bus <b>301</b>.</p>
<p id="p-0035" num="0034">The operating portion <b>306</b> includes devices for operating the computer device <b>30</b>, such as a keyboard and a mouse. When these devices are operated by the user of the computer device <b>30</b>, the CPU <b>302</b> performs various types of processes depending on the operation performed. The display <b>307</b> has a liquid crystal display as a display device and displays a menu screen for operating the computer device <b>30</b>, data possessed by the computer device <b>30</b>, etc., under the control of the CPU <b>302</b>. The communication portion <b>310</b> is connected to the communication line <b>40</b> and functions as a communication interface that communicates with other devices connected to the communication line <b>40</b>.</p>
<p id="p-0036" num="0035">The memory <b>305</b> is equipped with a memory device and stores an OS program that implements operating system functions on the computer device <b>30</b>, as well as a data-generating program that implements the function of creating text data.</p>
<p id="p-0037" num="0036">The ROM <b>303</b> stores an IPL, and when the computer device <b>30</b> is powered on, the CPU <b>302</b> reads out the IPL from the ROM <b>303</b> in order to activate it. When the IPL is activated by the CPU <b>302</b>, the OS program stored in the memory <b>305</b> is read out and executed, implementing basic functions as a computer device, such as control of the memory <b>305</b>, and a communication function for communicating via the communication line <b>40</b>. Furthermore, when a data-generating program is executed by the CPU <b>302</b>, the function for creating text data is implemented on the computer device <b>30</b>, allowing for the creation of the process instruction data D that represents a process to be performed by the image-forming device <b>10</b> and the server devices <b>20</b>A and <b>20</b>B illustrated in <figref idref="DRAWINGS">FIG. 8</figref>. Moreover, the process instruction data D shown in <figref idref="DRAWINGS">FIG. 8</figref> is data in which processes (actions to be performed or sequences of actions) to be performed by the image-forming device <b>10</b> or the server devices <b>20</b>A and <b>20</b>B and information regarding actions are described. In the present exemplary embodiment, they are described in XML (eXtensible Markup Language) by way of example, but they may be described in other markup languages, and also, if they are described according to a predefined specification, they do not have to be described with a markup language.</p>
<p id="h-0011" num="0000">An Example of the Actions of the First Exemplary Embodiment</p>
<p id="p-0038" num="0037">An example of the actions of the first exemplary embodiment is described as follows. In the following description, the operation when a document is read by the image-forming device <b>10</b>, which is that the recognition of characters within the document read by the image-forming device <b>10</b> is performed by the server device <b>20</b>B, and the result of character recognition is stored in the server device <b>20</b>A, are described using <figref idref="DRAWINGS">FIG. 9</figref>.</p>
<p id="p-0039" num="0038">First, the user of the present exemplary embodiment creates the process instruction data D that represents a process to be performed by the image-forming device <b>10</b>, a process to be performed by the server device <b>20</b>A, and a process to be performed by the server device <b>20</b>B, as illustrated in <figref idref="DRAWINGS">FIG. 8</figref>, on the computer device <b>30</b> in order to cause the image-forming device <b>10</b> to read a document, to cause the server device <b>20</b>B to recognize characters in the document read by the image-forming device <b>10</b>, and to store the result of character recognition on the server device <b>20</b>A.</p>
<p id="p-0040" num="0039">Next, when the operation for instructing the sending of the process instruction data D to the image-forming device <b>10</b> is performed by the operating portion <b>106</b> of the computer device <b>30</b>, the communication portion <b>310</b> is controlled by the CPU <b>302</b>, and the process instruction data D is sent to the image-forming device <b>10</b> via the communication line <b>40</b> (step S<b>1</b>). On the other hand, in the image-forming device <b>10</b>, this process instruction data D is received by the communication portion <b>110</b>, and the process instruction data D is stored in the memory <b>105</b>.</p>
<p id="p-0041" num="0040">Next, the document is set on the image-reading portion <b>108</b> of the image-forming device <b>10</b> by the user of the present exemplary embodiment, and an operation for selecting the process instruction data D from data stored in the memory <b>105</b> is performed by the operating portion <b>106</b>. Then, when an operation for instructing the execution of the process represented by the process instruction data D is performed, the CPU <b>102</b> analyzes the contents of the process instruction data D from line <b>1</b> of the process instruction data D after generating &#x201c;A0001&#x201d; as a process identifier for uniquely identifying the process based on the process instruction data D. Moreover, the process identifier is not limited to combinations of letters and numbers, and may be numbers only or letters only.</p>
<p id="p-0042" num="0041">The CPU <b>102</b> analyzes the process instruction data D, extracts the element on line <b>3</b>, &#x201c;Sample&#x201d;, between the &#x3c;Name&#x3e; tag and the &#x3c;/Name&#x3e; tag, as the name of the process that will be executed, and associates it with the generated identifier &#x201c;A0001&#x201d; (<figref idref="DRAWINGS">FIG. 10(</figref><i>a</i>)). Moreover, when analyzing the element on line <b>4</b> of the process instruction data D, the CPU <b>102</b> determines that the elements between the &#x3c;Process&#x3e; tag on line <b>4</b> and the &#x3c;/Process&#x3e; tag on line <b>36</b> are the contents of the process to be executed.</p>
<p id="p-0043" num="0042">Next, the CPU <b>102</b> determines that it is to perform a process of reading the document, because line <b>5</b> of the process instruction data D contains the &#x3c;DocumentInput&#x3e; tag, and generates &#x201c;A0002&#x201d; as a process identifier in order to uniquely identify the process for reading the document. Furthermore, the CPU <b>102</b> analyzes the element on the next line <b>6</b> as the specific action of reading the document. Here, because the tag on line <b>6</b> is a &#x3c;Scan&#x3e; tag, the CPU <b>102</b> names the process specified by the process identifier &#x201c;A0002&#x201d; as &#x201c;Scan&#x201d; and associates the process identifier &#x201c;A0002&#x201d; with the process name &#x201c;Scan&#x201d;. Moreover, because the process identifier &#x201c;A0002&#x201d; is related to processing of the process identifier &#x201c;A0001&#x201d;, in the image-forming device <b>10</b>, the process identifier &#x201c;A0002&#x201d; is associated with the process identifier &#x201c;A0001&#x201d; (<figref idref="DRAWINGS">FIG. 10(</figref><i>b</i>)).</p>
<p id="p-0044" num="0043">Then, because the tag on line <b>6</b> is a &#x3c;Scan&#x3e; tag, the CPU <b>102</b> controls the image-reading portion <b>108</b>, reads the document set on the image-reading portion <b>108</b>, and generates image data of the read document. Furthermore, the reading of the document and the generation of the image data are performed based on the elements between the &#x3c;Scan&#x3e; tag and the &#x3c;/Scan&#x3e; tag in the process instruction data D. Specifically, because &#x201c;A<b>4</b>&#x201d; follows the tag, &#x201c;LEF&#x201d; follows the tag, &#x201c;Auto&#x201d; follows the tag, and &#x201c;100%&#x201d; follows the tag, the document is read as an A4-sized document longitudinally fed, while regarding the image data that is generated, the magnification of the read image is 100%, and regarding the colors of the image, it is automatically determined whether it is monochrome or colored, and monochrome or colored image data is generated. Here, when image data is generated, the CPU <b>102</b> stores, in the memory <b>105</b>, the process result data &#x201c;success&#x201d;, indicating that the process of reading the document has been performed, as well as the set consisting of the process identifier &#x201c;A0002&#x201d; and the process name &#x201c;Scan&#x201d; (<figref idref="DRAWINGS">FIG. 10(</figref><i>c</i>)).</p>
<p id="p-0045" num="0044">When the CPU <b>102</b> finishes generating image data, because the &#x3c;DocumentProcess&#x3e; tag follows the &#x3c;/Scan&#x3e; tag, that is, in the element on line <b>13</b> of the process instruction data D, it determines that the next process to be performed is processing of the process image data, and operates based on the elements between the &#x3c;DocumentProcess&#x3e; tag and the &#x3c;/DocumentProcess&#x3e; tag on line <b>35</b>. Specifically, because line <b>14</b> of the process instruction data D contains a &#x3c;WebService&#x3e; tag, the CPU <b>102</b> determines that it is to perform a process of instructing other devices to process the image data, generates a process identifier &#x201c;A0003&#x201d; in order to uniquely identify the process for instructing other devices to process the image data, and also names the process specified by the process identifier &#x201c;A0003&#x201d; &#x201c;WebService&#x201d; in order to relate the process identifier &#x201c;A0003&#x201d; to the process name &#x201c;WebService&#x201d;. Moreover, because the process identifier &#x201c;A0003&#x201d; is related to processing of the process identifier &#x201c;A0001&#x201d;, in the image-forming device <b>10</b>, the process identifier &#x201c;A0003&#x201d; is associated with the process identifier &#x201c;A0001&#x201d; (<figref idref="DRAWINGS">FIG. 10(</figref><i>c</i>)).</p>
<p id="p-0046" num="0045">Next, because there is a &#x3c;Name&#x3e; tag on the line following the line with &#x3c;WebService&#x3e;, the CPU <b>102</b> extracts &#x201c;OcrAndStore&#x201d; between the &#x3c;Name&#x3e; tag and the &#x3c;/Name&#x3e; tag as the name of a process to be performed by other devices. Furthermore, because the text strings &#x3c;Target&#x3e;http://192.168.4.5/OcrAndStoreService.amsx&#x3c;/Target&#x3e; and &#x3c;FileTransfer&#x3e;attachment&#x3c;/FileTransfer&#x3e; appear as elements and there are elements inserted between the &#x3c;Message&#x3e; tag and the &#x3c;/Message&#x3e; tag, the communication portion <b>110</b> is controlled by the CPU <b>102</b>, and the image data and a message instructing the execution of the program specified by &#x201c;OcrAndStoreService.amsx&#x201d; are sent to the server device <b>20</b>A specified by the IP (Internet Protocol) address &#x201c;192.168.4.5&#x201d; (step S<b>2</b>). Moreover, the elements between the &#x3c;Message&#x3e; tag and the &#x3c;/Message&#x3e; tag are extracted from the process instruction data D, and the process instruction data DA, representing the extracted elements (<figref idref="DRAWINGS">FIG. 13</figref>), is sent to the server device <b>20</b>A (step S<b>3</b>).</p>
<p id="p-0047" num="0046">When the image data, message, and process instruction data DA sent from the image-forming device <b>10</b> are received by the communication portion <b>210</b> of the server device <b>20</b>A, the CPU <b>202</b> executes the application program <b>205</b> specified by &#x201c;OcrAndStoreService.amsx&#x201d; according to the message and performs tasks based on the process instruction data DA.</p>
<p id="p-0048" num="0047">Specifically, the CPU <b>202</b> first analyzes the contents of the process instruction data DA from line <b>1</b> of the process instruction data DA after generating &#x201c;B0001&#x201d; as a process identifier for uniquely identifying the process to be performed based on the process instruction data DA (<figref idref="DRAWINGS">FIG. 12(</figref><i>a</i>)). Furthermore, this process identifier &#x201c;B0001&#x201d; is sent to the image-forming device <b>10</b> (step S<b>4</b>), associated with the process name &#x201c;OcrAndStore&#x201d; in the image-forming device <b>10</b>, and is stored in the memory <b>205</b>. Moreover, because the process identifier &#x201c;B0001&#x201d; is related to the processing of the process identifier &#x201c;A0003&#x201d;, in the image-forming device <b>10</b>, the process identifier &#x201c;B0001&#x201d; is associated with the process identifier &#x201c;A0003&#x201d; (<figref idref="DRAWINGS">FIG. 10(</figref><i>d</i>)).</p>
<p id="p-0049" num="0048">On the other hand, the CPU <b>202</b> of the server device <b>20</b>A analyzes the process instruction data DA and determines that the process to be performed is a process of processing the image data, because the &#x3c;DocumentProcess&#x3e; tag appears in an element on line <b>1</b> of the process instruction data DA, and the CPU <b>202</b> operates based on the elements between the &#x3c;DocumentProcess&#x3e; tag and the &#x3c;/DocumentProcess&#x3e; tag. Here, because one of the tags on line <b>2</b> of the process instruction data DA is a &#x3c;WebService&#x3e; tag, the CPU <b>202</b> determines that it is to perform a process of instructing other devices to process the document, generates the process identifier &#x201c;B0002&#x201d; in order to uniquely identify the process of instructing other devices to process the image data, and also names the process specified by the process identifier &#x201c;B0002&#x201d; &#x201c;WebService&#x201d; in order to associate the process identifier &#x201c;B0002&#x201d; with the process name &#x201c;WebService&#x201d;. Moreover, because processing of the process identifier &#x201c;B0002&#x201d; is one of the processes to be performed by the server device <b>20</b>A, the CPU <b>202</b> associates the process identifier &#x201c;B0002&#x201d; with the process identifier &#x201c;B0001&#x201d; (<figref idref="DRAWINGS">FIG. 12(</figref><i>b</i>)).</p>
<p id="p-0050" num="0049">Next, because a &#x3c;Name&#x3e; tag appears on the line following the line with &#x3c;WebService&#x3e;, the CPU <b>202</b> extracts &#x201c;Ocr&#x201d; between the &#x3c;Name&#x3e; tag and the &#x3c;/Name&#x3e; tag as the name of the process to be performed by other devices. Furthermore, because the text strings &#x3c;Target&#x3e;http://192.168.4.10/OcrService.amsx&#x3c;/Target&#x3e; and &#x3c;FileTransfer&#x3e;attachment&#x3c;/FileTransfer&#x3e; appear as elements and elements are inserted between the &#x3c;Message&#x3e; tag and the &#x3c;/Message&#x3e; tag, the communication portion <b>210</b> is controlled by the CPU <b>202</b>, and the image data and a message instructing the execution of the program specified by &#x201c;OcrService.amsx&#x201d; are sent to the server device <b>20</b>B specified by the IP address &#x201c;192.168.4.10&#x201d; (step S<b>5</b>). Moreover, the elements between the &#x3c;Message&#x3e; tag and the &#x3c;/Message&#x3e; tag are extracted from the process instruction data DA, and the process instruction data DB, representing the extracted elements (<figref idref="DRAWINGS">FIG. 14</figref>), is sent to the server device <b>20</b>B (step S<b>6</b>).</p>
<p id="p-0051" num="0050">When the image data, message, and process instruction data DB sent from the server device <b>20</b>A are received by the communication portion <b>210</b> of the server device <b>20</b>B, the CPU <b>202</b> of the server device <b>20</b>B executes the application program <b>205</b>C specified by &#x201c;OcrService.amsx&#x201d; according to the message and performs a process based on the process instruction data DB.</p>
<p id="p-0052" num="0051">Specifically, the CPU <b>202</b> first analyzes the contents of the process instruction data DB from line <b>1</b> of the process instruction data DB after generating &#x201c;C0001&#x201d; as a process identifier in order to uniquely identify the process to be performed based on the process instruction data DB. Furthermore, this process identifier &#x201c;C0001&#x201d; is sent to the server device <b>20</b>A (step S<b>7</b>), is associated with the &#x201c;Ocr&#x201d; process in the server device <b>20</b>A, and is stored in the memory <b>205</b>. Moreover, because the process identifier &#x201c;C0001&#x201d; is related to the process of the process identifier &#x201c;B0002&#x201d;, in the server device <b>20</b>A, the process identifier &#x201c;C0001&#x201d; is associated with the process identifier &#x201c;B0002&#x201d; (<figref idref="DRAWINGS">FIG. 12(</figref><i>c</i>)).</p>
<p id="p-0053" num="0052">On the other hand, in the server device <b>20</b>B, the CPU <b>202</b> analyzes the process instruction data DB, and because &#x201c;ja&#x201d; follows the &#x3c;OcrLang&#x3e; tag and &#x201c;PDF&#x201d; follows the &#x3c;OutputFileFormat&#x3e; tag in the process instruction data DB, Japanese language character recognition is performed for the image represented by the received image, and recognition result data that represents the result of recognition is generated in PDF (Portable Document Format) format.</p>
<p id="p-0054" num="0053">Then, when the process of character recognition is completed on the server device <b>20</b>B, the CPU <b>202</b> first stores the process identifier &#x201c;C0001&#x201d; and the &#x201c;success&#x201d; process result data, indicating that the process of character recognition has been performed in the memory <b>205</b> of the server device <b>20</b>B. Furthermore, communication portion <b>210</b> is controlled by the CPU <b>202</b>, and recognition result data, the process identifier &#x201c;C0001&#x201d;, and the &#x201c;success&#x201d; process result data are sent to the server device <b>20</b>A (step S<b>8</b>).</p>
<p id="p-0055" num="0054">When these are received by the communication portion <b>210</b> of the server device <b>20</b>A, the CPU <b>202</b> of the server device <b>20</b>A determines that the process specified by the process identifier &#x201c;C0001&#x201d; has been performed, because the content of the process result data is &#x201c;success&#x201d;. Then, the received &#x201c;success&#x201d; process result data is associated with the process identifier &#x201c;C0001&#x201d; and the process name &#x201c;Ocr&#x201d; in the memory <b>205</b> and is stored (<figref idref="DRAWINGS">FIG. 12(</figref><i>e</i>)). Furthermore, the CPU <b>202</b> determines that the process to be performed by other devices has been performed, because the received process result data is &#x201c;success&#x201d;, and it associates the &#x201c;success&#x201d; process result data, which indicates that a process performed by other devices has been performed, with the process identifier &#x201c;B0002&#x201d; and the process name &#x201c;WebService&#x201d; and stores it in the memory <b>205</b> (<figref idref="DRAWINGS">FIG. 12(</figref><i>e</i>)).</p>
<p id="p-0056" num="0055">Then, when a process performed by other devices is completed, the CPU <b>202</b> of the server device <b>20</b>A determines that it is to perform a process of storing the recognition result data in the memory <b>205</b>, because line <b>11</b> of the process instruction data DA contains the &#x3c;FileStore&#x3e; tag, and it generates a process identifier &#x201c;B0003&#x201d; that uniquely identifies this process and also names the process specified by the process identifier &#x201c;B0003&#x201d; as &#x201c;FileStore&#x201d; in order to associate the process identifier &#x201c;B0003&#x201d; with the process name &#x201c;FileStore&#x201d;. Furthermore, because processing of the process identifier &#x201c;B0003&#x201d; is one of the processes to be performed by the server device <b>20</b>A, the process identifier &#x201c;B0003&#x201d; is associated with the process identifier &#x201c;B0001&#x201d; (<figref idref="DRAWINGS">FIG. 12(</figref><i>f</i>)).</p>
<p id="p-0057" num="0056">Next, because the &#x3c;StoreLocation&#x3e; tag appears on the line following the line with &#x3c;FileStore&#x3e;, the CPU <b>202</b> stores the recognition result data in a storage location in the memory <b>205</b> designated by the text between the &#x3c;StoreLocation&#x3e; tag and the &#x3c;/StoreLocation&#x3e; tag. Then, when the recognition result data is stored on the server device <b>20</b>A, the CPU <b>202</b> of the server device <b>20</b>A first associates the process identifier &#x201c;B0003&#x201d;, the process name &#x201c;FileStore&#x201d; and the &#x201c;success&#x201d; process result data, which indicates that the process of storing the recognition result data has been performed, with each other, and stores them in the memory <b>205</b> of the server device <b>20</b>A (<figref idref="DRAWINGS">FIG. 12(</figref><i>g</i>)). Furthermore, because the tag following the &#x3c;/FileStore&#x3e; tag in the process instruction data DA is a &#x3c;/DocumentProcess&#x3e; tag, with the element being finished in the process instruction data DA and the process to be performed based on the process instruction data DA being completed, the CPU <b>202</b> associates the &#x201c;success&#x201d; process result data with the process identifier &#x201c;B0001&#x201d; and stores it in the memory <b>205</b> (<figref idref="DRAWINGS">FIG. 12(</figref><i>g</i>)).</p>
<p id="p-0058" num="0057">When the process to be performed based on the process instruction data DA is completed on the server device <b>20</b>A, the communication portion <b>210</b> is controlled by the CPU <b>202</b>, and data stored in the memory <b>205</b> (<figref idref="DRAWINGS">FIG. 12(</figref><i>g</i>)) is sent to the image-forming device <b>10</b> (step S<b>9</b>).</p>
<p id="p-0059" num="0058">Then, when these data are received by the communication portion <b>110</b> of the image-forming device <b>10</b>, the CPU <b>102</b> stores the received data in the memory <b>105</b> (<figref idref="DRAWINGS">FIG. 10(</figref><i>e</i>)) and determines that the process performed by other devices has been performed. Then, it associates the &#x201c;success&#x201d; process result data, indicating that a process to be performed by other devices has been performed, with the process identifier &#x201c;A0003&#x201d; and the process name &#x201c;WebService&#x201d; in order to store it in the memory <b>105</b> (<figref idref="DRAWINGS">FIG. 11(</figref><i>a</i>)). Furthermore, when these are stored in the memory <b>105</b>, the CPU <b>102</b> determines that the process to be performed based on the process instruction data D has been performed, and associates the &#x201c;success&#x201d; processing data with the process identifier &#x201c;A0001&#x201d; and the process name &#x201c;Sample&#x201d; in order to store it in the memory <b>105</b> (<figref idref="DRAWINGS">FIG. 11(</figref><i>b</i>)).</p>
<p id="p-0060" num="0059">Subsequently, the CPU <b>102</b> reads out the process identifier, process name and process result data stored in the memory <b>105</b>, and displays them on the display <b>107</b> as illustrated in <figref idref="DRAWINGS">FIG. 15</figref>. Furthermore, when displaying this, in association with a process identifier, the contents and process names of the process result data that form a set with the process identifier may be displayed as shown in <figref idref="DRAWINGS">FIG. 15</figref>. Moreover, as shown in <figref idref="DRAWINGS">FIG. 15</figref>, they may be displayed so that the association between processes may be understood, based on the association of each process identifier in <figref idref="DRAWINGS">FIG. 11(</figref><i>b</i>). In addition, in the present example of the action, because the process identifier &#x201c;A0002&#x201d; and the process identifier &#x201c;A0003&#x201d; have been associated with the process identifier &#x201c;A0001&#x201d;, <figref idref="DRAWINGS">FIG. 15</figref> hierarchically displays the process identifier &#x201c;A0001&#x201d; associated with the process identifier &#x201c;A0002&#x201d; and the process identifier &#x201c;A0003&#x201d;, and it hierarchically displays the process identifier &#x201c;B0001&#x201d; associated with the process identifier &#x201c;A0003&#x201d;, because the process identifier &#x201c;B0001&#x201d; has been associated with the process identifier &#x201c;A0003&#x201d;. Furthermore, because the process identifier &#x201c;B0002&#x201d; and the process identifier &#x201c;B0003&#x201d; have been associated with the process identifier &#x201c;B0001&#x201d;, <figref idref="DRAWINGS">FIG. 15</figref> hierarchically displays the process identifier &#x201c;B0001&#x201d; associated with the process identifier &#x201c;B0002&#x201d; and the process identifier &#x201c;B0003&#x201d;. Moreover, because the process identifier &#x201c;C0001&#x201d; has been associated with the process identifier &#x201c;B0002&#x201d;, it hierarchically displays the process identifier &#x201c;C0001&#x201d; associated with the process identifier &#x201c;B0002&#x201d;. This display mode shows the relationship between the processes performed by the device that instructed the execution of the processes and the processes performed by the other devices instructed to execute processes by the device.</p>
<p id="h-0012" num="0000">Modified Examples</p>
<p id="p-0061" num="0060">One exemplary embodiment of the present invention has been described above, but the present invention is not limited by the aforementioned exemplary embodiment and can be implemented in various other forms. For example, the aforementioned exemplary embodiment may be modified as follows in order to implement the present invention.</p>
<p id="p-0062" num="0061">In the aforementioned exemplary embodiment, the start time and end time of a process may also be associated with its process identifier and stored. Furthermore, in the aforementioned exemplary embodiment, if the communication portion of each device is a communication interface having a MAC (Media Access Control) address, a process identifier that includes the MAC address may be generated. Moreover, in the aforementioned exemplary embodiment, if the process to be performed is not successfully completed, there may be an &#x201c;error&#x201d; as the contents of the process result data, indicating that it has not been successfully completed.</p>
<p id="p-0063" num="0062">In the aforementioned exemplary embodiment, process instruction data in which lines <b>5</b> to <b>12</b> of the process instruction data D being deleted may be created with the computer device <b>30</b> in order to perform the operation of instructing the execution of a process represented by this process instruction data on the computer device <b>30</b>, causing the server device <b>20</b>B to perform a process of character recognition and causing the server device <b>20</b>A to store the recognition result data. Furthermore, in the aforementioned exemplary embodiment, the image-forming device <b>10</b> may instruct the server device <b>20</b>B to recognize characters in image data, wherein the image-forming device <b>10</b> may receive the recognition result data of the character recognition sent from the server device <b>20</b>B to the image-forming device <b>10</b>. Then, the image-forming device <b>10</b> may instruct the server device <b>20</b>A to store this recognition result. Moreover, in the aforementioned exemplary embodiment, the server device <b>20</b>B may instruct another server device to perform the process.</p>
<p id="p-0064" num="0063">The contents of the processes to be performed by each device are not limited to those in the aforementioned exemplary embodiment. For example, the server device may be caused to perform a process of attaching image data to an e-mail message in order to send it, and may be caused to perform a process such as color conversion and image processing of the image data. Furthermore, the image-forming device <b>10</b> may incorporate a facsimile communication function and be caused to perform the process of transmitting a facsimile of the image data.</p>
<p id="p-0065" num="0064">In the aforementioned exemplary embodiment, a history server device that stores data regarding a process may be connected to the communication line <b>40</b> in order to cause the history server device to store data regarding the processes to be performed by each device. Furthermore, in the case of this configuration, when a device connected to the communication line <b>40</b> sends a message to other devices requesting a process, the output destination of the data regarding the process may be included, and the history server device may be this output destination.</p>
<p id="p-0066" num="0065">Each of the aforementioned programs may be provided by storing it on computer readable memory media such as magnetic recording media (magnetic tape, magnetic disk (HDD (hard disk drive), FD (floppy disk), etc.), optical recording media (optical disc (CD (compact disc)), DVD (digital versatile disc)), etc.), magneto-optic media (MO), and semiconductor memory, and installing it on each device. Furthermore, it is also possible to download it via a communication line and install it on each device.</p>
<p id="p-0067" num="0066">The foregoing description of the embodiments of the present invention is provided for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Obviously, many modifications and variations will be apparent to practitioners skilled in the art. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications, thereby enabling others skilled in the art to understand the invention for various embodiments and with the various modifications as are suited to the particular use contemplated. It is intended that the scope of the invention be defined by the following claims and their equivalents.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An information-processing device comprising:
<claim-text>an execution unit that executes a first part of a process, based on process instruction data representing the process including the first part of the process, a second part of the process, and a third part of the process, the process instruction data instructing the information-processing device to execute the first part of the process, instructing the information-processing device to instruct an external device to execute the second part of the process, and instructing the external device to instruct a second external device to execute the third part of the process;</claim-text>
<claim-text>an instruction unit that instructs the external device to execute the second part of the process, based on the process instruction data;</claim-text>
<claim-text>a receiving unit that receives from the external device second status data that indicates whether execution of the second part of the process by the external device is completed and third status data that indicates whether execution of the third part of the process by the second external device is completed;</claim-text>
<claim-text>a memory that stores a history of the process, the history comprising first status data that indicates whether execution of the first part of the process is completed, the second status data received by the receiving unit that indicates whether the execution of the second part of the process is completed, and the third status data received by the receiving unit that indicates whether the execution of the third part of the process is completed; and</claim-text>
<claim-text>a display that displays the history of the process, the displayed history of the process illustrating a hierarchical relationship between the first part of the process performed by the information-processing device at a hierarchically higher level of the displayed history, the second part of the process performed by the external device at a hierarchically lower level of the displayed history, and the third part of the process performed by the second external device at a second hierarchically lower level of the displayed history, the higher level of the displayed history determined based on the process instruction data instructing the information-processing device to execute the first part of the process, the lower level of the displayed history determined based on the process instruction data instructing the information-processing device to instruct the external device to execute the second part of the process, and the second lower level of the displayed history determined based on the process instruction data instructing the external device to instruct the second external device to execute the third part of the process,</claim-text>
<claim-text>wherein the displayed history of the process comprises a first process name of the first part of the process performed by the information-processing device, a second process name of the second part of the process performed by the external device, and a third process name of the third part of the process performed by the second external device, and</claim-text>
<claim-text>wherein the first part of the process executed by the information-processing device and the second part of the process executed by the external apparatus are executed in parallel, and the third part of the process is sequentially allocated to the second external device by the external device based on the process.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The information-processing device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the external device includes a server device that performs the second part of the process and sends a result of the second part of the process to the information-processing device.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The information-processing device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the external device includes a first server device that provides the information processing device with a result of the second part of process and the second external device includes a second server device that performs the third part of the process upon receipt of a request by the first server device.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. An information-processing system comprising:
<claim-text>an information-processing device comprising:
<claim-text>an execution unit that executes a first part of a process, based on process instruction data representing the process including the first part of the process, a second part of the process, and a third part of the process, the process instruction data instructing the information processing device to execute the first part of the process, instructing the information processing device to instruct a server device to execute the second part of the process, and instructing the server device to instruct a second server device to execute the third part of the process;</claim-text>
<claim-text>an instruction unit that transmits to the server device an instruction to execute the second part of the process, based on the process instruction data;</claim-text>
<claim-text>a receiving unit that receives from the server device second status data that indicates whether execution of the second part of the process by the server device is completed and third status data that indicates whether execution of the third part of the process by the second server device is completed;</claim-text>
<claim-text>a memory that stores a history of the process, the history comprising first status data that indicates whether execution of the first part of the process is completed, the second status data received by the receiving unit that indicates whether the execution of the second part of the process is completed, and the third status data received by the receiving unit that indicates whether the execution of the third part of the process is completed; and</claim-text>
<claim-text>a display that displays the history of the process, the displayed history of the process illustrating a hierarchical relationship between the first part of the process performed by the information processing device at a hierarchically higher level of the displayed history, the second part of the process performed by the server device at a hierarchically lower level of the displayed history, and the third part of the process performed by the second server device at a second hierarchically lower level of the displayed history, the higher level of the displayed history determined based on the process instruction data instructing the information processing device to execute the first part of the process, the lower level of the displayed history determined based on the process instruction data instructing the information processing device to instruct the server device to execute the second part of the process, and the second lower level of the displayed history determined based on the process instruction data instructing the server device to instruct the second server device to execute the third part of the process, and the server device comprising:</claim-text>
<claim-text>an accepting unit that accepts the instruction transmitted by the instruction unit;</claim-text>
<claim-text>a second execution unit that executes the second part of the process in response to the accepting unit accepting the instruction; and</claim-text>
</claim-text>
<claim-text>a sending unit that sends the second status data and the third status data to the information-processing device,
<claim-text>wherein the displayed history of the process comprises a first process name of the first part of the process performed by the information-processing device, a second process name of the second part of the process performed by the external device, and a third process name of the third part of the process performed by the second external device, and</claim-text>
<claim-text>wherein the first part of the process executed by the information-processing device and the second part of the process executed by the external apparatus are executed in parallel, and the third part of the process is sequentially allocated to the second external device by the external device based on the process.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The information-processing system according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the server device further comprises a communication unit that communicates with the second server device so as to cause the second server device to perform the third part of the process.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A non-transitory storing medium storing a program that causes an information processing device to execute a method of displaying a processing history of a process, the method comprising:
<claim-text>receiving process instruction data, the process instruction data instructing the information processing device to execute a first part of the process, instructing the information processing device to instruct an external device to execute a second part of the process, and instructing the external device to instruct a second external device to execute the third part of the process;</claim-text>
<claim-text>executing the first part of a process, based on the process instruction data;</claim-text>
<claim-text>instructing the external device to execute the second part of the process, based on the process instruction data;</claim-text>
<claim-text>receiving from the external device second status data that indicates whether execution of the second part of the process by the external device is completed and third status data that indicates whether execution of the third part of the process by the second external device is completed;</claim-text>
<claim-text>storing the history of the process, the history comprising first status data that indicates whether execution of the first part of the process is completed, the second status data that indicates whether the execution of the second part of the process is completed, and the third status data received by the receiving unit that indicates whether the execution of the third part of the process is completed; and</claim-text>
<claim-text>displaying the history of the process, the displayed history of the process illustrating a hierarchical relationship between the first part of the process performed by the information-processing device at a hierarchically higher level of the displayed history, the second part of the process performed by the external device at a hierarchically lower level of the displayed history, and the third part of the process performed by the second external device at a second hierarchically lower level of the displayed history, the higher level of the displayed history determined based on the process instruction data instructing the information-processing device to execute the first part of the process, the lower level of the displayed history determined based on the process instruction data instructing the information-processing device to instruct the external device to execute the second part of the process, and the second lower level of the displayed history determined based on the process instruction data instructing the external device to instruct the second external device to execute the third part of the process,</claim-text>
<claim-text>wherein the displayed history of the process comprises a first process name of the first part of the process performed by the information-processing device, a second process name of the second part of the process performed by the external device, and a third process name of the third part of the process performed by the second external device, and</claim-text>
<claim-text>wherein the first part of the process executed by the information-processing device and the second part of the process executed by the external apparatus are executed in parallel, and the third part of the process is sequentially allocated to the second external device by the external device based on the process.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The storing medium according to <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the external device includes a server device that performs the second part of the process and sends a result of the second part of the process to the information-processing device.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The storing medium according to <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the external device includes a first server device that provides the information processing device with a result of the second part of process and the second external device includes a second server device that performs the third part of the process upon receipt of a request by the first server device.</claim-text>
</claim>
</claims>
</us-patent-grant>
