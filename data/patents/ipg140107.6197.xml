<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627321-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627321</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12871698</doc-number>
<date>20100830</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>404</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>9</main-group>
<subgroup>46</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>7</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>718102</main-classification>
<further-classification>718104</further-classification>
<further-classification>707606</further-classification>
</classification-national>
<invention-title id="d2e53">Repository of background job templates</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5862337</doc-number>
<kind>A</kind>
<name>Gray</name>
<date>19990100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709224</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6834386</doc-number>
<kind>B1</kind>
<name>Douceur et al.</name>
<date>20041200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>718107</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>8126840</doc-number>
<kind>B2</kind>
<name>Davis</name>
<date>20120200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707608</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2007/0157192</doc-number>
<kind>A1</kind>
<name>Hoefler et al.</name>
<date>20070700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717168</main-classification></classification-national>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>4</number-of-drawing-sheets>
<number-of-figures>4</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120054754</doc-number>
<kind>A1</kind>
<date>20120301</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Teichmann</last-name>
<first-name>Jan</first-name>
<address>
<city>Neustadt</city>
<country>DE</country>
</address>
</addressbook>
<residence>
<country>DE</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Wolber</last-name>
<first-name>Andreas</first-name>
<address>
<city>Heidelberg</city>
<country>DE</country>
</address>
</addressbook>
<residence>
<country>DE</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Berger</last-name>
<first-name>Jens</first-name>
<address>
<city>Dresden</city>
<country>DE</country>
</address>
</addressbook>
<residence>
<country>DE</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Said</last-name>
<first-name>Bare</first-name>
<address>
<city>Sankt Leon-Rot</city>
<country>DE</country>
</address>
</addressbook>
<residence>
<country>DE</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Teichmann</last-name>
<first-name>Jan</first-name>
<address>
<city>Neustadt</city>
<country>DE</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Wolber</last-name>
<first-name>Andreas</first-name>
<address>
<city>Heidelberg</city>
<country>DE</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Berger</last-name>
<first-name>Jens</first-name>
<address>
<city>Dresden</city>
<country>DE</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Said</last-name>
<first-name>Bare</first-name>
<address>
<city>Sankt Leon-Rot</city>
<country>DE</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Mintz Levin Cohn Ferris Glovsky and Popeo, P.C.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>SAP AG</orgname>
<role>03</role>
<address>
<city>Walldorf</city>
<country>DE</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Truong</last-name>
<first-name>Camquy</first-name>
<department>2196</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Aspects of the current subject matter can provide a background job repository that stores a background job template specifying a background job comprising a maintenance task that affects a customized software platform. The background job template can also include metadata defining a purpose of the background job, triggering information indicating when the background job should be executed, and a prerequisite feature of the customized software platform that indicates a need for the background job in the customized software platform. A previous set of background jobs that run in the customized software platform can be updated to a current set by comparing the previous set with the background job template and including the background job in the current set of background jobs when the customized software platform includes the prerequisite feature.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="164.00mm" wi="217.25mm" file="US08627321-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="224.37mm" wi="176.45mm" orientation="landscape" file="US08627321-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="248.41mm" wi="190.33mm" orientation="landscape" file="US08627321-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="221.66mm" wi="177.29mm" orientation="landscape" file="US08627321-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="224.71mm" wi="171.96mm" orientation="landscape" file="US08627321-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">TECHNICAL FIELD</heading>
<p id="p-0002" num="0001">The subject matter described herein relates to the use of a background job repository, such as for example a background job repository that stores information pertaining to maintenance tasks in a customized software platform.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">Various organizations make use of enterprise resource planning (ERP) software architectures to provide an integrated, computer-based system for management of internal and external resources, such as for example tangible assets, financial resources, materials, customer relationships, and human resources. In general, an ERP software architecture is designed to facilitate the flow of information between business functions inside the boundaries of the organization and manage the connections to outside service providers, stakeholders, and the like. Such architectures often include one or more centralized databases accessible by a core software platform that consolidates business operations, including but not limited to those provided by third party vendors, into a uniform and organization-wide system environment. The core software platform can reside on a centralized server or alternatively be distributed across modular hardware and software units that provide &#x201c;services&#x201d; and communicate on a local area network or over a network, such as for example the Internet, a wide area network, a local area network, or the like.</p>
<p id="p-0004" num="0003">As part of the installation process of the core software platform on computing hardware owned or operated by the organization, one or more customized features, configurations, business processes, or the like may be added to the default, preprogrammed features such that the core software platform is configured for maximum compatibility with the organization's business processes, data, and the like.</p>
<p id="p-0005" num="0004">The core software platform of an ERP software architecture can be provided as a standalone, customized software installation that runs on one or more processors that are under the control of the organization. This arrangement can be very effective for a large-scale organization that has very sophisticated in-house information technology (IT) staff and for whom a sizable capital investment in computing hardware and consulting services required to customize a commercially available ERP solution to work with organization-specific business processes and functions is feasible. Smaller organizations can also benefit from use of ERP functionality. However, such an organization may lack the necessary hardware resources, IT support, and/or consulting budget necessary to make use of a standalone ERP software architecture product and can in some cases be more effectively served by a software as a service (SaaS) arrangement in which the ERP system architecture is hosted on computing hardware such as servers and data repositories that are maintained remotely from the organization's location and accessed by authorized users at the organization via a thin client, such as for example a web browser, over a network.</p>
<p id="p-0006" num="0005">In a software delivery configuration in which services provided to each of multiple organizations are hosted on a dedicated system that is accessible only to that organization, the software installation at the dedicated system can be customized and configured in a manner similar to the above-described example of a standalone, customized software installation running locally on the organization's hardware. However, to make more efficient use of computing resources of the SaaS provider and to provide important performance redundancies and better reliability, it can be advantageous to host multiple tenants on a single system that includes multiple servers and that maintains data for all of the multiple tenants in a secure manner while also providing customized solutions that are tailored to each tenant's business processes.</p>
<p id="p-0007" num="0006">In currently available software delivery approaches, a system administrator can schedule batch jobs that handle a range of activities, potentially including but not limited to system data clean up, error detection, monitoring, and the like. These jobs are typically scheduled manually based on some guidelines, such as for example manuals, documentation, standard operating procedures, and the like, as well as at least in some part on the administrator's own experience and &#x201c;gut feeling.&#x201d; Such an approach can introduce several challenges. As one example, scheduling background jobs can require a relatively high level of sophistication, such as for example an understanding of technical details of the operations of an on-demand system by those initiating and/or specifying such background jobs. In a customized software application, such as for example those delivered as part of an ERP package, not every background job is likely to be required by or even appropriate for all customizations of the application.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0008" num="0007">In one aspect, a computer-implemented method includes storing a background job template in a background job repository accessible from an application server. The background job template specifies a background job that includes a maintenance task executable by a customized software platform provided from the application server. The background job template also includes metadata defining a purpose of the background job, triggering information indicating when the background job should be executed, and at least one prerequisite feature of the customized software platform that indicates a need for the background job in the customized software platform. A current set of background jobs that run in the customized software platform is updated, at least by comparing a previous set of background jobs executing in the customized software platform with the background job template and including the background job in the current set of background jobs when the customized software platform includes the at least one prerequisite feature. The background job is executed in the customized software platform according to the triggering information in the background job template.</p>
<p id="p-0009" num="0008">In some variations, one or more of the following can optionally be included. As part of an new software installation or a change to an existing software installation at the application server, at least one of a second background job template and a change to the background job template can be received, for example at the application server. The second background job template can be stored in the background job repository and/or the change can be made to the background job template in the background job repository. The customized software platform can be periodically monitored to determine whether changes to the customized software platform have resulted in the customized software platform no longer having the prerequisite feature or have resulted in the customized software platform having a second prerequisite feature of a second background job template specifying a second background job that is not part of the current set. If the customized software platform no longer has the prerequisite feature, the background job can be removed from the current set, and the second background job can be added to the current set if the customized software platform has the second prerequisite feature.</p>
<p id="p-0010" num="0009">The customized software platform can be provided via a client tenant of a plurality of client tenants of a multi-tenant software architecture implemented on the application server. The application server can be accessible over a network from a plurality of organizations that are each provided access to one of the plurality of client tenants. At least one of the plurality of client tenants can include different functionality than the customized software platform. The application server can access at least one data repository that includes core software platform content relating to the operation of the multi-tenant software architecture, system content that includes data objects created in runtime by the multi-tenant software architecture that are modifiable with data provided by a corresponding tenant, and tenant-specific content including data objects or extensions to data objects that are customized for a corresponding tenant. The core software content can be common to all of the plurality of tenants and unmodifiable by users at the organizations. Data objects or extensions to data objects of a particular tenant are not available to other tenants. The prerequisite feature can include at least one of a first attribute of the core software platform, a second attribute of a specific client tenant of the plurality of client tenants, and a tenant-specific scope of functionality provided to the organization by a specific client tenant of the plurality of client tenants.</p>
<p id="p-0011" num="0010">The background job template can include an execution step for the background job as well as an execution schedule and an execution term for the background job. A new background job template can be received for addition to the background job repository. The receiving can be associated with an installation of new functionality in the customized software platform or with an update or upgrade to the customized software platform. The current set of background jobs running in the customized software platform can be updated to a new current set of background jobs running in the customized software platform such that the new set includes a new background job defined by the new template if the customized software platform includes a new prerequisite feature that the new background job template includes.</p>
<p id="p-0012" num="0011">Articles are also described that comprise a tangibly embodied machine-readable medium operable to cause one or more machines (e.g., computers, etc.) to result in operations described herein. Similarly, computer systems are also described that may include a processor and a memory coupled to the processor. The memory may include one or more programs that cause the processor to perform one or more of the operations described herein.</p>
<p id="p-0013" num="0012">The subject matter described herein provides many advantages including, but not limited to, reducing the dependence of background job scheduling on subjective factors and static, &#x201c;one-size-fits all&#x201d; procedures while ensuring that background jobs can be scheduled in a convenient and automated manner while still being intelligently applied. Further benefits can be realized in multi-tenant systems in which multiple customized versions of a core software platform can be provided from a single application server to multiple organizations. In such an arrangement, maintenance of a current set of background jobs that are appropriate and necessary to support the functionality provided by each client tenant can be very complicated. The current subject matter can readily be extended to address such issues. Additionally, to support ongoing maintenance, upgrades, and updates to a system that can require modifications of the tasks, prerequisite features, dependencies, and the like of background jobs or the creation of new background jobs, background job templates can be developed or modified and included as part of a new or updated software package. The new or modified background job templates can be added to a job repository at the software installation site (i.e. a local installation for a standalone system or as part of the roll-out for a multi-tenant system) and from there can be used to create a current set of background jobs for each instance of a customized software platform.</p>
<p id="p-0014" num="0013">The details of one or more variations of the subject matter described herein are set forth in the accompanying drawings and the description below. Other features and advantages of the subject matter described herein will be apparent from the description and drawings, and from the claims.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">DESCRIPTION OF DRAWINGS</heading>
<p id="p-0015" num="0014">The accompanying drawings, which are incorporated in and constitute a part of this specification, show certain aspects of the subject matter disclosed herein and, together with the description, help explain some of the principles associated with the disclosed implementations. In the drawings,</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram showing aspects of a background job repository in conjunction with an application server and background job manager;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 2</figref> is a diagram showing aspects of a multi-tenant software delivery architecture;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram showing additional aspects of a multi-tenant software delivery architecture; and</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 4</figref> is a process flow diagram illustrating aspects of a method consistent with implementations of the current subject matter.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<p id="p-0020" num="0019">When practical, similar reference numbers denote similar structures, features, or elements.</p>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0021" num="0020">To address these and potentially other issues with currently available solutions, one or more implementations of the current subject matter provide methods, systems, articles of manufacture, and the like that can, among other possible advantages, provide a database structure, referred to herein as a background job repository, that formalizes knowledge about which background maintenance tasks are required by a specific implementation of a customized software architecture by storing this information as machine-processable meta data. A list (which can be a simple list or some other more detailed database structure depending on the specific implementation) of potentially relevant background jobs can be maintained. This list can include information regarding what is to be executed (for example, a name or other designation of a program, script, variant, etc.), when is it to be executed (for example as instructions for a periodic-scheduler or event-handler), and where or under what conditions it is to be executed (for example which systems and/or client tenants should run the background job). This meta information can be provided in some implementations as a piece of code or other readily integrated and updated information that can be readily integrated into an existing background job repository to reflect changes required by a new installation or an update or upgrade process into existing installations. Once the meta information is in the system in the form of background job templates stored in a background job repository, the background job corresponding to each such background job template can be automatically generated, maintained, and modified at system-change events, such as for example updates, upgrades, after an installation, upon a change in scope of the functionality provided by a customer's current business configuration of the customized software architecture, and the like.</p>
<p id="p-0022" num="0021">As all of the above-noted information can be stored in a machine-processable way, automated monitoring of active background jobs can be performed at runtime. In such an example, an ongoing &#x201c;health check&#x201d; can be performed to verify whether all relevant background jobs are actually running and to identify any unnecessary or outdated background jobs that are no longer required due to updates, configuration scope changes, or the like. Because each current background job should have a corresponding background job template in the background job repository, discrepancies between the background job templates in the background job repository and those background jobs that are actually running can be readily identified and corrected by making the running background jobs consistent with the background jobs described by the applicable background job templates from the background job repository. This &#x201c;repair&#x201d; or &#x201c;healing&#x201d; of the background jobs currently running in the system can be performed at runtime. As discussed in greater detail below, the current subject matter can also provide for modifications of both generic and tenant-specific content stored in a data repository of a multi-tenant system; remote changes of the stored content for one client tenant from a system management console, cloud-based architecture management system, or the like; creation and/or use of additional business-related background jobs that are specific to a business configuration of a specific client tenant; and scheduling of these background jobs for execution by one or more batch processes.</p>
<p id="p-0023" num="0022">Implementations of the current subject matter can include establishing and/or maintaining a background job repository that enables intelligent, systematic, and simplified application of background jobs in a customized software delivery architecture. Periodic background jobs required to maintain operation of such a customized software delivery architecture can be standardized and kept up to date. At runtime, it can be ensured that pre-defined background jobs are run with a proper schedule and only for parts of the customized software delivery architecture for which the background jobs are designed and intended.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 1</figref> shows a block diagram <b>100</b> of a computing architecture consistent with some implementations of the current subject matter. A background job repository <b>102</b> can include one or more background job templates <b>104</b> that each include template content <b>106</b>. Optional features of the template content <b>106</b> are described in greater detail below. An application server <b>110</b> can include one or more processors and can provide access to a customized software solution to at least one client <b>112</b> at an organization <b>114</b>. As noted above, the one or more processors can be located locally at the organization <b>114</b> or alternatively at a remote location where they are accessible over a communication network <b>116</b> as is shown in <figref idref="DRAWINGS">FIG. 1</figref>. The application server <b>110</b> provides access to generic content <b>120</b> and organization-specific content <b>122</b> that are stored in a content repository <b>124</b>. The organization-specific content can include various customizations of a core software platform that are implemented to accommodate specific business processes of the organization <b>114</b>.</p>
<p id="p-0025" num="0024">A background job repository manager <b>126</b> that is in communication with the background job repository <b>102</b> and the application server <b>110</b> and/or the content repository <b>124</b> can perform consistency checks on actual background jobs running on the application server <b>110</b> and affecting the content repository <b>124</b>. Such consistency checks can be performed upon occurrence of a specific event, such as for example installation of a new software feature or platform or an update or upgrade of an existing installation, or as a monitoring process that occurs continuously, semi-continuously, periodically, or the like. A consistency check can include reviewing the actually running background jobs at the application server <b>110</b> with the background job templates <b>106</b> stored in the background job repository <b>102</b>. Specifically, the template content <b>106</b> of each background job template <b>106</b> can specify for a corresponding background job one or more of what the corresponding background job is and/or what tasks it performs, when the corresponding background job should be run, and what prerequisite features of the customized software solution should be present for the corresponding background job to be appropriate for running in the customized software solution. Currently active background jobs in the application server that correspond to a background job template <b>106</b> whose template content <b>106</b> lists prerequisite features that are not present in the customized software solution can be deactivated by the background job manager <b>126</b>. Similarly, background jobs that are not currently running but that correspond to a background job template <b>106</b> whose template content <b>106</b> lists prerequisite features that are present in the customized software solution can be added by the background job manager <b>126</b> as active background jobs in the application server <b>110</b>.</p>
<p id="p-0026" num="0025">In a further implementation a background job repository <b>102</b> and background job manager <b>126</b> can be used to manage background jobs executing in a multi-tenant software architecture that provides multiple customized versions or a core software platform to multiple organizations via a plurality of client tenants. <figref idref="DRAWINGS">FIG. 2</figref> shows a block diagram of a multi-tenant implementation of a software delivery architecture <b>200</b> that includes an application server <b>110</b>, which can in some implementations include multiple server systems <b>204</b> that are accessible over a network <b>206</b> from client machines operated by users at each of multiple organizations <b>210</b>A-<b>210</b>C (referred to herein as &#x201c;client tenants&#x201d; of a multi-tenant computing system) supported by a single software delivery architecture <b>200</b>.</p>
<p id="p-0027" num="0026">For a system in which the application server <b>110</b> includes multiple server systems <b>204</b>, the application server can include a load balancer <b>212</b> to distribute requests and actions from users at the one or more organizations <b>210</b>A-<b>210</b>C to the one or more server systems <b>204</b>. A user can access the software delivery architecture across the network using a thin client, such as for example a web browser or the like, or other portal software running on a client machine. The application server <b>110</b> can access data and data objects stored in one or more data content repositories <b>124</b>.</p>
<p id="p-0028" num="0027">To provide for customization of the core software platform for each of multiple organizations supported by a single software delivery architecture <b>200</b>, the data and data objects stored in the content repository or content repositories <b>124</b> that are accessed by the application server <b>110</b> can include three types of content as shown in <figref idref="DRAWINGS">FIG. 3</figref>: core software platform content <b>302</b>, system content <b>304</b>, and tenant-specific content <b>306</b>. Core software platform content <b>302</b> includes content that represents core functionality and is not modifiable by a client tenant <b>210</b>A-<b>210</b>N. Such content can also be referred to as generic content <b>120</b> as discussed above in regards to <figref idref="DRAWINGS">FIG. 1</figref>. System content <b>304</b> can in some examples be created by the runtime of the core software platform and can include core data objects that are modifiable with data provided by each client tenant <b>210</b>A-<b>210</b>N. Such content can also be characterized as generic content <b>120</b> in that the specific data structures are not customizable by users other than system administrators. Only the data stored in the data structures are modifiable by end users at the organization. For example, if the core software platform is an enterprise resource planning (ERP) system that includes inventory tracking functionality, the system content <b>304</b>A-<b>304</b>N can include data objects for labeling and quantifying inventory. The data retained in these data objects are specific to one client tenant <b>210</b>A-<b>210</b>N, for example, each client tenant <b>210</b>A-<b>210</b>N would store information about its own inventory.</p>
<p id="p-0029" num="0028">Tenant-specific content <b>306</b>A-<b>306</b>N can include data objects or extensions to other data objects that are customized for one specific client tenant <b>210</b>A-<b>210</b>N to reflect business processes and data that are specific to the organization that is assigned to and that uses that specific client tenant <b>210</b>A-<b>210</b>N and are accessible only to authorized users at the organization to which the client tenant <b>210</b>A-<b>210</b>N is assigned. Such data objects can include a key field (for example &#x201c;client&#x201d; in the case of inventory tracking) as well as one or more of master data, business configuration information, transaction data or the like. For example, tenant-specific content <b>306</b> can include condition records in generated condition tables, access sequences, price calculation results, or any other tenant-specific values. A combination of the software platform content <b>302</b> and system content <b>304</b> and tenant content <b>306</b> of a specific tenant are presented to users from that tenant such that each tenant is provided access to a customized solution having data that is available only to users from that tenant.</p>
<p id="p-0030" num="0029">In an implementation of the current subject matter, a method as shown in the process flow chart <b>400</b> of <figref idref="DRAWINGS">FIG. 4</figref> provides for intelligent, automated maintenance of a current set of background jobs in an application server. At <b>402</b>, a background job template <b>104</b> is stored in a background job repository, which as noted above can include multiple background job templates. The background job template <b>104</b> specifies, for example in its template content <b>106</b>, a background job that includes a recurrent, event based, or one (or more) time non-recurrent maintenance task that is executable on or that otherwise affects a customized software platform provided from an application server <b>110</b>. The background job template <b>104</b> can also include metadata defining a purpose of the background job, triggering information indicating when the background job should be executed, and one or more prerequisite features of the customized software platform. The one or more prerequisite features provide a criterion or criteria for determining that the background job is needed in the customized software platform. At <b>404</b>, a previous set of background jobs that run in the customized software platform is updated to a current set of background jobs that run in the customized software platform. The updating includes comparing the previous set of background jobs with the background job template <b>104</b> and including the background job in the current set of background jobs when the customized software platform includes the prerequisite feature. Alternatively, if the previous set includes a background job whose corresponding background job template <b>104</b> includes one or more prerequisite features that are not currently present in the customized software platform, the background job can be deleted in the updating from the previous set to the current set. At <b>406</b>, the background job is executed in the customized software platform according to the triggering information in its corresponding background job template <b>104</b>.</p>
<p id="p-0031" num="0030">In some variations that are within the scope of this disclosure, the template content <b>106</b> of a background job template <b>104</b> can include a background job description that defines execution steps as well as an execution schedule and one or more execution terms of a pre-defined background job that performs one or more background and/or maintenance tasks in a software system that delivers customized solutions to one or more organizations. Execution steps can include the actual procedures that the background job accomplishes when it is executed. An execution schedule for a background job can include recurrence information as well as scheduling exclusions. Recurrence information can specify how to schedule a background job. The date and time information can be explicitly modeled as a specific time, as a recurrence value (for example &#x201c;Every 2 Days&#x201d;), based on the occurrence of a triggering event in a tenant or system, or as a call from a predecessor job. A list of potential events can be pre-modeled as well so that a background job template can simply refer to a pre-defined event name. The event can be triggered by any piece of an application or system program. Events can include, but are not limited to system shutdown or startup, update or upgrade of software on a system, a status change of a specific application or object, reaction to a user input (such as for example a changed password, creation of an order, etc.).</p>
<p id="p-0032" num="0031">A scheduling exclusion can define exceptions based on factors such as one or more system roles, tenant roles, landscape roles, and the like in which the background job should not be scheduled. A system role can define a main application, for example the core software package discussed elsewhere in this disclosure, that is running on a software system. For example, system roles can refer to those functions of the software system that are tenant-independent or those that could be characterized as a &#x201c;pure&#x201d; aspect of the core software platform. For example, in the case of a Netweaver&#x2122; installation (available from SAP AG of Walldorf Germany), system roles can be characterized as those attributable to a &#x201c;pure Netweaver system.&#x201d; Similarly, in a ByDesign&#x2122; installation (also available from SAP AG of Walldorf Germany), system roles can be characterized as those attributable to a &#x201c;pure ByDesign system.&#x201d; In other examples, a customized, standalone installation of an enterprise resource planning software or any other kind of specific add-on installation of a comparable software system can have system roles as discussed herein. A tenant role can generally refer to roles that are specific to a certain tenant of a multi-tenant system. For example, an administration tenant can be a tenant that is not used by customers but instead by a system administrator or by a third-party service provider that provides an external software solution that is wholly or partly integrated with a core software platform. Template master tenants can be used to build new customer tenants by copying the master template. Other tenants that have tenant roles can include productive customer tenants, development tenants that can in some examples be used for development of add-on software, test tenants that can be used by a customer to try out new features or new configurations on a copy of his/her productive tenant and production data, and trial tenants for prospective customers to sample the available features of the customizable software architecture. A landscape role can facilitate distinguishing a system used by a developer to develop the core software platform. One landscape role can be a trial system used for software and development validation by test and validation teams. Another can be a real production system landscape having tenants and systems for real customers.</p>
<p id="p-0033" num="0032">Execution terms can include one or more roles and/or system characteristics as well as other job settings required to schedule a background job. For example, a background job can be designated for execution only in a productive tenant or only in a test tenant, or to have as its triggering event the completion by a predecessor background job of its execution. The completion of execution by the predecessor job can be include a successful execution of the task or tasks defined in the predecessor job or as a result of the predecessor job being aborted prior to completion, for example because of a failure in one or more or its defined tasks. A background job whose triggering event includes the completion of a predecessor job can include flags that define whether successful or unsuccessful completion of the tasks of the predecessor job is relevant to whether the background job should be executed.</p>
<p id="p-0034" num="0033">Put another way, in optional variations, the background job template can include details pertaining to one or more of what should be executed. Examples of what should be executed can include the name of the program, variant, metadata object or business object, executable routine or scripts, or the like that are to be executed and one or more pre-defined parameters for the same. A variant can include a pre-definition of start parameters for an ABAP program. In this manner, the background job templates stored in the background job repository can include all of the information necessary to ensure that a background job to be scheduled automatically does not require any manual user input to run. Rather, all parameters of the program, etc. can be provided as parameters as part of the &#x201c;what to execute&#x201d; description, for example by listing the name of an ABAP program variant or by adding name-value lists for input parameters where the value actually could be either a static or a fixed default value or a reference to a calculation rule.</p>
<p id="p-0035" num="0034">The background job template can also specify when the background job designated by the background job template should be executed (for example periodically in a defined interval, after one or more specific system events, as a call from another background job, or the like). One or more prerequisite features to apply the background job template can also be specified by the background job template. These prerequisite features can include, but are not limited to, system attributes (for example whether the system includes an unmodified version of the core software platform or one or more customizations or features available from an add-on or other third-party system), tenant attributes (for example whether the tenant is a test, productive, or trial tenant or the like), specific applications that are within the scope of the customized software solution supplied to the organization (for example which functionality the has been selected by the organization), and the like. The scope of the customized software solution can in some examples be described in the template abstract with reference to entities such as process components, business objects, business process variants, business features (which can in some examples include a configuration switch or flag), and the like, that bind a scope dependency of a background job template to one or more defined application entities. Thus, if the application entity referred to as a prerequisite feature in the background job template content is enabled in the scoping of a customized instance of the software platform (in scoping), the background job referenced by the background job template can be enabled for that customized installation. One or more scope dependency logical statements can be combined as an expression of prerequisite features for enablement of a background job defined by a background job template.</p>
<p id="p-0036" num="0035">According to one or more implementations, the customized software platform can be monitored, either semi-continuously, periodically, at system start-up or shutdown, or the like. The monitoring can include determining the consistency of those background jobs that are actually running in the architecture with the background job templates in the background job repository that have prerequisite features and/or other features indicating that they should be included in the architecture.</p>
<p id="p-0037" num="0036">The background job template for each background job can be employed as an additional source of information for support in case a running job experiences an error or otherwise encounters or creates a trouble condition. For example, one or more attributes that indicate an error or trouble condition can be specified by the background job template. Such attributes can include, for example, total time, number of processor cycles, or the like that are expected to complete an execution of the background job; requirement for an automatic restart after failure of the background job to fully execute; and the like.</p>
<p id="p-0038" num="0037">A background job template can also provide one or more details of activation and re-activation events that can be used to trigger execution of the corresponding background job. Examples of activation or re-activation events can include, but are not limited to, after installation of new software, after system software changes such as upgrades or updates (such upgrade or update changes can optionally be referred to as &#x201c;after-import&#x201d;), after changes of selected application scope (such scope changes can optionally be referred to as &#x201c;after-deployment&#x201d;), after changes of one or more key tenant attributes (for example after moving or copying of a tenant)</p>
<p id="p-0039" num="0038">In a multi-tenant system that supports multiple client tenants on a single application server (which can optionally include multiple processors joined by a load balancer), background jobs can be scheduled in different ways in the client tenants based on agreement of each specific client tenant with the prerequisite features (for example tenant attributes, scope selection, and other examples as discussed above) specified in each background job template in the background job repository. Background jobs can optionally be temporally distributed, such as for example with a time offset or the like, so that not all jobs are running in all client tenants at exactly the time specified in the background job template. A background job template can optionally include a different delay that is used depending on an identification label for each client tenant.</p>
<p id="p-0040" num="0039">In an illustrative example, if the client tenants are labeled with assigned Arabic numerals, a background job template can specify that odd numbered client tenants use a 2 minute (or some other period of time) delay for execution of the specified background job while even numbered tenants use no delay. A background job template can be created or modified directly in an application software system, for example either locally or via remote access and either for all tenants or for a specific tenant. Alternatively, a background job template can be created or edited by one or more software developers in a development system or development repository for inclusion as part of a software delivery process. For example, a new or edited background job template can be automatically added as part of a software installation. During a software change such as an updates, upgrade, or the like, one or more additional background job templates can be added, and existing background job templates can be removed or changed. The background job repository and its job repository manager can be integrated into installation, upgrade, update, and the like processes so that the job repository manager can automatically analyze the background job templates provided by the software manufacturer and decide to adopt the job scheduling of the system or tenant accordingly. In a multi-tenant system, the prerequisite feature can optionally include one or more of a first attribute of the core software platform, a second attribute of a specific client tenant of the plurality of client tenants, and a tenant-specific scope of functionality provided to the organization by a specific client tenant of the plurality of client tenants.</p>
<p id="p-0041" num="0040">In some implementations, a change of job scheduling can always be related to receipt of a job template, such as for example via delivery of a software update, upgrade, new installation, or the like. Such a delivery process can support or include the tasks of changing an existing background job template and adopt background job scheduling as well as deleting a background job template and, as a follow-up, immediately removing the scheduled background job or jobs corresponding to the deleted background job template.</p>
<p id="p-0042" num="0041">The subject matter described herein can be embodied in systems, apparatus, methods, and/or articles depending on the desired configuration. In particular, various implementations of the subject matter described herein can be realized in digital electronic circuitry, integrated circuitry, specially designed application specific integrated circuits (ASICs), computer hardware, firmware, software, and/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which can be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.</p>
<p id="p-0043" num="0042">These computer programs, which can also be referred to programs, software, software applications, applications, components, or code, include machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the term &#x201c;machine-readable medium&#x201d; refers to any computer program product, apparatus and/or device, such as for example magnetic discs, optical disks, memory, and Programmable Logic Devices (PLDs), used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term &#x201c;machine-readable signal&#x201d; refers to any signal used to provide machine instructions and/or data to a programmable processor. The machine-readable medium can store such machine instructions non-transitorily, such as for example as would a non-transient solid state memory or a magnetic hard drive or any equivalent storage medium. The machine-readable medium can alternatively or additionally store such machine instructions in a transient manner, such as for example as would a processor cache or other random access memory associated with one or more physical processor cores.</p>
<p id="p-0044" num="0043">To provide for interaction with a user, the subject matter described herein can be implemented on a computer having a display device, such as for example a cathode ray tube (CRT) or a liquid crystal display (LCD) monitor for displaying information to the user and a keyboard and a pointing device, such as for example a mouse or a trackball, by which the user may provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well. For example, feedback provided to the user can be any form of sensory feedback, such as for example visual feedback, auditory feedback, or tactile feedback; and input from the user may be received in any form, including, but not limited to, acoustic, speech, or tactile input. Other possible input devices include, but are not limited to, touch screens or other touch-sensitive devices such as single or multi-point resistive or capacitive trackpads, voice recognition hardware and software, optical scanners, optical pointers, digital image capture devices and associated interpretation software, and the like.</p>
<p id="p-0045" num="0044">The subject matter described herein can be implemented in a computing system that includes a back-end component, such as for example one or more data servers, or that includes a middleware component, such as for example one or more application servers, or that includes a front-end component, such as for example one or more client computers having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described herein, or any combination of such back-end, middleware, or front-end components. A client and server are generally, but not exclusively, remote from each other and typically interact through a communication network, although the components of the system can be interconnected by any form or medium of digital data communication. Examples of communication networks include, but are not limited to, a local area network (&#x201c;LAN&#x201d;), a wide area network (&#x201c;WAN&#x201d;), and the Internet. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.</p>
<p id="p-0046" num="0045">The implementations set forth in the foregoing description do not represent all implementations consistent with the subject matter described herein. Instead, they are merely some examples consistent with aspects related to the described subject matter. Although a few variations have been described in detail above, other modifications or additions are possible. In particular, further features and/or variations can be provided in addition to those set forth herein. For example, the implementations described above can be directed to various combinations and subcombinations of the disclosed features and/or combinations and subcombinations of several further features disclosed above. In addition, the logic flows depicted in the accompanying figures and/or described herein do not necessarily require the particular order shown, or sequential order, to achieve desirable results. Other implementations may be within the scope of the following claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer program product comprising a non-transitory machine-readable medium storing instructions that, when executed by at least one processor, cause the at least one processor to perform operations comprising:
<claim-text>storing a background job template in a background job repository, the background job template specifying a background job comprising:
<claim-text>a maintenance task executable by a customized software platform provided by an application server,</claim-text>
<claim-text>metadata defining a purpose of the background job,</claim-text>
<claim-text>triggering information indicating when the background job should be executed, and</claim-text>
<claim-text>at least one prerequisite feature of the customized software platform indicating a need for the background job in the customized software platform;</claim-text>
</claim-text>
<claim-text>updating to a current set of background jobs executable in the customized software platform, the updating comprising comparing a previous set of background jobs executing in the customized software platform with the background job template and including the background job in the current set of background jobs when the customized software platform includes the at least one prerequisite feature; and</claim-text>
<claim-text>executing the background job in the customized software platform according to the triggering information in the background job template.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. A computer program product as in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the operations further comprise:
<claim-text>receiving, as part of an new software installation or a change to an existing software installation at the application server, at least one of a second background job template and a change to the background job template; and</claim-text>
<claim-text>performing at least one of storing the second background job template in the background job repository, and making the change to the background job template in the background job repository.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. A computer program product as in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the operations further comprise:
<claim-text>periodically monitoring the customized software platform to determine whether changes to the customized software platform have resulted in the customized software platform no longer having the at least one prerequisite feature or have resulted in the customized software platform having a second prerequisite feature of a second background job template specifying a second background job that is not part of the current set;</claim-text>
<claim-text>removing the background job from the current set if the customized software platform no longer has the at least one prerequisite feature; and</claim-text>
<claim-text>adding the second background job to the current set if the customized software platform has the second prerequisite feature.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. A computer program product as in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the customized software platform is provided via a client tenant of a plurality of client tenants of a multi-tenant software architecture implemented on the application server, the application server being accessible over a network from a plurality of organizations that are each provided access to one of the plurality of client tenants, at least one of the plurality of client tenants comprising different functionality than the customized software platform.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. A computer program product as in <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the application server accesses at least one data repository that comprises:
<claim-text>core software platform content relating to the operation of the multi-tenant software architecture, the core software content being common to all of the plurality of tenants and unmodifiable by users at the organizations;</claim-text>
<claim-text>system content comprising data objects created in runtime by the multi-tenant software architecture that are modifiable with data provided by a corresponding tenant; and</claim-text>
<claim-text>tenant-specific content including data objects or extensions to data objects that are customized for a corresponding tenant, wherein data objects or extensions to data objects of a particular tenant are not available to other tenants.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A computer program product as in <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the prerequisite feature comprises at least one of a first attribute of the core software platform, a second attribute of a specific client tenant of the plurality of client tenants, and a tenant-specific scope of functionality provided to the organization by a specific client tenant of the plurality of client tenants.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A computer program product as in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the background job template comprises an execution step for the background job as well as an execution schedule and an execution term for the background job.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A computer program product as in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the operations further comprise:
<claim-text>receiving a new background job template for addition to the background job repository, the receiving being associated with an installation of new functionality in the customized software platform or with an update or upgrade to the customized software platform; and</claim-text>
<claim-text>updating the current set of background jobs running in the customized software platform to a new current set of background jobs running in the customized software platform such that the new set includes a new background job defined by the new template if the customized software platform includes a new prerequisite feature that the new background job template comprises.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A computer-implemented method comprising:
<claim-text>storing a background job template in a background job repository that comprises a non-transitory computer-readable storage medium, the background job template specifying a background job comprising:
<claim-text>a maintenance task executable by a customized software platform provided by an application server,</claim-text>
<claim-text>metadata defining a purpose of the background job,</claim-text>
<claim-text>triggering information indicating when the background job should be executed, and</claim-text>
<claim-text>at least one prerequisite feature of the customized software platform indicating a need for the background job in the customized software platform;</claim-text>
</claim-text>
<claim-text>updating to a current set of background jobs executable in the customized software platform, the updating comprising comparing a previous set of background jobs executing in the customized software platform with the background job template and including the background job in the current set of background jobs when the customized software platform includes the at least one prerequisite feature; and</claim-text>
<claim-text>executing the background job in the customized software platform according to the triggering information in the background job template.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A computer-implemented method as in <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:
<claim-text>receiving, as part of an new software installation or a change to an existing software installation at the application server, at least one of a second background job template and a change to the background job template; and</claim-text>
<claim-text>performing at least one of storing the second background job template in the background job repository, and making the change to the background job template in the background job repository.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A computer-implemented method as in <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:
<claim-text>periodically monitoring the customized software platform to determine whether changes to the customized software platform have resulted in the customized software platform no longer having the prerequisite feature or have resulted in the customized software platform having a second prerequisite feature of a second background job template specifying a second background job that is not part of the current set;</claim-text>
<claim-text>removing the background job from the current set if the customized software platform no longer has the prerequisite feature; and</claim-text>
<claim-text>adding the second background job to the current set if the customized software platform has the second prerequisite feature.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A computer-implemented method as in <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the customized software platform is provided via a client tenant of a plurality of client tenants of a multi-tenant software architecture implemented on the application server, the application server being accessible over a network from a plurality of organizations that are each provided access to one of the plurality of client tenants, at least one of the plurality of client tenants comprising different functionality than the customized software platform.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A computer-implemented method as in <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the application server accesses at least one data repository that comprises:
<claim-text>core software platform content relating to the operation of the multi-tenant software architecture, the core software content being common to all of the plurality of tenants and unmodifiable by users at the organizations;</claim-text>
<claim-text>system content comprising data objects created in runtime by the multi-tenant software architecture that are modifiable with data provided by a corresponding tenant; and</claim-text>
<claim-text>tenant-specific content including data objects or extensions to data objects that are customized for a corresponding tenant, wherein data objects or extensions to data objects of a particular tenant are not available to other tenants.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. A computer-implemented method as in <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the prerequisite feature comprises at least one of a first attribute of the core software platform, a second attribute of a specific client tenant of the plurality of client tenants, and a tenant-specific scope of functionality provided to the organization by a specific client tenant of the plurality of client tenants.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A computer-implemented method as in <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the background job template comprises an execution step for the background job as well as an execution schedule and an execution term for the background job.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A computer-implemented method as in <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:
<claim-text>receiving a new background job template for addition to the background job repository, the receiving being associated with an installation of new functionality in the customized software platform or with an update or upgrade to the customized software platform; and</claim-text>
<claim-text>updating the current set of background jobs running in the customized software platform to a new current set of background jobs running in the customized software platform such that the new set includes a new background job defined by the new template if the customized software platform includes a new prerequisite feature that the new background job template comprises.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. A system comprising:
<claim-text>computer hardware comprising at least one programmable processor; and</claim-text>
<claim-text>a machine-readable medium storing instructions that, when executed by the at least one programmable processor, cause the at least one programmable processor to perform operations comprising:</claim-text>
<claim-text>storing a background job template in a background job repository, the background job template specifying a background job comprising:
<claim-text>a maintenance task executable by a customized software platform provided by an application server,</claim-text>
<claim-text>metadata defining a purpose of the background job,</claim-text>
<claim-text>triggering information indicating when the background job should be executed, and</claim-text>
<claim-text>at least one prerequisite feature of the customized software platform indicating a need for the background job in the customized software platform;</claim-text>
</claim-text>
<claim-text>updating to a current set of background jobs executable in the customized software platform, the updating comprising comparing a previous set of background jobs executing in the customized software platform with the background job template and including the background job in the current set of background jobs when the customized software platform includes the at least one prerequisite feature; and</claim-text>
<claim-text>executing the background job in the customized software platform according to the triggering information in the background job template.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. A system as in <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the operations further comprise:
<claim-text>receiving, as part of an new software installation or a change to an existing software installation at the application server, at least one of a second background job template and a change to the background job template; and</claim-text>
<claim-text>performing at least one of storing the second background job template in the background job repository, and making the change to the background job template in the background job repository.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. A system as in <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the operations further comprise:
<claim-text>periodically monitoring the customized software platform to determine whether changes to the customized software platform have resulted in the customized software platform no longer having the prerequisite feature or have resulted in the customized software platform having a second prerequisite feature of a second background job template specifying a second background job that is not part of the current set;</claim-text>
<claim-text>removing the background job from the current set if the customized software platform no longer has the prerequisite feature; and</claim-text>
<claim-text>adding the second background job to the current set if the customized software platform has the second prerequisite feature.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. A system as in <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the operations further comprise:
<claim-text>receiving a new background job template for addition to the background job repository, the receiving being associated with an installation of new functionality in the customized software platform or with an update or upgrade to the customized software platform; and</claim-text>
<claim-text>updating the current set of background jobs running in the customized software platform to a new current set of background jobs running in the customized software platform such that the new set includes a new background job defined by the new template if the customized software platform includes a new prerequisite feature that the new background job template comprises. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
