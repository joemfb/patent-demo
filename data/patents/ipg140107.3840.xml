<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08624907-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08624907</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12459265</doc-number>
<date>20090626</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>421</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>T</subclass>
<main-group>1</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>T</subclass>
<main-group>1</main-group>
<subgroup>60</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>345522</main-classification>
<further-classification>345501</further-classification>
<further-classification>345520</further-classification>
<further-classification>345581</further-classification>
</classification-national>
<invention-title id="d2e53">Graphics analysis techniques</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6594387</doc-number>
<kind>B1</kind>
<name>Pettitt et al.</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382167</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6891533</doc-number>
<kind>B1</kind>
<name>Alcorn et al.</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7095416</doc-number>
<kind>B1</kind>
<name>Johns et al.</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345522</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7660015</doc-number>
<kind>B2</kind>
<name>Kagawa et al.</name>
<date>20100200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  19</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2005/0134605</doc-number>
<kind>A1</kind>
<name>Hoppe et al.</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2005/0195198</doc-number>
<kind>A1</kind>
<name>Anderson et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2007/0242085</doc-number>
<kind>A1</kind>
<name>Weybrew et al.</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345629</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2008/0007563</doc-number>
<kind>A1</kind>
<name>Aronson et al.</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2008/0034311</doc-number>
<kind>A1</kind>
<name>Aguaviva et al.</name>
<date>20080200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2008/0141131</doc-number>
<kind>A1</kind>
<name>Cerny et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715716</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2009/0037774</doc-number>
<kind>A1</kind>
<name>Rideout et al.</name>
<date>20090200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2010/0289809</doc-number>
<kind>A1</kind>
<name>Fenney</name>
<date>20101100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345581</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>JP</country>
<doc-number>10-021122</doc-number>
<date>19980100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>JP</country>
<doc-number>2008-123488</doc-number>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>JP</country>
<doc-number>2009-020610</doc-number>
<date>20090100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>JP</country>
<doc-number>2009-070371</doc-number>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00017">
<othercit>Plus Search Results for U.S. Appl. No. 12/459,267, Searched Thu Apr. 21, 15:10:51 EDT 2011, 2 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00018">
<othercit>Examination Report, GB Patent No. 1007881.4, Nov. 24, 2011, www.ipo.gov.uk, 3 Pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00019">
<othercit>&#x201c;Intel Graphics Performance Analyzer 2.0&#x201d;, iXBT Labs: Computer Hardware in Detail, http://web.archive.org/web/20090428105725/http:/ixbtlabs.com/articles3/video/gpa-p., Nov. 2011.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00020">
<othercit>&#x201c;Intel Graphics Performance Analyzer 2.0&#x201d;, iXBT Labs:Computer Hardware in Detail, http://web.archive.org/web/20090428105701/http:/ixbtlabs.com/articles3/video/gpa-p., Nov. 2011.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00021">
<othercit>&#x201c;Intel Graphics Performance Analyzer 2.0&#x201d;, iXBT Labs:Computer Hardware in Detail, http://ixbtlabs.com/articles3/video/gpa-p1.html, Jul. 29, 2010.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00022">
<othercit>&#x201c;Intel Graphics Performance Analyzer 2.0&#x201d;, iXBT Labs:Computer Hardware in Detail, http://ixbtlabs.com/articles3/video/gpa-p2.html, Jul. 29, 2010.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00023">
<othercit>&#x201c;Intel Graphics Performance Analyzer 2.0&#x201d;, iXBT Labs:Computer Hardware in Detail, http://ixbtlabs.com/articles3/video/gpa-p3.html, Jul. 29, 2010.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>18</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>345501</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345520</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345522</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345581</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>10</number-of-drawing-sheets>
<number-of-figures>10</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20100328324</doc-number>
<kind>A1</kind>
<date>20101230</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Wickstrom</last-name>
<first-name>Lawrence</first-name>
<address>
<city>Portland</city>
<state>OR</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Cormack</last-name>
<first-name>Christopher J.</first-name>
<address>
<city>Hillsboro</city>
<state>OR</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Wickstrom</last-name>
<first-name>Lawrence</first-name>
<address>
<city>Portland</city>
<state>OR</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Cormack</last-name>
<first-name>Christopher J.</first-name>
<address>
<city>Hillsboro</city>
<state>OR</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Blakely, Sokoloff, Taylor &#x26; Zafman LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Intel Corporation</orgname>
<role>02</role>
<address>
<city>Santa Clara</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Wu</last-name>
<first-name>Xiao M.</first-name>
<department>2678</department>
</primary-examiner>
<assistant-examiner>
<last-name>Buttram</last-name>
<first-name>Todd</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Embodiments provide techniques for the analysis of graphics applications. For instance, an apparatus may include a graphics application program interface (API), a graphics engine, and a graphics analysis tool. The graphics analysis tool may receive multiple draw calls issued to the graphics API, and arrange the draw calls into multiple sequences, each sequence corresponding to a particular render target. From this information various analysis tasks may be performed. For instance, overdraw images may be generated. Such overdraw images may be enhanced to improve their dynamic range. Also, pixel histories may be generated based on corresponding pixel selections. The effect of draw calls on selected pixels may also be determined. Further, such tasks may be performed on a per render target basis.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="161.63mm" wi="214.38mm" file="US08624907-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="175.94mm" wi="176.61mm" orientation="landscape" file="US08624907-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="200.41mm" wi="188.30mm" orientation="landscape" file="US08624907-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="213.70mm" wi="174.50mm" orientation="landscape" file="US08624907-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="216.92mm" wi="168.66mm" orientation="landscape" file="US08624907-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="158.92mm" wi="176.78mm" orientation="landscape" file="US08624907-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="234.87mm" wi="186.61mm" orientation="landscape" file="US08624907-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="133.77mm" wi="167.64mm" orientation="landscape" file="US08624907-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="138.43mm" wi="167.39mm" orientation="landscape" file="US08624907-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="228.94mm" wi="183.39mm" orientation="landscape" file="US08624907-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="120.90mm" wi="134.87mm" orientation="landscape" file="US08624907-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">The graphics employed by computer applications are becoming increasingly complex. For example, gaming applications commonly provide three-dimensional graphics that are animated on a real-time basis. Such graphics continue to become progressively more realistic.</p>
<p id="p-0003" num="0002">As the intricacy of such graphics increases, so does the challenge for application developers. For instance, developers must debug graphics renderings that do not operate or appear correctly. Also, developers must deal with limited processing capacities. Therefore, the processing loads imposed by graphics renderings need to be analyzed and often improved to fit within such limited capacities.</p>
<p id="p-0004" num="0003">Tools to test, analyze, and debug graphics are important for the development of graphics applications.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0002" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0005" num="0004">In the drawings, like reference numbers generally indicate identical, functionally similar, and/or structurally similar elements. The drawing in which an element first appears is indicated by the leftmost digit(s) in the reference number. The present invention will be described with reference to the accompanying drawings, wherein:</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram of an exemplary operational environment;</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 2</figref> is a diagram of an implementation that may be included in a graphics analysis tool;</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram of an exemplary user interface;</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIGS. 4-9</figref> are logic flow diagrams; and</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 10</figref> is a diagram of an exemplary platform.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0003" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0011" num="0010">Embodiments provide techniques for the analysis of graphics applications. For instance, an apparatus may include a graphics application program interface (API), a graphics engine, and a graphics analysis tool. The graphics analysis tool may receive multiple draw calls issued to the graphics API, and arrange the draw calls into multiple sequences, each sequence corresponding to a particular render target. From this information various analysis tasks may be performed. For instance, overdraw images may be generated. Also, pixel histories may be generated based on corresponding pixel selections. Further, the effect of draw calls on selected pixels may also be determined. Moreover, such tasks may be performed on a per render target basis.</p>
<p id="p-0012" num="0011">Reference throughout this specification to &#x201c;one embodiment&#x201d; or &#x201c;an embodiment&#x201d; means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment. Thus, appearances of the phrases &#x201c;in one embodiment&#x201d; or &#x201c;in an embodiment&#x201d; in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram of an exemplary operational environment <b>100</b>, which may employ the techniques described herein. Environment <b>100</b> may include various elements. For instance, <figref idref="DRAWINGS">FIG. 1</figref> shows environment <b>100</b> including a graphics application <b>102</b>, a graphics application program interface (API) <b>104</b>, a graphics engine <b>106</b>, and a graphics analysis tool <b>110</b>. These elements may be implemented in any combination of hardware and/or software. Moreover, embodiments are not limited to the elements of <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0014" num="0013">In embodiments, graphics application <b>102</b> is a computer application (e.g., a user application) that employs graphics (e.g., three-dimensional graphics) that are output on one or more displays. Exemplary user applications include (but are not limited to) video games and simulation tools.</p>
<p id="p-0015" num="0014">Graphics API <b>104</b> provides graphics application <b>102</b> with services of graphics engine <b>106</b>. In embodiments, this may be provided through various routines, data structures, object classes, and/or protocols. Such employments of graphics API <b>104</b> are referred to herein as &#x201c;draw calls&#x201d;. Embodiments may employ (but are not limited to) commercially available APIs. Examples of such APIs include OpenGL, DirectX, and others.</p>
<p id="p-0016" num="0015">In general operation, graphics application <b>102</b> may employ multiple render targets in the generation of graphics. A render target is a buffer (maintained by graphics engine <b>106</b>) affected by drawing operations that graphics application <b>102</b> initiates through graphics API <b>104</b>.</p>
<p id="p-0017" num="0016">Multiple render targets may be employed in various ways. For instance, graphics application <b>102</b> may employ multiple render targets in which each render target corresponds to a particular effect. Exemplary effects include (but are not limited to) shadowing, fog, lighting, blurring associated with motion, and so forth. Additionally or alternatively, each of multiple render targets may correspond one or more rendered objects or primitives. Embodiments, however, are not limited to these exemplary uses of render targets.</p>
<p id="p-0018" num="0017">Graphics engine <b>106</b> performs graphics operations for graphics application <b>102</b>. As described above, such operations may be performed in response to draw calls received and processed through graphics API <b>104</b>. Exemplary operations include rendering and outputting images (frames) to a display device. Thus, graphics engine <b>106</b> employs a graphics pipeline. As described above, graphics engine <b>106</b> may be implemented in any combination of hardware and/or software. Thus, in embodiments, graphics engine <b>106</b> includes a graphics processing unit (GPU).</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 1</figref> shows that graphics analysis tool <b>110</b> is coupled to both graphics API <b>104</b> and graphics engine <b>106</b>. Graphics analysis tool <b>110</b> may perform operations involving the analysis of graphics applications. To do this, graphics analysis tool <b>110</b> may obtain draw calls made by graphics application <b>102</b>. Based on such draw calls, graphics analysis tool <b>110</b> may utilize graphics engine <b>106</b> to generate operational information regarding the draw calls. Such information may include (but is not limited to) overdraw images and pixel histories.</p>
<p id="p-0020" num="0019">Also, graphics analysis tool <b>110</b> may obtain (or capture) frames rendered by graphics engine <b>106</b>. Also, graphics analysis tool <b>110</b> may obtain draw calls related to such captured frames. Moreover, graphics analysis tool <b>110</b> may control the rate at which frames corresponding to application <b>102</b> are generated. Through such control, frames may be stepped through at a desired pace. Such a pace may be established by a user.</p>
<p id="p-0021" num="0020">As described above with reference to <figref idref="DRAWINGS">FIG. 1</figref>, graphics analysis tool <b>110</b> may perform operations involving the analysis of graphics applications. <figref idref="DRAWINGS">FIG. 2</figref> is a diagram of an exemplary implementation <b>200</b> that may be included in graphics analysis tool <b>110</b>. <figref idref="DRAWINGS">FIG. 2</figref> shows implementation <b>200</b> including a graphics API interceptor module <b>202</b>, a graphics API call log database <b>204</b>, a reconstruction module <b>206</b>, an overdraw analysis module <b>207</b>, pixel history analysis module <b>208</b>, a playback module <b>210</b>, and a user interface module <b>212</b>. These elements may be implemented in any combination of hardware and/or software.</p>
<p id="p-0022" num="0021">Graphics API interceptor module <b>202</b> copies graphics API operations (referred to herein as draw calls) that a graphics application (such as graphics application <b>102</b>) generates. Further, graphics API interceptor module <b>202</b> forwards the copied draw calls to graphics API call log database <b>204</b>. In turn, graphics API call log database <b>204</b> stores these received draw calls.</p>
<p id="p-0023" num="0022">Graphics API call log database <b>204</b> may store received draw calls in various ways. For example, graphics API call log database <b>204</b> may store draw calls chronologically. Further, such chronological storage may be arranged by draw calls for each of multiple render targets.</p>
<p id="p-0024" num="0023">Reconstruction module <b>206</b> may generate various images (frames) based on draw calls stored in API call log database <b>204</b>. Such reconstructions involve the employment of a graphics engine, such as graphics engine <b>106</b>. Moreover, in generating such images, reconstruction module <b>206</b> may direct the graphics engine to employ certain settings. For example, setting may be altered so that render images indicate the number of particular events (e.g., overdraws) that occurred. Also, reconstruction module <b>206</b> may activate or deactivate various pipeline tests within the graphics engine.</p>
<p id="p-0025" num="0024">Overdraw analysis module <b>207</b> determines (on a per render target basis) overdraws associated with particular draw calls. This may involve directing reconstruction module <b>206</b> to generate various overdraw images based selected (either user selected or automatically selected) draw calls and render targets. Exemplary operations regarding such features are described below with reference to <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0026" num="0025">Pixel history analysis module <b>208</b> determines a sequence of draw calls that cause a pixel to be written to (&#x201c;touched&#x201d;). This may involve directing reconstruction module <b>206</b> to generate particular images in accordance with various settings. Exemplary operations regarding such features are described below with reference to <figref idref="DRAWINGS">FIGS. 5</figref>, <b>6</b>, and <b>7</b>.</p>
<p id="p-0027" num="0026">User interface module <b>210</b> provides for user interaction with graphics analysis tool <b>110</b>. For instance, in embodiments, user interface module <b>210</b> provides a graphical user interface that provides for efficient user operation of the techniques described herein.</p>
<p id="p-0028" num="0027">Frame storage module <b>212</b> stores one or more frames (images) generated by a graphics engine (e.g., graphics engine <b>106</b>). These frames comprise multiple pixels corresponding to positions that may be output on a display device (not shown). The frames may be in various formats. Exemplary formats include (but are not limited to) various RGB and CMYK formats. Also, frame capture database <b>108</b> may employ various compression and or encoding schemes to store frame(s).</p>
<p id="p-0029" num="0028">In embodiments, these frames may be generated in accordance with techniques described herein. For instance, frame storage module <b>212</b> may store frames generated through normal operation of application <b>102</b>, graphics API <b>104</b>, and graphics engine <b>106</b>. Also, frame storage module <b>212</b> may store frames comprising overdraw image frames, pixel history frames, and other types of frames.</p>
<p id="p-0030" num="0029">Embodiments provide a user interface that displays graphics-related information to a user. <figref idref="DRAWINGS">FIG. 3</figref> is a diagram of an exemplary user interface (also referred to as an interface console) <b>300</b>. Interface console <b>300</b> allows for a user to view various information associated with graphics operations. As shown in <figref idref="DRAWINGS">FIG. 3</figref>, interface console <b>300</b> includes a draw call field <b>302</b>, a render target field <b>304</b>, an image rendering field <b>306</b>, and a pixel history field <b>308</b>.</p>
<p id="p-0031" num="0030">Render target field <b>304</b> indicates multiple render targets associated with a particular image. In embodiments, such render targets may be indicated as icons or other graphical representations. A user may select a particular draw call through GUI interaction (e.g., by cursor positioning and double clicking).</p>
<p id="p-0032" num="0031">In embodiments, draw call field <b>302</b> indicates draw calls (e.g., draw calls corresponding to a render target selected at field <b>304</b>) in a chronological (e.g., from left to right) bar chart form. Thus, each bar corresponds to a particular draw call. Moreover, the height of each bar indicates the number of graphics engine operations (e.g., pipeline operations) caused by the corresponding draw call. In embodiments, a user may select a particular draw call through GUI interaction (e.g., by cursor positioning and double clicking).</p>
<p id="p-0033" num="0032">Based on a selected draw call, the user may view an overdraw image in image rendering field <b>306</b>. Features involving overdraw images are described below with reference to <figref idref="DRAWINGS">FIG. 4</figref>. From such overdraw images, the user may select a particular pixel for analysis. From such pixel selections, pixel history images may be displayed in image rendering field <b>306</b>. Moreover, a corresponding pixel history of draw calls may be displayed in pixel history field <b>308</b>. Exemplary details regarding pixel histories are provided below with reference to <figref idref="DRAWINGS">FIGS. 5-7</figref>.</p>
<p id="p-0034" num="0033">Operations for various embodiments may be further described with reference to the following figures and accompanying examples. Some of the figures may include a logic flow. Although such figures presented herein may include a particular logic flow, it can be appreciated that the logic flow merely provides an example of how the general functionality described herein may be implemented. Further, the given logic flow does not necessarily have to be executed in the order presented unless otherwise indicated. In addition, the given logic flow may be implemented by a hardware element, a software element executed by one or more processors, or any combination thereof. Embodiments are not limited to this context.</p>
<p id="p-0035" num="0034">Embodiments provide various techniques for analyzing graphics applications. Such techniques involve the analysis of overdraws, pixel histories, draw calls, and so forth. Further, such techniques may employ alternate image reconstructions and representations.</p>
<p id="p-0036" num="0035">These alternate reconstructions and representations may advantageously allow performance-relevant information to be more quickly extracted from a graphics scene. An example of such alternate reconstructions and representations involves overdraw analysis being performed on a per render target basis. From this analysis, corresponding pixel histories may be generated. These features may advantageously provide for the extraction of otherwise hidden information from a sequence of graphics operations. An example involving such overdraw analysis and pixel history generation is described below with reference to <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a logic flow <b>400</b>, which may be representative of operations executed by one or more embodiments. This flow is described in the context of <figref idref="DRAWINGS">FIGS. 1 and 2</figref>. However, this flow may be employed in other contexts. Although <figref idref="DRAWINGS">FIG. 4</figref> shows a particular sequence, other sequences may be employed. Also, the depicted operations may be performed in various parallel and/or sequential combinations.</p>
<p id="p-0038" num="0037">At a block <b>402</b>, a sequence of graphics API calls (draw calls) is stored. This sequence may correspond to a particular image (frame). In the context of <figref idref="DRAWINGS">FIG. 2</figref>, this may involve API interceptor module <b>202</b> intercepting these draw calls, and graphics API call log database <b>204</b> storing them.</p>
<p id="p-0039" num="0038">At a block <b>404</b>, the stored sequence of API calls is sorted into sequences for each of multiple render targets. With reference to <figref idref="DRAWINGS">FIG. 2</figref>, this may involve reconstruction module <b>206</b> determining render targets from each of the API calls. In embodiments, reconstruction module <b>206</b> may employ a graphics engine (e.g., graphics engine <b>106</b>) to do this.</p>
<p id="p-0040" num="0039">For each of these render target groups, an overdraw image is created at a block <b>406</b>. Referring again to <figref idref="DRAWINGS">FIG. 2</figref>, this may involve reconstruction module <b>206</b> directing a graphics engine (e.g., graphics engine <b>106</b>) to perform draw calls for each of the render targets. However, instead of operating normally, the graphics engine is configured in a way such that pixel values are accumulated. More particularly, the graphics engine may be configured so that draw calls cause corresponding render target pixel values to accumulate (incrementing a pixel hit count) each time they are written to (&#x201c;touched&#x201d;). Thus, in each render target, a count is generated for each pixel. This count indicates how many times the pixel was touched.</p>
<p id="p-0041" num="0040">At a block <b>408</b>, one of the render targets is selected. This selection may be by a user or automatic. In embodiments, this render target may be selected from a listing of multiple render targets provided on a display (e.g., as icons or other graphical representations).</p>
<p id="p-0042" num="0041">At a block <b>409</b>. The overdraw image for the selected render target may be visually enhanced. This enhancement may involve increasing the overdraw image's dynamic range. Details regarding such enhancements are described below with reference to <figref idref="DRAWINGS">FIG. 8</figref>.</p>
<p id="p-0043" num="0042">At a block <b>410</b>, the overdraw image is displayed for the selected render target. As described above, the overdraw images represent the number of times pixels have been touched. In embodiments, these numbers may be represented by pixel brightness in the displayed overdraw image. However, embodiments are not limited to this feature.</p>
<p id="p-0044" num="0043">One or more corresponding pixels of this overdraw image may be selected at a block <b>412</b>. This selection may be by a user or through automatic techniques. User selection may involve interacting with the overdraw image through a graphical user interface (GUI). For example, the user may select the pixel through a cursor, through graphical cross-hairs, through the entry of numerical coordinates, and/or through other techniques. Alternatively, automatic selection may involve automatically selecting pixel(s) based on their overdraw values. For example, pixels indicating the highest number of touches may be automatically selected.</p>
<p id="p-0045" num="0044">At a block <b>414</b>, a pixel history for each of the one or more selected pixels is obtained for the user. The pixel history may comprise each draw call that affected (or caused a writing to) the pixel. In embodiments, these draw calls may be constrained to only those that affect the render target selected at block <b>408</b>. However, embodiments may additionally or alternatively provide corresponding draw calls affecting other render targets.</p>
<p id="p-0046" num="0045">This pixel history may be displayed at a block <b>416</b>. In embodiments, this display may be in the form of a sequence of icons that each represent a draw call. A user may select (e.g., double click) on such an icon to view detailed information regarding the draw call. However, other techniques of displaying pixel histories (e.g., text listings) may be employed.</p>
<p id="p-0047" num="0046">The flow of <figref idref="DRAWINGS">FIG. 4</figref> advantageously provides a direct way to extract information from the most complex pixels in the scene. For example, from the overdraw image displayed at block <b>410</b>, a pixel may be selected that has been touched a relatively large number of times (also referred to as a pixel having a high complexity). As indicated above, such pixels may be made apparent through their displayed brightness.</p>
<p id="p-0048" num="0047">Upon selecting a pixel having high complexity, the user may view the API calls that affected the pixel (the pixel history). Additionally, the user may view a normal representation (not an overdraw representation) of the image. Through analyzing the draw calls, the user may determine whether a more efficient set of API calls can be made. Thus, through the identification of such pixels, developers may improve applications to reduce the number of times pixels are drawn. This may advantageously increase graphics application performance.</p>
<p id="p-0049" num="0048">As described above, embodiments provide for the extraction of information regarding pixels. Also, embodiments may inform users about the number of times draw calls cause pixels to be touched. A single draw call can touch a particular pixel more than once. For instance, a draw call instructing a graphics engine (e.g., graphics engine <b>106</b>) to render a three dimensional object may entail the graphics engine rendering surfaces that have overlapping pixel locations. As an example, a rendered cube may have overlapping front and back sides. Embodiments may (for a particular render target) detect and indicate each time a pixel was touched by a particular draw call. An example involving such features is described below with reference to <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. 5</figref> illustrates a logic flow <b>500</b>, which may be representative of operations executed by one or more embodiments. This flow is described in the context of <figref idref="DRAWINGS">FIGS. 1 and 2</figref>. However, this flow may be employed in other contexts. Although <figref idref="DRAWINGS">FIG. 5</figref> shows a particular sequence, other sequences may be employed. Also, the depicted operations may be performed in various parallel and/or sequential combinations.</p>
<p id="p-0051" num="0050">At a block <b>502</b>, a render target is selected. This selection may be by a user. Alternatively, this selection may be automatic. Also, at a block <b>504</b>, one or more pixels are selected This pixel may be selected in various ways. For example, this pixel may be user selected or automatically selected based overdraws, as described above with reference to <figref idref="DRAWINGS">FIG. 4</figref>. Embodiments, however, are not limited to this context.</p>
<p id="p-0052" num="0051">At a block <b>506</b>, the user selects a draw call corresponding to the selected pixel. For example, the user may select this draw call from multiple draw calls (e.g., a sequence of draw calls) identified in a pixel history, such as a pixel history generated at block <b>414</b> of <figref idref="DRAWINGS">FIG. 4</figref>. Accordingly, if this is the first selection in a sequence, embodiments may designate this as an initially selected draw call at a block <b>507</b>.</p>
<p id="p-0053" num="0052">At this point, information may be determined at a block <b>509</b> regarding the number of times the selected pixel (in the selected render target) was touched. In embodiments, this determination may be for selected draw call. Alternatively, this determination may be for a sequence of draw calls starting with the initial draw call designated at block <b>507</b> and ending with the draw call selected at block <b>506</b>.</p>
<p id="p-0054" num="0053">As shown in <figref idref="DRAWINGS">FIG. 5</figref>, such determinations may involve multiple passes. For example, a first pass may involve performing the draw call(s) without any graphics pipeline tests activated. Also, a second pass may involve the performing the draw call(s) with particular graphics pipeline tests activated. Further, a third pass may involve performing the draw call(s) with alpha blending. These three passes within block <b>509</b> are described for purposes of illustration, and not limitation. Accordingly, embodiments may employ other combinations of passes and/or other sequences. Further details regarding these passes are provided below with reference to <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0055" num="0054">At a block <b>510</b>, a user may select a next draw call. This next draw call may be in a chronological sequence of draw calls that affect the selected pixel in the selected render target. For instance, this next draw call may be a draw call following the draw call that was most recently selected (either at block <b>506</b> or block <b>510</b>). As shown in <figref idref="DRAWINGS">FIG. 5</figref>, if a next draw call is selected, then operation returns to block <b>509</b>.</p>
<p id="p-0056" num="0055">Thus, the features of <figref idref="DRAWINGS">FIG. 5</figref> allow a user select one or more draw calls of interest, and analyze its (or their) impact on particular pixels. Such features advantageously allow a scene's complexity on any pixel of a particular render target to be evaluated. This information may advantageously assist users to decide whether to decrease the complexity of a particular scene or to modify application settings to increase the performance of particular 3D operations.</p>
<p id="p-0057" num="0056">As described above, determinations regarding the number of times a selected pixel (in the selected render target) was touched may be performed in multiple passes. An example, of such multiple passes is provided by <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0058" num="0057">In particular, <figref idref="DRAWINGS">FIG. 6</figref> is a flow diagram <b>600</b> that includes a first pass <b>602</b>, a second pass <b>604</b>, and a third pass <b>606</b>. Each of these passes involves multiple operations. For instance, <figref idref="DRAWINGS">FIG. 6</figref> shows first pass <b>602</b> including blocks <b>610</b>-<b>614</b>. At block <b>610</b>, particular graphics pipeline tests (e.g., scissor test, rectangle test, Z test, stencil test, and/or alpha test) are disabled. At a block <b>612</b>, it is determined how many times the draw call(s) touched the selected pixel while these tests are disabled. This may involve performing the draw call(s) with modified rendering operations. For example, pixel shader code may be modified so that the selected pixel's shading is increased (e.g., incremented by one) each time the pixel is touched by the draw call. Embodiments, however, are not limited to this technique.</p>
<p id="p-0059" num="0058">The results of this determination are output to the user at block <b>614</b>. These results may be outputted graphical form (e.g., displayed at the selected pixel location as a corresponding brightness, shading, or transparency level). Alternatively, these results may be output in text form.</p>
<p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. 6</figref> shows second pass <b>604</b> including blocks <b>620</b>-<b>632</b>. At block <b>620</b>, the user may activate a particular test. For example, the user may activate a ranged scissor test, a z test, or a stencil test. At a block <b>622</b>, it is determined whether a test was selected. If so, operation proceeds to block a <b>624</b>. Otherwise, operation proceeds to a third pass at a block <b>640</b>.</p>
<p id="p-0061" num="0060">At block <b>624</b>, the selected render target is cleared. Following this, the selected test is enabled in the graphics engine at a block <b>626</b>. At a block <b>628</b>, the draw call(s) are performed.</p>
<p id="p-0062" num="0061">The results of these draw call(s) are output to the user at a block <b>630</b>. These results may be outputted graphical form (e.g., displayed at the selected pixel location as a corresponding brightness or transparency level). Alternatively, these results may be output in text form. If the result is zero (no pixel value), this indicates that the selected test failed each time it was invoked. However, if the result is non-zero, then the selected test passed at least one of the times it was invoked.</p>
<p id="p-0063" num="0062">As indicated by a block <b>632</b>, the user may select another test. If so, then operation returns to block <b>620</b>. Otherwise, operation proceeds to the third pass at block <b>640</b>.</p>
<p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. 6</figref> shows the third pass including a block <b>640</b>. At this block, a normal rendering is performed to determine the output color of the pixel.</p>
<p id="p-0065" num="0064">Further to the flow of <figref idref="DRAWINGS">FIG. 6</figref>, various non-limiting illustrative examples are now provided regarding the number of times a pixel has been touched. For instance, the number of &#x201c;touches&#x201d; may be the number of times a rendered geometry intersects the pixel. For instance, when the geometry being rendered is a sphere containing two sided triangles, then the center pixels will have an overdraw count of two: once for front, once for back. (z-test is disabled in this case). Further, if the geometry being rendered is a sphere containing one sided triangles, then center pixels will have an overdraw count of one: once for front, zero for the back (since it was back-face culled. (culling enabled in this case)).</p>
<p id="p-0066" num="0065">Moreover, the number of &#x201c;touches&#x201d; may be the number of times the pixel was actually written to the buffer (discarding the times that the geometry was z-test rejected). For instance, when rendering three triangles above each other from the viewer's perspective, the number of touches would depend upon the draw order. For example, if the furthest is drawn first, then the middle, and then the closest, then the count would be 3 for pixels in which all three triangles overlap. However, if the closest is drawn first, then the middle, and then the furthest, the count would be one for the same pixels. This is because the latter two would have been z-test rejected.</p>
<p id="p-0067" num="0066">As described above, embodiments allow users to determine the effect of draw calls on particular pixels. Further, embodiments allow the disabling of draw calls. For example, a user may disable one or more draw calls and determine the impact of this disabling on pixel processing. Thus, computational differences may be determined. For example, it can be determined whether a scene rendering became faster. Also, the user can determine the visual impact of this disabling on the rendered image. For instance, a user may determine whether disabling the draw call(s) made the scene look unacceptable. An example involving such features is described below with reference to <figref idref="DRAWINGS">FIG. 7</figref>.</p>
<p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. 7</figref> illustrates a logic flow <b>700</b>, which may be representative of operations executed by one or more embodiments. This flow is described in the context of <figref idref="DRAWINGS">FIGS. 1 and 2</figref>. However, this flow may be employed in other contexts. Although <figref idref="DRAWINGS">FIG. 7</figref> shows a particular sequence, other sequences may be employed. Also, the depicted operations may be performed in various parallel and/or sequential combinations.</p>
<p id="p-0069" num="0068">As shown in <figref idref="DRAWINGS">FIG. 7</figref>, a render target is selected at a block <b>702</b>. This selection may be by a user or through automatic techniques. Also, at a block <b>704</b>, a pixel is selected. This pixel may be selected in various ways. For example, the pixel may be user selected or automatically selected, as described above with reference to <figref idref="DRAWINGS">FIG. 4</figref>. Embodiments, however, are not limited to this context.</p>
<p id="p-0070" num="0069">A user selects one or more draw calls to be disabled at a block <b>706</b>. This selection may be from a sequence of draw calls. At a block <b>708</b>, pixel history is determined for the sequence of draw calls. In embodiments, this may involve performing operations described above with reference to <figref idref="DRAWINGS">FIG. 5</figref>. Thus, the number of times a pixel was touched with the disabled draw call(s) may be determined. As described above with reference to <figref idref="DRAWINGS">FIG. 5</figref>, such determinations may be made with various graphics pipeline test(s) (e.g., scissor test, rectangle test, Z test, stencil test, and/or alpha test) activated or deactivated. Because the disabled draw call(s) are not rendered, such tests for subsequent draw calls may have different test outcomes. Thus, disabling draw calls provides a dynamic pixel history.</p>
<p id="p-0071" num="0070">At a block <b>710</b>, an image is rendered for the sequence of draw calls with the selected draw call(s) disabled. This rendered image is displayed to the user at a block <b>712</b>.</p>
<p id="p-0072" num="0071">As described above, embodiments provide overdraw images. Moreover, embodiments, provide the ability to enable or disable any user selected draw call to break down the composition of an overdraw image and more deeply examine the rendered pixels.</p>
<p id="p-0073" num="0072">Overdraw images may contain subtle differences that are hard to visually identify. For example, one region may be slightly darker than a neighboring region (thus indicating a difference in the number of times the regions have been touched). Embodiments may visually enhance these differences. For example, at block <b>409</b> of <figref idref="DRAWINGS">FIG. 4</figref>, an overdraw image is enhanced.</p>
<p id="p-0074" num="0073">Such enhancements may increase an overdraw image's dynamic range. As a result, subtle differences in the overdraw images become significantly easier to see. Various techniques may be employed to provide such increases in dynamic range. For instance, embodiments may employ clamping operations.</p>
<p id="p-0075" num="0074"><figref idref="DRAWINGS">FIG. 8</figref> illustrates a logic flow <b>800</b>, which may be representative of operations executed by one or more embodiments. Although <figref idref="DRAWINGS">FIG. 8</figref> shows a particular sequence, other sequences may be employed. Also, the depicted operations may be performed in various parallel and/or sequential combinations.</p>
<p id="p-0076" num="0075">At a block <b>802</b>, an overdraw image is provided. At a block <b>804</b>, minimum and maximum values in the overdraw image are determined.</p>
<p id="p-0077" num="0076">At a block <b>806</b>, a matrix is generated based on the minimum and maximum values. The overdraw image is then processed with the matrix at a block <b>808</b>. This processing produces an enhanced overdraw image, which may be displayed at a block <b>810</b>.</p>
<p id="p-0078" num="0077">An example of this technique is now provided. This example involves a 5&#xd7;5 matrix. This is standard technique to perform linear operations on image data. Assuming that the pixel values are in the range [0, 255], and the matrix values are floating point scale factors, the following formula is employed:</p>
<p id="p-0079" num="0078">
<maths id="MATH-US-00001" num="00001">
<math overflow="scroll">
<mrow>
  <mrow>
    <mo>[</mo>
    <mtable>
      <mtr>
        <mtd>
          <mi>Or</mi>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mi>Og</mi>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mi>Ob</mi>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mi>Oa</mi>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mn>0</mn>
        </mtd>
      </mtr>
    </mtable>
    <mo>]</mo>
  </mrow>
  <mo>=</mo>
  <mrow>
    <mrow>
      <mo>[</mo>
      <mtable>
        <mtr>
          <mtd>
            <mi>Ir</mi>
          </mtd>
          <mtd>
            <mi>Ig</mi>
          </mtd>
          <mtd>
            <mi>Ib</mi>
          </mtd>
          <mtd>
            <mi>Ia</mi>
          </mtd>
          <mtd>
            <mn>1</mn>
          </mtd>
        </mtr>
      </mtable>
      <mo>]</mo>
    </mrow>
    <mo>&#x2061;</mo>
    <mrow>
      <mo>[</mo>
      <mtable>
        <mtr>
          <mtd>
            <mi>Mrr</mi>
          </mtd>
          <mtd>
            <mi>Mrg</mi>
          </mtd>
          <mtd>
            <mi>Mrb</mi>
          </mtd>
          <mtd>
            <mi>Mra</mi>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mi>Mgr</mi>
          </mtd>
          <mtd>
            <mi>Mgb</mi>
          </mtd>
          <mtd>
            <mi>Mgb</mi>
          </mtd>
          <mtd>
            <mi>Mga</mi>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mi>Mbr</mi>
          </mtd>
          <mtd>
            <mi>Mbg</mi>
          </mtd>
          <mtd>
            <mi>Mbb</mi>
          </mtd>
          <mtd>
            <mi>Mba</mi>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mi>Mar</mi>
          </mtd>
          <mtd>
            <mi>Mag</mi>
          </mtd>
          <mtd>
            <mi>Mab</mi>
          </mtd>
          <mtd>
            <mi>Maa</mi>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mi>Tlr</mi>
          </mtd>
          <mtd>
            <mi>Tlg</mi>
          </mtd>
          <mtd>
            <mi>Tlb</mi>
          </mtd>
          <mtd>
            <mi>Tla</mi>
          </mtd>
          <mtd>
            <mn>1</mn>
          </mtd>
        </mtr>
      </mtable>
      <mo>]</mo>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0080" num="0079">This is a basic matrix multiply operation, where original RGBA image colors (Ir, Ig, Ib, Ia) are multiplied by the 5&#xd7;5 matrix M to compute the adjusted RGBA image colors (Or, Og, Ob, Oa). By adjusting the values of the 20 variable elements of M, many color adjustment operations may be performed. In the case of overdraw images, the matrix values are adjusted to scale the overdraw image to expand the range of interesting data.</p>
<p id="p-0081" num="0080">As an example, suppose every pixel in the entire render target was written to 20 times (suppose full render target quads were all blended on top of each other), and then suppose 3 more small triangles were written to the render target, two of which have some overlap. In this example, most pixels will have an overdraw of 20, a few will have overdraw of 21 (the ones that were touched by the small triangles), and a few will have an overdraw of 22 (the ones that were in intersection of the two small triangles that overlapped).</p>
<p id="p-0082" num="0081">If a user viewed this image normally, it would look dark, and it would be extremely difficult to see the portions of the frame having overdraw values of 21 and 22. In this embodiment, view an adjusted image, where each of the pixels in the normal image get multiplied by the matrix M to compute the overdraw image adjusted colors. Here are the values used, assuming 8 bit color channels (each of the RGBA values in the original and overdraw images have values in [0, 255]), but this technique would not be limited to this case and would work if different color depths were used:</p>
<p id="p-0083" num="0082">
<maths id="MATH-US-00002" num="00002">
<math overflow="scroll">
  <mrow>
    <mrow>
      <mi>let</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>min</mi>
    </mrow>
    <mo>=</mo>
    <mrow>
      <mn>20</mn>
      <mo>&#x2062;</mo>
      <mstyle>
        <mtext>//</mtext>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>the</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>minimum</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>value</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>in</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>the</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>overdraw</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>image</mi>
    </mrow>
  </mrow>
</math>
</maths>
<maths id="MATH-US-00002-2" num="00002.2">
<math overflow="scroll">
  <mrow>
    <mrow>
      <mi>let</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>max</mi>
    </mrow>
    <mo>=</mo>
    <mrow>
      <mn>22</mn>
      <mo>&#x2062;</mo>
      <mstyle>
        <mtext>//</mtext>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>the</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>maximum</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>value</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>in</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>the</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>overdraw</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>image</mi>
    </mrow>
  </mrow>
</math>
</maths>
<maths id="MATH-US-00002-3" num="00002.3">
<math overflow="scroll">
  <mrow>
    <mrow>
      <mi>let</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>delta</mi>
    </mrow>
    <mo>&#x2264;</mo>
    <mrow>
      <mrow>
        <mo>(</mo>
        <mrow>
          <mi>min</mi>
          <mo>-</mo>
          <mi>max</mi>
        </mrow>
        <mo>)</mo>
      </mrow>
      <mo>&#x2062;</mo>
      <mstyle>
        <mtext>//</mtext>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>negative</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>delta</mi>
    </mrow>
  </mrow>
</math>
</maths>
<maths id="MATH-US-00002-4" num="00002.4">
<math overflow="scroll">
  <mrow>
    <mi>if</mi>
    <mo>&#x2062;</mo>
    <mstyle>
      <mspace width="0.8em" height="0.8ex"/>
    </mstyle>
    <mo>&#x2062;</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <mi>delta</mi>
        <mo>=</mo>
        <mn>0</mn>
      </mrow>
      <mo>)</mo>
    </mrow>
  </mrow>
</math>
</maths>
<maths id="MATH-US-00002-5" num="00002.5">
<math overflow="scroll">
  <mrow>
    <mstyle>
      <mspace width="1.9em" height="1.9ex"/>
    </mstyle>
    <mo>&#x2062;</mo>
    <mrow>
      <mrow>
        <mi>delta</mi>
        <mo>=</mo>
        <mrow>
          <mo>-</mo>
          <mn>1</mn>
        </mrow>
      </mrow>
      <mo>;</mo>
      <mrow>
        <mstyle>
          <mtext>//</mtext>
        </mstyle>
        <mo>&#x2062;</mo>
        <mi>ensure</mi>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <mi>delta</mi>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <mi>is</mi>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <mi>non</mi>
        <mo>&#x2062;</mo>
        <mstyle>
          <mtext>-</mtext>
        </mstyle>
        <mo>&#x2062;</mo>
        <mi>zero</mi>
      </mrow>
    </mrow>
  </mrow>
</math>
</maths>
<maths id="MATH-US-00002-6" num="00002.6">
<math overflow="scroll">
  <mrow>
    <mrow>
      <mrow>
        <mi>let</mi>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <mi>s</mi>
      </mrow>
      <mo>&#x2264;</mo>
      <mrow>
        <mrow>
          <mo>(</mo>
          <mrow>
            <mrow>
              <mo>-</mo>
              <mn>255</mn>
            </mrow>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mi>delta</mi>
          </mrow>
          <mo>)</mo>
        </mrow>
        <mo>&#x2062;</mo>
        <mstyle>
          <mtext>/</mtext>
        </mstyle>
        <mo>&#x2062;</mo>
        <mn>3</mn>
      </mrow>
    </mrow>
    <mo>;</mo>
    <mrow>
      <mstyle>
        <mtext>//</mtext>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>scale</mi>
    </mrow>
  </mrow>
</math>
</maths>
<maths id="MATH-US-00002-7" num="00002.7">
<math overflow="scroll">
  <mrow>
    <mrow>
      <mrow>
        <mi>let</mi>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <mi>t</mi>
      </mrow>
      <mo>&#x2264;</mo>
      <mrow>
        <mi>min</mi>
        <mo>&#x2062;</mo>
        <mstyle>
          <mtext>/</mtext>
        </mstyle>
        <mo>&#x2062;</mo>
        <mi>delta</mi>
      </mrow>
    </mrow>
    <mo>;</mo>
    <mrow>
      <mstyle>
        <mtext>//</mtext>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>translate</mi>
    </mrow>
  </mrow>
</math>
</maths>
<maths id="MATH-US-00002-8" num="00002.8">
<math overflow="scroll">
  <mrow>
    <mi>set</mi>
    <mo>&#x2062;</mo>
    <mstyle>
      <mspace width="0.8em" height="0.8ex"/>
    </mstyle>
    <mo>&#x2062;</mo>
    <mi>M</mi>
    <mo>&#x2062;</mo>
    <mrow>
      <mstyle>
        <mspace width="0.6em" height="0.6ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.3em" height="0.3ex"/>
      </mstyle>
    </mrow>
    <mo>&#x2062;</mo>
    <mi>to</mi>
    <mo>&#x2062;</mo>
    <mrow>
      <mstyle>
        <mtext>:</mtext>
      </mstyle>
      <mo>&#x2062;</mo>
      <mstyle>
        <mtext>
</mtext>
      </mstyle>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="5.3em" height="5.3ex"/>
      </mstyle>
      <mo>[</mo>
      <mtable>
        <mtr>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mi>t</mi>
          </mtd>
          <mtd>
            <mi>t</mi>
          </mtd>
          <mtd>
            <mi>t</mi>
          </mtd>
          <mtd>
            <mn>1</mn>
          </mtd>
          <mtd>
            <mn>1</mn>
          </mtd>
        </mtr>
      </mtable>
      <mo>]</mo>
    </mrow>
  </mrow>
</math>
</maths>
</p>
<p id="p-0084" num="0083">Given this example, and following the matrix computation, there are three unique original values in the image:</p>
<p id="p-0085" num="0084">
<maths id="MATH-US-00003" num="00003">
<math overflow="scroll">
<mrow>
  <mo>&#x2003;</mo>
  <mrow>
    <mo>[</mo>
    <mtable>
      <mtr>
        <mtd>
          <mrow>
            <mn>20</mn>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>255</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mn>20</mn>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>255</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mn>20</mn>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>255</mn>
          </mrow>
        </mtd>
        <mtd>
          <mn>1</mn>
        </mtd>
        <mtd>
          <mn>1</mn>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mrow>
            <mn>21</mn>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>255</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mn>21</mn>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>255</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mn>21</mn>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>255</mn>
          </mrow>
        </mtd>
        <mtd>
          <mn>1</mn>
        </mtd>
        <mtd>
          <mn>1</mn>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mrow>
            <mn>22</mn>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>255</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mn>22</mn>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>255</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mn>22</mn>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>255</mn>
          </mrow>
        </mtd>
        <mtd>
          <mn>1</mn>
        </mtd>
        <mtd>
          <mn>1</mn>
        </mtd>
      </mtr>
    </mtable>
    <mo>]</mo>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0086" num="0085">These go through the following transformations by the matrix multiply:</p>
<p id="p-0087" num="0086">
<maths id="MATH-US-00004" num="00004">
<math overflow="scroll">
<mrow>
  <mrow>
    <mo>[</mo>
    <mtable>
      <mtr>
        <mtd>
          <mrow>
            <mn>20</mn>
            <mo>&#x2062;</mo>
            <mi>s</mi>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>255</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mrow>
              <mo>+</mo>
              <mn>20</mn>
            </mrow>
            <mo>&#x2062;</mo>
            <mi>s</mi>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>255</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mrow>
              <mo>+</mo>
              <mn>20</mn>
            </mrow>
            <mo>&#x2062;</mo>
            <mi>s</mi>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>255</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mrow>
              <mo>+</mo>
              <mn>0</mn>
            </mrow>
            <mo>+</mo>
            <mi>t</mi>
          </mrow>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mrow>
            <mn>20</mn>
            <mo>&#x2062;</mo>
            <mi>s</mi>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>255</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mrow>
              <mo>+</mo>
              <mn>20</mn>
            </mrow>
            <mo>&#x2062;</mo>
            <mi>s</mi>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>255</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mrow>
              <mo>+</mo>
              <mn>20</mn>
            </mrow>
            <mo>&#x2062;</mo>
            <mi>s</mi>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>255</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mrow>
              <mo>+</mo>
              <mn>0</mn>
            </mrow>
            <mo>+</mo>
            <mi>t</mi>
          </mrow>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mrow>
            <mn>20</mn>
            <mo>&#x2062;</mo>
            <mi>s</mi>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>255</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mrow>
              <mo>+</mo>
              <mn>20</mn>
            </mrow>
            <mo>&#x2062;</mo>
            <mi>s</mi>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>255</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mrow>
              <mo>+</mo>
              <mn>20</mn>
            </mrow>
            <mo>&#x2062;</mo>
            <mi>s</mi>
            <mo>&#x2062;</mo>
            <mstyle>
              <mtext>/</mtext>
            </mstyle>
            <mo>&#x2062;</mo>
            <mn>255</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mrow>
              <mo>+</mo>
              <mn>0</mn>
            </mrow>
            <mo>+</mo>
            <mi>t</mi>
          </mrow>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mn>0</mn>
        </mtd>
        <mtd>
          <mrow>
            <mo>+</mo>
            <mn>0</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mo>+</mo>
            <mn>0</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mrow>
              <mo>+</mo>
              <mn>0</mn>
            </mrow>
            <mo>+</mo>
            <mn>1</mn>
          </mrow>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mn>0</mn>
        </mtd>
        <mtd>
          <mrow>
            <mo>+</mo>
            <mn>0</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mo>+</mo>
            <mn>0</mn>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mrow>
              <mo>+</mo>
              <mn>0</mn>
            </mrow>
            <mo>+</mo>
            <mn>1</mn>
          </mrow>
        </mtd>
      </mtr>
    </mtable>
    <mo>]</mo>
  </mrow>
  <mo>=</mo>
  <mrow>
    <mo>&#x2003;</mo>
    <mrow>
      <mrow>
        <mo>[</mo>
        <mtable>
          <mtr>
            <mtd>
              <mrow>
                <mn>20</mn>
                <mo>&#x2062;</mo>
                <mstyle>
                  <mtext>/</mtext>
                </mstyle>
                <mo>&#x2062;</mo>
                <mn>255</mn>
              </mrow>
            </mtd>
            <mtd>
              <mrow>
                <mn>20</mn>
                <mo>&#x2062;</mo>
                <mstyle>
                  <mtext>/</mtext>
                </mstyle>
                <mo>&#x2062;</mo>
                <mn>255</mn>
              </mrow>
            </mtd>
            <mtd>
              <mrow>
                <mn>20</mn>
                <mo>&#x2062;</mo>
                <mstyle>
                  <mtext>/</mtext>
                </mstyle>
                <mo>&#x2062;</mo>
                <mn>255</mn>
              </mrow>
            </mtd>
            <mtd>
              <mn>1</mn>
            </mtd>
            <mtd>
              <mn>1</mn>
            </mtd>
          </mtr>
        </mtable>
        <mo>]</mo>
      </mrow>
      <mo>&#x2061;</mo>
      <mrow>
        <mo>[</mo>
        <mtable>
          <mtr>
            <mtd>
              <mi>s</mi>
            </mtd>
            <mtd>
              <mi>s</mi>
            </mtd>
            <mtd>
              <mi>s</mi>
            </mtd>
            <mtd>
              <mn>0</mn>
            </mtd>
            <mtd>
              <mn>0</mn>
            </mtd>
          </mtr>
          <mtr>
            <mtd>
              <mi>s</mi>
            </mtd>
            <mtd>
              <mi>s</mi>
            </mtd>
            <mtd>
              <mi>s</mi>
            </mtd>
            <mtd>
              <mn>0</mn>
            </mtd>
            <mtd>
              <mn>0</mn>
            </mtd>
          </mtr>
          <mtr>
            <mtd>
              <mi>s</mi>
            </mtd>
            <mtd>
              <mi>s</mi>
            </mtd>
            <mtd>
              <mi>s</mi>
            </mtd>
            <mtd>
              <mn>0</mn>
            </mtd>
            <mtd>
              <mn>0</mn>
            </mtd>
          </mtr>
          <mtr>
            <mtd>
              <mn>0</mn>
            </mtd>
            <mtd>
              <mn>0</mn>
            </mtd>
            <mtd>
              <mn>0</mn>
            </mtd>
            <mtd>
              <mn>0</mn>
            </mtd>
            <mtd>
              <mn>0</mn>
            </mtd>
          </mtr>
          <mtr>
            <mtd>
              <mi>t</mi>
            </mtd>
            <mtd>
              <mi>t</mi>
            </mtd>
            <mtd>
              <mi>t</mi>
            </mtd>
            <mtd>
              <mn>1</mn>
            </mtd>
            <mtd>
              <mn>1</mn>
            </mtd>
          </mtr>
        </mtable>
        <mo>]</mo>
      </mrow>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0088" num="0087">Since:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>3*(20/255)<i>s=</i>3*(20/255)*((&#x2212;255/&#x2212;2)/3)=(20)*((1/2))=10<i>t=</i>20/&#x2212;2=&#x2212;10<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0089" num="0088">Thus:</p>
<p id="p-0090" num="0089">
<maths id="MATH-US-00005" num="00005">
<math overflow="scroll">
<mrow>
  <mrow>
    <mo>[</mo>
    <mtable>
      <mtr>
        <mtd>
          <mn>0</mn>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mn>0</mn>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mn>0</mn>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mn>1</mn>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mn>1</mn>
        </mtd>
      </mtr>
    </mtable>
    <mo>]</mo>
  </mrow>
  <mo>=</mo>
  <mrow>
    <mrow>
      <mo>[</mo>
      <mtable>
        <mtr>
          <mtd>
            <mrow>
              <mn>20</mn>
              <mo>&#x2062;</mo>
              <mstyle>
                <mtext>/</mtext>
              </mstyle>
              <mo>&#x2062;</mo>
              <mn>255</mn>
            </mrow>
          </mtd>
          <mtd>
            <mrow>
              <mn>20</mn>
              <mo>&#x2062;</mo>
              <mstyle>
                <mtext>/</mtext>
              </mstyle>
              <mo>&#x2062;</mo>
              <mn>255</mn>
            </mrow>
          </mtd>
          <mtd>
            <mrow>
              <mn>20</mn>
              <mo>&#x2062;</mo>
              <mstyle>
                <mtext>/</mtext>
              </mstyle>
              <mo>&#x2062;</mo>
              <mn>255</mn>
            </mrow>
          </mtd>
          <mtd>
            <mn>1</mn>
          </mtd>
          <mtd>
            <mn>1</mn>
          </mtd>
        </mtr>
      </mtable>
      <mo>]</mo>
    </mrow>
    <mo>&#x2061;</mo>
    <mrow>
      <mo>[</mo>
      <mtable>
        <mtr>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mi>t</mi>
          </mtd>
          <mtd>
            <mi>t</mi>
          </mtd>
          <mtd>
            <mi>t</mi>
          </mtd>
          <mtd>
            <mn>1</mn>
          </mtd>
          <mtd>
            <mn>1</mn>
          </mtd>
        </mtr>
      </mtable>
      <mo>]</mo>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0091" num="0090">For the middle (21) values, the following is performed:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>3*(21/255)<i>s=</i>3*(21/255)*((&#x2212;255/&#x2212;2)/3)=(21)*((1/2))=10.5<i>t=</i>20/&#x2212;2=&#x2212;10<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0092" num="0091">Accordingly:</p>
<p id="p-0093" num="0092">
<maths id="MATH-US-00006" num="00006">
<math overflow="scroll">
<mrow>
  <mrow>
    <mo>[</mo>
    <mtable>
      <mtr>
        <mtd>
          <mn>0.5</mn>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mn>0.5</mn>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mn>0.5</mn>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mn>1</mn>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mn>1</mn>
        </mtd>
      </mtr>
    </mtable>
    <mo>]</mo>
  </mrow>
  <mo>=</mo>
  <mrow>
    <mrow>
      <mo>[</mo>
      <mtable>
        <mtr>
          <mtd>
            <mrow>
              <mn>21</mn>
              <mo>&#x2062;</mo>
              <mstyle>
                <mtext>/</mtext>
              </mstyle>
              <mo>&#x2062;</mo>
              <mn>255</mn>
            </mrow>
          </mtd>
          <mtd>
            <mrow>
              <mn>21</mn>
              <mo>&#x2062;</mo>
              <mstyle>
                <mtext>/</mtext>
              </mstyle>
              <mo>&#x2062;</mo>
              <mn>255</mn>
            </mrow>
          </mtd>
          <mtd>
            <mrow>
              <mn>21</mn>
              <mo>&#x2062;</mo>
              <mstyle>
                <mtext>/</mtext>
              </mstyle>
              <mo>&#x2062;</mo>
              <mn>255</mn>
            </mrow>
          </mtd>
          <mtd>
            <mn>1</mn>
          </mtd>
          <mtd>
            <mn>1</mn>
          </mtd>
        </mtr>
      </mtable>
      <mo>]</mo>
    </mrow>
    <mo>&#x2061;</mo>
    <mrow>
      <mo>[</mo>
      <mtable>
        <mtr>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mi>t</mi>
          </mtd>
          <mtd>
            <mi>t</mi>
          </mtd>
          <mtd>
            <mi>t</mi>
          </mtd>
          <mtd>
            <mn>1</mn>
          </mtd>
          <mtd>
            <mn>1</mn>
          </mtd>
        </mtr>
      </mtable>
      <mo>]</mo>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0094" num="0093">For the highest (22) values, the following is performed:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>3*(22/255)<i>s=</i>3*(22/255)*((&#x2212;255/&#x2212;2)/3)=(22)*((1/2))=11<i>t=</i>20/&#x2212;2=&#x2212;10<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0095" num="0094">Thus:</p>
<p id="p-0096" num="0095">
<maths id="MATH-US-00007" num="00007">
<math overflow="scroll">
<mrow>
  <mrow>
    <mo>[</mo>
    <mtable>
      <mtr>
        <mtd>
          <mn>1</mn>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mn>1</mn>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mn>1</mn>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mn>1</mn>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mn>1</mn>
        </mtd>
      </mtr>
    </mtable>
    <mo>]</mo>
  </mrow>
  <mo>=</mo>
  <mrow>
    <mrow>
      <mo>[</mo>
      <mtable>
        <mtr>
          <mtd>
            <mrow>
              <mn>22</mn>
              <mo>&#x2062;</mo>
              <mstyle>
                <mtext>/</mtext>
              </mstyle>
              <mo>&#x2062;</mo>
              <mn>255</mn>
            </mrow>
          </mtd>
          <mtd>
            <mrow>
              <mn>22</mn>
              <mo>&#x2062;</mo>
              <mstyle>
                <mtext>/</mtext>
              </mstyle>
              <mo>&#x2062;</mo>
              <mn>255</mn>
            </mrow>
          </mtd>
          <mtd>
            <mrow>
              <mn>22</mn>
              <mo>&#x2062;</mo>
              <mstyle>
                <mtext>/</mtext>
              </mstyle>
              <mo>&#x2062;</mo>
              <mn>255</mn>
            </mrow>
          </mtd>
          <mtd>
            <mn>1</mn>
          </mtd>
          <mtd>
            <mn>1</mn>
          </mtd>
        </mtr>
      </mtable>
      <mo>]</mo>
    </mrow>
    <mo>&#x2061;</mo>
    <mrow>
      <mo>[</mo>
      <mtable>
        <mtr>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mi>s</mi>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
          <mtd>
            <mn>0</mn>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mi>t</mi>
          </mtd>
          <mtd>
            <mi>t</mi>
          </mtd>
          <mtd>
            <mi>t</mi>
          </mtd>
          <mtd>
            <mn>1</mn>
          </mtd>
          <mtd>
            <mn>1</mn>
          </mtd>
        </mtr>
      </mtable>
      <mo>]</mo>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0097" num="0096">The above technique advantageously allows a small range of values to be expanded to a maximum range, so that visibility is maximized. This technique is provided for illustration, and not limitation. Accordingly, further techniques may be employed to increase the visibility of images.</p>
<p id="p-0098" num="0097">As described above, elements of embodiments (e.g., elements of <figref idref="DRAWINGS">FIGS. 1 and 2</figref>) may be implemented in any combination of hardware and/or software. Accordingly, <figref idref="DRAWINGS">FIG. 10</figref> is a diagram of an exemplary platform <b>1002</b> in which functionality of the present invention as described herein may be implemented.</p>
<p id="p-0099" num="0098">As described above, embodiments provide techniques for capturing frames. In addition, embodiments provide techniques for single stepping through graphics frames (e.g., a single graphics frame at a time) that are generated by an application. Such features advantageously allow an application's workload to be captured &#x201c;on the fly&#x201d;, thus enabling an exact frame of interest to be captured.</p>
<p id="p-0100" num="0099">In embodiments, such single stepping may be controlled by user interaction. For instance, a user may be provided with a pause button, a step button, and a capture button. Such buttons may be provided through a graphical user interface (e.g., interface console <b>300</b> of <figref idref="DRAWINGS">FIG. 3</figref>). Embodiments, however, are not limited to this context. Moreover, embodiments are not limited to the employment of graphical user interfaces.</p>
<p id="p-0101" num="0100">The pause button feature allows the user to remotely pause an application (e.g., graphics application <b>102</b>) at its current frame. In turn, the step button feature allows the user to single step forward exactly one frame. The capture button/feature that allows the user to decide to save the frame data (as well as its corresponding draw calls) for analysis.</p>
<p id="p-0102" num="0101"><figref idref="DRAWINGS">FIG. 9</figref> illustrates a logic flow <b>900</b>, which may be representative of operations involving such stepping and frame capturing features. This flow is described in the context of <figref idref="DRAWINGS">FIGS. 1 and 2</figref>. However, this flow may be employed in other contexts. Also, although <figref idref="DRAWINGS">FIG. 9</figref> shows a particular sequence, other sequences may be employed. Also, the depicted operations may be performed in various parallel and/or sequential combinations.</p>
<p id="p-0103" num="0102">At a block <b>902</b>, a graphics application (e.g., a game) is commenced. For example, in the context of <figref idref="DRAWINGS">FIG. 1</figref>, this may comprise starting execution of graphics application <b>102</b>.</p>
<p id="p-0104" num="0103">At a block <b>904</b>, the user activates a pause button. As a result, the graphics application halts operation upon the completion of its current frame at a block <b>906</b>. This feature may involve graphics analysis tool <b>110</b> awaiting application <b>102</b> to make a &#x201c;present call&#x201d; (through graphics API <b>104</b>). Such a call indicates that its draw calls for the current frame are complete and the current frame is ready for rendering by graphics engine <b>106</b>. Once such a call is placed, then graphics analysis tool <b>110</b> may pause graphics application <b>102</b>. This may be performed, for example, through one or more operating system calls. For instance, graphics analysis tool <b>110</b> may halt all running CPU software threads associated with the graphics application. Upon this pausing, the current frame may be displayed.</p>
<p id="p-0105" num="0104">At a block <b>907</b>, the user activates a button. If it is the step button, then operation proceeds to a block <b>909</b>, where the graphics application is resumed and the next frame becomes the current frame. In the context of <figref idref="DRAWINGS">FIG. 1</figref>, this may involve graphics analysis tool <b>110</b> placing one or more operating system calls. Following this, operation returns to block <b>906</b> and the graphics application is again paused once it completes the frame.</p>
<p id="p-0106" num="0105">However, if the user activates the capture button, the frame generated by the graphics engine (e.g., graphics engine <b>106</b>) is stored at a block <b>910</b>. With reference to <figref idref="DRAWINGS">FIG. 2</figref>, this may comprise storing the current frame's pixel data in frame storage module <b>212</b>. Also, at a block <b>912</b>, additional information related to the current frame is stored. Such information may include (but is not limited to) the draw calls corresponding to the current frame, state information&#x2014;involving the graphics engine (e.g., pipeline state information), the graphics API, and/or the graphics application. Also, such information may include resources provided by application (e.g., world model information, vertex information, shading information, texture information, and so forth.). The embodiments are not limited to these examples. In the context of <figref idref="DRAWINGS">FIG. 2</figref>, some of such information may be intercepted and identified by graphics API draw call interceptor module <b>202</b> and stored in graphics API call log database <b>204</b>.</p>
<p id="p-0107" num="0106"><figref idref="DRAWINGS">FIG. 9</figref> shows that following blocks <b>910</b> and <b>912</b>, operation may proceed to block <b>909</b>, where the graphics application is resumed, and the next frame becomes the current frame. Following this, operation returns to block <b>906</b>, and the graphics application is again paused once it completes the frame.</p>
<p id="p-0108" num="0107">As a further alternative, <figref idref="DRAWINGS">FIG. 9</figref> shows that if the user activates the pause button, then normal operation of the graphics application is resumed at a block <b>914</b>. In the context of <figref idref="DRAWINGS">FIG. 1</figref>, this may involve graphics analysis tool <b>110</b> placing one or more operating system calls. Following this, a block <b>916</b> indicates that operation may return to block <b>904</b> to perform further frame stepping and frame capture operations.</p>
<p id="p-0109" num="0108">Thus, these frame stepping and frame capture techniques allow a user to have fine grained control over which exact frame to debug and profile. As a result, a user may find and fix bottlenecks, and/or remove redundant or insignificant graphics operations. The flow of <figref idref="DRAWINGS">FIG. 9</figref> is described in the context of GUI buttons. This is for illustration and not limitation. Accordingly other user interaction techniques/devices may be employed. Thus embodiments may provide various user controls of various for the aforementioned pausing, stepping, capturing, and resuming features.</p>
<p id="p-0110" num="0109">In embodiments, platform <b>1002</b> may comprise a CPU <b>1012</b>, a GPU <b>1013</b>, one or more drivers <b>1014</b>, one or more network connections <b>1015</b>, an operating system <b>1016</b>, storage <b>1018</b>, a display device <b>1019</b>.</p>
<p id="p-0111" num="0110">CPU <b>1012</b> may comprise one or more processors such as dual-core processors. Examples of dual-core processors include the Pentium&#xae; D processor and the Pentium&#xae; processor Extreme Edition both made by Intel&#xae; Corporation, which may be referred to as the Intel Core Duo&#xae; processors, for example.</p>
<p id="p-0112" num="0111">GPU <b>1013</b> may comprise graphics various graphics processors, such as a peripheral component interconnect (PCI) Express graphics card. Embodiments, however, are not limited to this example. With reference to <figref idref="DRAWINGS">FIG. 1</figref>, GPU <b>1013</b> may provide features of graphics engine <b>106</b>.</p>
<p id="p-0113" num="0112">In one embodiment, network connections <b>1015</b> may comprise the PRO/1000 PM or PRO/100 VE/VM network connection, both made by Intel&#xae; Corporation.</p>
<p id="p-0114" num="0113">In embodiments, operating system <b>1016</b> may comprise the Windows&#xae; XP Media Center made by Microsoft&#xae; Corporation. In further embodiments, operating system <b>1016</b> may comprise Linux&#xae;, as well as other types of operating systems.</p>
<p id="p-0115" num="0114">In one embodiment, storage <b>1018</b> may comprise various tangible storage media. Such storage media may include data (e.g., images or frames) as well as instructions or control logic (e.g., software) to implement various features described herein (e.g., elements of <figref idref="DRAWINGS">FIGS. 1 and 2</figref>). Such instructions or control logic may be executed by CPU <b>1012</b> and/or GPU <b>1013</b>. Examples of storage media are described further below.</p>
<p id="p-0116" num="0115">Display device <b>1019</b> may output information to a user. In addition, display device <b>1019</b> may allow user interaction, as described herein. For instance, such user interaction may be through exemplary user interface <b>300</b>.</p>
<p id="p-0117" num="0116">As described herein, various embodiments may be implemented using hardware elements, software elements, or any combination thereof. Examples of hardware elements may include processors, microprocessors, circuits, circuit elements (e.g., transistors, resistors, capacitors, inductors, and so forth), integrated circuits, application specific integrated circuits (ASIC), programmable logic devices (PLD), digital signal processors (DSP), field programmable gate array (FPGA), logic gates, registers, semiconductor device, chips, microchips, chip sets, and so forth.</p>
<p id="p-0118" num="0117">Examples of software may include software components, programs, applications, computer programs, application programs, system programs, machine programs, operating system software, middleware, firmware, software modules, routines, subroutines, functions, methods, procedures, software interfaces, application program interfaces (API), instruction sets, computing code, computer code, code segments, computer code segments, words, values, symbols, or any combination thereof.</p>
<p id="p-0119" num="0118">Some embodiments may be implemented, for example, using a tangible machine-readable medium (storage medium) or article which may store an instruction or a set of instructions that, if executed by a machine, may cause the machine to perform a method and/or operations in accordance with the embodiments. Such a machine may include, for example, any suitable processing platform, computing platform, computing device, processing device, computing system, processing system, computer, processor, or the like, and may be implemented using any suitable combination of hardware and/or software.</p>
<p id="p-0120" num="0119">The machine-readable medium (storage medium) or article may include, for example, any suitable type of memory unit, memory device, memory article, memory medium, storage device, storage article, storage medium and/or storage unit, for example, memory, removable or non-removable media, erasable or non-erasable media, writeable or re-writeable media, digital or analog media, hard disk, floppy disk, Compact Disk Read Only Memory (CD-ROM), Compact Disk Recordable (CD-R), Compact Disk Rewriteable (CD-RW), optical disk, magnetic media, magneto-optical media, removable memory cards or disks, various types of Digital Versatile Disk (DVD), a tape, a cassette, or the like. The instructions may include any suitable type of code, such as source code, compiled code, interpreted code, executable code, static code, dynamic code, encrypted code, and the like, implemented using any suitable high-level, low-level, object-oriented, visual, compiled and/or interpreted programming language.</p>
<p id="p-0121" num="0120">Some embodiments may be described using the expression &#x201c;coupled&#x201d; and &#x201c;connected&#x201d; along with their derivatives. These terms are not intended as synonyms for each other. For example, some embodiments may be described using the terms &#x201c;connected&#x201d; and/or &#x201c;coupled&#x201d; to indicate that two or more elements are in direct physical or electrical contact with each other. The term &#x201c;coupled,&#x201d; however, may also mean that two or more elements are not in direct contact with each other, but yet still co-operate or interact with each other.</p>
<p id="p-0122" num="0121">While various embodiments of the present invention have been described above, it should be understood that they have been presented by way of example only, and not in limitation. Accordingly, it will be apparent to persons skilled in the relevant art that various changes in form and detail can be made therein without departing from the spirit and scope of the invention. Thus, the breadth and scope of the present invention should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-math idrefs="MATH-US-00001" nb-file="US08624907-20140107-M00001.NB">
<img id="EMI-M00001" he="19.05mm" wi="76.20mm" file="US08624907-20140107-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00002 MATH-US-00002-2 MATH-US-00002-3 MATH-US-00002-4 MATH-US-00002-5 MATH-US-00002-6 MATH-US-00002-7 MATH-US-00002-8" nb-file="US08624907-20140107-M00002.NB">
<img id="EMI-M00002" he="49.36mm" wi="76.20mm" file="US08624907-20140107-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00003" nb-file="US08624907-20140107-M00003.NB">
<img id="EMI-M00003" he="13.38mm" wi="76.20mm" file="US08624907-20140107-M00003.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00004" nb-file="US08624907-20140107-M00004.NB">
<img id="EMI-M00004" he="44.11mm" wi="76.20mm" file="US08624907-20140107-M00004.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00005" nb-file="US08624907-20140107-M00005.NB">
<img id="EMI-M00005" he="19.05mm" wi="76.20mm" file="US08624907-20140107-M00005.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00006" nb-file="US08624907-20140107-M00006.NB">
<img id="EMI-M00006" he="19.05mm" wi="76.20mm" file="US08624907-20140107-M00006.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00007" nb-file="US08624907-20140107-M00007.NB">
<img id="EMI-M00007" he="19.05mm" wi="76.20mm" file="US08624907-20140107-M00007.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method comprising:
<claim-text>selecting at least one render target having a sequence of graphics application program interface (API) draw calls;</claim-text>
<claim-text>creating an overdraw image based on the selected render target wherein the overdraw image represents for each pixel of a render target, a brightness corresponding to a number of times that each pixel has been written to;</claim-text>
<claim-text>after creating the overdraw image, generating a visually enhanced overdraw image using the previously created overdraw image by increasing a dynamic range within the previously created overdraw image, by expanding a small range of overdraw values to a larger range to increase visibility of differences within the small range, determining minimum and maximum values in the overdraw image, generating a matrix multiplier based on the determined minimum and maximum values, and processing the overdraw image using the matrix multiplier to generate the enhanced overdraw image; and</claim-text>
<claim-text>displaying the visually enhanced overdraw image.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising storing the created overdraw image in a tangible storage medium.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising storing the visually enhanced overdraw image in a tangible storage medium.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein selecting a render target comprises selecting a render target from a listing of multiple render targets.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>selecting at least one pixel on the overdraw image;</claim-text>
<claim-text>selecting at least one draw call corresponding to the selected pixel; and</claim-text>
<claim-text>performing the selected at least one draw call to determine the number of times the selected at least one pixel was touched for the selected at least one draw call.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising disabling at least one draw call of a render target before creating the overdraw image.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein generating a matrix multiplier includes adjusting values of the matrix multiplier to scale the overdraw image to expand the range of unique original values.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein increasing a dynamic range comprises expanding a small range of unique original brightness values to a maximum range.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein increasing a dynamic range comprises employing clamping operations.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. An apparatus, comprising:
<claim-text>a graphics application program interface (API);</claim-text>
<claim-text>a graphics engine to sort the graphics API draw call into sequences for each of multiple render targets, the graphics engine maintaining a plurality of buffers each corresponding to a render target; and</claim-text>
<claim-text>a graphics analysis tool to receive a selection of at least one render target having a sequence of graphics API calls, create an overdraw image based on the selected render target, wherein the overdraw image represents for each pixel of a render target, a brightness corresponding to a number of times that each pixel has been written to, generate a visually enhanced overdraw image using the previously created overdraw image after creating the overdraw image by increasing a dynamic range within the previously created overdraw image; and</claim-text>
<claim-text>the graphics engine further to display the visually enhanced overdraw image,</claim-text>
<claim-text>wherein the graphics tool is further to generate the visually enhanced overdraw image by expanding a small range of overdraw values to a larger range to increase visibility of differences within the small range by determining minimum and maximum values in the overdraw image, generating a matrix multiplier based on the determined minimum and maximum values, and processing the overdraw image using the matrix multiplier to generate the enhanced overdraw image.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the graphics engine comprises a graphics processing unit (GPU).</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising a display device, the graphics analysis tool to display the visually enhanced overdrawn image on the display device.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising a tangible storage medium to store the visually enhanced overdraw image.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the graphics analysis tool is further to increase the dynamic range by expanding a small range of unique original brightness values to a maximum range.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. An article comprising a non-transitory machine- readable medium having stored thereon instructions that, when executed by a machine, cause the machine to:
<claim-text>select at least one render target having a sequence of graphics application program interface (API) draw calls;</claim-text>
<claim-text>create an overdraw image based on the selected render target wherein the overdraw image represents for each pixel of a render target, a brightness corresponding to a number of times that each pixel has been written to,</claim-text>
<claim-text>after creating the overdraw image, generate a visually enhanced overdraw image using the previously created overdraw image by increasing a dynamic range within the previously created overdraw image;</claim-text>
<claim-text>expand a small range of overdraw values to a larger range to increase visibility of differences within the small range by determining minimum and maximum values in the overdraw image, generating a matrix multiplier based on the determined minimum and maximum values, and processing the overdraw image using the matrix multiplier to generate the enhanced overdraw image; and</claim-text>
<claim-text>display the visually enhanced overdraw image.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The article of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein to generate a visually enhanced overdraw image the machine being further caused to:
<claim-text>determine minimum and maximum values in the overdraw image;</claim-text>
<claim-text>generate a matrix multiplier based on the determined minimum and maximum values; and</claim-text>
<claim-text>process the overdraw image using the matrix multiplier to generate the enhanced overdraw image.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The article of <claim-ref idref="CLM-00015">claim 15</claim-ref>, the machine being further caused to:
<claim-text>select at least one pixel on the overdraw image;</claim-text>
<claim-text>select at least one draw call corresponding to the selected pixel; and</claim-text>
<claim-text>perform the selected at least one draw call to determine the number of times the selected at least one pixel was touched for the selected at least one draw call.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The article of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein to generate a matrix multiplier the matrix multiplier values are adjusted to scale the overdraw image to expand the range of unique original values.</claim-text>
</claim>
</claims>
</us-patent-grant>
