<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625596-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625596</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12982664</doc-number>
<date>20101230</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>457</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>28</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>370392</main-classification>
<further-classification>370351</further-classification>
</classification-national>
<invention-title id="d2e53">Multi-chassis topology discovery using in-band signaling</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>8144705</doc-number>
<kind>B1</kind>
<name>Aybay</name>
<date>20120300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370389</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2004/0179524</doc-number>
<kind>A1</kind>
<name>Sasagawa et al.</name>
<date>20040900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370389</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2007/0206512</doc-number>
<kind>A1</kind>
<name>Hinds et al.</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370254</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2009/0268746</doc-number>
<kind>A1</kind>
<name>Ogasahara et al.</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370406</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2009/0274066</doc-number>
<kind>A1</kind>
<name>Chen et al.</name>
<date>20091100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370254</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2010/0226377</doc-number>
<kind>A1</kind>
<name>Ogasahara et al.</name>
<date>20100900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370400</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00007">
<othercit>Juniper Networks, Inc., Juniper press release announcing the TX Matrix Plus Product, Feb. 2, 2009 and corresponding document describing &#x201c;Certain Features of Juniper Networks' TX Matrix Plus Product&#x201d;, 5 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>23</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>10</number-of-drawing-sheets>
<number-of-figures>10</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61387239</doc-number>
<date>20100928</date>
</document-id>
</us-provisional-application>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Thomas</last-name>
<first-name>Philip A.</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Agrawal</last-name>
<first-name>Anurag</first-name>
<address>
<city>Santa Clara</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Thomas</last-name>
<first-name>Philip A.</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Agrawal</last-name>
<first-name>Anurag</first-name>
<address>
<city>Santa Clara</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Harrity &#x26; Harrity, LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Juniper Networks, Inc.</orgname>
<role>02</role>
<address>
<city>Sunnyvale</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Sam</last-name>
<first-name>Phirin</first-name>
<department>2476</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A multi-chassis network device may automatically detect whether cables connected between chassis devices are correctly inserted. The device may insert, into a first data stream output from a first port of the device, control information identifying the first port. The device may receive, from a second data stream received by the first port of the device, second control information identifying a second port, at another device connected to the device via a cable. The device may determine, based on the second control information, whether the connection of the first port to the second port, via the cable, is valid and cause, when the connection of the first port to the second port is determined to not be valid, the device to output an indication that the connection is not valid or to reconfigure the device to make the connection of the first port to the second port valid.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="113.88mm" wi="221.66mm" file="US08625596-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="225.89mm" wi="166.62mm" orientation="landscape" file="US08625596-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="217.76mm" wi="179.58mm" orientation="landscape" file="US08625596-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="215.56mm" wi="183.30mm" orientation="landscape" file="US08625596-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="230.21mm" wi="142.66mm" orientation="landscape" file="US08625596-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="174.58mm" wi="182.29mm" orientation="landscape" file="US08625596-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="163.66mm" wi="119.04mm" orientation="landscape" file="US08625596-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="205.23mm" wi="180.93mm" orientation="landscape" file="US08625596-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="217.51mm" wi="191.26mm" orientation="landscape" file="US08625596-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="193.63mm" wi="125.48mm" orientation="landscape" file="US08625596-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="126.32mm" wi="109.56mm" orientation="landscape" file="US08625596-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">RELATED APPLICATION</heading>
<p id="p-0002" num="0001">This application claims priority under 35 U.S.C. &#xa7;119 based on U.S. Provisional Patent Application No. 61/387,239, filed Sep. 28, 2010, the disclosure of which is incorporated by reference herein in its entirety.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">Computing and communication networks typically include network devices, such as routers, switches or gateways, which transfer or switch data, such as packets, from one or more sources to one or more destinations. A network switch or router, in particular, may include a networking device that connects network segments and/or computing devices.</p>
<p id="p-0004" num="0003">The size and capacity of a particular network device may vary considerably depending on the intended application of the network device. For example, routers may provide connectivity inside enterprises, between enterprises and the Internet, and inside Internet Service Providers (ISPs). The largest routers may interconnect ISPs, may be used inside ISPs, may be used inside large data center networks, or may be used in very large enterprise networks. The smallest routers may provide connectivity for small businesses and home offices.</p>
<p id="p-0005" num="0004">Large routers, such as those marketed to ISPs, may be distributed as a modular &#x201c;chassis,&#x201d; which the ISP may purchase and connect together to form a single large, high capacity router. When setting up the router, the modular chassis portions may be connected together through cabling, such as optical cabling, that is manually plugged into physical ports of the chassis. The number of cables can be large. Correctly matching one chassis port to a corresponding port on another chassis can be a source of installation errors.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0006" num="0005">One implementation may be directed to a network device that includes a port to connect the network device to another network device. The port may include logic to insert topology messages into traffic outgoing from the port, each of the topology messages including an identification of the port and the network device, and logic to extract topology messages from traffic incoming to the port from a second network device. The device may further include a control component to determine, based on an identification of the second network device and a second port at the second network device, as determined from the extracted topology messages, whether the port and the second port form a valid cable connection. The device may further output, to a user, an indication of an invalid cable connection when the determination of whether the port and the second port device form a valid connection indicates an invalid connection.</p>
<p id="p-0007" num="0006">In another implementation, a device implemented method may include inserting, into a first data stream output from a first port of the device, control information identifying the first port, the control information being inserted in-band with non-control information transmitted from the first port. The method may further include receiving, from a second data stream received by the first port of the device, second control information identifying a second port, at another device connected to the device via a cable. The method may further include determining, based on the second control information, whether the connection of the first port to the second port, via the cable, is valid; and causing, when the connection of the first port to the second port is determined to not be valid, the device to output an indication that the connection is not valid or to reconfigure the device to make the connection of the first port to the second port valid.</p>
<p id="p-0008" num="0007">In yet another implementation, a device may include a first register to store an identification value for a port that is used to connect, via a cable, modular components of a network device. The device may further include a topology message generator to insert a topology message into traffic outgoing from the port, the topology message including an identification of the port. The device may further include a second register to store a value corresponding to an amount of data that is to be transmitted before the topology message generator inserts the topology message into the traffic; and a traffic counter to measure the amount of traffic that is transmitted, the traffic counter signaling, based on the value of the second register, the topology message generator to insert the topology message into the traffic.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0009" num="0008">The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate one or more implementations described herein and, together with the description, explain the invention. In the drawings,</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram of an example system in which implementations described herein may be implemented;</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram illustrating an example logical configuration of the system shown in <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram of example components of a device according to an implementation described herein;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram illustrating an example implementation of a portion of the system shown in <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 5</figref> is a flow chart illustrating an example process for discovering the topology in a multi-chassis device;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 6</figref> is a diagram illustrating fields in an example topology message;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 7</figref> is a flow chart illustrating an example process for processing port/chassis device identifier information;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 8</figref> is a flow chart illustrating an example process for processing port/chassis device identifier information according to a second possible implementation;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 9</figref> is a diagram of an example portion of the port topology component relating to the transmission of a topology message; and</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 10</figref> is a diagram of an example portion of the port topology component relating to the reception of a topology message.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0020" num="0019">The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements.</p>
<p id="p-0021" num="0020">Techniques described herein may relate to the cabling of a multi-chassis network device. Topology messages may be automatically exchanged over each cable connected between two chassis of the network device. The topology messages may be in-band messages that are periodically inserted into the &#x201c;normal&#x201d; traffic stream. The network device may use the topology messages to verify that the cables are correctly connected. In response to an incorrect connection, the network device may alert the user, such as through an audible or visible signal, that the cable is incorrectly placed. Alternatively or additionally, in response to the incorrect connection, the network device may automatically reprogram itself to correctly operate with the cable as it was connected.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram of an example system <b>100</b> in which implementations described herein may be implemented. In one implementation, system <b>100</b> may include a multi-chassis router or switch. In other possible implementations, system <b>100</b> may implement other types of multi-chassis network devices.</p>
<p id="p-0023" num="0022">System <b>100</b> may include a number of modular components, referred to as &#x201c;chassis devices&#x201d; herein. In the example of <figref idref="DRAWINGS">FIG. 1</figref>, system <b>100</b> may include a switch fabric chassis (SFC) <b>110</b> and one or more line card chassis (LCCs) <b>120</b>. SFC <b>110</b> and LCCs <b>120</b> may be connected to one another, such as through optical or coaxial cabling, to form a single virtual network device (e.g., a router). In one particular implementation, SFC <b>110</b> may serve as a central switch fabric through which LCCs <b>120</b> connect. In other words, each LCC <b>120</b> may connect to SFC <b>110</b> and data units transmitted between LCCs <b>120</b> may go through SFC <b>110</b>.</p>
<p id="p-0024" num="0023">Each LCC <b>120</b> may include one or more insertable communication &#x201c;cards&#x201d; (also called &#x201c;line cards&#x201d;) that may be inserted into LCC <b>120</b>. Each card may connect LCC <b>120</b> to input/output links that connect system <b>100</b> to one or more external networks or devices. Different cards may be inserted into an LCC <b>120</b> to provide an interface to different transmission media, such as copper wire or optical fibers. Each LCC <b>120</b> may include control plane portions, which may together implement the &#x201c;intelligence&#x201d; of system <b>100</b>, and a data plane portion which may handle the forwarding of data units (e.g., packets) through system <b>100</b>. The control plane may, for example, examine header information of incoming data units, make routing decisions based on the header information, and forward the data units to an appropriate output port (possibly including an output port on another LCC <b>120</b>) based on the routing decision.</p>
<p id="p-0025" num="0024">SFC <b>110</b>, as previously mentioned, may act as a fabric switch through which LCCs <b>120</b> communicate. For example, the switching fabric implemented by SFC <b>110</b> may include a three stage switch fabric that includes an input stage, a switching (crossbar map) stage, and an output stage. Each LCC <b>120</b> may be connected to SFC <b>110</b> using one or more cables in which each cable is inserted into physical connectors at LCC <b>120</b> and SFC <b>110</b>. The number of cables to connect between each LCC <b>120</b> and SFC <b>110</b> may be relatively large (e.g., numbering in the tens or hundreds).</p>
<p id="p-0026" num="0025">In the exemplary system <b>100</b>, one SFC <b>110</b> and four LCCs <b>120</b> are shown. In other implementations, system <b>100</b> may include additional, fewer, different, or differently arranged components. More specifically, system <b>100</b> may be designed as a modular network device in which users can add additional SFCs <b>110</b> or LCCs <b>120</b> as needed. In one implementation, a &#x201c;full&#x201d; configuration of system <b>100</b> may include up to five SFCs <b>110</b> and sixteen LCCs <b>120</b>.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram illustrating an example logical configuration of system <b>100</b>. System <b>100</b> may receive data streams from physical links, process the data streams to determine destination information, and transmit the data streams out on links in accordance with the destination information. As shown in <figref idref="DRAWINGS">FIG. 2</figref>, system <b>100</b> may include a switch fabric <b>210</b>, forwarding engines <b>220</b>, and a control component <b>230</b>. Each LCC <b>120</b> may implement one or more forwarding engines <b>220</b>. Each forwarding engine <b>220</b> may correspond to, for example, a removable card that can be plugged into LCC <b>120</b>. Switch fabric <b>210</b> may be implemented by one or more SFCs <b>110</b>. Control component <b>230</b>, although shown as a single component in <figref idref="DRAWINGS">FIG. 2</figref>, may be implemented in a distributed manner at one or more LCCs <b>120</b>.</p>
<p id="p-0028" num="0027">Forwarding engines <b>220</b> may each be connected to control component <b>230</b> and switch fabric <b>210</b>. Forwarding engines <b>220</b> may receive data units at ports on physical links connected to a network, such as a wide area network (WAN) or a local area network (LAN). Each physical link could be one of many types of transport media, such as optical fiber or Ethernet cable. The data on the physical link may be formatted according to one of several protocols, such as the synchronous optical network (SONET) standard, Ethernet, or another format.</p>
<p id="p-0029" num="0028">Forwarding engines <b>220</b> may, for each received data unit, process a header of the data unit to determine an appropriate output port, at either the current forwarding engine <b>220</b> or another forwarding engine, for the data unit. Forwarding engines <b>220</b> may modify the header of the received data unit before transmitting the data unit to the determined output port. Some received data units may be forwarded to an output port connected to the forwarding engine at which the data unit arrived. Other data units may be forwarded, via switch fabric <b>210</b>, to other forwarding engines <b>220</b> in system <b>100</b> for transmission at the determined output port.</p>
<p id="p-0030" num="0029">Switch fabric <b>210</b> may be a switching component designed to allow efficient communication between forwarding engines <b>220</b> of LCCs <b>120</b>. For instance, switch fabric <b>210</b> may be a hardwired non-blocking minimal spanning switch capable of connecting N inputs to N outputs in any combination, such as a switch fabric implemented by SFC <b>110</b>.</p>
<p id="p-0031" num="0030">Control component <b>230</b> may perform high level management functions for system <b>100</b>. Control component <b>230</b> may be part of the &#x201c;control plane&#x201d; of system <b>100</b>. Control component <b>230</b> may communicate with other networks and network devices connected to system <b>100</b> to exchange information regarding network topology. Control component <b>230</b> may create routing tables based on network topology information and forwarding tables based on the routing tables. The forwarding tables may be used by forwarding engines <b>220</b> to perform route lookup for incoming data units. Control component <b>230</b> may also perform other general control and monitoring functions for system <b>100</b>. For example, as is described in more detail below, control component <b>230</b> may store a data structure indicating valid cable connections between chassis devices. In the context of system <b>100</b>, as illustrated in <figref idref="DRAWINGS">FIG. 1</figref>, control component <b>230</b> may be implemented in a distributed manner in LCCs <b>120</b>.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram of example components of a device <b>300</b> according to an implementation described herein. Device <b>300</b> may correspond to portions of control component <b>230</b> (<figref idref="DRAWINGS">FIG. 2</figref>). As shown, device <b>300</b> may include a bus <b>310</b>, a processor <b>320</b>, a memory <b>330</b>, and a communication interface <b>340</b>.</p>
<p id="p-0033" num="0032">Bus <b>310</b> may permit communication among the components of device <b>300</b>. Processor <b>320</b> may include one or more processors and/or microprocessors that interpret and execute instructions. Additionally or alternatively, processor <b>320</b> may be implemented as or include one or more application-specific integrated circuit (ASICs), field-programmable gate array (FPGAs), or the like. Memory <b>330</b> may include a RAM or another type of dynamic storage device that stores information and instructions for execution by processor <b>320</b>, a ROM or another type of static storage device that stores static information and instructions for the processor <b>320</b>, and/or some other type of magnetic or optical recording medium and its corresponding drive for storing information and/or instructions.</p>
<p id="p-0034" num="0033">Communication interface <b>340</b> may include any transceiver-like mechanism that allows device <b>300</b> to communicate with other devices and/or systems. For example, communication interface <b>340</b> may include mechanisms for communicating with forwarding engines <b>220</b> in the control plane of system <b>100</b>.</p>
<p id="p-0035" num="0034">As will be described in detail below, device <b>300</b> may perform certain functions in response to processor <b>320</b> executing software instructions contained in a non-transitory computer-readable medium, such as memory <b>330</b>. The software instructions may be read into memory <b>330</b> from another computer-readable medium or from another device via communication interface <b>340</b>. The software instructions contained in memory <b>330</b> may cause processor <b>320</b> to perform processes that will be described later. Alternatively, hardwired circuitry may be used in place of or in combination with software instructions to implement processes consistent with embodiments described herein. Thus, systems and methods described herein are not limited to any specific combination of hardware circuitry and software.</p>
<p id="p-0036" num="0035">Although <figref idref="DRAWINGS">FIG. 3</figref> illustrates example components of device <b>300</b>, in some implementations, device <b>300</b> may include fewer components, different components, differently arranged components, or additional components than those depicted in <figref idref="DRAWINGS">FIG. 3</figref>. Additionally, or alternatively, one or more components of device <b>300</b> may perform one or more tasks described as being performed by one or more other components of device <b>300</b>.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram illustrating an example implementation of a portion of system <b>100</b>. The portions of system <b>100</b>, as shown in <figref idref="DRAWINGS">FIG. 4</figref>, may be portions that relate to the in-band transmission of messages, such as topology messages, among chassis devices in system <b>100</b>. As shown in <figref idref="DRAWINGS">FIG. 4</figref>, forwarding engines <b>220</b> may include ports <b>410</b> that each include a port topology component <b>420</b>. Further, control component <b>230</b> may include a topology control component <b>430</b> and a valid cable configuration data structure <b>440</b>. Topology control component <b>430</b> and valid cable configuration data structure <b>440</b> may be in the control plane of system <b>100</b>.</p>
<p id="p-0038" num="0037">As used herein, the &#x201c;topology&#x201d; of system <b>100</b> may refer to the arrangement of cables, such as optical cables, that connect the various chassis devices, such as SFCs <b>110</b> to LCCs <b>120</b>. In <figref idref="DRAWINGS">FIG. 2</figref>, the connections formed by these cables may be represented by the lines from forwarding engines <b>220</b> to switch fabric <b>210</b>.</p>
<p id="p-0039" num="0038">Each port <b>410</b> may include hardware and/or software used to provide the physical transmission of data over a link, such as an optical cable. Each port <b>410</b> may also include the physical structure used to hold the physical link, such as the optical cable, into the structure in which the port is installed (e.g., LCC <b>120</b> or SFC <b>110</b>). Ports <b>410</b> may particularly refer to the ports used to connect various chassis of system <b>100</b>. Each port <b>410</b> may correspond to the physical interface into which a cable is inserted.</p>
<p id="p-0040" num="0039">Each port <b>410</b> may include a port topology component <b>420</b>. Port topology component <b>420</b> may generally operate to periodically insert topology messages into the egress data stream. The topology messages may include, for example, an identifier corresponding to the port and an identifier corresponding to the chassis device. For example, each SFC <b>110</b> and LCC <b>120</b> may be assigned a globally unique chassis device identifier. This globally unique device identifier, along with a port number, may be included in each topology message.</p>
<p id="p-0041" num="0040">Port topology component <b>420</b> may also operate to locate and extract topology messages included in ingress data streams. Each topology message may include one or more predefined bit patterns that identify the message as a topology message. Additionally, topology messages may be periodically transmitted, such as every X number of bits. Based on the predefined bit patterns and/or the known periodicity of the topology messages, port topology component <b>420</b> may locate and extract ingress topology messages. The identifier corresponding to the port and the identifier corresponding to the device, which may be extracted from the topology message, may be transmitted to topology control component <b>430</b>.</p>
<p id="p-0042" num="0041">Topology control component <b>430</b> may include logic to receive and process information from topology control messages received by a chassis device, such as SFC <b>110</b> and/or LCC <b>120</b>. Topology control component <b>430</b> may, for example, compare, for each port <b>410</b> at which a topology message is received, the port/device identifiers associated with the topology message with the valid ports for that port/device identifier combination. Information describing valid port/device identifiers may be stored in valid cable configuration data structure <b>440</b>.</p>
<p id="p-0043" num="0042">Valid cable configuration data structure <b>440</b> may include, for example, a file, a data base, or other data structures that include information relating to valid port/device configurations. For example, in one implementation, valid cable configuration data structure <b>440</b> may include an indication of which port numbers of a particular chassis device are compatible with other port numbers of another chassis device. In some implementations, system <b>100</b> may be set up in multiple different modes or configurations, each of which may be associated with a different set of valid port connection configurations. In this situation, valid cable configuration data structure <b>440</b> may include, for each mode or configuration setting, an indication of which port numbers of a particular chassis device are compatible with other port numbers of another chassis device. In another possible implementation, each port of one chassis device may connect to a set of valid ports at another chassis device. In this situation, valid cable configuration data structure <b>440</b> may include an indication of the set of valid ports that may correspond to each port in the current chassis device.</p>
<p id="p-0044" num="0043">The operation of port topology component <b>420</b>, topology control component <b>430</b>, and valid cable configuration data structure <b>440</b> will be described in more detail below. Although <figref idref="DRAWINGS">FIG. 4</figref> shows an example implementation of a portion of system <b>100</b>, in other implementations, the portion of system <b>100</b> shown in <figref idref="DRAWINGS">FIG. 4</figref> may include fewer components, different components, differently arranged components, or additional components than depicted in <figref idref="DRAWINGS">FIG. 4</figref>. Alternatively, or additionally, one or more of the illustrated components may perform one or more other tasks described as being performed by one or more other components.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 5</figref> is a flow chart illustrating an example process <b>500</b> for discovering the topology in a multi-chassis device. Process <b>500</b> may be performed, for example, by each chassis device, such as by port topology component <b>420</b> of SFC <b>110</b> and/or LCC <b>120</b>, of system <b>100</b>.</p>
<p id="p-0046" num="0045">Process <b>500</b> may include periodically inserting a topology message into the data sent over a cable (block <b>510</b>). For example, port topology component <b>420</b> may insert a topology message into, for example, a data stream for a single optical fiber in each cable that connects to another chassis device in system <b>100</b>. As previously mentioned, the topology message may be inserted periodically, such as every certain number of transmitted bits or after the elapse of a time interval, and may include a predetermined header and/or trailing bit pattern to distinguish the topology message from other data.</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 6</figref> is a diagram illustrating fields in an exemplary topology message <b>600</b>. As shown, topology message <b>600</b> may include a header section <b>610</b>, a port identifier (ID) section <b>620</b>, and a chassis device identifier (ID) section <b>630</b>. Header section <b>610</b> may include the predetermined bit pattern that is used to distinguish topology message <b>600</b> as a topology message (as opposed to other data). Port ID section <b>620</b> may include an identifier, such as a port number or other code, which indicates the port that generated and transmitted topology message <b>600</b>. Chassis device ID section <b>630</b> may include an identifier that identifies the chassis device that includes the port that generated and transmitted topology message <b>600</b>. The identifier in chassis device ID section <b>630</b> may be, for instance, a globally unique value or a value that identifies the type of device (e.g., SFC or LCC) and the model of the device.</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 6</figref> illustrates a number of example fields in topology message <b>600</b>. In other implementations, topology message <b>600</b> may include additional, different, or fewer fields.</p>
<p id="p-0049" num="0048">Referring back to <figref idref="DRAWINGS">FIG. 5</figref>, process <b>500</b> may further include receiving topology messages in incoming traffic (block <b>520</b>). The incoming topology messages may be topology messages transmitted from other chassis devices, such as other devices in system <b>100</b>. The topology messages may be received in-band with other data and may be recognized by port topology component <b>420</b> as topology messages based on, for example, the transmitted periodicity of the topology messages and/or predetermined bit patterns used to identify a message as a topology message. In one implementation, port topology component <b>420</b> may be initialized to lock onto the periodicity of the topology messages by searching the received data stream for the predetermined bit pattern and using the periodicity of the topology messages to &#x201c;lock on&#x201d; to additional instances of the topology message.</p>
<p id="p-0050" num="0049">Process <b>500</b> may further include transmitting the port identifier (e.g., from port ID section <b>620</b> of the topology message) and the chassis device identifier (e.g., from device ID section <b>630</b> of the topology message) to topology control component <b>430</b>. Additionally, in some implementations, a port identifier for the receiving port may also be transmitted to topology control component <b>430</b>. In one implementation, this information (i.e., the port identifier of the sending chassis device, the chassis device identifier, and the port identifier of the receiving device) may only be transmitted when the port identifier or chassis device identifier in the received topology message is different from the previous topology messages. Thus, in this situation, only changes in the connection status of the cable may be transmitted to topology control component <b>430</b>.</p>
<p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. 7</figref> is a flow chart illustrating an example process <b>700</b> for processing port/chassis device identifier information. Process <b>700</b> may be performed, for example, by topology control component <b>430</b>.</p>
<p id="p-0052" num="0051">Process <b>700</b> may include receiving the chassis device identifier and port identifier corresponding to the chassis device that transmitted a topology message (block <b>710</b>). This information may be received by topology control component <b>430</b> in response to port topology component <b>420</b> receiving a topology message (e.g., blocks <b>520</b> and <b>530</b> in <figref idref="DRAWINGS">FIG. 5</figref>). The port identifier of the local, receiving port may also be received (block <b>710</b>). At this point, topology control component <b>430</b> may be aware of where both ends of the cable, corresponding to the topology message, are connected.</p>
<p id="p-0053" num="0052">Process <b>700</b> may further include determining whether the cable connection is valid (block <b>720</b>). Topology control component <b>430</b> may lookup, in valid cable configuration data structure <b>440</b>, whether the cable connection is a valid or permissible connection. For example, topology control component <b>430</b> may lookup whether the cable connection is valid given the particular configuration of system <b>100</b>. In some configurations, each cable between two chassis devices, such as between SFC <b>110</b> and LCC <b>120</b>, may be required to be connected to specific ports on each of the devices. In other configurations, a cable that is inserted into one port on one of the chassis devices can be inserted into a range of possible valid ports in the other device.</p>
<p id="p-0054" num="0053">When the cable connection is determined to not be valid (block <b>720</b>&#x2014;NO), an error indication may be output (block <b>730</b>). The chassis device detecting the non-valid cable connection may, for example, alert the user through an audible and/or visual indication of the non-valid cable connection. For example, each port may be associated with an &#x201c;error&#x201d; light which may be turned on when a non-valid cable connection is detected. Alternatively or additional, a sound may be emitted when a non-valid cable connection is detected. Advantageously, the error indication may be made soon after the cable is inserted so that the installer will immediately know that the cable is incorrectly inserted and can remove the cable and place it into its correct port.</p>
<p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. 8</figref> is a flow chart illustrating an example process <b>800</b> for processing port/chassis device identifier information according to a second possible implementation. Process <b>800</b> may be performed, for example, by topology control component <b>430</b> of each chassis device. Process <b>800</b> may be performed for system <b>100</b> in situations in which chassis devices can dynamically change the function of ports. For example, in the context of a router, forwarding or routing tables may be modified to swap the functionality of two ports.</p>
<p id="p-0056" num="0055">Process <b>800</b> may include receiving the chassis device identifier and port identifier corresponding to the chassis device that transmitted a topology message (block <b>810</b>). This information may be received by topology control component <b>430</b> in response to port topology component <b>420</b> receiving a topology message (e.g., blocks <b>520</b> and <b>530</b> in <figref idref="DRAWINGS">FIG. 5</figref>). The port identifier of the local, receiving port may also be received (block <b>810</b>). At this point, topology control component <b>430</b> may be aware of where both ends of the cable, corresponding to the topology message, are connected.</p>
<p id="p-0057" num="0056">Process <b>800</b> may further include determining whether the cable connection is valid (block <b>820</b>). Topology control component <b>430</b> may lookup, in valid cable configuration data structure <b>440</b>, whether the cable connection is a valid or permissible connection. For example, topology control component <b>430</b> may lookup whether the cable connection is valid given the particular configuration of system <b>100</b>. In some configurations, each cable between two chassis devices, such as between SFC <b>110</b> and LCC <b>120</b>, may be required to be connected to specific ports on each of the devices. In other configurations, a cable that is inserted into one port on one of the chassis devices can be inserted into a range of possible valid ports in the other device.</p>
<p id="p-0058" num="0057">When the cable connection is determined to not be valid (block <b>820</b>&#x2014;NO), process <b>800</b> may include determining whether the local port is reconfigurable to make the cable connection valid (block <b>830</b>). In some implementations, one or more of the ports on the chassis device may be re-configurable so that the logical function of a port can be mapped to one or more other physical ports. For example, when initially plugged in, the port may be designated as a port that is to connect to a first chassis device, but the plugged in cable may connect to a second chassis device. If topology control component <b>430</b> is able to swap the logical functions of these two ports, the port may be determined to be reconfigurable.</p>
<p id="p-0059" num="0058">When a port is determined to be reconfigurable (block <b>830</b>&#x2014;YES), the port may be reconfigured to be valid in the context of the cable currently plugged into the port (block <b>840</b>). For a router, for example, routing or forwarding tables may be modified to reflect the chassis device connected at the other end of the cable.</p>
<p id="p-0060" num="0059">When the port is determined to not be reconfigurable, (block <b>830</b>&#x2014;NO), an error indication may be output (block <b>850</b>). The chassis device detecting the non-valid cable connection may, for example, alert the user through an audible and/or visual indication of the non-valid cable connection. For example, each port may be associated with an &#x201c;error&#x201d; light which may be turned on when a non-valid cable connection is detected. Alternatively or additional, a sound may be emitted when a non-valid cable connection is detected.</p>
<p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. 9</figref> is a diagram of an example portion of port topology component <b>410</b> relating to the transmission of a topology message. As shown in <figref idref="DRAWINGS">FIG. 9</figref>, port topology component <b>410</b> may include a number of programmable registers, including a port ID register <b>910</b>, a chassis device ID register <b>920</b>, and a message count threshold register <b>930</b>. Additionally, port topology component <b>410</b> may include a traffic counter <b>940</b> and a topology message generator <b>950</b>.</p>
<p id="p-0062" num="0061">Port ID register <b>910</b> may be a register programmed to store the port identifier, such as a port number value, for the port in which port topology component <b>410</b> is implemented. Similarly, chassis device ID register <b>920</b> may be a register programmed to store the chassis device identifier for the chassis device.</p>
<p id="p-0063" num="0062">Message count threshold register <b>930</b> may be a register that stores a value relating to the frequency with which a topology message is generated. For example, a value of 100,000 may indicate that a topology message is to be generated and inserted into the outgoing traffic every 100,000 bits. Message count threshold register <b>930</b> may be a programmable register that can be set by the manufacturer and/or the administrator of system <b>100</b>. Message count threshold register <b>930</b> may generally be used to control the relative bandwidth with which topology messages are transmitted in-band with the other outgoing traffic. For example, a higher value for message count threshold register <b>930</b> may result in less frequent transmission of the topology messages.</p>
<p id="p-0064" num="0063">Traffic counter <b>940</b> may measure the amount of outgoing traffic, such as by counting the number of outgoing bits. Traffic counter <b>940</b> may receive the threshold value (THRESH) from message count threshold register <b>930</b> and output a signal to topology message generator <b>950</b> every time the threshold number of bits have been transmitted. In other implementations, traffic counter <b>940</b> may generate the signal to topology message generator <b>950</b> in other ways, such as based on an elapsed period time value, as set in register <b>930</b>.</p>
<p id="p-0065" num="0064">Topology message generate <b>950</b> may generate, when signaled by traffic counter <b>940</b>, a topology message (e.g., topology message <b>600</b>). The topology message may include the port identifier from port ID register <b>910</b> and the chassis device identifier from chassis device ID register <b>920</b>. The topology message may be sent as part of the outgoing traffic.</p>
<p id="p-0066" num="0065">Although <figref idref="DRAWINGS">FIG. 9</figref> shows an example implementation of a portion of port topology component <b>410</b>, in other implementations, the portion of port topology component <b>410</b> shown in <figref idref="DRAWINGS">FIG. 9</figref> may include fewer components, different components, differently arranged components, or additional components than depicted in <figref idref="DRAWINGS">FIG. 9</figref>. Alternatively, or additionally, one or more of the illustrated components may perform one or more other tasks described as being performed by one or more other components.</p>
<p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. 10</figref> is a diagram of an example portion of port topology component <b>410</b> relating to the reception of a topology message. As shown in <figref idref="DRAWINGS">FIG. 10</figref>, port topology component <b>410</b> may include a topology message detector component <b>1010</b> and a topology message notification component <b>1020</b>.</p>
<p id="p-0068" num="0067">Topology message detector component <b>1010</b> may include logic to detect and extract topology messages that are embedded within incoming traffic. Topology message detector component <b>1010</b> may, for example, based on the expected periodicity of the topology messages and/or known bit patterns in a header portion of the topology messages, detect the topology messages in the incoming traffic stream. Topology message detector component <b>1010</b> may then extract the topology messages and forward the topology messages to topology message notification component <b>1020</b>.</p>
<p id="p-0069" num="0068">Topology message notification component <b>1020</b> may notify control component <b>430</b> of the reception of the topology message. Topology message notification component <b>1020</b> may, for example, transmit the port identifier from the topology message, the chassis device identifier from the topology message, and an identifier for the port at which the topology message was received, to control component <b>430</b>. In one implementation, topology message control component <b>1020</b> may only notify control component <b>430</b> when the currently received topology message does not match the previously received topology message.</p>
<p id="p-0070" num="0069">Although <figref idref="DRAWINGS">FIG. 10</figref> shows an example implementation of a portion of port topology component <b>410</b>, in other implementations, the portion of port topology component <b>410</b> shown in <figref idref="DRAWINGS">FIG. 10</figref> may include fewer components, different components, differently arranged components, or additional components than depicted in <figref idref="DRAWINGS">FIG. 10</figref>. Alternatively, or additionally, one or more of the illustrated components may perform one or more other tasks described as being performed by one or more other components.</p>
<p id="p-0071" num="0070">As described above, a small amount of topology information for a multi-chassis network device is transmitted in-band. The topology information may be transmitted as part of a training and alignment process that needs to be performed to align transmissions between devices in the multi-chassis network device. Advantageously, errors in connecting the cabling between chassis devices can be quickly detected and reported or the errors can be corrected by reconfiguring the role of the ports of the device.</p>
<p id="p-0072" num="0071">Although the in-band topology message transmissions were described herein as being used to discover errors in cabling between chassis devices, in alternative possible implementations, other types of information may be included in the &#x201c;topology&#x201d; message and used by the chassis devices.</p>
<p id="p-0073" num="0072">It will also be apparent that aspects described herein may be implemented in many different forms of software, firmware, and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement aspects described herein is not intended to limit the scope of the invention. Thus, the operation and behavior of the aspects were described without reference to the specific software code&#x2014;it being understood that software and control hardware can be designed to implement the aspects based on the description herein.</p>
<p id="p-0074" num="0073">While series of blocks have been described in <figref idref="DRAWINGS">FIGS. 5</figref>, <b>7</b>, and <b>8</b>, the order of the blocks may vary in other implementations. Also, non-dependent blocks may be performed in parallel.</p>
<p id="p-0075" num="0074">Even though particular combinations of features are recited in the claims and/or disclosed in the specification, these combinations are not intended to limit the invention. In fact, many of these features may be combined in ways not specifically recited in the claims and/or disclosed in the specification. Although each dependent claim listed below may directly depend on only one other claim, the disclosure of the invention includes each dependent claim in combination with every other claim in the claim set.</p>
<p id="p-0076" num="0075">Further, certain aspects described herein may be implemented as &#x201c;logic&#x201d; or as a &#x201c;component&#x201d; that performs one or more functions. This logic or component may include hardware, such as an ASIC or a FPGA, or a combination of hardware and software.</p>
<p id="p-0077" num="0076">No element, act, or instruction used in the description of the present application should be construed as critical or essential to the invention unless explicitly described as such. Also, as used herein, the article &#x201c;a&#x201d; is intended to include one or more items. Where only one item is intended, the term &#x201c;one&#x201d; or similar language is used. Further, the phrase &#x201c;based on&#x201d; is intended to mean &#x201c;based, at least in part, on&#x201d; unless explicitly stated otherwise. The scope of the invention is defined by the claims and their equivalents.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A network device comprising:
<claim-text>a port to connect the network device to a second network device, the port including logic to:
<claim-text>insert topology messages into traffic outgoing from the port, each of the topology messages including an identification of the port and the network device,
<claim-text>the topology messages being inserted into the traffic outgoing from the port as part of a training and alignment process for the traffic, and</claim-text>
</claim-text>
<claim-text>extract topology messages from traffic incoming to the port from the second network device; and</claim-text>
</claim-text>
<claim-text>a control component to:
<claim-text>determine, based on an identification of the second network device and a second port at the second network device, as determined from the extracted topology messages, whether the port and the second port form a valid cable connection, and</claim-text>
<claim-text>output, to a user, an indication of an invalid cable connection when the determination of whether the port and the second port device form a valid connection indicates an invalid connection.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The network device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the indication of the invalid connection includes a visual or audible indication.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The network device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the control component is further to:
<claim-text>determine, when the port and the second port of the second network device are determined to form an invalid connection, whether the port is eligible to be reconfigured to form a valid connection with the second port; and</claim-text>
<claim-text>reconfigure the port to form the valid connection when the port is eligible to be reconfigured to form the valid connection.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The network device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the network device and the second network device include devices in a multi-chassis router or switch.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The network device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the topology messages are inserted into the outgoing traffic on a per-cable basis.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The network device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the port further includes logic to:
<claim-text>forward one of the extracted topology messages to the control component when the one of the extracted topology messages includes information different than a previous one of the extracted topology messages.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The network device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the port further includes:
<claim-text>a programmable register to store a value that controls a period with which the topology messages are inserted into the traffic outgoing from the port.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The network device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the port further includes:
<claim-text>a programmable register to store a value that defines a number of bits that are transmitted between successive topology messages.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The network device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, where the port corresponds to a physical interface into which a cable is inserted.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A method comprising:
<claim-text>inserting, by a device and into a first data stream output from a first port of the device, first control information identifying the first port,
<claim-text>the first control information being inserted in-band with non-control information transmitted from the first port, and</claim-text>
<claim-text>the first control information being inserted into the first data stream as part of a training and alignment process;</claim-text>
</claim-text>
<claim-text>receiving, by the device and from a second data stream received by the first port of the device, second control information identifying a second port at another device connected to the device via a cable;</claim-text>
<claim-text>determining, by the device and based on the second control information, whether the connection of the first port to the second port, via the cable, is valid; and</claim-text>
<claim-text>causing, when the connection of the first port to the second port is determined to not be valid, the device to output an indication that the connection is not valid or to reconfigure the device to make the connection of the first port to the second port valid.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, where the first port corresponds to a physical interface into which the cable is inserted.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, where the first control information additionally identifies the device.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, where the device is a modular component of a multi-chassis router or switch.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, where determining whether the connection of the first port to the second port is valid includes:
<claim-text>determining that the second control information is different than a previous version of the second control information, and</claim-text>
<claim-text>determining whether the connection of the first port to the second port is valid after determining that the second control information is different than the previous version of the second control information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, where the first control information includes information regarding a topology of a network associated with the device.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A device comprising:
<claim-text>a first register to store an identification value for a port that is used to connect, via a cable, modular components;</claim-text>
<claim-text>a topology message generator to insert a topology message into traffic outgoing from the port,
<claim-text>the topology message including an identification of the port;</claim-text>
</claim-text>
<claim-text>a second register to store a value corresponding to an amount of data that is to be transmitted before the topology message generator inserts the topology message into the traffic; and</claim-text>
<claim-text>a traffic counter to measure the amount of traffic that is transmitted,
<claim-text>the traffic counter signaling, based on the value of the second register, the topology message generator to insert the topology message into the traffic.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The device of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising:
<claim-text>a third register to store an identification value corresponding to the device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The device of <claim-ref idref="CLM-00016">claim 16</claim-ref>, where the value stored in the second register represents a number of bits that are to be transmitted before the topology message generator inserts the topology message into the traffic.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The device of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising:
<claim-text>a topology message detector to extract a second topology message from incoming traffic at the port,
<claim-text>the second topology message including an indication of a second port corresponding to a second device from which the second topology message was sent.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The device of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising:
<claim-text>a control component to determine whether the port and a second port, associated with a second device, correspond to a valid connection between the device and the second device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The device of <claim-ref idref="CLM-00020">claim 20</claim-ref>, where the control component is to output a visual or audio signal when the port and the second port are determined to not correspond to a valid connection.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The device of <claim-ref idref="CLM-00020">claim 20</claim-ref>, where the control component is to reconfigure the device, to form a valid connection between the port and the second port, when the port and the second port are determined to not correspond to a valid connection.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The device of <claim-ref idref="CLM-00016">claim 16</claim-ref>, where the port corresponds to a physical interface into which a cable is inserted. </claim-text>
</claim>
</claims>
</us-patent-grant>
