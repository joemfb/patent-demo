<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627473-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627473</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13155761</doc-number>
<date>20110608</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>386</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20130101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>21</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>29</main-group>
<subgroup>06</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>726 23</main-classification>
<further-classification>726 25</further-classification>
</classification-national>
<invention-title id="d2e53">Peer-to-peer (P2P) botnet tracking at backbone level</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>2005/0149759</doc-number>
<kind>A1</kind>
<name>Vishwanath et al.</name>
<date>20050700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713201</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2006/0176822</doc-number>
<kind>A1</kind>
<name>Doyle et al.</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370241</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2008/0080518</doc-number>
<kind>A1</kind>
<name>Hoeflin et al.</name>
<date>20080400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>37039542</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2010/0054128</doc-number>
<kind>A1</kind>
<name>O'Hern</name>
<date>20100300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2010/0162396</doc-number>
<kind>A1</kind>
<name>Liu et al.</name>
<date>20100600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2010/0202299</doc-number>
<kind>A1</kind>
<name>Strayer et al.</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00007">
<othercit>Nagaraja et al., &#x201c;BotGrep: Finding P2P Bots with Structured Graph Analysis,&#x201d; University of Illinois at Urbana-Champaign, available at http://www.usenix.org/events/sec10/tech/full<sub>&#x2014;</sub>papers/Nagaraja.pdf (accessed on Dec. 23, 2010).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00008">
<othercit>Coskun et al., &#x201c;Friends of an Enemy: Identifying Local Members of Peer-to-Peer Botnets Using Mutual Contacts,&#x201d; ACSAC '10, Austin, Texas, Dec. 6, 2010.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>19</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>5</number-of-drawing-sheets>
<number-of-figures>5</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120317641</doc-number>
<kind>A1</kind>
<date>20121213</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Coskun</last-name>
<first-name>Baris</first-name>
<address>
<city>Weehawken</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Baliga</last-name>
<first-name>Arati</first-name>
<address>
<city>Edison</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Coskun</last-name>
<first-name>Baris</first-name>
<address>
<city>Weehawken</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Baliga</last-name>
<first-name>Arati</first-name>
<address>
<city>Edison</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Greenblum &#x26; Bernstein, P.L.C.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>AT&#x26;T Intellectual Property I, L.P.</orgname>
<role>02</role>
<address>
<city>Atlanta</city>
<state>GA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Abrishamkar</last-name>
<first-name>Kaveh</first-name>
<department>2494</department>
</primary-examiner>
<assistant-examiner>
<last-name>Tran</last-name>
<first-name>Tri</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method, computer-readable medium, and system for analyzing backbone traffic to determine compromised hosts from among hosts on a network are provided. The backbone traffic includes data flows. Each of the data flows is analyzed to determine peer-to-peer data flows from among the data flows. Each of the peer-to-peer data flows is one of the data flows having a source address and a destination address that are each unassociated with a domain name. The peer-to-peer data flows are analyzed to determine the compromised hosts from among the hosts. Each of the compromised hosts is interconnected with another of the compromised hosts via at least one of the peer-to-peer data flows.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="201.68mm" wi="80.18mm" file="US08627473-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="156.89mm" wi="147.07mm" file="US08627473-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="194.82mm" wi="171.62mm" file="US08627473-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="128.19mm" wi="149.27mm" file="US08627473-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="212.43mm" wi="79.16mm" file="US08627473-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="149.86mm" wi="97.37mm" file="US08627473-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">1. Field of the Disclosure</p>
<p id="p-0003" num="0002">The present disclosure generally relates to network security. More specifically, the present disclosure relates to identifying bots within a botnet.</p>
<p id="p-0004" num="0003">2. Background Information</p>
<p id="p-0005" num="0004">Botnets are networks of compromised hosts. Botnets pose a significant threat to both a network's infrastructure and its customers. Therefore, it is important for an Internet Service Provider to detect and track botnet members, i.e., bots.</p>
<p id="p-0006" num="0005">Botnets generally include a bot master that manages a botnet by sending commands to each of the bots within the botnet. In order for the botnet to function properly, the bot master must be able to communicate with each of the bots and send them commands through a command and control channel.</p>
<p id="p-0007" num="0006">Traditional botnets generally adopted a centralized command and control architecture to communicate commands from the bot master to each of the bots. In a centralized command and control architecture, the bot master publishes commands at a central location, such as a specific IP address, a specific IRC channel, a specific domain name, etc. Thereafter, each of the bots fetches the commands from the central location.</p>
<p id="p-0008" num="0007">Modern botnets have adopted new command and control architectures. For example, new botnets often adopt a peer-to-peer command and control architecture to distribute commands amongst each of the bots. In the peer-to-peer command and control architecture, there is no centralized controller. Instead, the bot master simply injects a command into the botnet at any arbitrary point. The injected command is disseminated through the botnet amongst the bots using various peer-to-peer protocols.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0002" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 1</figref> shows an exemplary general computer system that includes a set of instructions for analyzing backbone traffic to determine a plurality of compromised hosts from among a plurality of hosts on a network.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 2</figref> is a schematic of an exemplary system for analyzing backbone traffic to determine a plurality of compromised hosts from among a plurality of hosts on a network, according to an aspect of the present disclosure.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 3</figref> is an exemplary communication graph showing a plurality of hosts and a plurality of peer-to-peer network flows for determining a plurality of compromised hosts from among the plurality of hosts, according to an aspect of the present disclosure.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 4</figref> is a flowchart of an exemplary method for analyzing backbone traffic to determine a plurality of compromised hosts from among a plurality of hosts on a network, according to an aspect of the present disclosure.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart of an exemplary method for analyzing backbone traffic to determine a plurality of compromised hosts from among a plurality of hosts on a network, according to an aspect of the present disclosure.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0003" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0014" num="0013">In view of the foregoing, the present disclosure, through one or more of its various aspects, embodiments and/or specific features or sub-components, is thus intended to bring out one or more of the advantages as specifically noted below.</p>
<p id="p-0015" num="0014">According to an embodiment of the present disclosure, a method analyzes backbone traffic to determine a plurality of compromised hosts from among a plurality of hosts on a network. The backbone traffic includes a plurality of data flows. The method analyzes each of the data flows included in the backbone traffic to determine a plurality of peer-to-peer data flows. Each of the peer-to-peer data flows is one of the data flows that has a source address and a destination address that are each unassociated with a domain name. The method analyzes, with a processor, the peer-to-peer data flows to determine the compromised hosts from among the hosts. Each of the compromised hosts is interconnected with another of the compromised hosts via at least one of the peer-to-peer data flows.</p>
<p id="p-0016" num="0015">According to one aspect of the present disclosure, at least two of the compromised hosts are predetermined compromised hosts. In this regard, the peer-to-peer data flows are analyzed to determine at least one path that interconnects the predetermined compromised hosts. The path includes at least two of the peer-to-peer data flows, and the compromised hosts are on the path that interconnects the predetermined compromised hosts.</p>
<p id="p-0017" num="0016">According to another aspect of the present disclosure, at least two of the compromised hosts are predetermined compromised hosts. In this regard, the method graphs the peer-to-peer data flows on a communication graph with each of the hosts being a node and each of the peer-to-peer data flows being an edge. The method further determines, with a predetermined graph algorithm, whether the communication graph defines at least one path that interconnects the predetermined compromised hosts. The path includes at least two of the peer-to-peer data flows. Furthermore, the path that interconnects the predetermined compromised hosts on the communication graph is analyzed to determine the compromised hosts from among the hosts in response to determining that the communication graph defines the path.</p>
<p id="p-0018" num="0017">According to an additional aspect of the present disclosure, at least one of the compromised hosts is not on a path that interconnects the predetermined compromised hosts. The one of the compromised hosts is determined based on a proximity to at least one of the predetermined compromised hosts.</p>
<p id="p-0019" num="0018">According to yet another aspect of the present disclosure, the method determines whether the communication graph defines at least one additional path that interconnects two of the plurality of compromised hosts other than the predetermined compromised hosts. The at least one additional path includes at least two of the plurality of peer-to-peer data flows. In this regard, the method analyzes the additional path that interconnects the two of the compromised hosts other than the predetermined compromised hosts to determine the compromised hosts from among the hosts in response to determining that the communication graph defines the additional path.</p>
<p id="p-0020" num="0019">According to still another aspect of the present disclosure, the method assigns a probability to each of the hosts that is located on the path based upon a relationship with one of the path and the predetermined compromised hosts in response to determining that the communication graph defines the path. The probability of each of the hosts that is located on the path is analyzed to determine the compromised hosts from among the hosts.</p>
<p id="p-0021" num="0020">According to another aspect of the present disclosure, the method tracks the path for a predetermined period of time to determine at least one of dynamic information of the compromised hosts and at least one additional compromised host in response to determining that the communication graph defines the path.</p>
<p id="p-0022" num="0021">According to yet another aspect of the present disclosure, the method graphs the peer-to-peer data flows on a communication graph with each of the hosts being a node and each of the peer-to-peer data flows being an edge. In this regard, at least one of the compromised hosts is a predetermined compromised host, and the communication graph is analyzed to determine the compromised hosts based on a proximity to the predetermined compromised host.</p>
<p id="p-0023" num="0022">According to still another aspect of the present disclosure, each of the data flows is analyzed to determine the peer-to-peer data flows by searching a database of domain name system records to determine whether the source address and the destination address of each of the data flows are each unassociated with the domain name.</p>
<p id="p-0024" num="0023">According to an additional aspect of the present disclosure, each of the data flows is analyzed to determine the peer-to-peer data flows by performing reverse domain name system queries to determine whether the source address and the destination address of each of the data flows are each unassociated with the domain name.</p>
<p id="p-0025" num="0024">According to another embodiment of the present disclosure, a non-transitory computer-readable medium includes an executable program that analyzes backbone traffic to determine a plurality of compromised hosts from among a plurality of hosts on a network. The backbone traffic includes a plurality of data flows. The non-transitory computer-readable medium includes a resolving code segment that, when executed, analyzes each of the data flows included in the backbone traffic to determine a plurality of peer-to-peer data flows. Each of the peer-to-peer data flows is one of the data flows that has a source address and a destination address that are each unassociated with a domain name. The non-transitory computer-readable medium also includes a peer-to-peer data flow analyzing code segment that, when executed, analyzes the peer-to-peer data flows to determine the compromised hosts from among the hosts. Each of the compromised hosts being interconnected with another of the compromised hosts via at least one of the peer-to-peer data flows.</p>
<p id="p-0026" num="0025">According to another aspect of the present disclosure, at least two of the compromised hosts are predetermined compromised hosts. A graphing code segment, when executed, graphs the peer-to-peer data flows on a communication graph with each of the hosts being a node and each of the peer-to-peer data flows being an edge. A path determining code segment that, when executed, determines, with a predetermined graph algorithm, whether the communication graph defines at least one path that interconnects the predetermined compromised hosts. The path includes at least two of the peer-to-peer data flows, and the peer-to-peer data flow analyzing code segment analyzes the path that interconnects the predetermined compromised hosts on the communication graph to determine the compromised hosts from among the hosts in response to the path determining code segment determining that the communication path defines the path.</p>
<p id="p-0027" num="0026">According to still another aspect of the present disclosure, at least one of the compromised hosts is not on a path that interconnects the predetermined compromised hosts. The peer-to-peer data flow analyzing code segment determines the compromised host that is not on a path that interconnects the predetermined compromised hosts based on a proximity to at least one of the predetermined compromised hosts.</p>
<p id="p-0028" num="0027">According to yet another aspect of the present disclosure, the path determining code segment further determines whether the communication graph defines at least one additional path that interconnects two of the compromised hosts other than the predetermined compromised hosts, the additional path including at least two of the peer-to-peer data flows. Furthermore, the peer-to-peer data flow analyzing code segment analyzes the additional path that interconnects the two of the compromised hosts other than the predetermined compromised hosts to determine the compromised hosts from among the hosts in response to the path determining code segment determining that the communication path defines the additional path.</p>
<p id="p-0029" num="0028">According to an additional aspect of the present disclosure, a graphing code segment, when executed, graphs the peer-to-peer data flows on a communication graph with each of the hosts being a node and each of the peer-to-peer data flows being an edge. In this regard, at least one of the compromised hosts is a predetermined compromised host, and the peer-to-peer data flow analyzing code segment analyzes the communication graph to determine the compromised hosts based on a proximity to the predetermined compromised host.</p>
<p id="p-0030" num="0029">According to another embodiment of the present disclosure, a system analyzes backbone traffic to determine a plurality of compromised hosts from among a plurality of hosts on a network. The backbone traffic includes a plurality of data flows. The system includes a resolver that analyzes each of the data flows included in the backbone traffic to determine a plurality of peer-to-peer data flows. Each of the peer-to-peer data flows is one of the data flows that has a source address and a destination address that are each unassociated with a domain name. The system further includes a processor that analyzes the peer-to-peer data flows to determine the compromised hosts from among the hosts. Each of the compromised hosts is interconnected with another of the compromised hosts via at least one of the peer-to-peer data flows.</p>
<p id="p-0031" num="0030">According to another aspect of the present disclosure, at least two of the compromised hosts are predetermined compromised hosts. The system further includes a graphics processor that graphs the peer-to-peer data flows on a communication graph with each of the hosts being a node and each of the peer-to-peer data flows being an edge. An algorithm processor executes a predetermined graph algorithm to determine whether the communication graph defines at least one path that interconnects the predetermined compromised hosts. The path includes at least two of the peer-to-peer data flows. In this regard, the central processor analyzes the path that interconnects the predetermined compromised hosts on the communication graph to determine the compromised hosts from among the hosts in response to the algorithm processor determining that the communication path defines the path.</p>
<p id="p-0032" num="0031">According to still another aspect of the present disclosure, at least one of the compromised hosts is not on a path that interconnects the predetermined compromised hosts. The central processor determined the one of the compromised hosts that is not on a path that interconnects the predetermined compromised hosts based on a proximity to at least one of the predetermined compromised hosts.</p>
<p id="p-0033" num="0032">According to yet another aspect of the present disclosure, the algorithm processor determines whether the communication graph defines at least one additional path that interconnects two of the compromised hosts other than the predetermined compromised host. The additional path includes at least two of the peer-to-peer data flows. In this regard, the central processor analyzes the additional path that interconnects the two of the compromised hosts other than the predetermined compromised hosts to determine the compromised hosts from among the hosts in response to the algorithm processor determining that the communication path defines the additional path.</p>
<p id="p-0034" num="0033">According to an additional aspect of the present disclosure, a graphics processor graphs the peer-to-peer data flows on a communication graph with each of the hosts being a node and each of the peer-to-peer data flows being an edge. In this regard, at least one of the compromised hosts is a predetermined compromised host, and the central processor analyzes the communication graph to determine the compromised hosts based on a proximity to the predetermined compromised host.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 1</figref> is an illustrative embodiment of a general computer system, on which a method for analyzing backbone traffic to determine a plurality of compromised hosts from among a plurality of hosts may be implemented, which is shown and is designated <b>100</b>. The computer system <b>100</b> may also include a set of instructions that can be executed to cause the computer system <b>100</b> to perform any one or more of the methods or computer based functions disclosed herein. The computer system <b>100</b> may operate as a standalone device or may be connected, for example, using a network <b>101</b>, to other computer systems or peripheral devices.</p>
<p id="p-0036" num="0035">In a networked deployment, the computer system may operate in the capacity of a server or as a client user computer in a server-client user network environment, or as a peer computer system in a peer-to-peer (or distributed) network environment. The computer system <b>100</b> can also be implemented as or incorporated into various devices, such as a personal computer (PC), a tablet PC, a set-top box (STB), a personal digital assistant (PDA), a mobile device, a global positioning satellite (GPS) device, a palmtop computer, a laptop computer, a desktop computer, a communications device, a wireless telephone, a land-line telephone, a control system, a camera, a scanner, a facsimile machine, a printer, a pager, a personal trusted device, a web appliance, a network router, switch or bridge, or any other machine capable of executing a set of instructions (sequential or otherwise) that specify actions to be taken by that machine. In a particular embodiment, the computer system <b>100</b> can be implemented using electronic devices that provide voice, video or data communication. Further, while a single computer system <b>100</b> is illustrated, the term &#x201c;system&#x201d; shall also be taken to include any collection of systems or sub-systems that individually or jointly execute a set, or multiple sets, of instructions to perform one or more computer functions.</p>
<p id="p-0037" num="0036">As illustrated in <figref idref="DRAWINGS">FIG. 1</figref>, the computer system <b>100</b> may include a processor <b>110</b>, for example, a central processing unit (CPU), a graphics processing unit (GPU), or both. Moreover, the computer system <b>100</b> can include a main memory <b>120</b> and a static memory <b>130</b> that can communicate with each other via a bus <b>108</b>. As shown, the computer system <b>100</b> may further include a video display unit <b>150</b>, such as a liquid crystal display (LCD), an organic light emitting diode (OLED), a flat panel display, a solid state display, or a cathode ray tube (CRT). Additionally, the computer system <b>100</b> may include an input device <b>160</b>, such as a keyboard, and a cursor control device <b>170</b>, such as a mouse. The computer system <b>100</b> can also include a disk drive unit <b>180</b>, a signal generation device <b>190</b>, such as a speaker or remote control, and a network interface device <b>140</b>.</p>
<p id="p-0038" num="0037">In a particular embodiment, as depicted in <figref idref="DRAWINGS">FIG. 1</figref>, the disk drive unit <b>180</b> may include a computer-readable medium <b>182</b> in which one or more sets of instructions <b>184</b>, e.g. software, can be embedded. A computer-readable medium <b>182</b> is a tangible article of manufacture, from which sets of instructions <b>184</b> can be read. Further, the instructions <b>184</b> may embody one or more of the methods or logic as described herein. In a particular embodiment, the instructions <b>184</b> may reside completely, or at least partially, within the main memory <b>120</b>, the static memory <b>130</b>, and/or within the processor <b>110</b> during execution by the computer system <b>100</b>. The main memory <b>120</b> and the processor <b>110</b> also may include computer-readable media.</p>
<p id="p-0039" num="0038">In an alternative embodiment, dedicated hardware implementations, such as application specific integrated circuits, programmable logic arrays and other hardware devices, can be constructed to implement one or more of the methods described herein. Applications that may include the apparatus and systems of various embodiments can broadly include a variety of electronic and computer systems. One or more embodiments described herein may implement functions using two or more specific interconnected hardware modules or devices with related control and data signals that can be communicated between and through the modules, or as portions of an application-specific integrated circuit. Accordingly, the present system encompasses software, firmware, and hardware implementations.</p>
<p id="p-0040" num="0039">In accordance with various embodiments of the present disclosure, the methods described herein may be implemented by software programs executable by a computer system. Further, in an exemplary, non-limited embodiment, implementations can include distributed processing, component/object distributed processing, and parallel processing. Alternatively, virtual computer system processing can be constructed to implement one or more of the methods or functionality as described herein.</p>
<p id="p-0041" num="0040">The present disclosure contemplates a computer-readable medium <b>182</b> that includes instructions <b>184</b> or receives and executes instructions <b>184</b> responsive to a propagated signal, so that a device connected to a network <b>101</b> can communicate voice, video or data over the network <b>101</b>. Further, the instructions <b>184</b> may be transmitted or received over the network <b>101</b> via the network interface device <b>140</b>.</p>
<p id="p-0042" num="0041">A system <b>200</b> for analyzing backbone traffic to determine a plurality of compromised hosts <b>202</b> from among a plurality of hosts <b>202</b>, <b>204</b> on a network <b>206</b> is generally indicated in <figref idref="DRAWINGS">FIG. 2</figref>. The compromised hosts <b>202</b> may be compromised, for example, via a bot. A bot is an application that runs automated tasks over the network <b>206</b>. The bot may run illegal or illegitimate tasks, such as, but not limited to, denial of service attacks, spaming, phising, etc. Furthermore, the bots may be malicious bots, such as, for example, a virus and/or a worm. Alternatively, the bots may be benevolent bots, such as, for example, charitable bots. Of course, those skilled in the art appreciate that the bot may be any additional and/or alternative type of bot. Moreover, those skilled in the art appreciate that the compromised hosts <b>202</b> may be compromised via additional and/or alternative applications which communicate via the network <b>206</b>.</p>
<p id="p-0043" num="0042">The hosts <b>202</b>, <b>204</b> on the network <b>206</b> include the compromised hosts <b>202</b> and uncompromised hosts <b>204</b>. The hosts <b>202</b>, <b>204</b> may include any device, or combination of devices, which is capable of connecting to and sending network communications via the network <b>206</b>. For example, the hosts <b>202</b>, <b>204</b> may be, but are not limited to, personal computers, laptop computers, tablet computers, personal data assistants, cellular telephones, servers, video game consoles, and the like. Of course, those skilled in the art understand that the above-listed devices are merely meant to be exemplary and are not intended to be exhaustive and/or exclusive.</p>
<p id="p-0044" num="0043">Each of the hosts <b>202</b>, <b>204</b> is capable of connecting to the network <b>206</b>. The network <b>206</b> is generally indicated in <figref idref="DRAWINGS">FIG. 2</figref> and includes a backbone <b>208</b> via which the backbone traffic, including the plurality of data flows, is sent. The backbone traffic sent to and from the hosts <b>202</b>, <b>204</b> traverses the backbone <b>208</b>.</p>
<p id="p-0045" num="0044">In embodiments of the present application, the network <b>206</b> may further include multiple subnetworks <b>210</b>. The subnetworks <b>210</b> may be of the same and/or different type and each connect to the backbone <b>208</b>. The subnetworks <b>210</b> may be any type of network, such as, but not limited to, a local area network, a wide area network, a digital subscriber line network, a broadband cable access network, and the like. Of course, those skilled in the art appreciate that the above-mentioned subnetworks <b>210</b> and above-described network <b>206</b> are merely exemplary and are not meant o be limiting. Different embodiments of the present application may be employed in any type of network commonly known and understood in the art.</p>
<p id="p-0046" num="0045">The system <b>200</b> analyzes the backbone traffic to determine the compromised hosts <b>202</b> from among the hosts <b>202</b>, <b>204</b> on the network <b>206</b>. The system <b>200</b> may be a standalone device or may be connected to other systems and/or peripheral devices. For example, the system <b>200</b> may include, or be included within, any one or more computers, servers, systems, and/or communication networks. In embodiments of the present application, the system <b>200</b> may be connected directly to the backbone <b>208</b> as shown in <figref idref="DRAWINGS">FIG. 2</figref>. Of course, in additional embodiments, the system <b>200</b> may be connected to the backbone <b>208</b> via one of the subnetworks <b>210</b>.</p>
<p id="p-0047" num="0046">The system <b>200</b> includes a resolver <b>212</b> that separates the data flows corresponding to peer-to-peer traffic from the rest of the non-peer-to-peer traffic. Specifically, the resolver <b>212</b> analyzes each of the data flows included within the backbone traffic to determine a plurality of peer-to-peer data flows. The peer-to-peer data flows are data flows between the hosts <b>202</b>, <b>204</b>. Each of the peer-to-peer data flows is determined as being one of the data flows that has a source address and a destination address that are each unassociated with a domain name. In other words, it is assumed that each of the hosts <b>202</b>, <b>204</b> is not associated with a domain name, and thus, that peer-to-peer traffic may be determined as traffic between a source host and a destination host that each are not associated with a domain name.</p>
<p id="p-0048" num="0047">In this regard, it is assumed that most non-peer-to-peer traffic involves domain name system resolution, e.g., traffic between at least one of a source address and a destination address that is associated with a domain name. That is, clients generally find servers by their domain names. On the other hand, bots embedded within compromised hosts of a peer-to-peer botnet cannot afford to register a domain name for each compromised host. As such, the bots communicate via peer-to-peer traffic. Therefore, the bots may be detected by analyzing only the peer-to-peer data flows of the backbone traffic.</p>
<p id="p-0049" num="0048">In an embodiment of the present application, the resolver <b>212</b> may analyze the data flows to determine the peer-to-peer data flows by searching a database <b>214</b> of domain name system records to determine whether the source address and the destination address of each of the data flows are each unassociated with a domain name. According to such an embodiment, the database <b>214</b> may store all, or at least a portion, of the backbone traffic. In this regard, if either the source address or the destination address of one of the data flows is associated with a domain name, the source address or the destination address would have likely already been contacted using a domain name system query, and thus, a domain name system record for the domain name system query would be stored in the database <b>214</b>. Accordingly, the resolver <b>212</b> may determine whether either the source address or the destination address of each of the data flows is associated with a domain name by searching the domain name system records that are stored in the database <b>214</b>.</p>
<p id="p-0050" num="0049">In an additional embodiment of the present application, the resolver <b>212</b> may analyze the data flows to determine the peer-to-peer data flows by performing reverse domain name system queries to determine whether the source address and the destination address of each of the data flows are each unassociated with a domain name. In this regard, the resolver <b>212</b> may perform the reverse domain name system queries in a domain name system server <b>216</b>. The domain name system server <b>216</b> stores domain names in association with internet protocol addresses. As such, the resolver <b>212</b> may query the domain name system server <b>216</b> to determine whether a domain name is stored in association with the source address and the destination address of each of the data flows to determine the peer-to-peer data flows. Of course, those skilled in the art appreciate that the above-described embodiments by which the resolver <b>212</b> determines whether the peer-to-peer data flows are merely exemplary and are not limiting. The resolver <b>212</b> may determine the peer-to-peer data flows from the data flows in accordance with any procedure or method known in the art.</p>
<p id="p-0051" num="0050">The system <b>200</b> includes a central processor <b>218</b> that analyzes the peer-to-peer data flows to determine the compromised hosts <b>202</b> from among the hosts <b>202</b>, <b>204</b>. Each of the compromised hosts <b>202</b> is determined as being interconnected with another one of the compromised hosts <b>202</b> via at least one of the peer-to-peer data flows. Bots of a peer-to-peer botnet that are embedded within compromised hosts communicate with one another to disseminate commands through the botnet. As such, when a group of hosts lie on a single path, the hosts may be identified as compromised hosts with a high probability.</p>
<p id="p-0052" num="0051">According to an embodiment of the system <b>200</b>, at least two of the compromised hosts <b>202</b> are predetermined compromised hosts. In embodiments of the present application, the predetermined compromised hosts may be detected based on abnormal or malicious activity. Additionally, or alternatively, the predetermined compromised hosts may be detected using a publicly available blacklist of known bots. Of course, those skilled in the art appreciate that the above-described methods of detecting the predetermined compromised hosts are merely exemplary and are not limiting. For example, the predetermined compromised hosts may be hosts <b>202</b>, <b>204</b> that are intentionally compromised. That is, the predetermined compromised hosts may be intentionally infected or compromised with a known bot.</p>
<p id="p-0053" num="0052">The system <b>200</b> may further include a graphics processor <b>220</b> that graphs the peer-to-peer data flows on a communication graph. According to an embodiment of the present application, the communication graph may include each compromised host as a node and each of the peer-to-peer data flows as an edge. In this regard, according to an embodiment of the present application, the communication graph may be an undirected graph. An exemplary and non-limiting communication graph is generally shown in <figref idref="DRAWINGS">FIG. 3</figref>. As shown in <figref idref="DRAWINGS">FIG. 3</figref>, each of the peer-to-peer data flows <b>302</b> is an edge, and each of the hosts <b>304</b>-<b>322</b> is a node. Of course, those skilled in the art appreciate that the communication graph shown in <figref idref="DRAWINGS">FIG. 3</figref> is merely exemplary and not meant to be limiting. Moreover, those skilled in the art appreciate that the graphics processor <b>220</b> may graph the plurality of peer-to-peer data flows on additional types of graphs and/or trees in addition, or alternatively, to directed graphs.</p>
<p id="p-0054" num="0053">In the embodiment of the present application in which the compromised hosts <b>202</b> include two predetermined compromised hosts, the system <b>200</b> may include an algorithm processor <b>222</b> that executes a predetermined graph algorithm to determine whether the communication graph defines at least one path that interconnects the predetermined compromised hosts. The predetermined graph algorithm may be any type of graph algorithm known and understood in the art, such as, but not limited to, a shortest path algorithm and a spanning tree algorithm. In an embodiment of the present application, the path includes at least two of the peer-to-peer data flows for determining an additional, unknown compromised host between the predetermined compromised hosts.</p>
<p id="p-0055" num="0054">The central processor <b>218</b> may analyze the path that interconnects the predetermined compromised hosts on the communication graph to determine the compromised hosts <b>202</b> from among the hosts <b>202</b>, <b>204</b>.</p>
<p id="p-0056" num="0055">According to an embodiment of the present application, the central processor <b>218</b> may determine that each of the hosts <b>202</b>, <b>204</b> that is on a path that interconnects the predetermined compromised hosts is one of the compromised hosts <b>202</b>. For example, in the exemplary communication graph shown in <figref idref="DRAWINGS">FIG. 3</figref>, if hosts <b>304</b>, <b>306</b> are predetermined compromised hosts, the central processor <b>218</b> may determine that hosts <b>308</b>, <b>310</b> are compromised hosts <b>202</b>. In this regard, the central processor <b>218</b> may determine that only those hosts <b>202</b>, <b>204</b> that are on a path that interconnects the predetermined compromised hosts are the compromised hosts <b>202</b>.</p>
<p id="p-0057" num="0056">In another embodiment of the present application, the central processor <b>218</b> may analyze the communication graph to determine at least one of the compromised hosts <b>202</b> that is not on a path that interconnects the predetermined compromised hosts. In this regard, the central processor <b>218</b> may determine the compromised hosts <b>202</b> that are not on a path that interconnects the predetermined compromised hosts based on a proximity of the unknown compromised host to the predetermined compromised hosts. For example, in the exemplary communication graph shown in <figref idref="DRAWINGS">FIG. 3</figref>, the central processor <b>218</b> may determine that hosts <b>312</b>, <b>314</b> are compromised hosts <b>202</b>.</p>
<p id="p-0058" num="0057">In a further embodiment of the present application, the algorithm processor <b>222</b> may determine whether the communication graph defines at least one additional path that interconnects two of the compromised hosts <b>202</b> other than the predetermined compromised hosts. The additional path may include at least two of the peer-to-peer data flows for determining an additional, unknown compromised host that is between the two of the compromised hosts <b>202</b> other than the predetermined compromised hosts. In this regard, the central processor <b>218</b> may analyze the additional path that interconnects the compromised hosts <b>202</b> other than the predetermined compromised hosts on the communication graph to determine further compromised hosts <b>202</b> from among the hosts <b>202</b>, <b>204</b>. According to an embodiment of the present application, the central processor <b>218</b> may determine that each of the hosts <b>202</b>, <b>204</b> that is on the additional path is one of the compromised hosts <b>202</b>. For example, as shown in <figref idref="DRAWINGS">FIG. 3</figref>, if the central processor <b>218</b> determines that hosts <b>312</b>, <b>314</b> are compromised hosts <b>202</b> based on their proximity to the predetermined compromised hosts <b>304</b>, <b>306</b>, the central processor <b>218</b> may determine that host <b>316</b> is one of the compromised hosts <b>202</b> since host <b>316</b> lies on a path that interconnects compromised hosts <b>312</b>, <b>314</b>.</p>
<p id="p-0059" num="0058">Of course those skilled in the art appreciate that the above-described embodiments and examples are merely exemplary and that the central processor <b>218</b> may determine the compromised hosts <b>202</b> from among the hosts <b>202</b>, <b>204</b> based on the predetermined compromised hosts, paths that interconnect the predetermined compromised hosts, and/or additional paths that interconnect compromised hosts <b>202</b> based upon additional, or alternative, methods. For example, probabilities may be assigned to the hosts <b>202</b>, <b>204</b> based upon their proximity to the predetermined compromised hosts, paths that interconnect the predetermined compromised hosts, and/or additional paths that interconnect determined compromised hosts. Thereafter, the central processor <b>218</b> may determine the compromised hosts <b>202</b> from among the hosts <b>202</b>, <b>204</b> based upon the assigned probabilities.</p>
<p id="p-0060" num="0059">Furthermore, in additional embodiments of the present application, those skilled in the art appreciate that the compromised hosts <b>202</b> may be determined when less than two predetermined compromised hosts are known. For example, in an embodiment of the present application, the graphics processor <b>220</b> may graph the peer-to-peer data flows on the communication graph with each of the hosts <b>202</b>, <b>204</b> being a node and each of the peer-to-peer data flows being an edge. In this regard, if at least one of the compromised hosts <b>202</b> is a predetermined compromised host, then the central processor <b>218</b> may analyze the communication graph to determine the compromised hosts <b>202</b> from among the hosts <b>202</b>, <b>204</b> based upon a proximity to the predetermined compromised host or the predetermined compromised hosts.</p>
<p id="p-0061" num="0060">In further embodiments of the present application, the system <b>200</b> may include a communication graph monitor <b>224</b> that monitors or tracks the communication graph over time. The communication graph monitor <b>224</b> may monitor the communication graph for a predetermined period of time in order to determine dynamic information of the compromised hosts <b>202</b>. For example, the communication graph monitor <b>224</b> may determine peer list updates and/or new recruits over the predetermined period of time.</p>
<p id="p-0062" num="0061">The present application further provides methods for analyzing backbone traffic to determine a plurality of compromised hosts from among a plurality of hosts on a network, wherein the backbone traffic includes a plurality of data flows. A non-limiting and exemplary method is generally shown at <b>400</b> in <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0063" num="0062">The method <b>400</b> analyzes, with a processor, each of the data flows included in the backbone traffic to determine a plurality of peer-to-peer data flows at S<b>402</b>. Each of the peer-to-peer data flows is one of the data flows that has a source address and a destination address that are each unassociated with a domain name.</p>
<p id="p-0064" num="0063">According to an embodiment of the method <b>400</b>, at least two of the compromised hosts are predetermined compromised hosts. In this regard, the peer-to-peer data flows are graphed on a communication graph with each of the hosts being a node and each of the peer-to-peer data flows being an edge at S<b>404</b>. At S<b>406</b>, it is determined whether the communication graph defines at least one path that interconnects the predetermined compromised hosts using a predetermined graph algorithm. The path includes at least two of the peer-to-peer data flows for determining at least one compromised host that lies on the path between the predetermined compromised hosts. The path is analyzed, with the processor, to determine the compromised hosts from among the hosts at S<b>408</b>. In this regard, according to an exemplary embodiment of the method <b>400</b>, each host on the path may be determined to be a compromised host. Each of the compromised hosts is interconnected with another of the compromised hosts via at least one of the peer-to-peer data flows.</p>
<p id="p-0065" num="0064">In an embodiment of the method <b>44</b>, the processor may further analyze the communication graph to determine at least one additional compromised host that is not on the path that interconnects the predetermined compromised hosts at S<b>410</b>. According to an exemplary embodiment of the method <b>400</b>, the additional compromised host may be determined based on a proximity to at least one of the predetermined compromised hosts. At S<b>412</b>, it is determined whether the communication graph defines at least one additional path that interconnects two of the compromised hosts other than the predetermined compromised hosts. The additional path includes at least two of the peer-to-peer data flows for determining a further additional compromised host. The additional path that interconnects the two of the compromised hosts other than the predetermined compromised hosts is analyzed to determine the further additional compromised host from among the hosts at S<b>414</b> in response to determining that the communication graph defines an additional path. At least one of the communication graph, the path, and the additional path are tracked for a predetermined period of time to determine dynamic information of the compromised hosts and/or an even further additional compromised host at S<b>416</b>.</p>
<p id="p-0066" num="0065">An additional embodiment of a method of the present application for analyzing backbone traffic to determine a plurality of compromised hosts from among a plurality of hosts on a network, wherein the backbone traffic includes a plurality of data flows, is generally shown at <b>500</b> in <figref idref="DRAWINGS">FIG. 5</figref>. According to the method <b>500</b>, a processor analyzes each of the data flows included in the backbone traffic to determine a plurality of peer-to-peer data flows at S<b>502</b>. Each of the peer-to-peer data flows is one of the data flows that has a source address and a destination address that are each unassociated with a domain name.</p>
<p id="p-0067" num="0066">According to an embodiment of the method <b>500</b>, at least one of the compromised hosts is a predetermined compromised host. In this regard, the peer-to-peer data flows are graphed on a communication graph with each of the hosts being a node and each of the peer-to-peer data flows being an edge at S<b>504</b>. At S<b>506</b>, a probability is assigned to each of the hosts based on the communication graph and a proximity of each of the hosts to the predetermined compromised host. Each of the hosts is analyzed based on the assigned probability to determine the compromised hosts at S<b>508</b>. In this regard, each host may be analyzed to determined whether the assigned probability is greater than a predetermined threshold amount, or each host may be analyzed based on the assigned probability in comparison to the assigned probabilities of the other hosts.</p>
<p id="p-0068" num="0067">Of course, those skilled in the art appreciate that the above-described embodiments of the methods <b>400</b>, <b>500</b> are merely exemplary and are not meant to be limiting or exhaustive. The scope of the present application includes additional methods which may include any combination of features as discussed above with respect to the system <b>200</b>.</p>
<p id="p-0069" num="0068">The present application further provides a non-transitory computer-readable medium <b>182</b> that includes an executable program for analyzing backbone traffic to determine a plurality of compromised hosts from among a plurality of hosts on a network. The backbone traffic includes a plurality of data flows. The non-transitory computer-readable medium <b>182</b> includes a resolving code segment that, when executed, analyzes each of the data flows included in the backbone traffic to determine a plurality of peer-to-peer data flows. Each of the peer-to-peer data flows is one of the data flows that has a source address and a destination address that are each unassociated with a domain name. In this regard, as discussed above in regards to the system <b>200</b>, the resolving code segment may analyze each of the data flows to determine the peer-to-peer data flows by searching a database of domain name system records and/or performing reverse domain name system queries.</p>
<p id="p-0070" num="0069">The computer-readable medium <b>182</b> includes a peer-to-peer data flow analyzing code segment that, when executed, analyzes the peer-to-peer data flows to determine the compromised hosts from among the hosts. Each of the compromised hosts determined as being interconnected with another of the compromised hosts via at least one of the peer-to-peer data flows.</p>
<p id="p-0071" num="0070">According to an embodiment of the present application the computer-readable medium <b>182</b> includes a graphing code segment that, when executed, graphs the peer-to-peer data flows on a communication graph, and a path determining code segment that, when executed, determines, with a predetermined graph algorithm, whether the communication graph defines at least one path that interconnects predetermined compromised hosts, wherein the path includes at least two of the peer-to-peer data flows. In this regard, the peer-to-peer data flow analyzing code segment analyzes the path that interconnects the predetermined compromised hosts on the communication graph to determine the compromised hosts from among the hosts in response to the path determining code segment determining that the communication path defines the path.</p>
<p id="p-0072" num="0071">In further embodiments of the present application, as discussed above, the peer-to-peer data flow analyzing code segment determines the compromised hosts based on a proximity to at least one of predetermined compromised host. Furthermore, the path determining code segment may further determine whether the communication graph defines at least one additional path that interconnects compromised hosts other than the predetermined compromised hosts, and the peer-to-peer data flow analyzing code segment may analyze the additional path to determine the compromised hosts.</p>
<p id="p-0073" num="0072">Of course, those skilled in the art appreciate that the above-described embodiments of the computer-readable medium <b>182</b> are merely exemplary and are not meant to be limiting or exhaustive. The scope of the present application includes additional embodiments of the computer-readable medium <b>182</b> which includes an executable computer program which may execute any combination of features as discussed above with respect to the system <b>200</b>. For example, the computer-readable medium <b>182</b> may include a graphing code segment that, when executed, graphs the peer-to-peer data flows on a communication graph with each of the hosts being a node and each of the peer-to-peer data flows being an edge. According to such an exemplary embodiment, at least one of the compromised hosts is a predetermined compromised host, and the peer-to-peer data flow analyzing code segment of the computer-readable medium <b>182</b> analyzes the communication graph to determine the compromised hosts based on a proximity to the predetermined compromised host.</p>
<p id="p-0074" num="0073">Accordingly, the present application enables detection and tracking of bots in a peer-to-peer botnet by analyzing flow data in backbone traffic. The present application expands the capability and capacity of current botnet detection algorithms by incorporating detection of complex peer-to-peer botnets. The systems, methods, and computer-readable media provide passive analysis techniques that do not impose latencies on real network traffic. The systems, methods, and computer-readable media are capable of performing analysis on backbone traffic that processes terra bytes of data. Furthermore, the systems, methods, and computer-readable media enable real time tracking of peer-to-peer botnet topology and their evolution over time; consequently fueling research on botnet mitigation methods.</p>
<p id="p-0075" num="0074">Although the invention has been described with reference to several exemplary embodiments, it is understood that the words that have been used are words of description and illustration, rather than words of limitation. Changes may be made within the purview of the appended claims, as presently stated and as amended, without departing from the scope and spirit of the invention in its aspects. Although the invention has been described with reference to particular means, materials and embodiments, the invention is not intended to be limited to the particulars disclosed; rather the invention extends to all functionally equivalent structures, methods, and uses such as are within the scope of the appended claims.</p>
<p id="p-0076" num="0075">For example, the systems, methods, and computer-readable media area described as being for analyzing backbone traffic. However, those skilled in the art appreciate that the techniques disclosed herein may be employed to monitor any type of network traffic.</p>
<p id="p-0077" num="0076">While the computer-readable medium <b>182</b> is shown to be a single medium, the term &#x201c;computer-readable medium&#x201d; includes a single medium or multiple media, such as a centralized or distributed database, and/or associated caches and servers that store one or more sets of instructions. The term &#x201c;computer-readable medium&#x201d; shall also include any medium that is capable of storing, encoding or carrying a set of instructions for execution by a processor or that cause a computer system to perform any one or more of the methods or operations disclosed herein.</p>
<p id="p-0078" num="0077">In a particular non-limiting, exemplary embodiment, the computer-readable medium <b>182</b> can include a solid-state memory such as a memory card or other package that houses one or more non-volatile read-only memories. Further, the computer-readable medium <b>182</b> can be a random access memory or other volatile re-writable memory. Additionally, the computer-readable medium <b>182</b> can include a magneto-optical or optical medium, such as a disk or tapes or other storage device to capture carrier wave signals such as a signal communicated over a transmission medium. Accordingly, the disclosure is considered to include any computer-readable medium <b>182</b> or other equivalents and successor media, in which data or instructions may be stored.</p>
<p id="p-0079" num="0078">Although the present specification describes components and functions that may be implemented in particular embodiments with reference to particular standards and protocols, the disclosure is not limited to such standards and protocols. For example, the present application discloses that peer-to-peer data flows are identified as having a source address and a data address that are each unassociated with a domain name. Of course, those skilled in the art appreciate that the peer-to-peer data flows may additionally, or alternatively, be identified as having a source address and a destination address that are each unassociated with a hostname, or any other identifier that may be stored in association with an location identifier in a sever and/or database. Accordingly, replacement standards and protocols having the same or similar functions are considered equivalents thereof.</p>
<p id="p-0080" num="0079">The illustrations of the embodiments described herein are intended to provide a general understanding of the structure of the various embodiments. The illustrations are not intended to serve as a complete description of all of the elements and features of apparatus and systems that utilize the structures or methods described herein. Many other embodiments may be apparent to those of skill in the art upon reviewing the disclosure. Other embodiments may be utilized and derived from the disclosure, such that structural and logical substitutions and changes may be made without departing from the scope of the disclosure. Additionally, the illustrations are merely representational and may not be drawn to scale. Certain proportions within the illustrations may be exaggerated, while other proportions may be minimized. Accordingly, the disclosure and the figures are to be regarded as illustrative rather than restrictive.</p>
<p id="p-0081" num="0080">One or more embodiments of the disclosure may be referred to herein, individually and/or collectively, by the term &#x201c;invention&#x201d; merely for convenience and without intending to voluntarily limit the scope of this application to any particular invention or inventive concept. Moreover, although specific embodiments have been illustrated and described herein, it should be appreciated that any subsequent arrangement designed to achieve the same or similar purpose may be substituted for the specific embodiments shown. This disclosure is intended to cover any and all subsequent adaptations or variations of various embodiments. Combinations of the above embodiments, and other embodiments not specifically described herein, will be apparent to those of skill in the art upon reviewing the description.</p>
<p id="p-0082" num="0081">The Abstract of the Disclosure is provided to comply with 37 C.F.R. &#xa7;1.72(b) and is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition, in the foregoing Detailed Description, various features may be grouped together or described in a single embodiment for the purpose of streamlining the disclosure. This disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather, as the following claims reflect, inventive subject matter may be directed to less than all of the features of any of the disclosed embodiments. Thus, the following claims are incorporated into the Detailed Description, with each claim standing on its own as defining separately claimed subject matter.</p>
<p id="p-0083" num="0082">The above disclosed subject matter is to be considered illustrative, and not restrictive, and the appended claims are intended to cover all such modifications, enhancements, and other embodiments which fall within the true spirit and scope of the present disclosure. Thus, to the maximum extent allowed by law, the scope of the present disclosure is to be determined by the broadest permissible interpretation of the following claims and their equivalents, and shall not be restricted or limited by the foregoing detailed description.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for analyzing backbone traffic to determine a plurality of compromised hosts from among a plurality of hosts on a network, the backbone traffic including a plurality of data flows, the method comprising:
<claim-text>analyzing, with a processor, each of the plurality of data flows included in the backbone traffic to determine a plurality of peer-to-peer data flows, each of the plurality of peer-to-peer data flows being one of the plurality of data flows and having a source address and a destination address that are each unassociated with a domain name wherein each of the plurality of data flows is analyzed to determine the plurality of peer-to-peer data flows by searching a database of domain name system records to determine whether the source address and the destination address of each of the plurality of data flows are each unassociated with any domain name; and</claim-text>
<claim-text>analyzing, with the processor, the plurality of peer-to-peer data flows to determine the plurality of compromised hosts from among the plurality of hosts, each of the plurality of compromised hosts being interconnected with another of the plurality of compromised hosts via at least one of the plurality of peer-to-peer data flows.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein at least two of the plurality of compromised hosts are predetermined compromised hosts, wherein the plurality of peer-to-peer data flows is analyzed to determine at least one path that interconnects the predetermined compromised hosts, the at least one path including at least two of the plurality of peer-to-peer data flows, and wherein the plurality of compromised hosts are on the at least one path that interconnects the predetermined compromised hosts.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein at least two of the plurality of compromised hosts are predetermined compromised hosts, wherein the plurality of peer-to-peer data flows are graphed on a communication graph with each of the plurality of hosts being a node and each of the plurality of peer-to-peer data flows being an edge, wherein a predetermined graph algorithm determines whether the communication graph defines at least one path that interconnects the predetermined compromised hosts, the at least one path including at least two of the plurality of peer-to-peer data flows, and wherein the at least one path that interconnects the predetermined compromised hosts on the communication graph is analyzed to determine the plurality of compromised hosts from among the plurality of hosts in response to determining that the communication graph defines the at least one path.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein at least one of the plurality of compromised hosts is not on a path that interconnects the predetermined compromised hosts, the at least one of the plurality of compromised hosts determined based on a proximity to at least one of the predetermined compromised hosts.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising:
<claim-text>determining whether the communication graph defines at least one additional path that interconnects two of the plurality of compromised hosts other than the predetermined compromised hosts, the at least one additional path including at least two of the plurality of peer-to-peer data flows; and</claim-text>
<claim-text>analyzing the at least one additional path that interconnects the two of the plurality of compromised hosts other than the predetermined compromised hosts to determine the plurality of compromised hosts from among the plurality of hosts in response to determining that the communication graph defines the at least one additional path.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, further comprising:
<claim-text>assigning a probability to each of the plurality of hosts that is located on the at least one path based upon a relationship with one of the at least one path and the predetermined compromised hosts in response to determining that the communication graph defines the at least one path, wherein the probability of each of the plurality of hosts that is located on the at least one oath is analyzed to determine the plurality of compromised hosts from among the plurality of hosts.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, further comprising:
<claim-text>tracking the at least one path for a predetermined period of time to determine at least one of dynamic information of the plurality of compromised hosts and at least one additional compromised host in response to determining that the communication graph defines the at least one path.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>graphing the plurality of peer-to-peer data flows on a communication graph with each of the plurality of hosts being a node and each of the plurality of peer-to-peer data flows being an edge,</claim-text>
<claim-text>wherein at least one of the plurality of compromised hosts is a predetermined compromised host, and</claim-text>
<claim-text>wherein the communication graph is analyzed to determine the plurality of compromised hosts based on a proximity to the predetermined compromised host.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein each of the plurality of data flows is analyzed to determine the plurality of peer-to-peer data flows by performing reverse domain name system queries to determine whether the source address and the destination address of each of the plurality of data flows are each unassociated with any domain name.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A non-transitory computer-readable medium including an executable program for analyzing backbone traffic to determine a plurality of compromised hosts from among a plurality of hosts on a network, the backbone traffic including a plurality of data flows, the non-transitory computer-readable medium comprising:
<claim-text>a resolving code segment that, when executed, analyzes each of the plurality of data flows included in the backbone traffic to determine a plurality of peer-to-peer data flows, each of the plurality of peer-to-peer data flows being one of the plurality of data flows that has a source address and a destination address that are each unassociated with a domain name wherein each of the plurality of data flows is analyzed to determine the plurality of peer-to-peer data flows by searching a database of domain name system records to determine whether the source address and the destination address of each of the plurality of data flows are each unassociated with any domain name; and</claim-text>
<claim-text>a peer-to-peer data flow analyzing code segment that, when executed, analyzes the plurality of peer-to-peer data flows to determine the plurality of compromised hosts from among the plurality of hosts, each of the plurality of compromised hosts being interconnected with another of the plurality of compromised hosts via at least one of the plurality of peer-to-peer data flows.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The non-transitory computer-readable medium according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein at least two of the plurality of compromised hosts are predetermined compromised hosts, wherein a graphing code segment, when executed, graphs the plurality of peer-to-peer data flows on a communication graph with each of the plurality of hosts being a node and each of the plurality of peer-to-peer data flows being an edge, and wherein a path determining code segment, when executed, determines, with a predetermined graph algorithm, whether the communication graph defines at least one path that interconnects the predetermined compromised hosts, the at least one path including at least two of the plurality of peer-to-peer data flows, and
<claim-text>wherein the peer-to-peer data flow analyzing code segment analyzes the at least one path that interconnects the predetermined compromised hosts on the communication graph to determine the plurality of compromised hosts from among the plurality of hosts in response to the path determining code segment determining that the communication path defines the at least one path.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The non-transitory computer-readable medium according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein at least one of the plurality of compromised hosts is not on a path that interconnects the predetermined compromised hosts, the peer-to-peer data flow analyzing code segment determining the at least one of the plurality of compromised hosts based on a proximity to at least one of the predetermined compromised hosts.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The non-transitory computer-readable medium according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the path determining code segment further determines whether the communication graph defines at least one additional path that interconnects two of the plurality of compromised hosts other than the predetermined compromised hosts, the at least one additional path including at least two of the plurality of peer-to-peer data flows, and wherein the peer-to-peer data flow analyzing code segment analyzes the at least one additional path that interconnects the two of the plurality of compromised hosts other than the predetermined compromised hosts to determine the plurality of compromised hosts from among the plurality of hosts in response to the path determining code segment determining that the communication path defines the at least one additional path.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The non-transitory computer-readable medium according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising:
<claim-text>a graphing code segment that, when executed, graphs the plurality of peer-to-peer data flows on a communication graph with each of the plurality of hosts being a node and each of the plurality of peer-to-peer data flows being an edge,</claim-text>
<claim-text>wherein at least one of the plurality of compromised hosts is a predetermined compromised host, and</claim-text>
<claim-text>wherein the peer-to-peer data flow analyzing code segment analyzes the communication graph to determine the plurality of compromised hosts based on a proximity to the predetermined compromised host.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A system for analyzing backbone traffic to determine a plurality of compromised hosts from among a plurality of hosts on a network, the backbone traffic including a plurality of data flows, the system comprising:
<claim-text>a resolver that analyzes each of the plurality of data flows included in the backbone traffic to determine a plurality of peer-to-peer data flows, each of the plurality of peer-to-peer data flows being one of the plurality of data flows that has a source address and a destination address that are each unassociated with a domain name wherein each of the plurality of data flows is analyzed to determine the plurality of peer-to-peer data flows by searching a database of domain name system records to determine whether the source address and the destination address of each of the plurality of data flows are each unassociated with any domain name; and</claim-text>
<claim-text>a central processor that analyzes the plurality of peer-to-peer data flows to determine the plurality of compromised hosts from among the plurality of hosts, each of the plurality of compromised hosts being interconnected with another of the plurality of compromised hosts via at least one of the plurality of peer-to-peer data flows.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The system according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein at least two of the plurality of compromised hosts are predetermined compromised hosts, wherein a graphics processor graphs the plurality of peer-to-peer data flows on a communication graph with each of the plurality of hosts being a node and each of the plurality of peer-to-peer data flows being an edge, and wherein an algorithm processor executes a predetermined graph algorithm to determine whether the communication graph defines at least one path that interconnects the predetermined compromised hosts, the at least one path including at least two of the plurality of peer-to-peer data flows, and wherein the central processor analyzes the at least one path that interconnects the predetermined compromised hosts on the communication graph to determine the plurality of compromised hosts from among the plurality of hosts in response to the algorithm processor determining that the communication path defines the at least one path.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The system according to <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein at least one of the plurality of compromised hosts is not on a path that interconnects the predetermined compromised hosts, the central processor determining the at least one of the plurality of compromised hosts based on a proximity to at least one of the predetermined compromised hosts.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The system according to <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the algorithm processor determines whether the communication graph defines at least one additional path that interconnects two of the plurality of compromised hosts other than the predetermined compromised hosts, the at least one additional path including at least two of the plurality of peer-to-peer data flows, and wherein the central processor analyzes the at least one additional path that interconnects the two of the plurality of compromised hosts other than the predetermined compromised hosts to determine the plurality of compromised hosts from among the plurality of hosts in response to the algorithm processor determining that the communication path defines the at least one additional path.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The system according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:
<claim-text>a graphics processor that graphs the plurality of peer-to-peer data flows on a communication graph with each of the plurality of hosts being a node and each of the plurality of peer-to-peer data flows being an edge,</claim-text>
<claim-text>wherein at least one of the plurality of compromised hosts is a predetermined compromised host, and</claim-text>
<claim-text>wherein the central processor analyzes the communication graph to determine the plurality of compromised hosts based on a proximity to the predetermined compromised host.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
