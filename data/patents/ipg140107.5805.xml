<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626912-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626912</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13831626</doc-number>
<date>20130315</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>173</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>709224</main-classification>
<further-classification>709225</further-classification>
<further-classification>709226</further-classification>
<further-classification>370235</further-classification>
</classification-national>
<invention-title id="d2e43">Automated passive discovery of applications</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6141686</doc-number>
<kind>A</kind>
<name>Jackowski et al.</name>
<date>20001000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709224</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7864764</doc-number>
<kind>B1</kind>
<name>Ma et al.</name>
<date>20110100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370389</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>8125908</doc-number>
<kind>B2</kind>
<name>Rothstein et al.</name>
<date>20120200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>8185953</doc-number>
<kind>B2</kind>
<name>Rothstein et al.</name>
<date>20120500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2005/0100000</doc-number>
<kind>A1</kind>
<name>Faulkner et al.</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370352</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2006/0029096</doc-number>
<kind>A1</kind>
<name>Babbar et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370466</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2006/0123477</doc-number>
<kind>A1</kind>
<name>Raghavan et al.</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 22</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2011/0019574</doc-number>
<kind>A1</kind>
<name>Malomsoky et al.</name>
<date>20110100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370252</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2012/0215328</doc-number>
<kind>A1</kind>
<name>Schmelzer</name>
<date>20120800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>700 91</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2013/0064084</doc-number>
<kind>A1</kind>
<name>Babbar et al.</name>
<date>20130300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370230</main-classification></classification-national>
</us-citation>
</us-references-cited>
<number-of-claims>26</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>709224</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>10</number-of-drawing-sheets>
<number-of-figures>10</number-of-figures>
</figures>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only" applicant-authority-category="assignee">
<addressbook>
<orgname>ExtraHop Networks, Inc.</orgname>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Rothstein</last-name>
<first-name>Jesse Abraham</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Mukerji</last-name>
<first-name>Arindum</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Frommer Lawrence &#x26; Haug LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>Branch</last-name>
<first-name>John W.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>ExtraHop Networks, Inc.</orgname>
<role>02</role>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Hussain</last-name>
<first-name>Tauqir</first-name>
<department>2452</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Embodiments are directed to monitoring communication over a network using a network monitoring device (NMD) to discover devices, roles, applications, and application dependencies present on the monitored networks. A NMD may monitor network packets that may be flowing on monitored networks. Using OSI L2-to-L3 data the NMD may determine the devices that may be on the monitored networks. Also, the NMD may determine the network protocols that may be in use on the monitored networks. Further, the NMD may reassemble monitored network packets into transactions based on knowledge regarding the network protocols are in use on the monitored networks. The NMD may perform various tests to determine the applications that may be running on the discovered devices. Some of the tests used by the NMD may examine OSI L4-L7 data that may be included in the transactions.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="219.88mm" wi="176.36mm" file="US08626912-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="235.29mm" wi="184.83mm" file="US08626912-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="173.65mm" wi="180.26mm" file="US08626912-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="225.04mm" wi="184.83mm" file="US08626912-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="236.90mm" wi="169.67mm" file="US08626912-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="245.11mm" wi="189.15mm" file="US08626912-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="206.25mm" wi="178.22mm" orientation="landscape" file="US08626912-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="222.08mm" wi="137.75mm" file="US08626912-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="241.22mm" wi="154.86mm" file="US08626912-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="224.71mm" wi="115.99mm" file="US08626912-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="221.40mm" wi="113.96mm" file="US08626912-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">TECHNICAL FIELD</heading>
<p id="p-0002" num="0001">The present invention relates generally to network monitoring, and more particularly, but not exclusively, to discovering applications that may be operative over a network.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">On most computer networks, bits of data arranged in bytes are packaged into collections of bytes called packets. These packets are generally communicated between computing devices over networks in a wired and/or wireless manner. A suite of communication protocols is typically employed to communicate between at least two endpoints over one or more networks. The protocols are typically layered on top of one another to form a protocol stack. One model for a network communication protocol stack is the Open Systems Interconnection (OSI) model, which defines seven layers of different protocols that cooperatively enable communication over a network. The OSI model layers are arranged in the following order: Physical (1), Data Link (2), Network (3), Transport (4), Session (5), Presentation (6), and Application (7).</p>
<p id="p-0004" num="0003">Another model for a network communication protocol stack is the Internet Protocol (IP) model, which is also known as the Transport Communication Protocol/Internet Protocol (TCP/IP) model. The TCP/IP model is similar to the OSI model except that it defines four layers instead of seven. The TCP/IP model's four layers for network communication protocol are arranged in the following order: Link (1), Internet (2), Transport (3), and Application (4). To reduce the number of layers from four to seven, the TCP/IP model collapses the OSI model's Application, Presentation, and Session layers into its Application layer. Also, the OSI's Physical layer is either assumed or is collapsed into the TCP/IP model's Link layer. Although some communication protocols may be listed at different numbered or named layers of the TCP/IP model versus the OSI model, both of these models describe stacks that include basically the same protocols. For example, the TCP protocol is listed on the fourth layer of the OSI model and on the third layer of the TCP/IP model. Additionally, the HTTP protocol is listed on the seventh layer of the OSI model and on the fourth layer of the TCP/IP model.</p>
<p id="p-0005" num="0004">To assess and troubleshoot communicated packets and protocols over a network, different types of network monitors can be employed. One type of network monitor, a &#x201c;packet sniffer&#x201d; may be employed to generally monitor and record packets of data as they are communicated over a network. Some packet sniffers can display data included in each packet and provide statistics regarding a monitored stream of packets. Also, some types of network monitors are referred to as &#x201c;protocol analyzers&#x201d; in part because they can provide additional analysis of monitored and recorded packets regarding a type of network, communication protocol, or application.</p>
<p id="p-0006" num="0005">Generally, packet sniffers and protocol analyzers passively monitor network traffic without participating in the communication protocols. In some instances, they receive a copy of each packet on a particular network segment or VLAN from one or more members of the network segment. In other instances, they may receive these packet copies through a port mirror on a managed Ethernet switch, e.g., a Switched Port Analyzer (SPAN) port, or a Roving Analysis Port (RAP). Port mirroring enables analysis and debugging of network communications. Port mirroring can be performed for inbound or outbound traffic (or both) on single or multiple interfaces. In still other instances packet copies may be provided to the network monitors from a specialized network tap.</p>
<p id="p-0007" num="0006">In some instances, a network monitor may operate as a proxy that is actively arranged between two endpoints, such as a client device and a server device. A network monitor proxy intercepts each packet sent by each endpoint and retransmits or forwards each intercepted packet to the other endpoint. Since network monitor proxies actively monitor network packets, they often enable a variety of additional services such as caching, content filtering, and access control.</p>
<p id="p-0008" num="0007">Furthermore as information technology infrastructure becomes more complex and more dynamic it may be more difficult to determine and monitor which devices and applications may be operative on a network. Also, the complexity may make it difficult, especially in large networks, for determining dependencies among the network devices and applications that are operative on the networks.</p>
<p id="p-0009" num="0008">However, the sheer volume of packets that are regularly communicated over networks in even a short period of time has made it relatively difficult and/or inefficient for network monitors to record, store, and analyze all monitored packets in a readily accessible format that is both useful for analysis and helpful for troubleshooting a particular issue or event in a timely manner.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0010" num="0009">Non-limiting and non-exhaustive embodiments of the present innovations are described with reference to the following drawings. In the drawings, like reference numerals refer to like parts throughout the various figures unless otherwise specified.</p>
<p id="p-0011" num="0010">For a better understanding of the present invention, reference will be made to the following Detailed Description, which is to be read in association with the accompanying drawings, wherein:</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 1</figref> illustrates a system environment in which various embodiments may be implemented;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 2A</figref> shows a schematic drawing of a rack of blade servers;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 2B</figref> illustrates a schematic embodiment of a blade server that may be included in a rack of blade servers such as that shown in <figref idref="DRAWINGS">FIG. 2A</figref>;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 3</figref> shows a schematic embodiment of a client device;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a schematic embodiment of a network device;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 5</figref> illustrates a portion of a logical architecture for automated passive application discovery in accordance with at least one of the various embodiments;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 6</figref> shows an overview flowchart for a process for automated passive discovery of applications in accordance with at least one of the various embodiments;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 7</figref> shows a flowchart for a process for applying test to identify applications in accordance with at least one of the various embodiments;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 8</figref> shows a flowchart for a process for determining application dependences in accordance with at least one of the various embodiments; and</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 9</figref> shows a flowchart for a process for passively determining operating systems in accordance with at least one of the various embodiments.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0022" num="0021">Various embodiments now will be described more fully hereinafter with reference to the accompanying drawings, which form a part hereof, and which show, by way of illustration, specific exemplary embodiments by which the invention may be practiced. The embodiments may, however, be embodied in many different forms and should not be construed as limited to the embodiments set forth herein; rather, these embodiments are provided so that this disclosure will be thorough and complete, and will fully convey the scope of the embodiments to those skilled in the art. Among other things, the various embodiments may be methods, systems, media or devices. Accordingly, the various embodiments may take the form of an entirely hardware embodiment, an entirely software embodiment or an embodiment combining software and hardware aspects. The following detailed description is, therefore, not to be taken in a limiting sense.</p>
<p id="p-0023" num="0022">Throughout the specification and claims, the following terms take the meanings explicitly associated herein, unless the context clearly dictates otherwise. The phrase &#x201c;in one embodiment&#x201d; as used herein does not necessarily refer to the same embodiment, though it may. Furthermore, the phrase &#x201c;in another embodiment&#x201d; as used herein does not necessarily refer to a different embodiment, although it may. Thus, as described below, various embodiments may be readily combined, without departing from the scope or spirit of the invention.</p>
<p id="p-0024" num="0023">In addition, as used herein, the term &#x201c;or&#x201d; is an inclusive &#x201c;or&#x201d; operator, and is equivalent to the term &#x201c;and/or,&#x201d; unless the context clearly dictates otherwise. The term &#x201c;based on&#x201d; is not exclusive and allows for being based on additional factors not described, unless the context clearly dictates otherwise. In addition, throughout the specification, the meaning of &#x201c;a,&#x201d; &#x201c;an,&#x201d; and &#x201c;the&#x201d; include plural references. The meaning of &#x201c;in&#x201d; includes &#x201c;in&#x201d; and &#x201c;on.&#x201d;</p>
<p id="p-0025" num="0024">For example embodiments, the following terms are also used herein according to the corresponding meaning, unless the context clearly dictates otherwise.</p>
<p id="p-0026" num="0025">As used herein, the term &#x201c;session&#x201d; refers to a semi-permanent interactive packet interchange between two or more communicating endpoints, such as network devices. A session is set up or established at a certain point in time, and torn down at a later point in time. An established communication session may involve more than one message in each direction. A session may have stateful communication where at least one of the communicating network devices saves information about the session history to be able to communicate. A session may also provide stateless communication, where the communication consists of independent requests with responses between the endpoints. An established session is the basic requirement to perform a connection-oriented communication. A session also is the basic step to transmit in connectionless communication modes.</p>
<p id="p-0027" num="0026">As used herein, the term &#x201c;connection&#x201d; refers to a communication session with a semi-permanent connection for interactive packet interchange between two or more communicating endpoints, such as network devices. The connection is established before any useful data is transferred, and where a stream of data is delivered in the same order as it was sent. The alternative to connection-oriented transmission is connectionless communication. For example, the datagram mode of communication used by the Internet Protocol (IP) and the Universal Datagram Protocol (UDP) may deliver packets out of order, since different packets may be routed independently and could be delivered over different paths.</p>
<p id="p-0028" num="0027">Connection-oriented communication may be a packet-mode virtual circuit connection. For example, a transport layer virtual circuit protocol such as the TCP protocol can deliver packets of data in order although the lower layer switching is connectionless. A connection-oriented transport layer protocol such as TCP can also provide connection-oriented communications over connectionless communication. For example, if TCP is based on a connectionless network layer protocol (such as IP), this TCP/IP protocol can then achieve in-order delivery of a byte stream of data, by means of segment sequence numbering on the sender side, packet buffering and data packet reordering on the receiver side. Alternatively, the virtual circuit connection may be established in a datalink layer or network layer switching mode, where all data packets belonging to the same traffic stream are delivered over the same path, and traffic flows are identified by some connection identifier rather than by complete routing information, which enables fast hardware based switching.</p>
<p id="p-0029" num="0028">As used herein, the terms &#x201c;session flow&#x201d; and &#x201c;flow&#x201d; refer to one packet or a stream of packets that are communicated in a session that is established between at least two endpoints, such as two network devices. In at least one of the various embodiments, flows may be useful if one or more of the endpoints of a session may be behind a network traffic management device, such as a firewall, switch, router, load balancer, or the like. In at least one of the various embodiments, such flows may be used to ensure that the packets sent between the endpoints of a flow may be routed appropriately.</p>
<p id="p-0030" num="0029">Typically, establishing a TCP based connection between endpoints begins with a handshake and creates a single bi-directional flow between two endpoints, e.g., one direction of flow going from endpoint A to endpoint B, the other direction of the flow going from endpoint B to endpoint A, where endpoint A and endpoint B are IP-Port source and destinations. In at least one of the various embodiments, a tuple may be employed to identify a flow. Also, other protocols may establish a separate flow for control information that enables management of at least one or more flows between two or more endpoints.</p>
<p id="p-0031" num="0030">As used herein, the terms &#x201c;network monitor&#x201d;, &#x201c;network monitor device&#x201d;, or &#x201c;NMD&#x201d; refer to an application (software, hardware, or some combination) that is arranged to monitor and record flows of packets in a session that are communicated between at least two endpoints over at least one network. The NMD can provide information for assessing different aspects of these monitored flows. In at least one embodiment, the NMD passively monitors network packet traffic without participating in the communication protocols. This monitoring is performed for a variety of reasons, including troubleshooting and proactive remediation, end-user experience monitoring, SLA monitoring, capacity planning, application lifecycle management, infrastructure change management, infrastructure optimization, business intelligence, security, and regulatory compliance. The NMD can receive network communication for monitoring through a variety of means including network taps, wireless receivers, port mirrors or directed tunnels from network switches, servers including the endpoints themselves, or other infrastructure devices. In at least some of the various embodiments, the NMD may receive a copy of each packet on a particular network segment or virtual local area network (VLAN). Also, for at least some of the various embodiments, they may receive these packet copies through a port mirror on a managed Ethernet switch, e.g., a Switched Port Analyzer (SPAN) port, or a Roving Analysis Port (RAP). Port mirroring enables analysis and debugging of network communications. Port mirroring can be performed for inbound or outbound traffic (or both) on single or multiple interfaces.</p>
<p id="p-0032" num="0031">The NMD may track network connections from and to end points such as a client and/or a server. The NMD may also extract information from the packets including protocol information at various layers of the communication protocol stack. The NMD may reassemble or reconstruct the stream of data exchanged between the endpoints. The NMD may perform decryption of the payload at various layers of the protocol stack. The NMD may passively monitor the network traffic or it may participate in the protocols as a proxy. The NMD may attempt to classify the network traffic according to communication protocols that are used.</p>
<p id="p-0033" num="0032">The NMD may also perform one or more actions for classifying protocols that may be a necessary precondition for application classification. While some protocols run on well known ports, others do not. Thus, even if there is traffic on a well known port, it is not necessarily the protocol generally understood to be assigned to that port. As a result, the NMD may perform protocol classification using one or more techniques, such as, signature matching, statistical analysis, traffic analysis, and other heuristics. In some cases, the NMD may use adaptive protocol classification techniques where information used to classify the protocols may be accumulated and/or applied over time to further classify the observed protocols. The NMD may categorize the traffic where categories might include file transfers, streaming audio, streaming video, database access, interactive, gaming, and the like. The NMD may attempt to determine whether the traffic corresponds to known communications protocols, such as HTTP, FTP, SMTP, RTP, TDS, TCP, IP, and the like.</p>
<p id="p-0034" num="0033">As used herein, the terms &#x201c;layer&#x201d; and &#x201c;model layer&#x201d; refer to a layer of one or more communication protocols in a stack of communication protocol layers that are defined by a model, such as the OSI model and the TCP/IP (IP) model. The OSI model defines seven layers and the TCP/IP model defines four layers of communication protocols.</p>
<p id="p-0035" num="0034">For example, at the OSI model's lowest or first layer (Physical), streams of electrical/light/radio impulses (bits) are communicated between computing devices over some type of media, such as cables, network interface cards, radio wave transmitters, and the like. At the next or second layer (Data Link), bits are encoded into packets and packets are also decoded into bits. The Data Link layer also has two sub-layers, the Media Access Control (MAC) sub-layer and the Logical Link Control (LLC) sub-layer. The MAC sub-layer controls how a computing device gains access to the data and permission to transmit it. The LLC sub-layer controls frame synchronization, flow control and error checking. At the third layer (Network), logical paths are created, known as virtual circuits, to communicated data from node to node. Routing, forwarding, addressing, internetworking, error handling, congestion control, and packet sequencing are functions of the Network layer. At the fourth layer (Transport), transparent transfer of data between end computing devices, or hosts, is provided. The Transport layer is responsible for end to end recovery and flow control to ensure complete data transfer over the network.</p>
<p id="p-0036" num="0035">At the fifth layer (Session) of the OSI model, connections between applications are established, managed, and terminated. The Session layer sets up, coordinates, and terminates conversations, exchanges, and dialogues between applications at each end of a connection. At the sixth layer (Presentation), independence from differences in data representation, e.g., encryption, is provided by translating from application to network format and vice versa. Generally, the Presentation layer transforms data into the form that the protocols at the Application layer (7) can accept. For example, the Presentation layer generally handles the formatting and encrypting/decrypting of data that is communicated across a network.</p>
<p id="p-0037" num="0036">At the top or seventh layer (Application) of the OSI model, application and end user processes are supported. For example, communication partners may be identified, quality of service can be identified, user authentication and privacy may be considered, and constraints on data syntax can be identified. Generally, the Application layer provides services for file transfer, messaging, and displaying data. Protocols at the Application layer may include FTP, HTTP, and Telnet. Also, application layer protocols may include, wire protocols used by relational databases (RDBMS), message queues, caches, and so on. Additionally, some of the application layer protocols may use an open specification and/or open standard while others may have proprietary specifications.</p>
<p id="p-0038" num="0037">To reduce the number of layers from seven to four, the TCP/IP model collapses the OSI model's Application, Presentation, and Session layers into its Application layer. Also, the OSI's Physical layer is either assumed or may be collapsed into the TCP/IP model's Link layer. Although some communication protocols may be listed at different numbered or named layers of the TCP/IP model versus the OSI model, both of these models describe stacks that include basically the same protocols.</p>
<p id="p-0039" num="0038">As used herein, the term &#x201c;discovered device&#x201d; refers to devices that have been detected and identified as operating on one or more of the networks being monitored by a NMD. The NMD may determine that a device is discovered if it detects a network packet that has been unequivocally emitted by that device. In most cases, the NMD may use the MAC address and VLAN of the detected device as its identifier. In at least one of the various embodiments, the NMD may be configured to ignore certain network devices so not every network device operative on the monitored networks may be recognized as a discovered device.</p>
<p id="p-0040" num="0039">As used herein, the terms &#x201c;application transactional streams,&#x201d; &#x201c;application transaction,&#x201d; and &#x201c;transaction&#x201d; refer to an application level transmission over the network that may be broken up into multiple network packets. For example, if the size of a transaction exceeds the Maximum Transmission Unit (MTU) for a network it will be broken up into smaller network packets for transmission over the network and reassembled after it reaches its destination. In at least one of the various embodiments, the NMD may reassemble one or more network packets into a transaction before performing additional analysis.</p>
<p id="p-0041" num="0040">As used herein, the term &#x201c;device profile&#x201d; refers to the properties, characteristics and relationships for a discovered device that may have been detected by the NMD. Device profiles may include information, such as, vender, roles, applications, dependencies, MAC addresses, OSI Layer 3 address information (IP addresses associated with device), or the like. A device profile may be used to collect the information the NMD discovers about a device. In at least one of the various embodiments, device profiles may be arranged into explicit data structures or they may be implicit abstractions of the properties and characteristics of discovered devices.</p>
<p id="p-0042" num="0041">As used herein, the term &#x201c;application profile&#x201d; refers to properties and characteristics of an application that have been determined by an NMD to be operative on a monitored network. An application profile may include various discovered characteristics, such as, application name, application version, application dependencies, or the like. Application profiles may be included in the device profiles of the discovered devices that may be determined by the NMD to be running (e.g., servers) and/or using the application (e.g., clients). The information included in a application profile for a particular application may vary depending on what the NMD is able to determine from the monitored network packets. In at least one of the various embodiments, application profiles may be arranged into explicit data structures or they may be implicit abstractions of the properties and characteristics of applications detected by the NMD.</p>
<p id="p-0043" num="0042">As used herein, the term &#x201c;operating system profile&#x201d; refers to properties and characteristics of an operating system that have been determined by an NMD to be operative on a discovered device. An operating system profile may include various discovered characteristics, such as, name, manufacturer, version, or the like. Operating system profiles may be included in the device profiles of the discovered devices. The information may included in a particular operating system profile may vary depending on what the NMD is able to determine from the monitored network packets. Further, the device profile for a discovered device may include multiple operating system profiles if the NMD determines that multiple operating systems may be operative on the discovered device. In at least one of the various embodiments, operating system profiles may be arranged into explicit data structures or they may be implicit abstractions of the properties and characteristics of operating systems detected by the NMD.</p>
<p id="p-0044" num="0043">The following briefly describes embodiments of the invention in order to provide a basic understanding of some aspects of the invention. This brief description is not intended as an extensive overview. It is not intended to identify key or critical elements, or to delineate or otherwise narrow the scope. Its purpose is merely to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.</p>
<p id="p-0045" num="0044">Briefly stated, various embodiments are directed to monitoring communication over a network with using network monitoring device (NMD) that may perform actions that include discovering devices, roles, applications, and application dependencies that may be present on the monitored networks.</p>
<p id="p-0046" num="0045">In at least one of the various embodiments, a NMD may monitor a plurality of network packets that may be flowing on one or more monitored networks. In at least one of the various embodiments, using L2-to-L3 data the NMD may determine one or more devices that may be on the monitored networks. Also, in at least one of the various embodiments, the NMD may determine the network protocols that may be in use on the monitored networks. Further, in at least one of the various embodiments, the NMD may reassemble one or more monitored network packets into one or more transactions based on knowledge regarding the network protocols that may be in use on the monitored networks.</p>
<p id="p-0047" num="0046">In at least one of the various embodiments, the NMD may perform various tests to determine the one or more applications that may be running on one or more of the devices. In at least one of the various embodiments, at least some of the tests used by the NMD may examine the application layer data (OSI Layer 4 and above) that is included in the transactions.</p>
<p id="p-0048" num="0047">In at least one of the various embodiments, the NMD may use information determined by examining the application layer data to create one or more application profiles that each include at least an identity of the application. In at least one of the various embodiments, these application profiles may be associated with the at least one device.</p>
<p id="p-0049" num="0048">In at least one of the various embodiments, the NMD may examine the monitored network packets to determine the operating systems may be associated with the devices on the monitored networks. In at least one of the various embodiments, the NMD may examine and test the application layer data included in the monitored packets for determining details about the operating systems that may be otherwise difficult to discern.</p>
<p id="p-0050" num="0049">In at least one of the various embodiments, the NMD may further analyze the monitored packets and transactions to determine application dependencies that may exist between the various devices that may be operative on the monitored networks. In at least one of the various embodiments, the NMD may determine application dependencies based on at least a comparison of multiple transactions that may be associated different devices. In at least one of the various embodiments, correlations that may be discovered may indicate the device may be associated with one or more application that may be dependent on each other.</p>
<p id="p-0051" num="0050">In at least one of the various embodiments, the NMD may correlate data from two or more transactions that may be on separate network flows based on application layer data included in each transaction. Thus, in at least one of the various embodiments, transactions that may appear to be unrelated because they may be on separate flows may be identified as correlated based on their application layer data.</p>
<p id="h-0005" num="0000">Illustrative Operating Environment</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 1</figref> shows components of an environment in which various embodiments may be practiced. Not all of the components may be required to practice the various embodiments, and variations in the arrangement and type of the components may be made without departing from the spirit or scope of the various embodiments.</p>
<p id="p-0053" num="0052">In at least one embodiment, cloud network <b>102</b> enables one or more network services for a user based on the operation of corresponding arrangements <b>104</b> and <b>106</b> of virtually any type of networked computing device. As shown, the networked computing devices may include network devices <b>112</b> and <b>114</b>, enclosure of blade servers <b>110</b>, enclosure of server computers <b>116</b>, super computer network device <b>118</b>, and the like. Although not shown, one or more mobile devices may be included in cloud network <b>102</b> in one or more arrangements to provide one or more network services to a user. Also, these arrangements of networked computing devices may or may not be mutually exclusive of each other.</p>
<p id="p-0054" num="0053">In at least one of the various embodiments, network devices <b>112</b> and <b>114</b> may include module, processes, components, services, or the like, and which are operative to perform as a Network Monitor Device (NMD). These NMDs are arranged to monitor and record flows of packets in a session that are communicated between at least two endpoints over at least one network. These NMDs can provide information for assessing different aspects of these monitored flows. In at least one embodiment, the NMDs passively monitor network packet traffic without participating in the communication protocols. Both network devices <b>112</b> and <b>114</b> are arranged to operate as NMDs that may perform actions as further described in conjunction with at least the figures beginning at <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0055" num="0054">Also, in at least one of the various embodiments, enclosure of blade servers <b>110</b>, enclosure of enclosure of server computers <b>116</b>, super computer network device <b>118</b> may include network devices that perform the actions of cloud code server device <b>112</b> and cloud platform server device <b>114</b>. In at least one embodiment, at least one blade server or at least one server computer may be arranged to also operate as an NMD.</p>
<p id="p-0056" num="0055">Additionally, the user may employ a plurality of virtually any type of wired or wireless networked computing devices to communicate with cloud network <b>102</b> and access at least one of the network services enabled by one or more of arrangements <b>104</b> and <b>106</b>. These networked computing devices may include tablet client device <b>122</b>, handheld client device <b>124</b>, wearable client device <b>126</b>, desktop client device <b>120</b>, and the like. Although not shown, in various embodiments, the user may also employ notebook computers, desktop computers, microprocessor-based or programmable consumer electronics, network appliances, mobile telephones, smart telephones, pagers, radio frequency (RF) devices, infrared (IR) devices, Personal Digital Assistants (PDAs), televisions, integrated devices combining at least one of the preceding devices, and the like.</p>
<p id="p-0057" num="0056">One embodiment of a client device is described in more detail below in conjunction with <figref idref="DRAWINGS">FIG. 3</figref>. Generally, client devices may include virtually any substantially portable networked computing device capable of communicating over a wired, wireless, or some combination of wired and wireless network.</p>
<p id="p-0058" num="0057">In various embodiments, network <b>102</b> may employ virtually any form of communication technology and topology. For example, network <b>102</b> can include local area networks Personal Area Networks (PANs), (LANs), Campus Area Networks (CANs), Metropolitan Area Networks (MANs) Wide Area Networks (WANs), direct communication connections, and the like, or any combination thereof. On an interconnected set of LANs, including those based on differing architectures and protocols, a router acts as a link between LANs, enabling messages to be sent from one to another. In addition, communication links within networks may include virtually any type of link, e.g., twisted wire pair lines, optical fibers, open air lasers or coaxial cable, plain old telephone service (POTS), wave guides, acoustic, full or fractional dedicated digital communication lines including T1, T2, T3, and T4, and/or other carrier and other wired media and wireless media. These carrier mechanisms may include E-carriers, Integrated Services Digital Networks (ISDNs), universal serial bus (USB) ports, Firewire ports, Thunderbolt ports, Digital Subscriber Lines (DSLs), wireless links including satellite links, or other communications links known to those skilled in the art. Moreover, these communication links may further employ any of a variety of digital signaling technologies, including without limit, for example, DS-0, DS-1, DS-2, DS-3, DS-4, OC-3, OC-12, OC-48, or the like. Furthermore, remotely located computing devices could be remotely connected to networks via a modem and a temporary communication link. In essence, network <b>102</b> may include virtually any communication technology by which information may travel between computing devices. Additionally, in the various embodiments, the communicated information may include virtually any kind of information including, but not limited to processor-readable instructions, data structures, program modules, applications, raw data, control data, archived data, video data, voice data, image data, text data, and the like.</p>
<p id="p-0059" num="0058">Network <b>102</b> may be partially or entirely embodied by one or more wireless networks. A wireless network may include any of a variety of wireless sub-networks that may further overlay stand-alone ad-hoc networks, and the like. Such sub-networks may include mesh networks, Wireless LAN (WLAN) networks, Wireless Router (WR) mesh, cellular networks, pico networks, PANs, Open Air Laser networks, Microwave networks, and the like. Network <b>102</b> may further include an autonomous system of intermediate network devices such as terminals, gateways, routers, switches, firewalls, load balancers, and the like, which are coupled to wired and/or wireless communication links. These autonomous devices may be operable to move freely and randomly and organize themselves arbitrarily, such that the topology of network <b>102</b> may change rapidly.</p>
<p id="p-0060" num="0059">Network <b>102</b> may further employ a plurality of wired and wireless access technologies, e.g., 2nd (2G), 3rd (3G), 4th (4G), 5<sup>th </sup>(5G), 6<sup>th </sup>to (6G), generation wireless access technologies, and the like, for mobile devices. These wired and wireless access technologies may also include Global System for Mobile communication (GSM), General Packet Radio Services (GPRS), Enhanced Data GSM Environment (EDGE), Code Division Multiple Access (CDMA), Wideband Code Division Multiple Access (WCDMA), Long Term Evolution Advanced (LTE), Universal Mobile Telecommunications System (UMTS), Orthogonal frequency-division multiplexing (OFDM), Wideband Code Division Multiple Access (W-CDMA), Code Division Multiple Access 2000 (CDMA2000), Evolution-Data Optimized (EV-DO), High-Speed Downlink Packet Access (HSDPA), IEEE 802.16 Worldwide Interoperability for Microwave Access (WiMax), ultra wide band (UWB), user datagram protocol (UDP), transmission control protocol/Internet protocol (TCP/IP), any portion of the Open Systems Interconnection (OSI) model protocols, Short Message Service (SMS), Multimedia Messaging Service (MMS), Web Access Protocol (WAP), Session Initiation Protocol/Real-time Transport Protocol (SIP/RTP), or any of a variety of other wireless or wired communication protocols. In one non-limiting example, network <b>102</b> may enable a mobile device to wirelessly access a network service through a combination of several radio network access technologies such as GSM, EDGE, HSDPA, LTE and the like.</p>
<p id="h-0006" num="0000">Enclosure of Blade Servers</p>
<p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. 2A</figref> shows one embodiment of an enclosure of blade servers <b>200</b>, which are also illustrated in <figref idref="DRAWINGS">FIG. 1</figref>. Enclosure of blade servers <b>200</b> may include many more or fewer components than those shown in <figref idref="DRAWINGS">FIG. 2A</figref>. However, the components shown are sufficient to disclose an illustrative embodiment. Generally, a blade server is a stripped down server computing device with a modular design optimized to minimize the use of physical space and energy. A blade enclosure can include several blade servers and provide each with power, cooling, network interfaces, input/output interfaces, and resource management. Although not shown, an enclosure of server computers typically includes several computers that may have at least one network connection and a power cord connection. Each server computer often includes redundant components for power and interfaces.</p>
<p id="p-0062" num="0061">As shown in the figure, enclosure <b>200</b> contains power supply <b>204</b>, and input/output interface <b>206</b>, rack logic <b>208</b>, several blade servers <b>210</b>, <b>212</b>, <b>214</b>, and <b>216</b>, and blade server interconnect <b>202</b>. Power supply <b>204</b> provides power to each component and blade server within the enclosure. The input/output interface <b>206</b> provides internal and external communication for components and blade servers within the enclosure. Backplane <b>208</b> can enable passive and active communication of power, logic, input signals, and output signals for each blade server.</p>
<p id="h-0007" num="0000">Illustrative Blade Server</p>
<p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. 2B</figref> illustrates an illustrative embodiment of blade server <b>250</b>, which may include many more or fewer components than those shown. As shown in <figref idref="DRAWINGS">FIG. 2A</figref>, a plurality of blade servers may be included in one enclosure that shares resources provided by the enclosure to reduce size, power, and cost.</p>
<p id="p-0064" num="0063">Blade server <b>250</b> includes processor <b>252</b> which communicates with memory <b>256</b> via bus <b>254</b>. Blade server <b>250</b> also includes input/output interface <b>290</b>, processor-readable stationary storage device <b>292</b>, and processor-readable removable storage device <b>294</b>. Input/output interface <b>290</b> can enable blade server <b>250</b> to communicate with other blade servers, mobile devices, network devices, and the like. Interface <b>290</b> may provide wireless and/or wired communication links for blade server. Processor-readable stationary storage device <b>292</b> may include one or more devices such as an electromagnetic storage device (hard disk), solid state hard disk (SSD), hybrid of both an SSD and a hard disk, and the like. In some configurations, a blade server may include multiple storage devices. Also, processor-readable removable storage device <b>294</b> enables processor <b>252</b> to read non-transitory storage media for storing and accessing processor-readable instructions, modules, data structures, and other forms of data. The non-transitory storage media may include Flash drives, tape media, floppy media, and the like.</p>
<p id="p-0065" num="0064">Memory <b>256</b> may include Random Access Memory (RAM), Read-Only Memory (ROM), hybrid of RAM and ROM, and the like. As shown, memory <b>256</b> includes operating system <b>258</b> and basic input/output system (BIOS) <b>260</b> for enabling the operation of blade server <b>250</b>. In various embodiments, a general-purpose operating system may be employed such as a version of UNIX, LINUX&#x2122;, a specialized server operating system such as Microsoft's Windows Server&#x2122;, or the like.</p>
<p id="p-0066" num="0065">Memory <b>256</b> further includes one or more data storage <b>270</b>, which can be utilized by blade server <b>250</b> to store, among other things, applications <b>280</b> and/or other data. Data store <b>270</b> may include program code, data, algorithms, and the like, for use by processor <b>252</b> to execute and perform actions such as those described in conjunction with <figref idref="DRAWINGS">FIGS. 5-9</figref>. In one embodiment, at least some of datastore <b>270</b> might also be stored on another component of blade server <b>250</b>, including, but not limited to, processor-readable removable storage device <b>294</b>, processor-readable stationary storage device <b>292</b>, or any other non-transitory processor-readable storage device (not shown). Data storage <b>270</b> may include, for example, Device Profiles <b>274</b>, Application Tests <b>276</b>, or the like. Device Profiles <b>274</b> is arranged to store device profile data for network devices that may be discovered on the network, as well as other supporting data. Likewise, Application Test <b>276</b> may contain one or more tests for discovering applications, application dependencies, operating systems, devices, and other supporting data, arranged in lists, databases, configuration files, or the like.</p>
<p id="p-0067" num="0066">Applications <b>280</b> may include processor executable instructions which, when executed by blade server <b>250</b>, transmit, receive, and/or otherwise process messages, audio, video, and enable communication with other networked computing devices. Examples of application programs include database servers, file servers, calendars, transcoders, and so forth. Applications <b>280</b> may include, for example, Network Monitor(s) <b>282</b>, Reporting application <b>284</b>, and Browser <b>286</b>, which may be enabled to perform actions further described below starting with at least <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0068" num="0067">Human interface components (not pictured), may be remotely associated with blade server <b>250</b>, which can enable remote input to and/or output from blade server <b>250</b>. For example, information to a display or from a keyboard can be routed through the input/output interface <b>290</b> to appropriate peripheral human interface components that are remotely located. Examples of peripheral human interface components include, but are not limited to, an audio interface, a display, keypad, pointing device, touch interface, and the like.</p>
<p id="p-0069" num="0068">Furthermore, in at least one of the various embodiments, network monitor application <b>282</b>, and reporting application <b>284</b> may be operative in a cloud-based computing environment. In at least one of the various embodiments, these applications, and others, may be executing within virtual machines and/or virtual servers that may be managed in a cloud-based based computing environment. In at least one of the various embodiments, in this context the applications may flow from one physical blade server and/or network device within the cloud-based environment to another depending on performance and scaling considerations automatically managed by the cloud computing environment. Likewise, in at least one of the various embodiments, virtual machines and/or virtual servers dedicated to running network monitor application <b>282</b> and reporting application <b>284</b> may be provisioned and de-commissioned automatically.</p>
<p id="p-0070" num="0069">Also, in at least one of the various embodiments, Device Profiles <b>274</b> and Application Tests <b>276</b>, or the like, may be located on virtual servers running in a cloud-based computing environment rather than being tied to one or more specific physical blade servers.</p>
<p id="h-0008" num="0000">Illustrative Client Device</p>
<p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. 3</figref> shows one embodiment of client device <b>300</b> that may include many more or less components than those shown. Client device <b>300</b> may represent, for example, at least one embodiment of client devices shown in <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0072" num="0071">Client device <b>300</b> may include processor <b>302</b> in communication with memory <b>304</b> via bus <b>328</b>. Client device <b>300</b> may also include power supply <b>330</b>, network interface <b>332</b>, audio interface <b>356</b>, display <b>350</b>, keypad <b>352</b>, illuminator <b>354</b>, video interface <b>342</b>, input/output interface <b>338</b>, haptic interface <b>364</b>, global positioning systems (GPS) receiver <b>358</b>, open air gesture interface <b>360</b>, temperature interface <b>362</b>, camera(s) <b>340</b>, projector <b>346</b>, pointing device interface <b>366</b>, processor-readable stationary storage device <b>334</b>, and processor-readable removable storage device <b>336</b>. Client device <b>300</b> may optionally communicate with a base station (not shown), or directly with another computing device. And in one embodiment, although not shown, a gyroscope may be employed within client device <b>300</b> to measuring and/or maintaining an orientation of client device <b>300</b>. Power supply <b>330</b> may provide power to client device <b>300</b>. A rechargeable or non-rechargeable battery may be used to provide power. The power may also be provided by an external power source, such as an AC adapter or a powered docking cradle that supplements and/or recharges the battery.</p>
<p id="p-0073" num="0072">Network interface <b>332</b> includes circuitry for coupling client device <b>300</b> to one or more networks, and is constructed for use with one or more communication protocols and technologies including, but not limited to, protocols and technologies that implement any portion of the OSI model for mobile communication (GSM), CDMA, time division multiple access (TDMA), UDP, TCP/IP, SMS, MMS, GPRS, WAP, UWB, WiMax, SIP/RTP, GPRS, EDGE, WCDMA, LTE, UMTS, OFDM, CDMA2000, EV-DO, HSDPA, or any of a variety of other wireless communication protocols. Network interface <b>332</b> is sometimes known as a transceiver, transceiving device, or network interface card (NIC).</p>
<p id="p-0074" num="0073">Audio interface <b>356</b> may be arranged to produce and receive audio signals such as the sound of a human voice. For example, audio interface <b>356</b> may be coupled to a speaker and microphone (not shown) to enable telecommunication with others and/or generate an audio acknowledgement for some action. A microphone in audio interface <b>356</b> can also be used for input to or control of client device <b>300</b>, e.g., using voice recognition, detecting touch based on sound, and the like.</p>
<p id="p-0075" num="0074">Display <b>350</b> may be a liquid crystal display (LCD), gas plasma, electronic ink, light emitting diode (LED), Organic LED (OLED) or any other type of light reflective or light transmissive display that can be used with a computing device. Display <b>350</b> may also include a touch interface <b>344</b> arranged to receive input from an object such as a stylus or a digit from a human hand, and may use resistive, capacitive, surface acoustic wave (SAW), infrared, radar, or other technologies to sense touch and/or gestures.</p>
<p id="p-0076" num="0075">Projector <b>346</b> may be a remote handheld projector or an integrated projector that is capable of projecting an image on a remote wall or any other reflective object such as a remote screen.</p>
<p id="p-0077" num="0076">Video interface <b>342</b> may be arranged to capture video images, such as a still photo, a video segment, an infrared video, or the like. For example, video interface <b>342</b> may be coupled to a digital video camera, a web-camera, or the like. Video interface <b>342</b> may comprise a lens, an image sensor, and other electronics. Image sensors may include a complementary metal-oxide-semiconductor (CMOS) integrated circuit, charge-coupled device (CCD), or any other integrated circuit for sensing light.</p>
<p id="p-0078" num="0077">Keypad <b>352</b> may comprise any input device arranged to receive input from a user. For example, keypad <b>352</b> may include a push button numeric dial, or a keyboard. Keypad <b>352</b> may also include command buttons that are associated with selecting and sending images.</p>
<p id="p-0079" num="0078">Illuminator <b>354</b> may provide a status indication and/or provide light. Illuminator <b>354</b> may remain active for specific periods of time or in response to events. For example, when illuminator <b>354</b> is active, it may backlight the buttons on keypad <b>352</b> and stay on while the client device is powered. Also, illuminator <b>354</b> may backlight these buttons in various patterns when particular actions are performed, such as dialing another client device. Illuminator <b>354</b> may also cause light sources positioned within a transparent or translucent case of the client device to illuminate in response to actions.</p>
<p id="p-0080" num="0079">Client device <b>300</b> may also comprise input/output interface <b>338</b> for communicating with external peripheral devices or other computing devices such as other client devices and network devices. The peripheral devices may include an audio headset, display screen glasses, remote speaker system, remote speaker and microphone system, and the like. Input/output interface <b>338</b> can utilize one or more technologies, such as Universal Serial Bus (USB), Infrared, WiFi, WiMax, Bluetooth&#x2122;, and the like.</p>
<p id="p-0081" num="0080">Haptic interface <b>364</b> may be arranged to provide tactile feedback to a user of the client device. For example, the haptic interface <b>364</b> may be employed to vibrate client device <b>300</b> in a particular way when another user of a computing device is calling. Temperature interface <b>362</b> may be used to provide a temperature measurement input and/or a temperature changing output to a user of client device <b>300</b>. Open air gesture interface <b>360</b> may sense physical gestures of a user of client device <b>300</b>, for example, by using single or stereo video cameras, radar, a gyroscopic sensor inside a device held or worn by the user, or the like. Camera <b>340</b> may be used to track physical eye movements of a user of client device <b>300</b>.</p>
<p id="p-0082" num="0081">GPS transceiver <b>358</b> can determine the physical coordinates of client device <b>300</b> on the surface of the Earth, which typically outputs a location as latitude and longitude values. GPS transceiver <b>358</b> can also employ other geo-positioning mechanisms, including, but not limited to, triangulation, assisted GPS (AGPS), Enhanced Observed Time Difference (E-OTD), Cell Identifier (CI), Service Area Identifier (SAT), Enhanced Timing Advance (ETA), Base Station Subsystem (BSS), or the like, to further determine the physical location of client device <b>300</b> on the surface of the Earth. It is understood that under different conditions, GPS transceiver <b>358</b> can determine a physical location for client device <b>300</b>. In at least one embodiment, however, client device <b>300</b> may, through other components, provide other information that may be employed to determine a physical location of the device, including for example, a Media Access Control (MAC) address, IP address, and the like.</p>
<p id="p-0083" num="0082">Human interface components can be peripheral devices that are physically separate from client device <b>300</b>, allowing for remote input and/or output to client device <b>300</b>. For example, information routed as described here through human interface components such as display <b>350</b> or keyboard <b>352</b> can instead be routed through network interface <b>332</b> to appropriate human interface components located remotely. Examples of human interface peripheral components that may be remote include, but are not limited to, audio devices, pointing devices, keypads, displays, cameras, projectors, and the like. These peripheral components may communicate over a Pico Network such as Bluetooth&#x2122;, Zigbee&#x2122; and the like. One non-limiting example of a client device with such peripheral human interface components is a wearable computing device, which might include a remote pico projector along with one or more cameras that remotely communicate with a separately located client device to sense a user's gestures toward portions of an image projected by the pico projector onto a reflected surface such as a wall or the user's hand.</p>
<p id="p-0084" num="0083">A client device may include a browser application that is configured to receive and to send web pages, web-based messages, graphics, text, multimedia, and the like. The client device's browser application may employ virtually any programming language, including a wireless application protocol messages (WAP), and the like. In at least one embodiment, the browser application is enabled to employ Handheld Device Markup Language (HDML), Wireless Markup Language (WML), WMLScript, JavaScript, Standard Generalized Markup Language (SGML), HyperText Markup Language (HTML), eXtensible Markup Language (XML), HTML5, and the like.</p>
<p id="p-0085" num="0084">Memory <b>304</b> may include RAM, ROM, and/or other types of memory. Memory <b>304</b> illustrates an example of computer-readable storage media (devices) for storage of information such as computer-readable instructions, data structures, program modules or other data. Memory <b>304</b> may store BIOS <b>308</b> for controlling low-level operation of client device <b>300</b>. The memory may also store operating system <b>306</b> for controlling the operation of client device <b>300</b>. It will be appreciated that this component may include a general-purpose operating system such as a version of UNIX, or Linux&#x2122;, or a specialized mobile computer communication operating system such as Windows Phone&#x2122;, or the Symbian&#xae; operating system. The operating system may include, or interface with a Java virtual machine module that enables control of hardware components and/or operating system operations via Java application programs.</p>
<p id="p-0086" num="0085">Memory <b>304</b> may further include one or more data storage <b>310</b>, which can be utilized by client device <b>300</b> to store, among other things, applications <b>320</b> and/or other data. For example, data storage <b>310</b> may also be employed to store information that describes various capabilities of client device <b>300</b>. The information may then be provided to another device based on any of a variety of events, including being sent as part of a header during a communication, sent upon request, or the like. Data storage <b>310</b> may also be employed to store social networking information including address books, buddy lists, aliases, user profile information, or the like. Data storage <b>310</b> may further include program code, data, algorithms, and the like, for use by a processor, such as processor <b>302</b> to execute and perform actions. In one embodiment, at least some of data storage <b>310</b> might also be stored on another component of client device <b>300</b>, including, but not limited to, non-transitory processor-readable removable storage device <b>336</b>, processor-readable stationary storage device <b>334</b>, or even external to the client device.</p>
<p id="p-0087" num="0086">Applications <b>320</b> may include computer executable instructions which, when executed by mobile device <b>300</b>, transmit, receive, and/or otherwise process instructions and data. Applications <b>320</b> may include, for example, network monitoring client application <b>322</b>. In at least one of the various embodiments, network monitoring application <b>322</b>, and browser application <b>326</b> may be used to communicate with blade servers <b>110</b>, server computers <b>116</b> and/or Supercomputer <b>118</b>, and/or network device <b>112</b> or network device <b>114</b>, including, but not limited to, queries, searches, API calls, content, data, messages, or the like.</p>
<p id="p-0088" num="0087">Other examples of application programs include calendars, search programs, email client applications, IM applications, SMS applications, Voice Over Internet Protocol (VoIP) applications, contact managers, task managers, transcoders, database programs, word processing programs, security applications, spreadsheet programs, games, search programs, and so forth.</p>
<p id="h-0009" num="0000">Illustrative Network Device</p>
<p id="p-0089" num="0088"><figref idref="DRAWINGS">FIG. 4</figref> shows one embodiment of network device <b>400</b> that may be included in a system implementing the invention. Network device <b>400</b> may include many more or less components than those shown in <figref idref="DRAWINGS">FIG. 4</figref>. However, the components shown are sufficient to disclose an illustrative embodiment for practicing these innovations. Network device <b>400</b> may represent, for example, one embodiment of at least one of network device <b>112</b>, <b>114</b>, or <b>120</b> of <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0090" num="0089">As shown in the figure, network device <b>400</b> includes a processor <b>402</b> in communication with a memory <b>404</b> via a bus <b>428</b>. Network device <b>400</b> also includes a power supply <b>430</b>, network interface <b>432</b>, audio interface <b>456</b>, display <b>450</b>, keyboard <b>452</b>, input/output interface <b>438</b>, processor-readable stationary storage device <b>434</b>, and processor-readable removable storage device <b>436</b>. Power supply <b>430</b> provides power to network device <b>400</b>.</p>
<p id="p-0091" num="0090">Network interface <b>432</b> includes circuitry for coupling network device <b>400</b> to one or more networks, and is constructed for use with one or more communication protocols and technologies including, but not limited to, protocols and technologies that implement any portion of the Open Systems Interconnection model (OSI model), global system for mobile communication (GSM), code division multiple access (CDMA), time division multiple access (TDMA), user datagram protocol (UDP), transmission control protocol/Internet protocol (TCP/IP), Short Message Service (SMS), Multimedia Messaging Service (MMS), general packet radio service (GPRS), WAP, ultra wide band (UWB), IEEE 802.16 Worldwide Interoperability for Microwave Access (WiMax), Session Initiation Protocol/Real-time Transport Protocol (SIP/RTP), or any of a variety of other wired and wireless communication protocols. Network interface <b>432</b> is sometimes known as a transceiver, transceiving device, or network interface card (NIC). Network device <b>400</b> may optionally communicate with a base station (not shown), or directly with another computing device.</p>
<p id="p-0092" num="0091">Audio interface <b>456</b> is arranged to produce and receive audio signals such as the sound of a human voice. For example, audio interface <b>456</b> may be coupled to a speaker and microphone (not shown) to enable telecommunication with others and/or generate an audio acknowledgement for some action. A microphone in audio interface <b>456</b> can also be used for input to or control of network device <b>400</b>, for example, using voice recognition.</p>
<p id="p-0093" num="0092">Display <b>450</b> may be a liquid crystal display (LCD), gas plasma, electronic ink, light emitting diode (LED), Organic LED (OLED) or any other type of light reflective or light transmissive display that can be used with a computing device. Display <b>450</b> may be a handheld projector or pico projector capable of projecting an image on a wall or other object.</p>
<p id="p-0094" num="0093">Network device <b>400</b> may also comprise input/output interface <b>438</b> for communicating with external devices not shown in <figref idref="DRAWINGS">FIG. 4</figref>. Input/output interface <b>438</b> can utilize one or more wired or wireless communication technologies, such as USB&#x2122;, Firewire&#x2122;, WiFi, WiMax, Thunderbolt&#x2122;, Infrared, Bluetooth&#x2122;, Zigbee&#x2122;, serial port, parallel port, and the like.</p>
<p id="p-0095" num="0094">Human interface components can be physically separate from network device <b>400</b>, allowing for remote input and/or output to network device <b>400</b>. For example, information routed as described here through human interface components such as display <b>450</b> or keyboard <b>452</b> can instead be routed through the network interface <b>432</b> to appropriate human interface components located elsewhere on the network. Human interface components include any component that allows the computer to take input from, or send output to, a human user of a computer. Accordingly, pointing devices such as mice, styluses, track balls, or the like, may communicate through pointing device interface <b>458</b> to receive user input.</p>
<p id="p-0096" num="0095">Memory <b>404</b> may include Random Access Memory (RAM), Read-Only Memory (ROM), and/or other types of memory. Memory <b>404</b> illustrates an example of computer-readable storage media (devices) for storage of information such as computer-readable instructions, data structures, program modules or other data. Memory <b>404</b> stores a basic input/output system (BIOS) <b>408</b> for controlling low-level operation of network device <b>400</b>. The memory also stores an operating system <b>406</b> for controlling the operation of network device <b>400</b>. It will be appreciated that this component may include a general-purpose operating system such as a version of UNIX, or Linux&#x2122;, or a specialized operating system such as Microsoft Corporation's Windows&#xae; operating system, or the Apple Corporation's IOS&#xae; operating system. The operating system may include, or interface with a Java virtual machine module that enables control of hardware components and/or operating system operations via Java application programs.</p>
<p id="p-0097" num="0096">Memory <b>404</b> may further include one or more data storage <b>410</b>, which can be utilized by network device <b>400</b> to store, among other things, applications <b>420</b> and/or other data. For example, data storage <b>410</b> may also be employed to store information that describes various capabilities of network device <b>400</b>. The information may then be provided to another device based on any of a variety of events, including being sent as part of a header during a communication, sent upon request, or the like. Data storage <b>410</b> may also be employed to store social networking information including address books, buddy lists, aliases, user profile information, or the like. Data storage <b>410</b> may further include program code, data, algorithms, and the like, for use by a processor, such as processor <b>402</b> to execute and perform actions such as those action describe in conjunction with <figref idref="DRAWINGS">FIGS. 5-9</figref>. In one embodiment, at least some of data storage <b>410</b> might also be stored on another component of network device <b>400</b>, including, but not limited to, non-transitory media inside processor-readable removable storage device <b>436</b>, processor-readable stationary storage device <b>434</b>, or any other computer-readable storage device within network device <b>400</b>, or even external to network device <b>400</b>. Data storage <b>410</b> may include, for example, Device Profiles <b>414</b>, and Application Tests <b>416</b>.</p>
<p id="p-0098" num="0097">Applications <b>420</b> may include computer executable instructions which, when executed by network device <b>400</b>, transmit, receive, and/or otherwise process messages (e.g., SMS, Multimedia Messaging Service (MMS), Instant Message (IM), email, and/or other messages), audio, video, and enable telecommunication with another user of another mobile device. Other examples of application programs include calendars, search programs, email client applications, IM applications, SMS applications, Voice Over Internet Protocol (VoIP) applications, contact managers, task managers, transcoders, database programs, word processing programs, security applications, spreadsheet programs, games, search programs, and so forth. Applications <b>420</b> may include Network Monitor application <b>422</b>, Reporting application <b>424</b>, and Browser application <b>426</b> which may be enabled to perform actions further described below starting with at least <figref idref="DRAWINGS">FIG. 6</figref>. In at least one of the various embodiments, while they may be illustrated here as separate applications, Network Monitor application <b>422</b> and/or Reporting application <b>424</b> may be implemented as modules and/or components of the same application. Further, in at least one of the various embodiments, Network Monitor application <b>422</b> and/or Reporting application <b>424</b> may be implemented as operating system extensions, modules, plugins, or the like.</p>
<p id="p-0099" num="0098">Furthermore, in at least one of the various embodiments, Network Monitor application <b>422</b> and Reporting application <b>424</b> may be operative in a cloud-based computing environment. In at least one of the various embodiments, these applications, and others, that comprise the mobile development platform may be executing within virtual machines and/or virtual servers that may be managed in a cloud-based based computing environment. In at least one of the various embodiments, in this context the applications may flow from one physical network device within the cloud-based environment to another depending on performance and scaling considerations automatically managed by the cloud computing environment. Likewise, in at least one of the various embodiments, virtual machines and/or virtual servers dedicated to running Network Monitor application <b>422</b> and/or Reporting application <b>424</b> may be provisioned and de-commissioned automatically.</p>
<p id="p-0100" num="0099">Also, in at least one of the various embodiments, Device Profiles <b>414</b> and Application Tests <b>416</b>, or the like, may located in virtual servers running in a cloud-based computing environment rather than being tied to one or more specific physical blade servers or server computer devices.</p>
<p id="h-0010" num="0000">Illustrative Passive Network Monitor Device</p>
<p id="p-0101" num="0100"><figref idref="DRAWINGS">FIG. 5</figref> shows one embodiment of system <b>500</b> that includes a plurality of network devices on first network <b>502</b> and a plurality of network devices on second network <b>504</b>. Communication between the first network and the second network is managed by switch <b>506</b>. Also, NMD <b>508</b> is arranged to passively monitor and record packets that are communicated in flows between a network device on first network <b>502</b> and second network <b>504</b>. For example, the communication of flows of packets between the Host B network device and the Host A network device are managed by switch <b>506</b> and network device <b>508</b> is operative to passively monitor and record these flows.</p>
<p id="p-0102" num="0101">NMD <b>508</b> can receive network communication for monitoring through a variety of means including network taps, wireless receivers, port mirrors or directed tunnels from network switches, servers including the endpoints themselves, or other infrastructure devices. In at least some of the various embodiments, the NMD may receive a copy of each packet on a particular network segment or virtual local area network (VLAN). Also, for at least some of the various embodiments, they may receive these packet copies through a port mirror on a managed Ethernet switch, e.g., a Switched Port Analyzer (SPAN) port, or a Roving Analysis Port (RAP). Port mirroring enables analysis and debugging of network communications. Port mirroring can be performed for inbound or outbound traffic (or both) on single or multiple interfaces.</p>
<p id="h-0011" num="0000">General Operation</p>
<p id="p-0103" num="0102"><figref idref="DRAWINGS">FIGS. 6-9</figref> represent the generalized operations of automatic passive discovery of applications in accordance with at least one of the various embodiments. In at least one of the various embodiments, processes <b>600</b>, <b>700</b>, <b>800</b>, and <b>900</b> described in conjunction with <figref idref="DRAWINGS">FIGS. 6-9</figref> may be implemented by and/or executed on a single network device, such as network device <b>400</b> of <figref idref="DRAWINGS">FIG. 4</figref>. In other embodiments, these processes or portions of process thereof may be implemented by and/or executed on a plurality of network devices, such as network device <b>400</b> of <figref idref="DRAWINGS">FIG. 4</figref>. In yet other embodiments, these processes or portions thereof may be implemented by and/or executed on one or more blade servers, such as blade server <b>250</b> of <figref idref="DRAWINGS">FIG. 2B</figref>. However, embodiments are not so limited, and various combinations of network devices, blade servers, or the like may be utilized. Further, in at least one of the various embodiments, the processes described in conjunction with <figref idref="DRAWINGS">FIGS. 6-9</figref> may be operative in automated passive discovery architectures such as those described in conjunction with <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0104" num="0103"><figref idref="DRAWINGS">FIG. 6</figref> shows an overview flowchart for process <b>600</b> for automated passive discovery of applications in accordance with at least one of the various embodiments. After a start block, at block <b>602</b>, in at least one of the various embodiments, the NMD may passively monitor network packets that may transmitted over the network. In at least one of the various embodiments, the NMD may be enabled to employ various techniques for passively monitoring network packets that may be flowing on the network, including, SPAN ports, mirror ports, network taps, or the like, provided by one or more routers, switches, network devices, or the like that may be operative on the monitored networks.</p>
<p id="p-0105" num="0104">At block <b>604</b>, in at least one of the various embodiments, network devices that may be on the network may be identified based on network packets the NMD may capture. In at least one of the various embodiments, the NMD may be enabled to perform various techniques to identify network devices that are operative on the monitored networks.</p>
<p id="p-0106" num="0105">In at least one of the various embodiments, the NMD may detect devices if they emit any network packets onto the network that may be observed by the NMD. In at least one of the various embodiments, network packet emission may occur during the course of normal network communication between and among one or more devices on the network. In at least one of the various embodiments, the NMD may be a non-participant in the ongoing network communication among and/or between the devices that may emit the capture/monitored network packets. In at least one of the various embodiments, the NMD may passively capture the network packets without interfering and/or participating in the communication.</p>
<p id="p-0107" num="0106">In at least one of the various embodiments, the NMD may perform active tests and/or probes of the monitored networks. In some embodiments, one or more active tests may be triggered based on the results from passive discovery techniques. For example, in at least one of the various embodiments, an NMD may be arranged and/or configured to confirm the existence of one or more discovered devices by actively contacting them (e.g., pinging the discovered device, or the like). In at least one of the various embodiments, the NMD may determine if and how to actively probe devices based on one or more defined rule based policies.</p>
<p id="p-0108" num="0107">In some embodiments, some network packets may be one or more various forms of &#x201c;device advertisements&#x201d; that may be intended to provide a manifest of available services to other systems on the network&#x2014;generally systems other than the NMD. For example, in some embodiments, such device advertisements may include, Cisco Discovery Protocol (CDP), Simple Service Discovery Protocol (SSDP), Router Advertisement, Gratuitous ARPs, or the like.</p>
<p id="p-0109" num="0108">In at least one of the various embodiments, the detection of an emitted network packet may be considered proof-positive of the existence of a given device on the network. In contrast, in some embodiments, the receipt of a network packet may not provide verifiable proof of the existence of a device solely by external observation.</p>
<p id="p-0110" num="0109">In at least one of the various embodiments, network packets may contain framing headers that include a source and destination hardware identifier, such as, a MAC address. In at least one of the various embodiments, the NMD may use the source MAC address to uniquely identify the network packet emitting entity on the network.</p>
<p id="p-0111" num="0110">In at least one of the various embodiments, an exception to the emission-only rule may be made for certain entities which advertise a MAC address that may not match their physical hardware address. For example, devices such as virtual routers, employing protocols such as, Virtual Router Redundancy Protocol (VRRP), Common Address Redundancy Protocol (CARP), Hot Standby Router Protocol (HSRP), or the like, may be discovered upon observing network traffic seen heading to that destination. In at least one of the various embodiments, the MAC addresses observed by the NMD may be employed by the NMD to disambiguate devices at the data-link layer (e.g., OSI Layer 2).</p>
<p id="p-0112" num="0111">In some embodiments, it may be desirable to disambiguate devices at the network layer (OSI Layer 3 aka L3) In at least one of the various embodiments, L3 disambiguation cannot simply count L3 network address, such as, IP addresses, because the various tap points on an internet-facing connection may be exposed to billions of network layer addresses. Thus, in at least one of the various embodiments, it may be desirable to identify the one or more subsets of L3 addresses that may be of interest, such as address that one local to monitored networks, or the like. In at least one of the various embodiments, the NMD may be configured using mask, filters, or the like, as part of identifying the one or more subsets of L3 address that may be of interest.</p>
<p id="p-0113" num="0112">In at least one of the various embodiments, the NMD may be arranged to employ one or more L2-to-L3 (OSI Layers) mapping processes for identifying L3 addresses of interest. Since L2 protocols may be present on the local L2 broadcast domain, or subnets, the NMD may identify network packets that may include header information that may be used for mapping the L2 address with a L3 address. In at least one of the various embodiments, if the L3 address may be mapped to a L2 address, the NMD may determine that it is monitoring network packets from a local L3 address. For example, Address Resolution Protocol (ARP) is a protocol that specifies L2-to-L3 address mapping. Thus, if an ARP packet may be observed by the NMD on a local network, the NMD may examine the ARP network packet to determine a mapping of L3 addresses to the underlying L2 device. Given that ARP network packets cannot be routed across broadcast domains (e.g., beyond a sub-net), a non-proxied ARP request observed on a local network for an L3 address may indicate that the L3 address may be considered local by the requestor. Thus, the NMD may rely on this property of the ARP protocol to establish the L2-to-L3 mapping. Other protocols may also be exploited to determine L2-to-L3 address mapping information, for example, IPv6 provides the Neighbor Discovery Protocol (NDP). Accordingly, in at least one of the various embodiments, the NMD may examine captured NDP network packets to determine L2-to-L3 address mappings, as well.</p>
<p id="p-0114" num="0113">In at least one of the various embodiments, network device address mapping may be stored using, data storage <b>270</b>, data storage <b>410</b>, a database, or the like. In at least one of the various embodiments, the device-address mapping data, as well as, the device discovery data may be stored using data storage techniques that enable the NMD to access the data using various searches and queries for use in application discovery, application dependency discovery, operating system discovery, or the like, or combination thereof.</p>
<p id="p-0115" num="0114">At block <b>606</b>, in at least one of the various embodiments, one or more roles for the discovered devices may be determined based on the monitored network packets. In at least one of the various embodiments, in addition to employing the observed network packets to identify devices on the monitored networks, the NMD may analyze the network packets to determine one or more roles that the discovered devices may perform.</p>
<p id="p-0116" num="0115">In at least one of the various embodiments, roles determined by the NMD may include, web server, database, router, switch, directory server, network attached storage (NAS), printer, or the like, or combination thereof. In at least one of the various embodiments, the NMD may be arranged to perform various passive analysis techniques for determining the roles that may be associated with a discovered device.</p>
<p id="p-0117" num="0116">In at least one of the various embodiments, the NMD may identify the hardware device vendor for a discovered device based on the top-24 bits of the discovered device's MAC address. In at least one of the various embodiments, this portion of the MAC address is the Organizationally Unique Identifier (OUI) for the discovered device. OUI is an industry standard that may be relied upon to identify the vendor information for a discovered device. In at least one of the various embodiments, the NMD may be arranged to employ the OUI to lookup the vendor of the discovered device. The vendor information may be used by the NMD as part of determining the role of the discovered device. In at least one of the various embodiments, the NMD may use one or more well-known techniques to query a local or remote service/process that may provide the vendor information that corresponds to an OUI.</p>
<p id="p-0118" num="0117">In at least one of the various embodiments, the NMD may examine captured network packets for dedicated discovery protocols, such as Cisco Discovery Protocol (CDP), Link Layer Discovery Protocol (LLDP), or the like, to determine additional details about the discovered devices. Thus, in at least one of the various embodiments, the NMD may include processes and/or modules that may be arranged to recognize and examine the contents of one or more well-known discovery protocols. Each discovery protocol may have well-known and/or determinable formats and content values that may be exploited by the NMD to facilitate the identification of one or more roles for discovered devices.</p>
<p id="p-0119" num="0118">In at least one of the various embodiments, network packets associated with discovered devices may be examined and one or more heuristics may be used to determine the discovered device may be routing network traffic or if it may be originating network traffic. In at least one of the various embodiments, the NMD may determine if discovered devices may be routing network traffic rather than originating it based in part on various attributes of network packets associated with such devices, such as, the number of IP addresses, varying hop counts, IP ID distributions, or so forth.</p>
<p id="p-0120" num="0119">In at least one of the various embodiments, the NMD may determine that some monitored network packets may include information for network management services/protocols, such as Dynamic Host Configuration Protocol (DHCP), Domain Name Service (DNS), NETBIOS, or the like. In at least one of the various embodiments, the NMD may be configured to recognize these and other well-known protocols. Information available in these common protocols may also be used for determining the one or more roles for a discovered device. Also, in at least one of the various embodiments, the fact that a device is emitting these types of network packets may contribute the role determination. For example, in at least one of the various embodiments, a discovered device that is emitting DHCP discovery requests may be identified with a role such as &#x201c;DHCP client.&#x201d; Similarly, in at least one of the various embodiments, a discovered device that is observed emitting a DHCP offer message may be identified with a role, such as, DHCP server.</p>
<p id="p-0121" num="0120">In at least one of the various embodiments, the NMD may passively monitor the network packets used by active discovery protocols to glean information the may be used for identifying the roles of the discovered devices. In other words, the NMD may passively piggy back on other active discovery protocols and network management protocols that may be operative on the monitored networks to further identify devices and the one or more roles of the discovered devices. In at least one of the various embodiments, the NMD may be arranged to examine and recognize more or fewer protocols that are discussed herein without departing from the spirit and scope of the innovation disclosed herein.</p>
<p id="p-0122" num="0121">In at least one of the various embodiments, the NMD may perform active tests and/or probes of the monitored networks to discover roles that may associated with discovered devices. In some embodiments, one or more active tests may be triggered based on the results from passive discovery techniques. In at least one of the various embodiments, an NMD may be arranged and/or configured to confirm the existence of one or more discovered application by actively contacting them. For example, the NMD could determine if a particular device is associated with a database server role by opening a connection to one or more ports that one or more database servers are known to listen on. If a database server listening on one of the ports responds, it may confirm its presence. In at least one of the various embodiments, the NMD may determine if and how to actively probe devices based on one or more defined rule based policies.</p>
<p id="p-0123" num="0122">In at least one of the various embodiments, one or more role discovery techniques may be used together to determine the one or roles associated with a discovered device. In at least one of the various embodiments, a confidence score may be generated based on the amount of evidence collected that indicates a particular role for device. For example, in at least one of the various embodiments, explicit roles that may be determined based on observing discovery protocol announcements (CDP, LLDP) may be have a high confidence score. While, in at least one of the various embodiments, roles indicated by less determinative tests and/or heuristics may result in a lower confidence score.</p>
<p id="p-0124" num="0123">At block <b>608</b>, in at least one of the various embodiments, network packets that include OSI Layer 4 through Layer 7 data may be examined by the NMD. In at least one of the various embodiments, the NMD may examine data included in Layer 4 and above in the observed network packets to gain further information about the discovered devices. In at least one of the various embodiments, such information may include, details regarding the applications operative on the discovered device, operating system information, application dependencies, or the like, or combination thereof, (See, <figref idref="DRAWINGS">FIGS. 7-9</figref> for additional description.)</p>
<p id="p-0125" num="0124">In at least one of the various embodiments, the NMD may optionally loop back to block <b>606</b> to employ information gathered at this step (block <b>608</b>) for use in additional role discovery for the discovered devices.</p>
<p id="p-0126" num="0125">At block <b>610</b>, in at least one of the various embodiments, applications and role information may be associated with the corresponding discovered devices. In at least one of the various embodiments, by employing passive discovery techniques the NMD may determine one or more (often many) properties about the discovered devices. In at least one of the various embodiments, these properties may be associated with the discovered device using one or more well-known data structures to generate a device profile, property sheet, or the like. In at least one of the various embodiments, the device profile may be stored in, a database, data storage <b>270</b> data storage <b>410</b>, or the like. In at least one of the various embodiments, the device profile may be indexed using various keys such as device name, IP address, MAC address, vendor, role, application, or the like, or combination thereof, to enable retrieval of device profile as needed. Further, in at least one of the various embodiments, even though the collection of device/application/role properties may be described as an express profile data structure that may be associated with device, it may also be implied based one or more relationships between the device and the determined properties.</p>
<p id="p-0127" num="0126">In at least one of the various embodiments, as additional information about a device may be discovered it may be included and/or associated with the device profile corresponding to the discovered device. In some embodiments, the device profile may include application profiles, operating system profiles, or the like.</p>
<p id="p-0128" num="0127">At decision block <b>612</b>, in at least one of the various embodiments, if there are more network packets to monitor, control may loop back to block <b>602</b>. Otherwise, in at least one of the various embodiments, control may be returned to a calling process. In at least one of the various embodiments, the NMD may be enabled to continuously monitor network packets on the monitored networks.</p>
<p id="p-0129" num="0128">In at least one of the various embodiments, the device profiles as well as other information collected by the NMD may be updated dynamically in real-time based on the observed network packets. Accordingly, in at least one of the various embodiments, the roles associated with a discovered device may automatically change over the course of being monitored. For example, the NMD may initially determine that a discovered device has a database role, but later observes HTTP packets originating from the discovered device causing the NMD to additionally associate the role &#x201c;web server&#x201d; to the device's profile. In such cases, if the device ceases to participate in database transactions, the database role may be removed from its profile for the duration during which it did not participate in these database sessions.</p>
<p id="p-0130" num="0129"><figref idref="DRAWINGS">FIG. 7</figref> shows a flowchart for process <b>700</b> for applying tests to identify applications in accordance with at least one of the various embodiments. After a start block, at block <b>702</b>, in at least one of the various embodiments, application transactional streams may be assembled from one or more of the monitored network packets. In at least one of the various embodiments, one or more network packets captured by the NMD may be used to re-assemble an application transaction that may have been broken into multiple network packets. In at least one of the various embodiments, there may be a variety of reasons, application transactional stream may be broken into multiple network packets, such as, device constraints, data type, network capacity, or like. For example, if the amount of data comprising an application transaction exceeds a defined Maximum Transmission Unit (MTU) the application transaction may be broken into multiple network packets.</p>
<p id="p-0131" num="0130">In at least one of the various embodiments, various methods that may rely on one or more known characteristics of the network protocols operative on the monitored networks may be employed by the NMD to re-assemble the application transaction. For example, some network protocols, such as TCP, may include sequence numbers in the network packets that may used to reconstruct an application transaction from multiple network packets. In at least one of the various embodiments, the NMD may examine network packets that include bit patterns and/or signatures that may indicate the beginning and end of application level transaction.</p>
<p id="p-0132" num="0131">In at least one of the various embodiments, re-assembly may not be required if the application transaction may be included in a single observed network packet.</p>
<p id="p-0133" num="0132">At block <b>704</b>, various tests, including heuristics and signature matching may be applied to the assembled application transaction. In at least one of the various embodiments, the NMD may be arranged to include a plurality of tests for identifying applications and application properties from data provided by captured network packets.</p>
<p id="p-0134" num="0133">In at least one of the various embodiments, application transactions may include patterns and values that may be used to determine the applications that may be operative on the monitored networks. In at least one of the various embodiments, for some devices information useful for the determining the application details may be already present in the device profile. In other cases, in at least one of the various embodiments, the NMD may determine the information by examining the payload data of one or more network packets.</p>
<p id="p-0135" num="0134">In at least one of the various embodiments, the specific methods and tests effective for identifying different applications may vary depending on the individual application and/or the characteristics of the network protocol being employed by the application.</p>
<p id="p-0136" num="0135">In at least one of the various embodiments, the various tests used for identifying the applications may be arranged using one or more data structures, such as, lists, arrays, hashed, or the like, or combination thereof. Further, the tests may be persisted in a database, or the like. In at least one of the various embodiments, may be classified into categories based on characteristics, such as, how the test works, the kind of application targeted, or the like.</p>
<p id="p-0137" num="0136">In at least one of the various embodiments, some tests may require one or more network packets and/or application transactions to be examined to identify matches. In such cases, information contained within multiple application transactions may be used to determine the identity of the application involved. For example, an application may include a correlation ID (e.g., a GUID) in requests and responses. Thus, in at least one of the various embodiments, since the NMD may be monitoring all of the network traffic on the wire it may be arranged to track these GUIDs thereby identifying the server and clients of an application.</p>
<p id="p-0138" num="0137">In at least one of the various embodiments, the NMD may perform active tests and/or probes of the monitored networks to discover applications. In some embodiments, one or more active tests may be triggered based on the results from passive discovery techniques. In at least one of the various embodiments, an NMD may be arranged and/or configured to confirm the existence of one or more discovered application by actively contacting them. For example, the NMD could determine if a particular device acts as a MySQL server by opening a TCP connection to port <b>3306</b>. A MySQL server listens on that port and will respond with a banner that confirms its presence. In at least one of the various embodiments, the NMD may determine if and how to actively probe devices based on one or more defined rule based policies.</p>
<p id="p-0139" num="0138">In at least one of the various embodiments, the NMD may examine captured network packets to look for correlations between types of communication protocols and/or different network streams that may indicate the existence of a particular application. For example, users of an application may use a web browser to submit a username and password over HTTP to obtain credentials that may be used by another process that may be using a different network protocol to communicate. In this case, the NMD may correlate the two parts of the transaction by observing the presence of the shared credential in the Layer 4 payload of the monitored network packets even though monitored packets were in different streams and/or using different protocols.</p>
<p id="p-0140" num="0139">In at least one of the various embodiments, the correlation of the application data may be made between network packets that may be on different network flows. In this circumstance, the L2 and L3 data in network packets may be insufficient to determine if an application-level correlation may be exist. Accordingly, the NMD may examine Layer 4 data of the network packets even if the Layer 2 and Layer 3 information suggests that network packets may be unrelated.</p>
<p id="p-0141" num="0140">In at least one of the various embodiments, the NMD may prioritize the tests for identifying application based on one or more factors, including, success rate, performance impact, user defined priority, or the like.</p>
<p id="p-0142" num="0141">In at least one of the various embodiments, tests may be selected based on Layer 2 and Layer 3 information. Also, in at least one of the various embodiments, information that may be included in the device profile (if any) may be used by the NMD to select and/or eliminate application tests from being applied. For example, if the device profile of the device associated with captured network packets indicates that the discovered device is a router, the NMD may be configured to forgo application testing for network packets associated with that device.</p>
<p id="p-0143" num="0142">In at least one of the various embodiments, application tests may employ pattern matching techniques such as regular expressions. In some embodiments, application tests may include multiple steps and/or may be implemented using programming languages, such as, Perl, Python, Erlang, Java, C, C++, or the like, or combination thereof.</p>
<p id="p-0144" num="0143">At decision block <b>706</b>, in at least one of the various embodiments, if an application may be identified, control may flow to block <b>710</b>. Otherwise, in at least one of the various embodiments, control may flow to decision block <b>708</b>.</p>
<p id="p-0145" num="0144">In at least one of the various embodiments, there may be various reasons why the NMD may fail to identify an application, including, absence of a relevant test, user configuration, missing and/or dropped data, or the like.</p>
<p id="p-0146" num="0145">At decision block <b>708</b>, if there may be more tests to perform, control may loop back to block <b>704</b>. Otherwise, control may be returned to a calling process. In at least one of the various embodiments, testing may be done in phases where one or more tests maybe applied during each phase. In some embodiments, tests may be run one at time. And, in at least one of the various embodiments, tests may be applied using a defined priority order.</p>
<p id="p-0147" num="0146">At block <b>710</b>, in at least one of the various embodiments, the discovered application may be associated with the network device that provided the network packets. In at least one of the various embodiments, if one or more captured network packets may be determined to be an identified application transaction there may be additional of information about the application that may be determined. In at least one of the various embodiments, the determined application information may be expressly and/or implicitly associated with the device profile of the discovered device that may be associated with the application. In at least one of the various embodiments, the results of tests may be layered in the sense that more than one test may contribute information for the same application.</p>
<p id="p-0148" num="0147">In at least one of the various embodiments, information about the application that may be determined may include, name, version, licensing information, server or client application, character encoding, or the like, or combination thereof.</p>
<p id="p-0149" num="0148">In at least one of the various embodiments, the determined application information may be arranged expressly and/or implicitly into an application profile that may include the information about a particular application may be determined by the NMD. In at least one of the various embodiments, one or more application profiles may be associated with a device profile depending on the number of applications that the NMD determined could be associated with the device. Next, control may be returned to a calling process.</p>
<p id="p-0150" num="0149"><figref idref="DRAWINGS">FIG. 8</figref> shows a flowchart for process <b>800</b> for determining application dependences in accordance with at least one of the various embodiments. In at least one of the various embodiments, the applications that may be associated with a device may be dependent and/or related to other discovered devices based on the application information. For example, in at least one of the various embodiments, some discovered devices may running a server version of an application, while other discovered devices may host client versions of the applications. Identifying application dependencies enables device dependencies to be discovered, some of which may be non-obvious absent the NMD's analysis of the OSI Layer 4-7 data.</p>
<p id="p-0151" num="0150">After a start block, at block <b>802</b>, in at least one of the various embodiments, application transactional streams (transactions) may be assembled from one or more of the monitored network packets. See, discussion for block <b>702</b>.</p>
<p id="p-0152" num="0151">At block <b>804</b>, in at least one of the various embodiments, a parent application may be determined based on the application transaction. In at least one of the various embodiments, OSI Layer 4 and above network packet payloads may be examined by the NMD to determine relationships between the various discovered devices based on one or more of the applications that may have been discovered. In at least one of the various embodiments, a discovered device may be considered to be operating as a parent (e.g., servers) for a particular discovered application relative to devices that may be using the same application (e.g., clients)</p>
<p id="p-0153" num="0152">In at least one of the various embodiments, network packet payloads associated with the discovered applications may be examined by the NMD to determine if the discovered device may be hosting an application that may be associated with dependant applications. In at least one of the various embodiments, the actual tests may include analysis that may be performed in conjunction with process <b>700</b>. In at least one of the various embodiments, information obtained about an application during the application identification process (process <b>700</b>) may include information that may indicate that the application may be operating as a parent (server) application. For example, a discovered device may be determined by the NMD to be issuing HTTP responses to one or more requestors. Such information may indicate that the discovered device may be a HTTP server.</p>
<p id="p-0154" num="0153">At block <b>806</b>, in at least one of the various embodiments, application dependencies for the parent application may be determined. In at least one of the various embodiments, during the test and analysis in process <b>700</b>, one or more applications running on discovered devices may be determined. In at least one of the various embodiments, in some case, discovered applications may have a dependency on another instance of the same application. For example, in at least one of the various embodiments, a client application, such as, a terminal server client may be running on a discovered device while the terminal server application may be running on another discovered device. Thus, on this basis, a dependency between the two discovered devices may be determined.</p>
<p id="p-0155" num="0154">In at least one of the various embodiments, the NMD may discover application dependencies between components of multi-tier applications where each component may be an application separately discovered by the NMD. For example, the NMD may discover a multi-tier application that is comprised of a web server front-end, a caching tier, a middle-ware tier, a database tier, and a storage tier. In some cases, the NMD may discover each tier and determine them as separate applications operating on the monitored networks. By employing application dependency analysis, the NMD may discover that the applications are related and/or dependent on each other. In at least one of the various embodiments, applications determined to be operating on a discovered device may be dependant on another application operating on a different discovered device. For example, in at least one of the various embodiments, a web application operative on one discovered device may be dependent on a database application is operative on a different device.</p>
<p id="p-0156" num="0155">At block <b>808</b>, in at least one of the various embodiments, the dependent applications may be associated with parent application. In at least one of the various embodiments, the dependencies relationships between the applications and/or the discovered device may be stored and indexed. In at least one of the various embodiments, the application dependency information may be included in and/or associated with the device profiles. In some cases, in at least one of the various embodiments, a discovered device may operate both as a parent application and a child application depending on circumstances. Likewise, in at least one of the various embodiments, the NMD may determine that a discovered device may be running multiple instances of the same application with some of them having different dependency relationships.</p>
<p id="p-0157" num="0156">Further, in at least one of the various embodiments, some dependent applications may be peers of each other, such that the NMD may recognize the applications and/or devices hosting the application may be related even though a parent-child relationship may be absent.</p>
<p id="p-0158" num="0157">In at least one of the various embodiments, the dependency information may be stored in a database and may support queries for identifying dependencies between and among the discovered devices, between the applications running on the discovered devices, or the like, or a combination thereof. In at least one of the various embodiments, a dependency information database may support searches or queries that return sets of devices based their associated application dependencies. Further, in at least one of the various embodiments, the application dependency information may be included in, or associated with, the device profile for the discovered devices that may be determined to be associated with the determined application dependencies. In at least one of the various embodiments, the application dependency information may be included in one or more application profiles that may be associated with the application having the determined dependency relationships. Next, control may be returned a calling process.</p>
<p id="p-0159" num="0158"><figref idref="DRAWINGS">FIG. 9</figref> shows a flowchart for process <b>900</b> for passively determining operating systems in accordance with at least one of the various embodiments. In at least one of the various embodiments, the NMD may examine and analyze captured network packets to determine details about the operating system that may operative on one or more discovered devices.</p>
<p id="p-0160" num="0159">After a start block, at block <b>902</b>, one or more networks may be passively monitored for network packets. In at least one of the various embodiments, as discussed above the NMD may be provided one or more network streams that include network packets emitting from one or more network devices that may be operative on the monitored network.</p>
<p id="p-0161" num="0160">At block <b>904</b>, in at least one of the various embodiments, basic operating system information may be determined using OSI Layer 2-4 information. In at least one of the various embodiments, the NMD may analyze the OSI Layer 2-4 information of captured network packets as part of determining operating system information about the network device the emitted the network packets. In at least one of the various embodiments, OSI Layer 2-4 information, such as, TCP options includes in TCP packet, may be analyzed to provide an indication of the type of the one or more operating systems that may be running on a discovered device.</p>
<p id="p-0162" num="0161">In at least one of the various embodiments, the NMD may examine the OSI Layer 2-4 data to determine if there may be patterns and/or values that indicate a particular operating system. Similar, to process <b>700</b>, multiple tests may be employed to test for multiple operating systems. Information discovered during this analysis may be added to the device profiles for the discovered device corresponding to the captured network packets.</p>
<p id="p-0163" num="0162">At block <b>906</b>, in at least one of the various embodiments, additional operating system details may be determined using OSI Layer 5-7 information. In at least one of the various embodiments, the NMD may look deeper into the network packets to analyze the application-level information that may be included in the network packet. In some cases, in at least one of the various embodiments, as part of this analysis, the NMD may re-assemble one or more network packets into a larger application transaction. See, <figref idref="DRAWINGS">FIG. 7</figref>, process <b>700</b>, block <b>702</b>. For example, in at least one of the various embodiments, HTTP packets emitted from a discovered device may include HTTP header information that describes the operating system of the discovered device (e.g., HTTP protocol's User-Agent and Server headers field).</p>
<p id="p-0164" num="0163">At block <b>908</b>, in at least one of the various embodiments, the discovered network devices may be associated with each discovered operating system and its details. In at least one of the various embodiments, the NMD may collect and correlate the OSI Layer 2-4 and OSI Layer 5-7 information to determine a detailed operating system profile for discovered devices. In at least one of the various embodiments, this information may be added to the device profiles that correspond to the discovered devices that emitted and/or received the monitored network packets. Also, in at least one of the various embodiments, the operating system information may be indexed separately in a database, or the like. In any event, the operating system information may be persisted such that queries such as, &#x201c;select all devices running Windows 3.1&#x201d; may produce a result set that includes all discovered devices that the NMD has determined are running the operating system Windows 3.1, and so forth.</p>
<p id="p-0165" num="0164">In at least one of the various embodiments, the determined operating system information may be arranged expressly and/or implicitly into an operating system profile that may include the information about a particular operating system determined by the NMD. In at least one of the various embodiments, one or more operating system profiles may be associated in each device profiles, with the number depending on how many operating systems the NMD detected running on the discovered device. Next, in at least one of the various embodiments, control may be returned to a calling process.</p>
<p id="p-0166" num="0165">In at least one of the various embodiments, a NMD may be arranged to more or less simultaneously perform some or all of process <b>700</b>, <b>800</b>, and <b>900</b> even though they are describe separately. For example, in at least one of the various embodiments, while discovering applications, the NMD may also perform the actions to discover application dependencies and operating system details. Further, in at least one of the various embodiments, information about the discovered devices and/or the discovered applications may be accumulated at different stages of the discovery process. For example, in at least one of the various embodiments, one stage of analysis may discover the vendor of a discovered device, while another stage discovers the operating system, and while still further, another stage discovers the operating system version, and so forth.</p>
<p id="p-0167" num="0166">Also, in at least one of the various embodiments, the amount of detail discoverable about a device and the applications the device may be hosting may depend on the characteristics and payloads of the network packets emitted and received by the discovered devices. For example, in at least one of the various embodiments, a first discoverable device may have a web server running that includes operating system version information in HTTP responses it sends to clients. Whereas a second discovered device running the same kind of web server application may be configured such that the operating system information is not included in its HTTP responses. Thus, the NMD may employ different tests and technique to discover that both devices may be running same type and version web server application. In at least one of the various embodiments, however, as discussed above, the NMD may apply more than one test and/or discovery method if it may be examining monitored network packets. Thus, continuing with the last example, in at least one of the various embodiments, even if the web server of the second device is configured to hide the operating information, the NMD may discover detailed operating system information by analyzing other network packets sent and received by the second device.</p>
<p id="p-0168" num="0167">It will be understood that each block of the flowchart illustration, and combinations of blocks in the flowchart illustration, can be implemented by computer program instructions. These program instructions may be provided to a processor to produce a machine, such that the instructions, which execute on the processor, create means for implementing the actions specified in the flowchart block or blocks. The computer program instructions may be executed by a processor to cause a series of operational steps to be performed by the processor to produce a computer-implemented process such that the instructions, which execute on the processor to provide steps for implementing the actions specified in the flowchart block or blocks. The computer program instructions may also cause at least some of the operational steps shown in the blocks of the flowchart to be performed in parallel. Moreover, some of the steps may also be performed across more than one processor, such as might arise in a multi-processor computer system. In addition, one or more blocks or combinations of blocks in the flowchart illustration may also be performed concurrently with other blocks or combinations of blocks, or even in a different sequence than illustrated without departing from the scope or spirit of the invention.</p>
<p id="p-0169" num="0168">Accordingly, blocks of the flowchart illustration support combinations of means for performing the specified actions, combinations of steps for performing the specified actions and program instruction means for performing the specified actions. It will also be understood that each block of the flowchart illustration, and combinations of blocks in the flowchart illustration, can be implemented by special purpose hardware based systems, which perform the specified actions or steps, or combinations of special purpose hardware and computer instructions. The foregoing example should not be construed as limiting and/or exhaustive, but rather, an illustrative use case to show an implementation of at least one of the various embodiments of the invention.</p>
<p id="p-0170" num="0169">The above specification, examples, and data provide a complete description of the composition, manufacture, and use of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention, the invention resides in the claims hereinafter appended.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for monitoring communication over a network with a network device that is operative to perform actions, comprising:
<claim-text>passively monitoring a plurality of packets on the network and determining at least one other network device on the network and at least one network protocol based on at least data included in the monitored packets, wherein the monitored packets include at least a portion of data associated with layers four through seven (L4-L7 data) of the Open Systems Interconnection (OSI) model;</claim-text>
<claim-text>determining a plurality of transactions by reassembling at least a portion of the plurality of monitored packets based on the at least one determined network protocol;</claim-text>
<claim-text>determining at least one application based on testing the L4-L7 data that is included in each transaction, wherein at least a portion of the L4-L7 data is scanned to identify at least one pattern of at least one application transaction that is associated with the at least one application, and wherein each pattern is at least one of previously provided or determined from payload data for at least one network packet; and</claim-text>
<claim-text>generating at least one application profile that includes at least an identity of the application and associating the application profile with the at least one other network device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising, determining at least one operating system that is associated with the at least one other network device based on testing the at least portion of L4-L7 data included in the monitored packets.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising, determining at least one application dependency based on at least a comparison of a plurality of transactions that are associated with two or more separate network devices.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining the at least one application based on testing the L4-L7 data that is included in each transaction, further comprises, correlating two or more transactions that are on separate network flows based on L4-L7 data included in each transaction.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining the at least one application based on testing the L4-L7 data that is included in each transaction, further comprises, determining the at least one application based on an accumulation of L4-L7 data from a plurality of transactions.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising, determining at least one role for the at least one other network device based on examining the L4-L7 data associated with the at least one other network device.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining the at least one application based on testing the L4-L7 data that is included in each transaction, further comprises, employing at least one heuristic technique based on at least one known property of the at least one application.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A system arranged for monitoring communication over a network, comprising:
<claim-text>a server device, including:
<claim-text>a transceiver that is operative to communicate over the network;</claim-text>
<claim-text>a memory that is operative to store at least instructions; and</claim-text>
<claim-text>a processor device that is operative to execute instructions that enable actions, including:
<claim-text>passively monitoring a plurality of packets on the network and determining at least one other network device on the network and at least one network protocol based on at least data included in the monitored packets, wherein the monitored packets include at least a portion of data associated with layers four through seven (L4-L7 data) of the Open Systems Interconnection (OSI) model;</claim-text>
<claim-text>determining a plurality of transactions by reassembling at least a portion of the plurality of monitored packets based on the at least one determined network protocol;</claim-text>
<claim-text>determining at least one application based on testing the L4-L7 data that is included in each transaction, wherein at least a portion of the L4-L7 data is scanned to identify at least one pattern of at least one application transaction that is associated with the at least one application, and wherein each pattern is at least one of previously provided or determined from payload data for at least one network packet; and</claim-text>
<claim-text>generating at least one application profile that includes at least an identity of the application and associating the application profile with the at least one other network device; and</claim-text>
</claim-text>
</claim-text>
<claim-text>a client device, comprising,
<claim-text>a transceiver that is operative to communicate over the network;</claim-text>
<claim-text>a memory that is operative to store at least instructions; and</claim-text>
<claim-text>a processor device that is operative to execute instructions that enable actions, including:
<claim-text>displaying at least a portion of one device profile that corresponds to the at least one other network device; and</claim-text>
<claim-text>displaying at least a portion of the at least one application profile.</claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising, determining at least one operating system that is associated with the at least one other network device based on testing the at least portion of L4-L7 data included in the monitored packets.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising, determining at least one application dependency based on at least a comparison of a plurality of transactions that are associated with two or more separate network devices.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein determining the at least one application based on testing the L4-L7 data that is included in each transaction, further comprises, correlating two or more transactions that are on separate network flows based on L4-L7 data included in each transaction.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein determining the at least one application based on testing the L4-L7 data that is included in each transaction, further comprises, determining the at least one application based on an accumulation of L4-L7 data from a plurality of transactions.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising, determining at least one role for the at least one other network device based on examining the L4-L7 data associated with the at least one other network device.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein determining the at least one application based on testing the L4-L7 data that is included in each transaction, further comprises, employing at least one heuristic technique based on at least one known property of the at least one application.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A network device that is operative for monitoring communication over a network, comprising:
<claim-text>a transceiver that is operative to communicate over a network;</claim-text>
<claim-text>a memory that is operative to store at least instructions; and</claim-text>
<claim-text>a processor device that is operative to execute instructions that enable actions, including:
<claim-text>passively monitoring a plurality of packets on the network and determining at least one other network device on the network and at least one network protocol based on at least data included in the monitored packets, wherein the monitored packets include at least a portion of data associated with layers four through seven (L4-L7 data) of the Open Systems Interconnection (OSI) model;</claim-text>
<claim-text>determining a plurality of transactions by reassembling at least a portion of the plurality of monitored packets based on the at least one determined network protocol;</claim-text>
<claim-text>determining at least one application based on testing the L4-L7 data that is included in each transaction, wherein at least a portion of the L4-L7 data is scanned to identify at least one pattern of at least one application transaction that is associated with the at least one application, and wherein each pattern is at least one of previously provided or determined from payload data for at least one network packet; and</claim-text>
<claim-text>generating at least one application profile that includes at least an identity of the application and associating the application profile with the at least one other network device.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The network device of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising, determining at least one operating system that is associated with the at least one other network device based on testing the at least portion of L4-L7 data included in the monitored packets.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The network device of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising, determining at least one application dependency based on at least a comparison of a plurality of transactions that are associated with two or more separate network devices.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The network device of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein determining the at least one application based on testing the L4-L7 data that is included in each transaction, further comprises, correlating two or more transactions that are on separate network flows based on L4-L7 data included in each transaction.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The network device of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein determining the at least one application based on testing the L4-L7 data that is included in each transaction, further comprises, determining the at least one application based on an accumulation of L4-L7 data from a plurality of transactions.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The network device of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising, determining at least one role for the at least one other network device based on examining the L4-L7 data associated with the at least one other network device.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. A processor readable non-transitive storage media that includes instructions for monitoring communication over a network with a network device, wherein execution of the instructions by a processor device enables actions, comprising:
<claim-text>passively monitoring a plurality of packets on the network and determining at least one other network device on the network and at least one network protocol based on at least data included in the monitored packets, wherein the monitored packets include at least a portion of data associated with layers four through seven (L4-L7 data) of the Open Systems Interconnection (OSI) model;</claim-text>
<claim-text>determining a plurality of transactions by reassembling at least a portion of the plurality of monitored packets based on the at least one determined network protocol;</claim-text>
<claim-text>determining at least one application based on testing the L4-L7 data that is included in each transaction, wherein at least a portion of the L4-L7 data is scanned to identify at least one pattern of at least one application transaction that is associated with the at least one application, and wherein each pattern is at least one of previously provided or determined from payload data for at least one network packet; and</claim-text>
<claim-text>generating at least one application profile that includes at least an identity of the application and associating the application profile with the at least one other network device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The media of <claim-ref idref="CLM-00021">claim 21</claim-ref>, further comprising, determining at least one operating system that is associated with the at least one other network device based on testing the at least portion of L4-L7 data included in the monitored packets.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The media of <claim-ref idref="CLM-00021">claim 21</claim-ref>, further comprising, determining at least one application dependency based on at least a comparison of a plurality of transactions that are associated with two or more separate network devices.</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The media of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein determining the at least one application based on testing the L4-L7 data that is included in each transaction, further comprises, correlating two or more transactions that are on separate network flows based on L4-L7 data included in each transaction.</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The media of <claim-ref idref="CLM-00021">claim 21</claim-ref>, further comprising, determining at least one role for the at least one other network device based on examining the L4-L7 data associated with the at least one other network device.</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The media of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein determining the at least one application based on testing the L4-L7 data that is included in each transaction, further comprises, employing at least one heuristic technique based on at least one known property of the at least one application. </claim-text>
</claim>
</claims>
</us-patent-grant>
