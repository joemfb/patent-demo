<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626773-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626773</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13316633</doc-number>
<date>20111212</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>13</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>17</main-group>
<subgroup>30</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>707748</main-classification>
</classification-national>
<invention-title id="d2e53">Aligning records for visual comparison</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6374241</doc-number>
<kind>B1</kind>
<name>Lamburt et al.</name>
<date>20020400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6990480</doc-number>
<kind>B1</kind>
<name>Burt</name>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2003/0167253</doc-number>
<kind>A1</kind>
<name>Meinig</name>
<date>20030900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2005/0086256</doc-number>
<kind>A1</kind>
<name>Owens et al.</name>
<date>20050400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707103 R</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2006/0095373</doc-number>
<kind>A1</kind>
<name>Venkatasubramanian et al.</name>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705 40</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2012/0023107</doc-number>
<kind>A1</kind>
<name>Nachnani et al.</name>
<date>20120100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707748</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00007">
<othercit>Griethe, H. and Schumann, H; The visualization of uncertain data: Methods and problems; Proceedings of SimVis&#x2014;vol. 6; 2006; DBLP, University of Trier, Trier, Germany; (http://www.informatik.uni-rostock.de/&#x2dc;schumann/papers/2006%2B/Magdeburg<sub>&#x2014;</sub>griethe.pdf).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00008">
<othercit>William E Winkler; Overview of record linkage and current research directions; Research Report Series; 2006; Statistical Research Division, U.S. Census Bureau, Washington, DC, USA; (http://www.census.gov/srd/papers/pdf/rrs2006-02.pdf).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00009">
<othercit>Rajmonda Sulo, Stephen Eick and Robert Grossman; DaVis: A tool for Visualizing Data Quality; Posters Compendium of InfoVis; 2005; IEEE Explore, NY, USA; (http://pubs.rgrossman.com/dl/proc-095.pdf).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>Carlo Batini and Monica Scannapieco; Data Quality: Concepts, Methodologies and Techniques; p. 113; 2006; Springer-Verlag New York, Inc. Secaucus, NJ, USA; (http://www.springer.com/computer/database+management+%26+information+retrieval/book/978-3-540-33172-8).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00011">
<othercit>Hyunmo Kang; Duplicate search and visualization of cluster-wise relational context for entity resolution; Accessed on Dec. 7, 2011; Department of Computer Science, University of Maryland, College Park, MD, USA (http://www.cs.umd.edu/projects/linqs/ddupe).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00012">
<othercit>Hyunmo Kang, Lise Getoor, Ben Shneiderman, Mustafa Bilgic and Louis Licamele; Interactive Entity Resolution in Relational Data: A Visual Analytic Tool and Its Evaluation; IEEE Transactions on Visualization and Computer Graphics, vol. 14, No. 5, Sep./Oct. 2008; IEEE Explore, NY, USA; (http://ieeexplore.ieee.org/xpl/freeabs<sub>&#x2014;</sub>all.jsp?arnumber=4479458).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>17</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>707748</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>12</number-of-drawing-sheets>
<number-of-figures>12</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20130151537</doc-number>
<kind>A1</kind>
<date>20130613</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Woody</last-name>
<first-name>Jeffrey</first-name>
<address>
<city>Onalaska</city>
<state>WI</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Thatavarthy</last-name>
<first-name>Prasanthi</first-name>
<address>
<city>Onalaska</city>
<state>WI</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Woody</last-name>
<first-name>Jeffrey</first-name>
<address>
<city>Onalaska</city>
<state>WI</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Thatavarthy</last-name>
<first-name>Prasanthi</first-name>
<address>
<city>Onalaska</city>
<state>WI</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Business Objects Software Limited</orgname>
<role>03</role>
<address>
<city>Dublin</city>
<country>IE</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Vo</last-name>
<first-name>Truong</first-name>
<department>2156</department>
</primary-examiner>
<assistant-examiner>
<last-name>Harmon</last-name>
<first-name>Courtney</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Various embodiments of systems and methods for aligning records for visual comparison are described herein. In one aspect, the method includes identifying a plurality of records. A reference record is selected from the plurality of records. One or more non-reference record is merged into the reference record to generate a merged reference record. The merged reference record includes one or more fields missing in the reference record. The missing fields are included as blank fields from the non-reference records. The merged reference record is merged into a non-reference record to generate the merged non-reference record. The merged non-reference record includes fields missing in the non-reference record. Missing fields are included as blank fields. The merged records are displayed on a user interface in a card view.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="239.18mm" wi="136.82mm" file="US08626773-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="253.15mm" wi="168.49mm" orientation="landscape" file="US08626773-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="194.39mm" wi="133.10mm" file="US08626773-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="245.62mm" wi="143.43mm" orientation="landscape" file="US08626773-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="176.87mm" wi="123.36mm" orientation="landscape" file="US08626773-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="245.62mm" wi="122.00mm" orientation="landscape" file="US08626773-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="240.54mm" wi="178.99mm" orientation="landscape" file="US08626773-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="139.11mm" wi="151.89mm" orientation="landscape" file="US08626773-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="242.23mm" wi="157.56mm" orientation="landscape" file="US08626773-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="240.54mm" wi="170.52mm" orientation="landscape" file="US08626773-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="238.84mm" wi="142.83mm" file="US08626773-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="223.77mm" wi="153.16mm" orientation="landscape" file="US08626773-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="243.92mm" wi="160.36mm" orientation="landscape" file="US08626773-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">A record is a data structure for storing information related to an entity. The record comprises various data related to the entity. For example, the record for a customer may comprise data, e.g., a name of the customer, an official address of the customer, a residential address of the customer, a contact number of the customer, etc. It may be required to compare multiple records. For example, it may be required to compare the record of a customer &#x2018;xyz&#x2019; and a customer &#x2018;pqr.&#x2019; A visual comparison may be preferable or needed.</p>
<p id="p-0003" num="0002">However, it may be difficult to compare the records if the records are placed one on the top of another with data of the records being displayed horizontally. Typically, if the data of the records are displayed horizontally and the records include many data then a user may need to scroll back-and-forth or up-and-down across the records to compare various data which might be inconvenient and time consuming. The records may be placed side-by-side in a vertical arrangement (e.g., in a card view) to obviate the above-mentioned problems. However, even if the records are placed side-by-side, like data of the records may not be in alignment. For example, the &#x2018;residential address&#x2019; of the customer &#x2018;xyz&#x2019; and the &#x2018;residential address&#x2019; of the customer &#x2018;pqr&#x2019; may not be in alignment or may not line up in a same row.</p>
<p id="p-0004" num="0003"><figref idref="DRAWINGS">FIG. 1</figref> illustrates some examples that may cause misalignment of the like data of the records, e.g., the misalignment of the like data of a record <b>101</b> (i.e., left card) and a record <b>102</b> (i.e., right card). Consider three cases.</p>
<p id="p-0005" num="0004">Case 1: The record <b>101</b> includes a first name <b>101</b>A and a last name <b>101</b>C of the customer, while the record <b>102</b> includes a first name <b>102</b>A, a middle name <b>102</b>B, and a last name <b>102</b>C of the customer. Therefore, the record <b>102</b> includes an additional field <b>102</b>B (e.g., middle name) that is missing in the record <b>101</b> and it causes misalignment. Typically, due to misalignment the data (rows) of the record <b>101</b> and the corresponding data of the record <b>102</b> do not line up. For example, a &#x2018;REGION&#x2019; data <b>101</b>R and a &#x2018;MASKED&#x2019; data <b>101</b>M of the record <b>101</b> and the corresponding &#x2018;REGION&#x2019; data <b>102</b>R and the &#x2018;MASKED&#x2019; data <b>102</b>M of the record <b>102</b> do not line up in the same TOW.</p>
<p id="p-0006" num="0005">Case 2: The record <b>101</b> may include two addresses, e.g., ADDRESS 1 and ADDRESS 2 whereas the record <b>102</b> may only include one address, e.g., ADDRESS 1 that can also cause misalignment.</p>
<p id="p-0007" num="0006">Case 3: The data, e.g., ADDRESS 1 of the record <b>102</b> may include two levels of hierarchy (<b>102</b>H<b>1</b> and <b>102</b>H<b>2</b>) compared to the corresponding ADDRESS 1 of the record <b>101</b> that may also cause misalignment.</p>
<p id="p-0008" num="0007">Misalignment may cause inconvenience when comparing the records as the like data of the records do not line up in the same row. Further, comparing the misaligned records (e.g., the record <b>101</b> and <b>102</b>) may be time consuming.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0009" num="0008">Various embodiments of systems and methods for aligning records for visual comparison are described herein. In one aspect, the method executed by one or more computers in a network of computers includes identifying a plurality of records, selecting a reference record from the plurality of records, and merging one or more non-reference record into the reference record to generate a merged reference record. The merged reference record includes one or more fields that are missing in the reference record. The missing fields are included as blank fields from the one or more non-reference records. The merged reference record is merged into a non-reference record to generate a merged non-reference record. The merged non-reference record includes one or more fields missing in the non-reference record. The fields are included as blank fields from the merged reference record. A position or order of an included blank field is determined based upon the corresponding order or position of the field in the merged reference record. The merged reference record and the merged non-reference records are, therefore, aligned relative to each other. The merged records are displayed on a user interface in a card view. Displaying merged records (i.e., aligned records) in the card view enable a user to efficiently and conveniently compare the merged records.</p>
<p id="p-0010" num="0009">These and other benefits and features of embodiments of the invention will be apparent upon consideration of the following detailed description of preferred embodiments thereof, presented in connection with the following drawings.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0011" num="0010">The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. The embodiments of the invention, together with its advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of a prior art illustrating two records placed side-by-side in a card view for comparison.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 2</figref> is a flow chart illustrating the steps performed to align records for visual comparison, according to an embodiment of the invention.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram of a system including a records aligning module to align records for visual comparison, according to an embodiment of the invention.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a block diagram of the records aligning module, according to an embodiment of the invention.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 5</figref> illustrates tree structures corresponding to exemplary hierarchical records, according to an embodiment of the invention.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 6</figref> illustrates exemplary records required to be aligned, according to an embodiment of the invention.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 7</figref> illustrates a merged record generated by merging a second record of <figref idref="DRAWINGS">FIG. 6</figref> into a first record of <figref idref="DRAWINGS">FIG. 6</figref>, according to an embodiment of the invention.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 8</figref> is a screen display of the records of <figref idref="DRAWINGS">FIG. 6</figref> after alignment in a card view, according to an embodiment of the invention.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 9</figref> illustrates the aligned records of <figref idref="DRAWINGS">FIG. 8</figref> including several user interface (UI) enhancements to facilitate comparison, according to an embodiment of the invention.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 10</figref> is a flow chart illustrating the steps performed to align the records using array representations of the records, according to an embodiment of the invention.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 11</figref> is a flow chart illustrating the steps performed to display records based upon a result of the merging operation, according to an embodiment of the invention.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 12</figref> is a block diagram of an exemplary computer system, according to an embodiment of the invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0024" num="0023">Embodiments of techniques for aligning records for visual comparison are described herein. In the following description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the invention can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.</p>
<p id="p-0025" num="0024">Reference throughout this specification to &#x201c;one embodiment&#x201d;, &#x201c;this embodiment&#x201d; and similar phrases, means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 2</figref> is a flowchart illustrating a method for aligning records for visual comparison, according to one embodiment. A plurality of records is identified at step <b>201</b>. A reference record is selected from the plurality of records at step <b>202</b>. In one embodiment, the reference record is selected randomly. In another embodiment, the reference record is selected based upon a predefined rule. In yet another embodiment, the reference record is selected based upon a user's input. One or more non-reference record is merged into the reference record to generate a merged reference record at step <b>203</b>. In one embodiment, each non-reference record is merged into the reference record to generate the merged reference record. The merged reference record includes one or more fields missing in the reference record. In one embodiment, the fields of the reference record are compared to the fields of the non-reference records to determine the fields missing in the reference record. The missing fields are included into the merged reference record. The missing fields are included as blank fields. The merged reference record, therefore, is a superset that includes all the fields of all the records. The merged reference record is merged into each non-reference record to generate respective merged non-reference record at step <b>204</b>. The merged non-reference records include fields missing in the respective non-reference records. The fields are included from the merged reference record as blank fields. In one embodiment, a position of an included blank field is determined based upon the position of the corresponding field in the merged reference record. The merged reference record and the merged non-reference records are aligned relative to each other. The merged records are displayed on a user interface (UI) in a card view at step <b>205</b>. In the card view, the records are displayed side-by-side in a vertical arrangement.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 3</figref> illustrates one embodiment of a system <b>300</b> including a records aligning module <b>320</b> to align a plurality of records <b>310</b>(<b>1</b>-N). The records <b>310</b>(<b>1</b>-N) are identified by the records aligning module <b>320</b>. The records aligning module <b>320</b> selects a record <b>310</b>(<b>1</b>) as a reference record. The reference record <b>310</b>(<b>1</b>) and non-reference records <b>310</b>(<b>2</b>-N) are passed to a merge algorithm <b>330</b>. The merge algorithm <b>330</b> merges one or more non-reference record <b>310</b>(<b>2</b>-N) into the reference record <b>310</b>(<b>1</b>) to generate a merged reference record <b>340</b>(<b>1</b>). The merged reference record <b>340</b>(<b>1</b>) may include one or more fields missing in the reference record <b>310</b>(<b>1</b>). The fields are included from one or more non-reference records <b>310</b>(<b>2</b>-N). In one embodiment, the fields of the reference record <b>310</b>(<b>1</b>) are compared to the fields of each of the non-reference records <b>310</b>(<b>2</b>-N) to determine the fields missing in the reference record <b>310</b>(<b>1</b>). The missing fields are included into the reference record <b>310</b>(<b>1</b>) from the corresponding one or more non-reference records <b>310</b>(<b>2</b>-N) to generate the merged reference record <b>340</b>(<b>1</b>). The missing fields are included as blank fields. The merged reference record <b>340</b>(<b>1</b>) is, therefore, a superset that includes all the fields of all the records <b>310</b>(<b>1</b>-N). The merged reference record <b>340</b>(<b>1</b>) is merged into each of the non-reference record <b>310</b>(<b>2</b>-N) to generate respective merged non-reference records <b>340</b>(<b>2</b>-N). In one embodiment, the fields missing in the non-reference records <b>310</b>(<b>2</b>-N) are determined. The missing fields are included into the corresponding non-reference records <b>310</b>(<b>2</b>-N) to generate respective merged non-reference records <b>340</b>(<b>2</b>-N). The fields are included from the merged reference record <b>340</b>(<b>1</b>) as blank fields in positions where the fields are missing. In one embodiment, a position of an included blank field is determined based upon the position of the corresponding field in the merged reference record <b>340</b>(<b>1</b>). Each merged record <b>340</b>(<b>1</b>-N) include all the fields of all the records <b>310</b>(<b>1</b>-N) and are aligned relative to each other. The merged records <b>340</b>(<b>1</b>-N) are displayed on a user interface (UI) <b>350</b> in a card view <b>360</b>. In the card view <b>360</b> the merged records <b>340</b>(<b>1</b>-N) are positioned side-by-side in a vertical arrangement to enable efficient visual comparison.</p>
<p id="p-0028" num="0027">A visual comparison task (e.g., match review task) may be assigned to a user. Typically, the user may require to match or compare the plurality of records <b>310</b>(<b>1</b>-N). The records <b>310</b>(<b>1</b>-N) may be misaligned. The misaligned records <b>310</b>(<b>1</b>-N) are required to be aligned so that they can be easily compared. For example, the records <b>310</b>(<b>1</b>-N) are required to be aligned such that like fields (data) of the records <b>310</b>(<b>1</b>-N) line up in a same row.</p>
<p id="p-0029" num="0028">The records <b>310</b>(<b>1</b>-N) include various fields. For example, the record <b>310</b>(<b>1</b>) for a &#x2018;customer&#x2019; may include fields, e.g., a first name, a middle name, a last name, a contact number, etc. The like fields of the records <b>310</b>(<b>1</b>-N) are required to be compared. For example, the fields &#x2018;first name,&#x2019; &#x2018;middle name,&#x2019; and &#x2018;last name&#x2019; of the record <b>310</b>(<b>1</b>) are required to be compared with the corresponding fields &#x2018;first name,&#x2019; &#x2018;middle name,&#x2019; and &#x2018;last name&#x2019; of the record <b>310</b>(<b>2</b>). Typically, the fields of the records <b>310</b>(<b>1</b>-N) are required to be aligned properly so that the like fields of the records <b>310</b>(<b>1</b>-N) line up in a same row and the records <b>310</b>(<b>1</b>-N) can be easily compared.</p>
<p id="p-0030" num="0029">The records <b>310</b>(<b>1</b>-N) may be identified by the records aligning module <b>320</b>. The records aligning module <b>320</b> aligns the records <b>310</b>(<b>1</b>-N) relative to each other. For aligning the records <b>310</b>(<b>1</b>-N), the records aligning module <b>320</b> selects the reference record <b>310</b>(<b>1</b>). In one embodiment, the reference record <b>310</b>(<b>1</b>) is randomly selected. In another embodiment, the reference record <b>310</b>(<b>1</b>) is selected based upon a predefined rule. For example, the predefined rule may be: &#x201c;a first record from the plurality of records has to be selected as the reference record.&#x201d; Based upon the predefined rule the first record <b>310</b>(<b>1</b>) may be selected as the reference record. In yet another embodiment, a master record is selected as the reference record. The master record may be the record selected by the user from the records <b>310</b>(<b>1</b>-N). For example, the user may select the record <b>310</b>(<b>1</b>) as the master record. The master record <b>310</b>(<b>1</b>) may be selected as the reference record. Once the reference record <b>310</b>(<b>1</b>) is selected, the records <b>310</b>(<b>1</b>-N) may be passed to the merge algorithm <b>330</b>.</p>
<p id="p-0031" num="0030">In one embodiment, the merge algorithm <b>330</b> is a separate entity communicatively coupled to the records aligning module <b>320</b>. In another embodiment, the merge algorithm <b>330</b> is a part of the records aligning module <b>320</b>, as illustrated in <figref idref="DRAWINGS">FIG. 3</figref>. The merge algorithm <b>330</b> receives the records <b>310</b>(<b>1</b>-N). The merge algorithm <b>330</b> identifies the reference record <b>310</b>(<b>1</b>). The merge algorithm <b>330</b> merges the one or more non-reference records <b>310</b>(<b>2</b>-N) into the reference record <b>310</b>(<b>1</b>) to generate the merged reference record <b>340</b>(<b>1</b>). In one embodiment, the merge algorithm <b>330</b> merges each non-reference records <b>310</b>(<b>2</b>-N) into the reference record <b>310</b>(<b>1</b>) to generate the merged reference record <b>340</b>(<b>1</b>).</p>
<p id="p-0032" num="0031">The merged reference record <b>340</b>(<b>1</b>) includes the one or more fields missing in the reference record <b>310</b>(<b>1</b>). The one or more missing fields are included from the one or more non-reference records <b>310</b>(<b>2</b>-N). The fields are included as blank fields. In one embodiment, the fields of the reference record <b>310</b>(<b>1</b>) are compared to the fields of each of the non-reference records <b>310</b>(<b>2</b>-N) to determine the fields missing in the reference record <b>310</b>(<b>1</b>). The missing fields are included into the reference record <b>310</b>(<b>1</b>) to generate the merged reference record <b>340</b>(<b>1</b>). The merged reference record <b>340</b>(<b>1</b>), therefore, is the kind of superset that includes all the fields of all the records <b>310</b>(<b>1</b>-N). In one embodiment, an order or position of the included blank field in the merged reference record <b>340</b>(<b>1</b>) may be determined based upon a predefined template or a predefined rule. In another embodiment, the order of the included blank field in the merged reference record <b>340</b>(<b>1</b>) may be determined arbitrary.</p>
<p id="p-0033" num="0032">Once the merged reference record <b>340</b>(<b>1</b>) is generated, the merged reference record <b>340</b>(<b>1</b>) is merged into each non-reference record <b>310</b>(<b>2</b>-N). When the merged reference record <b>340</b>(<b>1</b>) is merged into each non-reference record <b>310</b>(<b>2</b>-N), the respective merged non-reference records <b>340</b>(<b>2</b>-N) are generated. The merged non-reference records <b>340</b>(<b>2</b>-N) may include one or more fields missing in the corresponding non-reference records <b>310</b>(<b>2</b>-N). For example, the merged non-reference record <b>340</b>(<b>2</b>) may include the one or more fields missing in the non-reference record <b>310</b>(<b>2</b>). The fields are included as the blank fields in the positions where the fields are missing. Typically, a value of the blank field is blank.</p>
<p id="p-0034" num="0033">In one embodiment, the fields of each non-reference record <b>310</b>(<b>2</b>-N) are compared to the fields of the merged reference record <b>340</b>(<b>1</b>) to determine the one or more fields missing in the one or more non-reference records <b>310</b>(<b>2</b>-N). The missing fields are included into the merged non-reference records <b>340</b>(<b>2</b>-N) from the merged reference record <b>340</b>(<b>1</b>). The fields are included as the blank fields in position where the fields are missing. In one embodiment, the merged reference record <b>340</b>(<b>1</b>) is used as a template for determining the order or position of the included blank field. The order of the blank field in the merged non-reference records <b>340</b>(<b>2</b>-N) is determined based upon the order of the corresponding field in the merged reference record <b>340</b>(<b>1</b>). The merged reference record <b>340</b>(<b>1</b>) and the merged non-reference records <b>340</b>(<b>2</b>-N) are aligned relative to each other.</p>
<p id="p-0035" num="0034">In below exemplary embodiment, the merging operation is illustrated for aligning the two records <b>310</b>(<b>1</b>-<b>2</b>). The exemplary records <b>310</b>(<b>1</b>-<b>2</b>) are illustrated below with the record <b>310</b>(<b>1</b>) as the reference record and the record <b>310</b>(<b>2</b>) as the non-reference record. The record <b>310</b>(<b>1</b>) and the record <b>310</b>(<b>2</b>) are shown below in table 1 and table 2, respectively.</p>
<p id="p-0036" num="0035">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="56pt" align="left"/>
<colspec colname="1" colwidth="91pt" align="left"/>
<colspec colname="2" colwidth="70pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" rowsep="1">TABLE 1</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>Name</entry>
<entry>A</entry>
</row>
<row>
<entry/>
<entry>Name ID</entry>
<entry>y</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0037" num="0036">
<tables id="TABLE-US-00002" num="00002">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="91pt" align="left"/>
<colspec colname="2" colwidth="77pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" rowsep="1">TABLE 2</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>Name</entry>
<entry>A</entry>
</row>
<row>
<entry/>
<entry>Contact ID</entry>
<entry>x</entry>
</row>
<row>
<entry/>
<entry>PAN No.</entry>
<entry>ABC</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0038" num="0037">The non-reference record <b>310</b>(<b>2</b>) is merged into the reference record <b>310</b>(<b>1</b>). As a result of merging, the merged reference record <b>340</b>(<b>1</b>) is generated as shown in table 3 below:</p>
<p id="p-0039" num="0038">
<tables id="TABLE-US-00003" num="00003">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="56pt" align="left"/>
<colspec colname="1" colwidth="91pt" align="left"/>
<colspec colname="2" colwidth="70pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" rowsep="1">TABLE 3</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>Name</entry>
<entry>A</entry>
</row>
<row>
<entry/>
<entry>Name ID</entry>
<entry>y</entry>
</row>
<row>
<entry/>
<entry>Contact ID</entry>
<entry/>
</row>
<row>
<entry/>
<entry>PAN No.</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0040" num="0039">As shown, the merged reference record <b>340</b>(<b>1</b>) includes the fields &#x2018;contact ID&#x2019; and &#x2018;Pan no&#x2019; that are missing in the reference record <b>310</b>(<b>1</b>). The missing fields are included into the merged reference record <b>340</b>(<b>1</b>) from the non-reference record <b>310</b>(<b>2</b>). The fields are included as the blank fields, i.e., the value of the fields &#x2018;contact ID&#x2019; and &#x201c;Pan no&#x201d; is blank or empty.</p>
<p id="p-0041" num="0040">The merged reference record <b>340</b>(<b>1</b>) is merged into the non-reference record <b>310</b>(<b>2</b>). As a result of merging, the merged non-reference record <b>340</b>(<b>2</b>) is generated as represented in table 4 below:</p>
<p id="p-0042" num="0041">
<tables id="TABLE-US-00004" num="00004">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="91pt" align="left"/>
<colspec colname="2" colwidth="77pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" rowsep="1">TABLE 4</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>Name</entry>
<entry>A</entry>
</row>
<row>
<entry/>
<entry>Name ID</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Contact ID</entry>
<entry>x</entry>
</row>
<row>
<entry/>
<entry>PAN No.</entry>
<entry>ABC</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0043" num="0042">As shown, the merged non-reference record <b>340</b>(<b>2</b>) includes the field &#x2018;name ID&#x2019; missing in the non-reference record <b>310</b>(<b>2</b>). The field is included from the merged reference record <b>340</b>(<b>1</b>). The field is included as the blank field, i.e., the value of the included field &#x2018;Name ID&#x2019; is empty or blank. In one embodiment, the order or position of the included blank field (Name ID) is determined based upon the order or position of that field (Name ID) in the merged reference record <b>340</b>(<b>1</b>). For example, as the field &#x2018;Name ID&#x2019; is a second field of the merged reference record <b>340</b>(<b>1</b>), therefore, the field &#x2018;Name ID&#x2019; (included as blank field in the merged non-reference record <b>340</b>(<b>2</b>)) is also included as the second field in the merged non-reference record <b>340</b>(<b>2</b>).</p>
<p id="p-0044" num="0043">The merged records <b>340</b>(<b>1</b>-<b>2</b>), i.e., the merged reference record <b>340</b>(<b>1</b>) (illustrated in below table 1) and the merged non-reference record <b>340</b>(<b>2</b>) (illustrated in below table 2) are aligned relative to each other such that the like fields line up in the same row, as shown in table 5 and 6 below:</p>
<p id="p-0045" num="0044">
<tables id="TABLE-US-00005" num="00005">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="56pt" align="left"/>
<colspec colname="1" colwidth="91pt" align="left"/>
<colspec colname="2" colwidth="70pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" rowsep="1">TABLE 5</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>Name</entry>
<entry>A</entry>
</row>
<row>
<entry/>
<entry>Name ID</entry>
<entry>y</entry>
</row>
<row>
<entry/>
<entry>Contact ID</entry>
<entry/>
</row>
<row>
<entry/>
<entry>PAN No.</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0046" num="0045">
<tables id="TABLE-US-00006" num="00006">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="91pt" align="left"/>
<colspec colname="2" colwidth="77pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" rowsep="1">TABLE 6</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>Name</entry>
<entry>A</entry>
</row>
<row>
<entry/>
<entry>Name ID</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Contact ID</entry>
<entry>x</entry>
</row>
<row>
<entry/>
<entry>PAN No.</entry>
<entry>ABC</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0047" num="0046">In one embodiment, the merging operation is performed using an array representation of the records <b>310</b>(<b>1</b>-N). The array representation of the records <b>310</b>(<b>1</b>-N) may be generated by an array generating algorithm <b>400</b> (<figref idref="DRAWINGS">FIG. 4</figref>). In one embodiment, the array generating algorithm <b>400</b> may be a part of the records aligning module <b>320</b>, as illustrated in <figref idref="DRAWINGS">FIG. 4</figref>. In another embodiment, the array generating algorithm <b>400</b> may be a separate entity communicatively coupled to the records aligning module <b>320</b>.</p>
<p id="p-0048" num="0047">The records aligning module <b>320</b> passes the records <b>310</b>(<b>1</b>-N) to the array generating algorithm <b>400</b>. The array generating algorithm <b>400</b> traverse each record <b>310</b>(<b>1</b>-N) to generate an array representation (not shown) of each record <b>310</b>(<b>1</b>-N). In one embodiment, if the record is hierarchical (e.g., XML records), the array generating algorithm <b>400</b> traverse a tree structure of the hierarchical record to generate the array representation of the hierarchical record. The array generating algorithm <b>400</b> traverse each node of the tree structure to generate the array representation of the hierarchical record. In one embodiment, the tree structure may be a linked list structure stored in a memory.</p>
<p id="p-0049" num="0048">The generation of the array representation for an exemplary reference record <b>310</b>(<b>1</b>) (shown in below table 7) and the exemplary non-reference record <b>310</b>(<b>2</b>) (shown in below table 8) is described below.</p>
<p id="p-0050" num="0049">
<tables id="TABLE-US-00007" num="00007">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="56pt" align="left"/>
<colspec colname="1" colwidth="91pt" align="left"/>
<colspec colname="2" colwidth="70pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" rowsep="1">TABLE 7</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>Customer</entry>
<entry>A</entry>
</row>
<row>
<entry/>
<entry>First Name</entry>
<entry>xyz</entry>
</row>
<row>
<entry/>
<entry>Last Name</entry>
<entry>abc</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0051" num="0050">
<tables id="TABLE-US-00008" num="00008">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="56pt" align="left"/>
<colspec colname="1" colwidth="91pt" align="left"/>
<colspec colname="2" colwidth="70pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" rowsep="1">TABLE 8</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>Customer</entry>
<entry>A</entry>
</row>
<row>
<entry/>
<entry>First Name</entry>
<entry>xyz1</entry>
</row>
<row>
<entry/>
<entry>Middle Name</entry>
<entry>pqr1</entry>
</row>
<row>
<entry/>
<entry>Last Name</entry>
<entry>abc1</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0052" num="0051">For generating the array representation of the exemplary record <b>310</b>(<b>1</b>), the array generating algorithm <b>400</b> traverses through a tree structure <b>500</b>A (<figref idref="DRAWINGS">FIG. 5</figref>) corresponding to the reference record <b>310</b>(<b>1</b>). Each node (<b>510</b>, <b>520</b>, <b>520</b>A, and <b>520</b>B) of the tree structure <b>500</b>A is traversed to retrieve the information related to the root node <b>510</b> and the one or more descendants (<b>520</b>, <b>520</b>A, and <b>520</b>B). As shown in <figref idref="DRAWINGS">FIG. 5</figref>, the tree structure <b>500</b>A starts with a root node (default node) <b>510</b>. The customer may be a child node (i.e., the customer node <b>520</b>) of the root node <b>510</b>. Similarly, the &#x2018;first name&#x2019; and the &#x2018;last name&#x2019; may be child nodes <b>520</b>A and <b>520</b>B, respectively, of the customer node <b>520</b>. In one embodiment, the information associated with a node may include one of a name of the node, a number of child nodes associated with the node, a name of a parent node, an occurrence number of the node, properties related to the node representing if the node is hidden or masked, a value of the node, a child index of the node representing if the node is n<sup>th </sup>child of the parent node (n being a natural number), and one or more comments related to the node.</p>
<p id="p-0053" num="0052">Based upon the retrieved information of each node (<b>510</b>, <b>520</b>, <b>520</b>A, and <b>520</b>B), the array generating algorithm <b>400</b> generates an Array Representation #1 for the record <b>310</b>(<b>1</b>) as presented below:</p>
<p id="p-0054" num="0053">
<tables id="TABLE-US-00009" num="00009">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>public var diffArr1:ArrayCollection = new ArrayCollection([</entry>
</row>
<row>
<entry>{ name:&#x201c;root&#x201d;, childIdx:&#x201c;0&#x201d; children:1, parentName:&#x201c;&#x201d;, occurNum:&#x201c;1&#x201d;,</entry>
</row>
<row>
<entry>parentName:&#x201c;&#x201d;, hidden:&#x201c;&#x201d;, masked:&#x201c;&#x201d;, value:&#x201c;&#x201d; },</entry>
</row>
<row>
<entry>{ name:&#x201c;Customer&#x201d;, childIdx:&#x201c;1&#x201d;, children:2, comment:&#x201c;&#x201d;,</entry>
</row>
<row>
<entry>duplicate:&#x201c;true&#x201d;, groupNum:&#x201c;1&#x201d;, hidden:&#x201c;&#x201d;, masked:&#x201c;&#x201d;, match_score:&#x201c;&#x201d;,</entry>
</row>
<row>
<entry>parentName: &#x201c;root&#x201d;, occurNum:&#x201c;1&#x201d;, recordId:&#x201c;1&#x201d;, suspect:&#x201c;false&#x201d;,</entry>
</row>
<row>
<entry>value:&#x201c;&#x201d; },</entry>
</row>
<row>
<entry>{ name:&#x201c;FirstName&#x201d;, childIdx:&#x201c;1&#x201d;, children:0, parentName:&#x201c;Customer&#x201d;,</entry>
</row>
<row>
<entry>occurNum:&#x201c;1&#x201d;, value:&#x201c;xyz&#x201d; },</entry>
</row>
<row>
<entry>{ name:&#x201c;LastName&#x201d;, childIdx:&#x201c;2&#x201d;, children:0, parentName:&#x201c;Customer&#x201d;,</entry>
</row>
<row>
<entry>occurNum:&#x201c;1&#x201d;, value:&#x201c;abc&#x201d; },</entry>
</row>
<row>
<entry>]);</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0055" num="0054">Each node (<b>510</b>, <b>520</b>, <b>520</b>A, and <b>520</b>B) of the tree structure <b>500</b>A is recursively visited to enter information related to the &#x2018;root node&#x2019; <b>510</b> and the descendants nodes (customer node <b>520</b>, first name node <b>520</b>A, and last name node <b>520</b>B) into the Array Representation #1.</p>
<p id="p-0056" num="0055">In the above shown array representation #1, &#x201c;Name&#x201d; indicates the name of the node. For example, the name of the node may be &#x2018;root,&#x2019; &#x2018;customer,&#x2019; &#x2018;first name,&#x2019; and &#x2018;last name.&#x2019;</p>
<p id="p-0057" num="0056">&#x201c;ChileIdx&#x201d; represents that the node is n<sup>th </sup>child of its parent nodes. For example, the ChildIdx of the &#x2018;root&#x2019; node <b>510</b> is &#x2018;0&#x2019; as the &#x2018;root&#x2019; node <b>510</b> is not a child of any node, i.e., there is no parent node of the &#x2018;root&#x2019; node <b>510</b>. The ChildIdx of the &#x2018;customer&#x2019; node <b>520</b> is &#x2018;1&#x2019; as the customer is 1<sup>st </sup>child of its parent node (root node <b>510</b>). Similarly, the ChildIdx of the &#x2018;first name&#x2019; node <b>520</b>A is &#x2018;1&#x2019; and the ChildIdx of the &#x2018;last name&#x2019; node <b>520</b>B is &#x2018;2&#x2019; as the &#x2018;first name&#x2019; node and the &#x2018;last name&#x2019; node are 1<sup>st </sup>and 2<sup>nd </sup>child of their parent node (customer node <b>520</b>).</p>
<p id="p-0058" num="0057">&#x201c;Children&#x201d; indicates number of child nodes associated with the node. For example, the children of root node <b>510</b> is &#x2018;1&#x2019; as the &#x2018;root&#x2019; node has one child (customer node <b>520</b>), the children of customer node <b>520</b> is &#x2018;2&#x2019; as the &#x2018;customer&#x2019; node has two children (first name node <b>520</b>A and last name node <b>520</b>B), and the children of &#x2018;first name&#x2019; node <b>520</b>A and the &#x2018;last name&#x2019; node <b>520</b>B is &#x2018;0&#x2019; as they both do not have any children.</p>
<p id="p-0059" num="0058">&#x201c;Parent Name&#x201d; represents the name of the parent node. For example, the parent name of the &#x2018;root&#x2019; node <b>510</b> is empty as the &#x2018;root&#x2019; node has no parent. The parent name of the &#x2018;customer&#x2019; node <b>520</b> is &#x2018;root.&#x2019; Similarly, the parent name of the &#x2018;first name&#x2019; node <b>520</b>A and the &#x2018;last name&#x2019; node <b>520</b>B is &#x2018;customer.&#x2019;</p>
<p id="p-0060" num="0059">&#x201c;Value&#x201d; indicates the value of the node. For example, the value of the &#x2018;root&#x2019; node <b>510</b> is empty as the root node has no value. Similarly, the value of the &#x2018;first name&#x2019; node <b>520</b>A is &#x2018;xyz&#x2019; and the value of the &#x2018;last name&#x2019; node <b>520</b>B is &#x2018;abc.&#x2019;</p>
<p id="p-0061" num="0060">&#x201c;OccurNum&#x201d; represents the number of occurrence of the node. It represents that the node is occurred n times (n being the natural number). For example, if a record includes three addresses for the customer (i.e., the nodes representing the three addresses would have the same name (address) and share the same parent &#x2018;customer&#x2019;) then each address node would be assigned an OccurNum 1, 2, and 3, respectively. Typically, the OccurNum is incremented each time the node with a same name and a same parent node is found.</p>
<p id="p-0062" num="0061">&#x201c;Comments&#x201d; shows comments related to the node.</p>
<p id="p-0063" num="0062">In one embodiment, the descendant node, e.g., the customer node <b>520</b> representing the record <b>310</b>(<b>1</b>) also includes the additional information or attributes related to the record as described in paragraphs 0056-0062.</p>
<p id="p-0064" num="0063">&#x201c;Hidden&#x201d; indicates that the value of the node or field is hidden. The hidden field may be illustrated as blank field. Typically, the value of the hidden field is displayed to only one or more authorized users and is not displayed to other (unauthorized) users. If the field is &#x2018;hidden&#x2019; then the value of the field is not displayed.</p>
<p id="p-0065" num="0064">&#x201c;Masked&#x201d; indicates that the value of the node or field is masked (obscured). The value of the masked field is not visible instead some symbols (e.g., *****) may be displayed to represent that it has masked value. For example, the sensitive data such as the value of a credit card number or the user's password may be masked. A number of characters in the symbol illustrating the sensitive data should match the number of characters in the sensitive data. For example, if the sensitive data includes four characters &#x2018;abcd,&#x2019; then the symbol illustrating the sensitive data &#x2018;abcd&#x2019; should also include four &#x2018;*&#x2019; character, i.e., the symbol should be &#x2018;****.&#x2019;</p>
<p id="p-0066" num="0065">&#x201c;RecordId&#x201d; is an unique identifier of the record. The RecordId uniquely identify the record in a match group. The match group comprises similar records that fulfill certain match criteria. Alternately, the match group comprises the records that are filtered based upon certain match criteria. For example, the match group comprises the records that are filtered based upon the value of the one or more fields. The match criteria may be for filtering all records having &#x2018;first name&#x2019; equals to &#x2018;x.&#x2019; The match criteria may be specified by the user. The filtered records form the match group.</p>
<p id="p-0067" num="0066">&#x201c;GroupNum&#x201d; represents the group number of the match group to which the record belongs.</p>
<p id="p-0068" num="0067">&#x201c;Duplicate&#x201d; represents if the record is &#x2018;duplicate&#x2019; relative to the master record in the match group. The record is considered &#x2018;duplicate&#x2019; if the record matches the master record to certain extent based upon the match criteria. The duplicate field may be set to &#x2018;true&#x2019; or &#x2018;false.&#x2019; If the duplicate is &#x2018;true,&#x2019; the record is considered duplicate relative to the master record in the group. If the duplicate is &#x2018;false,&#x2019; the record is considered as non-duplicate. The user may set the record as non-duplicate if the user considers that the record does not match the master record to the certain extent based upon the match criteria.</p>
<p id="p-0069" num="0068">&#x201c;Match_score&#x201d; indicates how much the record matches to the master record selected by the user. For example, it may be 60%, 90%, etc.</p>
<p id="p-0070" num="0069">&#x201c;Suspect&#x201d; indicates a Boolean value (YES or NO) that represents if the record is a suspect record or not. The suspect record is a record that has a match score (e.g., match_score) within a predefined range. The suspect record is required to be reviewed by the user.</p>
<p id="p-0071" num="0070">Similarly, the array generating algorithm <b>400</b> traverse the tree structure <b>500</b>B (<figref idref="DRAWINGS">FIG. 5</figref>) of the non-reference record <b>310</b>(<b>2</b>) to retrieve information related to each node of the tree structure <b>500</b>B to generate the below array representation #2 for the record <b>310</b>(<b>2</b>):</p>
<p id="p-0072" num="0071">
<tables id="TABLE-US-00010" num="00010">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>public var diffArr1:ArrayCollection = new ArrayCollection([</entry>
</row>
<row>
<entry>{ name:&#x201c;root&#x201d;, childIdx:&#x201c;0&#x201d; children:1, parentName:&#x201c;&#x201d;, occurNum:&#x201c;1&#x201d;,</entry>
</row>
<row>
<entry>parentName:&#x201c;&#x201d;, hidden:&#x201c;&#x201d;, masked:&#x201c;&#x201d;, value:&#x201c;&#x201d; },</entry>
</row>
<row>
<entry>{ name:&#x201c;Customer&#x201d;, childIdx:&#x201c;1&#x201d;, children:3, comment:&#x201c;&#x201d;,</entry>
</row>
<row>
<entry>duplicate: &#x201c;true&#x201d;, groupNum:&#x201c;1&#x201d;, hidden:&#x201c;&#x201d;, masked:&#x201c;&#x201d;, match_score:&#x201c;&#x201d;,</entry>
</row>
<row>
<entry>parentName: &#x201c;root&#x201d;, occurNum:&#x201c;1&#x201d;, recordId:&#x201c;1&#x201d;, suspect:&#x201c;false&#x201d;,</entry>
</row>
<row>
<entry>value:&#x201c;&#x201d; },</entry>
</row>
<row>
<entry>{ name:&#x201c;FirstName&#x201d;, childIdx:&#x201c;1&#x201d;, children:0, parentName:&#x201c;Customer&#x201d;,</entry>
</row>
<row>
<entry>occurNum:&#x201c;1&#x201d;, value:&#x201c;xyz1&#x201d; },</entry>
</row>
<row>
<entry>{ name:&#x201c;MiddleName&#x201d;, childIdx:&#x201c;2&#x201d;, children:0, parentName:&#x201c;Customer&#x201d;,</entry>
</row>
<row>
<entry>occurNum:&#x201c;1&#x201d;, value:&#x201c;pqr1&#x201d; },</entry>
</row>
<row>
<entry>{ name:&#x201c;LastName&#x201d;, childIdx:&#x201c;3&#x201d;, children:0, parentName:&#x201c;Customer&#x201d;,</entry>
</row>
<row>
<entry>occurNum:&#x201c;1&#x201d;, value:&#x201c;abc1&#x201d; },</entry>
</row>
<row>
<entry>]);</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0073" num="0072">In the above array representation, the &#x201c;root&#x201d; corresponds to the root node <b>510</b>, &#x201c;customer&#x201d; corresponds to a customer node <b>530</b>, &#x201c;FirstName&#x201d; corresponds to a first name node <b>530</b>A, &#x201c;MiddleName&#x201d; corresponds to a middle name node <b>530</b>B, and &#x201c;LastName&#x201d; corresponds to a last name node <b>530</b>C.</p>
<p id="p-0074" num="0073">Once the array representations of the records <b>310</b>(<b>1</b>-<b>2</b>) are generated, the Array Representation #2 of the non-reference record <b>310</b>(<b>2</b>) is merged into the Array Representation #1 of the reference record <b>310</b>(<b>1</b>) to generate a merged array representation of the reference record <b>310</b>(<b>1</b>), as presented below:</p>
<p id="p-0075" num="0074">
<tables id="TABLE-US-00011" num="00011">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>public var diffArr1:ArrayCollection = new ArrayCollection([</entry>
</row>
<row>
<entry>{ name:&#x201c;root&#x201d;, childIdx:&#x201c;0&#x201d; children:1, parentName:&#x201c;&#x201d;, occurNum:&#x201c;1&#x201d;,</entry>
</row>
<row>
<entry>parentName:&#x201c;&#x201d;, hidden:&#x201c;&#x201d;, masked:&#x201c;&#x201d;, value:&#x201c;&#x201d; },</entry>
</row>
<row>
<entry>{ name:&#x201c;Customer&#x201d;, childIdx:&#x201c;1&#x201d;, <u style="single">children:3</u>, comment:&#x201c;&#x201d;,</entry>
</row>
<row>
<entry>duplicate:&#x201c;true&#x201d;, groupNum:&#x201c;1&#x201d;, hidden:&#x201c;&#x201d;, masked:&#x201c;&#x201d;, match_score:&#x201c;&#x201d;,</entry>
</row>
<row>
<entry>parentName:&#x201c;root&#x201d;, occurNum:&#x201c;1&#x201d;, recordId:&#x201c;1&#x201d;, suspect:&#x201c;false&#x201d;,</entry>
</row>
<row>
<entry>value:&#x201c;&#x201d; },</entry>
</row>
<row>
<entry>{ name:&#x201c;FirstName&#x201d;, childIdx:&#x201c;1&#x201d;, children:0, parentName:&#x201c;Customer&#x201d;,</entry>
</row>
<row>
<entry>occurNum:&#x201c;1&#x201d;, value:&#x201c;xyz&#x201d; },</entry>
</row>
<row>
<entry>{ name:&#x201c;MiddleName&#x201d;, childIdx:&#x201c;2&#x201d;, children:0, parentName:&#x201c;Customer&#x201d;,</entry>
</row>
<row>
<entry>occurNum:&#x201c;1&#x201d;, value:&#x201c;_&#x201d; },</entry>
</row>
<row>
<entry>{ name:&#x201c;LastName&#x201d;, <u style="single">childIdx:&#x201c;3&#x201d;,</u> children:0, parentName:&#x201c;Customer&#x201d;,</entry>
</row>
<row>
<entry>occurNum:&#x201c;1&#x201d;, value:&#x201c;abc&#x201d; },</entry>
</row>
<row>
<entry>]);</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0076" num="0075">The merged array representation of the reference record <b>310</b>(<b>1</b>) includes the field &#x201c;middle name&#x201d; that is missing in the array representation of the reference record <b>310</b>(<b>1</b>). In one embodiment, while merging, the fields of the Array Representation #1 are compared to the fields of the Array Representation #2 to determine the fields missing in the Array Representation #1. For example, it may be determined that the Array Representation #2 has the field &#x201c;middle name&#x201d; that is missing in the Array Representation #1. The missing field is added as the blank field in the Array Representation #1 to generate the merged array representation of the reference record <b>340</b>(<b>1</b>). The value of the blank field is blank. For example, as shown in the merged array representation, the value of the included field &#x201c;middle name&#x201d; is blank (underlined in above merged array representation).</p>
<p id="p-0077" num="0076">Based upon the addition of the missing field (e.g., Middle name), the ChildIdx and the Children information in the merged array representation are updated. For example, as shown in the merged array representation of the reference record <b>310</b>(<b>1</b>), the ChildIdx and the Children information are updated. The updated ChildIdx and the Children information are underlined in the above merged array representation for reference.</p>
<p id="p-0078" num="0077">In one embodiment, the merge algorithm <b>400</b> may execute the following merge operations to merge the array representation of one record into another, e.g., to merge the Array Representation #2 (secondCardArray) into the Array Representation #1 (firstCardArray):</p>
<p id="h-0005" num="0000">Merge Operation: MergeCard2IntoCard1 (firstCardArray, secondCardArray).</p>
<p id="p-0079" num="0078">When the operation MergeCard2IntoCard1 (firstCardArray, secondCardArray) is executed, the secondCardArray (Array Representation #2) is merged into firstCardArray (Array Representation #1) to generate the merged array representation (MergedfirstCardArray) of the reference record <b>310</b>(<b>1</b>).</p>
<p id="p-0080" num="0079">The MergedfirstCardArray is merged into the secondCardArray (Array Representation #2) using the below merge operation to generate the merged array representation of the non-reference record <b>310</b>(<b>2</b>).</p>
<p id="h-0006" num="0000">Merge Operation: MergeCard2IntoCard1 (secondCardArray, MergedfirstCardArray).</p>
<p id="p-0081" num="0080">Similarly, if there are three records (cards) the merge algorithm <b>400</b> may execute the merge operations (i) MergeCard2IntoCard1(firstCardArray, secondCardArray), (ii) MergeCard2IntoCard1(firstCardArray, thirdCardArray), (iii) MergeCard2IntoCard1(secondCardArray, MergedfirstCardArray), and (iv) MergeCard2IntoCard1(thirdCardArray, MergedfirstCardArray). The firstCardArray represents the array representation of the reference record, the secondCardArray represents the array representation of the non-reference record 1, the thirdCardArray represents the array representation of the non-reference record 2, and the MergedfirstCradArray represents the merged array representation of the reference record.</p>
<p id="p-0082" num="0081">The array representation of the non-reference records (secondCardArray and thirdCardArray) are merged into the array representation of the reference record (firstCardArray) using the operation (i) and (ii). The merging results in generation of the merged array representation of the reference record (MergedfirstCardArray). The MergedfirstCardArray is then merged into the array representation of the non-reference records (secondCardArray and thirdCardArray), using the operations (iii) and (iv), to generate the respective merged array representation of the non-reference records. The merged array representation of the records (MergedfirstCardArray, MergedsecondCardArray, and MergedthirdCardArray) are aligned relative to each other.</p>
<p id="p-0083" num="0082">In one embodiment, based upon the merged array representations of the records <b>310</b>(<b>1</b>-N), the merged records <b>340</b>(<b>1</b>-N) are generated. The merged records <b>340</b>(<b>1</b>-N) may be in the XML format. In another embodiment, based upon the merged array representation of the records <b>310</b>(<b>1</b>-N), the merged records <b>340</b>(<b>1</b>-N) are generated in a suitable format that can be displayed on the UI <b>350</b>.</p>
<p id="p-0084" num="0083">The merged records <b>340</b>(<b>1</b>-N) are displayed on the UI <b>350</b>. The merged records <b>340</b>(<b>1</b>-N) are displayed in the card view <b>360</b>. In the card view <b>360</b>, the merged records <b>340</b>(<b>1</b>-N) are positioned side-by-side or adjacent to each other in a vertical arrangement. In one embodiment, the merged reference record <b>340</b>(<b>1</b>) is displayed at an extreme left in the card view <b>360</b>. In one embodiment, the merged master record may be displayed at the extreme left in the card view <b>360</b>. For example, if the user selects the record <b>310</b>(<b>1</b>) as the master record then the merged master record <b>340</b>(<b>1</b>) may be displayed at the extreme left in the card view <b>360</b>. The master record <b>310</b>(<b>1</b>) is the record against which the other records <b>310</b>(<b>2</b>-N) are required to be compared. In other embodiments, the left side is replaced with the right side.</p>
<p id="p-0085" num="0084">While displaying the merged records <b>340</b>(<b>1</b>-N) on the UI <b>350</b>, the blank fields included due to merging are highlighted with a predefined color. If a plurality of consecutive blank fields are added as a result of merging then the consecutive blank fields are highlighted with a different shades of the predefined color. In one embodiment, the consecutive blank fields are highlighted such that alternate blank fields have a same shade of the predefined color.</p>
<p id="p-0086" num="0085">The below paragraphs describe aligning two exemplary records and displaying the aligned records on the user interface <b>350</b>. The exemplary records may be records <b>600</b>A and <b>600</b>B (illustrated in <figref idref="DRAWINGS">FIG. 6</figref>) that are required to be aligned. The record <b>600</b>A being the reference record and the record <b>600</b>B being the non-reference record. The non-reference record <b>600</b>B is merged into the reference record <b>600</b>A to generate the merged reference record <b>700</b> (<figref idref="DRAWINGS">FIG. 7</figref>). The merged reference record <b>700</b> is merged into the non-reference record <b>600</b>B to generate the merged non-reference record <b>800</b> (<figref idref="DRAWINGS">FIG. 8</figref>). The merged records <b>700</b> and <b>800</b> are aligned relative to each other.</p>
<p id="p-0087" num="0086">As shown in <figref idref="DRAWINGS">FIG. 7</figref>, the merged reference record <b>700</b> includes fields (<b>620</b>B, <b>620</b>H<b>1</b>, <b>620</b>H<b>11</b>, <b>620</b>H<b>12</b>, <b>620</b>H<b>2</b>, and <b>620</b>H<b>21</b>) that are missing in the reference record <b>600</b>A. The missing fields (<b>620</b>B, <b>620</b>H<b>1</b>, <b>620</b>H<b>11</b>, <b>620</b>H<b>12</b>, <b>620</b>H<b>2</b>, and <b>620</b>H<b>21</b>) are included from the non-reference record <b>600</b>B as blank fields. The blank fields (<b>620</b>B, <b>620</b>H<b>1</b>, <b>620</b>H<b>11</b>, <b>620</b>H<b>12</b>, <b>620</b>H<b>2</b>, and <b>620</b>H<b>21</b>) are highlighted with a predetermined color while rendering the record <b>700</b> on the UI <b>350</b>. Further, the plurality of consecutive blank fields <b>620</b>H<b>1</b>, <b>620</b>H<b>11</b>, <b>620</b>H<b>12</b>, <b>620</b>H<b>2</b>, and <b>620</b>H<b>21</b> (added as a result of merging) are highlighted with different shades of the predefined color while rendering the record <b>700</b> on the UI <b>350</b>. The consecutive blank fields <b>620</b>H<b>1</b>, <b>620</b>H<b>11</b>, <b>620</b>H<b>12</b>, <b>620</b>H<b>2</b>, and <b>620</b>H<b>21</b> are highlighted such that the alternate blank fields (<b>620</b>H<b>1</b>, <b>620</b>H<b>12</b>, and <b>620</b>H<b>21</b>) or (<b>620</b>H<b>11</b> and <b>620</b>H<b>2</b>) have the same shade of the predefined color.</p>
<p id="p-0088" num="0087">As illustrated in <figref idref="DRAWINGS">FIG. 8</figref>, the blank fields included due to merging (e.g., the fields <b>620</b>H<b>1</b>, <b>620</b>H<b>11</b>, <b>620</b>H<b>12</b>, <b>620</b>H<b>2</b>, and <b>620</b>H<b>21</b>) in the record <b>700</b> are highlighted (illustrated as hashed fields and dotted fields). As the fields <b>620</b>H<b>1</b>, <b>620</b>H<b>11</b>, <b>620</b>H<b>12</b>, <b>620</b>H<b>2</b>, and <b>620</b>H<b>21</b> are consecutive fields, the fields are highlighted with different shades of the predefined color such that the alternate blank fields (<b>620</b>H<b>1</b>, <b>620</b>H<b>12</b>, and <b>620</b><i>h</i><b>21</b>) have the same shade of the predefined color (illustrated as dotted fields). Further, the alternate fields (<b>620</b>H<b>11</b> and <b>620</b>H<b>2</b>) have the same shade of the predefined color (illustrated as hashed fields).</p>
<p id="p-0089" num="0088">Similarly, the fields included due to merging (e.g., the fields <b>610</b>T, <b>610</b>F, and <b>610</b>E) in the record <b>800</b> are highlighted (illustrated as hashed fields and dotted fields). In one embodiment, the included blank fields <b>610</b>T, <b>610</b>F, and <b>610</b>E are highlighted with the predefined color. As the fields <b>610</b>T, <b>610</b>F, and <b>610</b>E are consecutive fields, the fields may be highlighted with different shades of the predefined color such that the alternate blank fields (<b>610</b>T and <b>610</b>E) have same shade of the predefined color (illustrated as hashed fields in <figref idref="DRAWINGS">FIG. 8</figref>).</p>
<p id="p-0090" num="0089">In one embodiment, the blank fields <b>620</b>H<b>1</b> and <b>620</b>H<b>2</b> may be included at new level of hierarchy. For example, the fields &#x2018;<b>620</b>H<b>1</b>&#x2019; and &#x2018;<b>620</b>H<b>2</b>&#x2019; added as blank fields due to merging creates new level of hierarchy in the record <b>700</b>. As illustrated in <figref idref="DRAWINGS">FIG. 8</figref>, the fields <b>620</b>H<b>12</b> and <b>620</b>H<b>2</b> are included at the new or additional hierarchical level in the merged record <b>700</b>. The additional level of hierarchy is displayed on the UI <b>350</b> with an empty branch icon <b>710</b>(A-B). The empty branch icons <b>710</b>A and <b>710</b>B are expandable and collapsible. The empty branch icon <b>710</b>(A-B) is expanded or collapsed to display or hide one or more fields included within the additional level of hierarchy. For example, the empty branch icon <b>710</b>A may be collapsed to hide the fields <b>620</b>H<b>11</b> and <b>620</b>H<b>12</b> included within the additional level of hierarchy <b>620</b>H<b>1</b>.</p>
<p id="p-0091" num="0090">In one embodiment, the UI <b>350</b> includes several enhancements to enable the user to improve the reviewing and comparing task. For example, the UI <b>350</b> includes a title column <b>810</b> (<figref idref="DRAWINGS">FIG. 8</figref>) prefixed to the merged reference record <b>700</b> positioned at the extreme left. In another embodiment, the horizontal positions are reversed and the position is on the right. As illustrated, the title column <b>810</b> includes names (first name, middle name, last name, address, street, house number, etc) corresponding to each field of the displayed records (<b>700</b> and <b>800</b>). For example, the &#x201c;first name&#x201d; is displayed corresponding to the fields <b>610</b>A and <b>620</b>A of the displayed records <b>700</b> and <b>800</b>.</p>
<p id="p-0092" num="0091">In one embodiment, the UI <b>350</b> includes status columns corresponding to each displayed non-master records <b>340</b>(<b>2</b>-N). The status columns may be prefixed to the respective records <b>340</b>(<b>2</b>-N). For example, considering the reference record <b>700</b> as the master record, the UI <b>350</b> includes the status column <b>910</b> (<figref idref="DRAWINGS">FIG. 9</figref>) prefixed to the non-master record <b>800</b>. The status column <b>910</b> includes status corresponding to each field of the non-master record <b>800</b>. In one embodiment, the status column <b>910</b> includes a status icon to indicate &#x2018;match&#x2019; or &#x2018;no-match&#x2019; of the field value with the corresponding field value of the master record <b>700</b>. For example, the status column <b>910</b> includes the icon &#x2018;&#xb0;&#x2019; to indicate &#x2018;match&#x2019; and an icon &#x2018;&#xd7;&#x2019; to indicate &#x2018;no-match,&#x2019; as illustrated in <figref idref="DRAWINGS">FIG. 9</figref>.</p>
<p id="p-0093" num="0092">In one embodiment, the UI <b>350</b> includes a hide-and-show option (not shown). The hide-and-show option hides or shows a specified field or row corresponding to all the displayed records <b>340</b>(<b>1</b>-N). In one embodiment, if any one of the displayed record is scrolled all other records are scrolled accordingly (i.e., synchronized scrolling). For example, if the record <b>340</b>(<b>1</b>) is scrolled then all other displayed records <b>340</b>(<b>2</b>-N) are also scrolled accordingly or concurrently. Similarly, if the field of any record, e.g., record <b>340</b>(<b>1</b>), is selected then the corresponding fields of all other records, e.g., the records <b>340</b>(<b>2</b>-N), are also selected automatically (i.e., synchronized selection).</p>
<p id="p-0094" num="0093">In one embodiment, each displayed record <b>340</b>(<b>1</b>-N) includes a drag-and-drop feature. The drag-and-drop feature enables the user to drag a field within the record. For example, the user may select the field &#x2018;<b>620</b>C&#x2019; of the record <b>800</b> and drags the selected field &#x2018;<b>620</b>C.&#x2019; The dragged field <b>620</b>C is droppable within the same record <b>800</b> and on the same level of hierarchy from where the field <b>620</b>C is dragged. For example, the field <b>620</b>C may be dropped in position of <b>620</b>B within the record <b>800</b>. In one embodiment, if the user attempts to drop the field <b>620</b>C on different level of hierarchy, e.g., on field <b>620</b>H<b>1</b>, then either an error message is displayed or there is a failure in dropping the field.</p>
<p id="p-0095" num="0094">In one embodiment, the resultant records <b>340</b>(<b>1</b>-N) rendered on the UI <b>350</b> include the &#x201c;match_score&#x201d; field denoted the match score. For example, as illustrated in <figref idref="DRAWINGS">FIG. 9</figref>, the records <b>700</b> and <b>800</b> include the match_score field <b>920</b>A and <b>920</b>B, respectively. The match_score <b>920</b>(A-B) indicates a percentage of match of the record with the master record. For example, if the user selects the record <b>700</b> as the master record then the match_score <b>920</b>B of the record <b>800</b> shows the percentage of match of the record <b>800</b> with the master record <b>700</b>. In one embodiment, if the match_score <b>920</b>B of the record <b>800</b> is above a predefined maximum value (e.g., 90%), the record <b>800</b> is approved and is not required to be manually reviewed. In one embodiment, if the match_score <b>920</b>B is below a predefined minimum value (e.g., 45%) the record <b>800</b> is discarded. In another embodiment, if the match_score <b>920</b>B is in between the predefined minimum value and the predefined maximum value (e.g., in between 45% and 90%), the record <b>800</b> is a suspected record that is required to be reviewed manually. In yet another embodiment, the match_score <b>920</b>A of the master record <b>700</b> may be empty (blank). In one embodiment, based upon the drag-and-drop operation, the match_score <b>920</b>B of the non-master record <b>800</b> is updated. In another embodiment, the match_score <b>920</b>B may be updated based upon triggering the hide and show option.</p>
<p id="p-0096" num="0095">In one embodiment, the non-master records <b>340</b>(<b>2</b>-N) includes a suspect flag. For example, the non-master record <b>800</b> includes a suspect flag <b>930</b>. The suspect flag <b>930</b> indicates if the record <b>800</b> is a suspected record. In one embodiment, the record <b>800</b> is the suspected record if its match_score <b>930</b>B is within a predefined range, e.g., more than the minimum predefined value and less than the maximum predefined value. The suspected record <b>800</b> is required to be reviewed. In another embodiment, a background of the suspected record may be highlighted with another predefined color (not illustrated) while displaying the record on the UI <b>350</b>.</p>
<p id="p-0097" num="0096">In one embodiment, if the merging is not performed successfully, the original records <b>310</b>(<b>1</b>-N) are displayed on the UI <b>350</b> in the card view. If the merging is not performed successfully, the records <b>310</b>(<b>1</b>-N) may be unaligned in the card view. In another embodiment, if the merging is not performed successfully, an error message may be displayed on the UI <b>350</b>.</p>
<p id="p-0098" num="0097">In one embodiment, the merged array representation includes some markers. A marker (e.g., a counter) may help in highlighting the fields while converting the array representation into the XML record. In another embodiment, the array representation may include the markers to indicate that the value of the field in the merged non-master record is different from the value of the corresponding field in the merged master record. If the value of the field in the merged non-master record is different from the value of the corresponding field in the merged master record, the field(s) of the merged non-master record may be highlighted with a specific predefined color while rendering the merged non-master record on the UI <b>350</b>.</p>
<p id="p-0099" num="0098"><figref idref="DRAWINGS">FIG. 10</figref> is a flowchart illustrating a method for aligning the records <b>310</b>(<b>1</b>-N) using the array representation of the records <b>310</b>(<b>1</b>-N), according to an embodiment of the invention. The array generating algorithm <b>400</b> traverse each record <b>310</b>(<b>1</b>-N) to generate the array representation of each record <b>310</b>(<b>1</b>-N) at step <b>1001</b>. The array representation of the reference record <b>310</b>(<b>1</b>) and the non-reference records <b>310</b>(<b>2</b>-N) are generated. The array representation of the one or more non-reference record <b>310</b>(<b>2</b>-N) is merged into the array representation of the reference record <b>310</b>(<b>1</b>) to generate the merged array representation of the reference record <b>310</b>(<b>1</b>) at step <b>1002</b>. In one embodiment, the array representation of each non-reference record <b>310</b>(<b>2</b>-N) is merged into the array representation of the reference record <b>310</b>(<b>1</b>) to generate the merged array representation of the reference record <b>310</b>(<b>1</b>). The merged reference record <b>340</b>(<b>1</b>) is merged into the array representation of each non-reference record to generate the merged array representation of respective non-reference records <b>310</b>(<b>2</b>-N) at step <b>1003</b>. Based upon the merged array representation of the reference record, the merged reference record <b>340</b>(<b>1</b>) is generated at step <b>1004</b>. Similarly, based upon the merged array representation of the non-reference records <b>310</b>(<b>2</b>-N), the merged non-reference records <b>340</b>(<b>2</b>-N) are generated at step <b>1005</b>. The merged records <b>340</b>(<b>1</b>-N) may be the XML formatted records. The merged records <b>340</b>(<b>1</b>-N) are aligned relative to each other. The merged record <b>340</b>(<b>1</b>-N) are displayed on the UI <b>350</b> in the card view at step <b>1006</b>.</p>
<p id="p-0100" num="0099"><figref idref="DRAWINGS">FIG. 11</figref> is a flowchart illustrating a method for displaying records <b>310</b>(<b>1</b>-N) based upon the merging operation. Once the merging operation is executed by the merge algorithm <b>330</b>, it is determined if the merging is successful at step <b>1101</b>. If the merging is unsuccessful (step <b>1101</b>: NO), the original records <b>310</b>(<b>1</b>-N) are displayed on the UI <b>350</b> in the card view at step <b>1102</b>. The original records <b>310</b>(<b>1</b>-N) may be misaligned. In one embodiment, if the merging is unsuccessful, the error message may be displayed on the UI <b>350</b>. In case the merging is successful (step <b>1101</b>: YES), the blank fields included due to merging are highlighted with the predefined color while rendering the merged record <b>340</b>(<b>1</b>-N) on the UI <b>350</b> at step <b>1103</b>. In one embodiment, if the merging is successful (step <b>1101</b>: YES) it is determined if the plurality of consecutive blank fields are included due to merging at step <b>1104</b>. In case the plurality of consecutive blank fields are included due to merging (step <b>1104</b>: YES) the consecutive blank fields are highlighted with the different shades of the predefined color such that the alternate blank fields have the same shade of the predefined color at step <b>1105</b>. The merged records <b>340</b>(<b>1</b>-N) with highlighted fields are displayed on the UI <b>350</b> in the card view <b>360</b> at step <b>1106</b>.</p>
<p id="p-0101" num="0100">The embodiments described above provide techniques to align records. Filler rows (blank fields) are included or added in place of the missing data in each record to align the records relative to each other. The records are aligned such that the like data fields of the records line up in the same row. Further, rendering the aligned records in the card view enables a convenient and efficient comparison. Consequently, the user can perform a better visual scanning Moreover, the UI enhancements, e.g., the drag-and-drop feature, the background color highlighting, the status column, the title column, the suspect flag, etc., further improve the reviewing and comparing tasks. Additionally, the technique is flexible to adapt to various record formats and to any levels of hierarchy.</p>
<p id="p-0102" num="0101">Some embodiments of the invention may include the above-described methods being written as one or more software components. These components, and the functionality associated with each, may be used by client, server, distributed, or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as, functional, declarative, procedural, object-oriented, lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively, the components maybe implemented in server and client applications. Further, these components may be linked together via various distributed programming protocols. Some example embodiments of the invention may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example, a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level (e.g., a graphical user interface). These first and second computer systems can be configured in a server-client, peer-to-peer, or some other configuration. The clients can vary in complexity from mobile and handheld devices, to thin clients and on to thick clients or even other servers.</p>
<p id="p-0103" num="0102">The above-illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term &#x201c;computer readable storage medium&#x201d; should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term &#x201c;computer readable storage medium&#x201d; should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store, encode, or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described, represented, or illustrated herein. Examples of computer readable storage media include, but are not limited to: magnetic media, such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROMs, DVDs and holographic indicator devices; magneto-optical media; and hardware devices that are specially configured to store and execute, such as application-specific integrated circuits (&#x201c;ASICs&#x201d;), programmable logic devices (&#x201c;PLDs&#x201d;) and ROM and RAM devices. Examples of computer readable instructions include machine code, such as produced by a compiler, and files containing higher-level code that are executed by a computer using an interpreter. For example, an embodiment of the invention may be implemented using Java, C++, or other object-oriented programming language and development tools. Another embodiment of the invention may be implemented in hard-wired circuitry in place of, or in combination with machine readable software instructions.</p>
<p id="p-0104" num="0103"><figref idref="DRAWINGS">FIG. 12</figref> is a block diagram of an exemplary computer system <b>1200</b>. The computer system <b>1200</b> includes a processor <b>1205</b> that executes software instructions or code stored on a computer readable storage medium <b>1255</b> to perform the above-illustrated methods of the invention. The computer system <b>1200</b> includes a media reader <b>1240</b> to read the instructions from the computer readable storage medium <b>1255</b> and store the instructions in storage <b>1210</b> or in random access memory (RAM) <b>1215</b>. The storage <b>1210</b> provides a large space for keeping static data where at least some instructions could be stored for later execution. The stored instructions may be further compiled to generate other representations of the instructions and dynamically stored in the RAM <b>1215</b>. The processor <b>1205</b> reads instructions from the RAM <b>1215</b> and performs actions as instructed. According to one embodiment of the invention, the computer system <b>1200</b> further includes an output device <b>1225</b> (e.g., a display) to provide at least some of the results of the execution as output including, but not limited to, visual information to users and an input device <b>1230</b> to provide a user or another device with means for entering data and/or otherwise interact with the computer system <b>1200</b>. Each of these output devices <b>1225</b> and input devices <b>1230</b> could be joined by one or more additional peripherals to further expand the capabilities of the computer system <b>1200</b>. A network communicator <b>1235</b> may be provided to connect the computer system <b>1200</b> to a network <b>1250</b> and in turn to other devices connected to the network <b>1250</b> including other clients, servers, data stores, and interfaces, for instance. The modules of the computer system <b>1200</b> are interconnected via a bus <b>1245</b>. Computer system <b>1200</b> includes a data source interface <b>1220</b> to access data source <b>1260</b>. The data source <b>1260</b> can be accessed via one or more abstraction layers implemented in hardware or software. For example, the data source <b>1260</b> may be accessed by network <b>1250</b>. In some embodiments the data source <b>1260</b> may be accessed via an abstraction layer, such as, a semantic layer.</p>
<p id="p-0105" num="0104">A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases, such as, relational, transactional, hierarchical, multi-dimensional (e.g., OLAP), object oriented databases, and the like. Further data sources include tabular data (e.g., spreadsheets, delimited text files), data tagged with a markup language (e.g., XML data), transactional data, unstructured data (e.g., text files, screen scrapings), hierarchical data (e.g., data in a file system, XML data), files, a plurality of reports, and any other data source accessible through an established protocol, such as, Open DataBase Connectivity (ODBC), produced by an underlying software system, e.g., an ERP system, and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams, broadcast data, and the like. These data sources can include associated data foundations, semantic layers, management systems, security systems and so on.</p>
<p id="p-0106" num="0105">In the above description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however that the invention can be practiced without one or more of the specific details or with other methods, components, techniques, etc. In other instances, well-known operations or structures are not shown or described in details to avoid obscuring aspects of the invention.</p>
<p id="p-0107" num="0106">Although the processes illustrated and described herein include series of steps, it will be appreciated that the different embodiments of the present invention are not limited by the illustrated ordering of steps, as some steps may occur in different orders, some concurrently with other steps apart from that shown and described herein. In addition, not all illustrated steps may be required to implement a methodology in accordance with the present invention. Moreover, it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.</p>
<p id="p-0108" num="0107">The above descriptions and illustrations of embodiments of the invention, including what is described in the Abstract, is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of, and examples for, the invention are described herein for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as those skilled in the relevant art will recognize. These modifications can be made to the invention in light of the above detailed description. Rather, the scope of the invention is to be determined by the following claims, which are to be interpreted in accordance with established doctrines of claim construction.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An article of manufacture including a non-transitory computer readable storage medium to tangibly store instructions, which when executed by a computer, causes the computer to:
<claim-text>identify a plurality of records;</claim-text>
<claim-text>select a reference record from the plurality of records;</claim-text>
<claim-text>merge one or more non-reference records into the reference record to generate a merged reference record, wherein the merged reference record includes one or more fields missing in the reference record and wherein the missing fields are included as blank fields in the merged reference record;</claim-text>
<claim-text>merge the merged reference record into one or more non-reference records to generate respective one or more merged non-reference records, wherein a merged non-reference record includes one or more fields missing in a corresponding non-reference record and wherein the missing fields are included as the blank fields in the merged non-reference record in positions corresponding to the positions of the fields in the merged reference record;</claim-text>
<claim-text>display the merged reference record and the merged non-reference record on a user interface in a card view, wherein the merged reference record and the merged non-reference record are aligned relative to each other;</claim-text>
<claim-text>identify a master record, wherein the master record is a record selected by a user;</claim-text>
<claim-text>identify a match score for each merged non-master record, wherein the match score of a merged non-master record indicates a percentage of match of the merged non-master record with a merged master record;</claim-text>
<claim-text>identify a suspect flag for each merged non-master record indicating whether the merged non-master record is a suspected record that is required to be reviewed, wherein the merged non-master record is the suspected record when the match score of the merged non-master record is within a predefined range; and</claim-text>
<claim-text>display the merged non-master records along with their respective match score and the suspect flag on the user interface.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The article of manufacture of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising instructions which when executed cause the computer to:
<claim-text>select the reference record based upon a predefined rule;</claim-text>
<claim-text>select the reference record based upon a user's input;</claim-text>
<claim-text>randomly select a record as the reference record; and</claim-text>
<claim-text>select a master record as the reference record, wherein the master record is a record selected by the user from the plurality of records.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The article of manufacture of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein in the card view the merged reference record and the merged non-reference records are displayed side by side and wherein the merged reference record is displayed on a left side in the card view.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The article of manufacture of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising instructions which when executed cause the computer to perform at least one of the following while displaying the merged records on the user interface:
<claim-text>highlight the one or more blank fields included in the merged reference record and the merged non-reference record with a predefined color; and</claim-text>
<claim-text>when the plurality of consecutive blank fields are included due to merging, highlight the consecutive blank fields with a different shade of the predefined color such that the alternate blank fields have the same shade of the predefined color.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The article of manufacture of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising instructions which when executed cause the computer to:
<claim-text>highlight a background of the suspected record with a predefined color while displaying the suspected record on the user interface; and</claim-text>
<claim-text>highlight the field of the merged non-master record with another predefined color when the value of the field of the merged non-master record is different from the value of the corresponding field in the merged master record while displaying the merged non-master record on the user interface.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The article of manufacture of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein a blank field is included at a new level of hierarchy and wherein the new level of hierarchy is displayed with an empty branch icon which is expandable and collapsible to expand and collapse one or more blank fields included within the empty branch icon.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The article of manufacture of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the user interface includes at least one of the following:
<claim-text>a title column prefixed to the record placed on a left side in the card view, wherein the title column includes name corresponding to each field of the displayed records such that the name of each field is displayed against the respective field; and</claim-text>
<claim-text>a status column prefixed to a displayed record, wherein the status column includes status icons indicating status of each field of the record and wherein a status icon indicates a match or no-match of a field of the record against the corresponding field of a master record selected by a user.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The article of manufacture of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein when a field in one of the displayed record is selected, a corresponding field in other displayed records are automatically selected and wherein when one of the displayed record is scrolled other displayed records are scrolled concurrently.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The article of manufacture of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising instructions which when executed cause the computer to:
<claim-text>traverse through each record to generate an array representation of each record;</claim-text>
<claim-text>wherein merging each non-reference record into the reference record comprises merging the array representation of each non-reference record into the array representation of the reference record to generate the merged array representation of the reference record; and</claim-text>
<claim-text>wherein merging the merged reference record into each non-reference record comprises merging the merged array representation of the reference record into the array representation of each non-reference record to generate the respective merged array representation of the non-reference records.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The article of manufacture of <claim-ref idref="CLM-00009">claim 9</claim-ref> further comprising instructions which when executed cause the computer to:
<claim-text>based upon the merged array representation of the reference record, generate the merged reference record; and</claim-text>
<claim-text>based upon the merged array representations of the non-reference records, generate the corresponding merged non-reference records.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The article of manufacture of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the array representation of a record is generated by:
<claim-text>identifying the record in a hierarchical topology with a root node and one or more descendants nodes of the root node; and</claim-text>
<claim-text>traversing the hierarchical topology of the record to store information associated with the root node and the one or more descendants nodes in the array representation of the record.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The article of manufacture of <claim-ref idref="CLM-00011">claim 11</claim-ref> further comprising instructions which when executed cause the computer to:
<claim-text>based upon the merging, update the information associated with the root node and the one or more descendants nodes in the array representation of the record.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A computer-implemented method for aligning a plurality of records for visual comparison, the method comprising:
<claim-text>identifying a plurality of records;</claim-text>
<claim-text>selecting a reference record from the plurality of records;</claim-text>
<claim-text>merging one or more non-reference records into the reference record to generate a merged reference record, wherein the merged reference record include one or more fields missing in the reference record and wherein the missing fields are included as blank fields;</claim-text>
<claim-text>merging the merged reference record into one or more non-reference records to generate respective merged non-reference record, wherein the merged non-reference record includes one or more fields missing in corresponding non-reference record and wherein the missing fields are included as the blank fields in the merged non-reference record in positions corresponding to the positions of the fields in the merged reference record;</claim-text>
<claim-text>displaying the merged reference record and the merged non-reference records on a user interface in a card view, wherein the merged reference record and the merged non-reference record are aligned relative to each other;</claim-text>
<claim-text>identifying a master record selected by a user;</claim-text>
<claim-text>displaying the merged master record on a left side in the card view;</claim-text>
<claim-text>determining whether a value of a field of a merged non-master record is different from the value of the corresponding field in the merged master record;</claim-text>
<claim-text>when the value of the field in the merged non-master record is different from the value of the corresponding field in the merged master record, highlighting the field of the merged non-master record with a specific color;</claim-text>
<claim-text>determining whether the merged non-master record is a suspected record, wherein the suspected record is a record having a match score within a predefined range; and</claim-text>
<claim-text>when the merged non-master record is the suspected record, highlighting a background of the suspected record with a predefined color while rendering the suspected record on the user interface.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref> further comprising:
<claim-text>determining whether the merging is successful;</claim-text>
<claim-text>when the merging is unsuccessful, displaying the plurality of records on the user interface in the card view; and</claim-text>
<claim-text>when the merging is successful, perform at least one of the following while displaying the merged records on the user interface:
<claim-text>highlight the one or more blank fields included in the merged reference record and the merged non-reference record with a predefined color; and</claim-text>
<claim-text>when the plurality of consecutive blank fields are included due to merging, highlight the consecutive blank fields with a different shades of the predefined color such that the alternate blank fields have the same shade of the predefined color.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref> further comprising:
<claim-text>traversing each record to generate an array representation of each record;</claim-text>
<claim-text>merging the array representation of each non-reference record into the array representation of the reference record to generate a merged array representation of the reference record;</claim-text>
<claim-text>merging the merged array representation of the reference record into the array representation of each non-reference record to generate a merged array representation of respective non-reference records;</claim-text>
<claim-text>based upon the merged array representation of the reference record, generating the merged reference record; and</claim-text>
<claim-text>based upon the merged array representation of the non-reference records, generating respective merged non-reference records.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A computer system for aligning records for visual comparison, comprising:
<claim-text>a memory to store program code; and</claim-text>
<claim-text>a processor communicatively coupled to the memory, the processor configured to execute the program code to:
<claim-text>identify a plurality of records;</claim-text>
<claim-text>select a reference record from the plurality of records;</claim-text>
<claim-text>traverse through each record to generate an array representation of each record;</claim-text>
<claim-text>merge one or more non-reference records into the reference record to generate a merged reference record by merging the array representation of one or more non-reference record into the array representation of the reference record to generate a merged array representation of the reference record, wherein the merged reference record includes one or more fields missing in the reference record and wherein the missing fields are included as blank fields;</claim-text>
<claim-text>merge the merged reference record into one or more non-reference records to generate respective merged non-reference record by merging the merged array representation of the reference record into the array representation of the one or more non-reference record to generate the respective merged array representation of the non-reference records, wherein a merged non-reference record includes one or more fields missing in corresponding non-reference record and wherein the missing fields are included as the blank fields in the merged non-reference record in positions corresponding to the positions of the fields in the merged reference record;</claim-text>
<claim-text>based upon the merged array representation of the reference record, generate the merged reference record;</claim-text>
<claim-text>based upon the merged array representation of the non-reference records, generate</claim-text>
<claim-text>the respective merged non-reference records; and</claim-text>
<claim-text>display the merged reference record and the one or more merged non-reference records on a user interface in a card view, wherein the merged reference record and the merged non-reference record are aligned relative to each other.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The computer system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the processor is further configured to execute the program code to:
<claim-text>determine whether the merging is successful;</claim-text>
<claim-text>when the merging is unsuccessful, display the plurality of records on the user interface in the card view; and</claim-text>
<claim-text>when the merging is successful, perform at least one of the following while displaying the merged records on the user interface:
<claim-text>highlight the one or more included blank fields with a predefined color;</claim-text>
<claim-text>determine whether a plurality of consecutive blank fields are included as a result of merging; and</claim-text>
<claim-text>when the plurality of consecutive blank fields are included, highlighting the consecutive blank fields with a different shades of the predefined color such that the alternate blank fields have the same shade of the predefined color.</claim-text>
</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
