<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625360-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625360</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13165457</doc-number>
<date>20110621</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2010-140406</doc-number>
<date>20100621</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>268</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>11</class>
<subclass>C</subclass>
<main-group>7</main-group>
<subgroup>10</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>36518904</main-classification>
<further-classification>36518907</further-classification>
</classification-national>
<invention-title id="d2e71">Semiconductor storage device operative to search for data</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6141261</doc-number>
<kind>A</kind>
<name>Patti</name>
<date>20001000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>36518907</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>JP</country>
<doc-number>2000-048578</doc-number>
<date>20000200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00003">
<othercit>Rice, &#x201c;Row-Accessed Content Addressable Memory,&#x201d; Apr. 1995, IBM Technical Disclosure Bulletin, vol. 28, No. 4. pp. 285-288.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00004">
<othercit>Wakerly, &#x201c;Digital Design Principles and Practices,&#x201d; 2nd Edition. 1994, Prentice Hall. 22 pages, excerpts from Chapter 5 (priority encoders) and Chapter 9 (counters).</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
</us-references-cited>
<number-of-claims>2</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>11</number-of-drawing-sheets>
<number-of-figures>31</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110310648</doc-number>
<kind>A1</kind>
<date>20111222</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Iwamoto</last-name>
<first-name>Hisashi</first-name>
<address>
<city>Kanagawa</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Yano</last-name>
<first-name>Yuji</first-name>
<address>
<city>Kanagawa</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Yamamoto</last-name>
<first-name>Koji</first-name>
<address>
<city>Itami</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Iwamoto</last-name>
<first-name>Hisashi</first-name>
<address>
<city>Kanagawa</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Yano</last-name>
<first-name>Yuji</first-name>
<address>
<city>Kanagawa</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Yamamoto</last-name>
<first-name>Koji</first-name>
<address>
<city>Itami</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>McDermott Will &#x26; Emery LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Renesas Electronics Corporation</orgname>
<role>03</role>
<address>
<city>Kanagawa</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Sofocleous</last-name>
<first-name>Alexander</first-name>
<department>2824</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">To provide a semiconductor storage device capable of performing a search of the next data while performing a search of certain data. A first comparator compares data output to a bit line from a memory cell with first search data by activating a word line. A second comparator compares data output to a bit line from the memory cell with second search data by activating a word line. Data output to a bit line by the activation of one word line is input to both the first comparator and second comparator.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="204.89mm" wi="184.23mm" file="US08625360-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="208.87mm" wi="183.22mm" file="US08625360-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="182.20mm" wi="134.79mm" orientation="landscape" file="US08625360-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="170.69mm" wi="183.56mm" file="US08625360-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="259.67mm" wi="186.18mm" file="US08625360-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="217.17mm" wi="154.52mm" file="US08625360-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="231.99mm" wi="195.41mm" orientation="landscape" file="US08625360-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="265.60mm" wi="195.75mm" orientation="landscape" file="US08625360-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="249.77mm" wi="186.52mm" orientation="landscape" file="US08625360-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="261.28mm" wi="188.47mm" orientation="landscape" file="US08625360-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="227.67mm" wi="162.73mm" orientation="landscape" file="US08625360-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="144.95mm" wi="174.33mm" file="US08625360-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">The disclosure of Japanese Patent Application No. 2010-140406 filed on Jun. 21, 2010 including the specification, drawings and abstract is incorporated herein by reference in its entirety.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">The present invention relates to a semiconductor storage device and, more particularly, to a semiconductor storage device having a search function.</p>
<p id="p-0004" num="0003">Conventionally, a semiconductor storage device having a search function is known. For example, in the semiconductor storage device described in Patent Document 1 (Japanese Patent Laid-Open No. 2000-48578), when a data search is performed, the search key data input from CPU etc. is held in the search key data holding register 5 and in the data coincidence detection unit 6, the search key data held in the search key data holding register 5 and data stored in the associative memory 1 are collated and all coincident addresses are detected. Next, in the priority encoder 7, an address with the highest priority is selected from among all the addresses detected in the data coincidence detection unit 6 and output to the address selector 3 and the address encoder 8 (see paragraphs [0026], [0027]).</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0005" num="0004">However, with the device described in Patent Document 1, when an instruction to search the next data is issued while a search of certain data is being performed, a search of the next data cannot be performed until the search being performed is completed.</p>
<p id="p-0006" num="0005">Therefore, the present invention has been made in view of the above circumstances and provides a semiconductor storage device capable of performing a search of the next data while a search of certain data is being performed.</p>
<p id="p-0007" num="0006">A semiconductor storage device in an embodiment of the present invention comprises a memory cell array including a plurality of memory cells arranged in a matrix, a first comparator comparing data output to a bit line from the memory cell with first search data by activating a word line, and a second comparator comparing data output to a bit line from the memory cell with second search data by activating the word line. The data output to the bit line by the activation of one word line is input to both the first comparator and second comparator at the same time.</p>
<p id="p-0008" num="0007">According to the semiconductor storage device in the embodiment of the present invention, it is possible to perform a search of the next data while a data search is being performed.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram showing a configuration of a semiconductor device in a first embodiment;</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 2</figref> is a diagram showing a configuration of a memory cell array in the first embodiment;</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 3(</figref><i>a</i>) is a diagram showing an example of search data stored in a first search data register in <figref idref="DRAWINGS">FIG. 1</figref> and <figref idref="DRAWINGS">FIG. 3(</figref><i>b</i>) is a diagram showing an example of search data stored in a second search data register in <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram showing a configuration of a first comparator in <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 5</figref> is a diagram showing a configuration of a second comparator in <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 6</figref> is a diagram showing a first priority encoder in <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 7</figref> is a diagram showing a second priority encoder in <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 8</figref> is a timing chart showing an operation of the semiconductor device in the first embodiment;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 9</figref> is a diagram for explaining data stored in a memory cell array and its address in a second embodiment;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 10</figref> is a diagram for explaining data stored in the memory cell array and its address in the second embodiment;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 11</figref> is a diagram showing a configuration of a semiconductor device in the second embodiment;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 12</figref> is a diagram showing a configuration of a multibit logical product circuit in <figref idref="DRAWINGS">FIG. 11</figref>; and</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 13</figref> is a diagram showing a configuration of a semiconductor device in a third embodiment.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0022" num="0021">Hereinafter, embodiments of the present invention are explained with reference to the drawings.</p>
<heading id="h-0006" level="1">First Embodiment</heading>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram showing a configuration of a semiconductor device in a first embodiment.</p>
<p id="p-0024" num="0023">Referring to <figref idref="DRAWINGS">FIG. 1</figref>, a semiconductor device <b>1</b> includes a semiconductor storage device <b>2</b> and a CPU <b>15</b>. The semiconductor storage device <b>2</b> comprises a memory cell array <b>3</b>, a row decoder <b>4</b>, a sense amplifier group <b>5</b>, a first search data register <b>6</b>, a second search data register <b>13</b>, a search control unit <b>7</b>, an address generator <b>8</b>, a first comparator <b>9</b>, a second comparator <b>10</b>, a first priority encoder <b>11</b>, and a second priority encoder <b>12</b>.</p>
<p id="p-0025" num="0024">The CPU <b>15</b> gives the semiconductor storage device <b>2</b> a search command SC, search data SDA, SDB. Further, the CPU <b>15</b> receives addresses HADA, HADB representing rows in which the search data SDA, SDB are stored from the semiconductor storage device <b>2</b>.</p>
<p id="p-0026" num="0025">The memory cell array <b>3</b> includes a plurality of SRAM cells arranged in a matrix.</p>
<p id="p-0027" num="0026">(Memory Cell Array <b>3</b>)</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 2</figref> is a diagram showing a configuration of the memory cell array <b>3</b> in the first embodiment.</p>
<p id="p-0029" num="0028">The memory cell array <b>3</b> comprises memory cells MC (i, j) (i=1 to M, j=1 to N) arranged in a matrix in which M memory cells are arranged in a row direction and N memory cells in a column direction.</p>
<p id="p-0030" num="0029">The M memory cells MC in a j-th column (j=1 to N) (i, j) (i=1 to M) are coupled to a bit line pair BL [j], /BL [j]. The N memory cells MC in an i-th row (i=1 to M) (i, j) (j=1 to N) are coupled to a word line WL [i].</p>
<p id="p-0031" num="0030">When the word line WL [i] is activated by the row decoder <b>4</b>, the stored values in the N memory cells MC in the i-th row (i, j) (j=1 to N) are output to the bit line BL [j] and complementary values of the stored values in the N memory cells MC in the i-th row (i, j) (j=1 to N) are output to the bit line /BL [j].</p>
<p id="p-0032" num="0031">The sense amplifier group <b>5</b> comprises a sense amplifier provided for each column. When a sense amplifier control signal SA is activated to [H] level, each sense amplifier amplifies a voltage of a bit line pair in the corresponding column and outputs it to the first comparator <b>9</b> and the second comparator <b>10</b>.</p>
<p id="p-0033" num="0032">The first search data register <b>6</b> and the second search data register <b>13</b> each accumulate the N-bit search data SDA, SDB input from outside.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 3(</figref><i>a</i>) is a diagram showing an example of search data stored in the first search data register <b>6</b> in <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0035" num="0034">Referring to <figref idref="DRAWINGS">FIG. 3(</figref><i>a</i>), first N-bit search data (a1, a2, . . . , aN) stored in the first search data register <b>6</b> is output to the first comparator <b>9</b> through N first search data line pairs SLA [<b>1</b>], /SLA [<b>1</b>] to SLA [N], /SLA [N]. Here, the value at the i-th bit of the first search data is given to SLA [i] and the complementary value of the value at the i-th bit of the first search data is given to /SLA [i].</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 3(</figref><i>b</i>) is a diagram showing an example of search data stored in the second search data register <b>13</b> in <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0037" num="0036">Second N-bit search data (b1, b2, . . . , bN) stored in the second search data register <b>13</b> is output to the second comparator <b>10</b> through N second search data line pairs SLB [<b>1</b>], /SLB [<b>1</b>] to SLB [N], /SLB [N]. Here, the value at the i-th bit of the second search data is given to SLB [i] and the complementary value of the value at the i-th bit of the second search data is given to /SLB [i].</p>
<p id="p-0038" num="0037">When the search command SC is input from outside, the search control unit <b>7</b> starts a first search or second search. That is, the search control unit <b>7</b> starts the first search by activating a first search control signal SRA to [H] level according to the input of the first search command SC. The search control unit <b>7</b> outputs the first search control signal SRA to the first priority encoder <b>11</b>. After activating the first search control signal SRA, the search control unit <b>7</b> sequentially specifies the first to M-th rows one by one for the first search to the address generator <b>8</b>. Further, the search control unit <b>7</b> activates the sense amplifier control signal SA to [H] level in synchronization with the specification of each row of the first to M-th rows. After specifying the M-th row, the search control unit <b>7</b> outputs the coincident address HADB output from the first priority encoder <b>11</b> to outside.</p>
<p id="p-0039" num="0038">The search control unit <b>7</b> starts the second search by activating a second search control signal SRB to [H] level according to the input of the second search command SC. The search control unit <b>7</b> outputs the second search control signal SRB to the second priority encoder <b>12</b>. Further, when activating the second search control signal SRB, the search control unit <b>7</b> further specifies the first to (K&#x2212;1)th rows sequentially one by one for the second search after specifying the M-th row when specifying the K-th row for the first search and the second search next to the address generator <b>8</b>. Due to this, it is possible to limit a range in which data is read from the memory cell for the second search to a range necessary and sufficient and unnecessary power consumption can be avoided. The search control unit <b>7</b> activates the sense amplifier control signal SA to [H] level in synchronization with the specification of each row of the first to (K&#x2212;1)th rows. After specifying the (K&#x2212;1)th row, the search control unit <b>7</b> outputs the coincident address HADB output from the second priority encoder <b>12</b> to outside.</p>
<p id="p-0040" num="0039">The address generator <b>8</b> generates a row address RA of the row specified by the search control unit <b>7</b> and outputs it to the row decoder <b>4</b>, the first priority encoder <b>11</b>, and the second priority encoder <b>12</b>. The address generator <b>8</b> outputs a first row signal ADD<b>1</b> to the first priority encoder <b>11</b> and the second priority encoder <b>12</b>. When the row address RA generated is the row address of the first row, the address generator <b>8</b> activates the first row signal ADD<b>1</b> to &#x201c;H&#x201d; level, which is output to the first priority encoder <b>11</b> and the second priority encoder <b>12</b>.</p>
<p id="p-0041" num="0040">The row decoder <b>4</b> activates the word line WL according to the row address RA sent from the address generator <b>8</b>.</p>
<p id="p-0042" num="0041">(Comparator)</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram showing a configuration of the first comparator <b>9</b> in <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0044" num="0043">Referring to <figref idref="DRAWINGS">FIG. 4</figref>, the first comparator <b>9</b> comprises 2N anticoincidence circuits <b>20</b>A_i (<b>1</b>), <b>20</b>A_i (<b>2</b>) (i=1 to N) and one logical sum circuit <b>21</b>A.</p>
<p id="p-0045" num="0044">The anticoincidence circuit <b>20</b>A_i (<b>1</b>) outputs &#x201c;L&#x201d; level when the value of the bit line BL [i] agrees with the value of the first search data line SLA [i] and outputs &#x201c;H&#x201d; level when not.</p>
<p id="p-0046" num="0045">The anticoincidence circuit <b>20</b>A_i (<b>2</b>) outputs &#x201c;L&#x201d; level when the value of the bit line /BL [i] agrees, with the value of the first search data line /SLA [i] and outputs &#x201c;H&#x201d; level when not.</p>
<p id="p-0047" num="0046">The logical sum circuit <b>21</b>A outputs a logical sum of the outputs of the 2N anticoincidence circuits <b>20</b>A_i (<b>1</b>), <b>20</b>A_i (<b>2</b>) (i=1 to N) as a search determination signal MATA. That is, the search determination signal MATA turns to &#x201c;L&#x201d; level when the stored value in the N-bit cell memory agrees with the first search data and turns to &#x201c;H&#x201d; level when not in any of the bits.</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 5</figref> is a diagram showing a configuration of the second comparator <b>10</b> in <figref idref="DRAWINGS">FIG. 1</figref>. Referring to <figref idref="DRAWINGS">FIG. 5</figref>, the second comparator <b>10</b> comprises 2N anticoincidence circuits <b>20</b>B_i (<b>1</b>), <b>20</b>B_i (<b>2</b>) (i=1 to N) and one logical sum circuit <b>21</b>B.</p>
<p id="p-0049" num="0048">The anticoincidence circuit <b>20</b>B_i (<b>1</b>) outputs &#x201c;L&#x201d; level when the value of the bit line BL [i] agrees with the value of the second search data line SLB [i] and outputs &#x201c;H&#x201d; level when not.</p>
<p id="p-0050" num="0049">The anticoincidence circuit <b>20</b>B_i (<b>2</b>) outputs &#x201c;L&#x201d; level when the value of the bit line /BL [i] agrees with the value of the second search data line /SLB [i] and outputs &#x201c;H&#x201d; level when not.</p>
<p id="p-0051" num="0050">The logical sum circuit <b>21</b>B outputs a logical sum of the outputs of the 2N anticoincidence circuits <b>20</b>B_i (<b>1</b>), <b>20</b>B_i (<b>2</b>) (i=1 to N) as a search determination signal MATB. That is, the search determination signal MATB turns to &#x201c;L&#x201d; level when the stored value in the N-bit cell memory agrees with the second search data and turns to &#x201c;H&#x201d; level when not in any of the bits.</p>
<p id="p-0052" num="0051">(Priority Encoder)</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 6</figref> is a diagram showing a configuration of the first priority encoder <b>11</b> in <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0054" num="0053">Referring to <figref idref="DRAWINGS">FIG. 6</figref>, the first priority encoder <b>11</b> comprises a logical sum circuit <b>22</b>, a first latch circuit <b>23</b>, and a second latch circuit <b>24</b>.</p>
<p id="p-0055" num="0054">The logical sum circuit <b>22</b> receives the first search control signal SRA and the first row signal ADD<b>1</b>. The logical sum circuit <b>22</b> outputs a signal at &#x201c;H&#x201d; level and resets the first latch circuit <b>23</b> when the first search control signal SRA is activated to &#x201c;H&#x201d; level or the first row signal ADD<b>1</b> is activated to &#x201c;H&#x201d; level.</p>
<p id="p-0056" num="0055">The first latch circuit <b>23</b> receives &#x201c;H&#x201d; level at a set terminal S, the search determination signal MATA at a clock terminal C, and the output of the logical sum circuit <b>22</b> at a reset terminal R and outputs a latch signal LT<b>1</b> from an output terminal O.</p>
<p id="p-0057" num="0056">The second latch circuit <b>24</b> receives the row address RA at the set terminal S and the output of the first latch circuit <b>23</b> at the clock terminal C and outputs the coincident address HADA from the output terminal O.</p>
<p id="p-0058" num="0057">The first latch circuit <b>23</b> and the second latch circuit <b>24</b> latch the row address RA at the time of the first hit and output it as the coincident address HADA. However, the first latch circuit <b>23</b> and the second latch circuit <b>24</b> reset the latched row address when the first search control signal SRA is activated to &#x201c;H&#x201d; level or the first row signal ADD<b>1</b> is activated to &#x201c;H&#x201d; level and latch the row address RA at the time of the next hit and output it as the coincident address HADA.</p>
<p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. 7</figref> is a diagram showing a configuration of the second priority encoder <b>12</b> in <figref idref="DRAWINGS">FIG. 1</figref>. Referring to <figref idref="DRAWINGS">FIG. 7</figref>, the second priority encoder <b>12</b> comprises a logical sum circuit <b>25</b>, a first latch circuit <b>26</b>, and a second latch circuit <b>27</b>.</p>
<p id="p-0060" num="0059">The logical sum circuit <b>25</b> receives the second search control signal SRB and the first row signal ADD<b>1</b>. The logical sum circuit <b>25</b> outputs a signal at &#x201c;H&#x201d; level and resets the first latch circuit <b>26</b> when the second search control signal SRB is activated to &#x201c;H&#x201d; level or the first row signal ADD<b>1</b> is activated to &#x201c;H&#x201d; level.</p>
<p id="p-0061" num="0060">The first latch circuit <b>26</b> receives &#x201c;H&#x201d; level at the set terminal S, the search determination signal MATB at the clock terminal C, and the output of the logical sum circuit <b>25</b> at the reset terminal R and outputs a latch signal LT<b>2</b> from the output terminal O.</p>
<p id="p-0062" num="0061">The second latch circuit <b>27</b> receives the row address RA at the set terminal S and the output of the first latch circuit <b>26</b> at the clock terminal C and outputs the coincident address HADB from the output terminal O.</p>
<p id="p-0063" num="0062">The first latch circuit <b>26</b> and the second latch circuit <b>27</b> latch the row address RA at the time of the first hit and output it as the coincident address HADB. However, the first latch circuit <b>26</b> and the second latch circuit <b>27</b> reset the latched row address when the second search control signal SRB is activated to &#x201c;H&#x201d; level or the first row signal ADD<b>1</b> is activated to &#x201c;H&#x201d; level and latch the row address RA at the time of the next hit and output it as the coincident address HADB.</p>
<p id="p-0064" num="0063">By comprising such the first priority encoder <b>11</b> with the second priority encoder <b>12</b> as described above, when there is a hit in a plurality of row addresses it is possible to output a row address with high priority (row address with a small value) as an address that is hit. It is also possible to obviate the need of performing the second search and the first search from the top of the row address by providing a function to reset the row address latched when there is a hit at the time of returning to the top address within the first priority encoder <b>11</b> and the second priority encoder <b>12</b>.</p>
<p id="p-0065" num="0064">When performing the first search from the top row address without exception, the first priority encoder <b>11</b> may be one not having such a reset function.</p>
<p id="p-0066" num="0065">(Operation)</p>
<p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. 8</figref> is a timing chart showing the operation of the semiconductor device in the first embodiment.</p>
<p id="p-0068" num="0067">Referring to <figref idref="DRAWINGS">FIG. 8</figref>, the search control unit <b>7</b> starts the first search by activating the first search control signal SRA to &#x201c;H&#x201d; level according to the input of the first search command SC (shown in (<b>1</b>)). In the first search register <b>6</b>, the first N-bit search data (a1, a2, . . . aN) is stored.</p>
<p id="p-0069" num="0068">The search control unit <b>7</b> sequentially specifies the first to M-th rows one by one to the address generator <b>8</b>. The address generator <b>8</b> sequentially generates the row address specified and the row decoder <b>4</b> sequentially activates the word lines WL [<b>1</b>] to WL [M]. Further, the search control unit <b>7</b> activates the sense amplifier control signal SA to &#x201c;H&#x201d; level in synchronization with the specification of each row of the first to M-th rows.</p>
<p id="p-0070" num="0069">On the other hand, the search control unit <b>7</b> starts the second search by activating the second search control signal SRB to &#x201c;H&#x201d; level according to the input of the second search command SC (shown in (<b>2</b>)). In the second search data register <b>13</b>, the second N-bit search data (b1, b2, . . . bN) is stored.</p>
<p id="p-0071" num="0070">Further, when activating the second search control signal SRB, the search control unit <b>7</b> further specifies the first to fourteenth rows sequentially one by one for the second search after specifying the M-th row when specifying, for example, the fifteenth row (shown in (<b>3</b>)) for the first search and the second search to the address generator <b>8</b>. The address generator <b>8</b> sequentially generates the row addresses specified and the row decoder <b>4</b> activates the word lines WL [<b>1</b>] to WL [<b>14</b>]. Further, the search control unit <b>7</b> activates the sense amplifier control signal SA to &#x201c;H&#x201d; level in synchronization with the specification of each row of the first to fourteenth rows.</p>
<p id="p-0072" num="0071">According to the activation of the word line WL [i] (i=1 to M, <b>1</b> to <b>14</b>), data is read from the memory cell MC in the i-th row (i, j) (j=1 to N) to the bit line pair of BL [j], /BL [j]. Each sense amplifier in the sense amplifier group <b>5</b> is activated by a sense amplifier control signal SE and amplifies data of the bit line pair to be coupled.</p>
<p id="p-0073" num="0072">According to the activation of the word line WL [i] (i=1 to M), the first comparator <b>9</b> compares the data of the bit line pairs BL [<b>1</b>], /BL [<b>1</b>] to BL [N], /BL [N] output from the N sense amplifiers with the data of the first search data line pairs SLA [<b>1</b>], /SLA [<b>1</b>] to SLA [N], /SLA [N]. Similarly, according to the activation of the word line WL [i] (i=15 to M, <b>1</b> to <b>14</b>), the second comparator <b>10</b> compares the data of the bit line pairs BL [<b>1</b>], /BL [<b>1</b>] to BL [N], /BL [N] output from the N sense amplifiers with the data of the second search data line pairs SLB [<b>1</b>], /SLB [<b>1</b>] to SLB [N], /SLB [N].</p>
<p id="p-0074" num="0073">For example, when the data of the memory cell MC in the tenth row (10, j) (j=1 to N) agrees with the value of the first N-bit search data (a1, a2, . . . aN) (shown in (<b>4</b>)) and the data of the memory cell MC in the twentieth row (20, j) (j=1 to N) agrees with the value of the first N-bit search data (a1, a2, . . . , aN) (shown in (<b>5</b>)), the first priority encoder <b>11</b> continues to latch the row address RA in the first tenth row (does not latch the row address in the twentieth row).</p>
<p id="p-0075" num="0074">After the specification of the M-th row, from the first priority encoder <b>11</b>, the coincident address HADA indicative of the row address RA in the tenth row that is latched is output. After the specification of the M-th row, the search control unit <b>7</b> outputs the coincident address HADA indicative of the row address RA in the tenth row output from the first priority encoder <b>11</b> to outside.</p>
<p id="p-0076" num="0075">For example, when the data of the memory cell MC in the thirtieth row (30, j) (j=1 to N) agrees with the value of the second N-bit search data (b1, b2, . . . , bN) (shown in (<b>6</b>)) and the data of the memory cell MC in the second row (2, j) (j=1 to N) agrees with the value of the second N-bit search data (b1, b2, . . . , bN) (shown in (<b>7</b>)), the second priority encoder <b>12</b> latches the row address RA in the first thirtieth row. After that, when the row address RA returns to the first row, the second priority encoder <b>12</b> resets the address latched by the first row signal ADD<b>1</b> and latches the row address RA in the second row. After the specification of the fourteenth row, from the second priority encoder <b>12</b>, the coincident address HADB indicative of the row address RA of the second row that is latched is output. After the specification of the fourteenth row, the search control unit <b>7</b> outputs the coincident address HADB indicative of the row address RA of the second row output from the second priority encoder <b>12</b> to outside.</p>
<p id="p-0077" num="0076">(Summary)</p>
<p id="p-0078" num="0077">As described above, according to the semiconductor device in the first embodiment, because it is possible to perform a search of the next data while performing a search of certain data, the times of reading of data from a memory cell can be reduced compared to the case where a search of the next data is performed after a search of certain data is completed, and therefore, low power consumption can be realized.</p>
<heading id="h-0007" level="1">Modified Example of First Embodiment</heading>
<p id="p-0079" num="0078">In the present invention, two comparators and two priority encoders are provided and the first search and the second search are performed simultaneously during a partial period, however, it may also be possible to comprise N comparators and N priority encoders and perform N searches during a partial period. In this case, it is required for the search control unit to cause the address generator to further generate sequentially one or a plurality of row address(es) from the top row address to the (K&#x2212;1)th row address when the K-th row address is generated by giving the i-th search data to the i-th comparator according to the i-th search command and after the maximum row address is generated by giving the N-th search data to the N-th comparator according to the N-th search command.</p>
<heading id="h-0008" level="1">Second Embodiment</heading>
<p id="p-0080" num="0079">In the first embodiment, search data is given from outside and an address that agrees with the search data given from outside of the data stored within the memory array is output.</p>
<p id="p-0081" num="0080">In contrast to this, in a second embodiment, the address of the memory cell array in the first embodiment is stored as data of the memory cell array and the data stored in the memory cell array in the first embodiment is given from outside as an address. By reading the data of the memory cell array corresponding to the address given from outside, the same search as that in the first embodiment can be performed. The search system in the second embodiment is called a reverse system.</p>
<p id="p-0082" num="0081">(Example 1 of Configuration of Memory Cell Array and Data to be Stored)</p>
<p id="p-0083" num="0082"><figref idref="DRAWINGS">FIG. 9</figref> is a diagram for explaining data stored in a memory cell array in the second embodiment and its address. In <figref idref="DRAWINGS">FIG. 9</figref>, for the convenience of explanation, the size of the memory cell array is reduced compared to the actual one.</p>
<p id="p-0084" num="0083"><figref idref="DRAWINGS">FIGS. 9(</figref><i>a</i>) and <b>9</b>(<i>b</i>) are diagrams for explaining data stored in the system described in the first embodiment and its address.</p>
<p id="p-0085" num="0084">As shown in <figref idref="DRAWINGS">FIG. 9(</figref><i>a</i>), a memory cell <b>41</b> includes (8) rows&#xd7;(4) columns. That is, the memory cell array includes eight entries and in each entry, a 4-bit value is stored.</p>
<p id="p-0086" num="0085"><figref idref="DRAWINGS">FIG. 9(</figref><i>b</i>) shows an example of a 4-bit value stored in each entry of the memory cell array <b>41</b>. For example, in an entry the entry number (address) of which is &#x201c;001&#x201d; (=1), data &#x201c;0011&#x201d; is stored.</p>
<p id="p-0087" num="0086"><figref idref="DRAWINGS">FIGS. 9(</figref><i>c</i>) and <b>9</b>(<i>d</i>) show those in <figref idref="DRAWINGS">FIGS. 9(</figref><i>a</i>) and <b>9</b>(<i>c</i>) converted into the reverse system. As shown in <figref idref="DRAWINGS">FIG. 9(</figref><i>c</i>), a memory cell array <b>42</b> includes (2<sup>4</sup>) rows&#xd7;(Log<sub>2 </sub>8) columns. That is, the memory cell array <b>42</b> includes 2<sup>4 </sup>entries and in each entry, a Log<sub>2 </sub>8-bit value is stored.</p>
<p id="p-0088" num="0087">While data &#x201c;0011&#x201d; is stored in address &#x201c;001&#x201d; in <figref idref="DRAWINGS">FIG. 9(</figref><i>b</i>), in <figref idref="DRAWINGS">FIG. 9(</figref><i>d</i>), this relationship is reversed and in address &#x201c;0011&#x201d;, data &#x201c;001&#x201d; is stored.</p>
<p id="p-0089" num="0088"><figref idref="DRAWINGS">FIGS. 9(</figref><i>e</i>) and <b>9</b>(<i>f</i>) show the format of data stored in the memory cell array in <figref idref="DRAWINGS">FIGS. 9(</figref><i>c</i>) and <b>9</b>(<i>d</i>) is converted.</p>
<p id="p-0090" num="0089">As shown in <figref idref="DRAWINGS">FIG. 9(</figref><i>e</i>), a memory cell array <b>43</b> includes (2<sup>4</sup>) rows&#xd7;(8) columns. That is, the memory cell array <b>43</b> includes 2<sup>4 </sup>entries and in each entry, an 8-bit value is stored.</p>
<p id="p-0091" num="0090">A value &#x201c;n&#x201d; of the data in <figref idref="DRAWINGS">FIG. 9(</figref><i>d</i>) is converted into a value which has &#x201c;1&#x201d; for the (n+1)th bit from the least significant bit and &#x201c;0&#x201d; for the other bits in <figref idref="DRAWINGS">FIG. 9(</figref><i>f</i>).</p>
<p id="p-0092" num="0091">For example, while data &#x201c;001&#x201d; is stored in address &#x201c;0011&#x201d; in <figref idref="DRAWINGS">FIG. 9(</figref><i>d</i>), in <figref idref="DRAWINGS">FIG. 9(</figref><i>f</i>), data &#x201c;00000010&#x201d; is stored in address &#x201c;0011&#x201d;.</p>
<p id="p-0093" num="0092"><figref idref="DRAWINGS">FIGS. 9(</figref><i>g</i>), <b>9</b>(<i>h</i>) and <b>9</b>(<i>i</i>) show those in <figref idref="DRAWINGS">FIGS. 9(</figref><i>e</i>) and <b>9</b>(<i>f</i>) converted by address division.</p>
<p id="p-0094" num="0093">As shown in <figref idref="DRAWINGS">FIG. 9(</figref><i>g</i>), the memory cell array is divided into a memory cell array for high-order bits <b>44</b> and a memory cell array for low-order bits <b>45</b> and each memory cell array includes (2<sup>2</sup>) rows&#xd7;(8) columns.</p>
<p id="p-0095" num="0094">In the memory cell array for high-order bits <b>44</b> in <figref idref="DRAWINGS">FIG. 9(</figref><i>g</i>), the logical sum of data of a plurality of entries specified by the two high-order bits in <figref idref="DRAWINGS">FIG. 9(</figref><i>e</i>) is stored.</p>
<p id="p-0096" num="0095">In the memory cell array for low-order bits <b>45</b> in <figref idref="DRAWINGS">FIG. 9(</figref><i>g</i>), the logical sum of data of a plurality of entries specified by the two low-order bits in <figref idref="DRAWINGS">FIG. 9(</figref><i>e</i>) is stored.</p>
<p id="p-0097" num="0096">The address specified from outside is divided into two high-order bits and two low-order bits. From the memory cell array for high-order bits <b>44</b>, data of the entry specified by the two divided high-order bits is read. From the memory cell array for low-order bits <b>45</b>, data of the entry specified by the two divided low-order bits is read. Then, the logical product of the data read from the two memory cell arrays <b>44</b>, <b>45</b> is calculated. When the value of &#x201c;1&#x201d; of the logical product is located at the n-th bit from the least significant bit, (n&#x2212;1) is output as data corresponding to the address specified from outside.</p>
<p id="p-0098" num="0097"><figref idref="DRAWINGS">FIG. 9(</figref><i>h</i>) shows data stored in the memory cell array for high-order bits. For example, the logical sum of data stored in addresses &#x201c;0000&#x201d;, &#x201c;0010&#x201d;, and &#x201c;0011&#x201d; the address of the two high-order bits of which is &#x201c;00&#x201d; in <figref idref="DRAWINGS">FIG. 9(</figref><i>f</i>) is stored in address &#x201c;00&#x201d; in <figref idref="DRAWINGS">FIG. 9(</figref><i>h</i>). That is, in <figref idref="DRAWINGS">FIG. 9(</figref><i>f</i>), in addresses &#x201c;0000&#x201d;, &#x201c;0010&#x201d;, and &#x201c;0011&#x201d;, data &#x201c;00010000&#x201d;, &#x201c;00000100&#x201d;, and &#x201c;00000010&#x201d; are stored, and therefore, in <figref idref="DRAWINGS">FIG. 9(</figref><i>h</i>), their logical sum &#x201c;00010110&#x201d; is stored in address &#x201c;00&#x201d;.</p>
<p id="p-0099" num="0098"><figref idref="DRAWINGS">FIG. 9(</figref><i>i</i>) shows data stored in the memory cell array for low-order bits. For example, the logical sum of data stored in addresses &#x201c;0011&#x201d;, &#x201c;0111&#x201d;, &#x201c;1011&#x201d;, and &#x201c;1111&#x201d; the address of the two low-order bits of which is &#x201c;11&#x201d; in <figref idref="DRAWINGS">FIG. 9(</figref><i>f</i>) is stored in address &#x201c;11&#x201d; in <figref idref="DRAWINGS">FIG. 9(</figref><i>i</i>). That is, in <figref idref="DRAWINGS">FIG. 9(</figref><i>f</i>), in addresses &#x201c;0011&#x201d;, &#x201c;0111&#x201d;, &#x201c;1011&#x201d;, and &#x201c;1111&#x201d;, data &#x201c;00000010&#x201d;, &#x201c;01000000&#x201d;, &#x201c;00100000&#x201d;, and &#x201c;00001000&#x201d; are stored, and therefore, in <figref idref="DRAWINGS">FIG. 9(</figref><i>i</i>), their logical sum &#x201c;01101010&#x201d; is stored in address &#x201c;11&#x201d;.</p>
<p id="p-0100" num="0099">When address &#x201c;0001&#x201d; is specified from outside, data &#x201c;00010110&#x201d; of the entry specified by two high-order bits &#x201c;00&#x201d; is read from the memory cell array for high-order bits <b>44</b> and data &#x201c;01101010&#x201d; of the entry specified by two low-order bits &#x201c;11&#x201d; is read from the memory cell array for low-order bits <b>45</b>. Then, the logical product of the two pieces of read data is &#x201c;00000010&#x201d; and &#x201c;1&#x201d; is located at the second bit from the least significant bit, and therefore, &#x201c;1&#x201d; (=&#x201c;001&#x201d;) is output.</p>
<p id="p-0101" num="0100">According to the summary of the above-described explanation, in the system in the first embodiment in <figref idref="DRAWINGS">FIGS. 9(</figref><i>a</i>) and <b>9</b>(<i>b</i>), search data &#x201c;0011&#x201d; is given from outside and address &#x201c;001&#x201d; that agrees with the search data given from outside is output of the data stored in the memory cell array. In contrast to this, in the system in the second embodiment in <figref idref="DRAWINGS">FIGS. 9(</figref><i>g</i>), <b>9</b>(<i>h</i>) and <b>9</b>(<i>i</i>), address &#x201c;0011&#x201d; is given from outside and data &#x201c;1&#x201d; (=&#x201c;001&#x201d;) corresponding to the address is output. Due to this, in the second embodiment also, the same search as that in the first embodiment can be performed.</p>
<p id="p-0102" num="0101">(Example 2 of Configuration of Memory Cell Array and Data to be Stored)</p>
<p id="p-0103" num="0102"><figref idref="DRAWINGS">FIG. 10</figref> is a diagram for explaining data stored in the memory cell array and its address in the second embodiment.</p>
<p id="p-0104" num="0103"><figref idref="DRAWINGS">FIGS. 10(</figref><i>a</i>) and <b>10</b>(<i>b</i>) show data stored in the system shown in the first embodiment and its address. <figref idref="DRAWINGS">FIG. 10</figref> corresponds to <figref idref="DRAWINGS">FIG. 9</figref> that is more generalized.</p>
<p id="p-0105" num="0104">As shown in <figref idref="DRAWINGS">FIG. 10(</figref><i>a</i>), a memory cell array <b>46</b> includes (L) rows&#xd7;(N) columns. That is, the memory cell array includes L entries and in each entry, an N-bit value is stored. <figref idref="DRAWINGS">FIG. 10(</figref><i>b</i>) shows an example of an N-bit value stored in each entry of the memory cell array.</p>
<p id="p-0106" num="0105"><figref idref="DRAWINGS">FIGS. 10(</figref><i>c</i>) and <b>10</b>(<i>d</i>) show those in <figref idref="DRAWINGS">FIGS. 10(</figref><i>a</i>) and <b>10</b>(<i>c</i>) converted into the reverse system.</p>
<p id="p-0107" num="0106">As shown in <figref idref="DRAWINGS">FIG. 10(</figref><i>c</i>), a memory cell array <b>47</b> includes (2<sup>N</sup>) rows&#xd7;(Log<sub>2 </sub>L) columns.</p>
<p id="p-0108" num="0107"><figref idref="DRAWINGS">FIGS. 10(</figref><i>e</i>) and <b>10</b>(<i>f</i>) show those in <figref idref="DRAWINGS">FIGS. 10(</figref><i>c</i>) and <b>10</b>(<i>d</i>) the format of data stored in the memory cell array of which is converted.</p>
<p id="p-0109" num="0108">As shown in <figref idref="DRAWINGS">FIG. 10(</figref><i>e</i>), a memory cell array <b>48</b> includes (2<sup>4</sup>) rows&#xd7;(8) columns. A value &#x201c;n&#x201d; of data in <figref idref="DRAWINGS">FIG. 10(</figref><i>d</i>) is converted into a value which has &#x201c;1&#x201d; for the (n+1)th bit from the least significant bit and &#x201c;0&#x201d; for the other bits in <figref idref="DRAWINGS">FIG. 10(</figref><i>f</i>).</p>
<p id="p-0110" num="0109"><figref idref="DRAWINGS">FIGS. 10(</figref><i>g</i>) to <b>10</b>(<i>j</i>) show those in <figref idref="DRAWINGS">FIGS. 10(</figref><i>e</i>) and <b>10</b>(<i>f</i>) converted by address division.</p>
<p id="p-0111" num="0110">As shown in <figref idref="DRAWINGS">FIG. 10(</figref><i>g</i>), the memory cell array is divided into a first memory cell array <b>49</b>_<b>1</b>, a second memory cell array <b>49</b>_<b>2</b>, . . . , an M-th memory cell array <b>49</b>_M. Each memory cell array includes (2<sup>S</sup>) rows&#xd7;(L) columns. Here, S&#xd7;M=N.</p>
<p id="p-0112" num="0111">In the first memory cell array <b>49</b>_<b>1</b> in <figref idref="DRAWINGS">FIG. 10(</figref><i>g</i>), the logical sum of data of S entries specified by S bits from the highest-order bit in <figref idref="DRAWINGS">FIG. 10(</figref><i>e</i>) is stored. In the second memory cell array <b>49</b>_<b>2</b> in <figref idref="DRAWINGS">FIG. 10(</figref><i>g</i>), the logical sum of data of S entries specified by the (S+1)th bit from the highest-order bit to the 2S-th bit from the highest-order bit in <figref idref="DRAWINGS">FIG. 10(</figref><i>e</i>) is stored. In the M-th memory cell array <b>49</b>_M in <figref idref="DRAWINGS">FIG. 10(</figref><i>g</i>), the logical sum of data of S entries specified by S bits from the least significant bit in <figref idref="DRAWINGS">FIG. 10(</figref><i>e</i>) is stored. Here, when there is no data in the entry for which the logical sum is calculated, the logical sum is calculated by regarding that all the bits in the entry are 0.</p>
<p id="p-0113" num="0112">An address specified from outside is divided into groups of S bits each. From the first memory cell array <b>49</b>_<b>1</b>, data of the entries specified by the divided S bits from the highest-order bit is read. From the second memory cell array <b>49</b>_<b>2</b>, data of the entries specified by the divided (S+1)th bit from the highest-order bit to the 2S-th bit from the highest-order bit is read. From the M-th memory cell array <b>49</b>_M, data of the entries specified by the divided S bits from the least significant bit is read. Then, the logical product of the data read from the first to the M-th memory cell arrays is calculated. When the logical product &#x201c;1&#x201d; is located at the n-th bit from the least significant bit, (n&#x2212;1) is output as data corresponding to the address specified from outside.</p>
<p id="p-0114" num="0113">(Configuration)</p>
<p id="p-0115" num="0114"><figref idref="DRAWINGS">FIG. 11</figref> is a diagram showing a configuration of a semiconductor device in the second embodiment.</p>
<p id="p-0116" num="0115">Referring to <figref idref="DRAWINGS">FIG. 11</figref>, a semiconductor device <b>62</b> includes a semiconductor storage device <b>61</b> and a CPU <b>57</b>.</p>
<p id="p-0117" num="0116">The CPU <b>57</b> gives the search command SC and address ADD to the semiconductor storage device <b>61</b>. The CPU <b>57</b> receives data RD stored corresponding to ADD from the semiconductor storage device <b>61</b>.</p>
<p id="p-0118" num="0117">The semiconductor storage device <b>61</b> has M blocks each having a memory cell array, a row decoder, and a sense amplifier group. That is, the semiconductor storage device <b>61</b> has the first memory cell array <b>49</b>_<b>1</b>, the second memory cell array <b>49</b>_<b>2</b>, . . . , and the M-th memory cell array <b>49</b>_M, a first row decoder <b>51</b>_<b>1</b>, a second row decoder <b>51</b>_<b>2</b>, . . . , and an M-th row decoder <b>51</b>_M, and a first sense amplifier group <b>52</b>_<b>1</b>, a second sense amplifier group <b>52</b>_<b>2</b>, . . . , and an M-th sense amplifier group <b>52</b>_M.</p>
<p id="p-0119" num="0118">Further, the semiconductor storage device <b>61</b> comprises an address divider <b>53</b>, a multibit logical product circuit <b>54</b>, a bit position determination unit <b>55</b>, and a search control unit <b>56</b>.</p>
<p id="p-0120" num="0119">The first memory cell array <b>49</b>_<b>1</b> is the same as that shown in <figref idref="DRAWINGS">FIG. 10(</figref><i>g</i>) and has a plurality of SRAM cells arranged in a matrix. The first memory cell array <b>49</b>_<b>1</b> stores such data as shown in <figref idref="DRAWINGS">FIG. 10(</figref><i>h</i>). The second memory cell array <b>49</b>_<b>2</b> is the same as that shown in <figref idref="DRAWINGS">FIG. 10(</figref><i>g</i>) and has a plurality of SRAM cells arranged in a matrix. The second memory cell array <b>49</b>_<b>2</b> stores such data as shown in <figref idref="DRAWINGS">FIG. 10(</figref><i>i</i>). The M-th memory cell array <b>49</b>_M is the same as that shown in <figref idref="DRAWINGS">FIG. 10(</figref><i>g</i>) and has a plurality of SRAM cells arranged in a matrix. The M-th memory cell array <b>49</b>_M stores such data as shown in <figref idref="DRAWINGS">FIG. 10(</figref><i>j</i>).</p>
<p id="p-0121" num="0120">The address divider <b>53</b> divides the N-bit address ADD specified from outside into groups of S bits each. The address divider <b>53</b> outputs address ADD (<b>1</b>) including the divided S bits from the highest-order bit to the first row decoder <b>51</b>_<b>1</b>. The address divider <b>53</b> outputs address ADD (<b>2</b>) including the divided (S+1)th bit from the highest-order bit to the 2S-th bit from the highest-order bit to the second row decoder <b>51</b>_<b>2</b>. The address divider <b>53</b> outputs address ADD (M) including the divided S bits from the least significant bit to the M-th row decoder <b>51</b>_M.</p>
<p id="p-0122" num="0121">The first row decoder <b>51</b>_<b>1</b> activates the word line WL within the first memory cell array <b>49</b>_<b>1</b> according to ADD (<b>1</b>) output from the address divider <b>53</b>. The second row decoder <b>51</b>_<b>2</b> activates the word line WL within the second memory cell array <b>49</b>_<b>2</b> according to ADD (<b>2</b>) output from the address divider <b>53</b>. The M-th row decoder <b>51</b>_M activates the word line WL within the M-th memory cell array <b>49</b>_M according to ADD (M) output from the address divider <b>53</b>.</p>
<p id="p-0123" num="0122">The first sense amplifier group <b>52</b>_<b>1</b> comprises a sense amplifier provided for each column. When the sense amplifier control signal SA is activated to &#x201c;H&#x201d; level, each sense amplifier amplifies and outputs a voltage of a bit line pair in the corresponding column in the first memory cell array <b>49</b>_<b>1</b>. The second sense amplifier group <b>52</b>_<b>2</b> comprises a sense amplifier provided for each column. When the sense amplifier control signal SA is activated to &#x201c;H&#x201d; level, each sense amplifier amplifies and outputs a voltage of a bit line pair in the corresponding column in the second memory cell array <b>49</b>_<b>2</b>. The N-th sense amplifier group <b>52</b>_M comprises a sense amplifier provided for each column. When the sense amplifier control signal SA is activated to &#x201c;H&#x201d; level, each sense amplifier amplifies and outputs a voltage of a bit line pair in the corresponding column in the M-th memory cell array <b>49</b>_M.</p>
<p id="p-0124" num="0123"><figref idref="DRAWINGS">FIG. 12</figref> is a diagram showing a configuration of the multibit logical product circuit in <figref idref="DRAWINGS">FIG. 11</figref>. Referring to <figref idref="DRAWINGS">FIG. 12</figref>, the multibit logical product circuit <b>54</b> comprises L logical product circuits <b>60</b>_<b>1</b> to <b>60</b>_L and a bit coupler <b>71</b>.</p>
<p id="p-0125" num="0124">The logical product circuits <b>60</b><sub>&#x2014;</sub><i>i </i>outputs a logical product c (i) of data of the bit line BL [i] (<b>1</b>) in the i-th column of the first memory cell array <b>49</b>_<b>1</b>, data of the bit line BL [i] (<b>2</b>) in the i-th column of the second memory cell array <b>49</b>_<b>2</b>, . . . , and data of the bit line BL [i] (M) in the i-th column of the M-th memory cell array <b>49</b>_M.</p>
<p id="p-0126" num="0125">The bit position determination circuit <b>55</b> outputs (n&#x2212;1) as the data RD corresponding to the address ADD specified from outside when data whose value is &#x201c;1&#x201d; of L pieces of data C(<b>1</b>) to C(L) output from the multibit logical product circuit <b>54</b> is c(n).</p>
<p id="p-0127" num="0126">The search control unit <b>56</b> starts a search of data corresponding to the address ADD from outside when the search command SC is executed from outside. Further, the search control unit <b>56</b> outputs the data RD output from the bit position determination unit <b>55</b> to outside.</p>
<p id="p-0128" num="0127">(Summary)</p>
<p id="p-0129" num="0128">As described above, according to the second embodiment, it is not necessary to read all the data for comparison as is necessary in the first embodiment and by reading data corresponding to an address, data that is read can be regarded as a search result, and therefore, it is possible to make an attempt to reduce power consumption.</p>
<heading id="h-0009" level="1">Third Embodiment</heading>
<p id="p-0130" num="0129"><figref idref="DRAWINGS">FIG. 13</figref> is a diagram showing a configuration of a semiconductor device in a third embodiment.</p>
<p id="p-0131" num="0130">Referring to <figref idref="DRAWINGS">FIG. 13</figref>, a semiconductor device <b>81</b> comprises a CPU <b>83</b>, a memory cell array <b>82</b>, the semiconductor storage device <b>61</b> in the second embodiment, and a maintenance unit <b>84</b>.</p>
<p id="p-0132" num="0131">The memory cell array <b>82</b> has a plurality of memory cells arranged in a matrix and stores data from which the data in the reverse system stored in the semiconductor storage device <b>61</b> originates.</p>
<p id="p-0133" num="0132">The CPU <b>83</b> gives address ADD_S to the semiconductor storage device <b>61</b> at the time of a search as in the second embodiment and receives the data RD corresponding to the address ADD_S from the semiconductor storage device <b>61</b>. The CPU <b>83</b> gives new data N_DA corresponding to address ADD_M to the maintenance unit <b>84</b> at the time of maintenance.</p>
<p id="p-0134" num="0133">(Maintenance Processing)</p>
<p id="p-0135" num="0134">Next, the maintenance processing by the maintenance unit <b>84</b> is explained.</p>
<p id="p-0136" num="0135">It is assumed that data shown in <figref idref="DRAWINGS">FIG. 9(</figref><i>b</i>) is stored in the memory cell array <b>82</b>. It is also assumed that the semiconductor storage device <b>61</b> comprises a first memory cell array for high-order bits and a second memory cell array for low-order bits and in the first memory cell array for high-order bits and the second memory cell array for low-order bits, data shown in <figref idref="DRAWINGS">FIGS. 9(</figref><i>h</i>) and <b>9</b>(<i>i</i>), respectively, is stored.</p>
<p id="p-0137" num="0136">Here, it is assumed that maintenance is performed so that data &#x201c;0011&#x201d; stored in the entry number &#x201c;1&#x201d; of the memory cell array <b>82</b> is changed to &#x201c;0110&#x201d;.</p>
<p id="p-0138" num="0137">&#x201c;1&#x201d; is input as ADD_M and from the row specified by ADD_M of the memory cell array <b>82</b>, read data O_DA (=&#x201c;0011&#x201d;) is output.</p>
<p id="p-0139" num="0138">The maintenance unit <b>84</b> changes &#x201c;1&#x201d; at the second bit from the least significant bit in the entry corresponding to address &#x201c;00&#x201d; of the first memory array to &#x201c;0&#x201d; and changes &#x201c;1&#x201d; at the second bit from the least significant bit in the entry corresponding to address &#x201c;11&#x201d; of the second memory array to &#x201c;0&#x201d; from the relationship of the read data O_DA (&#x201c;0011&#x201d;) corresponding to ADD_M (=&#x201c;1&#x201d;).</p>
<p id="p-0140" num="0139">Next, the maintenance unit <b>84</b> changes &#x201c;0&#x201d; at the second bit from the least significant bit in the entry corresponding to address &#x201c;01&#x201d; of the first memory array to &#x201c;1&#x201d; and changes &#x201c;0&#x201d; at the second bit from the least significant bit in the entry corresponding to address &#x201c;10&#x201d; of the second memory array to &#x201c;1&#x201d; from the relationship of new data N_DATA (=&#x201c;0110&#x201d;) corresponding to ADD_M (=&#x201c;1&#x201d;). Further, the maintenance unit writes the new data N_DA into the row specified by ADD_M of the memory cell array <b>82</b>.</p>
<p id="p-0141" num="0140">As described above, according to the semiconductor device in the third embodiment, by comprising a memory cell array that stores data from which the data in the reverse system stored in the memory cell in the second embodiment originates, it is made possible to modify and change data stored in the memory cell in the second embodiment.</p>
<p id="p-0142" num="0141">The embodiments disclosed above are mere examples in all points and should not be considered limitative. The scope of the present invention is defined by claims not by the above-described explanation and it is intended that all modifications equivalent to claims in meaning and in the scope are all included.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A semiconductor storage device comprising:
<claim-text>a memory cell array including a plurality of memory cells arranged in a matrix;</claim-text>
<claim-text>a first comparator comparing data output to a bit line from the memory cell by activating a word line with first search data;</claim-text>
<claim-text>a second comparator comparing data output to the bit line from the memory cell by activating the word line with second search data;</claim-text>
<claim-text>an address generator sequentially generating a row address;</claim-text>
<claim-text>a row decoder activating any of word lines within the memory cell array according to the generated row address;</claim-text>
<claim-text>a first priority encoder coupled to the address generator and latching a row address when the first comparator determines coincidence; and</claim-text>
<claim-text>a second priority encoder coupled to the address generator and latching a row address when the second comparator determines coincidence,</claim-text>
<claim-text>wherein data output to the bit line by activating one word line is input to both the first comparator and second comparator,</claim-text>
<claim-text>wherein the first and second priority encoders latch a row address with higher priority if there is a plurality of row addresses when the coincidence is determined,</claim-text>
<claim-text>wherein the address generator cyclically generates row addresses from a small value in ascending order,</claim-text>
<claim-text>wherein the first and second priority encoders latch a row address with a smaller value if there is a plurality of row addresses when coincidence is determined, and</claim-text>
<claim-text>wherein the second priority encoder latches a row address when coincidence is determined first, resets at the same time a row address that is latched when the first row address is input, and latches a row address when coincidence is determined next.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. A semiconductor storage device comprising:
<claim-text>a memory cell array including a plurality of memory cells arranged in a matrix;</claim-text>
<claim-text>a first comparator comparing data output to a bit line from the memory cell by activating a word line with first search data;</claim-text>
<claim-text>a second comparator comparing data output to the bit line from the memory cell by activating the word line with second search data;</claim-text>
<claim-text>an address generator sequentially generating a row address;</claim-text>
<claim-text>a row decoder activating any of word lines within the memory cell array according to the generated row address;</claim-text>
<claim-text>a first priority encoder coupled to the address generator and latching a row address when the first comparator determines coincidence; and</claim-text>
<claim-text>a second priority encoder coupled to the address generator and latching a row address when the second comparator determines coincidence,</claim-text>
<claim-text>wherein data output to the bit line by activating one word line is input to both the first comparator and second comparator,</claim-text>
<claim-text>wherein the first and second priority encoders latch a row address with higher priority if there is a plurality of row addresses when the coincidence is determined,</claim-text>
<claim-text>wherein the address generator cyclically generates row addresses from a small value in ascending order,</claim-text>
<claim-text>wherein the first and second priority encoders latch a row address with a smaller value if there is a plurality of row addresses when coincidence is determined, and</claim-text>
<claim-text>wherein the semiconductor storage device causes the address generator to sequentially generate row addresses from a small value in ascending order, first according to an input of a search command, and if the next search command is input before the maximum row address is generated, the semiconductor storage device, when causing the address generator to generate the K-th row next, further causes the address generator to generate sequentially one or a plurality of row address(es) from the top row address to the (K&#x2212;1)th row address after the maximum row address is generated.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
