<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08624720-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08624720</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12647465</doc-number>
<date>20091226</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>1046</us-term-extension>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>08</class>
<subclass>B</subclass>
<main-group>29</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>11</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>340506</main-classification>
<further-classification>340517</further-classification>
<further-classification>340531</further-classification>
<further-classification>340521</further-classification>
<further-classification>726 22</further-classification>
<further-classification>726 23</further-classification>
</classification-national>
<invention-title id="d2e55">Security infrastructure</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5295244</doc-number>
<kind>A</kind>
<name>Dev et al.</name>
<date>19940300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5896440</doc-number>
<kind>A</kind>
<name>Reed et al.</name>
<date>19990400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6147601</doc-number>
<kind>A</kind>
<name>Sandelman et al.</name>
<date>20001100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6369705</doc-number>
<kind>B1</kind>
<name>Kennedy</name>
<date>20020400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6400265</doc-number>
<kind>B1</kind>
<name>Saylor et al.</name>
<date>20020600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6617969</doc-number>
<kind>B2</kind>
<name>Tu et al.</name>
<date>20030900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>7068189</doc-number>
<kind>B2</kind>
<name>Brescia</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>7159237</doc-number>
<kind>B2</kind>
<name>Schneier et al.</name>
<date>20070100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>7509677</doc-number>
<kind>B2</kind>
<name>Saurabh et al.</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>7663479</doc-number>
<kind>B1</kind>
<name>Bajpay et al.</name>
<date>20100200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>340506</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2002/0050926</doc-number>
<kind>A1</kind>
<name>Lewis et al.</name>
<date>20020500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>340506</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>14</number-of-drawing-sheets>
<number-of-figures>14</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>11312402</doc-number>
<date>20051221</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>7663479</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>12647465</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20100097213</doc-number>
<kind>A1</kind>
<date>20100422</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Bajpay</last-name>
<first-name>Paritosh</first-name>
<address>
<city>Edison</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Bienfait</last-name>
<first-name>Roberta</first-name>
<address>
<city>Norcross</city>
<state>GA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Cast</last-name>
<first-name>Ginny</first-name>
<address>
<city>Conyers</city>
<state>GA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Chiang</last-name>
<first-name>Wan-Ping</first-name>
<address>
<city>Colts Neck</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="005" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Hanechak</last-name>
<first-name>Kim</first-name>
<address>
<city>Covington</city>
<state>GA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="006" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Liu</last-name>
<first-name>Jackson</first-name>
<address>
<city>Middletown</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="007" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Stokes</last-name>
<first-name>Denise</first-name>
<address>
<city>Atlanta</city>
<state>GA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Bajpay</last-name>
<first-name>Paritosh</first-name>
<address>
<city>Edison</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Bienfait</last-name>
<first-name>Roberta</first-name>
<address>
<city>Norcross</city>
<state>GA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Cast</last-name>
<first-name>Ginny</first-name>
<address>
<city>Conyers</city>
<state>GA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Chiang</last-name>
<first-name>Wan-Ping</first-name>
<address>
<city>Colts Neck</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="005" designation="us-only">
<addressbook>
<last-name>Hanechak</last-name>
<first-name>Kim</first-name>
<address>
<city>Covington</city>
<state>GA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="006" designation="us-only">
<addressbook>
<last-name>Liu</last-name>
<first-name>Jackson</first-name>
<address>
<city>Middletown</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="007" designation="us-only">
<addressbook>
<last-name>Stokes</last-name>
<first-name>Denise</first-name>
<address>
<city>Atlanta</city>
<state>GA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>AT&#x26;T Intellectual Property II, L.P.</orgname>
<role>02</role>
<address>
<city>Atlanta</city>
<state>GA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Crosland</last-name>
<first-name>Donnie</first-name>
<department>2687</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">An automated security infrastructure is disclosed that includes security agents that are designed to analyze security issues. The security agents process events received from event-messages, and records data associated with a security issue in a ticket. Security and management personnel are kept informed based on notification subscription lists. Assigned security personnel's progress in resolving outstanding security issues is monitored until those issues are resolved.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="96.01mm" wi="173.06mm" file="US08624720-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="176.36mm" wi="112.78mm" orientation="landscape" file="US08624720-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="184.07mm" wi="113.54mm" orientation="landscape" file="US08624720-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="108.88mm" wi="118.70mm" orientation="landscape" file="US08624720-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="224.11mm" wi="136.65mm" orientation="landscape" file="US08624720-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="130.64mm" wi="155.62mm" orientation="landscape" file="US08624720-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="101.18mm" wi="129.96mm" orientation="landscape" file="US08624720-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="128.19mm" wi="103.29mm" orientation="landscape" file="US08624720-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="157.06mm" wi="169.33mm" orientation="landscape" file="US08624720-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="136.23mm" wi="168.23mm" orientation="landscape" file="US08624720-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="228.35mm" wi="172.13mm" orientation="landscape" file="US08624720-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="164.76mm" wi="125.05mm" orientation="landscape" file="US08624720-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="139.53mm" wi="99.74mm" orientation="landscape" file="US08624720-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="207.94mm" wi="142.58mm" orientation="landscape" file="US08624720-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="223.35mm" wi="184.32mm" orientation="landscape" file="US08624720-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 11/312,402, filed Dec. 21, 2005, now U.S. Pat. No. 7,663,479 B1, which is herein incorporated by reference in its entirety.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">Security infrastructures are invaluable in providing protection against illicit accesses or damage to important information and physical property. Thus, new technology is needed to improve security infrastructures.</p>
<heading id="h-0002" level="1">SUMMARY</heading>
<p id="p-0004" num="0003">An automated security infrastructure is disclosed that includes security agents that are designed to analyze particular security issues such as an attack on secured property and/or computer systems. The security agents receive events from monitor systems (e.g., intrusion detection system, premise security system, etc.) that perform monitoring functions such as detecting intrusion on property; seeking out, correlating and analyzing context information related to the events; and recording all information associated with a security issue in a ticket which persists in the security infrastructure at least until the security issue is resolved, for example. Events may be in the form of messages generated by the monitor systems that contain information associated with detected incidences. The security agents keep security and management personnel informed and monitor assigned security personnel's progress in resolving outstanding security issues until those issues are resolved.</p>
<p id="p-0005" num="0004">The security infrastructure may be event driven and include an event-message formatter that formats events generated by the monitor systems so that information contained in the events is readily accessible to security agents and human personnel. Data formats of events may vary depending on manufacturers of the monitor systems. Thus, converting events of differing forms into a standardized common format avoids repeated conversions by individual security agents or personnel and avoids delay in information analysis within the security infrastructure. In the case of security personnel, differing formats introduces human error which leads to more careful, thus time consuming, examination of events at best and not addressing events due to inconvenience of information extraction, at worst. Therefore, standardizing event-message formats facilitates security agents and/or human personnel decisions to be made based on the most current detection data generated by the monitor systems.</p>
<p id="p-0006" num="0005">The security infrastructure includes an event-message distributor that distributes event-messages to security agents or personnel which are event-message consumers. Event-message consumers may subscribe to particular types of events in the monitor system. The event-message distributor actively distributes event-messages as the corresponding events are generated by the monitor system. Thus, event-message consumers may not be burdened with monitoring whether an event of interest has occurred. Therefore, the event-message distributor permits event-message consumers to be distributed over large geographical areas but receive event-messages as if directly connected to the desired monitor systems. In this way, each of the event-message consumers may perform its assigned tasks without having to monitor whether subscribed-to events have been generated.</p>
<p id="p-0007" num="0006">Additionally, security agents may also generate event-messages that are distributed by the event-message distributor. Thus, the event-message distributor may serve as a communication path for security agents so that each security agent may operate completely independently. The event-message formatter and distributor create an environment within the security infrastructure that enables every event-message consumer to timely receive the most current subscribed-to event-messages.</p>
<p id="p-0008" num="0007">In a particular implementation, a security agent may be an artificial intelligent program using inference engines to process data based on rules, for example. Security agents may be designed by security personnel that focus on particular security issues such as building/room accesses, attacks such as virus, worm or denial-of-service, etc. Many security agents may be used and the security agents may be organized hierarchically so that lower level security agents may process lower level security issues such as monitor illicit accesses to a particular physical space while higher level security agents may process higher level security issues such as an organized attack on a building that may include illicit accesses in multiple physical areas as well as illicit cyber access attacks such as multiple access attempts to secured servers, for example.</p>
<p id="p-0009" num="0008">When an event-message is received, a security agent first determines if the event-message is caused by legitimate activity. If not, the security agent may determine whether a possible security breach has occurred by collecting additional event-messages that may be generated around the same time and same location/source. For example, if the first event-message indicates an illegal entry through a door, then event-messages from one or more nearby doors may provide helpful information in analyzing a possible security breach. Security agents may also analyze lower level subtle and long term attacks that is perpetrated by a collection of illicit activity dribbled over an extended period of time.</p>
<p id="p-0010" num="0009">Security agents may store information related to a security issue in a ticket data structure (ticket). Tickets provide a tracking system of security issues and are processed and maintained by a ticketing system. For example, information collected by security agents may be stored by adding information to an existing ticket (updating a ticket) or cause a new ticket to be created (opening a ticket). Each ticket may be associated with a security agent that caused it to be opened and processes the ticket until the associated security issue is resolved. When the related security issue is resolved, the ticket may be closed.</p>
<p id="p-0011" num="0010">When a ticket is opened, updated or closed, the associated security agent may ensure that notification is sent to one or more appropriate personnel. For example, if a newly opened ticket is assigned to a specific security person (or a group), the associated security agent may send a notice to the security person and tracks whether the notice was picked-up. If not picked-up within a preset time, appropriate management personnel may be alerted to call attention to the situation. This may continue until the related security issue is resolved and the corresponding ticket is closed.</p>
<p id="p-0012" num="0011">In view of the above, the security infrastructure provides an efficient automated environment for analyzing security issues and an accountable environment for security personnel. In this way, decisions based on inaccurate data and delay caused by human errors may be minimized, providing greater security infrastructure effectiveness.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 1</figref> shows an exemplary diagram of a security infrastructure;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 2</figref> shows an exemplary block diagram of a security processor;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 3</figref> shows an exemplary event-message;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 4</figref> shows an exemplary event-message subscriber list;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 5</figref> shows an exemplary block diagram of a security database;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 6</figref> shows a flowchart of an exemplary process of the security processor;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 7</figref> shows an exemplary block diagram of a security agent;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 8</figref> shows an exemplary ticket;</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 9</figref> shows a flowchart of an exemplary security agent event analysis process;</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 10</figref> shows a flowchart of an exemplary process for security agent ticket analysis;</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 11</figref> shows a flowchart of an exemplary process for security agent failure/breach recognition;</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 12</figref> shows an exemplary block diagram of a ticketing system;</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 13</figref> shows an exemplary subscription list related to tickets; and</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 14</figref> shows a flowchart of an exemplary ticketing system process.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION OF EMBODIMENTS</heading>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 1</figref> shows an exemplary diagram of a security infrastructure <b>100</b> that includes a network <b>102</b> that interconnects a security processor <b>104</b>, monitor system <b>106</b>, a ticketing system <b>107</b>, a security personnel interface <b>108</b> and service system <b>109</b>. Network <b>102</b> may comprise one or more networks of any type such as a local area network (LAN), a wide area network (WAN), the Internet, etc. implemented using technology such as wired, wireless, optical, etc. Monitor system <b>106</b> (e.g., physical security management system, network maintenance system, intrusion detection system, etc.) may include physical detection devices such as door access detectors, temperature sensors, motion detectors, light sensors, cable continuity detectors, etc., as well as non-physical event-messages that detect excessive number of packets of a particular destination address, inappropriate access attempts using invalid passwords, etc. Monitor system <b>106</b> provides raw information in the form of events that is processed by security processor <b>104</b>. Events are messages generated by monitor system <b>106</b> that contain detection data.</p>
<p id="p-0028" num="0027">Ticket system <b>107</b> manages tickets created and updated by security processor <b>104</b> and security personnel via security personnel interface <b>108</b>. Service system <b>109</b> (e.g., corporate Human Resource system, work scheduling system, network or server configuration database, network control system) provides services for accessing context (e.g., valid human resource identification (HRID), maintenance work on certain location, etc.) and performing containment actions (e.g., deny door entrance, deny server access).</p>
<p id="p-0029" num="0028">For example, when an illicit access to a critical room/building is requested by a person using an access-badge (a requesting access-badge), monitor system <b>106</b> may generate an event in the form of an access-message and forward the access-message through network <b>102</b> to security processor <b>104</b>. Security processor <b>104</b> may first check whether the requested access is valid in the most up-to-date database in service system <b>109</b>. If the requesting access-badge code is found in the list, then access may be granted. However, if the requesting access-badge code is not found in the list, then security processor <b>104</b> may open a ticket in ticketing system <b>107</b> to collect related information and inform security personnel via security personnel interface <b>108</b>.</p>
<p id="p-0030" num="0029">A ticket is an object of ticketing system <b>107</b> that keeps track of one or more security events (a breach or attempted breach of security infrastructure <b>100</b>) that has occurred over a specified period of time, such as days, weeks, months or years, for example. The period of time may be set to any value depending on a particular related security issue, and also may be adaptively set based on circumstances. When a ticket is opened, a ticket identification may be assigned and the ticket remains active until the circumstances associated with the ticket is satisfactorily resolved, in which case the ticket is closed.</p>
<p id="p-0031" num="0030">A ticket is not discarded even when closed, but is maintained in a database for future analysis. For example, low-level security breaches that may dribble out over an extended period of time may be detected by correlating information stored in many tickets that may span over months. While each of the tickets may be apparently resolved, patterns may be detected by analyzing ticket history and associated circumstances.</p>
<p id="p-0032" num="0031">As noted above, tickets are opened when monitor system <b>106</b> detects a event such as repeated attempts to access a door with an invalid access-badge or attempts to access a server using an invalid password, for example. When the same access-attempt occurs again within certain timeframe (e.g., 1 minute), the subsequent event is logged in the same ticket that was previously opened, so that a history may be recorded together with other circumstance that may be collected by security processor <b>104</b>. In this way, analysis of tickets may examine similarities of circumstances as well as patterns relating to what, where, when, why, how, etc. questions.</p>
<p id="p-0033" num="0032">Security processor <b>104</b> may also maintain communication with security personnel and/or other personnel that has a need to know. For example, when a ticket is opened, one or more appropriate security personnel may be informed. Additionally, timers may be activated when action by security personnel is expected. If the expected action is not taken, security processor <b>104</b> may escalate the ticket to higher-level management so that human error may be controlled. Thus, security processor <b>104</b> is an integration point for security event consolidation, filtering and coordination.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 2</figref> shows an exemplary block diagram of security processor <b>104</b> that may include event-message formatter <b>110</b>, event-message distributor <b>112</b>, one or more security agents <b>114</b>, database <b>116</b> and network interface <b>120</b> all coupled together via bus <b>122</b>. While <figref idref="DRAWINGS">FIG. 2</figref> shows the above components in a hardware bus architecture format, other architectures may be use such as distributed architecture, or, for example, these components may be constructed using FPGAs, PLAs, application specific integrated circuits (ASICs), etc. that are configured as desired. Security processor <b>104</b> may include one or more general or special computers such as personal computers, servers, mainframes, etc. executing software components such as programs that perform some or all of security processor functions.</p>
<p id="p-0035" num="0034">Event-message formatter <b>110</b> formats one or more events received from monitor system <b>106</b>. When an event is received from monitor system <b>106</b>, the event-message formatter <b>110</b> converts the received event into a common format for distribution by event-message distributor <b>112</b> to subscribing entities of security infrastructure <b>100</b>. Monitor system <b>106</b> may include diverse hardware and software units that perform many different types of event detections. Door access controllers, motion detectors, firewalls, denial-of-service (DOS) attack detection systems, etc., may all make detections and generate events that include information specific to a particular unit, and thus, may have differing formats. Where necessary, event-message formatter <b>110</b> converts all events received by security processor <b>104</b> into a standard event-message format that may be accessed and processed by any component within security processor <b>104</b>. Events that are already formatted in the standard event-message format may bypass event-message formatter <b>110</b> and may be directly provided to event-message distributor <b>112</b> for storage and distribution within security infrastructure <b>100</b>.</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 3</figref> shows an exemplary event-message <b>150</b> that includes an event identification (ID), location of the event, time stamp indicating a time that is associated with the event (time of detection), an event type, a description of the event, etc. The event ID may be assigned by event-message formatter <b>110</b>, event-message distributor <b>112</b>, or some other component of security infrastructure <b>100</b> to uniquely identify each event. The location may be any physical location information such as building, area, and room number, as shown in <figref idref="DRAWINGS">FIG. 3</figref>. Other &#x201c;location&#x201d; identification may also be used such as server identification where the detected event occurred, a particular network link identification, a source of a connection, a global positioning system (GPS) coordinate and/or any other types of location identification that may be deemed appropriate. Location and time information may be important for later event analysis because other events occurring around closely related locations and around the time of the event may be critical to determining characteristics of the event, a level of seriousness, possible damage, containment actions, etc.</p>
<p id="p-0037" num="0036">Once event-message formatter <b>11</b> a generates an event-message, event-message distributor <b>112</b> may store the event-message in database <b>116</b> which may be a facility for storing event-messages thus providing for event-message persistency. The event-messages may be stored in groups where related event-messages may be stored as event-databases where each group may be identified by a name and referenced by that name. In a particular implementation, the grouping criteria may be based on topics or event-message contents. Database <b>116</b> may be implemented using memories (hard disks, optical disks, RAM, etc.) distributed logically and/or physically throughout security infrastructure <b>100</b>. Event-message distributor <b>112</b> distributes event-messages to subscribers such as security agents, security personnel and/or management personnel, for example. Thus, event-message distributor <b>112</b> may act as a source of event-messages to subscribers such as security agents <b>114</b> and actively distributes event-messages to subscribers without any action by the subscribers. Otherwise, subscribers would be burdened with a large task of monitoring for desired event-messages. For example, security infrastructure <b>100</b> may comprise many platforms (e.g., servers, mainframes, personal computers, etc.) and a particular event-message subscriber may not know where the event-message of interest is generated. Therefore, event-message distributor <b>112</b> makes transparent event-message collection and distribution processes so that event-message subscribers may focus on their assigned security issue resolution tasks.</p>
<p id="p-0038" num="0037">Event-message distributor <b>112</b> may maintain a configuration of security infrastructure <b>100</b> via a registration process, for example, so that appropriate event-message subscribers may receive subscribed-to event-messages when a relevant event occurs. An event-message subscriber may register with event-message distributor <b>112</b> by sending a registration message indicating a subscriber ID, one or more subscribed-to event-databases and desired event-message filtering criteria. The event-message filtering criteria may specify detailed subscriptions of specific event-messages within each event-database, for example. This registration information may be changed as circumstances change so that event-message distributor <b>112</b> may ensure that event-messages may be distributed to appropriate event-message subscribers in a timely manner.</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 4</figref> shows an exemplary event-message subscriber list <b>160</b> in the form of a table. Rows <b>162</b> correspond to event-databases that are deployed in security processor <b>104</b> and columns <b>164</b> correspond to the subscribers that have registered for receiving event-messages stored in the event-databases. Addresses of subscribing subscribers may be entered at the row-column intersections, or if only one address is used, then the intersections may only be an indicator of the subscription. For example, security agent <b>1</b> may subscribe to security databases <b>1</b> and <b>3</b>, while security agent <b>2</b> may subscribe to security database <b>2</b>, <b>3</b>, and n.</p>
<p id="p-0040" num="0039">Database <b>116</b> stores information in security processor <b>104</b> for its operation. While shown as a single object in <figref idref="DRAWINGS">FIG. 2</figref>, as indicated above, database <b>116</b> may be distributed in various platforms as specific implementations may require. <figref idref="DRAWINGS">FIG. 5</figref> shows that database <b>116</b> may include information such as event-message registration information <b>170</b>, event-message repository <b>172</b>, ticket repository <b>174</b>, security rule <b>176</b> and security log file <b>178</b> associated with security agents <b>114</b> discussed below, etc. Event-message repository <b>172</b> may store event-messages organized in groups as the event-databases noted above. Event-message registration information <b>170</b> may include information such as identification and locations (physical, logical or other designations) of all event-databases, event-messages, addresses of event-message subscribers, event-message subscriptions such as the exemplary event-message subscriber list <b>160</b> shown in <figref idref="DRAWINGS">FIG. 5</figref>, and other similar or related types of information</p>
<p id="p-0041" num="0040">Event-message repository <b>172</b> may include all event-messages generated within security processor <b>104</b> that are still alive (i.e., not deleted). The life span of each event-message may be managed by a security agent <b>114</b>, for example. As noted above, while a particular event-message may be erased, an associated ticket that has incorporated the erased event-message and analysis results or historical record related to that event-message may continue to persist in security processor <b>104</b>. Thus, if needed, an event-message may be kept alive for as long as required to resolve any security issues.</p>
<p id="p-0042" num="0041">Ticket repository <b>174</b> stores all opened and closed tickets until erased. As noted above, tickets may be saved for multiple years depending on security issue analysis requirements. As with event-messages, their life span from &#x201c;opened&#x201d; to &#x201c;closed&#x201d; are managed by the security agent <b>114</b> that opened the ticket.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 6</figref> shows a flowchart <b>130</b> of an exemplary process of security processor <b>104</b>. In step <b>13</b> <b>2</b>, the process determines whether an event has been received from monitor system <b>106</b>. If an event has been received, the process goes to step <b>134</b>; otherwise, the process returns to step <b>132</b>. In step <b>134</b>, the process formats the received event into an event-message and distributes the event-message to event-message subscribers such as security agents <b>114</b> or security personnel, and the process goes to step <b>136</b>. In step <b>136</b>, security agents <b>114</b> analyze the event corresponding to the event-message, and the process goes to step <b>138</b>. In step <b>138</b>, the process determines if security processor <b>104</b> is to be turned off or otherwise rendered inoperative. If security processor <b>104</b> is to be turned off, the process goes to step <b>140</b> and ends; otherwise, the process returns to step <b>132</b>.</p>
<p id="p-0044" num="0043">Security agents <b>114</b> may perform the functions of step <b>136</b> shown in <figref idref="DRAWINGS">FIG. 6</figref> using inference engines and rules to handle every security event-message. Security agents <b>114</b> may be organized in an hierarchical manner where higher level security agents <b>114</b> handle more global patterns based on subscribed event-messages generated by lower level security agents <b>114</b> that are designed to monitor specific patterns of events occurring in security processor <b>104</b>.</p>
<p id="p-0045" num="0044">Each security agent <b>114</b> may be associated with a security rule set stored in security rule repository <b>176</b>. Security rules define methods and procedures that are needed for security agents <b>114</b> to perform monitoring and analysis functions. For example, security rules may define dribble attack patterns. Security agents <b>114</b> may register with event-message distributor <b>112</b> to subscribe to the relevant event-databases with appropriate filters so that when an event-message corresponding to selected event-database is generated, subscribing security agents <b>114</b> may be alerted. When one or more event-messages are received, security agents <b>114</b> may process the event-messages based on information in the associated event-messages; request service system <b>109</b> for additional information, create or update a ticket, take containment actions and alerting security and/or management personnel, for example. While <figref idref="DRAWINGS">FIG. 5</figref> shows security rule repository <b>176</b> as a single item in database <b>116</b>, they may be distributed on many different platforms interconnected by network <b>102</b>, for example.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 7</figref> shows an exemplary block diagram of security agent <b>114</b> that may include controller <b>202</b> and memory <b>204</b> coupled together via bus <b>212</b>. Network interface <b>120</b> is shown in dotted lines because controller <b>202</b> may access network <b>102</b> via network interface <b>120</b> to communicate with other portions of security infrastructure <b>100</b>. While <figref idref="DRAWINGS">FIG. 7</figref> shows the above components in a hardware bus architecture format as an example, other hardware architectures may be used and the functions of security agent <b>114</b> may be divided differently among the components. These components may be constructed using FPGAs, PLAs, ASICs, etc. Additionally, security agent <b>114</b> may be partly or completely implemented in software as programs executed by one or more general or special purpose computers such as microprocessors, personal computers, servers, mainframes, etc.</p>
<p id="p-0047" num="0046">Security agents <b>114</b> may perform automated analysis processes for all possible event-messages. Some of the security agents may process event-messages generated by monitor system <b>106</b> or other security agents while others take actions based on ticket-events generated by ticketing system <b>107</b>. Thus, many instances of security agents <b>114</b> may be running in security processor <b>104</b> to process event-messages and ticket-events, which may include open, close and/or update of tickets, each addressing a different security issue.</p>
<p id="p-0048" num="0047">As noted above, security agents <b>114</b> may be organized hierarchically where each of the security agents <b>114</b> may be tailored to analyze specific security issues that may arise. Thus, each of the security agents may subscribe to a very small subset of all possible event-messages and have specific logic to analyze the targeted security issue. High level security agents <b>114</b> may be created to track activities of multiple security agents <b>114</b> and recognize certain patterns of security issues so that multiple opened tickets may be associated with one security breach. However, for ease of understanding, the following discussion describes the function of all security agents <b>114</b> as a whole even though any particular security agent <b>114</b> may not perform all the functions described below, but performs functions that contribute to the overall functions of all the security agents <b>114</b>. New security agents <b>114</b> may be designed to address newly identified security issues. Thus, security agents <b>114</b> may be created, updated, and/or deleted based on application needs that may be reflected by a number of security issues in the security infrastructure <b>100</b>, for example.</p>
<p id="p-0049" num="0048">As noted above, when an event incident is detected by monitor system <b>106</b>, event-message formatter <b>110</b> formats the event received from monitor system <b>106</b> and generates an event-message for distribution by event-message distributor <b>112</b>. The event-message may be stored in database <b>116</b> and transmitted/or to all subscribers.</p>
<p id="p-0050" num="0049">When an event-message is received via network interface <b>120</b>, controller <b>202</b> may first determine whether this event-message is related to a security issue already associated with an existing ticket. For example, as discussed below, a ticket may identify one or more of location, event type, event-database, etc. that may encompass a set of event-messages. Thus, when an event-message is received, controller <b>202</b> may search ticket repository <b>174</b> to identify existing open tickets that should be updated with the received event. As discussed below, updating a ticket activates the security agent <b>114</b> that initially opened the updated ticket to perform continued analysis of the updated ticket. Thus, if the received event-message is already encompassed by an existing ticket, then the existing ticket is updated and no further processing of the event-message is needed.</p>
<p id="p-0051" num="0050">If an existing ticket that encompasses the received event-message is not found, the controller <b>202</b> may determine whether the event-message is associated with a legitimate activity by retrieving related information from memory <b>204</b> or other systems. For example, if a particular security agent <b>114</b> is responsible for authenticating and authorizing access to a high security door, valid access codes such as badge-IDs may be stored in memory <b>204</b> that is local to the particular security agent <b>114</b>. Thus, when an event-message for accessing the door is received by the responsible security agent <b>114</b>, controller <b>202</b> of the particular security agent <b>114</b> may efficiently compare the received security code (e.g., badge-ID) with the valid security code stored in memory <b>204</b> to authenticate the attempted access. If the access is authenticated and authorized, then controller <b>202</b> may grant access, log the access in security log file <b>178</b> and clear the event. However, if the security code was determined to be invalid, controller <b>202</b> may open a ticket having a preset priority, such as a lowest priority, record the attempted invalid access so that further processing may be performed in connection with the opened ticket.</p>
<p id="p-0052" num="0051">Another example of legitimate testing may be when an event-message was generated based on an abnormal number of lost packets at a particular router or server. Controller <b>202</b> may retrieve a repair or maintenance schedule from memory <b>204</b> or other designated locations such as database <b>116</b> and determine whether the particular router or server identified in the event-message is identified in one of the legitimate activity lists. A legitimate activity may be a pre-scheduled maintenance activity, for example. The abnormal number of drop packets may be part of a legitimate maintenance process and thus the associated event-message may be cleared without further analysis. However, if the event-message is not determined to be associated with a legitimate process, then controller <b>202</b> may open a new ticket to initiate detailed tracking and processing of the event. The priority of the ticket may be set to a lowest level at the time the ticket is opened but the final priority may be set based on future analysis.</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 8</figref> shows an exemplary ticket <b>280</b> that may store information such as parameters and various logs in connection with one or more event-messages. For example, ticket <b>280</b> may include ticket identification (ID) which may be used to retrieve the ticket from ticket repository stored in database <b>116</b>. Ticket <b>280</b> may also included a ticket-open time stamp <b>12</b> that records the date and time when ticket <b>280</b> was opened; a priority level of ticket <b>280</b> that may be set based on the criticality of the security breach; location information of associated event-messages, one or more related event-message IDs that caused ticket <b>280</b> to be processed by one or more security agents <b>114</b>; assignment information including one or more security personnel assigned to process ticket <b>280</b>, an assignment time-stamp indicating the date and time when ticket <b>280</b> was assigned to the security personnel; a probable cause that indicates likely cause (e.g., dribble attack) of the security breach; a ticket status that indicates a disposition of ticket <b>280</b> whether the ticket is new and not-yet-assigned, whether an assigned security personnel has acknowledged receipt (i.e., pickup), whether security issues related to ticket <b>280</b> have been resolved, or whether ticket <b>280</b> has been closed; and a ticket type such as access, equipment failure, etc.</p>
<p id="p-0054" num="0053">Ticket <b>280</b> may serve as a repository for related history in connection with the event-message such as various types of logs. For example, an event-message log may record history of event-messages that are considered to be interconnected with the security issue associated with ticket <b>280</b>; an event resolution log may record a history of resolved security issues in connection with event ticket <b>280</b>; a containment log may record various actions that were taken apparently to control the situation; an escalation log may record various escalation of past processing of ticket <b>280</b>; a related ticket log may record other tickets that have been determined to be connected with ticket <b>280</b>, etc. Further, ticket <b>280</b> may provide a place where security personnel may enter comments or provide pointers to special steps that may be taken under specified circumstances in connection with ticket <b>280</b>. Thus, a ticket may be viewed as a general repository for a particular security issue that was opened in response to an event-message.</p>
<p id="p-0055" num="0054">While the above discussion implies that security agents <b>114</b> directly manipulates contents of a ticket, security agents <b>114</b> may be relieved from the details of directly processing tickets by ticketing system <b>107</b>. Ticketing system <b>107</b> may provide ticket-handling services such as opening a new ticket, updating a ticket, ensuring that security personnel are timely processing a ticket, etc. Thus, security agents <b>114</b> are provided a set of ticket related commands that may be associated with parameters for managing ticket contents. For example, ticketing system <b>107</b> may initialize a ticket based on information provided by a security agent <b>114</b> such as priority, location, probable cause, assigned security personnel, data to be logged, etc. based on security rules associated with the security agent <b>114</b>.</p>
<p id="p-0056" num="0055">Security personnel may also use ticketing system services to process tickets. For example, security personnel may command ticketing system <b>107</b> to enter information such as status, log data, comments, new assigned security personnel, etc. Thus, ticket contents may be managed by security agents <b>114</b> and/or security personnel via ticketing system <b>107</b>. Ticketing system <b>107</b> produces a ticket event for every ticket change. As discussed below, ticket events trigger security agent analysis activity. Additionally, security agent <b>114</b> monitors security personnel activity with respect to tickets such as whether the assigned security personnel has picked up an assigned ticket. Ticketing system <b>107</b> provides feedback to security agents <b>114</b> of all manual activities related to tickets.</p>
<p id="p-0057" num="0056">Returning to activities of controller <b>202</b> after opening a ticket, controller <b>202</b> may assign a priority level of a newly opened ticket. Preferably, a ticket is opened with a lowest priority until more information is collected to determine the security situation. For example, additional context may be needed to distinguish whether the event-message is due to unintentional mistake or intentional break in. Thus, controller <b>202</b> may collect event-messages associated with a portion of monitor system <b>106</b> monitoring one or more locations surrounding a location of the initial event-message for any event-messages associated with damages (e.g., equipment failure, power done, additional cyber attacks) that occurred around the same time, for example. If event-messages indicating damage is found or received a short time later, then controller <b>202</b> may conclude that a security breach is detected and all collected information may be logged in the newly created ticket.</p>
<p id="p-0058" num="0057">If a security breach is declared, the controller <b>202</b> may attempt to contain the security breach. For example, if a DOS attack is detected, controller <b>202</b> may command the particular servers to redirect or deny the connection that have been identified as sources of DOS attacks. If a physical access security breach such as illegal door entry is detected by motion detectors, for example, controller <b>202</b> may command a lockdown procedure where access to doors surrounding a breached building area are denied for all security codes and appropriate security personnel is alerted to physically secure the affected areas.</p>
<p id="p-0059" num="0058">In either case, controller <b>202</b> may perform impact assessment of the security breach and set the ticket priority based on the assessment. As discussed below, higher ticket priority may increase security personnel focus on the identified security issue so that more human resources may be devoted to resolving the related security issues, for example.</p>
<p id="p-0060" num="0059">If no equipment failure or damage event-messages are received to support a security breach, controller <b>202</b> may retrieve via ticketing system <b>107</b> all tickets associated with the event-messages of the same type, location, etc. to analyze whether a long term pattern (e.g., 3 times in a week) may be recognized that indicate a possible dribble attack. If dribble and/or other types of attack patterns are detected, controller <b>202</b> may attempt to contain the attack similar to that discussed above. After the above discussed analysis (i.e., whether a recognized security breach, dribble attack, etc. and/or whether the recognized security issue is containable or not) is completed, controller <b>202</b> may update the ticket based on the analysis performed so far and then clear the event-message by deleting the event-message. However, the event-message remains in event-message repository <b>172</b> for future processing as needed.</p>
<p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. 9</figref> shows a flowchart <b>250</b> of an exemplary process for the analyzed event step <b>136</b> shown in flowchart <b>130</b> of <figref idref="DRAWINGS">FIG. 6</figref>. In step <b>254</b>, the process determines whether a ticket already exists that is associated with an event-message. If a ticket already exists, the process goes to step <b>256</b>; otherwise, the process goes to step <b>258</b>. In step <b>256</b>, the process updates the ticket history and other parameters of the ticket as appropriate and goes to step <b>266</b>. In step <b>258</b>, the process determines whether the event is legitimate activity by checking information such as authentication/authorization or pre-scheduled maintenance activity, for example. If the event is legitimate, the process goes to step <b>266</b>; otherwise, the process goes to step <b>262</b>.</p>
<p id="p-0062" num="0061">In step <b>262</b>, the process opens a lowest priority ticket, for example, and goes to step <b>264</b>. In step <b>264</b>, the process performs context analysis and goes to step <b>266</b>. In step <b>266</b> the process clears the event and goes to step <b>268</b> which returns to step <b>138</b> of <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. 10</figref> shows a flowchart <b>300</b> of a process that performs the context analysis step <b>264</b> shown in <figref idref="DRAWINGS">FIG. 9</figref>. In step <b>302</b>, the process determines whether related event-messages that may indicate damage such as an equipment failure have been received around the same time and same location/source. If the damage indicating event-messages have been received and a security breach pattern is recognized, the process goes to step <b>308</b>; otherwise, the process goes to step <b>304</b>. In step <b>304</b>, the process collects all tickets related to this location, for example, and goes to step <b>306</b>. In step <b>306</b>, the process determines whether a dribble attack pattern may be recognized. If a dribble attack is recognized, the process goes to step <b>308</b>; otherwise, the process goes to step <b>316</b>.</p>
<p id="p-0064" num="0063">In step <b>308</b>, the process determines whether the security issue identified in step <b>302</b> is containable. If containable, the process goes to step <b>310</b>; otherwise, the process goes to <b>314</b>. In step <b>310</b>, the process performs a prescribed containment process (e.g., lockdown of breached area, deny access from a server that owns an identified source address, etc.) and goes to step <b>312</b>. In step <b>312</b>, the process verifies whether the containment process was successful. If the containment process was successful, the process goes to step <b>316</b>; otherwise, the process goes to step <b>314</b>. In step <b>314</b>, the process assesses the impact of the security issue and sets the ticket priority (e.g., security breach has priority <b>1</b> and <b>2</b> while dribble attack has priority <b>3</b>) and goes to step <b>316</b>. In step <b>318</b>, the process updates ticket information by adding to the ticket history, for example, and goes to step <b>320</b> which goes to step <b>266</b> of flowchart <b>250</b> shown in <figref idref="DRAWINGS">FIG. 9</figref>.</p>
<p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. 11</figref> shows a flowchart <b>350</b> of an exemplary process for recognizing equipment failure or security breach step <b>302</b> of flowchart <b>300</b> shown in <figref idref="DRAWINGS">FIG. 10</figref>. In step <b>356</b>, all tickets related to the same location as the current event-message and created in the past few months are collected, for example, and the process goes to step <b>358</b>. In step <b>358</b>, various patterns are applied to information contained in the collected tickets. If the information match one or more patterns corresponding to equipment failure or a security breach is recognized, the process goes to step <b>366</b> which in turn goes to step <b>308</b> of flowchart <b>300</b> shown in <figref idref="DRAWINGS">FIG. 10</figref>; otherwise, the process goes to step <b>364</b> which in turn goes to step <b>304</b> of flowchart <b>300</b> shown in <figref idref="DRAWINGS">FIG. 10</figref>.</p>
<p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. 12</figref> shows a block diagram of ticketing system <b>107</b> shown in <figref idref="DRAWINGS">FIG. 2</figref>. Ticketing system <b>107</b> may include a controller <b>450</b>, a memory/database <b>452</b> that may store tickets and services (e.g., open, update or close ticket), for example, and operator interface <b>454</b>. All of these components may be coupled together via a bus <b>456</b>. <figref idref="DRAWINGS">FIG. 12</figref> also shows network interface <b>120</b> in dotted lines that may be accessed by controller <b>450</b> and operator interface <b>454</b>. As discussed in connection with previous hardware block diagrams, while <figref idref="DRAWINGS">FIG. 12</figref> shows the components in a hardware bus architecture format, other architectures may be used, for example. These components may be constructed using FPGAs, PLAs, ASICs, etc. Additionally, ticketing system <b>107</b> may be implemented partly or completely using software such as programs that are executed by one or more general or special computes such as personal computers, servers, mainframes, etc.</p>
<p id="p-0067" num="0066">Controller <b>450</b> manages tickets that are opened, updated and closed by security agents <b>114</b> in connection to analysis of security issues. When any ticket is changed (e.g., created, updated, closed), controller <b>450</b> generates a ticket-event to alert security agents <b>114</b>, security personnel and/or management personnel via network interface <b>120</b>, for example.</p>
<p id="p-0068" num="0067">When ticket event-messages are received, the security agent <b>114</b> may notify personnel (e.g., management, security guard, police) through email or pager, for example. <figref idref="DRAWINGS">FIG. 13</figref> shows an exemplary notification list in table format. Rows <b>462</b> represent the personnel that has subscribed to the ticket and column <b>464</b> indicates one or more criteria that specify the conditions when the subscriber should be notified, and columns <b>466</b> indicate the contact information for each subscriber such as email address, telephone number, etc. For example, John Doe desires to be notified when the ticket status is new or closed and when the ticket priority is between 1 and 3 inclusively. John Doe's contact information is an email address and a pager number.</p>
<p id="p-0069" num="0068">More complex notification criteria may be provided such as directing the notification message, such as an alert, to different contact destinations for different ticket conditions. For example, the criteria may specify contacting using email if the ticket status is set to close, but contacting using pager if priority is 1 or the ticket status is new. The security agent <b>114</b> may determine if any of the criteria is met, and if met, transmit alert messages to personnel via network interface <b>120</b> by sending e-mail, pages, facsimile, telephone call, etc. as may be specified by the criteria and associated contact information.</p>
<p id="p-0070" num="0069">If the ticket-event is associated with a ticket having a lowest priority, security agent <b>114</b> may close the ticket without further activities. Closing a ticket may not be identical to deleting a ticket. Closing a ticket may involve security agent <b>114</b> setting a timer in connection with the ticket and upon expiration of the timer, the ticket may be placed in long term storage. The timer may have values in terms of days such as 120 days, for example. If the ticket has a priority higher than the lowest priority, security agent <b>114</b> may determine whether the ticket is a new ticket. If the ticket is not a new ticket, it may further determine whether the ticket status indicates that the ticket has been resolved.</p>
<p id="p-0071" num="0070">A ticket is resolved when the related security issue has been satisfactorily handled by the assigned security personnel. For example, the assigned security personnel may change the status of the ticket to resolve via operator interface <b>454</b>. If the ticket has been resolved, security agent <b>114</b> may close the ticket and clear the ticket event-message. Otherwise, if the ticket-status indicates that the ticket has not been resolved, it may clear the ticket-event.</p>
<p id="p-0072" num="0071">If the ticket is a new ticket, security agent <b>114</b> may send the ticket to the assigned security personnel to resolve the issue. Particular security personnel may be assigned to tickets based on assigned responsibility, expertise and location. Security agent <b>114</b> may make any required decisions and update the ticket assignment to send an alert message to the assigned security personnel through operator interface <b>454</b>.</p>
<p id="p-0073" num="0072">After a delay of a predetermined amount of time, security agent <b>114</b> may determine whether the ticket has been picked up based on whether a pickup ticket-event is received. If the pickup ticket-event is not received, then security agent <b>114</b> may escalate the ticket by sending alert messages via email or pager to higher levels of management so that the lack of attention may be corrected.</p>
<p id="p-0074" num="0073">After the ticket has been picked up by the assigned security personnel, security agent <b>114</b> may monitor the progress of the ticket processing. For example, a timer may be set within which the assigned security personnel must resolve or properly dispose of the ticket. If after a predetermined time has elapsed and an expected ticket-event is not receive to indicate that the ticket is resolved, then security agent <b>114</b> may again escalate to even higher levels management. If the ticket is resolved within the allocated time, security agent <b>114</b> may clear the ticket-event.</p>
<p id="p-0075" num="0074"><figref idref="DRAWINGS">FIG. 14</figref> shows a flowchart <b>500</b> of an exemplary security agent ticket-event process. In step <b>502</b>, the process determines whether a ticket event has occurred. If a ticket-event has occurred, the process goes to step <b>504</b>; otherwise, the process returns to step <b>502</b>. In step <b>504</b>, the process notifies subscribers to the ticket-event and goes to step <b>506</b>. In step <b>506</b>, the process determines whether the ticket has a lowest priority. If the ticket has lowest priority, the process goes to step <b>512</b>; otherwise, the process goes to step <b>508</b>. In step <b>508</b>, the process determines whether the ticket is a new ticket. If the ticket is not a new ticket, the process goes to step <b>510</b>; otherwise, the process goes to step <b>514</b>. In step <b>510</b>, the process determines whether the ticket has been resolved. If the ticket has been resolved, the process goes to step <b>512</b>; otherwise, the process goes to step <b>530</b>. In step <b>512</b>, the process closes the ticket and goes to step <b>530</b>.</p>
<p id="p-0076" num="0075">In step <b>514</b>, the process sends the ticket to responsible personnel such as assigned security personnel or management personnel and waits a predetermined amount of delay time. After the delay time, the process goes to step <b>516</b>. In step <b>516</b>, the process determines whether the ticket has been picked up by the assigned security personnel to the ticket, for example. If the ticket has been picked up by the assigned security personnel, the process goes to step <b>520</b>; if the ticket has not been picked up, the process goes to step <b>518</b>. In step <b>518</b>, the process escalates the ticket by alerting additional personnel based on subscription criteria such as the escalation event, and returns to step <b>514</b>.</p>
<p id="p-0077" num="0076">In step <b>520</b>, the process monitors the progress of the ticket-event and goes to step <b>522</b>. In step <b>522</b>, the process delays for a predetermined amount of time and goes to step <b>524</b>. In step <b>524</b>, the process determines whether the ticket has been resolved. If the ticket has been resolved, the process goes to step <b>530</b>; otherwise, the process goes to step <b>526</b>. In step <b>526</b>, the process escalates the ticket by alerting personnel that should be alerted based on subscription criteria, escalation event and the process returns to step <b>520</b>. In step <b>530</b>, the process clears the ticket-event and goes to step <b>532</b>. In step <b>532</b>, the process determines whether ticket system <b>107</b> has been turned off or otherwise disabled. If the ticket tracker has been turned off, the process goes to step <b>534</b> and ends; otherwise, the process returns to step <b>502</b>.</p>
<p id="p-0078" num="0077">While the invention has been described in conjunction with exemplary embodiments, these embodiments should be viewed as illustrative, not limiting. Various modifications, substitutes or the like are possible within the spirit and scope of the invention.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for operating a security infrastructure, comprising:
<claim-text>receiving, via a processor, data in response to a first event in the security infrastructure;</claim-text>
<claim-text>formatting, via the processor, the data into an event-message having a common format within the security infrastructure; and</claim-text>
<claim-text>distributing, via the processor, the event-message to a processing entity of a plurality processing entities of the security infrastructure, wherein the processing entity is assigned to analyze a topic of the event-message, wherein at least two of the plurality processing entities are assigned to a different security issue, wherein each of the processing entities comprises a computing device and comprises a security agent that uses an inference engine for analyzing a security issue, wherein the analyzing the security issue comprises identifying a pattern in a plurality of event-messages.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>searching a ticket repository for an associated ticket, wherein the associated ticked is a ticket that is associated with the event-message when the event-message corresponds to the security issue; and</claim-text>
<claim-text>updating information in the associated ticket based on the event-message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising:
<claim-text>opening a new ticket based on the event-message when the associated ticket is not found in the ticket repository; and</claim-text>
<claim-text>initializing a parameter of the new ticket based on the security issue.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, further comprising:
<claim-text>collecting further events occurring after the first event.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising:
<claim-text>identifying a containment action when the security issue is identified in analyzing the security issue; and</claim-text>
<claim-text>performing the containment action, when the containment action is identified.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising:
<claim-text>assessing an impact of the first event when no containment action is identified; and</claim-text>
<claim-text>updating information in the ticket associated with the event-message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising:
<claim-text>analyzing a ticket history of the associated ticket to identify the pattern, wherein the pattern is associated with a dribble attack;</claim-text>
<claim-text>identifying a containment action when the dribble attack is identified in the analyzing of the ticket history;</claim-text>
<claim-text>performing the containment action that is identified; and</claim-text>
<claim-text>updating information in the associated ticket.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, further comprising:
<claim-text>notifying first personnel when the new ticket is opened;</claim-text>
<claim-text>notifying the first personnel when information of the associated ticket is updated;</claim-text>
<claim-text>closing the associated ticket when the associated ticket has a lowest priority; and</claim-text>
<claim-text>closing the new ticket when the new ticket has a lowest priority.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:
<claim-text>sending the new ticket to a security personnel based on the parameter of the new ticket; and</claim-text>
<claim-text>monitoring to confirm a receipt of the new ticket by the security personnel.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:
<claim-text>escalating the new ticket by alerting other personnel until the receipt of the new ticket is confirmed; and</claim-text>
<claim-text>monitoring the new ticket until a status of the new ticket indicates that the new ticket is resolved.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the escalating and the monitoring comprise:
<claim-text>a. delaying a predetermined amount of time, wherein the predetermined amount of time is for alerting the other personnel when the new ticket is not received;</claim-text>
<claim-text>b. checking if the security personnel has received the new ticket;</claim-text>
<claim-text>c. alerting the other personnel when the new ticket is not received by the security personnel; and</claim-text>
<claim-text>d. repeating steps a-c until the new ticket is received by the security personnel.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein
<claim-text>the predetermined amount of time is changed for each iteration; and</claim-text>
<claim-text>alerting the other personnel comprises alerting different ones of the other personnel for each iteration.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the escalating and the monitoring further comprise:
<claim-text>a. delaying a predetermined amount of time, wherein the predetermined amount of time is for alerting the other personnel when the new ticket is not resolved;</claim-text>
<claim-text>b. checking if the new ticket has been resolved;</claim-text>
<claim-text>c. alerting the other personnel when the new ticket is not resolved; and</claim-text>
<claim-text>d. repeating steps a-c until the new ticket is resolved.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein
<claim-text>the predetermined amount of time is changed for each iteration; and</claim-text>
<claim-text>alerting the other personnel comprises alerting different ones of the other personnel for each iteration.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A computer readable medium storing a plurality of instructions which, when executed by a processor, cause the processor to perform operations for a security infrastructure, the operations comprising:
<claim-text>receiving data in response to a first event in the security infrastructure;</claim-text>
<claim-text>formatting the data into an event-message having a common format within the security infrastructure; and</claim-text>
<claim-text>distributing the event-message to a processing entity of a plurality processing entities of the security infrastructure, wherein the processing entity is assigned to analyze a topic of the event-message, wherein at least two of the plurality processing entities are assigned to a different security issue, wherein each of the processing entities comprises a computing device and comprises a security agent that uses an inference engine for analyzing a security issue, wherein the analyzing the security issue comprises identifying a pattern in a plurality of event-messages.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The computer readable medium of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:
<claim-text>searching a ticket repository for an associated ticket, wherein the associated ticket is a ticket that is associated with the event-message when the event-message corresponds to the security issue;</claim-text>
<claim-text>updating information in the associated ticket based on the event-message;</claim-text>
<claim-text>opening a new ticket based on the event-message when the associated ticket is not found in the ticket repository; and</claim-text>
<claim-text>initializing a parameter of the new ticket based on the security issue.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The computer readable medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising:
<claim-text>collecting further events occurring after the first event;</claim-text>
<claim-text>analyzing the first event and the further events to identify the pattern, wherein the pattern is associated with a known security issue;</claim-text>
<claim-text>identifying a containment action when the known security issue is identified in the analyzing the first event;</claim-text>
<claim-text>performing the containment action, when the containment action is identified;</claim-text>
<claim-text>assessing an impact of the first event when no containment action is identified; and</claim-text>
<claim-text>updating information in the ticket associated with the event-message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The computer readable medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, further comprising:
<claim-text>analyzing a ticket history of the associated ticket to identify the pattern, wherein the pattern is associated with a dribble attack;</claim-text>
<claim-text>identifying a containment action when the dribble attack is identified in the analyzing of the ticket history;</claim-text>
<claim-text>performing the containment action that is identified; and</claim-text>
<claim-text>updating information in the associated ticket.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The computer readable medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, further comprising:
<claim-text>notifying first personnel when the new ticket is opened;</claim-text>
<claim-text>notifying the first personnel when information of the associated ticket is updated;</claim-text>
<claim-text>closing the associated ticket when the associated ticket has a lowest priority;</claim-text>
<claim-text>closing the new ticket when the new ticket has a lowest priority;</claim-text>
<claim-text>sending the new ticket to a security personnel based on the parameter of the new ticket;</claim-text>
<claim-text>monitoring to confirm a receipt of the new ticket by the security personnel;</claim-text>
<claim-text>escalating the new ticket by alerting other personnel until the receipt of the new ticket is confirmed; and</claim-text>
<claim-text>monitoring the new ticket until a status of the new ticket indicates that the new ticket is resolved.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. A security infrastructure, comprising:
<claim-text>a processor; and</claim-text>
<claim-text>a computer readable medium storing a plurality of instructions which, when executed by the processor, cause the processor to perform operations, the operations comprising:
<claim-text>receiving data in response to a first event in the security infrastructure;</claim-text>
<claim-text>formatting the data into an event-message having a common format within the security infrastructure; and</claim-text>
<claim-text>distributing the event-message to a processing entity of a plurality processing entities of the security infrastructure, wherein the processing entity is assigned to analyze a topic of the event-message, wherein at least two of the plurality processing entities are assigned to a different security issue, wherein each of the processing entities comprises a computing device and comprises a security agent that uses an inference engine for analyzing a security issue, wherein the analyzing the security issue comprises identifying a pattern in a plurality of event-messages. </claim-text>
</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
