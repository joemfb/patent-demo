<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627217-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627217</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>11579446</doc-number>
<date>20050415</date>
</document-id>
</application-reference>
<us-application-series-code>11</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2004-166397</doc-number>
<date>20040506</date>
</priority-claim>
<priority-claim sequence="02" kind="national">
<country>JP</country>
<doc-number>2004-166398</doc-number>
<date>20040506</date>
</priority-claim>
<priority-claim sequence="03" kind="national">
<country>JP</country>
<doc-number>2004-224368</doc-number>
<date>20040730</date>
</priority-claim>
<priority-claim sequence="04" kind="national">
<country>JP</country>
<doc-number>2004-260692</doc-number>
<date>20040908</date>
</priority-claim>
<priority-claim sequence="05" kind="national">
<country>JP</country>
<doc-number>2004-317425</doc-number>
<date>20041101</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>1386</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>3</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>715762</main-classification>
<further-classification>715763</further-classification>
<further-classification>715764</further-classification>
<further-classification>715765</further-classification>
<further-classification>715778</further-classification>
<further-classification>715782</further-classification>
<further-classification>715783</further-classification>
<further-classification>715804</further-classification>
</classification-national>
<invention-title id="d2e144">Window display system, window display method, program development support device, and server device</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5390295</doc-number>
<kind>A</kind>
<name>Bates et al.</name>
<date>19950200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715789</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5714971</doc-number>
<kind>A</kind>
<name>Shalit et al.</name>
<date>19980200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715804</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5920315</doc-number>
<kind>A</kind>
<name>Santos-Gomez</name>
<date>19990700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715792</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6681368</doc-number>
<kind>B1</kind>
<name>Kawabata</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715234</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>7010755</doc-number>
<kind>B2</kind>
<name>Anderson et al.</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715778</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7068266</doc-number>
<kind>B1</kind>
<name>Ruelle</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345418</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>7123945</doc-number>
<kind>B2</kind>
<name>Kokubo</name>
<date>20061000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>455566</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>8082517</doc-number>
<kind>B2</kind>
<name>Ben-Shachar et al.</name>
<date>20111200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715781</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>8276095</doc-number>
<kind>B2</kind>
<name>Cutler et al.</name>
<date>20120900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715804</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2001/0043235</doc-number>
<kind>A1</kind>
<name>Best et al.</name>
<date>20011100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2002/0054137</doc-number>
<kind>A1</kind>
<name>Dvorak</name>
<date>20020500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345804</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2002/0171682</doc-number>
<kind>A1</kind>
<name>Frank et al.</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345790</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2003/0058286</doc-number>
<kind>A1</kind>
<name>Dando</name>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345853</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2005/0010876</doc-number>
<kind>A1</kind>
<name>Robertson et al.</name>
<date>20050100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715782</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2005/0149879</doc-number>
<kind>A1</kind>
<name>Jobs et al.</name>
<date>20050700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715796</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2005/0188329</doc-number>
<kind>A1</kind>
<name>Cutler et al.</name>
<date>20050800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715804</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2008/0126955</doc-number>
<kind>A1</kind>
<name>Takatoshi</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715762</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2010/0182506</doc-number>
<kind>A1</kind>
<name>Bae et al.</name>
<date>20100700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>348564</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2011/0271226</doc-number>
<kind>A1</kind>
<name>Janssen et al.</name>
<date>20111100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715794</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2012/0304112</doc-number>
<kind>A1</kind>
<name>Cutler et al.</name>
<date>20121100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715788</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>CN</country>
<doc-number>1325056</doc-number>
<date>20011200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>EP</country>
<doc-number>0 657 799</doc-number>
<date>19950600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>JP</country>
<doc-number>07-200222</doc-number>
<date>19950800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>JP</country>
<doc-number>2001-034250</doc-number>
<date>20010200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>JP</country>
<doc-number>2003-186593</doc-number>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>JP</country>
<doc-number>2003186593</doc-number>
<kind>A</kind>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-cpc-text>G06F 3/00</classification-cpc-text>
</us-citation>
<us-citation>
<nplcit num="00027">
<othercit>James Henriksen; Windows-based Animation With Proof; 1998; IEEE; pp. 241-247.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00028">
<othercit>Voth et al.; Distributed Application Development for Three-Tier Architecture: Microsoft on Window DNA; 1998; IEEE; pp. 41-45.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00029">
<othercit>Scott Kronick, translated by Shiki Okasaka, Netscape Hand Book Nihongo Yaku, Kabushiki Kaisha Sofutowea Japan, Edition: Aug. 1, 1995, pp. 15-19.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00030">
<othercit>How to Use Internal Frames, (http://java.sun.com/docs/books/tutorial/uiswing/components/internalframe.html) [downloaded Sep. 12, 2006] (published Oct. 2001).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00031">
<othercit>How to Use Tabbed Panes, (http://java.sun.com/docs/books/tutorial/uiswing/components/tabbedpane.html) [downloaded Oct. 4, 2006] (published Oct. 2001).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00032">
<othercit>IT: Insider's Computer Dictionary [MDI] (http://www.atmarkit.cojp/icd/root/72/5787072.html), and About the Multiple Docment Interface (http://windowssdk.msdn.microsoft.com/en-usilibrary/ms644908.aspx) which corresponds to IT: Insider's Computer Dictionary [MDI} downloaded Oct. 4, 2006] (last update May 29, 2003).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00033">
<othercit>How to Use Internal Frames, (http://java.sun.com/docs/books/tutorial/uiswing/components/internalframe.html) [downloaded Sep. 12, 2006].</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00034">
<othercit>How to Use Tabbed Panes, (http://java.sun.com/docs/books/tutorial/uiswing/components/tabbedpane.html) [downloaded Oct. 4, 2006].</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00035">
<othercit>IT: Insider's Computer Dictionary [MDI] (http://www.atmarkit.co.jp/icd/root/72/5787072.html), and About the Multiple Docment Interface (http://windowssdk.msdn.microsoft.com/en-us/library/ms644908.aspx) which corresponds to IT: Insider's Computer Dictionary [MDI} [downloaded Oct. 4, 2006].</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00036">
<othercit>European Search Report issued May 25, 2010 in European Application No. 05730578.1.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00037">
<othercit>(Japanese) Flash 4.0a Read Me, Last Update: Jan. 20, 2000 15: 10 (Printed out on Apr. 2, 2007), (English) Adobe-Tech Note: Flash 4.0a Release Macintosh Only-Read Me, Url: http://www.adobe.com/cfusion/knowledgebase/index.cfm?id=tn<sub>&#x2014;</sub>14241 Last Update: Apr. 18, 2000 (downloaded on Apr. 2, 2007).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>12</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>715781-784</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715764-769</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715762</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715763</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715804</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715778</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>19</number-of-drawing-sheets>
<number-of-figures>21</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20080126955</doc-number>
<kind>A1</kind>
<date>20080529</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Takatoshi</last-name>
<first-name>Yanase</first-name>
<address>
<city>Hyogo</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Takatoshi</last-name>
<first-name>Yanase</first-name>
<address>
<city>Hyogo</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Wenderoth, Lind &#x26; Ponack, L.L.P.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<examiners>
<primary-examiner>
<last-name>Pham</last-name>
<first-name>Linh K</first-name>
<department>2174</department>
</primary-examiner>
</examiners>
<pct-or-regional-filing-data>
<document-id>
<country>WO</country>
<doc-number>PCT/JP2005/007307</doc-number>
<kind>00</kind>
<date>20050415</date>
</document-id>
<us-371c124-date>
<date>20061102</date>
</us-371c124-date>
</pct-or-regional-filing-data>
<pct-or-regional-publishing-data>
<document-id>
<country>WO</country>
<doc-number>WO2005/109176</doc-number>
<kind>A </kind>
<date>20051117</date>
</document-id>
</pct-or-regional-publishing-data>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Provided is a window display system and the like, in which plural window structures are switched to be displayed on a single window. An event processing program is associated with a first window structure, and this first window structure is assigned to a basic window. By executing an event processing program, a second window structure is assigned to the basic window. By changing or updating the basic window, or by assigning the second window structure to the basic window, a drawing window is drawn. On the single drawing window, the first and second window structures and are switched to be displayed. The drawing of the drawing window is caused by window size change, window movement, change of overlapping window position, window visualization, invalidation of window drawing area, or window color change.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="178.22mm" wi="155.19mm" file="US08627217-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="217.25mm" wi="152.99mm" orientation="landscape" file="US08627217-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="219.29mm" wi="124.12mm" file="US08627217-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="189.23mm" wi="154.09mm" file="US08627217-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="236.47mm" wi="161.88mm" file="US08627217-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="194.73mm" wi="157.82mm" file="US08627217-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="210.48mm" wi="155.96mm" file="US08627217-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="215.14mm" wi="153.59mm" file="US08627217-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="230.38mm" wi="155.45mm" file="US08627217-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="187.20mm" wi="154.60mm" file="US08627217-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="214.63mm" wi="157.31mm" file="US08627217-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="168.91mm" wi="158.67mm" file="US08627217-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="185.84mm" wi="148.42mm" file="US08627217-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="188.38mm" wi="153.08mm" file="US08627217-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="197.95mm" wi="157.48mm" file="US08627217-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="82.72mm" wi="152.91mm" file="US08627217-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="204.47mm" wi="160.61mm" file="US08627217-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="80.01mm" wi="152.57mm" file="US08627217-20140107-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="198.97mm" wi="161.12mm" file="US08627217-20140107-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="169.33mm" wi="125.56mm" orientation="landscape" file="US08627217-20140107-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">TECHNICAL FIELD</heading>
<p id="p-0002" num="0001">The present invention relates to a window display system for displaying windows on a display, and more particularly to a window display system for displaying a window under the control of a window management unit which manages multiple windows.</p>
<heading id="h-0002" level="1">BACKGROUND ART</heading>
<p id="p-0003" num="0002"><figref idref="DRAWINGS">FIG. 18</figref> is a flowchart of a window display system using a conventional method. In the conventional system, firstly a window is created or obtained (S<b>101</b>), and a structure of the window associated with an event processing program is assigned to the created window (S<b>102</b>). Next, the window is drawn on a display (S<b>103</b>), and finally the window waits for occurrence of events (S<b>104</b>). Then, when an event, such as key inputting or mouse operation, occurs (S<b>105</b><i>a</i>), the event is detected by a window management unit (S<b>105</b><i>b</i>), and the event processing program is executed (S<b>106</b>). When the event processing program completes the executing, the window merely waits again for events.</p>
<p id="p-0004" num="0003">Note that the &#x201c;structure of a window (window structure)&#x201d; is a set of display elements (data) to be displayed on the window. The expression of &#x201c;assigning a window structure to a window&#x201d; means associating the window structure with the window to be drawn. The &#x201c;drawing a window&#x201d; means displaying the window together with the window structure which is associated with the window on a display.</p>
<p id="p-0005" num="0004">As far as such a processing method of the window display system is used, a new different window needs to be display in order to display a different window structure on the window. Therefore, in a general multi-window display system <b>110</b> as shown in <figref idref="DRAWINGS">FIG. 19</figref>, not only a main window <b>111</b> but also plural sub-windows <b>112</b> are opened, and these windows are displayed by overlapping one another or switching among them.</p>
<p id="p-0006" num="0005">However, a window consumes a large amount of system resources, such as a memory. Therefore, a system having a large number of windows consumes more system resources, which is inefficient.</p>
<p id="p-0007" num="0006">On the other hand, a single-window display system, such as JAVA&#x2122; APPLET, displays a window in a browser. However, APPLET displays only a single window, but cannot display various windows by switching them.</p>
<p id="p-0008" num="0007">Furthermore, as disclosed, for example, Japanese Patent Application Laid-Open No. 2003-186593, a method of switching display contents in plural windows has been known.</p>
<p id="p-0009" num="0008">However, this conventional reference discloses that a window is drawn by switching plural windows, but window structures are not able to be switched to be displayed within a single window.</p>
<heading id="h-0003" level="1">DISCLOSURE OF INVENTION</heading>
<heading id="h-0004" level="1">Problems that Invention is to Solve</heading>
<p id="p-0010" num="0009">In view of the conventional situation, the first object of the present invention is to provide a window display system and the like capable of switching plural window structures to be displayed within a single window.</p>
<p id="p-0011" num="0010">Here, even if the above first object is achieved, it is further desirable to provide a window display system capable of parallel development using plural development personnel in order to shorten a time required for the development. For example, in program development in the above window display system and the like, it is desirable that production is performed separately by plural classes or modules (hereinafter, referred to as &#x201c;classes or the like&#x201d;).</p>
<p id="p-0012" num="0011">In view of the above, the second object of the present invention is to make it possible to perform the program development separately by plural development personnel in the above window display system and the like.</p>
<p id="p-0013" num="0012">The third object of the present invention is to enable a window itself to generate events easily in the above window display system and the like.</p>
<heading id="h-0005" level="1">Means to Solve the Problems</heading>
<p id="p-0014" num="0013">In order to achieve the first object, the first characteristics of the window display system according to the present invention are as follows: an event processing program is associated with the first window structure; this first window structure is assigned to a basic window; the second window structure is assigned to the basic window by execution of the event processing program; a drawing window is drawn by changing or updating the basic window or by assigning the second window structure to the basic window; and the first and second window structures are switched to be displayed on the single drawing window.</p>
<p id="p-0015" num="0014">According to the above characteristics, the event processing program is associated with the first window structure, and this first window structure is assigned to the basic window. Here, the second window structure is assigned to the basic window, by, for example, executing the event processing program caused by clicking of a button or the like in the first window structure. A drawing window is drawn by changing or updating the basic window or by assigning the second window structure to the basic window. Thereby, it is possible to switch the first and second window structures to be displayed on the single drawing window.</p>
<p id="p-0016" num="0015">According to the above characteristics, the drawing of the drawing window is caused by, for example, window size change, window movement, change of overlapping window position, window visualization, invalidation of window drawing area, or window color change.</p>
<p id="p-0017" num="0016">In order to achieve the second object, the second characteristics of the window display system according to the present invention are as follows: when in the above first characteristics, a class or a module (hereinafter, referred to as &#x201c;class or the like&#x201d;) having a pointer to a target to which a window structure is assigned or the target itself (hereinafter, referred to as &#x201c;pointer or the like&#x201d;) different from a class or the like for creating or changing the window structure (hereinafter, referred to as &#x201c;creation or the like&#x201d;, or simply &#x201c;creation&#x201d;), the pointer or the like is provided to the class or the like performing the creation of the like of the window structure, so that the created window structure is assigned to the provided pointer or the like, when the class or the like is switched from the created window structure to other window structure.</p>
<p id="p-0018" num="0017">In order to achieve the third object, the further characteristics of the window display system according to the present invention are as follows: states of various kinds of windows are registered as predetermined window states; a state of a target window is obtained as an obtained window state; one state is selected from the predetermined window states as a selected window state, and the selected window state is compared to the obtained window state; when the selected window state is the same as the obtained window state, a different state is selected from the predetermined window states to be a new state for the target window; and when the selected window state is different from the obtained window state, the selected window state is set as a new state for the target window.</p>
<p id="p-0019" num="0018">Note that each of the above-described characteristics is provided not only as the window display system, but also as the following: a window display method; a computer program and a recording medium in which the computer program is recorded; a server having a providing means for providing the window display system; a program development support device which creates a computer program or a window; and the created program and a recording medium in which the program is recorded.</p>
<heading id="h-0006" level="1">Effects of the Invention</heading>
<p id="p-0020" num="0019">Thus, according to the first characteristics of the above present invention, the drawing window is drawn by executing the event processing program. As a result, it is possible to provide the following: a window display system; a window display method; a computer program and a recording medium in which the computer program is recorded; and a server having a providing means for providing the window display system, all of which are capable of displaying the first window structure and the second window structure on the single drawing window by switching these window structures.</p>
<p id="p-0021" num="0020">Therefore, in a system capable of displaying multiple windows, it is possible to develop a window display system having less windows and consuming less system resources, such as a memory, as compared to the conventional systems.</p>
<p id="p-0022" num="0021">Further, when the present invention is applied to the environment where only a single window can be displayed, a multiple-window display system for the single window can be constructed. For example, when the present invention is applied to JAVA&#x2122; APPLET, which operates in a browser of the Internet, a multiple-window display system can be constructed within the browser, so that a multiple-window display system having high security of JAVA&#x2122; APPLET can be easily constructed.</p>
<p id="p-0023" num="0022">That is, by using the first characteristics of the present invention, it is possible to develop a window display system with less windows and to operate the window display system with less memory. Further, if the system uses a virtual memory, it is expected that the virtual memory is used less, and an operating speed of the system is increased.</p>
<p id="p-0024" num="0023">Still further, even if the present invention is applied to apparatuses having small-capacity memory or apparatuses not having a hard disk and therefore not using virtual memory, such as a portable telephone or a portable information apparatus, it is possible to construct a window display system with less memory consumption, thereby realizing a window display system having various additional functions which have not been expected conventionally.</p>
<p id="p-0025" num="0024">Still further, when the present invention is applied to household appliances, such as a television set, a refrigerator, or an air conditioner, in which a computer is embedded to connect these household appliances via a network, it is possible to provide a human interface having less memory and high operability.</p>
<p id="p-0026" num="0025">In JAVA&#x2122; APPLET, which operates in a browser of the Internet, only one display area is given in a display area of the browser. Therefore, JAVA&#x2122; APPLET has a difficulty in developing the mufti-window display system. However, JAVA&#x2122; APPLET has a number of advantageous characteristics; JAVA&#x2122; APPLET can construct a high-security system, in which reading and writing from/to a terminal where the JAVA&#x2122; APPLET itself operates are severely restricted, IP addresses of communication partners are limited, and so on. Further, JAVA&#x2122; APPLET can automatically download programs at start-up, so that software distribution is not necessary when programs are changed. Furthermore, JAVA&#x2122; APPLET can operate in any operating systems if a browser and a JAVA&#x2122; runtime environment work, which makes it easy to manage a operation environment of a terminal. Despite the above advantageous characteristics, JAVA&#x2122; APPLET has hardly been implemented in serious systems because of the difficulty in developing the mufti-window display system. However, when the present invention is applied to JAVA&#x2122; APPLET, it becomes possible to develop a serious window display system with high security and a less operation cost.</p>
<p id="p-0027" num="0026">Moreover, according to the second characteristics of the present invention, in the above window display system and the like, it is possible to put the event processing program, the window structure creation unit, and the associating unit in the same class or the like by transferring a pointer or the like among these units. As a result, as a general mufti-window environment can develop plural windows separately the window display system and the like of the present invention can also develop plural window structures separately, and perform program development separately by plural development personnel.</p>
<p id="p-0028" num="0027">That is, according to the second characteristics of the present invention, it is possible to execute the above window display system and the like by separating the system and the like into plural classes or the like. This makes it easier to develop and maintain the window display system and, also, to develop the window display system using the plural development personnel. As a result, the window display system can be applied to serious system development.</p>
<p id="p-0029" num="0028">Furthermore, according to the third characteristics of the present invention, in the above window display system, the window states can be easily changed, and as a result, it is possible to generate events.</p>
<p id="p-0030" num="0029">That is, according to the third characteristics of the present invention, in the above window display system and the like, events can be generated easily by changing the states of windows. Thus, although most of computer programmers and system engineers are not familiar with a detail controlling structure of the window display system, it is possible to develop a window display system capable of easily displaying plural window structures on a single window by switching these window structures, without negatively affecting the overall control of the window display system.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0007" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 1</figref> is a functional block diagram showing a structure of a window display system according to the present invention.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIGS. 2A to 2D</figref> are diagrams for explaining changes in a storage unit in the window display system.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram showing a software configuration of the window display system.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 4</figref> is a flowchart of processing performed by the window display system shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 5</figref> is a diagram showing an example of a modification of software configuration of the window display system shown in FIG.</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 6</figref> is a block diagram of a detail structure of the window display system shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 7</figref> is a block diagram showing an example of a modification of the structure shown in <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 8</figref> is a (first) list of the first sample program.</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 9</figref> is another (second) list of the first sample program.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 10</figref> is still another (third) list of the first sample program.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 11</figref> is still another (fourth) list of the first sample program.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 12</figref> is a diagram showing an example of window displaying, where the first sample program is executed.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 13</figref> is a (first) list of the second sample program.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 14</figref> is another (second) list of the second sample program.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 15</figref> is still another (third) list of the second sample program.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 16</figref> is still another (fourth) list of the second sample program.</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 17</figref> is still another (fifth) list of the second sample program.</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 18</figref> is a flowchart of processing performed by the conventional window display system.</p>
<p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. 19</figref> is a diagram showing an example of a window configuration of the conventional window display system.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<p id="p-0050" num="0049">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Numerical References</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="70pt" align="left"/>
<colspec colname="2" colwidth="147pt" align="left"/>
<tbody valign="top">
<row>
<entry>11, 11A, 11B, 11C, </entry>
<entry>event processing program registered for a window</entry>
</row>
<row>
<entry>11A1, 11B1, 12</entry>
<entry/>
</row>
<row>
<entry>11A2, 11B2 </entry>
<entry>program calling a program for assigning a</entry>
</row>
<row>
<entry/>
<entry>window structure</entry>
</row>
<row>
<entry>11A3</entry>
<entry>program for assigning a window structure</entry>
</row>
<row>
<entry>13</entry>
<entry>window drawn on a display</entry>
</row>
<row>
<entry>14</entry>
<entry>window having basic display elements</entry>
</row>
<row>
<entry>14a</entry>
<entry>drop-down menu</entry>
</row>
<row>
<entry>15</entry>
<entry>window structure of window 0</entry>
</row>
<row>
<entry>16</entry>
<entry>window structure of window 1</entry>
</row>
<row>
<entry>15a, 16b</entry>
<entry>a button or the like in association with event </entry>
</row>
<row>
<entry/>
<entry>processing program</entry>
</row>
<row>
<entry>19a, 19b</entry>
<entry>pointer or the like</entry>
</row>
<row>
<entry>21</entry>
<entry>first menu structure</entry>
</row>
<row>
<entry>22</entry>
<entry>second menu structure</entry>
</row>
<row>
<entry>31</entry>
<entry>class or the like having a pointer or the like</entry>
</row>
<row>
<entry>32</entry>
<entry>class or the like creating a window structure</entry>
</row>
<row>
<entry>50</entry>
<entry>window display system</entry>
</row>
<row>
<entry>51</entry>
<entry>basic window creation unit</entry>
</row>
<row>
<entry>52</entry>
<entry>first window structure creation unit</entry>
</row>
<row>
<entry>53</entry>
<entry>second window structure creation unit</entry>
</row>
<row>
<entry>54</entry>
<entry>associating unit</entry>
</row>
<row>
<entry>55</entry>
<entry>storage unit</entry>
</row>
<row>
<entry>55a</entry>
<entry>basic window</entry>
</row>
<row>
<entry>55b </entry>
<entry>first window structure</entry>
</row>
<row>
<entry>55c </entry>
<entry>second window structure</entry>
</row>
<row>
<entry>56</entry>
<entry>drawing unit</entry>
</row>
<row>
<entry>57</entry>
<entry>drawing-event generation unit</entry>
</row>
<row>
<entry>60</entry>
<entry>display unit</entry>
</row>
<row>
<entry>70</entry>
<entry>window management unit</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<heading id="h-0008" level="1">BEST MODE FOR CARRYING OUT THE INVENTION</heading>
<p id="p-0051" num="0050">The following describes a preferred embodiment of the present invention with reference to the drawings.</p>
<p id="p-0052" num="0051">Firstly, functions of the window display system according to the present invention are described.</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 1</figref> is a functional block diagram showing a structure of a window display system <b>50</b> according to the present invention. Besides the window display system <b>50</b>, here displayed are: a display unit <b>60</b> for displaying windows, such as a Liquid Crystal Display (LCD); and a window management unit <b>70</b> for managing multiple windows.</p>
<p id="p-0054" num="0053">This window display system <b>50</b> is a window display system which displays windows on the display unit <b>60</b> under the management of the window management unit <b>70</b>. This window display system <b>50</b> includes: a basic window creation unit <b>51</b> which creates or obtains, in a storage unit <b>55</b>, a single basic window <b>55</b><i>a </i>as a frame to be displayed; the first window creation unit <b>52</b> which creates, in the storage unit <b>55</b>, the first window structure <b>55</b><i>b </i>that is a set of display elements (data) and is to be displayed together with the basic window <b>55</b><i>a</i>; the second window creation unit <b>53</b> which creates, in the storage unit <b>55</b>, the second window structure <b>55</b><i>c </i>that is another set of display elements and is to be displayed together with the basic window <b>55</b><i>a</i>; an associating unit <b>54</b> which associates, with the basic window <b>55</b><i>a</i>, one of the first window structure <b>55</b><i>b </i>and the second window structure <b>55</b><i>c </i>created by the first window creation unit <b>52</b> and the second window creation unit <b>53</b>, respectively; a drawing unit <b>56</b> which draws on the display unit <b>60</b> the basic window, and the first window structure <b>55</b><i>b </i>or the second window structure <b>55</b><i>c </i>that is associated with the basic window <b>55</b><i>a </i>by the associating unit <b>54</b>; a storage unit <b>55</b> which includes a memory and the like for holding the basic window <b>55</b><i>a</i>, the first window structure <b>55</b><i>b</i>, the second window structure <b>55</b><i>c</i>, and the like; and a drawing-event generation unit <b>57</b> which generates an event that becomes a trigger of starting the drawing unit <b>56</b>.</p>
<p id="p-0055" num="0054">Here, when the window management unit <b>70</b> detects a predetermined event, the associating unit <b>54</b> switches a window structure to be associated with the basic window <b>55</b><i>a</i>, from the first window structure <b>55</b><i>b </i>to the second window structure <b>55</b><i>c</i>, or from the second window structure <b>55</b><i>c </i>to the first window structure <b>55</b><i>b</i>. Then, the drawing unit <b>56</b> draws the basic window <b>55</b><i>a</i>, and also the first window structure <b>55</b><i>b </i>or the second window structure <b>55</b><i>c </i>which is newly associated with the basic window <b>55</b><i>a </i>by the associating unit <b>54</b>.</p>
<p id="p-0056" num="0055">Here, when the associated window structure is to be switched from the first window structure <b>55</b><i>b </i>to the second window structure <b>55</b><i>c</i>, it is preferable that the associating unit <b>54</b> deletes the first window structure <b>55</b><i>b </i>in the storage unit <b>55</b> and the second window structure creation unit <b>53</b> creates a new second window structure <b>55</b><i>c</i>. On the other hand, when the associated window structure is to be switched from the second window structure <b>55</b><i>c </i>to the first window structure <b>55</b><i>b</i>, the associating unit <b>54</b> deletes the second window structure <b>55</b><i>c </i>in the storage unit <b>55</b> and the first window structure creation unit <b>52</b> creates a new first window structure <b>55</b><i>b. </i></p>
<p id="p-0057" num="0056"><figref idref="DRAWINGS">FIGS. 2A to 2D</figref> are diagrams for explaining the changes in the storage unit <b>55</b> of the window display system <b>50</b>. In a general mufti-window display system, as shown in <figref idref="DRAWINGS">FIG. 2A</figref>, the storage unit <b>55</b> holds respective window structures associated with all windows opened on a display (main window, and windows 1 to N). On the other hand, in the window display system <b>50</b> according to the present embodiment, as shown in <figref idref="DRAWINGS">FIG. 2B</figref>, when a main window is displayed, the storage unit <b>55</b> holds only the basic window and a window structure of the main window. Here, if another window <b>1</b> started by the main window is opened, as shown in <figref idref="DRAWINGS">FIG. 2C</figref>, the storage unit <b>55</b> holds only the basic window and a window structure of the window <b>1</b>. Further, if still another window N (where N=2, in the present embodiment) started by the window <b>1</b> is opened, as shown in <figref idref="DRAWINGS">FIG. 2D</figref>, the storage unit <b>55</b> holds only the basic window and a window structure of the window N.</p>
<p id="p-0058" num="0057">Thus, as obvious from comparing of <figref idref="DRAWINGS">FIG. 2A</figref> with <figref idref="DRAWINGS">FIGS. 2B to 2D</figref>, in the present embodiment, plural window structures are switched to be displayed, but a storage size occupying the storage <b>55</b> is smaller than the general mufti-window display system. That is, the present embodiment realizes a mufti-window display system which operates even with a small-sized memory.</p>
<p id="p-0059" num="0058">Note that examples of the event generated by the drawing-event generation unit <b>57</b> are events for executing window size change, window movement, change of overlapping window position, window visualization, invalidation of window drawing area, window color change, and the like.</p>
<p id="p-0060" num="0059">Note also that, in order to switch the association between the basic window and the window structures by the associating unit <b>54</b>, the following technique is also possible. Each of the first window creation unit <b>52</b> and the second window structure creation unit <b>53</b> obtains and holds a pointer to a target window with which the first window structure <b>55</b><i>b </i>or the second window structure <b>55</b><i>c </i>is associated or the target window itself (&#x201c;pointer or the like&#x201d;). Then, the first window structure <b>55</b><i>b </i>and the second window structure <b>55</b><i>c </i>are created to be associated with the obtained held pointer or the like, respectively.</p>
<p id="p-0061" num="0060">Moreover, the drawing-event generation unit <b>57</b> performs as follows. The drawing-event generation unit <b>57</b> stores states of various kinds of windows, as predetermined window states and a state of a target window that is the basic window <b>55</b><i>a </i>drawn by the drawing unit <b>56</b>, as an obtained window state. Here, one state is selected from the predetermined window states as a selected window state, and the selected window state is compared to the obtained window state. If the selected window state is the same as the obtained window state, another state is selected from the predetermined window states, to be set as a new state of the target window. On the other hand, if the selected window state is different from the obtained window state, the selected window state is set as a new state of the target window. By setting the new state of the target window, the target window <b>55</b><i>a </i>generates an event. This makes the drawing unit <b>56</b> display the basic window <b>55</b><i>a </i>together with the first window structure <b>55</b><i>b </i>or the second window structure <b>55</b><i>c</i>. Note that examples of the predetermined window states are states of various kinds of windows having different window sizes. Thereby, by registering, as the predetermined windows, various kinds of windows whose sizes have differences that are too small to be perceived by a human being (for example, a size less than a few pixels), for example, it is possible to generate events and switch the windows, without recognizable change in appearance of the windows.</p>
<p id="p-0062" num="0061">The following describes specific structures and operations of the window display system according to the present invention, in a case where the window display system is realized as software (program executed inside an information device, such as a computer, and data).</p>
<p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram showing a structure of a window display system that is one embodiment of the window display system, the window display method, the computer program, and the recording medium in which the computer program is recorded (hereinafter, referred to as a &#x201c;window display system and the like&#x201d;), according to the present invention. <figref idref="DRAWINGS">FIG. 4</figref> is a flowchart of processing performed by the window display system of <figref idref="DRAWINGS">FIG. 3</figref>. The following describes the processing of the present invention with reference to these figures.</p>
<p id="p-0064" num="0063">As shown in <figref idref="DRAWINGS">FIG. 3</figref>, with a basic window <b>14</b> which is recorded on a main memory and then created or obtained (hereinafter, expressed also as simply &#x201c;created&#x201d;), a drawing window <b>13</b> is drawn on a display by recording the drawing window <b>13</b> onto a graphic memory. Here, the expression of &#x201c;creation (created)&#x201d; means newly creating a window, and the expression of &#x201c;obtainment (obtained)&#x201d; means, for example, obtaining a drawing area in a previously created window by, for example, JAVA&#x2122; APPLET. When a window is firstly drawn, the drawing window <b>13</b> is a window having a window structure <b>15</b> of a window0 which is associated with an event processing program <b>11</b>A. The event processing program <b>11</b>A is a program for assigning a window structure <b>16</b> of a window1 which is associated with an event processing program <b>11</b>B, to the created basic window <b>14</b>.</p>
<p id="p-0065" num="0064">Note that <figref idref="DRAWINGS">FIG. 3</figref> shows a main software configuration of the window display system according to the present invention, and corresponds to the functional block diagram of <figref idref="DRAWINGS">FIG. 1</figref> as follows. The drawing window <b>13</b> of <figref idref="DRAWINGS">FIG. 3</figref> is image data which is temporarily held in the drawing unit <b>56</b> of <figref idref="DRAWINGS">FIG. 1</figref> and displayed on the display unit <b>60</b>. The basic window <b>14</b>, the first window structure <b>15</b>, and the second window structure <b>16</b> of <figref idref="DRAWINGS">FIG. 3</figref> correspond to the basic window <b>55</b><i>a</i>, the first window structure <b>55</b><i>b</i>, and the second window structure <b>55</b><i>c </i>of <figref idref="DRAWINGS">FIG. 1</figref>, respectively. The event processing program <b>11</b>A of <figref idref="DRAWINGS">FIG. 3</figref> includes the second window structure creation unit <b>53</b>, the associating unit <b>54</b>, and the drawing-event generation unit <b>57</b> of <figref idref="DRAWINGS">FIG. 1</figref>. Likewise, the event processing program <b>11</b>B of <figref idref="DRAWINGS">FIG. 3</figref> includes the first window structure creation unit <b>52</b>, the associating unit <b>54</b>, and the drawing-event generation unit <b>57</b> of <figref idref="DRAWINGS">FIG. 1</figref>. Note that <figref idref="DRAWINGS">FIG. 3</figref> does not show the basic window creation unit <b>51</b>, the drawing unit <b>56</b>, the display unit <b>60</b>, nor the window management unit <b>70</b> of <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0066" num="0065">As shown in <figref idref="DRAWINGS">FIG. 4</figref>, to the created basic window <b>14</b> (S<b>01</b>), the first window structure <b>15</b> associated with the event processing program <b>11</b>A is assigned (S<b>02</b>). A reference numeral <b>12</b> represents a general event processing program. Then, the basic window <b>14</b> to which the first window structure <b>15</b> is assigned is drawn on a display (S<b>03</b>), and the basic window <b>14</b> waits until an event is generated (S<b>04</b>).</p>
<p id="p-0067" num="0066">When an event is generated (S<b>05</b><i>a</i>), the event is detected by the window management unit <b>70</b> (S<b>05</b><i>b</i>), and the event processing programs <b>11</b>A and <b>12</b> associated with the event are executed (S<b>06</b>). Note that the window management unit <b>70</b> manages a displayed position and a size of each window, overlapping positions between windows, and the like, and determines to which window an event, such as key inputting or mouse clicking, is to be provided, for example.</p>
<p id="p-0068" num="0067">For example, when an event is generated by mouse clicking or the like (S<b>05</b>) and the event processing program <b>11</b>A is executed (S<b>06</b>), firstly, the window structure <b>15</b> of the window0 is deleted from the basic window <b>14</b>. Next, the window structure <b>16</b> associated with the event processing program <b>11</b>B is assigned to the basic window <b>14</b>. Here, if a part or all of the information and the like held in the window structure <b>15</b> of the window0 is stored, the part or all of the information of the window can be reproduced using the stored information, when the window <b>15</b> of the window0 is displayed again.</p>
<p id="p-0069" num="0068">The window size change or the like of the event processing program <b>11</b>A causes drawing of a window. For example, based on the window size change or the like, the drawing window <b>13</b>, which the window structure associated with the event processing program is assigned to, is drawn (S<b>07</b>), and then the processing proceeds to Step S<b>4</b> for event waiting. Although it has been described that the window size change or the like directly causes drawing of the drawing window (S<b>07</b>), it is also possible, depending on a structure of the system, that the window size change or the like causes generation of an event (S<b>08</b>), and according to the event, the drawing window is drawn (S<b>07</b>).</p>
<p id="p-0070" num="0069">When the window size change or the like is executed, the drawing window <b>13</b> is replaced to the newly changed basic window <b>14</b>. As described above, by repeating Steps S<b>04</b> to S<b>07</b> (S<b>08</b>), every time each of new event processing programs <b>11</b>A, <b>11</b>B, <b>11</b>C, <b>11</b>D . . . is executed, a current window structure is deleted and a new window structure associated with the event processing program is assigned. Thereby, various kinds of window structures <b>15</b>, <b>16</b>, and the like are switched to be displayed in the drawing window <b>13</b>. Note that it has been described that the drawing window is indirectly drawn resulting from the window size change or the like, but it is also possible to draw the drawing window by executing a command to directly draw the drawing window, or by generating another event by which the window is directly drawn.</p>
<p id="p-0071" num="0070">The window drawing is caused by window size change (including size maximization and size minimization in this description), window movement, change of overlapping window position, window visualization, invalidation of window drawing area, or color change of the window display system.</p>
<p id="p-0072" num="0071">Here, in JAVA&#x2122; APPLET programs, a drawing event of the event processing program is caused by resize(SmallWSize[1][1], SmallWSize[1][2]) for change of a window size:</p>
<p id="p-0073" num="0072">Further, in C-language programs of Windows&#x2122;, drawing of the event processing program is caused by</p>
<p id="h-0009" num="0000">MoveWindow(hWndBUTTON2, 20, 20, 50, 100, TRUE)</p>
<p id="h-0010" num="0000">for window movement;</p>
<p id="h-0011" num="0000">SetWindowPos(hWndMain,</p>
<p id="h-0012" num="0000">HWND-TOP,300,10,600,500,SWP-SHOWWINDOW)</p>
<p id="h-0013" num="0000">for change of overlapping window position;</p>
<p id="h-0014" num="0000">ShowWindow(hWndBUTTON1,GnCmdShow)</p>
<p id="h-0015" num="0000">for visualization of a window;</p>
<p id="h-0016" num="0000">InvalidateRect(hWndMain, NULL, TRUE)</p>
<p id="h-0017" num="0000">for invalidation of a drawing area in a window; and</p>
<p id="h-0018" num="0000">SetSysColors(0,COLOR-BACKGROUND,0)</p>
<p id="h-0019" num="0000">for color change for a window.</p>
<p id="p-0074" num="0073">Note that the above instructions are merely examples, and the commands are not limited to the above.</p>
<p id="p-0075" num="0074">In an example of modification of the present invention as shown in <figref idref="DRAWINGS">FIG. 5</figref>, the first menu structure <b>21</b> and the second menu structure <b>22</b> are used in addition to the first and second window structures. These first and second menu structures <b>21</b> and <b>22</b> are associated with a standard menu, such as a drop-down menu <b>14</b><i>a </i>or the like in the basic window <b>14</b>. Therefore, by executing a menu in the first menu structure <b>21</b>, an event processing program <b>11</b>A associated with the menu is operated, so that, in the same manner as described previously, the first and second window structures <b>15</b> and <b>16</b>, and the first and second menu structures <b>21</b> and <b>22</b> are displayed on the drawing window <b>13</b>.</p>
<p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. 6</figref> is a block diagram showing one embodiment of the present invention, and shows association among a window structure including buttons and the like, event processing programs, calling programs, and a pointer to a target to which the window structure is assigned or the target itself (hereinafter, referred to as &#x201c;pointer or the like&#x201d;).</p>
<p id="p-0077" num="0076">When a button or the like <b>15</b><i>a </i>in the first window structure <b>15</b> is clicked, an event processing program <b>11</b>A<b>1</b> is executed. When the event processing program <b>11</b>A<b>1</b> is executed, the calling program <b>11</b>A<b>2</b> is executed. The calling program <b>11</b>A<b>2</b> provides a pointer or the like <b>19</b><i>a </i>to a class or the like <b>32</b> for creating a window structure, and executes a program <b>11</b>A<b>3</b> for assigning the window structure to the target. The program <b>11</b>A<b>3</b> for assigning the window structure assigns the second window structure associated with the event processing program to the basic window <b>14</b>. Note that the expression of &#x201c;creating a window structure&#x201d; means, not only newly creating a window structure, but also creating a window structure by changing the existing window structure. In this case, the &#x201c;switching association&#x201d; performed by the associating unit <b>54</b> also means switching association which results in that the association is the same before and after the switching.</p>
<p id="p-0078" num="0077"><figref idref="DRAWINGS">FIG. 7</figref> is a block diagram showing an example of modification of the structure shown in <figref idref="DRAWINGS">FIG. 6</figref>. <figref idref="DRAWINGS">FIG. 7</figref> differs from <figref idref="DRAWINGS">FIG. 6</figref> in that the event processing program <b>11</b>B<b>1</b> and the calling processing program <b>11</b>B<b>2</b> belong to the class or the like <b>31</b> which has the pointer or the like.</p>
<p id="p-0079" num="0078">Note that the first window structure <b>15</b> may be outside the class or the like <b>31</b> having the pointer or the like. Note also that the calling program <b>11</b>A<b>2</b> or <b>11</b>B<b>2</b> can be deleted, and the processing of the calling program <b>11</b>A<b>2</b> or <b>11</b>B<b>2</b> can be performed by the event processing program <b>11</b>A<b>1</b> or <b>11</b>B<b>1</b>.</p>
<p id="p-0080" num="0079">One of the objects of the present invention is to provide a window display system capable of having a window itself generate an event for drawing a window. Changing setting of a window state is effective to generate the event. Here, a system, in which the change of setting of a window state can be performed easily, is described. That is, a function of the drawing-event generation unit <b>57</b> in <figref idref="DRAWINGS">FIG. 1</figref> is explained in detail. Table 1 is one example of data structure of the predetermined window states. The window states are indicated as window sizes as one example, but may be indicated as other types of window states.</p>
<p id="p-0081" num="0080">
<tables id="TABLE-US-00002" num="00002">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="98pt" align="left"/>
<colspec colname="1" colwidth="28pt" align="center"/>
<colspec colname="2" colwidth="91pt" align="center"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" rowsep="1">TABLE 1</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>vertical</entry>
<entry>horizontal</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="70pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="91pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>window size 1</entry>
<entry>600</entry>
<entry>800</entry>
</row>
<row>
<entry/>
<entry>window size 2</entry>
<entry>601</entry>
<entry>800</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0082" num="0081">A current window size is obtained, a value of the window size 1 or a value of the window size 2 is selected, and the current window size is compared to the selected value. If the current window size is different from the selected value, then the selected value is set as a new window size so that the window state is changed. If the current window size is the same as the selected value, then the not-selected value is set as a new window size so that the new window state is set for the target window. This triggers generation of an event. Note that if a window state is changed to be used but later needs to be returned to the original window state, for example in a case of an overlapping window position or the like, the used window state is changed again to the original window state, after the first changing. Note also that if the window state is the overlapping window position, a dummy window is previously created, and a current window always needs to be hidden under the dummy window.</p>
<p id="p-0083" num="0082">When setting of a window size is changed by user's operation or the like, it is also possible to perform the window size comparison and the window state change, after changing the window sizes 1 and 2 (predetermined window states). Respective differences between a current window size and the window sizes 1 and 2 are calculated, and a difference whose absolute value is smaller is set to as a setting difference. If the current window size is larger than the window sizes 1 and 2, then respective values are obtained by adding the window sizes 1 and 2 with an absolute value of the setting difference, respectively, and the obtained values are set as new predetermined window states. If the current window size is smaller than the window sizes 1 and 2, then respective values are obtained by subtracting the window sizes 1 and 2 with an absolute value of the setting difference, and the obtained values are set as new predetermined window states, thereby changing the predetermined window sates. Next, in the same manner as described above, a setting window state of the target window is changed by setting, as a new window size, a window size which is different from a current window size. This triggers generation of an event.</p>
<p id="p-0084" num="0083">Table 2 is a block diagram showing an example of modification of the table 1. The table 2 differs from the table 1 in that there are plural types of windows, and for each of the window types, there are plural window sizes. Predetermined window states can be set depending on a type of a window, for example, by setting large window sizes for a money depositing window, and small window sizes for a money disbursement window.</p>
<p id="p-0085" num="0084">
<tables id="TABLE-US-00003" num="00003">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="140pt" align="left"/>
<colspec colname="1" colwidth="35pt" align="center"/>
<colspec colname="2" colwidth="42pt" align="center"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" rowsep="1">TABLE 2</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>horizontal</entry>
<entry>vertical</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="70pt" align="left"/>
<colspec colname="2" colwidth="56pt" align="left"/>
<colspec colname="3" colwidth="35pt" align="center"/>
<colspec colname="4" colwidth="42pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>Money Depositing</entry>
<entry>window size 1</entry>
<entry>800</entry>
<entry>600</entry>
</row>
<row>
<entry/>
<entry>Window</entry>
<entry>window size 2</entry>
<entry>801</entry>
<entry>600</entry>
</row>
<row>
<entry/>
<entry>Money</entry>
<entry>window size 3</entry>
<entry>400</entry>
<entry>300</entry>
</row>
<row>
<entry/>
<entry>Disbursement</entry>
<entry>window size 4</entry>
<entry>401</entry>
<entry>300</entry>
</row>
<row>
<entry/>
<entry>Window</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="4" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0086" num="0085">Table 3 is a table in which the example of the table 2 is added with other window states, such as a color of the window. It is possible to switch other plural window states such as the window color, depending on the various types of windows.</p>
<p id="p-0087" num="0086">
<tables id="TABLE-US-00004" num="00004">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="offset" colwidth="84pt" align="left"/>
<colspec colname="1" colwidth="42pt" align="center"/>
<colspec colname="2" colwidth="35pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="left"/>
<colspec colname="4" colwidth="28pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="4" rowsep="1">TABLE 3</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="4" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>BG</entry>
<entry>font</entry>
</row>
<row>
<entry/>
<entry>horizontal</entry>
<entry>vertical</entry>
<entry>color</entry>
<entry>color</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="4" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="6">
<colspec colname="1" colwidth="49pt" align="left"/>
<colspec colname="2" colwidth="35pt" align="left"/>
<colspec colname="3" colwidth="42pt" align="center"/>
<colspec colname="4" colwidth="35pt" align="center"/>
<colspec colname="5" colwidth="28pt" align="left"/>
<colspec colname="6" colwidth="28pt" align="left"/>
<tbody valign="top">
<row>
<entry>money</entry>
<entry>window</entry>
<entry>800</entry>
<entry>600</entry>
<entry>pale</entry>
<entry>black</entry>
</row>
<row>
<entry>Depositing</entry>
<entry>size 1</entry>
<entry/>
<entry/>
<entry>blue</entry>
</row>
<row>
<entry>Window</entry>
<entry>window</entry>
<entry>801</entry>
<entry>600</entry>
</row>
<row>
<entry/>
<entry>size 2</entry>
</row>
<row>
<entry>Money</entry>
<entry>window</entry>
<entry>400</entry>
<entry>300</entry>
<entry>pale</entry>
<entry>blue</entry>
</row>
<row>
<entry>Disbursement</entry>
<entry>size 3</entry>
<entry/>
<entry/>
<entry>green</entry>
</row>
<row>
<entry>Window</entry>
<entry>window</entry>
<entry>401</entry>
<entry>300</entry>
</row>
<row>
<entry/>
<entry>size 4</entry>
</row>
<row>
<entry namest="1" nameend="6" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0088" num="0087">Next, the embodiment is described where the window display system of the present invention is realized as a JAVA&#x2122; programs.</p>
<p id="p-0089" num="0088"><figref idref="DRAWINGS">FIGS. 8 to 11</figref> are lists of the program. Here, shown are lists of the first sample program which are described in JAVA&#x2122; and display two window structures by switching them.</p>
<p id="p-0090" num="0089">In <figref idref="DRAWINGS">FIG. 8</figref>, lines 16 to 19, a main program &#x201c;main( )&#x201d; is described.</p>
<p id="p-0091" num="0090">In <figref idref="DRAWINGS">FIG. 8</figref>, lines 24 to 34, a program &#x201c;FSample( )&#x201d; which is called by the main program &#x201c;main( )&#x201d; is described. This program &#x201c;FSample( )&#x201d; is for creating a basic window and displaying an initial window.</p>
<p id="p-0092" num="0091">In <figref idref="DRAWINGS">FIG. 8</figref>, lines 39 to 51, a program &#x201c;window0( )&#x201d;, which is called by the program &#x201c;FSample( )&#x201d; or started as event processing, is described. This program &#x201c;window0( )&#x201d; is for displaying the first window &#x201c;window0&#x201d;, in other words, the first window structure &#x201c;W0&#x201d;. Here, the first window structure &#x201c;W0&#x201d; is assigned to the basic window and drawn, after deleting all window structures.</p>
<p id="p-0093" num="0092">In <figref idref="DRAWINGS">FIG. 9</figref>, lines 56 to 68, a program &#x201c;window1( )&#x201d;, which is started as event processing, is described. This program &#x201c;window1( )&#x201d; is for displaying the second window &#x201c;window1&#x201d;, in other words, the second window structure &#x201c;W1&#x201d;. Here, the second window structure &#x201c;W1&#x201d; is assigned to the basic window and drawn, after deleting all window structures.</p>
<p id="p-0094" num="0093">In <figref idref="DRAWINGS">FIG. 9</figref>, lines 74 to 80, an event processing program for terminating the main program &#x201c;main( )&#x201d; is described.</p>
<p id="p-0095" num="0094">In <figref idref="DRAWINGS">FIG. 9</figref>, lines 85 to 91, an event processing program for displaying the second window structure &#x201c;W1&#x201d; is described. This event processing program calls the program &#x201c;window1( )&#x201d;, when a predetermined event is detected.</p>
<p id="p-0096" num="0095">In <figref idref="DRAWINGS">FIG. 10</figref>, lines 95 to 101, an event processing program for displaying the first window structure &#x201c;W0&#x201d; is described. This event processing program calls the program &#x201c;window0( )&#x201d;, when a predetermined event is detected.</p>
<p id="p-0097" num="0096">In <figref idref="DRAWINGS">FIG. 10</figref>, lines 108 to 138, a class defining the first window structure &#x201c;W0&#x201d; is described. This class is called (instantiated) by the program &#x201c;window0( )&#x201d;.</p>
<p id="p-0098" num="0097">In <figref idref="DRAWINGS">FIG. 11</figref>, lines 142 to 173, a class defining the second window structure &#x201c;W1&#x201d; is described. This class is called (instantiated) by the program &#x201c;window1( )&#x201d;.</p>
<p id="p-0099" num="0098"><figref idref="DRAWINGS">FIG. 12</figref> is a diagram showing an execution example of the program shown in <figref idref="DRAWINGS">FIGS. 8 to 11</figref>. Here, a situation where two windows of Window0 and Window1 are switched is shown. The window Window0 shown in the upper part of <figref idref="DRAWINGS">FIG. 12</figref> is a window where the first window structure &#x201c;W0&#x201d; is displayed, while the window Window1 shown in the lower part is a window where the second window structure &#x201c;W1&#x201d; is displayed.</p>
<p id="p-0100" num="0099">When this sample program is started, the window Window0 is displayed on the whole window. When a button &#x201c;button for switching to window1&#x201d; is clicked on the window Window0 the whole window is switched to the window Window1. Further, when a button &#x201c;button for switching to window0&#x201d; is clicked on the window Window1, the whole window is switched to the window Window0.</p>
<p id="p-0101" num="0100">Note that this sample program corresponds to the block diagram of <figref idref="DRAWINGS">FIG. 1</figref> as followings. That is, the basic window creation unit <b>51</b> corresponds to lines 24 to 31 in <figref idref="DRAWINGS">FIG. 8</figref>; the first window creation unit <b>52</b> corresponds to lines 43 to 44 in <figref idref="DRAWINGS">FIG. 8</figref>; the second window structure creation unit <b>53</b> corresponds to lines 60 to 61 in <figref idref="DRAWINGS">FIG. 9</figref>; the associating unit <b>54</b> corresponds to lines 45 to 46 in <figref idref="DRAWINGS">FIG. 8</figref> and lines 62 to 63 in <figref idref="DRAWINGS">FIG. 9</figref>; the basic window <b>55</b><i>a </i>is defined at lines 26 to 31 in <figref idref="DRAWINGS">FIG. 8</figref>; the first window structure <b>55</b><i>b </i>is defined at lines 108 to 138 in <figref idref="DRAWINGS">FIG. 10</figref>; the second window structure <b>55</b><i>c </i>is defined at lines 142 to 173 in <figref idref="DRAWINGS">FIG. 11</figref>; the drawing unit <b>56</b> corresponds to lines 49 to 50 in <figref idref="DRAWINGS">FIG. 8</figref>, lines 66 to 67 in <figref idref="DRAWINGS">FIG. 9</figref>, and the like; and the drawing-event generation unit <b>57</b> corresponds to lines 49 to 50 in <figref idref="DRAWINGS">FIG. 8</figref> and lines 66 to 67 in <figref idref="DRAWINGS">FIG. 9</figref>.</p>
<p id="p-0102" num="0101">Thus, according to the window display system of the present embodiment, in the mufti-window display system, it is possible to switch window structures to be displayed on a single window, by selecting a target window structure from plural window structures. Thereby, even for an apparatus having a small-sized display or a small capacity memory, it is possible to realize a window display system in which plural window structures are switched to be displayed as a single window.</p>
<p id="p-0103" num="0102"><figref idref="DRAWINGS">FIGS. 13 to 17</figref> are lists of the second sample program which realizes the same functions as the first sample program shown in <figref idref="DRAWINGS">FIGS. 8 to 11</figref>. This second sample program differs from the first sample program in only inside structure, and an execution example of the second sample program is the same as the window displaying example shown in <figref idref="DRAWINGS">FIG. 12</figref>.</p>
<p id="p-0104" num="0103">In <figref idref="DRAWINGS">FIG. 13</figref>, lines 15 to 18, a main program &#x201c;main( )&#x201d; is described.</p>
<p id="p-0105" num="0104">In <figref idref="DRAWINGS">FIG. 13</figref>, lines 23 to 30, a program &#x201c;Fsample2( )&#x201d; which is called by the main program &#x201c;main( )&#x201d; is described. This program &#x201c;Fsample2( )&#x201d; is for creating the basic window and displaying an initial window.</p>
<p id="p-0106" num="0105">In <figref idref="DRAWINGS">FIG. 13</figref>, lines 35 to 38, a program &#x201c;window0( )&#x201d; which is called by the program &#x201c;Fsample2( )&#x201d; is described. This program &#x201c;window0( )&#x201d; is for displaying the first window &#x201c;window0&#x201d;, in other words, the first window structure.</p>
<p id="p-0107" num="0106">From <figref idref="DRAWINGS">FIG. 14</figref>, line 44 to <figref idref="DRAWINGS">FIG. 15</figref>, line 95, a class &#x201c;W0&#x201d;, which is called by the program &#x201c;window0( )&#x201d; or started as event processing, is described. This class displays the first window &#x201c;window0&#x201d;, in other words, the first window structure (in <figref idref="DRAWINGS">FIG. 14</figref>, lines 54 to 82), and defines an event processing program for displaying the second window &#x201c;window1&#x201d;, in other words, the second window structure (in <figref idref="DRAWINGS">FIG. 15</figref>, lines 87 to 93).</p>
<p id="p-0108" num="0107">From <figref idref="DRAWINGS">FIG. 16</figref>, line 99 to <figref idref="DRAWINGS">FIG. 17</figref>, line 151, a class &#x201c;W1&#x201d; which is generated as event processing is described. This class displays the second window &#x201c;window1&#x201d;, in other words, the second window structure (in <figref idref="DRAWINGS">FIG. 16</figref>, lines 109 to 139), and defines an event processing program for displaying the first window &#x201c;window0&#x201d;, in other words, the first window structure (in <figref idref="DRAWINGS">FIG. 17</figref>, lines 144 to 150).</p>
<p id="p-0109" num="0108">By such second sample program, the same functions as described for the first sample program are realized. That is, the execution example of the second sample program results in the window displaying example shown in <figref idref="DRAWINGS">FIG. 12</figref>. Therefore, by the second sample program, in the same manner as described for the first sample program, in the mufti-window display system, it is possible to realize a window display system in which a window structure displayed on a single window is switched to another, by selecting the target structure from plural window structures.</p>
<p id="p-0110" num="0109">Although the window display system according to the present invention has been described based on the above embodiments, but the present invention is not limited to the description and the embodiments. Those skilled in the art will readily appreciate that various modifications are possible in the exemplary embodiments without materially departing from the novel teachings and advantages of the present invention. Accordingly, all such modifications are intended to be included within the scope of the present invention.</p>
<p id="p-0111" num="0110">Note that if a window is created in the conventional window development systems (JBbuilder, for example), the window in which the basic window and the window structure in the present embodiment are integrated is created. Therefore, in order to create a window in which plural window structures are switched to be displayed on the one basic window as described in the window display system of the present invention, it is necessary to modify the programs or the like by manual handling. Furthermore, there are some window development systems which are not capable of such modification. Therefore, the present invention may be realized by adding such a conventional window development system with a function of creating the basic window and window structures, so that event processing is performed to switch the window structures to be displayed.</p>
<p id="p-0112" num="0111">For example, the present invention is realized not only as the window display system described in the above embodiments, but also as a program (or window) development support device which creates the programs as shown in <figref idref="DRAWINGS">FIGS. 8 to 11</figref> and <figref idref="DRAWINGS">FIGS. 13 to 17</figref>. In such a program development support device, parts in the programs shown in <figref idref="DRAWINGS">FIGS. 8 to 11</figref>, except parts which a user defines, are held as templates. Examples of the excluded parts defined by the user are the basic window, the plural window structures, the events to be detected when each window structure is being displayed, definition parts for window structures and the like to be switched when the events are detected, general event processing defined by the user, and the like. Then, only those user definitions are obtained from the user, and the obtained user definitions are incorporated into corresponding parts in the templates, thereby creating a source program, and an executable program and a window which are generated from the source program by compilation. The program or window created as above is an application program which has the same functions as described in the above embodiments, in other words, displays the plural window structures on a single window by switching these window structures.</p>
<p id="p-0113" num="0112">Note also that the present invention can be also realized as a server device which provides services to client devices via communication paths, for example as a server device which transmits the window display system of the present embodiment, for example, the programs shown in <figref idref="DRAWINGS">FIGS. 8 to 11</figref> and <figref idref="DRAWINGS">FIGS. 13 to 17</figref>, to client devices. Thereby, even if the client devices do not have the window display system of the present invention, the client devices can obtain the window display system of the present invention by downloading the program from the server device.</p>
<heading id="h-0020" level="1">INDUSTRIAL APPLICABILITY</heading>
<p id="p-0114" num="0113">The present invention can be used as a window display system for displaying windows on a display such as a LCD, and especially as a window display system in apparatuses having small-capacity memory or apparatuses not having a hard disk and therefore not using virtual memory, such as a portable telephone or a portable information apparatus. Furthermore, if the present invention is applied to JAVA&#x2122; APPLET which operates in a browser of the Internet, a multiple-window display system can be constructed within the browser, so that a multiple-window display system having high security of JAVA&#x2122; APPLET can be easily constructed.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A window display system which displays a window under management of a window management unit for managing plural windows as regions for display, each of the plural windows being composed of a single basic window and at least one window structure, said window display system comprising:
<claim-text>a main memory;</claim-text>
<claim-text>a basic window creation unit, stored on the main memory, that creates or obtains a single basic window as a region for display under management of the window management unit;</claim-text>
<claim-text>a first window structure creation unit, stored on the main memory, that creates a first window structure, the first window structure being a first set of display elements to be displayed on the single basic window and data displayable on a single window under management of the window management unit;</claim-text>
<claim-text>a second window structure creation unit, stored on the main memory, that creates a second window structure, the second window structure being a second set of display elements to be displayed on the single basic window and data displayable on a single window under management of the window management unit;</claim-text>
<claim-text>an associating unit, stored on the main memory, that associates the single basic window with one of the first window structure and the second window structure;</claim-text>
<claim-text>a graphic memory;</claim-text>
<claim-text>a drawing unit, stored on the main memory, that draws (a) the single basic window and (b) the one of the first window structure and the second window structure by recording, onto the graphic memory as image data, the one of the first window structure and the second window structure together with the single basic window, the single basic window being associated with the one of the first window structure and the second window structure; and</claim-text>
<claim-text>a drawing-event generation unit, stored on the main memory, that (i) generates a drawing-event which triggers said drawing unit to perform drawing or (ii) executes a command of causing said drawing unit to perform drawing,</claim-text>
<claim-text>wherein said associating unit switches a window structure to be associated with the single basic window, from the first window structure to the second window structure, or from the second window structure to the first window structure, when a predetermined event is detected by the window management unit,</claim-text>
<claim-text>wherein said drawing-event generation unit (i) generates the drawing-event which triggers said drawing unit to perform drawing or (ii) executes the command of causing said drawing unit to perform drawing, when said associating unit performs switching of the window structure to be associated with the single basic window, and</claim-text>
<claim-text>wherein said drawing unit draws, on the single basic window, (a) the single basic window and (b) one of the first window structure switched to be associated with the single basic window and the second window structure switched to be associated with the single basic window, (i) after (i-1) said drawing-event generation unit generates the drawing-event which triggers said drawing unit to perform drawing, (i-2) the window management unit detects the drawing-event, and (i-3) adjustment for providing the drawing event to the single basic window is performed, or (ii) after said drawing-event generation unit executes the command of causing said drawing unit to perform drawing.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The window display system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,
<claim-text>wherein said drawing-event generation unit executes, as the drawing-event which triggers said drawing unit, window size change, window movement, change of overlapping window position, window visualization, invalidation of a window drawing area, or window color change.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The window display system according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein said drawing-event generation unit further:
<claim-text>holds, as predetermined window states, states of various kinds of windows;</claim-text>
<claim-text>holds, as an obtained window state, a state of a target window which is the single basic window drawn by said drawing unit;</claim-text>
<claim-text>selects, as a selected window state, one state from the predetermined window states;</claim-text>
<claim-text>compares selected window state to the obtained window state;</claim-text>
<claim-text>chooses another state from the predetermined window states, when the selected window state is identical to the obtained window state;</claim-text>
<claim-text>chooses the selected window state, when the selected window state is different from the obtained window state; and</claim-text>
<claim-text>sets the chosen state as a new window state of the target window, so that the target window generates the drawing-event, and said drawing unit draws, on the single basic window, the first window structure or the second window structure.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The window display system according to <claim-ref idref="CLM-00003">claim 3</claim-ref>,
<claim-text>wherein the predetermined window states include states of various windows having respective different window sizes.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The window display system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said first window structure creation unit and said second window structure creation unit further obtain a pointer to a target window with which the first or second window structure is to be associated or the target window itself, and create the first or second window structure for the pointer or the target window.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The window display system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,
<claim-text>wherein, when said associating unit switches the first window structure to the second window structure, said associating unit deletes the first window structure and said second window structure creation unit creates the second window structure, and</claim-text>
<claim-text>wherein when said associating unit switches the second window structure to the first window structure, said associating unit deletes the second window structure and said first window structure creation unit creates the first window structure.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The window display system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,
<claim-text>wherein said drawing unit includes a display screen, and</claim-text>
<claim-text>wherein said drawing unit displays only one window on the display screen, and draws, as the only one window, a set of (i) the single basic window and (ii) the first window structure associated by said associating unit with the single basic window or the second window structure associated by said associating unit with the single basic window.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The window display system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,
<claim-text>wherein the event for changing the size of the single basic window by the predetermined number of pixels includes a changing of a window size by a number of pixels less than a few pixels, a difference in the changing of the window size being too small to be perceived by a human being.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A window display method of displaying a window under management of a window management unit for managing plural windows as regions for display, each of the plural windows being composed of a single basic window and at least one window structure, said window display method comprising:
<claim-text>creating or obtaining, in a main memory of a window display system, a single basic window as a region for display under management of the window management unit;</claim-text>
<claim-text>creating, in the main memory, a first window structure, the first window structure being a first set of display elements to be displayed on the single basic window and data displayable on a single window under management of the window management unit;</claim-text>
<claim-text>creating, in a main memory, a second window structure, the second window structure being a second set of display elements to be displayed on the single basic window and data displayable on a single window under management of the window management unit;</claim-text>
<claim-text>associating the single basic window with one of the first window structure and the second window structure;</claim-text>
<claim-text>drawing (a) the single basic window and (b) the one of the first window structure and the second window structure by recording, onto a graphic memory as image data, the one of the first window structure and the second window structure together with the single basic window, the single basic window being associated with the one of the first window structure and the second window structure; and</claim-text>
<claim-text>performing one of (i) generating a drawing-event which triggers said drawing and (ii) executing a command of causing said drawing, wherein in said associating, a window structure to be associated with the single basic window is switched from the first window structure to the second window structure, or from the second window structure to the first window structure, when a predetermined event is detected by the window management unit,</claim-text>
<claim-text>wherein in said performing, (i) the drawing-event which triggers starting of said drawing is generated or (ii) the command of causing said drawing is executed, when the window structure to be associated with the single basic window is switched, and</claim-text>
<claim-text>wherein said drawing includes drawing, on the single basic window, (a) the single basic window and (b) the one of the first window structure switched to be associated with the single basic window and the second window structure switched to be associated with the single basic window (i) after (i-1) the drawing-event is generated in said performing which triggers starting of said drawing, (i-2) the window management unit detects the drawing-event, and (i-3) adjustment for providing the drawing even to the single basis window is performed or (ii) after the command of causing said drawing to be executed in said executing.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The window display method according to <claim-ref idref="CLM-00009">claim 9</claim-ref>,
<claim-text>wherein said drawing includes displaying only one window on a display screen, and drawing, as the only one window, a set of (i) the single basic window and (ii) the first window structure associated in said associating with the single basic window or the second window structure associated in said associating with the single basic window.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The window display method according to <claim-ref idref="CLM-00009">claim 9</claim-ref>,
<claim-text>wherein the event for changing the size of the single basic window by the predetermined number of pixels includes a changing of a window size by a number of pixels less than a few pixels, a difference in the changing of the window size being too small to be perceived by a human being.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A non-transitory computer-readable storage medium having a program stored thereon that causes a computer to perform a window display method of displaying a window under management of a window management unit for managing plural windows as regions for display, each of the plural windows being composed of a single basic window and at least one window structure, the window display method comprising:
<claim-text>creating or obtaining, in a main memory, a single basic window as a region for display under management of the window management unit;</claim-text>
<claim-text>creating, in the main memory, a first window structure, the first window structure being a first set of display elements to be displayed on the single basic window and data displayable on a single window under management of the window management unit;</claim-text>
<claim-text>creating, in the main memory, a second window structure, the second window structure being a second set of display elements to be displayed on the single basic window and data displayable on a single window under management of the window management unit;</claim-text>
<claim-text>associating the single basic window with one of the first window structure and the second window structure;</claim-text>
<claim-text>drawing (a) the single basic window and (b) the one of the first window structure and the second window structure by recording, onto a graphic memory as image data, the one of the first window structure and the second window structure together with the single basic window, the single basic window being associated with the one of the first window structure and the second window structure; and</claim-text>
<claim-text>performing one of (i) generating a drawing-event which triggers said drawing and (ii) executing a command of causing said drawing,</claim-text>
<claim-text>wherein in said associating, a window structure to be associated with the single basic window is switched from the first window structure to the second window structure, or from the second window structure to the first window structure, when a predetermined event is detected, wherein in said performing (i), the drawing-event which triggers starting of said drawing is generated or (ii) the command of causing said drawing is executed, when the window structure to be associated with the single basic window is switched, and</claim-text>
<claim-text>wherein said drawing includes drawing, on the single basic window, (a) the single basic window and (b) the one of the first window structure switched to be associated with the single basic window or the second window structure switched to be associated with the single basic window (i) after (i-1) the drawing-event is generated in said performing which triggers starting of said drawing, (i-2) the window management unit detects the drawing-event, and (i-3) adjustment for providing the drawing event to the single basic window is performed or (ii) after the command of causing said drawing to be executed in said executing. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
