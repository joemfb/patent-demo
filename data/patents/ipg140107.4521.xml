<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625605-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625605</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13112257</doc-number>
<date>20110520</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>242</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20110101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>56</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>37039542</main-classification>
<further-classification>3702301</further-classification>
<further-classification>370231</further-classification>
<further-classification>37039521</further-classification>
</classification-national>
<invention-title id="d2e53">Non-uniform per-packet priority marker for use with adaptive protocols</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6501760</doc-number>
<kind>B1</kind>
<name>Ohba et al.</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6646988</doc-number>
<kind>B1</kind>
<name>Nandy et al.</name>
<date>20031100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370235</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6781956</doc-number>
<kind>B1</kind>
<name>Cheung</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6885638</doc-number>
<kind>B2</kind>
<name>Xu et al.</name>
<date>20050400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370230</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>8255515</doc-number>
<kind>B1</kind>
<name>Melman et al.</name>
<date>20120800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709224</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2007/0127370</doc-number>
<kind>A1</kind>
<name>Chang et al.</name>
<date>20070600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370229</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2008/0175148</doc-number>
<kind>A1</kind>
<name>Todd et al.</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370235</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00008">
<othercit>International Search Report mailed Jul. 17, 2012 in corresponding International Application No. PCT/US2012/032050.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>370229</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370230</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370232</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370237</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>3702301</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370231</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>37039521</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>37039542</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709224</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>23</number-of-drawing-sheets>
<number-of-figures>25</number-of-figures>
</figures>
<us-related-documents>
<continuation-in-part>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>12200264</doc-number>
<date>20080828</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>8203956</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13112257</doc-number>
</document-id>
</child-doc>
</relation>
</continuation-in-part>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120176903</doc-number>
<kind>A1</kind>
<date>20120712</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Kastenholtz</last-name>
<first-name>Frank</first-name>
<address>
<city>Medford</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Poplawski Ma</last-name>
<first-name>Laura Jane</first-name>
<address>
<city>Somerville</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Milliken</last-name>
<first-name>Walter Clark</first-name>
<address>
<city>Dover</city>
<state>NH</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Troxel</last-name>
<first-name>Gregory Donald</first-name>
<address>
<city>Stow</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Kastenholtz</last-name>
<first-name>Frank</first-name>
<address>
<city>Medford</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Poplawski Ma</last-name>
<first-name>Laura Jane</first-name>
<address>
<city>Somerville</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Milliken</last-name>
<first-name>Walter Clark</first-name>
<address>
<city>Dover</city>
<state>NH</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Troxel</last-name>
<first-name>Gregory Donald</first-name>
<address>
<city>Stow</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Chapin IP Law, LLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Raytheon BBN Technologies Corp.</orgname>
<role>02</role>
<address>
<city>Cambridge</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Nguyen</last-name>
<first-name>Brian D</first-name>
<department>2472</department>
</primary-examiner>
<assistant-examiner>
<last-name>Nguyen</last-name>
<first-name>Toan</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method, apparatus and computer program product for non-uniform per-packet priority marking for use with adaptive protocols is presented. A packet is received at a first network device, the packet assigned to a priority band. A priority is determined for the packet between a lowest priority of the priority band and a highest priority of the priority band, the priority for the packet selected based on a target distribution of priorities within the priority band, the target distribution comprising a distribution selected to achieve a desired capacity relationship among groups of packets assigned to different priority bands. The selected priority is assigned to the packet.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="114.13mm" wi="163.41mm" file="US08625605-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="140.72mm" wi="174.84mm" file="US08625605-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="141.99mm" wi="191.85mm" file="US08625605-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="143.26mm" wi="184.32mm" file="US08625605-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="154.60mm" wi="171.70mm" file="US08625605-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="215.22mm" wi="148.34mm" file="US08625605-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="231.65mm" wi="141.99mm" file="US08625605-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="168.57mm" wi="167.30mm" file="US08625605-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="252.48mm" wi="176.70mm" file="US08625605-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="124.29mm" wi="157.82mm" file="US08625605-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="220.22mm" wi="163.49mm" file="US08625605-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="187.45mm" wi="148.34mm" file="US08625605-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="200.07mm" wi="172.89mm" file="US08625605-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="179.83mm" wi="169.76mm" file="US08625605-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="182.37mm" wi="173.57mm" file="US08625605-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="188.04mm" wi="169.76mm" file="US08625605-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="187.45mm" wi="173.57mm" file="US08625605-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="186.77mm" wi="201.34mm" file="US08625605-20140107-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="189.99mm" wi="186.18mm" file="US08625605-20140107-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="193.12mm" wi="181.78mm" file="US08625605-20140107-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="196.93mm" wi="178.65mm" file="US08625605-20140107-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="181.78mm" wi="190.58mm" file="US08625605-20140107-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00022" num="00022">
<img id="EMI-D00022" he="236.05mm" wi="162.64mm" file="US08625605-20140107-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00023" num="00023">
<img id="EMI-D00023" he="175.34mm" wi="137.58mm" file="US08625605-20140107-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is a continuation-in-part of U.S. application Ser. No. 12/200,264, filed Aug. 28, 2008, now U.S. Pat. No. 8,203,956.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?GOVINT description="Government Interest" end="lead"?>
<heading id="h-0002" level="1">GOVERNMENT RIGHTS</heading>
<p id="p-0003" num="0002">This invention was made with government support under Contract Number N66001-09-C-2073 awarded by DARPA. The government has certain rights in this invention.</p>
<?GOVINT description="Government Interest" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0003" level="1">BACKGROUND</heading>
<p id="p-0004" num="0003">A typical data communications network includes multiple host computers that are linked together by a combination of data communications devices and transmission media. In general, the host computers communicate by packaging data using a standardized protocol or format such as a network packet or cell (hereinafter generally referred to as a packet), and exchanging the packaged data through the data communications devices and transmission media.</p>
<p id="p-0005" num="0004">In the field of computer networking and other packet-switched telecommunication networks, the traffic engineering term quality of service (QoS) refers to control mechanisms for achieving a desired service quality. Quality of service is the ability to provide different priority to different applications, users, or data flows, or to guarantee a certain level of performance to a data flow. For example, a required bit rate, delay, jitter, packet dropping probability and/or bit error rate may be guaranteed. Quality of service guarantees are important if the network capacity is insufficient, especially for real-time streaming multimedia applications such as Voice over IP (VoIP) and IP-TV, since these often require fixed bit rate and are delay sensitive, and in networks where the capacity is a limited resource, for example in cellular data communication.</p>
<p id="p-0006" num="0005">For example, a distinction may be drawn between packets carrying video data (i.e., video packets belonging to a video QoS class) and packets carrying general data (i.e., general data packets belonging to a general data QoS class such as Best Effort Service). In this arrangement, a data communications device processes video packets through a network differently than general data packets due to different link resource availability and resources being allocated differently based on the QoS class of the packets.</p>
<p id="p-0007" num="0006">There are different types of QoS transmission processing techniques. In one QoS transmission processing technique (hereinafter called QoS class-prioritized processing), a data communications device internally prioritizes the processing of different QoS class packets in accordance with a pre-established QoS policy. For example, in accordance with one such QoS policy, a data communications device gives higher priority to video packets relative to general data packets. Accordingly, if the data communications device simultaneously receives a video packet and a general data packet (e.g., through multiple input ports), the QoS policy directs the device to process the video packet before the general data packet. As a result, in QoS class-prioritized processing, packet destinations (i.e., receiving host computers) generally perceive different responses, or Qualities of Service, for different QoS classes (e.g., faster video transmissions than general data transmissions).</p>
<p id="p-0008" num="0007">In another QoS processing technique (hereinafter called load-directed routing), the data communications device generally directs packets through the network based on network load conditions. For example, suppose that the data communications device has multiple output ports to data paths that eventually lead to the same remote destination (i.e., the same receiving host computer). When the data communications device receives a video packet destined for that remote destination, the device transmits the video packet out the output port expected to lead to a low traffic area of the network. On the other hand, when the device receives a general data packet destined for the same remote destination, the device transmits the general data packet out a different output port expected to lead to a high traffic area of the network. With this arrangement, the video packet should travel through the network faster than the general data packet. Accordingly, the load-directed routing technique generally provides the same result as the QoS class-prioritized routing technique. That is, packet destinations (i.e., receiving host computers) generally perceive different Quality of Service or responses for different QoS classes (e.g., quicker video transmissions than general data transmissions).</p>
<p id="p-0009" num="0008">A network or protocol that supports QoS may agree on a traffic contract with the application software and reserve capacity in the network nodes, for example during a session establishment phase. During the session it may monitor the achieved level of performance, for example the data rate and delay, and dynamically control scheduling priorities in the network nodes. It may release the reserved capacity during a tear down phase.</p>
<p id="p-0010" num="0009">A best-effort network or service does not support quality of service. An alternative to complex QoS control mechanisms is to provide high quality communication over a best-effort network by over-provisioning the capacity so that it is sufficient for the expected peak traffic load.</p>
<p id="p-0011" num="0010">Another processing technique involves splitting traffic among multiple output queues which are then scheduled in some fashion (often using an algorithm called Weighted Fair Queuing (WFQ), which provides a specified minimum fraction of the link bandwidth to each queue feeding the link). Diffserv services (described below) often uses WFQ between traffic classes, with each class having its own queue.</p>
<p id="p-0012" num="0011">Random early detection (RED), also known as random early discard or random early drop is an active queue management technique. It is also a congestion avoidance algorithm. In the traditional tail drop algorithm, a router or other network component buffers as many packets as it can, and simply drops the ones it cannot buffer. If buffers are constantly full, the network is congested. Tail drop distributes buffer space unfairly among traffic flows. Tail drop can also lead to Transmission Control Protocol (TCP) global synchronization as all TCP connections &#x201c;hold back&#x201d; simultaneously, and then step forward simultaneously. Networks become under-utilized and flooded by turns. RED addresses these issues by monitoring the average queue size and drops (or marks when used in conjunction with ECN) packets based on statistical probabilities. If the buffer is almost empty, all incoming packets are accepted. As the queue grows, the probability for dropping an incoming packet grows too. As the queue becomes full, drops become very likely, preventing the buffer from overflowing. RED is considered more fair than tail drop. The more a host transmits, the more likely it is that its packets are dropped. Early detection helps avoid global synchronization.</p>
<p id="p-0013" num="0012">Per-flow QoS is also known as &#x201c;intserv&#x201d;, for the IETF working group that defined it. It typically used WFQ with a single queue for each end-user traffic flow (e.g. a single TCP connection, or all traffic between a specific pair of sites).</p>
<p id="p-0014" num="0013">Another type of management technique is knows as Differentiated Services (diffserv). In diffserv, users pay for the desired bandwidth speed and allotment (collectively referred to as a service level agreement (SLA)) for a packet flow. A flow is marked at every router, the marking indicating the level of service the packet flow is receiving. For example, a green marking indicates that the packet flow is within the SLA, a yellow marking indicates that the flow is slightly over the paid for SLA (but not by a large amount), a red indicator means the packet flow is over its SLA. A flow may transition between different markings as it traverses a network. Yet another type of management technique is known as Multi-Level Priority Marking (MLPM). In MLPM the IP Precedence field of a packet is used to encode the value of packets in an encoded video stream, so that the least valuable packets are dropped first.</p>
<heading id="h-0004" level="1">SUMMARY</heading>
<p id="p-0015" num="0014">Conventional mechanisms such as those explained above suffer from a variety of deficiencies. One such deficiency is that conventional QoS implementations, for example Per-flow QoS, requires complex router state and signaling as well as a large number of queues which result in high equipment costs to implement and maintain. Per-flow QoS also requires high management complexity which also is costly, and as such Internet Service Providers (ISPs) typically do not use it. For traffic class QoS (e.g., diffserv), the cost and management is much simpler since there is no signaling and relatively few queues, but it really is just a more expensive best-effort service, therefore users tend not to purchase it since they are not guaranteed the performance they desire. In MLPM, because the precedence levels were assigned to different queues in the routers, the packets would arrive wildly out-of-order. Reordering the packets into their correct order is difficult and expensive, and become even more so at higher speeds.</p>
<p id="p-0016" num="0015">In existing QoS enforcement, packet ordering may be changed to favor &#x201c;important&#x201d; flows or to rate-shape flows or classes, as well as to keep links busy if any traffic is available. The ordering method may be by priority or weighted fair queuing. As stated earlier, reordering the packets into their correct order is difficult and expensive, and become even more so at higher speeds. Packets are dropped if queues back up too far or if Random Early Discard (RED) triggers (to rate control TCP without synchronized misbehavior).</p>
<p id="p-0017" num="0016">Embodiments of the invention significantly overcome such deficiencies and provide mechanisms and techniques that provide precedence drop quality of service (PDQoS) methodology. The precedence drop QoS methodology is simple to configure and manage, offers several advantages to end uses, and is straightforward to implement.</p>
<p id="p-0018" num="0017">The precedence drop QoS methodology assigns a precedence drop value to each packet and packets are dropped if a sum of queued packet sizes of all packets having a same or higher drop precedence value than the newly received packet is larger than a threshold value. This provides user control over congestion and removes the need for packet re-ordering for QoS enforcement. Thus QoS enforcement can be done entirely in a simple packet-drop decision, without employing multiple output queues and a complex multi-queue scheduler. Precedence-based dropping can also replace RED, and is of similar (low) complexity. (In actual fact, it's easier, because RED normally require doing integer division for every packet, PDQoS only needs to do much simpler adds and subtracts. However, it does need a small state table, which RED implementations don't require.)</p>
<p id="p-0019" num="0018">Different packets in same flow may have radically different drop precedences (i.e. value to user).</p>
<p id="p-0020" num="0019">In a particular embodiment of a method for providing drop precedence quality of service, the method includes determining a drop precedence value for a packet and inserting the drop precedence value into the packet. The method further includes transmitting the packet having the drop precedence value inserted therein. Typically this is accomplished at a grooming router or by the originating host.</p>
<p id="p-0021" num="0020">In another embodiment of a method of providing drop precedence quality of service, the method includes receiving a plurality of packets, at least one packet of the plurality of packets having a drop precedence value associated therewith. The method further includes determining for a newly received packet whether a sum of queued packet sizes of all packets having a same or higher drop precedence value than the newly received packet is larger than a threshold value. The method additionally includes dropping the newly received packet when the sum of queued packet sizes of all packets having a same or higher drop precedence value than the newly received packet is larger than the threshold value.</p>
<p id="p-0022" num="0021">Other embodiments include a computer readable medium having computer readable code thereon for providing drop precedence quality of service. The computer readable medium includes instructions for determining a drop precedence value for a packet and instructions for inserting the drop precedence value into the packet. The computer readable medium further includes instructions for transmitting the packet having the drop precedence value inserted therein.</p>
<p id="p-0023" num="0022">In another embodiment, a computer readable medium having computer readable code thereon for providing drop precedence quality of service includes instructions for receiving a plurality of packets, at least one packet of the plurality of packets having a drop precedence value associated therewith. The computer readable medium further includes instructions for determining for a newly received packet whether a sum of queued packet sizes of all packets having a same or higher drop precedence value than the newly received packet is larger than a threshold value. The computer readable medium additional includes instructions for dropping the newly received packet when the sum of queued packet sizes of all packets having a same or higher drop precedence value than the newly received packet is larger than the threshold value.</p>
<p id="p-0024" num="0023">In still another embodiment, a particular method for non-uniform per-packet priority marking for use with adaptive protocols includes receiving a packet at a first network device, the packet assigned to a priority band. The method further includes determining a priority for the packet between a lowest priority of the priority band and a highest priority of the priority band, the priority for the packet selected based on a target distribution of priorities within the priority band, the target distribution comprising a distribution selected to achieve a desired capacity relationship among groups of packets assigned to different priority bands. Additionally, the method includes assigning the selected priority to the packet.</p>
<p id="p-0025" num="0024">In yet still another embodiment, a computer readable medium having computer readable code thereon for non-uniform per-packet priority marking for use with adaptive protocols includes instructions for receiving a packet at a first network device, the packet assigned to a priority band. The computer readable medium further includes determining a priority for the packet between a lowest priority of the priority band and a highest priority of the priority band, the priority for the packet selected based on a target distribution of priorities within the priority band, the target distribution comprising a distribution selected to achieve a desired capacity relationship among groups of packets assigned to different priority bands. Additionally, the computer readable medium includes instructions for assigning the selected priority to the packet.</p>
<p id="p-0026" num="0025">Still other embodiments include a computerized device, configured to process all the method operations disclosed herein as embodiments of the invention. In such embodiments, the computerized device includes a memory system, a processor, communications interface in an interconnection mechanism connecting these components. The memory system is encoded with a process that provides for non-uniform per-packet priority marking for use with adaptive protocols as explained herein that when performed (e.g. when executing) on the processor, operates as explained herein within the computerized device to perform all of the method embodiments and operations explained herein as embodiments of the invention. Thus any computerized device that performs or is programmed to perform the processing explained herein is an embodiment of the invention.</p>
<p id="p-0027" num="0026">Other arrangements of embodiments of the invention that are disclosed herein include software programs to perform the method embodiment steps and operations summarized above and disclosed in detail below. More particularly, a computer program product is one embodiment that has a computer-readable medium including computer program logic encoded thereon that when performed in a computerized device provides associated operations for non-uniform per-packet priority marking for use with adaptive protocols as explained herein. The computer program logic, when executed on at least one processor with a computing system, causes the processor to perform the operations (e.g., the methods) indicated herein as embodiments of the invention. Such arrangements of the invention are typically provided as software, code and/or other data structures arranged or encoded on a computer readable medium such as an optical medium (e.g., CD-ROM), floppy or hard disk or other a medium such as firmware or microcode in one or more ROM or RAM or PROM chips or as an Application Specific Integrated Circuit (ASIC) or as downloadable software images in one or more modules, shared libraries, etc. The software or firmware or other such configurations can be installed onto a computerized device to cause one or more processors in the computerized device to perform the techniques explained herein as embodiments of the invention. Software processes that operate in a collection of computerized devices, such as in a group of data communications devices or other entities can also provide the system of the invention. The system of the invention can be distributed between many software processes on several data communications devices, or all processes could run on a small set of dedicated computers, or on one computer alone.</p>
<p id="p-0028" num="0027">It is to be understood that the embodiments of the invention can be embodied strictly as a software program, as software and hardware, or as hardware and/or circuitry alone, such as within a data communications device. The features of the invention, as explained herein, may be employed in data communications devices and/or software systems for such devices.</p>
<p id="p-0029" num="0028">Note that each of the different features, techniques, configurations, etc. discussed in this disclosure can be executed independently or in combination. Accordingly, the present invention can be embodied and viewed in many different ways.</p>
<p id="p-0030" num="0029">Also, note that this summary section herein does not specify every embodiment and/or incrementally novel aspect of the present disclosure or claimed invention. Instead, this summary only provides a preliminary discussion of different embodiments and corresponding points of novelty over conventional techniques. For additional details, elements, and/or possible perspectives (permutations) of the invention, the reader is directed to the Detailed Description section and corresponding figures of the present disclosure as further discussed below.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0031" num="0030">The foregoing will be apparent from the following more particular description of preferred embodiments of the invention, as illustrated in the accompanying drawings in which like reference characters refer to the same parts throughout the different views. The drawings are not necessarily to scale, emphasis instead being placed upon illustrating the principles of the invention.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 1</figref> depicts a graph of drop precedence value versus a queue length of higher-residence packets;</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 2</figref> depicts a graph of drop precedence value versus time for TCP packet flows;</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 3</figref> depicts a graph of drop precedence value versus time for video packet flows;</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 4</figref> depicts a graph of drop precedence value versus a queue length of higher-precedence packets for a two-level priority scheme;</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 5</figref> depicts a graph of drop precedence value versus a packet rate for a Service Level Agreement (SLA);</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 6</figref> depicts a graph of drop precedence value versus a packet rate for a preferred user Service Level Agreements (SLA);</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 7</figref> depicts a graph of drop precedence value versus a packet rate per level for a three tier user class Service Level Agreements (SLA);</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 8</figref> depicts a graph of drop precedence value versus a packet rate per level for a three tier pre-emption-based Service Level Agreements (SLA);</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 9</figref> depicts a graph of drop precedence value versus a packet rate for different SLA users;</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIGS. 10A and 10B</figref> are a flow diagram of a particular embodiment of a method for performing drop precedence quality of service in accordance with embodiment of the present invention;</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 11</figref> is a flow diagram of a particular embodiment of a method for assigning drop precedence values for packets in accordance with embodiment of the present invention;</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 12</figref> illustrates an example computer system architecture for a computer system that performs drop precedence quality of service in accordance with embodiments of the invention;</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 13</figref> illustrates four TCP flows using uniform distribution priority assignment showing a number of packets per priority;</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 14</figref> illustrates four TCP flows using uniform distribution priority assignment showing a number of throughput over time;</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 15</figref> illustrates four TCP flows using uniform distribution priority assignment showing a number of packets per priority;</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 16</figref> illustrates four TCP flows using uniform distribution priority assignment showing a number of throughput over time;</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 17</figref> illustrates a relationship between an amount of priority overlap between flows and a percentage of bottleneck capacity used by each flow;</p>
<p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. 18</figref> illustrates four TCP flows using normal distribution priority assignment showing a number of packets per priority in accordance with embodiments of the invention;</p>
<p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. 19</figref> illustrates four TCP flows using uniform distribution priority assignment showing a number of throughput over time in accordance with embodiments of the invention;</p>
<p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. 20</figref> illustrates four TCP flows using uniform distribution priority assignment showing a number of packets per priority in accordance with embodiments of the invention;</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 21</figref> illustrates four TCP flows using uniform distribution priority assignment showing a number of throughput over time in accordance with embodiments of the invention;</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 22</figref> illustrates a relationship between an amount of priority overlap between flows and a percentage of bottleneck capacity used by each flow in accordance with embodiments of the invention;</p>
<p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. 23</figref> is a flow diagram of a particular embodiment of a method for non-uniform per-packet priority marking for use with adaptive protocols in accordance with embodiment of the present invention; and</p>
<p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. 24</figref> illustrates an example computer system architecture for a computer system that performs non-uniform per-packet priority marking for use with adaptive protocols in accordance with embodiments of the invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0056" num="0055">A method and apparatus are described for providing drop precedence quality of service (PDQoS). A grooming router, source host computer or application is used wherein a drop precedence value for a packet is determined and inserted into the packet. The packet having the drop precedence value inserted therein is then transmitted. A router receives a plurality of packets, at least one packet of the plurality of packets having a drop precedence value associated therewith. The router then determines for a newly received packet having a drop precedence value associated therewith whether a sum of queued packet sizes of all packets having a same or higher drop precedence value than the newly received packet is larger than a threshold value. The router will drop the newly received packet when the sum of queued packet sizes of all packets having a same or higher drop precedence value than the newly received packet is larger than the threshold value, or forward the packet when the sum of queued packet sizes of all packets having a same or higher drop precedence value than the newly received packet are not larger than the threshold value. Only packet drop behavior is used to provide a QoS type effect, as well as providing user control over congestion and eliminating the need for packet re-ordering.</p>
<p id="p-0057" num="0056">Referring to <figref idref="DRAWINGS">FIG. 1</figref>, a graph <b>10</b> is shown. In graph <b>10</b>, the vertical axis is the drop precedence. Here, 256 precedence levels are possible, by use of an 8-bit drop precedence field. The horizontal axis shows the sum of the queue length of higher precedence packets. Also shown is a &#x201c;Drop region&#x201d; <b>12</b>, defined by the threshold value L<sub>drop </sub>wherein packets falling into this region are dropped since the sum of queued packet sizes of all higher drop precedence values is greater than this latency threshold value. When the queue exceeds the L<sub>drop </sub>value for a particular precedence, any packets received having that precedence value will be dropped. The line P<sub>cutoff </sub>shows the intersection of curve <b>14</b> with the L<sub>drop </sub>value.</p>
<p id="p-0058" num="0057">In one particular embodiment a &#x201c;grooming&#x201d; enterprise border router is used to mark the packets with a drop precedence value (other embodiments may use a source host computer or application for this task). The content and/or classification of the packet is looked at, and a classification is performed based on a predetermined policy. The grooming router can use almost the same classification rules as are currently used for classifying flows by enterprise border routers. The difference is that the classifying is done on a per packet basis instead of a per flow basis. Stated differently, the difference is that in addition to determining a flow type by address, protocol and port information, the marking process can use additional information from the packet to choose particular values for specific packets within the flow. There are several different ways for the grooming router to assign a drop precedence value to a packet. Some packets in a same flow are more important than other packets of the same flow, and the more important packets are given a higher drop precedence value. For example, in a video application, key frames would be given a higher drop precedence value than incremental frames. While this can be done at the grooming router, this may also be done at the application server itself, and the grooming router would not be required to mark these packets with a drop precedence value since the packets have already been classified.</p>
<p id="p-0059" num="0058">Referring now to <figref idref="DRAWINGS">FIG. 2</figref>, a Transmission Control Protocol (TCP) marking example is shown. A graph <b>20</b> is shown having the drop precedence value on a vertical axis and time on the horizontal axis. The drop precedence of control packets (e.g. Open <b>22</b> or Close <b>24</b> or acknowledgements <b>26</b>) is given a higher drop precedence value than other packets (data <b>28</b>). Since the control packets (<b>22</b>, <b>24</b>, <b>26</b>) are more important than the data packets <b>28</b> the control packets are given a higher drop precedence value, whereas the data packets are given various lower drop precedence values. For example, if a user is accessing a web site it is more important to establish the link (using the control packets) since the user doesn't want to wait a period of time to open a web page, than it is for a particular file to download (the data packets) from the web page.</p>
<p id="p-0060" num="0059">The data packets are given random or pseudo-random drop precedence values from a range of values that the classifier assigned to the TCP session. This randomness, in conjunction with a PDQoS enforcement mechanism at congestion points, performs the same function as RED does in current routers&#x2014;it causes flows to be penalized semi-randomly, based on queue depths, causing TCP backoff to be de-synchronized at a given congestion point. (It may also be worth noting that PDQoS-marked flows will still work with classical RED-based routers, if the classical router classifies all the packets of various drop precedences used by the flow as belonging to the same queue.)</p>
<p id="p-0061" num="0060">Referring now to <figref idref="DRAWINGS">FIG. 3</figref>, a video-marking example is shown. In this graph <b>30</b>, the vertical axis is again the drop precedence value and the horizontal axis is time. Here, all packets of the entire video are given a relatively high drop precedence value, since it is desirable not to drop any packets of the video as the quality of the video would be degraded when packets are dropped. Within the video flow, packets which are key frames <b>32</b> are given the highest drop precedence value while incremental packets <b>34</b> of the video flow are given lower drop precedence values than the key frames <b>32</b>, but are still given a relatively high drop precedence value as compared to other data that might be occurring on the router. Thus, in this example, incremental video frames <b>34</b> would be dropped prior to key frames <b>32</b> being dropped in the event congestion is encountered.</p>
<p id="p-0062" num="0061">The drop precedence methodology is straight forward to implement and manage. One big advantage offered by the drop precedence methodology is that since no packet re-ordering is done, no packet re-ordering has to be handled. As a direct result, a single simple, cheap Dynamic Random Access Memory (DRAM) First In/First Out (FIFO) buffer can be used. Additionally, there is no signaling or per-flow state that has to be maintained or monitored. A per-port set of traffic counters (a total of 256, one for each drop precedence level) can be used. On a per customer arrangement, there are two per-customer Service Level Agreement (SLA) variables (P<sub>max</sub>, BW<sub>total</sub>). BW<sub>total </sub>is the total bandwidth the customer is buying from the network provider. P<sub>max </sub>is the maximum precedence value the network provider allows the user to send at. In this type of environment, the Internet Service Provider (ISP) is not responsible for managing the edge routers, instead the customers manage edge-grooming routers and define how their traffic is going to be treated by the network. This is one particular type of SLA, and probably the simplest (and thus most likely to be used). The BWtotal amount is split evenly among all the drop precedence values 0 . . . Pmax&#x2014;i.e., the customer gets BWtotal/(Pmax+1) bandwidth available over each of the precedences 0 . . . Pmax, measured over whatever time interval the SLA is applied to.</p>
<p id="p-0063" num="0062">There can be two types of network traffic. Traffic that is latency sensitive (low-latency traffic) such as voice and video conferencing, and traffic that is not latency sensitive (normal). Low latency support can be accomplished by providing a two-level priority scheme. The two-level priority scheme incorporates two output queues, a low-latency output queue and a normal output queue. Thus, for incoming traffic, traffic having a low-latency is sent to the low-latency queue and normal traffic is sent to the normal queue. The low-latency queue is high priority, and typically only a relatively few precedence levels are reserved for low-latency traffic. Low-latency traffic tends to be inelastic, and therefore doesn't require many levels. It is also possible to overlap levels if other means are used to pick a queue (e.g. which port number is used). The low-latency traffic uses a separate small SRAM buffer which has its own queue threshold (L<sub>lowlat</sub>) which is lower than that of normal traffic.</p>
<p id="p-0064" num="0063">An example of this is shown in <figref idref="DRAWINGS">FIG. 4</figref>. Here a graph <b>40</b> is shown wherein the vertical axis is the drop precedence. Here, 256 precedence levels are possible, by use of an 8-bit drop precedence field. The horizontal axis shows the sum of the queue length of higher precedence packets. Also shown is a &#x201c;Drop Region&#x201d; <b>12</b>, defined by the threshold value L<sub>drop </sub>wherein packets falling into this region are dropped since the sum of queued packet sizes of all higher drop precedence values is greater than this latency threshold value. When the queue exceeds the L<sub>drop </sub>value for a particular precedence, any packets received having that precedence value will be dropped. The line P<sub>cutoff </sub>shows the intersection of curve <b>14</b> with the L<sub>drop </sub>value. In addition, for low-latency traffic a precedence level L<sub>lowlat </sub><b>40</b> is determined for this type of traffic. Also shown is a &#x201c;low-latency drop region&#x201d; <b>44</b>, defined by the threshold value L<sub>lowlat </sub>wherein packets falling into this region are dropped since the sum of queued packet sizes of all higher drop precedence values is greater than this latency threshold value L<sub>lowlat</sub>. When the queue exceeds the L<sub>lowlat </sub>value for a particular precedence, any packets received having that precedence value will be dropped. The line P<sub>lowlat </sub><b>42</b> shows the first precedence value in the low-latency region (i.e., it defines the boundary between drop precedences used for low-latency traffic, and drop precedences used for normal traffic).</p>
<p id="p-0065" num="0064">The presently disclosed methods and techniques for providing precedence drop QoS replaces RED for elastic TCP traffic, and gives applications and/or users control over what traffic is most important and what traffic is dropped first which in turn provides new capabilities and/or applications.</p>
<p id="p-0066" num="0065">One such application involves call admission control for inelastic traffic (e.g. VoIP). If the precedence level is set to a specific value for all VoIP traffic, then the VoIP traffic is getting through entirely until there is enough congestion in the network that the traffic having a higher precedence than the VoIP traffic will cause the VoIP traffic to completely drop out, which his the desired behavior for VoIP traffic. This is compared to conventional techniques where only a fraction of the VoIP traffic (e.g., ten percent) drops out. However, for VoIP traffic, if ten percent is going to be dropped, then the whole VoIP traffic should be dropped.</p>
<p id="p-0067" num="0066">Precedence drop QoS supports priority applications and pre-emption applications. The basic mechanism allows users to define customized QoS behaviors without the ISP being required to define the customized behavior. PDQoS statistics collection is added at an edge of a network. Customer traffic is then counted at each of 256 levels. For a fixed customer SLA, the total amount of traffic is limited per level (may also limit the levels usable). The network provider can either enforce the SLA and drop traffic exceeding the SLA or can charge additional fees for excess use. The network provider can also use a flexible pricing (usage-sensitive) arrangement, wherein the customer is charged a different price per 1 Mbit sent for each level. Customers could optimize marking to minimize costs. Such an environment would require the far end to feed back which levels get through, with the customers using the lowest precedence level that gets through to minimize their costs.</p>
<p id="p-0068" num="0067">Referring now to <figref idref="DRAWINGS">FIG. 5</figref>, a graph <b>50</b> is shown, the graph relating to a sample SLA agreement. In this example, most traffic is sent at a lower drop precedence level, and the higher precedence levels are used during bursts of traffic. <figref idref="DRAWINGS">FIG. 6</figref> shows a graph <b>60</b> relating to an alternate SLA agreement. The difference between the SLAs shown in <figref idref="DRAWINGS">FIGS. 5 and 6</figref> is that the SLA of <figref idref="DRAWINGS">FIG. 5</figref> limits the normal priority traffic to a smaller drop precedence range than in <figref idref="DRAWINGS">FIG. 6</figref>, though the total bandwidth for normal traffic (area of the lower rectangle) is the same for both customers. This allows the customer with the &#x201c;premium&#x201d; SLA shown in <figref idref="DRAWINGS">FIG. 6</figref> to get traffic through congestion points that would totally stop traffic from a customer using the SLA shown in <figref idref="DRAWINGS">FIG. 5</figref>, though only some fraction of his traffic would be getting through (above the Pcutoff value of the congestion point). Both SLAs include a small amount of low latency bandwidth, but the precedence ranges used for the two SLAs are different, again giving the customer with the SLA shown in <figref idref="DRAWINGS">FIG. 6</figref> an advantage when congestion occurs.</p>
<p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. 7</figref> shows a graph <b>70</b> relating to a 3-tier user class SLA arrangement. In this environment, there are three distinct service levels, namely gold, silver and bronze. The gold level includes a higher top-end drop precedence value than the silver or bronze levels, as well as all drop precedence values beneath the top-end drop precedence value. The silver level includes a higher top-end drop precedence value than the bronze level, as well as all drop precedence values beneath the top-end drop precedence level. The silver level top-end drop precedence value is less than the gold level top-end drop precedence value. The bronze level includes a lower top-end drop precedence value than the silver or gold levels, as well as all drop precedence values beneath the top-end drop precedence value. <figref idref="DRAWINGS">FIG. 8</figref> shows a graph <b>80</b> relating to a different 3-tier SLA, referred to herein as a pre-emption based SLA. In this type of arrangement, the gold level of service includes a set of drop precedence values that are higher than, and do not overlap with, either the silver or bronze service levels. Similarly, the silver level of service includes a set of precedence value that are less than the gold level set of precedence values but are higher than the bronze level of precedence values. The bronze level of service includes a set of drop precedence values that are lower than, and do not overlap with, either the silver or gold service levels.</p>
<p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. 9</figref> is a graph <b>90</b> showing how available bandwidth can be distributed. In this example, VoIP and Video Teleconferencing (VTC) having the highest priority. Mission-critical servers have the next highest priority followed by priority users then routine users. Outside users have the next to lowest priority, with elastic servers having the lowest priority. <figref idref="DRAWINGS">FIG. 9</figref> illustrates how the classification rules in a grooming router might carve up the available bandwidth at various drop precedence levels. Note that the various normal-latency applications use all the precedence levels, but some of them get more of various higher drop precedences. (Again, the area of a block indicates its total bandwidth. Inverse-L-shaped blocks allow the high-precedence applications to use both a significant amount of higher-precedence bandwidth, as well as use some additional bandwidth at lower precedences, when those levels are getting through.) This is one of any number of such carve-up schemes; generally the end-user would define these as policies to the enterprise border grooming router. In fact, these policies might be defined using a simple GUI interface that presented a diagram much like <figref idref="DRAWINGS">FIG. 9</figref>.</p>
<p id="p-0071" num="0070">Another use of PDQoS utilizes feedback of Pcutoff to the source (or its grooming router). This would have either the destination or intermediate routers report the minimum value of Pcutoff along the route of the flow to the source, allowing the source to simply not send packets with lower drop precedence values. A variant of this has upstream routers being informed of Pcutoff values on each link of the network, and using this information to pre-emptively drop packets that will likely be dropped as the flow progresses downstream. This frees up bandwidth that would be normally be used by packets being dropped further along each flow's path through the network core, giving the network a higher effective capacity in congestion scenarios.</p>
<p id="p-0072" num="0071">Still another use of PDQoS involves PDQoS-based Routing. If the link P<sub>cutoff </sub>is sent via routing, traffic can be re-routed to avoid congestion (congestion-aware routing). The router would select a path to the destination with lowest max P<sub>cutoff </sub>value. This is potentially better than a link utilization metric, as P<sub>cutoff </sub>implies not just link load, but also value to user. Like any differential routing scheme, routing performance will be subject to stability and routing-loop issues.</p>
<p id="p-0073" num="0072">The PDQoS enforcement algorithm works as follows. There are three sub-algorithms which typically operate as independent processes or threads: initialization, packet arrival processing, and packet transmission processing.</p>
<p id="p-0074" num="0073">The initialization thread is performed once at the start of time (e.g. at interface reset). The pseudo code for this is shown below.
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0074">1) QLen[p] is set to 0 for all drop precedences p in the range 0 . . . Pmax</li>
</ul>
</p>
<p id="p-0075" num="0075">The packet arrival processing thread pseudo code is listed below.
<ul id="ul0002" list-style="none">
    <li id="ul0002-0001" num="0076">1) Wait for a packet to arrive, and extract its drop precedence value P and packet length L</li>
    <li id="ul0002-0002" num="0077">2) If QLen[P]+L&#x3e;Ldrop, discard the packet and go to 1) to wait for another packet to arrive, else go to 3)</li>
    <li id="ul0002-0003" num="0078">3) For all values p&#x3c;=P (from the packet), QLen[p]=QLen[p]+L</li>
    <li id="ul0002-0004" num="0079">4) Queue the packet on the end of the transmission queue</li>
    <li id="ul0002-0005" num="0080">5) Go to step 1) to wait for another packet arrival</li>
</ul>
</p>
<p id="p-0076" num="0081">The packet transmission processing thread pseudo code is listed below.
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0082">1) Wait until the transmitter can accept another packet</li>
    <li id="ul0003-0002" num="0083">2) Dequeue the packet at the head of the transmission queue and extract its length L and drop precedence P.</li>
    <li id="ul0003-0003" num="0084">3) For all values p&#x3c;=P (from the packet), QLen[p]=QLen[p]&#x2212;L</li>
    <li id="ul0003-0004" num="0085">4) Deliver the packet to the transmitter for sending</li>
    <li id="ul0003-0005" num="0086">5) Go to step 1) to wait for the transmitter to be ready to accept another packet</li>
</ul>
</p>
<p id="p-0077" num="0087">The queue between the arrival and transmission processes is a simple FIFO, and the size will be related to Ldrop (at least Ldrop plus enough room for one maximum packet size at every precedence value 0 . . . Pmax, or maybe larger; i.e. minimum queue capacity=Ldrop+(Pmax*&#x3c;maximum packet size&#x3e;). For high-speed implementation, the QLen table can be structured as a binary tree of tables, reducing the number of adds and subtracts from an average of Pmax/2 to log 2(Pmax).</p>
<p id="p-0078" num="0088">A flow chart of particular embodiments of the presently disclosed methods are depicted in <figref idref="DRAWINGS">FIGS. 10A</figref>, <b>10</b>B and <b>11</b>. The rectangular elements are herein denoted &#x201c;processing blocks&#x201d; and represent computer software instructions or groups of instructions. Alternatively, the processing blocks represent steps performed by functionally equivalent circuits such as a digital signal processor circuit or an application specific integrated circuit (ASIC). The flow diagrams do not depict the syntax of any particular programming language. Rather, the flow diagrams illustrate the functional information one of ordinary skill in the art requires to fabricate circuits or to generate computer software to perform the processing required in accordance with the present invention. It should be noted that many routine program elements, such as initialization of loops and variables and the use of temporary variables are not shown. It will be appreciated by those of ordinary skill in the art that unless otherwise indicated herein, the particular sequence of steps described is illustrative only and can be varied without departing from the spirit of the invention. Thus, unless otherwise stated the steps described below are unordered meaning that, when possible, the steps can be performed in any convenient or desirable order.</p>
<p id="p-0079" num="0089">Referring now to <figref idref="DRAWINGS">FIGS. 10A and 10B</figref>, a method <b>100</b> of routing a packet having a drop precedence value is shown. Method <b>100</b> begins with processing block <b>102</b> which recites receiving a packet having a drop precedence value associated therewith. The packet may be received from a grooming router or from a source which inserts the drop precedence value in the packet. Processing block <b>104</b> discloses wherein the receiving a packet having a drop precedence value associated therewith comprises the packet having a drop precedence value in an Internet Protocol (IP) Type of Service (TOS) field of the packet. Two packets in a same flow may have different drop precedence values.</p>
<p id="p-0080" num="0090">Processing block <b>106</b> states determining for the packet whether a sum of queued packet sizes of previously received packets having a higher drop precedence value than the packet is larger than a first threshold value. As recited in processing block <b>108</b>, the determining for the packet whether a sum of queued packet sizes of previously received packets having a higher drop precedence value than the packet is larger than a first threshold value utilizes a queue length counter per precedence level.</p>
<p id="p-0081" num="0091">Processing block <b>110</b> discloses dropping the packet when the sum of queued packet sizes of the previously received packets having a higher drop precedence value than the packet is larger than the first threshold value. The packet is forwarded when the sum of queued packet sizes of the previously received packets having a higher drop precedence value than the packet is less than the first threshold value.</p>
<p id="p-0082" num="0092">Processing block <b>112</b> states wherein the determining for the packet whether a sum of queued packet sizes of previously received packets having a higher drop precedence value than the packet is larger than a first threshold value and the dropping the packet when the sum of queued packet sizes of the previously received packets having a higher drop precedence value than the packet is larger than the first threshold value are used for at least one of the group consisting of providing Service Level Agreement (SLA) guarantees wherein a network provider performs one of the group consisting of dropping traffic exceeding the SLA, and charging additional fees for excess use; performing Transmission Control Protocol (TCP) flow control; propagating cutoff values for a plurality of links of the network and using said cutoff values to determine which packets to drop upstream of congestion points in said network; and performing routing, wherein the threshold value of packets is provided to routers and packets can be re-routed to avoid congestion.</p>
<p id="p-0083" num="0093">Processing continues with processing block <b>114</b> which discloses determining for the packet whether a sum of queued packet sizes of previously received packets having a higher drop precedence value than the packet is larger than a second threshold value.</p>
<p id="p-0084" num="0094">Processing block <b>116</b> states dropping the packet when the sum of queued packet sizes of the previously received packets having a higher drop precedence value than the packet is larger than the second threshold value, wherein the second threshold value is applied for a second queue. As shown in processing block <b>118</b>, the second queue is for low-latency traffic. The actions described in processing blocks <b>114</b> and <b>116</b> provide a PDQoS involving two types of traffic (e.g., low latency traffic and normal traffic).</p>
<p id="p-0085" num="0095">Referring now to <figref idref="DRAWINGS">FIG. 11</figref>, a particular embodiment of a method <b>150</b> for assigning a drop precedence level to a packet is shown. Method <b>150</b> begins with processing block <b>152</b> which discloses determining a drop precedence value for a packet. As shown in processing block <b>154</b> the determining is performed by either a grooming router, a source host operating system or an application running on the source host. Processing block <b>156</b> states at least two packets in a same flow have different drop precedence values. Processing block <b>158</b> recites wherein the drop precedence value is capable of being used by a router for determining for the packet whether a sum of queued packet sizes of previously received packets having a higher drop precedence value than the packet is larger than a first threshold value and dropping the packet when the sum of queued packet sizes of the previously received packets having a higher drop precedence value than the packet is larger than the first threshold value.</p>
<p id="p-0086" num="0096">Processing block <b>160</b> recites inserting the drop precedence value into the packet. As shown in processing block <b>162</b>, the inserting the drop precedence value into the packet comprises storing the drop precedence value into value in one of the group consisting of the Internet Protocol (IP) Type Of Service (TOS) field of the packet, an Internet Protocol (IP) option and a Transmission Control Protocol (TCP) option.</p>
<p id="p-0087" num="0097">Processing block <b>164</b> discloses transmitting the packet having the drop precedence value inserted therein. The algorithm used to set the precedence value is typically going to be user-configurable, and will often be expressed as set of policy statements to configure the grooming router (or host OS, or application). Policies will often consider the general type of traffic (such as the SLA carve-up in <figref idref="DRAWINGS">FIG. 9</figref> shows), as well as protocol and application data details (as discussed in the marking examples shown in <figref idref="DRAWINGS">FIGS. 2 and 3</figref>).</p>
<p id="p-0088" num="0098"><figref idref="DRAWINGS">FIG. 12</figref> is a block diagram illustrating an example computer system <b>200</b> for implementing PDQoS function <b>240</b> and/or other related processes to carry out the different functionality as described herein.</p>
<p id="p-0089" num="0099">As shown, computer system <b>200</b> of the present example includes an interconnect <b>211</b> that couples a memory system <b>212</b> and a processor <b>213</b> an input/output interface <b>214</b>, and a communications interface <b>215</b>.</p>
<p id="p-0090" num="0100">As shown, memory system <b>212</b> is encoded with PDQoS application <b>240</b>-<b>1</b>. PDQoS application <b>240</b>-<b>1</b> can be embodied as software code such as data and/or logic instructions (e.g., code stored in the memory or on another computer readable medium such as a disk) that support functionality according to different embodiments described herein.</p>
<p id="p-0091" num="0101">During operation, processor <b>213</b> of computer system <b>200</b> accesses memory system <b>212</b> via the interconnect <b>211</b> in order to launch, run, execute, interpret or otherwise perform the logic instructions of the PDQoS application <b>240</b>-<b>1</b>. Execution of PDQoS application <b>240</b>-<b>1</b> produces processing functionality in PDQoS process <b>240</b>-<b>2</b>. In other words, the PDQoS process <b>240</b>-<b>2</b> represents one or more portions of the PDQoS application <b>240</b>-<b>1</b> (or the entire application) performing within or upon the processor <b>213</b> in the computer system <b>200</b>.</p>
<p id="p-0092" num="0102">It should be noted that, in addition to the PDQoS process <b>240</b>-<b>2</b>, embodiments herein include the PDQoS application <b>240</b>-<b>1</b> itself (i.e., the un-executed or non-performing logic instructions and/or data). The PDQoS application <b>240</b>-<b>1</b> can be stored on a computer readable medium such as a floppy disk, hard disk, or optical medium. The PDQoS application <b>240</b>-<b>1</b> can also be stored in a memory type system such as in firmware, read only memory (ROM), or, as in this example, as executable code within the memory system <b>212</b> (e.g., within Random Access Memory or RAM).</p>
<p id="p-0093" num="0103">In addition to these embodiments, it should also be noted that other embodiments herein include the execution of PDQoS application <b>240</b>-<b>1</b> in processor <b>213</b> as the PDQoS process <b>240</b>-<b>2</b>. Those skilled in the art will understand that the computer system <b>200</b> can include other processes and/or software and hardware components, such as an operating system that controls allocation and use of hardware resources associated with the computer system <b>200</b>.</p>
<p id="p-0094" num="0104">As described in detail above, PDQoS is a method for achieving prioritized quality of service via a combination of priority assignments to each packet entering a network and a priority-based dropping scheme at congested queues in the network. In PDQoS, packets in a flow are assigned priorities uniformly at random from the priority band for the flow. Prioritization between different flows is achieved by assigning different priority bands to different flows. The expectation is that flows with a higher priority band would achieve higher throughput in the network.</p>
<p id="p-0095" num="0105">The PDQoS uniform distribution scheme for assigning priorities does not achieve a linear relationship between priority-band-overlap and throughput when the flows use the Transmission Control Protocol (TCP), the most common transport protocol in the Internet.</p>
<p id="p-0096" num="0106"><figref idref="DRAWINGS">FIG. 13</figref> shows the resulting priority distribution <b>300</b> of simulating four TCP flows with priority bands <b>302</b>, <b>304</b>, <b>306</b> and <b>308</b>. Priority band <b>302</b> includes priority levels 1-16, priority band <b>304</b> includes priority levels 9-24, priority band <b>306</b> includes priority levels 17-32, and priority band <b>308</b> includes priority levels 25-40. All the priority bands <b>302</b>, <b>304</b>, <b>306</b> and <b>308</b> are sharing a 4 Mb/s bottleneck link. The priority bands have a small amount of overlap. As can be seen from <figref idref="DRAWINGS">FIG. 13</figref>, the assigned priorities are distributed evenly across each priority band.</p>
<p id="p-0097" num="0107"><figref idref="DRAWINGS">FIG. 14</figref> shows the resulting throughput distribution <b>310</b> of simulating four TCP flows with priority bands <b>312</b>, <b>314</b>, <b>316</b> and <b>318</b>. <figref idref="DRAWINGS">FIG. 14</figref> shows the bandwidth achieved by each flow during the same simulation run as in <figref idref="DRAWINGS">FIG. 13</figref>, which showed the priorities assigned to the packets. Priority band <b>312</b> includes priority levels 1-16, priority band <b>314</b> includes priority levels 9-24, priority band <b>316</b> includes priority levels 17-32, and priority band <b>318</b> includes priority levels 25-40, all sharing a 4 Mb/s bottleneck link. The priority bands have a small amount of overlap. As can be seen from <figref idref="DRAWINGS">FIG. 13</figref> and <figref idref="DRAWINGS">FIG. 14</figref>, priority band <b>308</b> and <b>318</b> receives a vast majority of the bandwidth, while the remaining priority bands receive a much smaller share.</p>
<p id="p-0098" num="0108"><figref idref="DRAWINGS">FIG. 15</figref> shows the resulting priority distribution <b>320</b> of simulating four TCP flows with priority bands <b>322</b>, <b>324</b>, <b>326</b> and <b>328</b>. Priority band <b>322</b> includes priority levels 1-16, priority band <b>324</b> includes priority levels 3-18, priority band <b>326</b> includes priority levels 5-20, and priority band <b>328</b> includes priority levels 7-22 sharing a 4 Mb/s bottleneck link.</p>
<p id="p-0099" num="0109"><figref idref="DRAWINGS">FIG. 16</figref> shows the resulting throughput distribution <b>330</b> of simulating four TCP flows with priority bands <b>332</b>, <b>334</b>, <b>336</b> and <b>338</b>. Priority band <b>332</b> includes priority levels 1-16, priority band <b>334</b> includes priority levels 3-18, priority band <b>336</b> includes priority levels 5-20, and priority band <b>3338</b> includes priority levels 7-22, all the priority bands sharing a 4 Mb/s bottleneck link. A similar result in shown in <figref idref="DRAWINGS">FIGS. 15 and 16</figref> as is seen in <figref idref="DRAWINGS">FIGS. 13 and 14</figref>, wherein the highest priority bands <b>318</b> and <b>328</b> have a much higher throughput than the remaining priority bands.</p>
<p id="p-0100" num="0110"><figref idref="DRAWINGS">FIGS. 13 and 15</figref> show the number of packets that were randomly assigned to each exact priority within the band. <figref idref="DRAWINGS">FIGS. 14 and 16</figref> show the throughput achieved over time by each of the four flows in each test. Clearly, the larger priority band overlap in the second test run does not have a large impact on the prioritization of the flows.</p>
<p id="p-0101" num="0111">Referring now to <figref idref="DRAWINGS">FIG. 17</figref>, the percent of bottleneck capacity used by each flow by priority band overlap is shown. Eight TCP flows are shown, 4 using one priority band and 4 using another. The x-axis shows the percent of the priority bands that do not overlap. The y-axis shows the throughput divided by the bottleneck capacity for each of the eight flows. This Figure shows the relationship between the amount of priority overlap between the flows and the percentage of the bottleneck capacity that is used by each flow. It can be seen that there is not a linear relationship between priority band overlap and achieved throughput</p>
<p id="p-0102" num="0112">The non-linear relationship can be explained by considering the behavior of TCP. Whenever a packet is dropped, the TCP sender drops its sending rate by half. When the PDQoS pcutoff value hits a certain priority, all packets at or below that priority will be dropped. Consider two senders, sender 1 using a priority band 1-8, sender 2 using a band 2-9. If the pcutoff value happens to be at priority 2, then sender 2 sees &#x215b; of its packets dropped while sender 1 sees &#xbc; of its packets dropped. Therefore, sender 1 will backoff by half twice as often as sender 2, so during the time it takes for sender 2 to drop its sending rate to (&#xbd;) times its previous rate, sender 1 will drops its rate to (&#xbd;)<sup>2 </sup>of its rate. Therefore, the amount of priority band overlap has an exponential relationship to the amount that the TCP sender will back off. This can be seen in <figref idref="DRAWINGS">FIG. 17</figref>.</p>
<p id="p-0103" num="0113">The presently described non-uniform per-packet priority marking for use with adaptive protocols counteracts the problem by using a non-uniform distribution for assigning priorities to TCP flows.</p>
<p id="p-0104" num="0114">PDQoS has potential to fill the need for a quality of service mechanism that is simple to configure and to understand, inexpensive to use, and beneficial to both ISPs and end users. However, the simplicity of configuring PDQoS depends heavily on being able to define priority bands in such a way to get the desired capacity sharing. As discussed above, the original uniform distribution scheme for assigning priorities in PDQoS makes it difficult (if not impossible) to get fine grained control over how the capacity will be allocated across a series of TCP flows (if all flows should get some of the capacity, but &#x201c;how much&#x201d; of the capacity should depend on the relative priorities).</p>
<p id="p-0105" num="0115">Internet Service Providers (ISPs) are not likely to want all (or even most) of the capacity to go to the highest priority users&#x2014;they are more likely to want a gradual degradation of throughput as the priority band decreases relative to other bands. The presently described non-uniform per-packet priority marking for use with adaptive protocols gives exactly that: the ability to easily configure PDQoS such that TCP flows can achieve a desired distribution of available capacity.</p>
<p id="p-0106" num="0116">This invention applies not only to PDQoS with TCP, but also to any packet-level prioritization scheme that assigns priorities to packets randomly or pseudorandomly and to any protocol that adapts to loss.</p>
<p id="p-0107" num="0117">Given a set of flows and a desired percentage of the bottleneck capacity that should be assigned to each, a user or administrator would assign priority bands to adaptive flows such that the top of the bands are spaced proportionally to the desired capacity sharing. See <figref idref="DRAWINGS">FIG. 22</figref> for an example of how assigned bands might affect bandwidth sharing.</p>
<p id="p-0108" num="0118">For flows using a protocol that adapts to congestion, each priority band is specified by only a single number, representing the highest priority that could be assigned to a packet in this flow. Each time a packet needs to be assigned an exact priority, a priority is chosen at random using some non-uniform distribution between some lowest priority (the same for all flows) and the top of the band. This invention covers any non-uniform distribution. The distribution chosen combined with the protocol used will affect the bandwidth sharing.</p>
<p id="p-0109" num="0119">For example: if priorities are distributed via the bottom half of a normal distribution over a range from 0 to twice the top of the priority band and the adaptive protocol drops its rate in half when packet loss is detected (as in TCP), the relationship between priority band and bottleneck capacity sharing is approximately linear.</p>
<p id="p-0110" num="0120">To achieve a linear relationship between the priority band and the bottleneck capacity sharing, the amount of reaction per dropped packet should be inversely proportional to the difference between the number of packets assigned to two neighboring priorities. Note that this also fits with non-adaptive protocols using a uniform distribution, as described in the original PDQoS invention.</p>
<p id="p-0111" num="0121">At each bottleneck queue, an existing prioritization mechanism is used (such as PDQoS) to determine based on the priority whether or not to drop each packet.</p>
<p id="p-0112" num="0122">If the distribution is inversely proportional to the amount of reaction per dropped packet, the number of packets at the lowest priorities is inverse-exponentially proportionate to the defined top of the priority band. When combined with multiplicative back-off, this means that the average sending rate for each adaptive flow adapts to be linearly proportional to the top of the priority band.</p>
<p id="p-0113" num="0123">The Figures discussed below show the results of the same simulations as the results discussed in <figref idref="DRAWINGS">FIGS. 13-16</figref> above, except that the uniform distribution priority dithering has been replaced by normal distribution dithering for TCP, as described in this invention.</p>
<p id="p-0114" num="0124"><figref idref="DRAWINGS">FIG. 18</figref> shows the resulting distribution of priorities to packets <b>400</b> of simulating four TCP flows with normal distribution priority bands <b>402</b>, <b>404</b>, <b>406</b> and <b>408</b> topped at 16, 24, 32, and 40 respectively, all sharing a 4 Mb/s bottleneck link.</p>
<p id="p-0115" num="0125"><figref idref="DRAWINGS">FIG. 19</figref> shows the resulting throughput distribution <b>410</b> of simulating four TCP flows with normal distribution priority bands <b>412</b>, <b>414</b>, <b>416</b> and <b>418</b> topped at 16, 24, 32, and 40 respectively, all sharing a 4 Mb/s bottleneck link. As can be seen from <figref idref="DRAWINGS">FIG. 18</figref> and <figref idref="DRAWINGS">FIG. 19</figref>, priority band <b>408</b> and <b>418</b> still receives a majority of the bandwidth, while the remaining three priority bands also receive a fair share of the remaining bandwidth.</p>
<p id="p-0116" num="0126"><figref idref="DRAWINGS">FIG. 20</figref> shows the resulting distribution of priorities to packets <b>420</b> of simulating four TCP flows with normal distribution priority bands <b>422</b>, <b>424</b>, <b>426</b> and <b>428</b> topped at 16, 18, 20, and 22 respectively, all sharing a 4 Mb/s bottleneck link.</p>
<p id="p-0117" num="0127"><figref idref="DRAWINGS">FIG. 21</figref> shows the resulting throughput distribution <b>430</b> of simulating four TCP flows with normal distribution priority bands <b>432</b>, <b>434</b>, <b>436</b> and <b>438</b> topped at 16, 18, 20, and 22 respectively, all sharing a 4 Mb/s bottleneck link. As can be seen from <figref idref="DRAWINGS">FIG. 20</figref> and <figref idref="DRAWINGS">FIG. 21</figref>, priority band <b>408</b> and <b>418</b> still receives a majority of the bandwidth, while the remaining three priority bands also receive a fair share of the remaining bandwidth.</p>
<p id="p-0118" num="0128"><figref idref="DRAWINGS">FIGS. 18 and 20</figref> show the number of packets that were randomly assigned to each exact priority within the band. <figref idref="DRAWINGS">FIGS. 19 and 21</figref> show the throughput achieved over time by each of the four flows in each test. Unlike the results without this invention, the larger priority band overlap in the second test run has a larger impact on the prioritization of the flows.</p>
<p id="p-0119" num="0129">Referring now to <figref idref="DRAWINGS">FIG. 22</figref>, a percent of bottleneck capacity used by each flow by priority band overlap is shown. Eight TCP flows are shown, four flows using one priority band and four using another. The x-axis shows the percent of priority bands that do not overlap. The y-axis shows the throughput divided by the bottleneck capacity for each of the eight flows. Comparing this figure to <figref idref="DRAWINGS">FIG. 17</figref>, which shows the same test with a uniform distribution, shows the improvement in prioritization gained by using the invention, since the relationship between band overlap and throughput is now almost exactly linear, as desired.</p>
<p id="p-0120" num="0130">Referring now to <figref idref="DRAWINGS">FIG. 23</figref>, a particular embodiment of a method <b>500</b> for non-uniform per-packet priority marking for use with adaptive protocols is shown. Method <b>500</b> begins with processing block <b>502</b> which discloses receiving a packet at a first network device, the packet assigned to a priority band. Processing block <b>504</b> states determining a priority for the packet between a lowest priority of the priority band and a highest priority of the priority band, the priority for the packet selected based on a target distribution of priorities within the priority band, the target distribution comprising a distribution selected to achieve a desired capacity relationship among groups of packets assigned to different priority bands. As shown in processing block <b>506</b>, in one embodiment the target distribution is selected to approximate a linear relationship between a priority band and capacity share. As shown in processing block <b>508</b>, in certain embodiments, the target distribution comprises a non-uniform distribution. As shown in processing block <b>510</b>, in certain embodiments, the target distribution is based on a reaction rate of a protocol used for transporting the packet. As further shown in processing block <b>512</b>, in some embodiments the protocol may comprise a protocol that adapts to congestion. As described in processing block <b>514</b>, in a particular embodiment, a number of packets at a lowest priority of the priority band are inverse-exponentially proportionate to a number of packets at a highest priority of the priority band.</p>
<p id="p-0121" num="0131">Processing block <b>516</b> discloses assigning the selected priority to the packet. Processing continues at processing block <b>518</b> which recites using a prioritization mechanism to determine, based on the assigned priority of the packet, whether to drop the packet. As shown in processing block <b>518</b>, in some embodiments, the prioritization mechanism comprises a Precedence Drop Quality of Service (PDQoS).</p>
<p id="p-0122" num="0132"><figref idref="DRAWINGS">FIG. 24</figref> is a block diagram illustrating an example computer system <b>600</b> for implementing per-packet priority marking function <b>240</b> and/or other related processes to carry out the different functionality as described herein.</p>
<p id="p-0123" num="0133">As shown, computer system <b>200</b> of the present example includes an interconnect <b>211</b> that couples a memory system <b>212</b> and a processor <b>213</b> an input/output interface <b>214</b>, and a communications interface <b>215</b>.</p>
<p id="p-0124" num="0134">As shown, memory system <b>212</b> is encoded with Per-packet priority marking application <b>240</b>-<b>1</b>. Per-packet priority marking application <b>240</b>-<b>1</b> can be embodied as software code such as data and/or logic instructions (e.g., code stored in the memory or on another computer readable medium such as a disk) that support functionality according to different embodiments described herein.</p>
<p id="p-0125" num="0135">During operation, processor <b>213</b> of computer system <b>200</b> accesses memory system <b>212</b> via the interconnect <b>211</b> in order to launch, run, execute, interpret or otherwise perform the logic instructions of the Per-packet priority marking application <b>240</b>-<b>1</b>. Execution of Per-packet priority marking application <b>240</b>-<b>1</b> produces processing functionality in Per-packet priority marking process <b>240</b>-<b>2</b>. In other words, the Per-packet priority marking process <b>240</b>-<b>2</b> represents one or more portions of the Per-packet priority marking application <b>240</b>-<b>1</b> (or the entire application) performing within or upon the processor <b>213</b> in the computer system <b>200</b>.</p>
<p id="p-0126" num="0136">It should be noted that, in addition to the Per-packet priority marking process <b>240</b>-<b>2</b>, embodiments herein include the Per-packet priority marking application <b>240</b>-<b>1</b> itself (i.e., the un-executed or non-performing logic instructions and/or data). The Per-packet priority marking application <b>240</b>-<b>1</b> can be stored on a computer readable medium such as a floppy disk, hard disk, or optical medium. The Per-packet priority marking application <b>240</b>-<b>1</b> can also be stored in a memory type system such as in firmware, read only memory (ROM), or, as in this example, as executable code within the memory system <b>212</b> (e.g., within Random Access Memory or RAM).</p>
<p id="p-0127" num="0137">In addition to these embodiments, it should also be noted that other embodiments herein include the execution of Per-packet priority marking application <b>240</b>-<b>1</b> in processor <b>213</b> as the Per-packet priority marking process <b>240</b>-<b>2</b>. Those skilled in the art will understand that the computer system <b>200</b> can include other processes and/or software and hardware components, such as an operating system that controls allocation and use of hardware resources associated with the computer system <b>200</b>.</p>
<p id="p-0128" num="0138">The device(s) or computer systems that integrate with the processor(s) may include, for example, a personal computer(s), workstation(s) (e.g., Sun, HP), personal digital assistant(s) (PDA(s)), handheld device(s) such as cellular telephone(s), laptop(s), handheld computer(s), packet-switching device such as an IP or MPLS router or an Ethernet switch, or another device(s) capable of being integrated with a processor(s) that may operate as provided herein. Accordingly, the devices provided herein are not exhaustive and are provided for illustration and not limitation.</p>
<p id="p-0129" num="0139">References to &#x201c;a microprocessor&#x201d; and &#x201c;a processor&#x201d;, or &#x201c;the microprocessor&#x201d; and &#x201c;the processor,&#x201d; may be understood to include one or more microprocessors that may communicate in a stand-alone and/or a distributed environment(s), and may thus be configured to communicate via wired or wireless communications with other processors, where such one or more processor may be configured to operate on one or more processor-controlled devices that may be similar or different devices. Use of such &#x201c;microprocessor&#x201d; or &#x201c;processor&#x201d; terminology may thus also be understood to include a central processing unit, an arithmetic logic unit, an application-specific integrated circuit (IC), and/or a task engine, with such examples provided for illustration and not limitation.</p>
<p id="p-0130" num="0140">Furthermore, references to memory, unless otherwise specified, may include one or more processor-readable and accessible memory elements and/or components that may be internal to the processor-controlled device, external to the processor-controlled device, and/or may be accessed via a wired or wireless network using a variety of communications protocols, and unless otherwise specified, may be arranged to include a combination of external and internal memory devices, where such memory may be contiguous and/or partitioned based on the application. Accordingly, references to a database may be understood to include one or more memory associations, where such references may include commercially available database products (e.g., SQL, Informix, Oracle) and also proprietary databases, and may also include other structures for associating memory such as links, queues, graphs, trees, with such structures provided for illustration and not limitation.</p>
<p id="p-0131" num="0141">References to a network, unless provided otherwise, may include one or more intranets and/or the Internet, as well as a virtual network. References herein to microprocessor instructions or microprocessor-executable instructions, in accordance with the above, may be understood to include programmable hardware.</p>
<p id="p-0132" num="0142">Unless otherwise stated, use of the word &#x201c;substantially&#x201d; may be construed to include a precise relationship, condition, arrangement, orientation, and/or other characteristic, and deviations thereof as understood by one of ordinary skill in the art, to the extent that such deviations do not materially affect the disclosed methods and systems.</p>
<p id="p-0133" num="0143">Throughout the entirety of the present disclosure, use of the articles &#x201c;a&#x201d; or &#x201c;an&#x201d; to modify a noun may be understood to be used for convenience and to include one, or more than one of the modified noun, unless otherwise specifically stated.</p>
<p id="p-0134" num="0144">Elements, components, modules, and/or parts thereof that are described and/or otherwise portrayed through the figures to communicate with, be associated with, and/or be based on, something else, may be understood to so communicate, be associated with, and or be based on in a direct and/or indirect manner, unless otherwise stipulated herein.</p>
<p id="p-0135" num="0145">Although the methods and systems have been described relative to a specific embodiment thereof, they are not so limited. Obviously many modifications and variations may become apparent in light of the above teachings. Many additional changes in the details, materials, and arrangement of parts, herein described and illustrated, may be made by those skilled in the art.</p>
<p id="p-0136" num="0146">Having described preferred embodiments of the invention it will now become apparent to those of ordinary skill in the art that other embodiments incorporating these concepts may be used. Additionally, the software included as part of the invention may be embodied in a computer program product that includes a computer useable medium. For example, such a computer usable medium can include a readable memory device, such as a hard drive device, a CD-ROM, a DVD-ROM, or a computer diskette, having computer readable program code segments stored thereon. The computer readable medium can also include a communications link, either optical, wired, or wireless, having program code segments carried thereon as digital or analog signals. Accordingly, it is submitted that that the invention should not be limited to the described embodiments but rather should be limited only by the spirit and scope of the appended claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method comprising:
<claim-text>receiving, at a first network device, a packet in a first flow of a plurality of flows, said packet being assigned to a priority band, said priority band including a lowest priority and a highest priority;</claim-text>
<claim-text>selecting a target distribution of priorities within said first flow to achieve a desired capacity relationship across said plurality of flows;</claim-text>
<claim-text>selecting, for said packet in said first flow, a priority between said lowest priority and said highest priority of said priority band based on said target distribution of priorities within said first flow; and</claim-text>
<claim-text>assigning said selected priority to said packet.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said target distribution is selected to approximate a linear relationship between a priority band and capacity share.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said target distribution comprises a non-uniform distribution.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said target distribution is based on a reaction rate of a protocol used for transporting said packet.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref> wherein said protocol comprises a protocol that adapts to congestion.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein a number of packets at said lowest priority of said priority band is inverse-exponentially proportionate to a number of packets at said highest priority of said priority band.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising using a prioritization mechanism to determine, based on the assigned priority of said packet, whether to drop said packet.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein said prioritization mechanism comprises a Precedence Drop Quality of Service (PDQoS).</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A non-transitory computer readable storage medium having computer readable code thereon for non-uniform per-packet priority marking for use with adaptive protocols, the medium including instructions in which a computer system performs operations comprising:
<claim-text>receiving, at a first network device, a packet in a first flow of a plurality of flows, said packet being assigned to a priority band, said priority band including a lowest priority and a highest priority;</claim-text>
<claim-text>selecting a target distribution of priorities within said first flow to achieve a desired capacity relationship across said plurality of flows;</claim-text>
<claim-text>selecting, for said packet in said first flow, a priority between said lowest priority and said highest priority of said priority band based on said target distribution of priorities within said first flow; and</claim-text>
<claim-text>assigning said selected priority to said packet.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The non-transitory computer readable storage medium of <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein said target distribution is selected to approximate a linear relationship between a priority band and capacity share.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The non-transitory computer readable storage medium of <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein said target distribution comprises a non-uniform distribution.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The non-transitory computer readable storage medium of <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein said target distribution is based on a reaction rate of a protocol used for transporting said packet.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The non-transitory computer readable storage medium of <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein said protocol comprises a protocol that adapts to congestion.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The non-transitory computer readable storage medium of <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein a number of packets at said lowest priority of said priority band is inverse-exponentially proportionate to a number of packets at said highest priority of said priority band.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The non-transitory computer readable storage medium of <claim-ref idref="CLM-00009">claim 9</claim-ref> further comprising using a prioritization mechanism to determine, based on the assigned priority of said packet, whether to drop said packet.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The non-transitory computer readable storage medium of <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein said prioritization mechanism comprises a Precedence Drop Quality of Service (PDQoS).</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. A computer system comprising:
<claim-text>a memory;</claim-text>
<claim-text>a processor;</claim-text>
<claim-text>a communications interface; and</claim-text>
<claim-text>an interconnection mechanism coupling the memory, the processor and the communications interface,</claim-text>
<claim-text>wherein the memory is encoded with an application providing non-uniform per-packet priority marking for use with adaptive protocols that, when performed on the processor, provides a process for processing information, the process causing the computer system to perform the operations of:
<claim-text>receiving, at a first network device, a packet in a first flow of a plurality of flows, said packet being assigned to a priority band, said priority band including a lowest priority and a highest priority;</claim-text>
<claim-text>selecting a target distribution of priorities within said first flow to achieve a desired capacity relationship across said plurality of flows;</claim-text>
<claim-text>selecting, for said packet in said first flow, a priority between said lowest priority and said highest priority of said priority band based on said target distribution of priorities within said first flow; and</claim-text>
<claim-text>assigning said selected priority to said packet.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The computer system of <claim-ref idref="CLM-00017">claim 17</claim-ref> wherein said target distribution is selected to approximate a linear relationship between a priority band and capacity share.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The computer system of <claim-ref idref="CLM-00017">claim 17</claim-ref> wherein a number of packets at said lowest priority of said priority band is inverse-exponentially proportionate to a number of packets at said highest priority of said priority band.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The computer system of <claim-ref idref="CLM-00017">claim 17</claim-ref> further comprising using a prioritization mechanism to determine, based on the assigned priority of said packet, whether to drop said packet. </claim-text>
</claim>
</claims>
</us-patent-grant>
