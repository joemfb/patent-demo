<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627404-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627404</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13216317</doc-number>
<date>20110824</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>21</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>16</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>726  1</main-classification>
</classification-national>
<invention-title id="d2e53">Detecting addition of a file to a computer system and initiating remote analysis of the file for malware</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>8127358</doc-number>
<kind>B1</kind>
<name>Lee</name>
<date>20120200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 24</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>8230510</doc-number>
<kind>B1</kind>
<name>Yang et al.</name>
<date>20120700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 24</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2005/0204172</doc-number>
<kind>A1</kind>
<name>Malcolm</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713201</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2007/0028291</doc-number>
<kind>A1</kind>
<name>Brennan et al.</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2008/0052395</doc-number>
<kind>A1</kind>
<name>Wright et al.</name>
<date>20080200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709224</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2010/0235919</doc-number>
<kind>A1</kind>
<name>Adelstein et al.</name>
<date>20100900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 25</main-classification></classification-national>
</us-citation>
</us-references-cited>
<number-of-claims>17</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>726  1- 36</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>4</number-of-drawing-sheets>
<number-of-figures>5</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20130055338</doc-number>
<kind>A1</kind>
<date>20130228</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>McDougal</last-name>
<first-name>Monty D.</first-name>
<address>
<city>St. Paul</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Ford</last-name>
<first-name>Bradley T.</first-name>
<address>
<city>Wylie</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Smelser</last-name>
<first-name>William P.</first-name>
<address>
<city>Draper</city>
<state>UT</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Clinton</last-name>
<first-name>Jason R.</first-name>
<address>
<city>Highland</city>
<state>UT</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="005" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Greenwood</last-name>
<first-name>Morgan J.</first-name>
<address>
<city>Saratoga Springs</city>
<state>UT</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>McDougal</last-name>
<first-name>Monty D.</first-name>
<address>
<city>St. Paul</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Ford</last-name>
<first-name>Bradley T.</first-name>
<address>
<city>Wylie</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Smelser</last-name>
<first-name>William P.</first-name>
<address>
<city>Draper</city>
<state>UT</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Clinton</last-name>
<first-name>Jason R.</first-name>
<address>
<city>Highland</city>
<state>UT</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="005" designation="us-only">
<addressbook>
<last-name>Greenwood</last-name>
<first-name>Morgan J.</first-name>
<address>
<city>Saratoga Springs</city>
<state>UT</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Schwegman, Lundberg &#x26; Woessner, P.A.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Raytheon Company</orgname>
<role>02</role>
<address>
<city>Waltham</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Shaw</last-name>
<first-name>Peter</first-name>
<department>2493</department>
</primary-examiner>
<assistant-examiner>
<last-name>Zhao</last-name>
<first-name>Don</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">In certain embodiments, a computer system includes a memory unit and a processing unit. The processing unit executes a monitoring module stored on the computer system. The monitoring module monitors the computer system for addition of a file to the computer system and detects an addition of a file to the computer system. The monitoring module accesses policies to determine whether to communicate information associated with the detected addition of the file over a communication network to a remote malware analysis system to initiate a possible malware analysis of the file by the remote malware analysis system. The monitoring module initiates, in response to determining to communicate information associated with the detected addition of the file, communication over the communication network of information associated with the detected addition of the file to the remote malware analysis system, the remote malware analysis system operable to analyze the file for malware.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="184.32mm" wi="264.92mm" file="US08627404-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="263.91mm" wi="183.30mm" orientation="landscape" file="US08627404-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="203.28mm" wi="180.00mm" file="US08627404-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="268.31mm" wi="180.00mm" file="US08627404-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="247.31mm" wi="178.90mm" file="US08627404-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">Malware (such as viruses, trojans, and other malicious software) has become increasingly difficult to protect against. Various methods have been used to combat malware, but more sophisticated malware continues to abound. Methods of detection have grown more complex but often these take longer to execute as a result of this complexity. Current, host-level malware protection systems search for files these systems can detect as being malware. However, malware protection limited to host systems is susceptible to numerous types of attacks. For example, zero-day attacks remain particularly problematic.</p>
<heading id="h-0002" level="1">SUMMARY</heading>
<p id="p-0003" num="0002">In certain embodiments, a computer system includes a memory unit and a processing unit. The processing unit executes a monitoring module stored on the computer system. The monitoring module monitors the computer system for addition of a file to the computer system and detects an addition of a file to the computer system. The monitoring module accesses policies to determine whether to communicate information associated with the detected addition of the file over a communication network to a remote malware analysis system to initiate a possible malware analysis of the file by the remote malware analysis system. The monitoring module initiates, in response to determining to communicate information associated with the detected addition of the file, communication over the communication network of information associated with the detected addition of the file to the remote malware analysis system, the remote malware analysis system operable to analyze the file for malware.</p>
<p id="p-0004" num="0003">Particular embodiments of the present disclosure may provide one or more technical advantages. In certain embodiments, the present disclosure allows host-level detection of addition of a file to a computer system, as well as communication of the file (and other information) over a communication network to a remote malware analysis system for a malware analysis to be performed on the file by the remote malware analysis system. This host-level monitoring may allow for desired detection of certain types of files, such as downloaded files, files added through web-based email, and files added from a removable medium (e.g., a flash drive). Communication of these files to a remote malware analysis system may allow for more robust malware analysis to be performed than might be possible or practical with typical host-based or other local malware analysis systems. In certain embodiments, communication of these files to a remote malware analysis system may be performed according to one or more policies, which may provide control over which files are communicated to the remote malware analysis system and what information is communicated to the remote malware analysis system.</p>
<p id="p-0005" num="0004">Certain embodiments of the present disclosure may provide some, all, or none of the above advantages. Certain embodiments may provide one or more other technical advantages, one or more of which may be readily apparent to those skilled in the art from the figures, descriptions, and claims included herein.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0006" num="0005">For a more complete understanding of the present disclosure and its advantages, reference is made to the following descriptions, taken in conjunction with the accompanying drawings, in which:</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an example system for detecting addition of a file to a computer system and initiating remote analysis of the file for malware, according to certain embodiments of the present disclosure;</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 2</figref> illustrates an example malware analysis system, according to certain embodiments of the present disclosure;</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 3</figref> illustrates one embodiment of an analysis console, according to certain embodiments of the present disclosure;</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 4</figref> illustrates an example method for detecting addition of a file to a computer system and initiating remote analysis of the file for malware, according to certain embodiments of the present disclosure; and</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an example computer system that may be used for one or more portions of the systems described with references to <figref idref="DRAWINGS">FIGS. 1-4</figref>, according to certain embodiments of the present disclosure.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DESCRIPTION OF EXAMPLE EMBODIMENTS</heading>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an example system <b>100</b> for detecting addition of a file to a computer system and initiating remote analysis of the file for malware, according to certain embodiments of the present disclosure. In the illustrated example, system <b>100</b> includes a user system <b>102</b>, a processing system <b>104</b>, a web server <b>106</b>, a communication network <b>108</b>, and a malware analysis system <b>110</b>. Although system <b>100</b> is illustrated and primarily described as including particular numbers and types of components arranged in a particular manner, the present disclosure contemplates system <b>100</b> including any suitable numbers and types of components arranged in any suitable manner, according to particular needs.</p>
<p id="p-0013" num="0012">In general, according to certain embodiments of the present disclosure, user system <b>102</b> is monitored for addition of a file to user system <b>102</b>. For example, the file may be added to user system <b>102</b> from a removable media storage device, via a network connection, from a web-based electronic mail service, and/or from other suitable sources. In response to a detected addition of a file to user system <b>102</b>, policies may be accessed to determine whether to communicate information associated with the detected addition of the file over communication network <b>108</b> to remote malware analysis system <b>110</b> to initiate a possible malware analysis of the file by remote malware analysis system <b>110</b>. The information may include a copy of the file and/or any other suitable information. In response to a determination to communicate information associated with the detected addition of the file, the information may be communicated over communication network <b>108</b> to remote malware analysis system <b>110</b>. Remote malware analysis system <b>110</b> may analyze the file for malware.</p>
<p id="p-0014" num="0013">User system <b>102</b> may include one or more computer systems at one or more locations. Each computer system may include any appropriate input devices, output devices, mass storage media, processors, memory, or other suitable components for receiving, processing, storing, and communicating data. For example, each computer system may include a personal computer, workstation, network computer, kiosk, wireless data port, personal data assistant (PDA), one or more Internet Protocol (IP) telephones, one or more cellular/smart phones one or more servers, a server pool, one or more processors within these or other devices, or any other suitable processing device. User system <b>102</b> may be a stand-alone computer or may be a part of a larger network of computers associated with an entity. User system <b>102</b> may be implemented using any suitable combination of hardware, firmware, and software. User system <b>102</b> and user of user system <b>102</b> may be used interchangeably throughout this description. User system <b>102</b> may be one of a number of user systems <b>102</b>.</p>
<p id="p-0015" num="0014">User system <b>102</b> may include a processing unit <b>112</b> and a memory unit <b>114</b>. Processing unit <b>112</b> may include one or more microprocessors, controllers, or any other suitable computing devices or resources. Processing unit <b>112</b> may work, either alone or with other components of system <b>100</b>, to provide a portion or all of the functionality of its associated computer system <b>102</b> described herein. Memory unit <b>114</b> may take the form of volatile or non-volatile memory including, without limitation, magnetic media, optical media, read-access memory (RAM), read-only memory (ROM), removable media, or any other suitable memory component.</p>
<p id="p-0016" num="0015">In general, user system <b>102</b> may be used by end users to perform any suitable computing functions. In the illustrated example, user system <b>102</b> includes a network access application <b>116</b>, removable media storage device <b>118</b>, one or more files <b>120</b>, host monitoring module <b>122</b>, and one or more policies <b>124</b>, each of which may be implemented using any suitable combination of hardware, firmware, and software. In general, network access application <b>116</b> and removable media storage device <b>118</b> provide two mechanisms by which files <b>120</b> may be stored or otherwise added to user system <b>102</b>. Each of these is described in greater detail below.</p>
<p id="p-0017" num="0016">Network access application <b>116</b> may include any suitable application (or combination of applications) that is operable to access a computer network, such as the Internet. For example, network access application <b>116</b> may be a web browser. Network access application <b>116</b> may be used to transfer (e.g., copy or move via a download operation) files <b>120</b> to user system <b>102</b>. As a particular example, network access application <b>116</b> may be used to access a web-based electronic mail service (e.g., web-based email service <b>138</b> of web server <b>106</b>, described below), and to download attachments to accessed web-based email messages. Examples of web-based email include WINDOWS LIVE&#x2122; HOTMAIL&#xae; service operated by Microsoft Corporation, YAHOO! MAIL service operated by Yahoo! Inc., GMAIL&#x2122; service operated by Google Inc., and MOBILEME&#xae; service operated by Apple Inc. A user of user system <b>102</b> may access web-based email by accessing a web site hosting the web-based email (e.g., HOTMAIL.COM), often providing a username and password, and accessing emails via the web site. A user of user system <b>102</b> may download emails and/or associated email attachments to user system <b>102</b>. Downloading a file <b>120</b> generally includes storing an instance of the file <b>120</b> in the memory (e.g., memory unit <b>114</b>) of user system <b>102</b>.</p>
<p id="p-0018" num="0017">Removable media storage device <b>118</b> may include any suitable type of storage media that may be removably attached to user system <b>102</b> and used to add files <b>120</b> to user system <b>102</b>. For example, removable media storage device <b>118</b> may include any suitable combination of flash storage devices, optical media storage devices, magnetic media storage devices, and any other suitable type of removable media devices. User system <b>102</b> may include appropriate hardware, firmware, and/or software for accessing and interacting with data (e.g., files) stored on removable media storage device <b>118</b>, such as one or more Universal Serial Bus (USB) ports, one or more optical drives, one or more floppy disk drives, and any other suitable components.</p>
<p id="p-0019" num="0018">Files <b>120</b> may have any suitable format, according to particular needs. For example, a file <b>120</b> may include one or more of the following in any suitable combination: (1) a data file; (2) a data record; (3) an email message; (4) an attachment to an email message; (5) a Uniform Resource Locator (URL) or other suitable address identifier; (6) executable content; and (7) any other suitable target object for which malware detection may be appropriate. Example files <b>120</b> may include MICROSOFT WORD files, PDF files, any type of email attachment, TXT files, EXE files, DLL files, sand any other suitable types of files. In certain embodiments, the term file as used herein may refer to a collection of files. For example, a ZIP file or other archive or compressed file type may include multiple embedded files. The present disclosure contemplates user system <b>102</b> having any suitable number of files <b>120</b>.</p>
<p id="p-0020" num="0019">Host monitoring module <b>122</b> may monitor user system <b>102</b> for various events. For example, host monitoring module <b>122</b> may be an application such as an agent that is stored locally on user system <b>102</b> (e.g., in memory unit <b>114</b>) and is operable to monitor user system <b>102</b> for various events. In certain embodiments, these events include the addition of one or more files <b>120</b> to user system <b>102</b>. In certain embodiments, host monitoring module <b>122</b> is operable to monitor user system <b>102</b> for a variety of other events, as well.</p>
<p id="p-0021" num="0020">Addition of a file <b>120</b> to user system <b>102</b> may include an attempt to add file <b>120</b> to user system and/or actual addition file <b>120</b> to user system <b>102</b>. In other words, for purposes of the present disclosure, monitoring user system <b>102</b> for addition of a file <b>120</b> to user system <b>102</b> may include monitoring user system <b>102</b> for attempts to add files <b>120</b> to user system <b>102</b> and/or actual additions of files <b>120</b> to user system <b>102</b>, and detecting addition of a file <b>120</b> to user system <b>102</b> may include detecting an attempts to add files <b>120</b> to user system <b>102</b> and/or detecting actual additions of files <b>120</b> to user system <b>102</b>. Host monitoring module <b>122</b> may also detect addition of a file to user system <b>102</b>. In certain embodiments, host monitoring module <b>122</b> may monitor user system <b>102</b> for files <b>120</b> added by particular techniques. Although detection of the addition of a file <b>120</b> added by particular techniques is described, the present disclosure contemplates detection of the addition of a file <b>120</b> added in any suitable manner, according to particular needs.</p>
<p id="p-0022" num="0021">In certain embodiments, host monitoring module <b>122</b> may monitor user system <b>102</b> for addition of a file <b>120</b> to user system <b>102</b> by monitoring user system <b>102</b> for addition of a file <b>120</b> from removable media storage device <b>118</b> to user system <b>102</b>, and may detect an addition of a file <b>120</b> to user system <b>102</b> by detecting an addition of a file <b>120</b> from removable media storage device <b>118</b> to user system <b>102</b>. In certain embodiments, host monitoring module <b>122</b> may monitor user system <b>102</b> for addition of a file <b>120</b> to user system <b>102</b> by monitoring user system <b>102</b> for addition of a file <b>120</b> to user system <b>102</b> via a network connection, and may detect an addition of a file <b>120</b> to user system <b>102</b> by detecting a transfer to user system <b>102</b> of a file <b>120</b> via the network connection (e.g., a browser download, a peer-to-peer file transfer, a transfer using any suitable network-enabled application, or other suitable mechanism). In certain embodiments, host monitoring module <b>122</b> may monitor user system <b>102</b> for addition of a file <b>120</b> to user system <b>102</b> by monitoring user system <b>102</b> for addition of a file <b>120</b> from a web-based electronic mail service to user system <b>102</b>, and may detect an addition of a file <b>120</b> to user system <b>102</b> by detecting a transfer of a file from the web-based electronic mail service to user system <b>102</b>. As an example, the file may be an attachment to an email accessed using the web-based electronic mail service, and monitoring user system <b>102</b> for addition of a file <b>120</b> from a web-based electronic mail service to user system <b>102</b> includes monitoring user system <b>102</b> for a download of the attachment from the web-based electronic mail service to user system <b>102</b>. Host monitoring module <b>122</b> may detect addition of a file <b>120</b> from the web-based electronic mail service to user system <b>102</b> by detecting a transfer of the attachment from the web-based electronic mail service to user system <b>102</b>.</p>
<p id="p-0023" num="0022">It may be appropriate to communicate a file <b>120</b> that has been added or is being added to user system <b>102</b> to a remote malware analysis system (e.g., malware analysis system <b>110</b>) for a malware analysis to be performed on the file <b>120</b>. Host monitoring module <b>122</b> may be operable to determine when to send a file <b>120</b> to the remote malware analysis system, as well as what information to send along with the file <b>120</b>. Examples of what information may be sent are described below with reference to <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0024" num="0023">Policies <b>124</b> may provide rules that are used by host monitoring module <b>122</b> to determine when to send files <b>120</b> to remote malware analysis system <b>110</b>, as well as what information to send to remote malware analysis system <b>110</b>. Policies <b>124</b> may take any suitable format and may be implemented in any suitable manner. For example, policies <b>124</b> may be implemented as one or more rule files that are accessed by host monitoring module <b>122</b>. As another example, policies <b>124</b> may be implemented as a number of conditions and corresponding actions that are written into the code of host monitoring module <b>122</b>. Example policies <b>124</b> are described in greater detail below.</p>
<p id="p-0025" num="0024">Host monitoring module <b>122</b> may receive results <b>126</b> in response to communicating a file <b>120</b> to remote malware analysis system <b>110</b>. A result <b>126</b> may include one or more of the following: a result of the analysis performed by malware analysis system <b>110</b>; an action to be performed by user system <b>102</b> based on a result determined by malware analysis system <b>110</b>; and any other suitable information. As a particular example, the result of the analysis performed by malware analysis system <b>110</b> may indicate whether or not malware analysis system <b>110</b> is or otherwise includes malware. As another particular example, in response to malware analysis system <b>110</b> determining that the file <b>120</b> is or otherwise includes malware, an action to be performed by user system <b>102</b> may include one or more of preventing the file <b>120</b> from being added to user system <b>102</b>, deleting an already-added file <b>120</b> from user system <b>102</b>, communicating a notification to one or more devices, and any other suitable action. As another particular example, in response to malware analysis system <b>110</b> determining that the file <b>120</b> is not or otherwise does not include malware, an action to be performed by user system <b>102</b> may include allowing the file <b>120</b> to be added to user system <b>102</b>, communicating a notification to one or more devices, and any other suitable action.</p>
<p id="p-0026" num="0025">System <b>100</b> may include processing system <b>104</b>. Processing system <b>104</b> may include one or more computer systems at one or more locations. Each computer system may include any appropriate input devices, output devices, mass storage media, processors, memory, or other suitable components for receiving, processing, storing, and communicating data. For example, each computer system may include a personal computer, workstation, network computer, kiosk, wireless data port, PDA, one or more IP telephones, one or more cellular/smart phones, one or more servers, a server pool, switch, router, disks or disk arrays, one or more processors within these or other devices, or any other suitable processing device. Processing system <b>104</b> may be a stand-alone computer or may be a part of a larger network of computers associated with an entity.</p>
<p id="p-0027" num="0026">Processing system <b>104</b> may include may include a processing unit <b>128</b> and a memory unit <b>130</b>. Processing system <b>104</b> may be implemented using any suitable combination of hardware, firmware, and software. Processing unit <b>128</b> may include one or more microprocessors, controllers, or any other suitable computing devices or resources. Processing unit <b>128</b> may work, either alone or with other components of system <b>100</b>, to provide a portion or all of the functionality of its associated processing system <b>104</b> described herein. Memory unit <b>130</b> may take the form of volatile or non-volatile memory including, without limitation, magnetic media, optical media, RAM, ROM, removable media, or any other suitable memory component.</p>
<p id="p-0028" num="0027">Processing system <b>104</b> may serve as an intermediary between user system <b>102</b> and remote computer systems, such as malware analysis system <b>110</b>. In certain embodiments, processing system <b>104</b> serves as an intermediary between multiple user systems <b>102</b> and remote computing systems, such as malware analysis system <b>110</b>.</p>
<p id="p-0029" num="0028">User system <b>102</b> may communicate with processing system <b>104</b> via one or more links <b>132</b>. Links <b>132</b> facilitate wireless or wireline communication. Links <b>132</b> may communicate, for example, IP packets, Frame Relay frames, Asynchronous Transfer Mode (ATM) cells, voice, video, data, and other suitable information between network addresses. Links <b>132</b> may include one or more local area networks (LANs), radio access networks (RANs), metropolitan area networks (MANs), wide area networks (WANs), mobile networks (e.g., using WiMax (802.16), WiFi (802.11), 3G, 4G, or any other suitable wireless technologies in any suitable combination), all or a portion of the global computer network known as the Internet, and/or any other communication system or systems at one or more locations, any of which may be any suitable combination of wireless and wireline. In certain embodiments, links <b>132</b> are part of network <b>108</b>, described below.</p>
<p id="p-0030" num="0029">Processing system <b>104</b> may include a host monitoring coordination module <b>134</b>. Host monitoring coordination module <b>134</b> may be implemented using any suitable combination of hardware, firmware, and software. Host monitoring coordination module <b>134</b> may be operable to interact with host monitoring modules <b>122</b> of user systems <b>102</b>. In certain embodiments, host monitoring coordination modules <b>122</b> of user systems <b>102</b> are software agents that report (either on their own or in response to requests from host monitoring coordination module <b>134</b>) to host monitoring coordination module <b>134</b>.</p>
<p id="p-0031" num="0030">For example, host monitoring coordination module <b>134</b> may receive an indication of events detected by host monitoring module <b>122</b> of user system <b>102</b>. In other words, host monitoring module <b>122</b> of user system <b>102</b> (and in embodiments in which system <b>100</b> includes a number of user systems <b>102</b>, the host monitoring modules <b>122</b> of each of the user systems <b>102</b>) may report detected events to host monitoring coordination module <b>134</b>, which may then determine an appropriate action and/or simply store a record of the event.</p>
<p id="p-0032" num="0031">As described above, certain events detected by host monitoring module <b>122</b> may include the addition of a file <b>120</b> to user system <b>102</b>. Host monitoring coordination module <b>134</b> may receive an indication of the detected addition of the file <b>120</b> to user system <b>102</b> (possibly including a copy of the file <b>120</b> and/or information associated with the detected addition of the file <b>120</b>), and may determine whether it is appropriate to send the file <b>120</b> and/or information associated with the detected addition of the file <b>120</b> to malware analysis system <b>110</b> for a malware analysis to be performed on the file <b>120</b>.</p>
<p id="p-0033" num="0032">Processing system <b>104</b> may be coupled to or otherwise associated with a storage module <b>136</b>. Storage module <b>136</b> may take the form of volatile or non-volatile memory including, without limitation, magnetic media, optical media, RAM, ROM, removable media, or any other suitable memory component. In certain embodiments, a portion of all of storage module <b>136</b> may include a database, such as one or more structured query language (SQL) servers or relational databases. Additionally or alternatively, in certain embodiments, a portion or all of storage module <b>136</b> may include non-relational storage, such as an APACHE HADOOP-based database or other object store. Storage module <b>136</b> may be a part of or distinct from a memory unit <b>130</b> of processing system <b>104</b>.</p>
<p id="p-0034" num="0033">Storage module <b>136</b> may store a variety of information and applications that may be used by processing system <b>104</b> or other suitable components of system <b>100</b>. In the illustrated example, storage module <b>136</b> stores files <b>120</b>, policies <b>124</b>, and results <b>126</b>, each of which are described in greater detail below. Although storage module <b>136</b> is described as including particular information and applications, storage module <b>136</b> may store any other suitable information and applications. Furthermore, although particular information and applications are described as being stored in storage module <b>136</b>, the present description contemplates storing this information and these applications in any suitable location, according to particular needs.</p>
<p id="p-0035" num="0034">Storage module <b>136</b> may store files <b>120</b>, policies <b>124</b>, and results <b>126</b>. In certain embodiments these files <b>120</b>, policies <b>124</b>, and results <b>126</b> are substantially the same as the files <b>120</b>, policies <b>124</b>, and results <b>126</b> described above with respect to user system <b>102</b>. For example, files <b>120</b> stored in storage module <b>136</b> may be copies of the files <b>120</b> added to user system <b>102</b>. As another example, files <b>120</b> stored in storage module <b>136</b> may be pointers to instances of files <b>120</b> stored on user system <b>102</b> or some other location. As another example, files <b>120</b> stored in storage module <b>136</b> may be hashes of the actual files <b>120</b>.</p>
<p id="p-0036" num="0035">Policies <b>124</b> may provide rules for how to process certain events detected by host monitoring module <b>122</b> and reported to host monitoring coordination module <b>134</b>. For example, policies <b>124</b> may be used by host monitoring coordination module <b>134</b> to determine whether to communicate a file <b>120</b> to malware analysis system <b>110</b> for a malware analysis to be performed on the file <b>120</b>, as well as what information to provide to malware analysis system <b>110</b>. These policies <b>124</b> may be the same as the policies <b>124</b> of user system <b>102</b>.</p>
<p id="p-0037" num="0036">In certain embodiments, policies <b>124</b> and storage module <b>136</b> may provide a second layer of filtering over the policies <b>124</b> of user system <b>102</b>. For example, host monitoring module <b>122</b> of user system <b>102</b> may only be aware of files <b>120</b> which have been added to user system <b>102</b>. On the other hand, host monitoring coordination module <b>134</b> may be aware of files <b>120</b> detected to be added to multiple user systems <b>102</b> (e.g., as reported by the host monitoring modules of those multiple user systems <b>102</b>). A particular file <b>120</b> added to a first user system <b>102</b> may have already been communicated to malware analysis system <b>110</b> for a malware analysis to be performed on the file <b>120</b>, and host monitoring coordination module <b>134</b> may be aware of that fact. Host monitoring coordination module <b>134</b> may even be aware of a result <b>126</b> of the malware analysis performed on the particular file <b>120</b> by malware analysis system <b>110</b>. Thus, based on policies <b>124</b> of storage module <b>136</b>, host monitoring coordination module <b>134</b> may determine not to send a matching file <b>120</b> received from a second user system <b>102</b> to remote malware analysis system <b>110</b> for a malware analysis to be performed again on the same particular file <b>120</b>.</p>
<p id="p-0038" num="0037">Results <b>126</b> may include the results of malware analyses performed on files <b>120</b> by malware analysis system <b>110</b>. As described above, a result <b>126</b> may include one or more of the following: a result of the analysis performed by malware analysis system <b>110</b>; an action to be performed by user system <b>102</b> based on a result determined by malware analysis system <b>110</b>; and any other suitable information.</p>
<p id="p-0039" num="0038">Files <b>120</b> and results <b>126</b> may be indexed in any suitable manner using any suitable type of identifier. As just one example, files <b>120</b> and/or results <b>126</b> may be indexed by a hash value computed by performing a hash of the file <b>120</b>. In certain embodiments, rather than store a copy of file <b>120</b>, host monitoring coordination module <b>134</b> may simply store a hash value computed from the file <b>120</b>. For example, host monitoring module <b>122</b> of user system <b>102</b> may compute a hash value for a file <b>120</b> and communicate that hash value to host monitoring coordination module <b>134</b>.</p>
<p id="p-0040" num="0039">System <b>100</b> may include a web server <b>106</b>. Web server <b>106</b> may be implemented using any suitable combination of hardware, firmware, and software. may include one or more computer systems at one or more locations. Each computer system may include any appropriate input devices, output devices, mass storage media, processors, memory, or other suitable components for receiving, processing, storing, and communicating data. For example, each computer system may include a personal computer, workstation, network computer, kiosk, wireless data port, PDA, one or more IP telephones, one or more cellular/smart phones, one or more servers, a server pool, switch, router, disks or disk arrays, one or more processors within these or other devices, or any other suitable processing device. Processing system <b>104</b> may be a stand-alone computer or may be a part of a larger network of computers associated with an entity.</p>
<p id="p-0041" num="0040">Web server <b>106</b> may include may include a processing unit and a memory unit. The processing unit may include one or more microprocessors, controllers, or any other suitable computing devices or resources. The processing unit may work, either alone or with other components of system <b>100</b>, to provide a portion or all of the functionality of its associated web server <b>106</b> described herein. The memory unit may take the form of volatile or non-volatile memory including, without limitation, magnetic media, optical media, RAM, ROM, removable media, or any other suitable memory component.</p>
<p id="p-0042" num="0041">Web server <b>106</b> may host one or more web sites and/or one or more web services. In the illustrated example, web server <b>106</b> hosts web-based email service <b>138</b>, which may be implemented using any suitable combination of hardware, firmware, and software. In general, web-based email service <b>138</b> provides a service accessible to user system <b>102</b> via a network (e.g., network <b>108</b>) that hosts email functionality and potentially storage on behalf of users of user system <b>102</b>. Typically, web-based email service <b>138</b> is accessed by entering a URL in an interface associated with network access application <b>116</b> of user system <b>102</b>. Examples of web-based email services <b>136</b> include WINDOWS LIVE HOTMAIL operated by MICROSOFT, YAHOO! MAIL operated by YAHOO!, GMAIL operated by GOOGLE, and MOBILE ME operated by APPLE. A user of user system <b>102</b> may access web-based email by accessing a web site hosting the web-based email (e.g., HOTMAIL.COM), often providing a username and password, and accessing emails via the web site. A user of user system <b>102</b> may download emails and/or associated email attachments to user system <b>102</b>. Downloading a file <b>120</b> generally includes storing an instance of the file <b>120</b> in the memory (e.g., memory unit <b>114</b>) of user system <b>102</b>. In certain embodiments, the host-based nature of host monitoring module <b>122</b> may allow system <b>100</b> to capture and potentially analyze for malware files <b>120</b> that may be encrypted (e.g., using SSL encryption) in transfer across network <b>108</b>.</p>
<p id="p-0043" num="0042">Files <b>120</b> on web server <b>106</b> may include attachments to email messages of web-based email service <b>138</b>. A user may download these files <b>120</b> to user system <b>102</b>. As another example, in a scenario in which web server hosts a web site in addition or as an alternative to web-based email service <b>138</b>, files <b>120</b> on web server <b>106</b> may include files that may be downloaded by user system <b>102</b> from the web site.</p>
<p id="p-0044" num="0043">Processing system <b>104</b> may communicate with malware analysis system <b>110</b> via communication network <b>108</b>. Communication network <b>108</b> facilitates wireless or wireline communication. Communication network <b>108</b> may communicate, for example, IP packets, Frame Relay frames, Asynchronous Transfer Mode (ATM) cells, voice, video, data, and other suitable information between network addresses. Communication network <b>108</b> may include one or more LANs, RANs, MANs, WANs, mobile networks (e.g., using WiMax (802.16), WiFi (802.11), 3G, 4G, or any other suitable wireless technologies in any suitable combination), all or a portion of the global computer network known as the Internet, and/or any other communication system or systems at one or more locations, any of which may be any suitable combination of wireless and wireline.</p>
<p id="p-0045" num="0044">Malware analysis system <b>110</b> may include any processing system operable to analyze one or more files <b>120</b> for malware. Malware analysis system <b>110</b> may analyze files <b>120</b> for malware in response to a request from user system <b>102</b> and/or processing system <b>104</b> (e.g., host monitoring coordination module <b>134</b>). Malware analysis system <b>110</b> may return the results (e.g., as a results <b>126</b>) of the analysis of the files <b>120</b> for malware to user system <b>102</b> (e.g., host monitoring module <b>122</b>) and/or processing system <b>104</b> (e.g., host monitoring coordination module <b>134</b>).</p>
<p id="p-0046" num="0045">In certain instances, system <b>100</b> may identify a file <b>120</b> as containing malware if the file <b>120</b> includes any of a variety of forms of hostile or intrusive computer-readable logic designed to infiltrate a computer system. Particular forms of malware may include computer viruses, worms, trojan horses, spyware, adware, scareware, crimeware, rootkits, and other malicious and/or unwanted software. Malware may be designed to disrupt or deny operation of a computer system, gather information from a computer system (e.g., that leads to a loss of privacy or exploitation), gain unauthorized access to computer system resources, or engage in other abusive behavior.</p>
<p id="p-0047" num="0046">Malware analysis system <b>110</b> may be operable to run one or more malware detection processes on files <b>120</b>. Running the one or more malware detection processes on a file <b>120</b> may, in certain instances, result in a detection of malware. Malware detection by malware analysis system <b>110</b> may conclusively indicate that the file <b>120</b> or files <b>120</b> in question are known to contain malware. Alternatively, malware detection by malware analysis system <b>110</b> may indicate that the file <b>120</b> or files <b>120</b> in question are suspected of malware, though such detection may not conclusively indicate that the file <b>120</b> or files <b>120</b> are known to contain malware. In certain embodiments, a portion of malware analysis system <b>110</b> may generate information that is accessible by a human analyst (e.g., using analysis console <b>210</b>, described in greater detail below with reference to <figref idref="DRAWINGS">FIGS. 2-3</figref>) for further malware analysis of one or more files <b>120</b> suspected of malware. The information may correspond to one or more files <b>120</b> subjected to a set of malware detection process run by malware analysis system <b>110</b>. Malware analysis system <b>110</b> also may communicate the results of its malware analysis of files <b>120</b> as results <b>126</b>.</p>
<p id="p-0048" num="0047">In certain embodiments, malware analysis system <b>110</b> may publish available operations/interactions as a web service. Thus, host monitoring module <b>122</b> of user system <b>102</b> and/or host monitoring coordination module <b>134</b> of processing system <b>104</b> may communicate with malware analysis system <b>110</b> via the web service, using one or more messages formatted according to the web service interface. For example, host monitoring module <b>122</b> of user system <b>102</b> and/or host monitoring coordination module <b>134</b> of processing system <b>104</b> may communicate files <b>120</b> and/or other information associated with the detection of an addition of a file <b>120</b> to a user system <b>102</b> to malware analysis system <b>110</b> via the web service, requesting that malware analysis system <b>110</b> analyze file <b>120</b> for malware or otherwise provide a result <b>126</b>.</p>
<p id="p-0049" num="0048">Malware analysis system <b>110</b> may be implemented using any suitable combination of hardware, firmware, and software. For example, malware analysis system <b>110</b> may be implemented using one or more computer systems at one or more locations. Each computer system may include any appropriate input devices, output devices, mass storage media, processors, memory, or other suitable components for receiving, processing, storing, and communicating data. For example, each computer system may include a personal computer, workstation, network computer, kiosk, wireless data port, PDA, one or more IP telephones, one or more cellular/smart phones, one or more servers, a server pool, one or more processors within these or other devices, or any other suitable processing device. Malware analysis system <b>110</b> may be a stand-alone computer or may be a part of a larger network of computers associated with an entity.</p>
<p id="p-0050" num="0049">Malware analysis system <b>110</b> may comprise a processing unit <b>140</b> and a memory unit <b>142</b>. Processing unit <b>140</b> may include one or more microprocessors, controllers, or any other suitable computing devices or resources. Processing unit <b>140</b> may work, either alone or with other components of system <b>100</b>, to provide a portion or all of the functionality of system <b>100</b> described herein. Memory unit <b>142</b> may take the form of volatile or non-volatile memory including, without limitation, magnetic media, optical media, RAM, ROM, removable media, or any other suitable memory component. In certain embodiments, a portion of all of memory unit <b>142</b> may include a database, such as one or more SQL servers or relational databases.</p>
<p id="p-0051" num="0050">A particular example implementation of malware analysis system <b>110</b> is illustrated in <figref idref="DRAWINGS">FIG. 2</figref> and described below in greater detail. Although that particular example implementation of malware analysis system <b>110</b> is illustrated and described, the present disclosure contemplates implementing malware analysis system <b>110</b> in any suitable manner, according to particular needs.</p>
<p id="p-0052" num="0051">Details regarding example operations that may be performed by system <b>100</b> are described below with respect to <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0053" num="0052">System <b>100</b> provides just one example of an environment in which the techniques of the present disclosure may be used. For example, although system <b>100</b> is described as including a host monitoring coordination module <b>134</b> that handles communication of files <b>120</b> and any associated information to malware analysis system <b>110</b>, the present disclosure contemplates, in addition or as an alternative, user system <b>102</b> communicating files and/or associated information (e.g., via communication network <b>108</b>) directly to malware analysis system <b>110</b> for analysis.</p>
<p id="p-0054" num="0053">Particular embodiments of the present disclosure may provide one or more technical advantages. In certain embodiments, the present disclosure allows host-level detection of addition of a file <b>120</b> to a computer system (e.g., user system <b>102</b>), as well as communication of file <b>120</b> (and other information) over a communication network <b>108</b> to remote malware analysis system <b>110</b> for a malware analysis to be performed on the file <b>120</b> by remote malware analysis system <b>110</b>. This host-level monitoring may allow for desired detection of certain types of files <b>120</b>, such as downloaded files, files added through web-based email, and files added from a removable medium (e.g., a flash drive). Communication of these files <b>120</b> to remote malware analysis system <b>110</b> may allow for more robust malware analysis to be performed than might be possible or practical with typical host-based or other local malware analysis systems. In certain embodiments, communication of these files <b>120</b> to remote malware analysis system <b>110</b> may be performed according to one or more policies <b>124</b>, which may provide control over which files <b>120</b> are communicated to remote malware analysis system <b>110</b> and what information is communicated to remote malware analysis system <b>110</b>.</p>
<p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. 2</figref> illustrates an example malware analysis system <b>200</b>, according to certain embodiments of the present disclosure. Malware analysis system <b>200</b> provides just one example of how malware analysis system <b>110</b> (or a portion of malware analysis system <b>110</b>) may be implemented. Although this particular example implementation of malware analysis system <b>110</b> is illustrated and described, the present disclosure contemplates implementing malware analysis system <b>110</b> in any suitable manner, according to particular needs. In the illustrated example, malware analysis system <b>200</b> includes ingest module <b>202</b>, scheduler module <b>204</b>, detection module <b>206</b>, disposition module <b>208</b>, analysis console <b>210</b>, and server module <b>212</b>.</p>
<p id="p-0056" num="0055">Modules <b>202</b>-<b>212</b> may communicate between or among each other via one or more internal networks <b>214</b>, referred to for simplicity in the singular. Internal network <b>214</b> facilitates wireless or wireline communication. Internal network <b>214</b> may communicate, for example, IP packets, Frame Relay frames, ATM cells, voice, video, data, and other suitable information between network addresses. Internal network <b>214</b> may include one or more LANs, RANs, MANs, WANs, mobile networks (e.g., using WiMax (802.16), WiFi (802.11), 3G, 4G, or any other suitable wireless technologies in any suitable combination), all or a portion of the global computer network known as the Internet, and/or any other communication system or systems at one or more locations, any of which may be any suitable combination of wireless and wireline. In certain embodiments, internal network <b>214</b> includes a system bus. Malware analysis system <b>200</b> may communicate with an external network <b>216</b>, which in certain embodiments may be substantially similar to network <b>108</b> of <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0057" num="0056">Modules <b>202</b>-<b>212</b> may be implemented using any suitable combination of hardware, firmware, and software. For example, modules <b>202</b>-<b>212</b> may be implemented using one or more computer systems at one or more locations. Each computer system may include any appropriate input devices, output devices, mass storage media, processors, memory, or other suitable components for receiving, processing, storing, and communicating data. For example, each computer system may include a personal computer, workstation, network computer, kiosk, wireless data port, PDA, one or more IP telephones, one or more cellular/smart phones, one or more servers, a server pool, one or more processors within these or other devices, or any other suitable processing device. Modules <b>202</b>-<b>212</b> may be a stand-alone computer or may be a part of a larger network of computers associated with an entity.</p>
<p id="p-0058" num="0057">Modules <b>202</b>-<b>212</b> may include one or more processing units and one or more memory units. Each processing unit may include one or more microprocessors, controllers, or any other suitable computing devices or resources. Each processing unit may work, either alone or with other components of system <b>200</b>, to provide a portion or all of the functionality of its associated computer system described herein. Each memory unit may take the form of a suitable combination of volatile and non-volatile memory including, without limitation, magnetic media, optical media, RAM, ROM, removable media, or any other suitable memory component.</p>
<p id="p-0059" num="0058">In certain embodiments, the implementation and/or operation of modules <b>202</b>-<b>212</b> is implemented generally as follows. Ingest module <b>202</b> may access a file <b>120</b> and determine one or more tests that should be performed on file <b>120</b> to determine whether file <b>120</b> is suspected of malware. In response, detection module <b>206</b> may perform the test(s) that were determined by ingest module <b>202</b> in accordance with scheduling performed by scheduler module <b>204</b>. Disposition module <b>208</b> uses the results of the tests performed by detection module <b>206</b> to determine whether the file <b>120</b> should be sent to server module <b>212</b> for quarantine purposes while a second analytical stage for file <b>120</b> is processed (e.g., at analysis console <b>210</b>). Further details regarding the implementation and/or operation of modules <b>202</b>-<b>212</b> are described below.</p>
<p id="p-0060" num="0059">Ingest module <b>202</b> may be operable to extract and cause to be analyzed file <b>120</b> accessed by malware analysis system <b>200</b>. Ingest module <b>202</b> may analyze file <b>120</b> and determine one or more tests that should be performed on file <b>120</b> to determine whether file <b>120</b> is suspected of malware. In certain embodiments, ingest module <b>202</b> may be configured to determine a type of a file ingest module <b>202</b> receives. For example, ingest module <b>202</b> may examine an extension associated with the file name of file <b>120</b> to determine the type of the file. As another example, ingest module <b>202</b> may examine portions of the file content of file <b>120</b> to determine its type. Ingest module <b>202</b> may examine characters in a header of file <b>120</b> to determine its type. Such characters may be referred to as magic numbers or magic bits. In this manner, in certain embodiments, ingest module <b>202</b> may detect the correct type of file <b>120</b> even if the extension of the filename of file <b>120</b> has been removed or changed (e.g., falsified). As another example, for certain types of files <b>120</b> (e.g., MICROSOFT OFFICE files), ingest module <b>202</b> may determine the file type based on both magic number(s) and the file extension, possibly examining the magic number(s) prior to examining the file extension.</p>
<p id="p-0061" num="0060">In certain embodiments, ingest module <b>202</b> may determine whether file <b>120</b> has been previously analyzed for malware. Ingest module <b>202</b> may use one or more techniques to determine if file <b>120</b> has been previously analyzed for malware. For example, ingest module <b>202</b> may generate one or more hashes of content of file <b>120</b> (such as a checksum, an MD5 hash, and/or a SHA1 hash). These value(s) may be compared to a database containing hash values of previously analyzed files <b>120</b>. If the hash value is found in data storage, ingest module <b>202</b> may determine that file <b>120</b> has been previously analyzed. If the hash value is not present in data storage, ingest module <b>202</b> may determine that file <b>120</b> has not been previously analyzed. In certain embodiments, ingest module <b>202</b> may use the name of file <b>120</b> and/or its extension, as well as variations on those items, to determine if file <b>120</b> has been previously analyzed.</p>
<p id="p-0062" num="0061">In certain embodiments, if it is determined that file <b>120</b> has been analyzed previously, malware detection schemes may not be applied to file <b>120</b>; instead, the results of the previous analysis of file <b>120</b> may be determined using a database that contains results of a previous analysis of file <b>120</b>. If the results indicate that file <b>120</b> is known not to be malware, then the analysis of file <b>120</b> may end. If it is determined that file <b>120</b> was previously determined to be malware, then it may be determined that file <b>120</b> should be quarantined. If it is determined that file <b>120</b> has been previously received and is currently being analyzed (e.g., possibly including review by human analysts associated with analysis console <b>210</b>), then action may be taken once the outcome of the ongoing analysis is known. In certain embodiments, this ability to check whether a file <b>120</b> previously has been analyzed previously may allow for more efficient use of the resources that perform the malware detection schemes on the files <b>120</b> and may reduce the workload of a machine and/or human analyst.</p>
<p id="p-0063" num="0062">While in this example, ingest module <b>202</b> is described as generating the information (e.g., the one or more hashes) used to determine whether file <b>120</b> has been previously analyzed, in certain embodiments, the sender of file <b>120</b> (e.g., user system <b>102</b> and/or processing system <b>104</b>) may generate this information and communicate this information to malware analysis system <b>110</b> (e.g., to ingest module <b>202</b>). For example, prior to or in addition to sending the actual file <b>120</b> to malware analysis system <b>110</b>, the sender of file <b>120</b> may send this information to malware analysis system <b>110</b> so that malware analysis system <b>110</b> can determine whether file <b>120</b> previously has been analyzed for malware. If malware analysis system <b>110</b> determines that file <b>120</b> has not been analyzed previously for malware, then (if file <b>120</b> was not sent previously) malware analysis system <b>110</b> may request that the sender send the actual file <b>120</b> for analysis.</p>
<p id="p-0064" num="0063">In certain embodiments, ingest module <b>202</b> may be used to determine whether file <b>120</b> should undergo malware detection and/or which malware detection schemes should be applied. For example, ingest module <b>202</b> may determine that a file <b>120</b> received by ingest module <b>210</b> is a plain text file. Ingest module <b>202</b> then may retrieve one or more policies associated with plain text files. A retrieved policy may indicate that plain text files are not to be analyzed for malware. As a result, the plain text file <b>120</b> may be ignored. As another example, ingest module <b>202</b> may determine that a file <b>120</b> is a document created by the MICROSOFT WORD application. Ingest module <b>202</b> may then retrieve one or more policies associated with MICROSOFT WORD documents. Ingest module <b>202</b> may examine the retrieved policy or policies and determine that the received file <b>120</b> should be analyzed for malware. Ingest module <b>202</b> may also examine the retrieved policy or policies and determine the malware detection schemes that should be applied to the MICROSOFT WORD document. Ingest module <b>202</b> then may create and store entries in data storage consistent with the determined malware detection schemes.</p>
<p id="p-0065" num="0064">Scheduler module <b>204</b>, in certain embodiments, may determine the order in which malware detection processes are performed. Scheduler module <b>204</b> may assign processes to various computing resources of malware analysis system <b>200</b> using any suitable method. For example, scheduler module <b>204</b> may use a first-in-first-out (FIFO) algorithm to assign processes. Processes may also be prioritized. For example, scheduler module <b>204</b> may use a FIFO approach to schedule jobs initially, but it may be determined to prioritize one job over another in response to results provided by the detection nodes. Schedule policies may be used by scheduler module <b>204</b> to determine how to schedule jobs and how to prioritize jobs. Priorities for jobs, in certain embodiments, may also be determined based on the context associated with the file <b>120</b>. For example, if the file <b>120</b> undergoing analysis was part of an e-mail attachment, it may be prioritized higher than other files <b>120</b>.</p>
<p id="p-0066" num="0065">In certain embodiments, policies used by scheduler module <b>204</b> may be modified when a new malware detection scheme is added. Information may be entered regarding how to apply the malware detection scheme. For example, such information may be entered using a tabbed interface, a wizard-style interface, or other interfaces for entering information. The information entered may include how jobs should be prioritized, the context associated with file <b>120</b>, which malware detection nodes <b>102</b> are involved in implementing the malware detection scheme, and/or other items associated with applying a malware detection scheme.</p>
<p id="p-0067" num="0066">Detection module <b>206</b>, in certain embodiments, may be operable to perform the test(s) that were determined by ingest module <b>202</b> in accordance with scheduling performed by scheduler module <b>204</b>. In certain embodiments, detection module <b>206</b> may conform to an interface standard for applying malware detection. Such an interface may include standards for one or more of the following: specifying file <b>120</b> (including, possibly, a URL) that is to be analyzed configuration parameters for applying the detection scheme, time limit for completing the analysis, format of results, specifying the reason for indicating that an analyzed item is suspect, providing log files, and other suitable items involved with applying malware detection schemes.</p>
<p id="p-0068" num="0067">In certain embodiments, having such an interface may be advantageous because it may allow policies to call for the application of malware detection schemes without having to give precise parameters based on the configuration of the detection node. In this manner, in certain embodiments, new detection schemes may be added to the system without needing to recode various parts of the system since the detection node applying the new malware detection scheme would conform to the interface standard. For example, to add a new malware detection scheme, the detection node applying the new malware detection seem may be configured to conform to the interface standard by being configured to receive files <b>120</b> for analysis in the same or similar manner as other configuration nodes applying other malware detection schemes. In addition, for example, the configuration node applying the new malware detection scheme may be configured to report the results of applying the new malware detection scheme in the same or similar manner as other configuration nodes applying other malware detection schemes. This may allow malware analysis system <b>200</b> to adapt to new malware detection schemes.</p>
<p id="p-0069" num="0068">Detection module <b>206</b> may be implemented on a variety of types of hardware. For example, detection module <b>206</b> may be configured in a blade architecture or on physical hosts. Detection module <b>206</b> may be configured utilizing clusters or other suitable distributed computing architectures. Detection module <b>206</b> may use virtualization and/or may include virtual machines. Detection module <b>206</b> may be used to apply a variety of malware detection schemes to a file <b>120</b> (which, in certain embodiments, may include one or more URLs). In certain embodiments, detection module <b>206</b> may be specialized such that malware analysis system <b>200</b> may be configured to apply a type of malware detection scheme. For example, detection module <b>206</b> may be configured to apply behavior-based malware detection schemes and/or metadata-based detection schemes when metadata of file <b>120</b> is analyzed. In yet another example, detection module <b>206</b> may be configured to apply signature-based detection schemes to files <b>120</b>. As another example, detection module <b>206</b> may also apply classification-based detection schemes. As described above, detection module <b>206</b> may be configured to apply other forms of detection schemes that conform to an interface to facilitate the incorporation of new or different detection schemes.</p>
<p id="p-0070" num="0069">Disposition module <b>208</b>, in certain embodiments, may be operable to use the results of the tests performed by detection module <b>206</b> to determine what should be done with the file(s) <b>120</b>. In some cases, disposition module <b>208</b> may characterize the file <b>120</b> as being suspected of malware. In response, malware analysis system <b>200</b> may send information corresponding to the file(s) <b>120</b> and/or actual content of the file(s) <b>120</b> (e.g., the file <b>120</b> itself) for further review at analysis console <b>210</b>. In certain embodiments, disposition module <b>208</b> may respond to the results of detection module <b>206</b> regardless of whether it sends the file(s) <b>120</b> to analysis console <b>210</b>. For example, disposition module <b>208</b> may determine that the file(s) <b>120</b> should be quarantined and send the file <b>120</b> to server module <b>212</b> to quarantine the file <b>120</b>. In certain embodiments, disposition module <b>208</b> may determine that the file(s) <b>120</b> are not malware and may perform suitable corresponding actions. For example, disposition module <b>208</b> may indicate that it would be appropriate to release for delivery a message to which the analyzed file(s) <b>120</b> were attached, in response to the determination by disposition module <b>208</b> that the file(s) <b>120</b> are not malware.</p>
<p id="p-0071" num="0070">Analysis console <b>210</b>, in certain embodiments, is operable to facilitate malware analysis for files <b>120</b> that have been identified (e.g., by disposition module <b>208</b> or another suitable component of malware analysis system <b>200</b>) as requiring further malware analysis. In certain embodiments, analysis console <b>210</b> may be operable to access information generated by disposition module <b>208</b> or another suitable component of malware analysis system <b>200</b>, and to facilitate the propagation of a final disposition, if appropriate. The information propagated (e.g., for communication to another suitable component of malware analysis system <b>200</b> and/or to user system <b>102</b>) may include malware analysis outputs generated by analysis console <b>210</b>, such that the recipient may benefit from the results of malware analysis performed using analysis console <b>210</b>. Additional details of an example analysis console <b>210</b> are described below with respect to <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0072" num="0071">Server module <b>212</b> may include, for example, a file server, a domain name server, a proxy server, a web server, a computer workstation, or any other tangible device and associated logic operable to communicate with modules <b>230</b>, <b>240</b>, <b>250</b>, <b>260</b>, and/or <b>280</b> through network <b>220</b>. Server module <b>212</b> may execute with any of the well-known MS-DOS, PC-DOS, OS-2, MAC-OS, WINDOWS&#x2122;, UNIX, or other appropriate operating systems, including future operating systems. In certain embodiments, server module <b>212</b> may include one or more of the following in any suitable combination: a processor, data storage, a network interface, input functionality, and output functionality.</p>
<p id="p-0073" num="0072"><figref idref="DRAWINGS">FIG. 3</figref> illustrates one embodiment of an analysis console <b>300</b>, according to certain embodiments of the present disclosure. In certain embodiments, analysis console <b>300</b> provides one example implementation of analysis console <b>210</b> of <figref idref="DRAWINGS">FIG. 2</figref>. As shown in <figref idref="DRAWINGS">FIG. 3</figref>, analysis console <b>300</b> includes a workflow manager <b>302</b> and an output generator <b>304</b> stored in computer-readable memory <b>306</b>, data storage <b>308</b>, processor <b>310</b>, input/output functionality <b>312</b>, and an interface <b>314</b>. Workflow manager <b>302</b>, output generator <b>304</b>, memory <b>306</b>, data storage <b>308</b>, processor <b>310</b>, input/output functionality <b>312</b>, and interface <b>314</b> may be implemented using any suitable respective combination of hardware, firmware, or software. In certain embodiments, workflow manager <b>302</b>, output generator <b>304</b>, memory <b>306</b>, data storage <b>308</b>, processor <b>310</b>, input/output functionality <b>312</b>, and/or interface <b>314</b> may be capable of executing logic accessible to these components and/or stored therein. Although this embodiment includes workflow manager <b>302</b>, output generator <b>304</b>, memory <b>306</b>, data storage <b>308</b>, processor <b>310</b>, input/output functionality <b>312</b>, and interface <b>314</b>, other embodiments may exclude one or more of these components without departing from the scope of the present disclosure.</p>
<p id="p-0074" num="0073">In certain embodiments, workflow manager <b>302</b> may determine a workflow. A workflow is an ordered list of one or more tasks related to malware analysis. Execution of a workflow starts with a task in the list. Upon completion of a task, the active task calls the subsequent task in the ordered list using, for example, a defined API. When the final task of the workflow finishes, the workflow is complete. Certain workflows may facilitate malware analysis by a human analyst and/or by various analysis modules of analysis console <b>300</b>. The information analyzed may correspond to a file <b>120</b> and/or may include actual content of the file <b>120</b>.</p>
<p id="p-0075" num="0074">In certain instances, the information to be analyzed may be presented to a human analyst for review based on a prior characterization of the file <b>120</b>. For example, if malware analysis system <b>200</b> characterizes the file <b>120</b> as being suspected of malware, then a human analyst may review the file <b>120</b> to determine if it is in fact malware. As another example, if the file <b>120</b> is determined to be malware rather than merely to be suspected malware, a human analyst may review the file <b>120</b> to learn more about the malware in the file <b>120</b> and/or to start an incident response review (e.g., to clean up the file <b>120</b>).</p>
<p id="p-0076" num="0075">In such and other scenarios, workflow manager <b>302</b> may determine a workflow associated with reviewing the file <b>120</b>. In certain embodiments, workflow manager <b>302</b> may generate a set of tasks to be performed by a human analyst reviewing the file <b>120</b> based on a variety of factors. Such factors could include the type of file <b>120</b> being reviewed and the characterization of the file <b>120</b> by malware analysis system <b>200</b>. Other factors may include whether the system is operating in a passive, active, a hybrid passive/active mode, or another mode. For example, if operating in an active mode, a determination that the file <b>120</b> is suspected malware may invoke an advanced malware analysis workflow to be followed by a human analyst. As another example, if the file <b>120</b> is determined to be known malware, then workflows associated with cleaning up the environment(s) the file <b>120</b> has been in as well as other incident response workflows (e.g., notifying a user or an administrator) may be determined. Other suitable workflows may be generated based on these or other suitable factors.</p>
<p id="p-0077" num="0076">In certain embodiments, workflow manager <b>302</b> may, automatically perform certain tasks to facilitate the review of the file <b>120</b> by the human analyst. For example, it may be determined that for a file <b>120</b> to be properly reviewed by a human analyst, all strings in the file <b>120</b> should be extracted. Workflow manager <b>302</b> may automate this extraction procedure. Workflow manager <b>302</b> may also provide a priority associated with the review of the file <b>120</b>. For example, if it is determined that a file <b>120</b> has a higher probability of containing malware, then a higher priority may be assigned to the review of the file <b>120</b>. Workflow manager <b>302</b> may also provide a display that enables the human analyst to review the workflow, the file <b>120</b> being analyzed, and/or information pertaining to that file <b>120</b>.</p>
<p id="p-0078" num="0077">Output generator <b>304</b>, in certain embodiments, may be operable to generate a malware analysis output (a portion or all of which may be or may be included with response <b>126</b>). In certain embodiments, the output may include an identifier of the file <b>120</b> or files <b>120</b> analyzed. For example, an identifier might include a hash of all or a portion of a file <b>120</b> analyzed at analysis console <b>300</b>. The hash may be at least substantially equivalent to a hash generated by the ingest module <b>202</b> of the node <b>200</b> requesting the file <b>120</b> to be further analyzed for malware. Certain outputs generated by output generator <b>304</b> may include an indication of whether the file <b>120</b> (or files <b>120</b>) analyzed at output generator <b>304</b> contain malware.</p>
<p id="p-0079" num="0078">Memory <b>306</b> and data storage <b>308</b> may take the form of a suitable combination of volatile and non-volatile memory including, without limitation, magnetic media, optical media, RAM, ROM, removable media, or any other suitable memory component. Additionally, all or part of memory <b>306</b> and/or data storage <b>308</b> could reside locally within analysis console <b>300</b> or could reside at a location external but accessible to analysis console <b>300</b>. Additionally, portions or all of memory <b>306</b> and data storage <b>308</b> may be combined, if appropriate.</p>
<p id="p-0080" num="0079">Processor <b>310</b> may include one or more microprocessors, controllers, or any other suitable computing devices or resources. Each processor may work, either alone or with other components of analysis console <b>300</b>, to provide a portion or all of the functionality of its associated computer system described herein. In certain embodiments, processor <b>310</b> may comprise the primary element or elements executing or realizing various logic-based functions, including, for example, the functions of workflow manager <b>302</b> and an output generator <b>304</b>.</p>
<p id="p-0081" num="0080">I/O functionality <b>312</b> may comprise, for example, any communication method of analysis console <b>300</b> (e.g., from an image buffer to a display). In certain embodiments, input functionality may comprise, for example, the receiving signals or data by analysis console <b>300</b>. In other embodiments, output functionality may comprise, for example, the communication of signals or data by analysis console. These terms may also refer to part of an action, such as, for example, to &#x201c;perform I/O&#x201d; may involve performing an input and/or output operation. In some cases, one or more communication devices of analysis console <b>300</b> may be used to implement both input and output functionality.</p>
<p id="p-0082" num="0081">Interface <b>314</b> may comprise, for example, any tangible device(s) that may be used (e.g., by a person, or by another device or system) to communicate with analysis console <b>300</b>. For example, keyboards and mice may be considered input interfaces <b>314</b> of some analysis consoles <b>300</b>, while monitors and printers may be considered output interfaces of some analysis consoles <b>300</b>.</p>
<p id="p-0083" num="0082"><figref idref="DRAWINGS">FIG. 4</figref> illustrates an example method for detecting addition of a file <b>120</b> to a computer system and initiating remote analysis of the file <b>120</b> for malware, according to certain embodiments of the present disclosure. The methods described with respect to <figref idref="DRAWINGS">FIG. 4</figref> may be implemented in any suitable combination of software, firmware, and hardware. This example method is described with respect to system <b>100</b> of <figref idref="DRAWINGS">FIG. 1</figref>; however, the present disclosure contemplates this example method being performed using any suitable type of system according to particular needs. Additionally, although particular components of system <b>100</b> are described as performing particular steps of the following method, the present disclosure contemplates any suitable component performing these steps according to particular needs. In this particular example, the computer system being monitored for addition of a file <b>120</b> is user system <b>102</b>.</p>
<p id="p-0084" num="0083">At step <b>400</b>, host monitoring module <b>122</b> of user system <b>102</b> monitors user system <b>102</b> for addition of a file <b>120</b> to user system <b>102</b>. For example, host monitoring module <b>122</b> may monitor user system <b>102</b> for addition of a file <b>120</b> from removable media storage device <b>118</b> to user system <b>102</b>. As another example, host monitoring module <b>122</b> may monitor user system <b>102</b> for addition of a file <b>120</b> to user system <b>102</b> via a network connection. As another example, host monitoring module <b>122</b> may monitor user system <b>102</b> for addition of a file <b>120</b> from a web-based electronic mail service to user system <b>102</b>. As a particular example, the file <b>120</b> may be an attachment to an email accessed by user system <b>102</b> using the web-based electronic mail service. In certain embodiments, monitoring user system <b>102</b> for addition of a file <b>120</b> to user system <b>102</b> may include one or more of monitoring user system <b>102</b> for an actual addition of a file <b>120</b> to user system <b>102</b> and monitoring user system <b>102</b> for an attempt (e.g., by a user of user system <b>102</b> and/or by an application of user system <b>102</b>) to add a file <b>120</b> to user system <b>102</b>. In certain embodiments, host monitoring module <b>122</b> substantially continuously monitors user system <b>102</b> for addition of a file <b>120</b> to user system <b>102</b>. Although detection of the addition of a file <b>120</b> added by particular techniques is described, the present disclosure contemplates detection of the addition of a file <b>120</b> added in any suitable manner, according to particular needs.</p>
<p id="p-0085" num="0084">At step <b>402</b>, host monitoring module <b>122</b> may determine whether the addition of a file <b>120</b> has been detected. For example, host monitoring module <b>122</b> may determine whether the addition of a file <b>120</b> from removable media storage device <b>118</b> to user system <b>102</b> has been detected. As another example, host monitoring module <b>122</b> may determine whether the transfer of a file <b>120</b> to user system <b>102</b> via a network connection has been detected. As another example, host monitoring module <b>122</b> may determine whether the transfer of a file <b>120</b> from web-based electronic mail service <b>138</b> to user system <b>102</b> has been detected. In certain embodiments, detecting an addition of a file <b>120</b> to user system <b>102</b> may include one or more of detecting an actual addition of a file <b>120</b> to user system <b>102</b> and detecting an attempt (e.g., by a user of user system <b>102</b> and/or by an application of user system <b>102</b>) to add a file <b>120</b> to user system <b>102</b>.</p>
<p id="p-0086" num="0085">If at step <b>402</b> host monitoring module <b>122</b> does not detect an addition of a file <b>120</b> to user system <b>102</b>, then the method may return to step <b>400</b> for host monitoring module <b>122</b> to continue to monitor user system <b>102</b> for addition of a file <b>120</b> to user system <b>102</b>. If at step <b>402</b> host monitoring module <b>122</b> detects the addition of a file <b>120</b> to user system <b>102</b>, then the method may proceed to step <b>404</b>.</p>
<p id="p-0087" num="0086">At step <b>404</b>, host monitoring module <b>122</b> may determine information associated with the addition of file <b>120</b> to user system <b>102</b>. The information may include one or more of a hash of the file <b>120</b>, a timestamp associated with the addition of the file <b>120</b> to user system <b>102</b>, a mechanism by which the file <b>120</b> was added to user system <b>102</b>, and any other suitable information.</p>
<p id="p-0088" num="0087">At step <b>406</b>, host monitoring module <b>122</b> may access policies <b>124</b>. For example, host monitoring module <b>122</b> may access policies <b>124</b> to determine whether to initiate communication of the file <b>120</b> to remote malware analysis system <b>110</b>. Initiating communication of file <b>120</b> to remote malware analysis system <b>110</b> may include communicating file <b>120</b> and/or any other suitable information associated with the addition of file <b>120</b> to user system <b>102</b> directly from user system <b>102</b> to remote malware analysis system <b>110</b>.</p>
<p id="p-0089" num="0088">In certain other embodiments, initiating communication of file <b>120</b> to remote malware analysis system <b>110</b> may include communicating file <b>120</b> and/or any other suitable information associated with the addition of file <b>120</b> to user system <b>102</b> to processing system <b>104</b>, which may be responsible for communicating the file <b>120</b> and/or other suitable information to malware analysis system <b>110</b>. For purposes of this example method, the present disclosure assumes that communication of file <b>120</b> and/or other suitable information from user system <b>102</b> to malware analysis system <b>110</b> or from malware analysis system <b>110</b> to user system <b>102</b> passes through processing system <b>104</b> prior to being sent to malware analysis system <b>110</b> or received from malware analysis system <b>110</b>, respectively.</p>
<p id="p-0090" num="0089">Policies <b>124</b> may specify when to initiate communication of files <b>120</b> to malware analysis system <b>110</b> and what information should be sent to malware analysis system <b>110</b>. As just one example, policies <b>124</b> may specify which types of files <b>120</b> should be communicated to malware analysis system <b>110</b>.</p>
<p id="p-0091" num="0090">At step <b>408</b>, host monitoring module <b>122</b> may determine whether to initiate communication of file <b>120</b> and/or other suitable information to malware analysis system <b>110</b>. If at step <b>408</b> host monitoring module <b>122</b> determines not to initiate communication of file <b>120</b> and/or other suitable information to malware analysis system <b>110</b>, then the method may return to step <b>400</b> for host monitoring module <b>122</b> to monitor user system <b>102</b> for addition of a file <b>120</b> to user system <b>102</b>. If at step <b>408</b> host monitoring module <b>122</b> determines to initiate communication of file <b>120</b> and/or other information to malware analysis system <b>110</b>, the method may proceed to step <b>410</b>.</p>
<p id="p-0092" num="0091">At step <b>410</b>, host monitoring module <b>122</b> of user system <b>102</b> may communicate file <b>120</b> and/or other suitable information to processing system <b>104</b>. For example, host monitoring module <b>122</b> may communicate a copy of file <b>120</b> to processing system <b>104</b>. Additionally or alternatively, host monitoring module <b>122</b> may communicate other suitable information to processing system <b>104</b>. This other information may include an identifier for user system <b>102</b> (e.g., an IP address, a user name, a machine identification number, and/or any other suitable identifying information), a hash value computed from file <b>120</b>, timestamp information associated with the addition of file <b>120</b> to user system <b>102</b> (and/or any other suitable time information), an identification of a manner in which file <b>120</b> was added to user system <b>102</b>, an identification of one or more policies (e.g., one or more polices <b>124</b>) that resulted in file <b>120</b> being communicated to processing system <b>104</b> (and/or malware analysis system <b>110</b>), and any other suitable information.</p>
<p id="p-0093" num="0092">At step <b>412</b>, host monitoring coordination module <b>134</b> of processing system <b>104</b> may receive file <b>120</b> and/or the other information communicated by host monitoring module <b>122</b> of user system <b>102</b>. At step <b>414</b>, host monitoring coordination module <b>134</b> of processing system <b>104</b> may store a copy of any suitable portion of the received information (including potentially a copy of file <b>120</b>) in storage module <b>136</b>.</p>
<p id="p-0094" num="0093">At step <b>416</b>, host monitoring coordination module <b>134</b> may access policies <b>124</b> stored in storage module <b>136</b> to determine whether to communicate file <b>120</b> and/or other suitable information to malware analysis system <b>110</b> for a malware analysis of file <b>120</b> to be performed. As described above, policies <b>124</b> of storage module <b>136</b> may be the same as or different than the policies <b>124</b> accessed by host monitoring module <b>122</b>.</p>
<p id="p-0095" num="0094">At step <b>418</b>, host monitoring coordination module <b>134</b> may determine whether to communicate file <b>120</b> and/or other suitable information to remote malware analysis system <b>110</b> for a malware analysis to be performed on file <b>120</b>. If host monitoring coordination module <b>134</b> determines at step <b>418</b> not to communicate file <b>120</b> and/or associated information to malware analysis system <b>110</b>, then host monitoring coordination module <b>134</b> may continue to await additional communications from host monitoring module <b>122</b> of user system <b>102</b> (and, potentially, multiple user systems <b>102</b>) and the method may return to step <b>400</b>. For example, host monitoring coordination module <b>134</b> may determine that another instance of file <b>120</b> has already been communicated to (and potentially already analyzed by) malware analysis system <b>110</b>. If host monitoring coordination module <b>134</b> determines that a result <b>126</b> for file <b>120</b> is already stored in storage module <b>136</b>, then host monitoring coordination module <b>134</b> may communicate that result <b>126</b> to user system <b>102</b>, if appropriate, and/or take any other suitable action.</p>
<p id="p-0096" num="0095">In certain embodiments, if host monitoring coordination module <b>134</b> detects that it is receiving a large number of requests for a malware analysis of a particular file <b>120</b>, host monitoring coordination module <b>134</b> may communicate the results of the malware analysis (if known) for the particular file <b>120</b> to all or a particular subset of user systems <b>102</b> to reduce the processing burden on processing system <b>104</b>. For example, host monitoring coordination module <b>134</b> may maintain a list of hashes (or other identifier(s)) of files <b>120</b> for which malware analysis requests have been made by user systems <b>102</b>. If requests for a malware analysis for a particular file <b>120</b> exceed some predetermined threshold, host monitoring coordination module <b>134</b> may push the results of the malware analysis (if known) for that file <b>120</b> to the various user systems <b>102</b> (e.g., to host monitoring module <b>122</b>). The host monitoring module <b>122</b> of user systems <b>102</b> may check a local (to user system <b>102</b>) list of files <b>120</b> (e.g., hashes or other identifiers of file(s) <b>120</b>) for which malware analysis results are known before sending a request for a malware analysis of a particular file <b>120</b>. The local list also may include an indication of whether the file <b>120</b> is malware. In certain embodiments, this may be particularly useful for files <b>120</b> that are known not to be malware (&#x201c;known good&#x201d; files).</p>
<p id="p-0097" num="0096">Returning to step <b>418</b>, if host monitoring coordination module <b>134</b> determines at step <b>418</b> to communicate file <b>120</b> and/or other associated information to malware analysis system <b>110</b>, then at step <b>420</b> host monitoring coordination module <b>134</b> may communicate file <b>120</b> and/or other associated information to malware analysis system <b>110</b> for a malware analysis to be performed on file <b>120</b>. In certain embodiments, malware analysis system <b>110</b> is implemented as a web service, and its functions are exposed using a web service interface. Host monitoring coordination module <b>134</b> may invoke the web service provided by malware analysis system <b>110</b>, and may interact with malware analysis system <b>110</b> according to the interface specification for malware analysis system <b>110</b>. This interface may be implemented in any suitable manner according to particular needs.</p>
<p id="p-0098" num="0097">As just one example, the web service interface of malware analysis system <b>110</b> may specify that host monitoring coordination module <b>134</b> provide the hash of file <b>120</b> to malware analysis system <b>110</b> prior to sending the actual file <b>120</b> to malware analysis system <b>110</b>, so that malware analysis system <b>110</b> may determine whether an analysis has already been performed (or is already in the process of being performed) on file <b>120</b>. If malware analysis system <b>110</b> determines based on the hash value that a malware analysis has already been performed (or is in progress) on file <b>120</b>, then malware analysis system <b>110</b> may instruct host monitoring coordination module <b>134</b> not to communicate file <b>120</b> to malware analysis system <b>110</b>.</p>
<p id="p-0099" num="0098">In certain embodiments, even in cases for which malware analysis system <b>110</b> has analyzed previously (or is currently analyzing) a particular file <b>120</b> for malware, malware analysis system <b>110</b> may keep track of subsequent requests to analyze that particular file <b>120</b>. This may allow malware analysis system <b>110</b> to have further insight into the pervasiveness of a particular file <b>120</b>, to determine whether particular requests are bad requests, and to take any suitable actions based on this additional information.</p>
<p id="p-0100" num="0099">Additionally or alternatively, in certain embodiments, in a substantially similar manner to that described above with reference to host monitoring module <b>134</b>, if malware analysis system <b>110</b> detects that it is receiving a large number of requests for a malware analysis of a particular file <b>120</b>, malware analysis system <b>110</b> may communicate the results of the malware analysis (if known) for the particular file <b>120</b> to all or a subset of processing systems <b>104</b> and/or to all or a particular subset of user systems <b>102</b> to reduce the processing burden on malware analysis system <b>110</b> and/or processing system(s) <b>104</b>. For example, malware analysis system <b>110</b> may maintain a list of hashes (or other identifier(s)) of files <b>120</b> for which malware analysis requests have been made (e.g., by user systems <b>102</b> and/or processing systems <b>104</b>. If requests for a malware analysis for a particular file <b>120</b> exceed some predetermined threshold, malware analysis system <b>110</b> may push the results of the malware analysis (if known) for that file <b>120</b> to the various user systems <b>102</b> (e.g., to host monitoring module <b>122</b>) and/or to various processing systems <b>104</b>. The host monitoring module <b>122</b> of user systems <b>102</b> may check a local (to user system <b>102</b>) list of files <b>120</b> (e.g., hashes or other identifiers of file(s) <b>120</b>) for which malware analysis results are known before sending a request for a malware analysis of a particular file <b>120</b>. Additionally or alternatively, The host monitoring coordination module <b>122</b> of processing systems <b>104</b> may check a local (to processing system <b>104</b>) list of files <b>120</b> (e.g., hashes or other identifiers of file(s) <b>120</b>) for which malware analysis results are known before sending a request for a malware analysis of a particular file <b>120</b>. The local list also may include an indication of whether the file <b>120</b> is malware. In certain embodiments, this may be particularly useful for files <b>120</b> that are known not to be malware (&#x201c;known good&#x201d; files).</p>
<p id="p-0101" num="0100">If malware analysis system <b>110</b> determines that a malware analysis of file <b>120</b> has not been performed (and is not in progress), then malware analysis system <b>110</b> may instruct host monitoring coordination module <b>134</b> to provide a copy of file <b>120</b> to malware analysis system <b>110</b> for malware analysis. In certain other embodiments, the web service interface provided by malware analysis system <b>110</b> may allow host monitoring coordination module <b>134</b> to provide file <b>120</b> for analysis at any suitable time.</p>
<p id="p-0102" num="0101">At step <b>422</b>, malware analysis system <b>110</b> may receive the file <b>120</b> and/or other suitable information from host monitoring coordination module <b>134</b>. At step <b>424</b>, malware analysis system <b>110</b> may perform a malware analysis of file <b>120</b>. The present disclosure contemplates malware analysis system <b>110</b> performing this malware analysis in any suitable manner according to particular needs. A particular example implementation of malware analysis system <b>110</b> is described above with reference to <figref idref="DRAWINGS">FIGS. 2-3</figref>.</p>
<p id="p-0103" num="0102">In certain embodiments, prior to malware analysis system <b>110</b> performing a malware analysis of file <b>120</b>, malware analysis system <b>110</b> (or another suitable component of system <b>100</b>) may determine whether malware analysis system <b>110</b> has previously analyzed file <b>120</b> for malware. For example, malware analysis system <b>110</b> may compare a hash or other identifier of the file <b>120</b> included in the request with one or more stored hashes or other identifiers of files <b>120</b> that have been previously (or currently are being) analyzed for malware by malware analysis system <b>110</b>. In certain embodiments, if it is determined that file <b>120</b> has been analyzed previously, malware detection schemes may not be applied to file <b>120</b>; instead, the results of the previous analysis of file <b>120</b> may be determined using a database that contains results of a previous analysis of file <b>120</b>. If appropriate, those results may be returned to the requesting system (e.g., processing system <b>104</b> and/or user system <b>102</b>). For example, the method may skip step <b>424</b> and proceed to step <b>426</b>. In certain embodiments, if it is determined that file <b>120</b> has not been analyzed previously, the method may proceed to step <b>424</b>.</p>
<p id="p-0104" num="0103">As described above, in certain embodiments, malware analysis system <b>110</b> may publish available operations/interactions as a web service, and processing system <b>104</b> and/or user system <b>102</b> may submit requests for a malware analysis to be performed using the web service. In certain examples of such embodiments, the web services logic may be responsible for determining whether the file <b>120</b> has been previously analyzed for malware and if so, returning a previous result to the requesting system (e.g., processing system <b>104</b> and/or user system <b>102</b>).</p>
<p id="p-0105" num="0104">Example techniques for determining whether malware analysis system <b>110</b> has previously analyzed file <b>120</b> for malware are described above with reference to <figref idref="DRAWINGS">FIG. 2</figref> (e.g., in associated with ingest module <b>202</b> of malware analysis system <b>200</b>.</p>
<p id="p-0106" num="0105">At step <b>426</b>, malware analysis system <b>110</b> may communicate a result <b>126</b> to host monitoring coordination module <b>134</b>. Result <b>126</b> may include a disposition resulting from the malware analysis performed on file <b>120</b>, a recommended action, and/or any other suitable information. For example, a result <b>126</b> may conclusively indicate that the file <b>120</b> is known to contain malware, that the file <b>120</b> is suspected of malware (though such detection may not conclusively indicate that file <b>120</b> is known to contain malware), that file <b>120</b> is not malware, and/or any other suitable result of the malware analysis performed by malware analysis system <b>110</b>.</p>
<p id="p-0107" num="0106">At step <b>428</b>, host monitoring coordination module <b>134</b> may store the received result <b>126</b> in storage module <b>136</b>. For example, host monitoring coordination module <b>134</b> may store result <b>126</b> for file <b>120</b> indexed by the hash value for file <b>120</b>. At step <b>430</b>, host monitoring coordination module <b>134</b> may communicate the result <b>126</b> to host monitoring module <b>122</b> of user system <b>102</b>, if appropriate. In certain embodiments, a result may not be communicated to user system <b>102</b>. For example, in certain embodiments if the result of analyzing a particular file <b>120</b> for malware results in a determination that the file is suspected of being malware, the particular file <b>120</b> may be sent to analysis console <b>210</b> for analysis and a result may not be sent to user system <b>102</b> (e.g., or may be delayed).</p>
<p id="p-0108" num="0107">Although the method in <figref idref="DRAWINGS">FIG. 4</figref> is illustrated as ending after step <b>430</b>, it will be understood that the method may be performed substantially continuously (or at any other suitable interval) as user system <b>102</b> continues to monitor for addition of files <b>120</b> and as those files <b>120</b> or other related information is processed by system <b>100</b>.</p>
<p id="p-0109" num="0108"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an example computer system <b>500</b> that may be used for one or more portions of the systems described with references to <figref idref="DRAWINGS">FIGS. 1-4</figref>, according to certain embodiments of the present disclosure. Although the present disclosure describes and illustrates a particular computer system <b>500</b> having particular components in a particular configuration, the present disclosure contemplates any suitable computer system having any suitable components in any suitable configuration. Moreover, computer system <b>500</b> may have take any suitable physical form, such as for example one or more integrated circuit (ICs), one or more printed circuit boards (PCBs), one or more handheld or other devices (such as mobile telephones or PDAs), one or more personal computers, one or more super computers, one or more servers, and one or more distributed computing elements. Portions or all of system <b>100</b> may be implemented using all of the components, or any appropriate combination of the components, of computer system <b>500</b> described below.</p>
<p id="p-0110" num="0109">Computer system <b>500</b> may have one or more input devices <b>502</b> (which may include a keypad, keyboard, mouse, stylus, or other input devices), one or more output devices <b>504</b> (which may include one or more displays, one or more speakers, one or more printers, or other output devices), one or more storage devices <b>506</b>, and one or more storage media <b>508</b>. An input device <b>502</b> may be external or internal to computer system <b>500</b>. An output device <b>504</b> may be external or internal to computer system <b>500</b>. A storage device <b>506</b> may be external or internal to computer system <b>500</b>. A storage medium <b>508</b> may be external or internal to computer system <b>500</b>.</p>
<p id="p-0111" num="0110">System bus <b>510</b> couples subsystems of computer system <b>500</b> to each other. Herein, reference to a bus encompasses one or more digital signal lines serving a common function. The present disclosure contemplates any suitable system bus <b>510</b> including any suitable bus structures (such as one or more memory buses, one or more peripheral buses, one or more a local buses, or a combination of the foregoing) having any suitable bus architectures. Example bus architectures include, but are not limited to, Industry Standard Architecture (ISA) bus, Enhanced ISA (EISA) bus, Micro Channel Architecture (MCA) bus, Video Electronics Standards Association local (VLB) bus, Peripheral Component Interconnect (PCI) bus, PCI-Express bus (PCI-E), and Accelerated Graphics Port (AGP) bus.</p>
<p id="p-0112" num="0111">Computer system <b>500</b> includes one or more processors <b>512</b> (or central processing units (CPUs)). A processor <b>512</b> may contain a cache <b>514</b> for temporary local storage of instructions, data, or computer addresses. Processors <b>512</b> are coupled to one or more storage devices, including memory <b>516</b>. Memory <b>516</b> may include RAM <b>518</b> and ROM <b>520</b>. Data and instructions may transfer bi-directionally between processors <b>512</b> and RAM <b>518</b>. Data and instructions may transfer uni-directionally to processors <b>512</b> from ROM <b>520</b>. RAM <b>518</b> and ROM <b>520</b> may include any suitable computer-readable storage media.</p>
<p id="p-0113" num="0112">Computer system <b>500</b> includes fixed storage <b>522</b> coupled bi-directionally to processors <b>512</b>. Fixed storage <b>522</b> may be coupled to processors <b>512</b> via storage control unit <b>507</b>. Fixed storage <b>522</b> may provide additional data storage capacity and may include any suitable computer-readable storage media. Fixed storage <b>522</b> may store an operating system (OS) <b>524</b>, one or more executables (EXECs) <b>526</b>, one or more applications or programs <b>528</b>, data <b>530</b> and the like. Fixed storage <b>522</b> is typically a secondary storage medium (such as a hard disk) that is slower than primary storage. In appropriate cases, the information stored by fixed storage <b>522</b> may be incorporated as virtual memory into memory <b>516</b>. In certain embodiments, fixed storage <b>522</b> may include network resources, such as one or more storage area networks (SAN) or network-attached storage (NAS).</p>
<p id="p-0114" num="0113">Processors <b>512</b> may be coupled to a variety of interfaces, such as, for example, graphics control <b>532</b>, video interface <b>534</b>, input interface <b>536</b>, output interface <b>537</b>, and storage interface <b>538</b>, which in turn may be respectively coupled to appropriate devices. Example input or output devices include, but are not limited to, video displays, track balls, mice, keyboards, microphones, touch-sensitive displays, transducer card readers, magnetic or paper tape readers, tablets, styli, voice or handwriting recognizers, biometrics readers, or computer systems. Network interface <b>540</b> may couple processors <b>512</b> to another computer system or to network <b>542</b>. Network interface <b>540</b> may include wired, wireless, or any combination of wired and wireless components. Such components may include wired network cards, wireless network cards, radios, antennas, cables, or any other appropriate components. With network interface <b>540</b>, processors <b>512</b> may receive or send information from or to network <b>542</b> in the course of performing steps of certain embodiments. Certain embodiments may execute solely on processors <b>512</b>. Certain embodiments may execute on processors <b>512</b> and on one or more remote processors operating together.</p>
<p id="p-0115" num="0114">In a network environment, where computer system <b>500</b> is connected to network <b>542</b>, computer system <b>500</b> may communicate with other devices connected to network <b>542</b>. Computer system <b>500</b> may communicate with network <b>542</b> via network interface <b>540</b>. For example, computer system <b>500</b> may receive information (such as a request or a response from another device) from network <b>542</b> in the form of one or more incoming packets at network interface <b>540</b> and memory <b>516</b> may store the incoming packets for subsequent processing. Computer system <b>500</b> may send information (such as a request or a response to another device) to network <b>542</b> in the form of one or more outgoing packets from network interface <b>540</b>, which memory <b>516</b> may store prior to being sent. Processors <b>512</b> may access an incoming or outgoing packet in memory <b>516</b> to process it, according to particular needs.</p>
<p id="p-0116" num="0115">Certain embodiments involve one or more computer-storage products that include one or more tangible, computer-readable storage media that embody software for performing one or more steps of one or more processes described or illustrated herein. In certain embodiments, one or more portions of the media, the software, or both may be designed and manufactured specifically to perform one or more steps of one or more processes described or illustrated herein. Additionally or alternatively, one or more portions of the media, the software, or both may be generally available without design or manufacture specific to processes described or illustrated herein. Example computer-readable storage media include, but are not limited to, compact discs (CDs) (such as CD-ROMs), field-programmable gate arrays (FPGAs), floppy disks, optical disks, hard disks, holographic storage devices, integrated circuits (ICs) (such as application-specific ICs (ASICs)), magnetic tape, caches, programmable logic devices (PLDs), RAM devices, ROM devices, semiconductor memory devices, and other suitable computer-readable storage media. In certain embodiments, software may be machine code which a compiler may generate or one or more files containing higher-level code which a computer may execute using an interpreter.</p>
<p id="p-0117" num="0116">As an example and not by way of limitation, memory <b>516</b> may include one or more tangible, computer-readable storage media embodying software and computer system <b>500</b> may provide particular functionality described or illustrated herein as a result of processors <b>512</b> executing the software. Memory <b>516</b> may store and processors <b>512</b> may execute the software. Memory <b>516</b> may read the software from the computer-readable storage media in mass storage device <b>516</b> embodying the software or from one or more other sources via network interface <b>540</b>. When executing the software, processors <b>512</b> may perform one or more steps of one or more processes described or illustrated herein, which may include defining one or more data structures for storage in memory <b>516</b> and modifying one or more of the data structures as directed by one or more portions the software, according to particular needs.</p>
<p id="p-0118" num="0117">In certain embodiments, the described processing and memory elements (such as processors <b>512</b> and memory <b>516</b>) may be distributed across multiple devices such that the operations performed utilizing these elements may also be distributed across multiple devices. For example, software operated utilizing these elements may be run across multiple computers that contain these processing and memory elements. Other variations aside from the stated example are contemplated involving the use of distributed computing.</p>
<p id="p-0119" num="0118">In addition or as an alternative, computer system <b>500</b> may provide particular functionality described or illustrated herein as a result of logic hardwired or otherwise embodied in a circuit, which may operate in place of or together with software to perform one or more steps of one or more processes described or illustrated herein. The present disclosure encompasses any suitable combination of hardware and software, according to particular needs.</p>
<p id="p-0120" num="0119">Although the present disclosure describes or illustrates particular operations as occurring in a particular order, the present disclosure contemplates any suitable operations occurring in any suitable order. Moreover, the present disclosure contemplates any suitable operations being repeated one or more times in any suitable order. Although the present disclosure describes or illustrates particular operations as occurring in sequence, the present disclosure contemplates any suitable operations occurring at substantially the same time, where appropriate. Any suitable operation or sequence of operations described or illustrated herein may be interrupted, suspended, or otherwise controlled by another process, such as an operating system or kernel, where appropriate. The acts can operate in an operating system environment or as stand-alone routines occupying all or a substantial part of the system processing.</p>
<p id="p-0121" num="0120">Although the present disclosure has been described with several embodiments, diverse changes, substitutions, variations, alterations, and modifications may be suggested to one skilled in the art, and it is intended that the disclosure encompass all such changes, substitutions, variations, alterations, and modifications as fall within the spirit and scope of the appended claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer system, comprising:
<claim-text>a host user system comprising:
<claim-text>a first memory; and</claim-text>
<claim-text>a first processor operable to monitor the host user system, the first processor further arranged to:</claim-text>
<claim-text>monitor the host user system for addition of a file to the host user system;</claim-text>
<claim-text>detect the addition of a file to the host user system;</claim-text>
<claim-text>access one or more policies to determine whether to communicate information associated with the detected addition of the file over a communication network to initiate a possible malware analysis of the file;</claim-text>
<claim-text>initiate, in response to determining to communicate the information associated with the detected addition of the file over the communication network, a communication over the communication network of the information associated with the detected addition of the file to an intermediary; and</claim-text>
</claim-text>
<claim-text>the intermediary, disposed separate to the host user system, the intermediary, comprising:
<claim-text>a second memory; and</claim-text>
<claim-text>a second processor arranged:</claim-text>
<claim-text>to coordinate monitoring the host user system and the malware analysis and to receive the information associated with the detected addition of the file at the host user system prior to forwarding the information to a remote malware analysis system;</claim-text>
<claim-text>the intermediary further arranged to access the one or more policies to determine whether to communicate, over the communication network, the information associated with the detected addition of the file received from the host user system to the remote malware analysis system to initiate the malware analysis of the file by the remote malware analysis system and to determine, based on the one or more policies, what information associated with the detected addition of the file to communicate over the communication network to the remote malware analysis system;</claim-text>
</claim-text>
<claim-text>wherein the information comprises one or more of the following:
<claim-text>identification information for the host user system;</claim-text>
<claim-text>identification of a manner in which the file was attempted to be added to the host user system; and</claim-text>
<claim-text>timestamp information.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The computer system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the first processor monitors the host user system for the addition of the file to the host user system by monitoring the host user system for from a removable media storage device to the host user system and monitors the addition of the file to the host user system by detecting the addition of the file from the removable media storage device to the host user system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The computer system of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the removable media storage device comprises one or more of:
<claim-text>a flash storage device;</claim-text>
<claim-text>a optical media storage device; and</claim-text>
<claim-text>a magnetic media storage device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The computer system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the first processor monitors the host user system for the addition of the file to the host user system by monitoring the user system for the addition of the file to the host user system via a network connection and detects the addition of the file to the host user system by detecting a transfer to the host user system of the file via the network connection.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The computer system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the first processor monitors the host user system for the addition of the file to the host user system comprises monitoring the host user system for the addition of the file from a web-based electronic mail service to the host user system and detects the addition of the file to the host user system by detecting a transfer of the file from the web-based electronic mail service to the host user system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The computer system of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the web-based electronic mail service comprises one or more of:
<claim-text>WINDOWS LIVE&#x2122; HOTMAIL&#xae; service;</claim-text>
<claim-text>YAHOO! MAIL service;</claim-text>
<claim-text>GMAIL&#x2122; service; and</claim-text>
<claim-text>MOBILEME&#xae; service.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The computer system of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein:
<claim-text>the file comprises an attachment to an email accessed using the web-based electronic mail service;</claim-text>
<claim-text>the first processor monitoring the host user system for the addition of the file from a web-based electronic mail service to the host user system by monitoring the host user system for a download of the attachment from the web-based electronic mail service to the host user system and detecting the addition of the file from the web-based electronic mail service to the host user system by detecting the transfer of the attachment from the web-based electronic mail service to the host user system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The computer system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first processor is operable to initiate communication over the communication network of the information associated with the detected addition of the file by invoking a web service call to the remote malware analysis system.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A non-transitory computer-readable medium comprising instructions that when executed by one or more processors operable to perform operations comprising:
<claim-text>monitoring, by a first processor of a host user system, a user system for addition of a file to the user system;</claim-text>
<claim-text>detecting, by the first processor of the host user system, the addition of the file to the user system;</claim-text>
<claim-text>accessing, by the first processor of the host user system, one or more policies to determine whether to communicate information associated with the detected addition of the file over a communication network to an intermediary to initiate a possible malware analysis of the file by the intermediary;</claim-text>
<claim-text>initiating by the processor of the intermediary, in response to determining to communicate the information associated with the detected addition of the file over the communication network to the intermediary, a communication over the communication network of the information associated with the detected addition of the file to the intermediary;</claim-text>
<claim-text>coordinating, by the processor of the intermediary, monitoring the user system and the malware analysis and receiving, by the second processor, the information associated with the detected addition of the file at the user system prior to being forwarded to a remote malware analysis system;</claim-text>
<claim-text>accessing the one or more policies by the processor of the intermediary to determine whether to communicate, over the communication network, the information associated with the detected addition of the file received from the host user system to the remote malware analysis system to initiate the malware analysis of the file by the remote malware analysis system; and</claim-text>
<claim-text>determining by the processor of the intermediary, based on the one or more policies, what information associated with the detected addition of the file to communicate over the communication network to the remote malware analysis system;</claim-text>
<claim-text>wherein the information comprises one or more of the following:
<claim-text>identification information for the host user system;</claim-text>
<claim-text>identification of a manner in which the file was attempted to be added to the host user system; and</claim-text>
</claim-text>
<claim-text>timestamp information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The non-transitory computer-readable medium of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein:
<claim-text>the processor of the host user system monitors the host user system for the addition of the file to the host user system by monitoring the host user system for the addition of the file from a removable media storage device to the host user system and monitors an the addition of the file to the host user system by detecting an the addition of the file from the removable media storage device to the host user system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The non-transitory computer-readable medium of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the removable media storage device comprises one or more of:
<claim-text>a flash storage device;</claim-text>
<claim-text>a optical media storage device; and</claim-text>
<claim-text>a magnetic media storage device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The non-transitory computer-readable medium of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein:
<claim-text>the processor of the host user system monitors the host user system for the addition of the file to the host user system by monitoring the user system for the addition of the file to the host user system via a network connection and detects the addition of the file to the host user system by detecting a transfer to the host user system of the file via the network connection.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The non-transitory computer-readable medium of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein:
<claim-text>the processor of the host user system monitors the host user system for the addition of the file to the host user system comprises monitoring the host user system for the addition of the file from a web-based electronic mail service to the host user system and detects the addition of the file to the host user system by detecting a transfer of the file from the web-based electronic mail service to the host user system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The non-transitory computer-readable medium of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the web-based electronic mail service comprises one or more of:
<claim-text>WINDOWS LIVE&#x2122; HOTMAIL&#xae; service;</claim-text>
<claim-text>YAHOO! MAIL service;</claim-text>
<claim-text>GMAIL&#x2122; service; and</claim-text>
<claim-text>MOBILEME&#xae; service.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The non-transitory computer-readable medium of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein:
<claim-text>the file comprises an attachment to an email accessed using the web-based electronic mail service;</claim-text>
<claim-text>the processor of the host user system monitoring the host user system for the addition of the file from a web-based electronic mail service to the host user system by monitoring the host user system for a download of the attachment from the web-based electronic mail service to the host user system and detecting the addition of the file from the web-based electronic mail service to the host user system by detecting the transfer of the attachment from the web-based electronic mail service to the host user system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The non-transitory computer-readable medium of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising initiating communication over the communication network by the second processor of information associated with the detected addition of the file by invoking a web service call to the malware analysis system.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. A computer-implemented method, comprising:
<claim-text>monitoring, by a first processor of a host user system, a host user system for addition of a file to the host user system;</claim-text>
<claim-text>detecting, by the first processor of the host user system, the addition of the file to the host user system;</claim-text>
<claim-text>accessing, by the first processor of the host user system, one or more policies to determine whether to communicate the information associated with the detected addition of the file over a communication network to an intermediary to initiate a possible malware analysis of the file by a remote malware analysis system;</claim-text>
<claim-text>initiating by the first processor of the host user system, in response to determining to communicate the information associated with the detected addition of the file over the communication network to the intermediary, a communication over the communication network of the information associated with the detected addition of the file to the intermediary;</claim-text>
<claim-text>coordinating, by a second processor of the intermediary, monitoring the host user system and receiving, by the second processor of the intermediary, the information associated with the detected addition of the file at the host user system prior to being forwarded to a remote malware analysis system;</claim-text>
<claim-text>accessing the one or more policies by the second processor of the intermediary to determine whether to communicate, over the communication network, the information associated with the detected addition of the file received from the host user system to the remote malware analysis system to initiate the malware analysis of the file by the remote malware analysis system; and</claim-text>
<claim-text>determining by the second processor of the intermediary, based on the one or more policies, what information associated with the detected addition of the file to communicate over the communication network to the remote malware analysis system;</claim-text>
<claim-text>wherein the information comprises one or more of the following:
<claim-text>identification information for the host user system;</claim-text>
<claim-text>identification of a manner in which the file was attempted to be added to the host user system; and</claim-text>
</claim-text>
<claim-text>timestamp information. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
