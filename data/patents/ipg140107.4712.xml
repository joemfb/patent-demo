<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625805-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625805</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13942554</doc-number>
<date>20130715</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20110101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>N</subclass>
<main-group>7</main-group>
<subgroup>167</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>9</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>9</main-group>
<subgroup>08</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>9</main-group>
<subgroup>32</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>380284</main-classification>
<further-classification>380228</further-classification>
<further-classification>380259</further-classification>
<further-classification>380285</further-classification>
<further-classification>713171</further-classification>
</classification-national>
<invention-title id="d2e43">Digital security bubble</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5850443</doc-number>
<kind>A</kind>
<name>Van Oorschot et al.</name>
<date>19981200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6009173</doc-number>
<kind>A</kind>
<name>Sumner</name>
<date>19991200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6266420</doc-number>
<kind>B1</kind>
<name>Langford et al.</name>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7356564</doc-number>
<kind>B2</kind>
<name>Hartselle et al.</name>
<date>20080400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>8364764</doc-number>
<kind>B2</kind>
<name>Hartselle et al.</name>
<date>20130100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2013/0159436</doc-number>
<kind>A1</kind>
<name>Hartselle et al.</name>
<date>20130600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>380228</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>380259</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>380284</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>380285</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713171</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>12</number-of-drawing-sheets>
<number-of-figures>12</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61672099</doc-number>
<date>20120716</date>
</document-id>
</us-provisional-application>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only" applicant-authority-category="assignee">
<addressbook>
<orgname>Wickr Inc.</orgname>
<address>
<city>San Francisco</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Statica</last-name>
<first-name>Robert</first-name>
<address>
<city>Flanders</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Coppa</last-name>
<first-name>Kara Lynn</first-name>
<address>
<city>Flanders</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Howell</last-name>
<first-name>Christopher A.</first-name>
<address>
<city>Freehold</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Van Pelt, Yi &#x26; James LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Wickr Inc.</orgname>
<role>02</role>
<address>
<city>San Francisco</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Reza</last-name>
<first-name>Mohammad W</first-name>
<department>2436</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A digital security bubble encapsulation is disclosed. A public key and a device identifier of at least one recipient is requested from a first server. A message containing one or more components is encrypted using a symmetric key. The symmetric key is encrypted with a public key received in response to the request. The encrypted message, the encrypted symmetric key, and the device identifier are encapsulated in a digital security bubble encapsulation. The digital security bubble encapsulation is transmitted to a second server.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="154.35mm" wi="236.47mm" file="US08625805-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="245.11mm" wi="193.04mm" orientation="landscape" file="US08625805-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="242.15mm" wi="163.07mm" file="US08625805-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="231.99mm" wi="175.60mm" file="US08625805-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="218.44mm" wi="175.26mm" file="US08625805-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="216.15mm" wi="177.63mm" orientation="landscape" file="US08625805-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="147.91mm" wi="150.54mm" file="US08625805-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="199.64mm" wi="167.05mm" file="US08625805-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="173.65mm" wi="166.71mm" file="US08625805-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="169.67mm" wi="155.19mm" file="US08625805-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="239.86mm" wi="170.35mm" file="US08625805-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="241.22mm" wi="177.29mm" file="US08625805-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="167.39mm" wi="174.33mm" file="US08625805-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS REFERENCE TO OTHER APPLICATIONS</heading>
<p id="p-0002" num="0001">This application claims priority to U.S. Provisional Patent Application No. 61/672,099 entitled DIGITAL SECURITY BUBBLE IS A CROSS PLATFORM ALGORITHM THAT SECURES COMMUNICATIONS ORIGINATING FROM A MOBILE DEVICE, COMPUTER, WEB, OR ANY OTHER DEVICE CONNECTED VIA EITHER A CELLULAR NETWORK, WIFI, BLUETOOTH, OR OPTICAL CONNECTION WITH OTHER DEVICES. COMMUNICATIONS COULD BE TEXT, VIDEO, AUDIO, PICTURES, AND ANY TYPE OF FILES THAT COULD BE SENT AS ATTACHMENTS filed Jul. 16, 2012 which is incorporated herein by reference for all purposes.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">Users of electronic devices increasingly desire to communicate privately and securely with one another. Unfortunately, existing approaches to securing communications can be difficult and/or cumbersome to use. As one example, some approaches to data security make use of digital certificates or keys, or pre-shared passwords, which can be tedious to manage. Further, existing approaches are often susceptible to interception (e.g., eavesdropping and man-in-the middle attacks), forensic analysis, and impersonation.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0004" num="0003">Various embodiments of the invention are disclosed in the following detailed description and the accompanying drawings.</p>
<p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an embodiment of an environment in which the exchange of secure communications is facilitated by a security platform.</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 2</figref> illustrates an embodiment of an installation and registration process.</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an example of an interface.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 4</figref> illustrates an example of a message sending process.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an example of a digital security bubble.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an example of a digital security bubble.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 7</figref> illustrates an example of a portion of a digital security bubble.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 8</figref> illustrates an example of a portion of a digital security bubble.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 9</figref> illustrates an example of a portion of a digital security bubble.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 10</figref> illustrates an example of a process for accessing a message included inside a digital security bubble.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 11</figref> illustrates an example of an interface.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 12</figref> illustrates an example of a process for mitigating screen capture attempts.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0017" num="0016">The invention can be implemented in numerous ways, including as a process; an apparatus; a system; a composition of matter; a computer program product embodied on a computer readable storage medium; and/or a processor, such as a processor configured to execute instructions stored on and/or provided by a memory coupled to the processor. In this specification, these implementations, or any other form that the invention may take, may be referred to as techniques. In general, the order of the steps of disclosed processes may be altered within the scope of the invention. Unless stated otherwise, a component such as a processor or a memory described as being configured to perform a task may be implemented as a general component that is temporarily configured to perform the task at a given time or a specific component that is manufactured to perform the task. As used herein, the term &#x2018;processor&#x2019; refers to one or more devices, circuits, and/or processing cores configured to process data, such as computer program instructions.</p>
<p id="p-0018" num="0017">A detailed description of one or more embodiments of the invention is provided below along with accompanying figures that illustrate the principles of the invention. The invention is described in connection with such embodiments, but the invention is not limited to any embodiment. The scope of the invention is limited only by the claims and the invention encompasses numerous alternatives, modifications and equivalents. Numerous specific details are set forth in the following description in order to provide a thorough understanding of the invention. These details are provided for the purpose of example and the invention may be practiced according to the claims without some or all of these specific details. For the purpose of clarity, technical material that is known in the technical fields related to the invention has not been described in detail so that the invention is not unnecessarily obscured.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an embodiment of an environment in which the exchange of secure communications is facilitated by a security platform (e.g., security platform <b>102</b>). In the environment shown in <figref idref="DRAWINGS">FIG. 1</figref>, a &#x201c;digital security bubble&#x201d; (DSB), described in more detail below, encapsulates or is otherwise provided around a message. The DSB allows information such as encryption information, hardware binding information, message security controls, and decryption information&#x2014;for multiple recipients&#x2014;to securely travel with the message. Further, the DSB provides cross-platform support. For example, techniques described herein can be deployed on a variety of operating systems (e.g., Linux, iOS, and Windows), on a variety of smart phone platforms (e.g., iPhone, Android, Windows, Blackberry, etc.), and on a variety of device types (e.g., mobile smart phones, tablets, laptops, desktops, etc.). Using techniques described herein, only intended accounts on intended devices are able to decrypt the messages. Thus, for example, the security platform is unable to decrypt messages.</p>
<p id="p-0020" num="0019">Users of client devices, such as client devices <b>106</b>-<b>114</b> communicate securely with one another using techniques described herein. As shown in <figref idref="DRAWINGS">FIG. 1</figref>, client devices include personal computers (<b>110</b>), laptop computers (<b>108</b>), tablets (<b>106</b>), and mobile telephony devices (<b>112</b>, <b>114</b>). Some client devices, e.g., tablet device <b>106</b>, make use of techniques described herein via a messaging application (also referred to as an &#x201c;app&#x201d;) obtained from a software distribution server <b>106</b>. Examples of software distribution servers (which can comprise a single server or multiple servers working in cooperation) include app stores (e.g., provided by Apple, Google, Blackberry, Microsoft, and Blackberry) and other webservers offering app downloads. Client devices can also make use of a web interface (e.g., provided by platform <b>102</b>) instead of or in addition to a dedicated messaging application. Other types of devices not depicted in <figref idref="DRAWINGS">FIG. 1</figref> can also be used in conjunction with the techniques describe herein, such as game consoles, video players (e.g., incorporating DVD, Blu-ray, Red Laser, Optical, and/or streaming technologies) and other network-connected appliances, as applicable.</p>
<p id="p-0021" num="0020">Communications are exchanged via one or more networks (depicted collectively in <figref idref="DRAWINGS">FIG. 1</figref> as network cloud <b>104</b>). Such networks can include wired, wireless, cellular, and satellite networks. And, such networks can be closed/private networks, as well open networks (e.g., the Internet). Further, as used herein, &#x201c;communications&#x201d; and &#x201c;messages&#x201d; can take a variety of forms, including: text messages, documents, audiovisual files, SMSes, voice and video calls. Further, the content can pertain to electronic transactions such as credit card security, password protection, directories, and storage drive protection, video on demand security, online gaming, gambling, electronic distribution of music, videos, documents, online learning systems, databases, cloud storage and cloud environments, bank transactions, voting processes, military communications, security of medical records, communication between medically implanted devices and doctors, etc. As will be described in more detail below, the exchange of communications is facilitated by security platform <b>102</b>.</p>
<p id="p-0022" num="0021">A. Installation/Initialization/Registration</p>
<p id="p-0023" num="0022">Suppose a user of client device <b>106</b> (hereinafter referred to as &#x201c;Alice&#x201d;) would like to send a secure message to her friend, Bob (a user of client device <b>114</b>) in accordance with techniques described herein. In some embodiments, in order to send a message Bob, Alice first obtains a copy of a messaging application suitable for her device. For example, if Alice's tablet device runs iOS, she could obtain an &#x201c;app&#x201d; for her tablet from the Apple App Store (an example of software distribution server <b>106</b>). Bob similarly obtains an appropriate application suitable for his client device <b>114</b> (e.g., an Android-based smartphone) from an appropriate location (e.g., the Google Play store). In some embodiments, client devices make use of a web-based application (e.g., made available by platform <b>102</b> through interface <b>118</b>), instead of, or in addition to, a dedicated installed application.</p>
<p id="p-0024" num="0023">Once Alice's tablet <b>106</b> has obtained a copy of the messaging app, the app is installed, and Alice is able to register for an account. An instance of a messaging app usable in conjunction with the techniques described herein is depicted in <figref idref="DRAWINGS">FIG. 1</figref> as app <b>116</b> (installed on device <b>106</b>). Examples of events that can occur during an installation/initialization/registration process (<b>200</b>) are illustrated in <figref idref="DRAWINGS">FIG. 2</figref> and will now be described.</p>
<p id="p-0025" num="0024">In some embodiments, process <b>200</b> is performed on a client device, such as Alice's client device <b>106</b>. The process begins at <b>202</b> when a public/private keypair for the application is generated, on client device <b>106</b> (e.g., using RSA, ECDH, or any other asymmetric encryption algorithms). As one example, the keypair can be generated using Eliptic Curve Algorithm with Diffie Helman Key Exchange (ECDH). Other cryptographic standards can also be used, such as RSA. At <b>204</b>, a &#x201c;random server seed&#x201d; is generated, and at <b>206</b>, a &#x201c;random local seed&#x201d; is generated. The seeds are used in conjunction with cryptographic key generation, and in some embodiments, the seeds are determined based on captured hardware information (described in more detail below).</p>
<p id="p-0026" num="0025">At <b>208</b>, a device identifier (&#x201c;deviceID&#x201d;) is created from captured hardware information. Examples of captured hardware information include: hard drive identifiers, motherboard identifiers, CPU identifiers, and MAC addresses for wireless, LAN, Bluetooth, and optical cards. Combinations of information pertaining to device characteristics, such as RAM, CACHE, controller cards, etc., can also be used to uniquely identify the device. Some, or all, of the captured hardware information is run through a cryptographic hash algorithm such as SHA-256, to create a unique deviceID for the device. The captured hardware information can also be used for other purposes, such as to seed cryptographic functions.</p>
<p id="p-0027" num="0026">At <b>210</b>, Alice is asked, via an interface provided by app <b>116</b>, to supply a desired username. Alice enters &#x201c;Alice&#x201d; into the interface. A determination is made as to whether the username is available. As one example, app <b>116</b> can supply a cryptographic hash of &#x201c;Alice&#x201d; to platform <b>102</b> for checking. If platform <b>102</b> does not already have a record for that hash, the username &#x201c;Alice&#x201d; is available for Alice to use. If platform <b>102</b> already has a record of that hash, Alice is instructed by the interface to pick an alternate username. Once Alice has selected an available username, she is asked to supply a password.</p>
<p id="p-0028" num="0027">At <b>212</b>, an application identifier (&#x201c;appID&#x201d;) is created. The appID is a unique identifier for the particular installation of the messaging app. If Alice installs the messaging app on multiple devices, each of her devices will have its own unique appID. (And, each of her devices will also have its own unique deviceID.) In some embodiments, the appID is created by hashing Alice's selected password and other information such as device information.</p>
<p id="p-0029" num="0028">Finally, at <b>214</b> Alice's public key, deviceID, and appID are sent to platform <b>102</b> in a secure manner. As one example, in some embodiments app <b>116</b> is configured to communicate with platform <b>102</b> via TLS. At the conclusion of process <b>200</b>, Alice is ready to send and receive secure communications, described in Sections C and E below, respectively.</p>
<p id="p-0030" num="0029">B. Security Platform</p>
<p id="p-0031" num="0030">As mentioned above, security platform <b>102</b> is configured to facilitate the exchange of communications (e.g., among any/all of client devices <b>106</b>-<b>114</b>). Additional detail regarding various aspects of platform <b>102</b> will now be provided.</p>
<p id="p-0032" num="0031">Security platform <b>102</b> includes one or more interface(s) <b>118</b> for communicating with client devices, such as client devices <b>106</b>-<b>114</b>. As one example, platform <b>102</b> provides an application programming interface (API) configured to communicate with apps installed on client devices, such as app <b>116</b> and app <b>138</b>. Platform <b>102</b> can also provide other types of interfaces, such as a web interface, or stand alone software programs for desktops and laptops, running on various Operating Systems (OS). The web interface can allow users of client devices such as client devices <b>108</b> and <b>110</b> to exchange messages securely (whether with one another or other users), without the need for a separately installed messaging application. The stand alone software program allows users to exchange secure messages via software that is downloaded by each user.</p>
<p id="p-0033" num="0032">Security platform also includes a database <b>120</b>. Included in database <b>120</b> is a record for each user of platform <b>102</b>. Each record has associated with it information such as the user's public key, deviceID(s), appID(s), and messages. As shown in <figref idref="DRAWINGS">FIG. 1</figref>, database <b>120</b> is relational and stores information in a variety of tables, including a table of hashed usernames (<b>124</b>), a table of public keys (<b>126</b>), a table of deviceIDs (<b>128</b>), a table of appIDs (<b>130</b>), and a table of messages (<b>132</b>). Other techniques can also be used to store the information used by platform <b>102</b>. For example, messages can be stored in a separate storage <b>136</b> instead of being stored within database <b>120</b>.</p>
<p id="p-0034" num="0033">Finally, security platform <b>102</b> includes a processing engine <b>134</b> which performs a variety of tasks, including interacting with database <b>120</b> on behalf of interface(s) <b>118</b>. The embodiment of platform <b>102</b> depicted in <figref idref="DRAWINGS">FIG. 1</figref> comprises standard commercially available server hardware (e.g., having a multi-core processor(s), 8G+ of RAM, gigabit network interface adaptor(s), and hard drive(s)) running a typical server-class operating system (e.g., Linux). In various embodiments, platform <b>102</b> is implemented across a scalable infrastructure comprising multiple such servers, solid state drives, and/or other applicable high-performance hardware.</p>
<p id="p-0035" num="0034">Whenever platform <b>102</b> is described as performing a task, either a single component or a subset of components or all components of platform <b>102</b> may cooperate to perform the task. Similarly, whenever a component of platform <b>102</b> is described as performing a task, a subcomponent may perform the task and/or the component may perform the task in conjunction with other components.</p>
<p id="p-0036" num="0035">C. Sending DSB Secured Messages</p>
<p id="p-0037" num="0036">Returning back to Alice's desire to send a message to Bob: at the conclusion of Section A above, Alice has successfully registered her username (&#x201c;Alice&#x201d;) with security platform <b>102</b>. And, Bob is also a user of platform <b>102</b>. Suppose Alice would like to send a message to Bob. She loads app <b>116</b> and is presented with an interface that includes a &#x201c;compose&#x201d; option. Alice selects the compose option and is presented with a message composition interface.</p>
<p id="p-0038" num="0037">An example message composition interface is shown in <figref idref="DRAWINGS">FIG. 3</figref>. In particular, <figref idref="DRAWINGS">FIG. 3</figref> depicts interface <b>300</b> as rendered on an example tablet device <b>106</b>, connected to the Internet via an appropriate connection, such as: 3G, 4G or higher cellular connection, WiFi, Satellite, wireless or wired LANs, Bluetooth, etc. Tablet device <b>106</b> includes a touchscreen. An on-screen keyboard is provided for Alice in region <b>306</b>. Alice can enter the usernames of one or more recipients in region <b>302</b>. She can enter message text in region <b>304</b>. Alice can optionally add attachments by interacting with buttons shown in region <b>308</b>. Examples of attachments include, but are not limited to: documents, pictures, and audiovisual clips. By selecting button <b>310</b>, Alice can specify various message control options, such as: the lifetime/expiration of the message; on which device(s) it can be unencrypted/read; and sharing, saving, forwarding, recalling, and deleting options.</p>
<p id="p-0039" num="0038">If Alice is satisfied with her message, she can send it to Bob by clicking the send button (<b>314</b>). If she wishes to cancel out of composing the message, she can click the cancel button (<b>312</b>). Suppose Alice clicks send button (<b>314</b>) after composing the message shown in interface <b>300</b>. An example of the events that occur, in some embodiments, in conjunction with Alice sending a message is illustrated as process <b>400</b> in <figref idref="DRAWINGS">FIG. 4</figref> and will now be described.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 4</figref> illustrates an example of a process for sending a DSB-secured message. In some embodiments, process <b>400</b> is performed on a client device, such as Alice's client device <b>106</b>. The process begins at <b>402</b> when the public key, deviceID, and appID of a recipient are obtained from platform <b>102</b>. As will be explained in more detail below, the recipient's public key, deviceID and appID are used in the encryption of the symmetric key used to encrypt data, and in the DSB encapsulation of the message for the hardware/appID binding of the message. As one example, app <b>116</b> can request the information from platform <b>102</b> via an API (e.g., interface <b>118</b>). In some embodiments, the information is retrieved when Alice enters the recipient's name into region <b>302</b>. In other embodiments, the information is retrieved when Alice clicks send button <b>314</b>, or at any other appropriate time (e.g., while she is composing a message). In the example shown in <figref idref="DRAWINGS">FIG. 3</figref>, Alice is only sending a message to Bob. If she also desires to send the message to other recipients, she can enter their names in region <b>302</b> as well, and their respective public keys, deviceIDs, and appIDs will also be retrieved at <b>402</b>.</p>
<p id="p-0041" num="0040">At <b>404</b>, a random symmetric encryption key is generated (e.g., by app <b>116</b> on device <b>106</b>). As one example, the symmetric key is an AES 256 bit key. At <b>406</b>, the symmetric encryption key is used to encrypt the message body, any attachments, and any message control options. In some embodiments, Alice's own information (e.g., her public key, deviceID(s), and appID(s) are included in the DSB as well. Finally, at <b>408</b>, the symmetric key is encrypted with the public key of each recipient. A DSB encapsulation is then generated, and contains the aforementioned components. Examples of the DSB format are provided in Section D below.</p>
<p id="p-0042" num="0041">In some cases, a user may own multiple devices. For example, Bob may be the owner of device <b>114</b> and <b>112</b>, both of which are configured with secure messaging apps. Each of Bob's installations will have its own deviceID and appID. When the DSB is created, each of Bob's devices will be considered a separate device under the same username account.</p>
<p id="p-0043" num="0042">The generated DSB is securely transmitted to platform <b>102</b> (e.g., by being encrypted with a symmetric key shared by the app and platform <b>102</b>, and also encapsulated by TLS as an additional security layer). Irrespective of how many recipients Alice designates for her message (and, e.g., how many recipients there are or how many devices Bob has), only one DSB will be created and transmitted to platform <b>102</b>. Upon receipt of the DSB, processing engine <b>134</b> opens the DSB and determines the recipients of the message. Specifically, the processing engine <b>134</b> performs a match against the deviceIDs (in a cryptographic hash and camouflaged representation) included in the DSB and the deviceIDs stored in database <b>120</b> as well as the username (in a cryptographic hash and camouflaged representation) in the DSB and the ones stored in the database <b>120</b>. A cryptographic hash and camouflaged representation means that the hash algorithm (i.e. SHA256) that is used for the deviceID, username, and appID values, is further camouflaged, in some embodiments, by taking multiple hashes of the result values (i.e. multiple rounds of SHA256 of the previous SHA256 value&#x2014;i.e. SHA (SHA (SHA (SHA . . . ))). Processing engine <b>134</b> also creates an entry for the received DSB in message table <b>132</b> and notifies the recipient(s) that a new message is available. In various embodiments, other actions are also performed by platform <b>102</b> with respect to the DSB. As one example, platform <b>102</b> can be configured to remove the DSB as soon as the recipient successfully downloads it. As another example, platform <b>102</b> can enforce an expiration time (e.g., seven days) by which, if the DSB has not been accessed by the recipient, the DSB is deleted. Where multiple recipients are included in a DSB, platform <b>102</b> can be configured to keep track of which recipients have downloaded a copy of the DSB, and remove it once all recipients have successfully downloaded it (or an expiration event has occurred).</p>
<p id="p-0044" num="0043">D. DSB Examples</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an example of a digital security bubble (DSB). DSB <b>500</b> is an example of output that can be generated by app <b>116</b> as a result of executing process <b>400</b>. In the example shown, DSB <b>500</b> includes a message and optional attachments (<b>502</b>), and one or more message controls (<b>504</b>) encrypted with a key Ek<sub>1</sub>,<sub>1 </sub>(encrypted portion <b>506</b>). In some embodiments, key Ek<sub>1</sub>,<sub>1 </sub>is generated by app <b>116</b> at portion <b>404</b> of process <b>400</b>. Additional detail regarding portion <b>506</b> is shown in <figref idref="DRAWINGS">FIG. 7</figref>, where SSK in <figref idref="DRAWINGS">FIG. 7</figref> is Ek<sub>1</sub>,<sub>1 </sub>of <figref idref="DRAWINGS">FIG. 5</figref> and represents the sender's symmetric shared key used to encrypt the message and attachments.</p>
<p id="p-0046" num="0045">DSB <b>500</b> also includes, for each message recipient 1-n, the key Ek<sub>1</sub>,<sub>1 </sub>encrypted by each of the recipient's respective public keys (as shown in region <b>508</b>). Further, DSB <b>500</b> includes a combination of each recipient's respective deviceID, hashed username, and appID (collectively denoted HWk<sub>1-n</sub>) in region <b>510</b>. These constituent parts are also referred to herein as &#x201c;parameters.&#x201d; Additional detail regarding the parameters is shown in FIG. <b>9</b>&#x2014;namely, a plurality of parameters (such as hashed username, deviceID, and appID) are encrypted using SK<b>2</b>, which is a symmetric key generated by the client and shared with platform <b>102</b>.</p>
<p id="p-0047" num="0046">In some embodiments (e.g., as is shown in <figref idref="DRAWINGS">FIG. 5</figref>), a spreading function is used to spread the encrypted symmetric keys inside the DSB (as shown in region <b>512</b>), by spreading the bits of the encrypted key in a spreading function generated pattern, with the default function being a sequential block or data. The spreading function also contains the cryptographic hashed representation of the recipient usernames that are used by the server to identify the recipients of the message and to set the message waiting flag for each of them. Finally, the DSB is itself encrypted using key Ek<sub>1</sub>,<sub>2 </sub>(encrypted portion <b>514</b>), which is a symmetric key shared between app <b>116</b> and platform <b>102</b>. Additional detail regarding portions <b>514</b> and <b>508</b> are shown in <figref idref="DRAWINGS">FIG. 8</figref>, where SK<b>1</b> in <figref idref="DRAWINGS">FIG. 8</figref> is Ek<sub>1</sub>,<sub>2 </sub>in <figref idref="DRAWINGS">FIG. 5</figref> and represents the symmetric encryption key shared by the app and platform <b>102</b>, and where User<sub>1</sub>Pubkey in <figref idref="DRAWINGS">FIG. 8</figref> is Ek<sub>2</sub>,<sub>1 </sub>in <figref idref="DRAWINGS">FIG. 5</figref> and represents the recipient's public key (e.g., generated at <b>202</b>).</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIGS. 6-9</figref> illustrate additional examples of the construction of an embodiment of a DSB. <figref idref="DRAWINGS">FIG. 6</figref> illustrates an example of a DSB <b>600</b>. DSB <b>600</b> encapsulates three subcomponents&#x2014;part <b>700</b> (the encrypted message, attachments, and controls), part <b>800</b> (the symmetric key encrypted with each recipient's public key), and part <b>900</b> (encrypted message parameters). As with DSB <b>500</b>, a symmetric key (shared by app <b>116</b> and platform <b>102</b>) is used to secure the DSB. In addition, the transmission of the DSB to the server is encapsulated with TLS for an additional security layer. <figref idref="DRAWINGS">FIG. 7</figref> illustrates part <b>700</b> of DSB <b>600</b>. In particular, part <b>700</b> includes the message controls (<b>702</b>), message (<b>704</b>), and attachments (<b>706</b>). Part <b>700</b> is encrypted using a shared symmetric key SSK (e.g., Ek<sub>1</sub>,<sub>1</sub>). <figref idref="DRAWINGS">FIG. 8</figref> illustrates part <b>800</b> of DSB <b>600</b>. In particular, part <b>800</b> includes the shared symmetric key, encrypted to each of the recipients' respective public keys. Further, the collection of encrypted keys (<b>802</b>-<b>806</b>) is encrypted using symmetric key SK<b>1</b>. <figref idref="DRAWINGS">FIG. 9</figref> illustrates part <b>900</b> of DSB <b>600</b>. In particular, part <b>900</b> includes encrypted message parameters. Part <b>900</b> is encrypted using symmetric key SK<b>2</b>.</p>
<p id="p-0049" num="0048">E. Receiving DSB Secured Messages</p>
<p id="p-0050" num="0049">As mentioned above, Bob is also a user of platform <b>102</b>. When Bob loads his copy of the messaging app on his smartphone (i.e., app <b>138</b> on device <b>114</b>), the app communicates with platform <b>102</b> (e.g., via interface <b>118</b>) to determine whether Bob has any new messages. Since Alice has sent a message to Bob since he last used app <b>138</b>, a flag is set in database <b>120</b>, indicating to app <b>138</b> that one or messages are available for download.</p>
<p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. 10</figref> illustrates an example of a process for accessing a message included inside a digital security bubble. In some embodiments, process <b>1000</b> is performed on a client device, such as Bob's client device <b>114</b>. The process begins at <b>1002</b> when a DSB is received. As one example, a DSB is received at <b>1002</b> when app <b>138</b> contacts platform <b>102</b>, determines a flag associated with Bob's account has been set, and downloads the DSB from platform <b>102</b>. In such circumstances, upon receipt of the DSB, client <b>114</b> is configured to decrypt the DSB using Bob's private key (e.g., generated by Bob at <b>202</b> in process <b>200</b>).</p>
<p id="p-0052" num="0051">At <b>1004</b> (i.e., assuming the decryption was successful), hardware binding parameters are checked. As one example, a determination is made as to whether device information (i.e., collected from device <b>114</b>) can be used to construct an identical hash to the one included in the received DSB. If the hardware binding parameters fail the check (i.e., an attempt is being made to access Alice's message using Bob's keys on a device that is not Bob's), contents of the DSB will be inaccessible, preventing the decryption of Alice's message. If the hardware binding parameter check is successful, the device is authorized to decrypt the symmetric key (i.e., using Bob's private key generated at <b>202</b>) which can in turn be used to decrypt Alice's message.</p>
<p id="p-0053" num="0052">F. Discouraging Screen Capture</p>
<p id="p-0054" num="0053">As explained above, in addition to text messages (e.g., shown in region <b>304</b> of <figref idref="DRAWINGS">FIG. 3</figref>), users can compose messages that include a variety of multi-media attachments (e.g., by interacting with region <b>308</b> of <figref idref="DRAWINGS">FIG. 3</figref>). Returning to the example of <figref idref="DRAWINGS">FIG. 3</figref>, suppose Alice attached a picture of her dog, Fido, to the message prior to sending to Bob. As explained above, and as illustrated in <figref idref="DRAWINGS">FIGS. 5 and 7</figref>, attachments to her message (i.e., the dog photograph) will also be encrypted, and can only be decrypted by intended recipients.</p>
<p id="p-0055" num="0054">Some devices, such as tablet device <b>106</b> and phone <b>114</b> provide native support for users of those devices to capture their screens. As one example, a user of an iOS device can capture what is being displayed on the device by holding down the menu button and, while the button is being held, also pressing the power/lock button. Alice may wish for Bob to be able to view her dog photograph for a limited time, and then have it no longer available to him. Unfortunately, if Bob uses the built-in screen capture feature of his phone while viewing Alice's picture, he'll be able to save a copy for later viewing.</p>
<p id="p-0056" num="0055">In some embodiments, messaging app <b>138</b> is configured to help mitigate screen capture attempts by users. An example of the process is shown in <figref idref="DRAWINGS">FIG. 12</figref>. In some embodiments, process <b>1200</b> is performed on a client device, such as Bob's client device <b>114</b>. The process begins at <b>1202</b> when x,y coordinates of one or more fingers are detected in an appropriate region. As one example, portion <b>1104</b> of interface <b>1100</b> includes a message to Bob, asking him to place his finger on icon <b>1104</b> in order to view Alice's dog picture. When Bob does so, the x,y coordinates of his finger will be detected (at <b>1202</b>).</p>
<p id="p-0057" num="0056">The x,y coordinates are checked every time they change (for example, when the finger touching the icon moves). If the move is more than a few pixels (e.g., more than 10 pixels), this can be indicative of a user attempting to manipulate the device and take a screen shot while also holding down icon <b>1104</b>. The attachment preview will accordingly end (at <b>1204</b>) if the change in finger position is too great, minimizing the possibility of a receiver taking unauthorized screen shots of attachments received in a secure message. Once an attachment preview has ended in this manner, in some embodiments, the user can view the attachment again (so long as it has not expired) by placing and holding a finger steady in region <b>1104</b>.</p>
<p id="p-0058" num="0057">In some embodiments, the number of pixels by which a finger may move without being considered an attempted screen capture is adjustable by the sender. For example, a sender can allow for more pixels (less sensitive) or fewer pixels (more sensitive) depending on the desired sensitivity. The number of pixels can also be determined by the application (e.g., based on the native resolution of the device, or other characteristics of the device, etc.).</p>
<p id="p-0059" num="0058">In some embodiments, multiple screen areas or screen figures are required to be touched. This forces the user to hold more than one finger to tap and hold an area or areas, making it even more difficult to attempt to take a screen shot with the device.</p>
<p id="p-0060" num="0059">Although the foregoing embodiments have been described in some detail for purposes of clarity of understanding, the invention is not limited to the details provided. There are many alternative ways of implementing the invention. The disclosed embodiments are illustrative and not restrictive.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A system, comprising:
<claim-text>a processor configured to:
<claim-text>request a public key and a device identifier of at least one recipient from a first server;</claim-text>
<claim-text>encrypt a message containing one or more components using a symmetric key;</claim-text>
<claim-text>encrypt the symmetric key with a public key received in response to the request;</claim-text>
<claim-text>encapsulate the encrypted message, the encrypted symmetric key, and the device identifier in a digital security bubble encapsulation; and</claim-text>
<claim-text>transmit the digital security bubble encapsulation to a second server; and</claim-text>
</claim-text>
<claim-text>a memory coupled to the processor and configured to provide the processor with instructions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the first and second server are the same.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the processor is further configured to request an is application identifier of the recipient from the first server.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein at least one component included in the message is a message parameter.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The system of <claim-ref idref="CLM-00004">claim 4</claim-ref> wherein the message parameter comprises expiration information.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the processor is further configured to generate the symmetric key.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the device identifier is based at least in part on a hard drive identifier.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the device identifier is based at least in part on a motherboard identifier.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the device identifier is based at least in part on a central processing unit identifier.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the device identifier is based at least in part on a media access control address.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the device identifier is based at least in part on a plurality of identifiers associated with a plurality of hardware components.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the processor is configured to request a plurality of keys and a plurality of device identifiers associated with a plurality of recipients from the server.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein the symmetric key is respectively encrypted with each of the received public keys, resulting in a plurality of encrypted symmetric keys.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The system of <claim-ref idref="CLM-00013">claim 13</claim-ref> wherein each of the plurality of encrypted symmetric keys is included in a single digital security bubble encapsulation.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the processor is configured to perform the encapsulation at least in part by performing a spreading function.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein only a designated recipient, having a device with applicable device characteristics, is able to decrypt the message.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. A method, comprising:
<claim-text>requesting a public key and a device identifier of at least one recipient from a first server;</claim-text>
<claim-text>encrypting a message containing one or more components using a symmetric key;</claim-text>
<claim-text>encrypting the symmetric key with a public key received in response to the request;</claim-text>
<claim-text>encapsulating the encrypted message, the encrypted symmetric key, and the device identifier in a digital security bubble encapsulation; and</claim-text>
<claim-text>transmitting the digital security bubble encapsulation to a second server.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref> further comprising requesting an application identifier of the recipient from the first server.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref> further comprising generating the symmetric key.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. A computer program product embodied in a tangible computer readable storage medium and comprising computer instructions for:
<claim-text>requesting a public key and a device identifier of at least one recipient from a first server;</claim-text>
<claim-text>encrypting a message containing one or more components using a symmetric key;</claim-text>
<claim-text>encrypting the symmetric key with a public key received in response to the request;</claim-text>
<claim-text>encapsulating the encrypted message, the encrypted symmetric key, and the device identifier in a digital security bubble encapsulation; and</claim-text>
<claim-text>transmitting the digital security bubble encapsulation to a second server. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
