<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626540-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626540</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>11136045</doc-number>
<date>20050523</date>
</document-id>
</application-reference>
<us-application-series-code>11</us-application-series-code>
<us-term-of-grant>
<us-term-extension>1880</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20120101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>Q</subclass>
<main-group>10</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>705  711</main-classification>
<further-classification>705  712</further-classification>
</classification-national>
<invention-title id="d2e53">Method and apparatus for transportation planning based on mission-specific vehicle capacity constraints</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5265006</doc-number>
<kind>A</kind>
<name>Asthana et al.</name>
<date>19931100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705  726</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5623413</doc-number>
<kind>A</kind>
<name>Matheson et al.</name>
<date>19970400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5758329</doc-number>
<kind>A</kind>
<name>Wojcik et al.</name>
<date>19980500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>705 28</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5886331</doc-number>
<kind>A</kind>
<name>Lyons, Jr.</name>
<date>19990300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6212190</doc-number>
<kind>B1</kind>
<name>Mulligan</name>
<date>20010400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370400</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6219653</doc-number>
<kind>B1</kind>
<name>O'Neill et al.</name>
<date>20010400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6526341</doc-number>
<kind>B1</kind>
<name>Bird et al.</name>
<date>20030200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6571197</doc-number>
<kind>B1</kind>
<name>Frank et al.</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>702175</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6937992</doc-number>
<kind>B1</kind>
<name>Benda et al.</name>
<date>20050800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705  726</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>7243074</doc-number>
<kind>B1</kind>
<name>Pennisi, Jr.</name>
<date>20070700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>7313530</doc-number>
<kind>B2</kind>
<name>Smith</name>
<date>20071200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>7363126</doc-number>
<kind>B1</kind>
<name>Zhong et al.</name>
<date>20080400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>701 25</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2002/0019759</doc-number>
<kind>A1</kind>
<name>Arunapuram et al.</name>
<date>20020200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705  7</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2002/0082893</doc-number>
<kind>A1</kind>
<name>Barts et al.</name>
<date>20020600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705  8</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2002/0156663</doc-number>
<kind>A1</kind>
<name>Weber et al.</name>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705  7</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2003/0023465</doc-number>
<kind>A1</kind>
<name>Smith et al.</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705  7</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2004/0015409</doc-number>
<kind>A1</kind>
<name>Chittenden et al.</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705 26</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2004/0054554</doc-number>
<kind>A1</kind>
<name>Barts et al.</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2004/0107110</doc-number>
<kind>A1</kind>
<name>Gottlieb et al.</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>705  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2005/0040082</doc-number>
<kind>A1</kind>
<name>Ogawa et al.</name>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>209  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2005/0209913</doc-number>
<kind>A1</kind>
<name>Wied et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705 12</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>2005/0246192</doc-number>
<kind>A1</kind>
<name>Jauffred et al.</name>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>WO</country>
<doc-number>WO 00/68856</doc-number>
<date>20001100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>WO</country>
<doc-number>WO 00/68859</doc-number>
<date>20001100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00025">
<othercit>&#x201c;Capacity-based cost modeling for light rail and bus rapid transit system&#x201d;, by Hsu Rosa, Florida International University, Mar. 28, 2005.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00026">
<othercit>&#x201c;Distribution Strategies that Minimize Transportation and Inventory Costs&#x201d;, by Lawrence Burns et al., General Motors Research Laboratories, Warren, Michigan, 1984.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00027">
<othercit>&#x201c;Cross-docking network design&#x201d;, by Mei Zhang, Ph.D., Georgia Institute of Technology, 1997.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00028">
<othercit>&#x201c;SAP Transportation Management Solution&#x201d;, White Paper, SAP AG, 2000.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00029">
<othercit>&#x201c;Cross-Docking and its Implications in Location-Distribution System&#x201d;, by Mehmet Gumus et al., Journal of Business Logistics, vol. 25, No. 2, 2004.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00030">
<othercit>&#x201c;A Methodology for Delivery Operations Planning&#x201d;, by Hsien-Ming Chiu, University of Maryland, College Park, 1990; ProQuest Dissertations &#x26; Theses.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00031">
<othercit>&#x201c;Transportation (LE-TRA)&#x201d;, Release 4.6C, SAP AG, 2001.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00032">
<othercit>&#x201c;The Multiple-depot, Multiple-tour, Multiple-stop delivery problem&#x201d;, Peter Kroll, The Johns Hopkins University, 1988; ProQuest Dissertations and Theses.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00033">
<othercit>&#x201c;Multi-Objective Simultaneous Stowage and Load Planning for a Container Ship with Container rehandle in Yard Stacks&#x201d;, by Akio lmai et al., Faculty of Maritime Science, Kobe University, Fukae, Higashinada, Japen, Oct. 2004.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00034">
<othercit>Oracle Corporation, Data Sheet&#x2014;Oracle Transportation Planning, Sep. 2004, pp. 1-6.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00035">
<othercit>Peterkofsky, R. &#x201c;Introducing Transportation Planning: A New Solution for You&#x201d;, Slide presentation, Dec. 8, 2004, pp. 34.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00036">
<othercit>Bill Schineller, &#x201c;Joe's Juggling Act&#x201d;, OR/MS Today, Dec. 1998, pp. 1-8.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00037">
<othercit>U.S. Appl. No. 11/136,167, filed May 23, 2005 by Javier Nicolas Sanchez et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00038">
<othercit>Non-Final Rejection dated Sep. 22, 2009 in U.S. Appl. No. 11/136,167.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00039">
<othercit>Amendment dated Jan. 22, 2010 in U.S. Appl. No. 11/136,167.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00040">
<othercit>Final Rejection dated Apr. 22, 2010 in U.S. Appl. No. 11/136,167.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00041">
<othercit>Notice of Allowance dated Jun. 24, 2010 in U.S. Appl. No. 11/136,167.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00042">
<othercit>Applicant's Summary Interview with Examiner Jun. 16, 2010 in U.S. Appl. No. 11/136,167.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00043">
<othercit>Frizzell, P.W. et al. &#x201c;The Split Delivery Vehicle Scheduling Problem with Time Windows and Grid Network Distances&#x201d;, Computers OPS Res. vol. 22, No. 6, 1995 Elsevier Science Ltd., pp. 655-667.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00044">
<othercit>Thompson, P. et al. &#x201c;Cyclic Algorithms for Multivehicle Routing and Scheduling Problems&#x201d;. Operations Research, vol. 41, No. 5, 1993 INFORMS, retrieved from http://jstor.org/stable/171656, pp. 935-946.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00045">
<othercit>Grunert, T. et al. &#x201c;Planning Models for Long-Hault Operations of Postal and Express Shipment Companies&#x201d;, European Journal of Operational Research 122, 2000 Elsevier Science Ltd., pp. 289-309.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00046">
<othercit>Peeta, S. et al. Multiple User Classes Real-Time Traffic Assignment for Online Operations: A Rolling Horizon Solution Framework, Transpn. Res. C., vol. 3, No. 2, 1995 Elsevier Science Ltd., pp. 83-98.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00047">
<othercit>M2 Presswire, MANUGISTICS: Manugistics extends industry's most comprehensive transportation management solution, M2 Communications Ltd., Dec. 17, 1997, pp. 2.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00048">
<othercit>U.S. Appl. No. 11/136,167, filed May 23, 2005.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>705  711</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>705  712</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>9</number-of-drawing-sheets>
<number-of-figures>18</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20060265234</doc-number>
<kind>A1</kind>
<date>20061123</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Peterkofsky</last-name>
<first-name>Roy I.</first-name>
<address>
<city>San Francisco</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Budaraju</last-name>
<first-name>Hema</first-name>
<address>
<city>Fremont</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Yang</last-name>
<first-name>Mei</first-name>
<address>
<city>Albany</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Sun</last-name>
<first-name>Rongming</first-name>
<address>
<city>Hayward</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Peterkofsky</last-name>
<first-name>Roy I.</first-name>
<address>
<city>San Francisco</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Budaraju</last-name>
<first-name>Hema</first-name>
<address>
<city>Fremont</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Yang</last-name>
<first-name>Mei</first-name>
<address>
<city>Albany</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Sun</last-name>
<first-name>Rongming</first-name>
<address>
<city>Hayward</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Silicon Valley Patent Group LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>Suryadevara</last-name>
<first-name>Omkar</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Oracle International Corporation</orgname>
<role>02</role>
<address>
<city>Redwood Shores</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Jarrett</last-name>
<first-name>Scott L</first-name>
<department>3624</department>
</primary-examiner>
<assistant-examiner>
<last-name>Choy</last-name>
<first-name>Pan</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A computer, for planning moves of freight using vehicles, determines one or more attributes of a mission, based on a group of shipments being consolidated into the mission, computes a total amount of freight to be moved, and decides on feasibility of performing the mission, using a vehicle of a given type based at least on each of (A) the amount of freight, (B) one or more attributes of the mission, and (C) multiple effective capacities of freight moveable by the type of vehicle being selected, which depend on the mission attribute(s). Multiple effective capacities for each vehicle type, and corresponding values of mission attribute(s) at which they are to be applied are stored in the computer ahead of time, based on industry experience. Examples of mission attribute(s) include (1) number of stops, (2) type of stops (whether pooling or not), and (3) a combination thereof.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="97.87mm" wi="148.34mm" file="US08626540-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="191.01mm" wi="144.27mm" file="US08626540-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="247.40mm" wi="174.16mm" file="US08626540-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="230.12mm" wi="166.88mm" file="US08626540-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="203.88mm" wi="181.53mm" file="US08626540-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="254.34mm" wi="183.39mm" file="US08626540-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="247.06mm" wi="186.61mm" file="US08626540-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="231.31mm" wi="144.95mm" file="US08626540-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="230.04mm" wi="157.06mm" file="US08626540-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="248.16mm" wi="168.40mm" orientation="landscape" file="US08626540-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">Transportation planning by a shipper (who owns and/or controls freight) involves determining publicly-available means of moving the freight (also called cargo) from its origin to its destination through a number of strategies, such as consolidation of shipments, continuous moves of vehicles, as well as selection of carriers and modes (air, ground, sea). Reduction of cost is typically the predominant objective of a shipper in selecting specific means of transportation, although other business and service objectives may also be important considerations. Shipments (also known as transportation orders, shipment orders, delivery orders, or simply orders) are movements of freight and constitute the basic element of transportation planning.</p>
<p id="p-0003" num="0002">Starting with orders for movement of freight (i.e. shipments), one element of transportation planning involves the shipper manually and/or automatically creating groups of shipments that can be moved together in a single vehicle (such as a truck or trailer), in a process known as load building or load consolidation. Specifically, load consolidation involves the shipper combining shipments of small sizes that otherwise would be sent by Less than TruckLoad (LTL) services or parcel (also known as small package) services into larger shipments that can be sent by Truckload services (also called &#x201c;carriers&#x201d;) that operate wheeled vehicles on public highways. If well utilized full truckload shipments can be created, cost savings are achieved since the per unit costs of sending large shipments by Truckload service are usually less expensive than the per unit costs of sending small shipments by LTL or Parcel service. This only holds if the capacity of a truck or trailer is well utilized because the charges for a truckload movement generally vary only with the distance travelled, regardless of the amount of load in the truck. LTL and parcel charges, on the other hand, vary both with the size of the shipment and the distance covered. Truckload services are provided by, for example, J. B. Hunt, Schneider National and Werner Enterprises. LTL services are provided by, for example, Yellow Freight and Roadway Express. Parcel services are provided by, for example, UPS, FedEx and DHL.</p>
<p id="p-0004" num="0003">One of the load consolidation strategies used by human transportation planners either manually or by using transportation planning systems is to group multiple small shipments into a truckload. Specifically, as shown in <figref idref="DRAWINGS">FIG. 1A</figref>, pooling (or hubbing or zone skipping) can involve bringing small shipments together at a consolidation center so that they can continue movement on a truckload service&#x2014;instead of sending them all the way (point-to-point) by less-than-truckload (LTL) or parcel services which are higher priced. As further shown in <figref idref="DRAWINGS">FIG. 1B</figref>, this can also work in the other direction, breaking up a truckload from a single origin at a deconsolidation center for further transportation by LTL or parcel services. Finally, as shown in <figref idref="DRAWINGS">FIG. 1C</figref> a shipper can put both of these together using a truckload line haul between cross-docking (or pooling) facilities, with the remainder of the distance covered by LTL services or parcel services.</p>
<p id="p-0005" num="0004">Another strategy used by a shipper for combining small shipments into truckloads is to have a single truck make multiple pickup and/or dropoff stops. These truckloads are called &#x201c;multi-stop&#x201d; truckloads and entail missions that pick up goods and/or drop them off in more than one location. <figref idref="DRAWINGS">FIG. 1D</figref> illustrates a combined multi-stop and pooling mission, in which a truck makes several pickups and then several dropoffs, one of which is at a deconsolidation center from where several orders continue to final delivery via LTL or parcel services. The cost of the mission is computed by a truckload service (also called &#x201c;carrier&#x201d;) based on the distance traveled by the truck (applied as a per mile charge) as well as limited additional costs, including costs for each extra stop incurred on the route from the origin to the destination.</p>
<p id="p-0006" num="0005">When executing a multi-stop truckload, the truck moves less than fully loaded for some part of its path between the first origin and the last destination, as illustrated in <figref idref="DRAWINGS">FIG. 1E</figref>. In this illustration, a single truck picks up three shipments bound for stops W, X, and Y at origin stop A. At stop B, the truck picks up another shipment traveling to stop W. The truck then proceeds to stop W. The truck drops the shipments from stops A and B that were bound for W at this stop. The truck proceeds with the remaining shipments picked up from A, bound for stops X and Y. At stop C, the truck picks up another shipment bound for stop Z. At stop X, the truck drops off the shipment picked up from A that was bound for X. The truck proceeds with the remaining shipments to stop D, where it picks up another shipment bound for stop Y. At stop Y, the truck drops off the two shipments, one from A and the other from D, which were bound for Y. The truck then proceeds to stop Z where it drops off the shipment picked up from C that was bound for Z.</p>
<p id="p-0007" num="0006">Despite being underutilized in certain portions of a mission, e.g. between stops Y and Z in <figref idref="DRAWINGS">FIG. 1E</figref>, such multi-stop truckloads can provide a shipper with great economies versus LTL/parcel movement&#x2014;the more so as a truck's overall utilization (averaged across the entire path) rises, and as the deviation from a geographically direct route between the first origination and the last destination decreases. Note that some carriers permit interspersing of loading and unloading stops as shown in <figref idref="DRAWINGS">FIG. 1E</figref>; other carriers require that all loading stops occur before the first unloading stop as shown in <figref idref="DRAWINGS">FIG. 1D</figref>.</p>
<p id="p-0008" num="0007">The effective volume available in a truck or trailer is usually less than its physical volume, because shipments are not all of perfect sizes and shapes to fit exactly into the physical volume of the truck or trailer. For example, consider a standard 53&#x2032; long&#xd7;102&#x2033; wide trailer (having a nose height of 110&#x2033; and rear height of 112&#x2033;). Assume that its physical volume is about 4,130 cubic feet. When loading this trailer, it is difficult (if not impossible) to fill it with 4,130 cubic feet of cargo (to &#x201c;square out&#x201d; the trailer). This is due to the irregularly varying sizes and shapes of the pieces of cargo as well as the need to leave room around the cargo to allow it to be inserted into and removed from the vehicle. Realistically, when using prior art transportation planning software to do load consolidation, a human transportation planner may set a single limit on the volume of cargo that can be fit practically in each type of vehicle. For example, the human operator may specify the maximum cargo that can be fit as follows: 2,850 cubic feet in a standard 53&#x2032;&#xd7;102&#x2033; trailer, and 2,300 cubic feet in a standard 48&#x2032;&#xd7;102&#x2033; trailer.</p>
<p id="p-0009" num="0008">Most prior art transportation planning software (known to the present inventors) treats these operator-set limits as hard constraints&#x2014;the prior art software won't build a truckload that exceeds these limits by even 1 cubic foot. In the above-described example, the prior art software may produce one trip and one shipment as follows: (1) a trip for a truckload of 2000 cubic feet which underutilizes the standard 53&#x2032;&#xd7;102&#x2033; trailer and (2) a less-than truckload (LTL) shipment of 851 cubic feet which is expensive. Thus, the prior art software fails to capture savings from combination of orders in trip (1) and shipment (2), even when such savings are large and the risk that 2,851 cubic feet of cargo will actually not fit into the standard 53&#x2032;&#xd7;102&#x2033; trailer (with its 4,130 cubic feet of interior space) is small.</p>
<p id="p-0010" num="0009">All trips are presented to the transportation planner as items in a large transportation plan generated by the prior art software, it is very difficult and time consuming to manually go through the plan and detect such truckload combinations that are economical but that were not produced by the software. In the above described example, a transportation planner would have to manually detect that combining trip (1) and shipment (2) would barely exceed the operator-set limit by only 1 cubic foot.</p>
<p id="p-0011" num="0010">Even assuming a detection feature exists in some prior art software that brings such combinations to the human operator's attention, a typical transportation plan that produces 300 multi-stop trips may have up to 30% of the truckloads (i.e. 90 truckloads) that need to be manually reviewed and reworked. If a human transportation planner spends just 5 minutes working on each truckload, that amounts to 7.5 hours or a full business day! Such amount of time spent in repairing existing truckloads negates the time savings from doing transportation planning automatically in the first place.</p>
<p id="p-0012" num="0011">US Patent Application 2004/0107110 filed by Jens Gottlieb et al., published Jun. 3, 2004, entitled &#x201c;Optimization of transport with multiple vehicles&#x201d; is hereby incorporated by reference herein in its entirety. The reader is requested to review this patent application in detail. Briefly, this patent application describes optimizing a total cost associated with transporting products on a set of vehicles. Orders representing products are assigned to one or more vehicles in the set. The assignment defines a sequence of pickup and delivery activities for the vehicles. One or more orders are deleted from one or more vehicles; at least one order from the deleted orders is inserted into a vehicle; the assignment is changed for at least one vehicle; and a cost is determined for the transportation of the products on the set of vehicles. The steps of deleting one or more orders, inserting at least one order, changing the assignment, and determining a cost, are repeated until an optimal cost has been determined.</p>
<p id="p-0013" num="0012">US Patent Application 2004/0107110 also discusses vehicle limitations that specify restrictions on using a vehicle for transportation. For example, the vehicle can be used on a limited route or schedule. Examples of such vehicles include fixed-trip vehicles, such as trains or ships, that operate on predefined routes according to strict schedules. Alternatively, such vehicles can be large trucks that cannot travel but on certain roads. The vehicle can have driving limits specifying a maximum time, distance, or intermediate stops for a single trip.</p>
<p id="p-0014" num="0013">US Patent Application 2004/0107110 also states that vehicle limitations can further include loading capacities, that is, limitations on the amount of goods that can be loaded into a vehicle. The loading capacities can include weight, volume, or pallet limitations, or any other limitations in arbitrary dimensions and units. The vehicle limitations can also include restrictions on the types of goods the vehicle can transport. Also, a fixed-trip vehicle can have a loading capacity calendar that characterizes the loading capacity as a function of the time. For example, a train or a ship can have different restrictions on the loading capacity at different locations or at different times. Note that this method pertains to one particular variant of the transportation planning problem commonly known as the &#x201c;Fleet Routing Problem&#x201d; or &#x201c;Vehicle Scheduling Problem&#x201d; or &#x201c;Vehicle Routing and Scheduling Problem&#x201d; wherein the transportation orders are to be assigned to a known finite set of vehicles (e.g. 35 trucks owned by a furniture seller).</p>
<p id="p-0015" num="0014">For additional patent prior art, see U.S. Pat. No. 5,758,329 granted to Wojcik et al. on May 26, 1998, and entitled &#x201c;System for Managing Customer Orders and Method of Implementation&#x201d; that is incorporated by reference herein its entirety. In particular FIG. 13 and the related description from the bottom of column 8 to the top of column 10 of this patent refers to different weights of different commodities being able to fit in the same trailer but this is the result of goods of different densities (juice and meat) being constrained by the same volume or &#x201c;cube&#x201d; limitation. A particular volume of meat weighs more than the same volume of juice and hence a greater weight of meat can be accommodated in the trailer, until the maximum limit on truckload volume (cube) is exceeded.</p>
<p id="p-0016" num="0015">See also US Patent Application 2002/0019759 by Arunapuram, Sundararajan et al. published Feb. 14, 2002 and entitled &#x201c;Transportation planning, execution, and freight payments managers and related methods.&#x201d; which is hereby incorporated by reference herein in its entirety.</p>
<p id="p-0017" num="0016">Numerous articles have been written and published on transportation planning. For general background, see an article entitled &#x201c;Joe's Juggling Act,&#x201d; <i>OR/MS Today</i>, December 1998.</p>
<heading id="h-0002" level="1">SUMMARY</heading>
<p id="p-0018" num="0017">A computer is programmed in accordance with the invention to selectively use, in creating a mission to move freight, one of a number of capacities of a vehicle (of a given type) that are different for different values of one or more attribute(s) of the mission. A mission's attribute(s) can be, for example, the number and type of stops the vehicle makes. The computer's use of a vehicle capacity constraint that is mission specific in accordance with the invention is in contrast to prior art's use of a single vehicle capacity, regardless of the nature of the mission.</p>
<p id="p-0019" num="0018">Specifically, for a given type of vehicle, if a proposed mission is simple (e.g. a direct move with no intermediate stops), then the computer is programmed in accordance with the invention to permit a predetermined maximum amount (e.g. volume) of freight to be moved in the mission. This computer is further programmed in some embodiments to progressively reduce the amount of freight that can be moved by the same given type vehicle, as the mission becomes progressively more difficult to load and unload, e.g. as the number of stops increases and/or if consolidation(s) and/or deconsolidation(s) (i.e. &#x201c;pooling&#x201d;) is required at one or more stops. Therefore, the computer is programmed to account for the reality that, as additional constraints are placed on what can go where in a truck or trailer, the volume of goods that can fit inside is reduced accordingly. Specifically, because goods that must be loaded or unloaded at different stops can't be mixed together (because doing so will, among other things, impede the loading and unloading activities), such additional constraints appear as the nature of the truck's mission becomes more complicated.</p>
<p id="p-0020" num="0019">In many embodiments of the invention, the computer is programmed to automatically plan moves of freight by (1) initially determining one or more attribute(s) of a mission currently being formed by combining two or more shipment orders, (2) computing an amount of freight to be moved in the mission, and (3) deciding on feasibility of performing the mission using a vehicle of a given type (such as a standard 53&#x2032;&#xd7;102&#x2033; trailer), based on least each of (A) the computed amount of freight, (B) attribute(s) of the mission, and (C) multiple effective capacities for loading freight into the vehicle of the given type, which change depending on the mission attribute(s).</p>
<p id="p-0021" num="0020">An attribute of a mission that is used to identify a vehicle's effective capacity for that mission, can be any attribute that is a characteristic or property of the mission as a whole. The value of such attribute(s) is/are automatically derived, from details of shipment orders being consolidated into the mission being proposed. Two attributes of a mission that are used in several embodiments are: (1) number of stops and (2) type of stops (whether pooling or non-pooling). Such attribute(s) of the mission may be used alone or in combination with each other or with other attribute(s), to identify an effective capacity from among several effective capacities for a vehicle of a given type (such as a standard 53&#x2032;&#xd7;102&#x2033; trailer). The identified effective capacity is then used in the normal manner, to decide whether or not the mission is feasible, e.g. applied as a hard or soft constraint on the freight to be carried in the mission.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE FIGURES</heading>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIGS. 1A-1E</figref> illustrate, in block diagrams, load consolidations that can be performed in the prior art during transportation planning.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 2A</figref> illustrates, in a flow chart, a method in accordance with the invention that takes into account multiple effective capacities of a given type of vehicle as illustrated in <figref idref="DRAWINGS">FIG. 2B</figref>.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 2B</figref> illustrates, in a table, multiple effective capacities for two types of vehicles which differ depending on attributes indicative of complexity of a mission into which shipments are proposed to be consolidated.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 2C</figref> illustrates, in a flow chart, a transportation planning process that uses the method of <figref idref="DRAWINGS">FIG. 2A</figref>.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIGS. 3A and 3C</figref> illustrate, in flow charts, acts performed in certain embodiments of the method illustrated in <figref idref="DRAWINGS">FIG. 2A</figref>.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 3B</figref> illustrates, in a table, mapping between the number of stops of two types (pool and non-pool) and predetermined categories of missions, wherein each category has an effective capacity associated therewith.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 4A</figref> illustrates, in a flow chart, a portion of a load consolidation process that uses the method of <figref idref="DRAWINGS">FIGS. 3A and 3C</figref>, in some embodiments of the invention.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIGS. 4B-4D</figref> illustrate how certain missions are selected for combination, during load consolidation that uses mission specific capacity constraints in accordance with the invention.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIGS. 5A and 5B</figref> illustrate, in block diagrams, hardware and software portions of a computer that performs the method illustrated in <figref idref="DRAWINGS">FIG. 2A</figref>.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 6</figref> illustrates a graphical user interface through which a computer programmed in accordance with the invention receives from a user multiple effective capacities that depend on attributes of the mission.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0032" num="0031">A computer is programmed, in accordance with the invention, to automatically plan movement of freight (i.e. cargo) by using wheeled vehicles that travel on public highways (or intermodal or maritime containers) to execute a mission (also called &#x201c;trip&#x201d; or &#x201c;voyage&#x201d; or &#x201c;journey&#x201d;), by performing acts <b>201</b>-<b>203</b> illustrated in <figref idref="DRAWINGS">FIG. 2A</figref>, which are described below. The mission, whose feasibility is decided on performance of acts <b>201</b>-<b>203</b> is proposed prior to method <b>200</b>, by manual and/or automatic consolidation (i.e. grouping) of multiple shipment orders by a shipper (that owns and/or controls the freight) for travel by full Truckload (or full containerload) service, wherein each shipment would otherwise have traveled by LTL (or less-than-containerload) service or parcel service.</p>
<p id="p-0033" num="0032">Regardless of how a mission of multiple shipments is proposed by a shipper, a computer is programmed in several embodiments of the invention to perform act <b>201</b> to determine one or more attribute(s) of the mission being proposed. A mission attribute that is determined in act <b>201</b> can be any characteristic or property of a mission as a whole, and its value can be derived in different ways depending on the embodiment, from one or more details of multiple shipment orders in the proposed mission. In some embodiments, the mission attribute is indicative of complexity of loading/unloading freight being moved by the mission, which in turn may depend on, e.g. number of stops, types of stops (pooling or non-pooling), and type of handling equipment available at the stops. In some embodiments, the mission attribute is indicative of one or more requirements of the goods to be carried, such as ventilation, airflow, refrigeration, and spacing.</p>
<p id="p-0034" num="0033">For example, a mission is classified by a shipper in one embodiment into one of the following six types: (1) direct mission (no intermediate stops), (2) one stop mission (i.e. one intermediate stop between origin and destination), (3) multi-stop mission (i.e. two or more intermediate stops), (4) one pool mission (with one pooling or cross-docking stop), (5) two pool mission (with two pooling or cross-docking stops) and (6) multi-stop/pooling mission (with more than two pooling or cross-docking stops). In this embodiment, the mission illustrated in <figref idref="DRAWINGS">FIG. 1E</figref> has a total of 8 stops, of which 4 stops are pooling stops, and for this reason the computer, when appropriately programmed, determines this mission to be a multi-stop/pooling mission, which has the highest mission complexity (e.g. value 6).</p>
<p id="p-0035" num="0034">Note that pooling is typically performed at a facility where shipments from different origins are consolidated together or where shipments traveling to different destinations can be deconsolidated. Moreover, cross-docking is performed at a facility where contents of multiple inbound missions are broken down and re-combined into multiple outbound missions. In addition to pooling and cross-docking stops, mission can have stops at which a simple pick-up or drop-off is performed and these are referred to herein as non-pooling stops (regardless of whether origin or destination).</p>
<p id="p-0036" num="0035">As shown by act <b>202</b>, the computer that performs act <b>201</b> is also programmed in accordance with the invention to compute an amount (e.g. volume) of freight to be moved by shipment orders grouped into the proposed mission. Although act <b>202</b> is illustrated as being performed after act <b>201</b> in <figref idref="DRAWINGS">FIG. 2A</figref>, the two acts can be performed in the reverse order in other embodiments. In some embodiments, a proposed mission for which acts <b>201</b> and <b>202</b> are performed is selected to be any existing mission to which a new shipment is to be added, which may or may not add a stop to or change the type of a stop already on a previously-existing mission to create the mission being proposed Some embodiments simply add up the freight onboard for any &#x201c;leg&#x201d; of a trip for which freight is being added.</p>
<p id="p-0037" num="0036">Note that the word &#x201c;trip&#x201d; is used interchangeably herein with the word &#x201c;mission&#x201d; to identify certain information including but not limited to: (1) arrival and departure times, (2) origin and destination (3) goods to be transported, and (4) order(s) satisfied on performance. These two words, trip and mission are meant to be synonymous with the words voyage and journey.</p>
<p id="p-0038" num="0037">In the example illustrated in <figref idref="DRAWINGS">FIG. 1E</figref>, D-Y freight is added only on leg <b>6</b> of the 7 legs of the trip but its presence may place constraints on how freight can be loaded throughout the trip (because, for example, space may need to be &#x201c;reserved&#x201d; for it)&#x2014;therefore adding freight on leg <b>6</b> can reduce the capacity on any other leg and, if it reduces it below the amount of freight already planned to be on board in that leg, it will violate constraints. In other words, adding freight on leg <b>6</b> can reduce the capacity of leg <b>2</b> below what's already planned on leg <b>2</b>, therefore adding freight on leg <b>6</b> may be infeasible. If a new shipment being added is D-Y, then the previously-existing mission has all shipments except for D-Y and did not have a stop at D. For this reason, the previously-existing mission has its mission index at value 6 in the embodiment (described at the end of a paragraph above) which is the highest possible value. Hence addition of the new shipment D-Y does not further change the mission index of this embodiment (described above), even though the proposed mission contains a new stop D. Moreover, as per act <b>202</b>, the amount of freight at stop D is computed to be 1530 cubic feet.</p>
<p id="p-0039" num="0038">Note that, a specific leg of a mission, on which the amount of freight is computed, can be different depending on the embodiment. In some embodiments, a leg for computing the amount of freight in the mission is chosen to be anywhere two or more shipment orders (in the proposed mission) overlap one another. In such embodiments, it may be necessary to &#x201c;reserve&#x201d; space for a shipment on a later leg (such as leg <b>6</b>) which constrains how goods can be loaded on earlier legs, even if the itineraries of no freight on such legs overlaps with those of the shipments on board (e.g. as of leg <b>6</b>). In several embodiments, a leg at which the vehicle will have the most load, as compared to the rest of the mission, is used to compute the amount of freight. In the example illustrated in <figref idref="DRAWINGS">FIG. 1E</figref>, if each shipment is of an identical size of 510 cubic feet, then the mission has its most load in the portion B-W (i.e. between stops B and W). Hence in such embodiments, the volume 2040 cubic feet is computed between stops B and W, as the amount of freight in the mission.</p>
<p id="p-0040" num="0039">A computer that performs acts <b>201</b> and <b>202</b> is further programmed in accordance with the invention to decide (as illustrated by act <b>203</b> in <figref idref="DRAWINGS">FIG. 2A</figref>) on the feasibility of performing the proposed mission using a vehicle of a given type (e.g. a truck with a standard 53&#x2032;&#xd7;102&#x2033; trailer), based on at least each of (A) the computed amount of freight, (B) the one or more attributes of the proposed mission (used either directly or in the form of a mission type or mission index derived therefrom), and (C) multiple effective capacities of freight moveable by the vehicle of the given type, which differ depending on the mission attribute.</p>
<p id="p-0041" num="0040">Note that the mission attribute being determined in act <b>201</b> and used in act <b>203</b> is chosen to be, in most embodiments, indicative of the complexity of loading and unloading freight in the mission, and for this reason the effective capacity is inversely related to such a mission attribute. One illustrative example of mission-specific vehicle capacities is shown in <figref idref="DRAWINGS">FIG. 2B</figref>. In the example of <figref idref="DRAWINGS">FIG. 2B</figref>, note that a truck with a standard 53&#x2032;&#xd7;102&#x2033; trailer has five effective capacities 3000, 2800, 2500, 2300, and 2000 cubic feet, one for each of five possible values of a mission type or index. Similarly, a truck with a shorter 48&#x2032;&#xd7;102&#x2033; trailer also has five effective capacities, in this embodiment as shown in <figref idref="DRAWINGS">FIG. 2B</figref>. Multiple effective capacities for a given type of vehicle may be specified to the computer by a transportation planner, as illustrated in <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0042" num="0041">At least two reasons require effective capacities of a given type of vehicle to become smaller, as a mission's loading/unloading complexity increases. One practice commonly followed in the transportation industry requires a demarcation between shipments going to different destinations. Specifically, shipments for each stop are kept separately from each other and not randomly mixed together. Physical bulkheads may even be inserted between the goods for each stop. This practice reduces the flexibility in how shipments can be packed into a truck and therefore reduces the effective capacity. Another industry practice requires shipments to be loaded and unloaded in the order of stops. It is not practical to load shipments going to an earlier stop in the front of a truck with only one single door at the rear, even if space is available in the front, because shipments would have to be unloaded and reloaded multiple times. Note that, typically, only the volume capacity of a vehicle is affected by business processes of some embodiments (because the same weight of freight is allowed to reach up to the legal limit of axle loads in these embodiments, regardless of the complexity of the mission).</p>
<p id="p-0043" num="0042">Other reasons as to why the amount of cargo that fits in a trailer is less than the full space inside the trailer include (1) the need to leave space above and beside the cargo to allow it to be moved in and out of the vehicle; and (2) the sizes and shapes of different items are not coordinated to be fit together into a compact space&#x2014;for illustration, the pieces of a jigsaw puzzle are coordinated perfectly to fit into 100% of a given space but this only happens if the pieces are laid out in a specific configuration. Any change to the sizes or shapes of any of the pieces will result in fewer of the pieces being able to be laid down on the puzzle board. Similarly, without precise advance knowledge of what goods go where in the vehicle, and precise planning of what order to put them in there, one could never fit all of the various goods into 100% of the allotted space. During normal operations in the real world, loading of the different goods into a truck or trailer cannot be controlled and planned so tightly as the pieces of a puzzle, and for this reason effective space utilization is reduced accordingly.</p>
<p id="p-0044" num="0043">In some embodiments, constants of the type shown in <figref idref="DRAWINGS">FIG. 2B</figref> are predetermined for each type of mission (via user input in the screen of <figref idref="DRAWINGS">FIG. 6</figref>) as the respective effective capacities for each vehicle type, and are stored in a table. The table of <figref idref="DRAWINGS">FIG. 2B</figref> is looked up during performance of act <b>203</b> by use of a mission index. Hence, in the above-described example, with a value of 5 for the mission index, the table of <figref idref="DRAWINGS">FIG. 2B</figref> yields 2000 cubic feet as the effective capacity of the standard 53&#x2032;&#xd7;102&#x2033; trailer when performing a mission of this complexity. Next, this effective capacity value (2000 cubic feet) is compared with the freight's volume of 2040 cubic feet (in embodiments that use the maximum freight volume in the mission). If effective capacity is applied as hard constraint, then this mission is determined to be not feasible, and performance of act <b>203</b> is complete.</p>
<p id="p-0045" num="0044">Alternatively, if effective capacity is applied as a soft constraint, for example with a penalty of $5/cubic foot for up to 50 cubic feet of capacity violation, then the proposed mission is determined to be feasible (although a penalty of $200 is incurred). Use of effective capacity as a soft constraint models a vehicle's capacity flexibly, and the 2040 cubic feet mission may be implemented (if economically viable). Specifically, the effective capacity limit of 2000 is applied like a rubber band; the more money one can save by putting additional freight on the truck, the further it stretches. In that manner and with similar modeling advances, a computer programmed in accordance with the invention can eliminate most manual fixes of the type described in the BACKGROUND section above, and hence reduce the total time required to generate an actionable and optimized transportation plan. Of course, the extent to which this is true corresponds to the precision of the modeling of penalty values. Capturing a truer capacity of a given type of vehicle based on multiple values of one or more mission attributes as described herein improves that precision and eliminates more of the above-referenced manual fixes.</p>
<p id="p-0046" num="0045">Use of mission-specific vehicle capacity constraints, as described in the above two paragraphs, to evaluate feasibility of using a vehicle of a given type to carry shipments of a proposed mission in accordance with the invention, improves on prior art methods of transportation planning that currently use a single effective capacity regardless of mission attribute(s). This is because prior art's use of a single effective capacity for all missions regardless of complexity makes the single capacity either too high for some missions or too low for some missions, or both i.e. too high for some and too low for others. For this reason, a transportation plan resulting from prior art's use of a single effective capacity can contain one or more missions with invalid loads, if the effective capacity was set too high. This can cause physical problems in real time, when shipments are being loaded into the vehicle. Alternatively, or in addition, prior art transportation planning software may miss consolidation opportunities if the single capacity is set to be too low (i.e. too conservative).</p>
<p id="p-0047" num="0046">The exact manner in which mission-specific vehicle capacities are used in a computer, to determine a mission's feasibility in accordance with the invention can differ, depending on the embodiment. As will be apparent to a skilled computer programmer, a table need not be used in performing some embodiments of the invention. For example, several embodiments generate mission-specific vehicle capacities during performance of act <b>203</b>, by use of a graph or a formula, with mission complexity as an input (to the graph or formula). Note that although in some embodiments, the effective capacity is determined by looking up predetermined values for different complexity missions, in other embodiments the effective capacity may be determined by computation using a formula.</p>
<p id="p-0048" num="0047">For example, a formula might be CAPACITY (as function of number of additional stops X)=Baseline_Capacity&#x2212;X*Y, where Y is an amount of capacity reduction for each additional stop and Baseline_Capacity is the maximum effective volume of the vehicle. Other embodiments, combine such a formula with another formula (required to determine the mission complexity as per act <b>201</b>), to directly obtain a single effective capacity for a mission. Also some embodiments determine effective capacity that is mission specific, without explicitly computing number of stops and types of stops as follows. Such embodiments have flags associated with each trip representing a mission type, and move those flags up or down as stops are added to or removed from the trip, and thereafter associate a mission-specific capacity with the trip type and then are able to apply it without computing a number of stops.</p>
<p id="p-0049" num="0048">For this reason, <figref idref="DRAWINGS">FIG. 2C</figref> illustrates a transportation planning process <b>210</b> in accordance with the invention, that generically performs act <b>212</b> by using a mission-specific vehicle capacity constraint to evaluate feasibility of using a vehicle of a given type (such as the standard 53&#x2032;&#xd7;102&#x2033; trailer) to carry shipments of a proposed mission. As noted above, the exact manner in which act <b>212</b> is performed differs, depending on the embodiment, although specific operations to implement <b>212</b> have been illustrated by method <b>200</b> in <figref idref="DRAWINGS">FIG. 2A</figref> (described above).</p>
<p id="p-0050" num="0049">Note that prior to invoking act <b>212</b>, process <b>210</b> performs act <b>211</b> wherein a mission for consolidating shipments is proposed. In act <b>211</b>, the exact manner in which a mission is proposed can differ, depending on the embodiment. For example, the computer may be programmed by any method known in the prior art to create a proposal for the mission, e.g. as described in one or more of the references identified in the BACKGROUND section above.</p>
<p id="p-0051" num="0050">After performance of acts <b>211</b> and <b>212</b> for one mission, a computer of this invention may be programmed in some embodiments to repeat these two acts <b>211</b> and <b>212</b> iteratively, until all possible missions have been identified following which act <b>213</b> is performed. Alternatively, in other embodiments, the computer may be programmed to directly proceed from act <b>212</b> to an act <b>213</b> without repeating act <b>211</b> or <b>212</b>. In act <b>213</b>, the computer is programmed to select one or more mission(s) for performance. The specific criteria used in act <b>213</b>, to select mission(s) can differ, depending on the embodiment, although most embodiments make their selection(s) based on whichever mission(s) provide (or are expected to provide) the most cost saving(s).</p>
<p id="p-0052" num="0051">Although certain specific implementations are illustrated herein, as to how acts <b>211</b> and <b>213</b> are implemented in some embodiments, other embodiments may perform these acts <b>211</b> and <b>213</b> in a manner similar or identical to the manner normally performed in transportation planning software of the prior art, as modified by the addition of act <b>212</b> as illustrated in <figref idref="DRAWINGS">FIG. 2C</figref>. Prior art transportation management systems that can be modified to perform act <b>212</b> are available for direct purchase or as a web-hosted service from several vendors, such as the following:</p>
<p id="p-0053" num="0052">(a) &#x201c;i2 Transportation Planning and Management&#x201d; available from i2 Technologies, Inc. One i2 Place, 11701 Luna Road, Dallas, Tex. 75234;</p>
<p id="p-0054" num="0053">(b) &#x201c;Manugistics Global Logistics Management solution&#x201d; available from Manugistics, Inc. 9715 Key West Avenue, Rockville, Md. 20850</p>
<p id="p-0055" num="0054">(c) &#x201c;GC3 (Global Command &#x26; Control Center)&#x201d; available from Global Logistics Technologies, 1 Reservoir Corporate Centre, Shelton, Conn. 06484;</p>
<p id="p-0056" num="0055">(d) &#x201c;DLx&#xae; Transportation Management System&#x201d; available from Red Prairie of 20700 Swenson Drive, Waukesha, Wis. 53186;</p>
<p id="p-0057" num="0056">(e) &#x201c;Transportation Planning and Execution solution&#x201d; available from Manahattan Associates, 2300 Windy Ridge Parkway, Suite 700, Atlanta, Ga. 30339; and</p>
<p id="p-0058" num="0057">(f) &#x201c;Transportation Planning &#x26; Optimization&#x201d; available from SAP America Inc. Strategic Planning &#x26; Support Office, 3999 West Chester Pike Newtown Square, Pa. 19073.</p>
<p id="p-0059" num="0058">Note that one embodiment of the invention uses &#x201c;Oracle Transportation Planning 11i.10&#x201d; and &#x201c;Oracle Transportation Execution 11i&#x201d; both available from Oracle Corporation, 500 Oracle Parkway, Redwood Shores, Calif. 94065.</p>
<p id="p-0060" num="0059">Use of mission-specific vehicle capacities in accordance with the invention differs from use of loading capacity calendars as described in US Patent Application 2004/0107110 for at least three reasons. An effective capacity that is determined for a vehicle of a given type in accordance with the invention is identified at run time during transportation planning, from among a number of effective capacities, depending on one or more attributes of a mission to be performed by the vehicle. In contrast, the loading capacity calendar of US Patent Application 2004/0107110 identifies a capacity that is pre-assigned to a fixed trip, regardless of the number and types of stops in the trip (wherein ships or airplanes of different sizes execute different instantiations of the same scheduled flight/voyage, therefore resulting in different loading capacities being made available for different instantiations of the scheduled trip).</p>
<p id="p-0061" num="0060">Second, an effective capacity that is determined for a vehicle of a given type in accordance with the invention is applicable to any and all carriers that can perform the mission, if they use vehicles of a given type (e.g. standard 53&#x2032;&#xd7;102&#x2033; trailer). In contrast, the loading capacity calendar of US Patent Application 2004/0107110 refers to scheduled trips performed at different times by different single vehicles of different sizes. Third, an effective capacity that is determined in accordance with the invention depends on mission attribute(s) indicative of complexity but it is independent of a specific schedule and route (i.e. independent of a specific route as opposed to the attributes of that route; effective capacity does depend on the attributes of a trip, but it doesn't vary from, say, one five-pool-stop route to another).</p>
<p id="p-0062" num="0061">Some embodiments of the invention determine two independent measures of complexity of a proposed mission, and these two measures are used as indices into a two dimensional table, as discussed briefly below and in greater detail in reference to <figref idref="DRAWINGS">FIGS. 3A-3C</figref>. The two measures of mission complexity that are used in some embodiments are: (1) number of stops and (2) type of stops (whether pooling or non-pooling). In one example, a mission that is proposed from an origin A to a destination D with two intermediate stops B and C, results in the just-described first measure of mission complexity to be determined by simply counting the number of intermediate stops, which has the value 2. In this example, if one of the stops is a pooling stop, then the just-described second measure of mission complexity (type of stops) has the value 1. In a variation of this example, if no stop is a pooling stop then this second measure of mission complexity has the value 0.</p>
<p id="p-0063" num="0062">In several embodiments of the invention, these two measures of mission complexity are used as two indices, to look up a two-dimensional table of effective capacities for a given type of vehicle (such as a standard 53&#x2032;&#xd7;102&#x2033; trailer) which is to be used in performance of the mission. The result of table look up is an effective capacity for the given type of vehicle, which is then compared, with the total freight to be carried in the mission, to decide whether or not the given type of vehicle is to be selected for performance of the mission. If the effective capacity (obtained from a table lookup) is insufficient for the total freight, then the mission is either not feasible (if the effective capacity is a hard constraint) or expensive (if on exceeding the effective capacity an additional cost is imposed by a soft constraint). The type of constraint and/or the table of effective capacities for each vehicle type may be stored in the programmed computer either by a transportation planner (also called &#x201c;user&#x201d;) as illustrated by fields <b>601</b> in <figref idref="DRAWINGS">FIG. 6</figref>, or alternatively by a hosting service that is operating the computer or some combination thereof.</p>
<p id="p-0064" num="0063">An implementation of act <b>201</b> (<figref idref="DRAWINGS">FIG. 2A</figref>), for determining the complexity of a proposed mission, is illustrated by method <b>310</b> (<figref idref="DRAWINGS">FIG. 3A</figref>), as follows. In act <b>311</b>, a variable &#x201c;current stop&#x201d; is initialized to the first origin in the proposed mission (note that the first origin of each proposed mission is known from a process by which two trips are merged (to form a multi-stop trip) by deciding which of multiple combination thereof is technically feasible and economically less expensive). Moreover, also in act <b>311</b>, two variables for the respective numbers of pool stops and non-pool stops are initialized to zero. Next, the computer is programmed to check if the current stop is a pool stop, as illustrated by act <b>312</b>. If not, then control transfers to act <b>313</b> wherein the number of non-pool stops is incremented. If yes, then control transfers to act <b>314</b> wherein the number of pool stops is incremented. After either of acts <b>313</b> and <b>314</b>, control transfers to act <b>315</b>.</p>
<p id="p-0065" num="0064">In act <b>315</b>, the computer is programmed to check if the number of pool stops has become greater than or equal to 2, and if so control transfers to act <b>320</b> wherein this method <b>310</b> completes. Note that the value 2 used in act <b>315</b> forms the upper limit on the size of the table to be indexed by the number of pool stops. In act <b>315</b> if the answer is no then control transfers to act <b>316</b>. In act <b>316</b>, the computer is programmed to check if the last destination in the proposed mission has been reached, and if not then control transfers to act <b>317</b>. In act <b>317</b>, the current stop is advanced to the next stop in the proposed mission, and control transfers to act <b>312</b> (discussed above).</p>
<p id="p-0066" num="0065">In act <b>316</b>, if the answer is yes, the computer is programmed to transfer control to act <b>318</b>. In act <b>318</b>, the computer checks if the number of non-pool stops is greater than 4, and if so the number of non-pool stops is reset to 4 in act <b>319</b> and control transfers to act <b>320</b>. If the result in act <b>318</b> is no then control transfers directly to act <b>320</b>. Once again, the value 4 being checked in act <b>318</b> forms the upper limit on the size of the table to be indexed by the number of non-pool stops. Note that different values for the upper limits in acts <b>315</b> and <b>318</b> may be used in different implementations.</p>
<p id="p-0067" num="0066">In this particular implementation, in act <b>320</b>, the number of non-pool stops and the number of pool stops that were computed by performing the rest of method <b>310</b> are used to perform a two dimensional lookup of a table along the X axis and the Y axis respectively as illustrated in <figref idref="DRAWINGS">FIG. 3B</figref>. Values in a table of the type shown in <figref idref="DRAWINGS">FIG. 3B</figref> may be all individually set, for each cell therein. In some embodiments the total number of such values (which must be received from a human as input to the computer) is made smaller than the number of cells in the table by re-using certain values as shown in <figref idref="DRAWINGS">FIG. 3B</figref>. In the example of <figref idref="DRAWINGS">FIG. 3B</figref>, the effective capacity for a two stop mission with no pooling stops is used for all missions that have two or more non-pooling stops. Moreover, the effective capacity for a two pool mission is used for all missions that have two or more pooling stops. Finally, at a cell in the table for a mission with one pool stop and two non-pool stops, the smaller of the following two effective capacities is used: (1) two non-pool stops and (2) one pool stop.</p>
<p id="p-0068" num="0067">Note that in the illustration of <figref idref="DRAWINGS">FIG. 3B</figref>, stop count includes the origin and the destination. Also, no valid trip exists with no pool stops and no non-pool stops, or just one pool stop, or one non-pool stop, that is, at least two stops are required to make a trip. If a trip has two stops and both are non-pool stops, then the effective capacity of the vehicle is the effective capacity of a direct move. The value of the effective capacity of a direct move is retrieved from a second table which is populated in the computer by a human (not shown in <figref idref="DRAWINGS">FIG. 3B</figref>; see FIG. <b>2</b>B). In the table of <figref idref="DRAWINGS">FIG. 3B</figref>, consider the intersection cell of 0 pool stops and 2 non-pools: if a trip has two stops and both are pool stops, then the effective capacity of the vehicle is effective capacity of a two-pool move (which, as noted above, is retrieved from the second table). If a trip has two stops and one was a pool stop and the other a non-pool stop, then the effective capacity of the vehicle is effective capacity of a pool move.</p>
<p id="p-0069" num="0068">In the table shown in <figref idref="DRAWINGS">FIG. 3B</figref>, for any trip with more than two pool stops, the effective capacity is that of the volume capacity of a two pool move. If a trip has three stops and all of them are non-pool stops, then the effective capacity of the vehicle is the effective capacity of a one stop move. If a trip includes four stops and all of them are non-pool stops, then the effective capacity of the vehicle is the effective capacity of a two stop move. For any trip with more than three non-pool stops (and no pool stop or one pool stop), the effective capacity is that of the volume capacity of a two stop move. If three stops are present on a trip, and two of the stops are non-pool stops and one is a pool stop, then the effective capacity of the vehicle is the minimum of the effective capacity of a pool move and the effective capacity of a two stop move.</p>
<p id="p-0070" num="0069">Note that mission dependent capacity is used in some embodiments only in non-palletized planning of transportation moves. In several such embodiments, for planning moves of palletized goods, the computer is programmed to use the direct move capacity as the effective volume capacity, regardless of the attributes of the mission involved.</p>
<p id="p-0071" num="0070">An implementation of act <b>202</b> (<figref idref="DRAWINGS">FIG. 2A</figref>), for computing the freight to be moved in a proposed mission, is illustrated by method <b>330</b> (<figref idref="DRAWINGS">FIG. 3C</figref>), as follows. In act <b>331</b>, a first variable &#x201c;current stop&#x201d; is initialized to the first origin in the proposed mission, a second variable &#x201c;current shipment&#x201d; is initialized to the first shipment in the proposed mission, and a third variable &#x201c;total freight&#x201d; is initialized to freight of the current shipment. Next, the computer is programmed to check if all shipments originating at the current stop have been processed, and if the answer is no then control transfers to act <b>333</b> where the current shipment is set to the next shipment that originates at the current stop, followed by transfer of control to act <b>334</b>. In act <b>334</b>, the total freight is incremented with freight from the current shipment and control returns to act <b>332</b> (discussed above). In act <b>332</b> if the answer is yes, control transfers to act <b>335</b>.</p>
<p id="p-0072" num="0071">In act <b>335</b>, the computer is programmed to check if all shipments passing through (i.e. not being picked up or dropped off) at the current stop have been processed, and if the answer is no then control transfers to act <b>336</b> where the current shipment is set to the next shipment that passes through the current stop, followed by transfer of control to act <b>334</b> (described above). In act <b>335</b>, if the answer is yes, control transfers to act <b>337</b> wherein the total freight for the current stop is stored into an array that is indexed by the number of stops.</p>
<p id="p-0073" num="0072">Next, after act <b>337</b>, control transfers to act <b>338</b> wherein the computer checks if the current stop is the last destination. If no, control transfers to act <b>339</b> wherein the current stop is set to the next stop in the proposed mission, and the variables for the current shipment and total freight are reset to zero, followed by returning to act <b>332</b> (discussed above). In act <b>338</b> if the answer is yes, then control transfers to act <b>340</b> wherein the computer finds a maximum of all of the total freight amounts (e.g. volumes) that have been stored (in act <b>337</b>). Next, control transfers to act <b>341</b> wherein the computer checks if the maximum total freight amount (e.g. volume) is less than the effective capacity as determined by performing the table lookup (in act <b>320</b> discussed above), and if true goes to act <b>342</b> (wherein the proposed mission is further processed for economic value), and if false goes to act <b>343</b> (wherein the proposed mission is discarded or a penalty is assessed).</p>
<p id="p-0074" num="0073">In several embodiments of the invention, the computer is programmed to perform method <b>400</b> (<figref idref="DRAWINGS">FIG. 4</figref>), which provides an illustration of use of mission specific vehicle capacity constraints in load consolidation. Specifically, in act <b>401</b>, the computer groups all shipment orders by origin, into the sets VT(o<b>1</b>) to VT(on), wherein oi is the ith origin in a range of origins o<b>1</b>-on. Therefore, there are &#x201c;n&#x201d; such sets, if there are &#x201c;n&#x201d; unique origins. Next, one of these origins o is selected to be the current origin, and control transfers to act <b>402</b>.</p>
<p id="p-0075" num="0074">In act <b>402</b>, the computer selects a first mission in the current origin's set VT(o) to be the current mission, and control transfers to act <b>403</b>. In act <b>403</b>, the computer calculates the cost decrease of eliminating the current mission, and control transfers to act <b>404</b>. In act <b>404</b>, the computer marks all missions in VT(o) that are capable of reaching the current mission's destination as candidates for consolidation with the current mission. Next, the computer selects a first candidate to be the current candidate and control transfers to act <b>405</b>.</p>
<p id="p-0076" num="0075">The capability of a vehicle to reach one destination from another destination is automatically determined in some embodiments of act <b>404</b>, depending on whether the distance therebetween is less than a predetermined limit (referred to as &#x201c;stop radius&#x201d;). As illustrated in <figref idref="DRAWINGS">FIG. 4B</figref>, destination D<b>2</b> of a candidate mission <b>462</b> is within stop radius <b>469</b> of destination D<b>1</b> of current mission <b>461</b>. However, destination D<b>3</b> is not within this stop radius <b>469</b> from destination D<b>1</b>. Note that after combination of the current and candidate missions, a vehicle that is performing the combined mission can reach destination D<b>3</b> of mission <b>463</b> because destination D<b>3</b> is within the stop radius of destination D<b>2</b>. The stop radius can have any value specified by the transportation planner. Note that in most embodiments, the distance between an origin and a destination is independent of the stop radius.</p>
<p id="p-0077" num="0076">In act <b>405</b>, the computer determines an effective capacity of the vehicle in view of the complexity of a new mission obtained by combination of the current candidate and the current mission, and then checks if the total freight in the new mission is less than this effective capacity. If so, the new mission is feasible (either under a hard constraint or with a penalty cost under a soft constraint), and control transfers to act <b>406</b>. In the example illustrated in <figref idref="DRAWINGS">FIGS. 4B-4D</figref>, the computer checks if all shipment orders for destination D<b>1</b> and all shipment orders for destination D<b>2</b> occupy less volume than the effective capacity of a &#x201c;one stop&#x201d; move (i.e. a move with one intermediate stop and no pool stops).</p>
<p id="p-0078" num="0077">In act <b>406</b>, the computer determines if there is a non-empty intersection at the origin for the pickup schedules of the current candidate and the current mission, and if both destinations can be reached within the respective dropoff schedules. If the schedules match at origin as well as at the destinations, the combination of the current candidate and the current mission is evaluated for economic viability as per acts <b>407</b> and <b>408</b>. In act <b>407</b>, the computer calculates the cost difference between the combination and the current mission, i.e. the increase in cost due to adding the current candidate's destination to the current mission.</p>
<p id="p-0079" num="0078">Note that in computing such costs, the computer may be programmed to include one or more layover charges that may arise from a difference in the consignee's hours of receipt and the carrier's normal business hours. The specific manner in which layover charges are computed is not a critical aspect of some embodiments. For other embodiments, layover charges are computed as described in the U.S. patent application Ser. No. 11/136,167 entitled &#x201c;SCHEDULING WITH LAYOVERS AND LAYOVER CHARGE COMPUTATION IN TRANSPORTATION PLANNING&#x201d; filed May 23, 2005 by Javier Nicolas Sanchez et al., which is incorporated by reference herein in its entirety.</p>
<p id="p-0080" num="0079">The computer may be further programmed to take into account a carrier's charge for making additional stops, which may depend on the number of stops already being made in the current mission. For example, a first additional stop may be charged at $150, a second additional stop at $200, a third additional stop at $300 and all further additional stops at $400.</p>
<p id="p-0081" num="0080">Then in act <b>408</b> the computer calculates the total gain of insertion. The total gain is computed as a difference between the additional cost resulting from combining the current candidate into the current mission, less the savings from eliminating the current candidate.</p>
<p id="p-0082" num="0081">Next, in act <b>409</b> the computer repeats acts <b>405</b>-<b>408</b> with any other combinations that can be made with the current candidate and the current mission (i.e. because they are combinable in more than one way). For example, a current candidate <b>461</b> and a current mission <b>462</b> (<figref idref="DRAWINGS">FIG. 4B</figref>) are combinable in two ways as shown in <figref idref="DRAWINGS">FIGS. 4C and 4D</figref>. Therefore, if the combination in <figref idref="DRAWINGS">FIG. 4C</figref> is initially processed by acts <b>405</b>-<b>408</b> then the combination in <figref idref="DRAWINGS">FIG. 4D</figref> is now processed in act <b>409</b>. Then the computer chooses whichever combination provides greater total gain. Note that the combinations may provide different total gain because cost is a function of mileage and lanes, which may be different for the combinations O-D<b>1</b>-D<b>2</b> and O-D<b>2</b>-D<b>1</b>.</p>
<p id="p-0083" num="0082">Moreover, as noted above, D<b>3</b> becomes a candidate for addition to this new mission being created, because D<b>3</b> is within the stop radius of D<b>2</b>. Therefore, some embodiments of the invention evaluate (in act <b>409</b>) all possible combinations of D<b>3</b> with each of the two combinations of D<b>1</b> and D<b>2</b> in the above described manner. In doing so, the computer checks if all shipment orders for destinations D<b>1</b>, D<b>2</b> and D<b>3</b> occupy less volume than the effective capacity of a &#x201c;two stop&#x201d; move (i.e. a move with two intermediate stops and no pool stops).</p>
<p id="p-0084" num="0083">Note that in adding stops to the current mission in any of acts <b>405</b>-<b>409</b>, the computer may further take into account one or more limitations imposed by the carrier such as the maximum number of stops, and also any limitations imposed by commodity incompatibilities. Note also that in adding such stops, the computer may also compute the percentage utilization of the vehicle, and compare it to a predetermined percentage to decide if no more shipments should be added. For example, if in a proposed mission the effective capacity is more than 90% utilized, then no further shipments are added. &#x201c;Utilization&#x201d; here may mean either average or peak utilization, depending on the embodiment. The average utilization, for the combination shown in <figref idref="DRAWINGS">FIG. 4C</figref>, is calculated by the computer as follows (0.95*100+0.75*20)/120=92%. The peak utilization is simply the highest utilization at any point in the trip (in this case, 95%). In <figref idref="DRAWINGS">FIG. 4C</figref>, as the average utilization exceeds the predetermined percentage, the computer stores this combination in set IS (as discussed next), and hence the addition of stop D<b>3</b> need not be considered.</p>
<p id="p-0085" num="0084">Next, in act <b>410</b> the computer records a chosen combination (that provides the greatest gain) in a set IS. Set IS holds all proposed missions that are found to be feasible, for later use in a set partition process (see acts <b>417</b> et seq). Note that the chosen combination is recorded in act <b>410</b> only if the gain resulting therefrom is positive. Next, control transfers to act <b>411</b>, wherein the computer checks if all candidates have been processed and if not, goes to act <b>412</b> to select the next candidate and thereafter proceeds to act <b>405</b> (described above).</p>
<p id="p-0086" num="0085">If the answer in act <b>411</b> is yes, then control transfers to act <b>413</b> and the computer checks if all missions have been processed and if not goes to act <b>414</b> to select the next mission and thereafter proceeds to act <b>403</b> (described above). If the answer in act <b>413</b> is yes, then control transfers to act <b>415</b> and the computer checks if all origins have been processed and if not goes to act <b>416</b> to select the next origin and thereafter proceeds to act <b>402</b> (described above). If the answer in act <b>415</b> is yes, then control transfers to a set partition process <b>420</b>, as discussed next.</p>
<p id="p-0087" num="0086">In the set partition process <b>420</b>, the computer performs acts <b>421</b>-<b>425</b> (<figref idref="DRAWINGS">FIG. 4A</figref>). Specifically, in act <b>421</b>, the computer selects one of the combinations in set IS, e.g. the combination that provides the highest gain in set IS. Note that other embodiments may use one or more other criteria in selecting the combination in act <b>421</b>. Regardless of how it is selected, the selected combination is used in act <b>422</b>, wherein the computer makes one or more insertions to a pre-existing mission. The insertions are made to add a candidate to the pre-existing mission, thereby to make the selected combination into a new mission.</p>
<p id="p-0088" num="0087">Next, in act <b>423</b>, the computer recalculates the gains for those combinations in set IS that contain one or more of the stops added in act <b>422</b>. Then in act <b>424</b>, the computer checks if all combinations in set IS have been processed and if not, returns to act <b>421</b> (described above). If all combinations have been processed, then control transfers to act <b>425</b>, wherein the computer performs another process to improve the routes.</p>
<p id="p-0089" num="0088">Specifically, in act <b>425</b>, the computer sorts all missions into two groups, a first group whose utilization exceeds the predetermined percentage as described above, and a second group contains the remaining missions. Then the computer schedules the missions in the first group for performance. Missions in the second group are subject to further consolidation as discussed next.</p>
<p id="p-0090" num="0089">Note that method <b>400</b> of <figref idref="DRAWINGS">FIG. 4A</figref> (also called &#x201c;step 1&#x201d;) merely illustrates use of mission specific capacity constraints in consolidation of missions that have a common origin. Load consolidation can also be performed on missions that have a common destination (in an additional step called &#x201c;step 2&#x201d;). Specifically, in step 2 of some embodiments, a method similar or identical to that shown in <figref idref="DRAWINGS">FIG. 4A</figref> is performed on missions with their topology reversed (e.g. origins treated as destinations and vice versa). Note that the just-described step 2 receives as input only those missions that are still unscheduled, i.e. that are in the second group as discussed in the previous paragraph. On completion of this step 2, the second group contains missions that are subject to additional consolidation as discussed next. Note that in the pseudo-code attached below, LIST<b>1</b> and LIST<b>2</b> are lists of trips, not lists of orders. Although LIST<b>1</b> and LIST<b>2</b> correspond to the same unscheduled orders, LIST<b>1</b> (from step 1) contains a list of single-origin multi-stop trips covering such orders, while LIST<b>2</b> (from step 2) contains a list of single-destination multi-stop trips covering such orders, so LIST<b>1</b> and LIST<b>2</b> contain different trips.</p>
<p id="p-0091" num="0090">Any missions that remain unscheduled at this stage are thereafter subjected to further consolidation with one another if any portion of their routes overlap with each other. The exact process by which this additional consolidation is implemented differs depending on the embodiment. One illustrative process is described below, in the form of pseudo code, which is listed below, just before the claims. Note that in the pseudo code, at lines <b>34</b>-<b>35</b>, the computer checks the vehicle's physical volume limit, not mission specific capacity. Instead, the mission specific capacity is used as a constraint in the trip's penalty cost calculation, i.e. line <b>39</b>, where a penalty for violating hard/soft effective vehicle capacity constraint is computed.</p>
<p id="p-0092" num="0091">Method <b>210</b> (<figref idref="DRAWINGS">FIG. 2C</figref>) is used to program a computer system <b>500</b> of the type illustrated in <figref idref="DRAWINGS">FIG. 5A</figref> which is discussed next. Specifically, computer system <b>500</b> includes a bus <b>502</b> (<figref idref="DRAWINGS">FIG. 5A</figref>) or other communication mechanism for communicating information, and a processor <b>505</b> coupled with bus <b>502</b> for processing information. Computer system <b>500</b> also includes a main memory <b>506</b>, such as a random access memory (RAM) or other dynamic storage device, coupled to bus <b>502</b> for storing information and instructions to be executed by processor <b>505</b>.</p>
<p id="p-0093" num="0092">Main memory <b>506</b> also may be used for storing temporary variables or other intermediate information during execution of instructions to be executed by processor <b>505</b>. Computer system <b>500</b> further includes a read only memory (ROM) <b>508</b> or other static storage device coupled to bus <b>502</b> for storing static information and instructions for processor <b>505</b>. A storage device <b>510</b>, such as a magnetic disk or optical disk, is provided and coupled to bus <b>502</b> for storing information and instructions.</p>
<p id="p-0094" num="0093">Computer system <b>500</b> may be coupled via bus <b>502</b> to a display <b>512</b>, such as a cathode ray tube (CRT), for displaying information to a computer user. An input device <b>514</b>, including alphanumeric and other keys, is coupled to bus <b>502</b> for communicating information and command selections to processor <b>505</b>. Another type of user input device is cursor control <b>516</b>, such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to processor <b>505</b> and for controlling cursor movement on display <b>512</b>. This input device typically has two degrees of freedom in two axes, a first axis (e.g., x) and a second axis (e.g., y), that allows the device to specify positions in a plane.</p>
<p id="p-0095" num="0094">As described elsewhere herein, transportation planning is performed by computer system <b>500</b> in response to processor <b>505</b> executing one or more sequences of one or more instructions contained in main memory <b>506</b>. Such instructions may be read into main memory <b>506</b> from another computer-readable medium, such as storage device <b>510</b>. Execution of the sequences of instructions contained in main memory <b>506</b> causes processor <b>505</b> to perform the process steps described herein and illustrated in <figref idref="DRAWINGS">FIG. 2A</figref>. In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions to implement the invention. Thus, embodiments of the invention are not limited to any specific combination of hardware circuitry and software.</p>
<p id="p-0096" num="0095">The term &#x201c;computer-readable storage medium&#x201d; as used herein refers to any storage medium that participates in providing instructions to processor <b>505</b> for execution. Such a storage medium may take many forms, including but not limited to, non-volatile storage media, and volatile storage media. Non-volatile storage media includes, for example, optical or magnetic disks, such as storage device <b>510</b>. Volatile storage media includes dynamic memory, such as main memory <b>506</b>.</p>
<p id="p-0097" num="0096">Common forms of computer-readable storage media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, or any other magnetic medium, a CD-ROM, any other optical medium, punch cards, paper tape, any other physical medium with patterns of holes, a RAM, a PROM, and EPROM, a FLASH-EPROM, any other memory chip or cartridge, as described hereinafter, or any storage medium from which a computer can read.</p>
<p id="p-0098" num="0097">Various forms of computer readable storage media may be involved in carrying one or more sequences of one or more instructions to processor <b>505</b> for execution. For example, the instructions may initially be carried on a magnetic disk of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system <b>500</b> can receive the data on the telephone line and use an infra-red transmitter to convert the data to an infra-red signal. An infra-red detector can receive the data carried in the infra-red signal and appropriate circuitry can place the data on bus <b>502</b>. Bus <b>502</b> carries the data to main memory <b>506</b>, from which processor <b>505</b> retrieves and executes the instructions. The instructions received by main memory <b>506</b> may optionally be stored on storage device <b>510</b> either before or after execution by processor <b>505</b>.</p>
<p id="p-0099" num="0098">Computer system <b>500</b> also includes a communication interface <b>515</b> coupled to bus <b>502</b>. Communication interface <b>515</b> provides a two-way data communication coupling to a network link <b>520</b> that is connected to a local network <b>522</b>. Local network <b>522</b> may interconnect multiple computers (as described above). For example, communication interface <b>518</b> may be an integrated services digital network (ISDN) card or a modem to provide a data communication connection to a corresponding type of telephone line. As another example, communication interface <b>515</b> may be a local area network (LAN) card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation, communication interface <b>515</b> sends and receives electrical, electromagnetic or optical signals that carry digital data streams representing various types of information.</p>
<p id="p-0100" num="0099">Network link <b>520</b> typically provides data communication through one or more networks to other data devices. For example, network link <b>520</b> may provide a connection through local network <b>522</b> to a host computer <b>525</b> or to data equipment operated by an Internet Service Provider (ISP) <b>526</b>. ISP <b>526</b> in turn provides data communication services through the world wide packet data communication network <b>528</b> now commonly referred to as the &#x201c;Internet&#x201d;. Local network <b>522</b> and network <b>528</b> both use electrical, electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link <b>520</b> and through communication interface <b>518</b>, which carry the digital data to and from computer system <b>500</b>, are exemplary forms of carrier waves transporting the information.</p>
<p id="p-0101" num="0100">Computer system <b>500</b> can send messages and receive data, including program code, through the network(s), network link <b>520</b> and communication interface <b>518</b>. In the Internet example, a server <b>550</b> might transmit a mission (which is part of a transportation plan) through Internet <b>528</b>, ISP <b>526</b>, local network <b>522</b> and communication interface <b>515</b>.</p>
<p id="p-0102" num="0101">The instructions for performing method <b>210</b> (<figref idref="DRAWINGS">FIG. 2C</figref>) may be executed by processor <b>505</b> as they are received, and/or stored in storage device <b>510</b>, or other non-volatile storage for later execution. In this manner, computer system <b>500</b> may obtain the just-described instructions and any related data in the form of a carrier wave.</p>
<p id="p-0103" num="0102">Note that <figref idref="DRAWINGS">FIG. 5A</figref> is a very low-level representation of many hardware components of a computer system. Several embodiments have one or more additional software components in main memory <b>506</b> as shown in <figref idref="DRAWINGS">FIG. 5B</figref>: Operating System <b>591</b> (e.g. Microsoft WINDOWS 2000), Database Server <b>595</b> (e.g. Oracle Server v9i2 for the source computer; e.g. Oracle Server v8i for the target computer), Java Development Kit <b>593</b> (e.g. JDK v118), Java XMLParser <b>592</b> (e.g. xmlparser available from Oracle Corporation), and JDBC drivers <b>594</b> (e.g. JDBC driver available from Oracle Corporation).</p>
<p id="p-0104" num="0103">Numerous modifications and adaptations of the embodiments described herein will become apparent to the skilled artisan in view of this disclosure. Note that although some embodiments use two mission complexity measures individually, to perform a lookup of a two-dimensional table, other embodiments may use a single mission complexity measure to look up a one-dimensional table. In one such other embodiment of the invention, each non-pooling stop is assigned a value of 1 and each pooling stop may be assigned a value of 10, and all values of stops in a trip may be added up to obtain a single mission complexity measure. An embodiment of this method works by a assigning a value to each stop based on the stop's attribute and then obtains a value for the trip by summing the values of all stops and then obtain a capacity as a function of the trip's value. In another such embodiment, the number of stops and the type of stops are supplied as inputs to a function that combines them using one or more mathematical operators such as multiply (e.g. the number of stops may be multiplied by the type of stops to yield a single measure of mission complexity).</p>
<p id="p-0105" num="0104">Although certain attributes of a mission that contribute to its complexity are discussed above for some embodiments to identify an effective capacity of a vehicle that is to perform the mission, other embodiments may use other indicators of mission complexity either additionally or as alternatives. In a first example, some embodiments use types of loading/unloading/handling equipment available at specific stops as an alternative or additional indicator of mission complexity for determining effective capacity of a vehicle. In a second example, some embodiments use spacing, airflow, and ventilation requirements of the goods to be transported as alternative or additional indicators of mission complexity that are used in determining a vehicle's effective capacity. In a third example, some embodiments use as attributes of a mission to determine a vehicle's effective capacity: pallet positions occupied by, floor space required by, and/or size and/or shape and/or weight and/or cube and/or dimensional attributes of different commodity items carried on the mission.</p>
<p id="p-0106" num="0105">Numerous modifications and adaptations of the embodiments described herein are encompassed by the scope of the invention. In some embodiments, for non-palletized planning, the computer considers the mission-dependent capacity when deciding whether or not to include shipments onto the truck or trailer. Note that the mission-dependent capacity only applies to the volume dimension of the goods being shipped in some embodiments, which means that the computer uses different effective volume capacity of the truck depending on the different type of the movement/trip, while for weight, the computer uses the maximum load weight of the truck regardless of the mission's attributes. Below lists all types of mission-dependent volume capacities used by a computer of some embodiments:
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0106">Direct move effective volume capacity</li>
        <li id="ul0002-0002" num="0107">Pool move (one-pool) effective volume capacity</li>
        <li id="ul0002-0003" num="0108">One-stop move effective volume capacity</li>
        <li id="ul0002-0004" num="0109">Two-stop move effective volume capacity</li>
        <li id="ul0002-0005" num="0110">Two-pool effective volume capacity</li>
        <li id="ul0002-0006" num="0111">Three-pool effective volume capacity
<br/>
Logic to find the mission-dependent volume capacity of the truck as programmed into such a computer is as described next. Specifically, given a certain number of stops in a TruckLoad (TL) trip, the computer first determines how many pool stops are present in this trip; secondly, it generates a mission index according to the number of pool stops and the number of non-pool stops in this trip, then finds the mission-dependent volume capacity using this mission index. The just-described mission-dependent volume capacity is used automatically, as a limit in deciding whether or not additional freight can be consolidated into this trip.
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0107" num="0112">The following APPENDIX (PSEUDOCODE) contains pseudocode and related description which form integral portions of this detailed description and are incorporated by reference herein in their entirety. This Appendix contains illustrative implementations of acts that are described above as being performed in some embodiments. Note that the following pseudocode is not written in any particular computer programming language. Instead, the pseudocode provides sufficient information for a skilled artisan to translate the pseudocode into a source code suitable for compiling into object code.</p>
<p id="h-0005" num="0000">Appendix (Pseudocode)</p>
<p id="p-0108" num="0113">Initialize an empty list of output trips (LISTA)</p>
<p id="p-0109" num="0114">Start with two lists of less than 90% TL trips (LIST<b>1</b> and LIST<b>2</b>).</p>
<p id="p-0110" num="0115">Note that all these unscheduled orders are also in USODSET and Non-Full-Direct-TL-List. USODSET is the set that keeps unscheduled orders, while SODSET is the set that keeps scheduled orders. Initially each order is unscheduled and is put into USODSET, but after the engine generates some trip(s) for that order, this order is moved from USODSET to SODSET. Non-Full-Direct-TL-List is a list of non-full (i.e. less than 90% full) direct TL trips, which are the output of simple consolidation as well as the input to the multi-stop trip generation, i.e., the multi-stop trip generation will manipulate on these non-full direct TLs to further generate some multi-stop TLs. As mentioned in the following pesudo-code&#x2014;&#x201c;each non-full-direct-TL (DTL i) in Non-Full-Direct-TL-List&#x201d;&#x2014;DTL i is a non-full direct TL trip in Non-Full-Direct-TL-List.</p>
<p id="p-0111" num="0116">While LIST<b>1</b> and LIST<b>2</b> aren't empty</p>
<p id="p-0112" num="0117">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>{</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Sort all the trips in LIST1 and LIST2 by descending order of fullness</entry>
</row>
<row>
<entry/>
<entry>Pick up the trip (t1) with highest fullness</entry>
</row>
<row>
<entry/>
<entry>Remove those orders covered by t1 from Non-Full-Direct-TL-List</entry>
</row>
<row>
<entry/>
<entry>For each non-full-direct-TL (DTL i) in Non-Full-Direct-TL-List</entry>
</row>
<row>
<entry/>
<entry>{</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>If its distance to the trip t1 is no greater than 2r (r is the</entry>
</row>
<row>
<entry/>
<entry>neighborhood radius)</entry>
</row>
<row>
<entry/>
<entry>(NOTE that DTL i's distance to t1 = the minimum distance</entry>
</row>
<row>
<entry/>
<entry>from DTL i's origin to t1's origins + the minimum distance</entry>
</row>
<row>
<entry/>
<entry>from DTL i's destination to t1's destinations)</entry>
</row>
<row>
<entry/>
<entry>{</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0000">
    <ul id="ul0004" list-style="none">
        <li id="ul0004-0001" num="0118">Add this candidate order DTL i into a PQ, with ascending order of distance to the trip t<b>1</b></li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0113" num="0119">An abbreviation &#x201c;PQ&#x201d; used above means a priority queue. Priority queue PQ is used to sort all the non-full direct TLs with ascending order of distance to trip t<b>1</b>.</p>
<p id="p-0114" num="0120">Another abbreviation &#x201c;PE&#x201d; is used below to mean a primary equipment/vehicle type, which is the primary vehicle used in this engine to generate that TL trip based on its origin to destination lane.</p>
<p id="p-0115" num="0121">
<tables id="TABLE-US-00002" num="00002">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>}</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>}</entry>
</row>
<row>
<entry/>
<entry>Iterate through the candidate non-full-direct-TL PQ</entry>
</row>
<row>
<entry/>
<entry>{</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Try to add the non-full-direct-TL DTL i into each possible</entry>
</row>
<row>
<entry/>
<entry>position in trip t1</entry>
</row>
<row>
<entry/>
<entry>(Strategy: Given a sequence of origins/destinations covered</entry>
</row>
<row>
<entry/>
<entry>by the trip t1 now, try to insert DTL i's origin/destination into</entry>
</row>
<row>
<entry/>
<entry>each possible position/leg while keeping that original</entry>
</row>
<row>
<entry/>
<entry>sequence.)</entry>
</row>
<row>
<entry/>
<entry>For each possible insertion position</entry>
</row>
<row>
<entry/>
<entry>{</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>If the new trip doesn't exceed the TL physical volume</entry>
</row>
<row>
<entry/>
<entry>limit AND there exists non-empty time window</entry>
</row>
<row>
<entry/>
<entry>intersection at any merged stop(s) AND it respects</entry>
</row>
<row>
<entry/>
<entry>LIFO (last in, first out rule)</entry>
</row>
<row>
<entry/>
<entry>{</entry>
</row>
<row>
<entry/>
<entry>Compute the total cost (= actual cost + penalty cost)</entry>
</row>
<row>
<entry/>
<entry>of the new trip</entry>
</row>
<row>
<entry/>
<entry>Record the best insertion position with the least total</entry>
</row>
<row>
<entry/>
<entry>cost of the new trip</entry>
</row>
<row>
<entry/>
<entry>}</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>}</entry>
</row>
<row>
<entry/>
<entry>If (we find a best insertion position AND total cost of the new</entry>
</row>
<row>
<entry/>
<entry>trip &#x3c; total cost of old trip tl + total cost of direct TL DTL i)</entry>
</row>
<row>
<entry/>
<entry>Add the order ODi into the best position in trip t1</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>}</entry>
</row>
<row>
<entry/>
<entry>Add the final trip t1 into LISTA</entry>
</row>
<row>
<entry/>
<entry>Remove all the orders covered by the final trip t1 from Non-Full-</entry>
</row>
<row>
<entry/>
<entry>Direct-TL-List, LIST1 and LIST2</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>}</entry>
</row>
<row>
<entry>Iterate through each trip in the list of trips (LISTA)</entry>
</row>
<row>
<entry>{</entry>
</row>
<row>
<entry>If the trip t reaches a predetermined Min-TL utilization, i.e. &#x3e;= 50% TL</entry>
</row>
<row>
<entry>Note: If so, this trip will be passed to the set-partitioning problem</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>{</entry>
</row>
<row>
<entry/>
<entry>Push TRIPi(TL, t, PE) into TRIPSET</entry>
</row>
<row>
<entry/>
<entry>If it also reaches the predetermined Full-Enough-TL threshold, i.e.</entry>
</row>
<row>
<entry/>
<entry>&#x3e;= 90% TL</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>{</entry>
</row>
<row>
<entry/>
<entry>Move all the orders within this trip from USODSET to</entry>
</row>
<row>
<entry/>
<entry>SODSET</entry>
</row>
<row>
<entry/>
<entry>}</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Else, all the orders covered by this trip remain unscheduled</entry>
</row>
<row>
<entry/>
<entry>}</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>Else, do not keep this trip</entry>
</row>
<row>
<entry>}</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0116" num="0122">Description: return the mission-dependent volume capacity of the given TL double findMissionDependentCapacity (TPSingleTruckLoad &#x26; t)</p>
<p id="p-0117" num="0123">
<tables id="TABLE-US-00003" num="00003">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>{</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Get the list of stops in this TL trip t;</entry>
</row>
<row>
<entry/>
<entry>Set counter_pool_stop = 0;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>For each stop in the list of stops</entry>
</row>
<row>
<entry>{</entry>
</row>
<row>
<entry>If it's a pool stop</entry>
</row>
<row>
<entry>counter_pool_stop = counter_pool_stop + 1;</entry>
</row>
<row>
<entry>}</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Set counter_non_pool_stop = total number of stops &#x2212;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>counter_pool_stop;</entry>
</row>
<row>
<entry>If counter_non_pool_stop is 2 AND counter_pool_stop is 0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Return direct move effective volume capacity;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Else if counter_non_pool_stop is 1 AND counter_pool_stop is 1</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Return pool move effective volume capacity;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Else if counter_non_pool_stop is 3 AND counter_pool_stop is 0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Return one-stop move effective volume capacity;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Else if counter_non_pool_stop is &#x3e;= 3 AND</entry>
</row>
<row>
<entry/>
<entry>counter_pool_stop is</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>&#x3c;= 1</entry>
</row>
<row>
<entry>Return two-stop move effective volume capacity (Note: defined</entry>
</row>
<row>
<entry>after one-</entry>
</row>
<row>
<entry>stop move);</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Else if counter_pool_stop is 2</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Return two-pool move effective volume capacity;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>Else if counter_pool_stop is &#x3e;= 3</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Return three-pool move effective volume capacity;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Else if counter_non_pool_stop is 2 and counter_pool_stop is 1</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>Return Min (pool move effective volume capacity, two-stop move</entry>
</row>
<row>
<entry>effective</entry>
</row>
<row>
<entry>volume capacity) as its effective volume capacity.</entry>
</row>
<row>
<entry>}</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0118" num="0124">Note: the pseudo code to determine if a trip stop is a pool stop or not is as follows:</p>
<p id="p-0119" num="0125">Description: return true if the given trip stop is a pool stop, otherwise return false.</p>
<p id="p-0120" num="0126">
<tables id="TABLE-US-00004" num="00004">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>bool isPoolStop (TPTripStop &#x26; s)</entry>
</row>
<row>
<entry>{</entry>
</row>
<row>
<entry>If this stop s is at a Hub (consolidation and/or deconsolidation allowed)</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>{</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>Get all the stop details (loaded or unloaded) at this stop;</entry>
</row>
<row>
<entry>Here stop details mean all the load and unload activities at this stop. For</entry>
</row>
<row>
<entry>this invention, the related details include:</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>It's either a loading or unloading activity</entry>
</row>
<row>
<entry/>
<entry>Which order to be loaded or unloaded</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>Create a set S1 to hold the unique origin(s) of the left sibling(s);</entry>
</row>
<row>
<entry>For each stop detail at this stop</entry>
</row>
<row>
<entry>{</entry>
</row>
<row>
<entry>If it's load activity for a sub-order-leg</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>{</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>If this sub-order-leg has left sibling</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>{</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>Insert the origin of left sibling sub-order-leg into S1</entry>
</row>
<row>
<entry>If S1 have more than 1 element,</entry>
</row>
<row>
<entry>Then this stop is a pool stop, return true;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>}</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>}</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>}</entry>
</row>
<row>
<entry>Create a set S2 to hold the unique destination(s) of the right sibling(s);</entry>
</row>
<row>
<entry>For each stop detail at this stop</entry>
</row>
<row>
<entry>{</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>If it's unload activity for a sub-order-leg</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>{</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="56pt" align="left"/>
<colspec colname="1" colwidth="161pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>If this sub-order-leg has right sibling</entry>
</row>
<row>
<entry/>
<entry>{</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>Insert the destination of right sibling sub-order-leg into S2;</entry>
</row>
<row>
<entry>If S2 have more than 1 element,</entry>
</row>
<row>
<entry>Then this stop is a pool stop, return true;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="56pt" align="left"/>
<colspec colname="1" colwidth="161pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>}</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>}</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>}</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>}</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>If we reach here, this stop is not a pool stop, return</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>false;</entry>
</row>
<row>
<entry>}</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0121" num="0127">Mission-dependent capacity is considered by the computer as follows. In split large order, the computer uses the direct move effective volume capacity of the truck to do splitting. In simple consolidation, whenever the computer tries to add a shipment to an existing truckload, it calls the following API checkVehicleCapacity( ) for the vehicle capacity check.</p>
<p id="p-0122" num="0128">Description: check the given TL trip against the physical volume limit of the vehicle, and the effective vehicle capacities.</p>
<p id="h-0006" num="0000">void checkVehicleCapacity (TPSingleTruckLoad &#x26; t)</p>
<p id="p-0123" num="0129">
<tables id="TABLE-US-00005" num="00005">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>{</entry>
</row>
<row>
<entry>First, make sure that it doesn't exceed the physical volume limit of the</entry>
</row>
<row>
<entry>truck (otherwise, discard this trip);</entry>
</row>
<row>
<entry>Second, find the max weight capacity, max pallet capacity, and the</entry>
</row>
<row>
<entry>mission-dependent volume capacity of the truck by calling the API</entry>
</row>
<row>
<entry>findMissionDependentCapacity( );</entry>
</row>
<row>
<entry>Then, check if there's any violation against such capacities, if so, compute</entry>
</row>
<row>
<entry>the penalty cost using such violation.</entry>
</row>
<row>
<entry>}</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0124" num="0130">In single-depot multi-stop trip building, the computer tries to insert a trip stop into a single-depot TL; while in pick-up-drop-off multi-stop trip building, the computer tries to add a direct TL to any existing multi-stop TL. In each case, the computer tries the different options for the insertion. For each option of the insertion, the computer calls the above API checkVehicleCapacity( ) for the vehicle capacity check.</p>
<p id="p-0125" num="0131">In selecting a carrier (or truckload service), for each TL trip, the computer first populates a list of candidate carriers/carrier services, then does repair based on carrier capacity and contractual commitments. In this stage, the mission-dependent capacity is involved when populating each candidate carrier/carrier service, i.e., for any candidate carrier/carrier service, the computer calls the above API checkVehicleCapacity( ) for the vehicle capacity check.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer-implemented method of planning movement of freight using vehicles, the computer-implemented method comprising:
<claim-text>automatically determining unloading/loading complexity of a mission in terms of a mission type, by using a first formula or a first table or a first logic based on a number of pooling stops and a number of non-pooling stops of the mission;</claim-text>
<claim-text>wherein each stop is to be made in executing a plurality of orders for movement of freight to be delivered by a vehicle of a specific size performing the mission;</claim-text>
<claim-text>automatically determining one effective vehicle capacity among multiple effective vehicle capacities of the vehicle, by using a second formula or a second table or a second logic that provides different values for different complexity missions, the second formula or the second table or the second logic being based on the mission type and the specific size of the vehicle;</claim-text>
<claim-text>wherein the multiple effective vehicle capacities progressively reduce the amount of freight that can be moved by the vehicle, as the number of pooling stops and the number of non-pooling stops increase;</claim-text>
<claim-text>wherein each effective vehicle capacity, in the multiple effective vehicle capacities, is less than the specific size of the vehicle;</claim-text>
<claim-text>a computer automatically deciding on feasibility of performing the mission using the vehicle of the specific size, by comparing the one effective vehicle capacity and a maximum of total freights to be carried by the vehicle at stops in the mission; and</claim-text>
<claim-text>said computer automatically storing in a memory, a result obtained by said computer automatically deciding on feasibility.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein:
<claim-text>the automatically deciding on feasibility comprises computing a penalty cost that depends on a difference between the maximum and the one effective vehicle capacity.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising:
<claim-text>automatically picking from among all orders for freight movement, said plurality of orders to be consolidated into said mission, when the orders being picked are found by said computer to have at least a partial overlap with one another in respective paths.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising:
<claim-text>automatically retrieving from a database, said all orders for freight movement including the plurality of orders, by using a database management system; and</claim-text>
<claim-text>automatically storing the mission in said database.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising:
<claim-text>receiving as inputs through fields in a graphical user interface, said multiple effective vehicle capacities of said vehicle.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein:
<claim-text>the first table is a look up table.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein:
<claim-text>the second table is a look up table.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein:
<claim-text>the mission type is determined by use of the first formula.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein:
<claim-text>the one effective vehicle capacity is determined by use of the second formula.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein:
<claim-text>the one effective vehicle capacity is determined by use of the second logic.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. One or more non-transitory computer-readable storage media comprising computer executable instructions, when executed by at least one processor perform a computer-implemented method, the computer executable instructions comprising:
<claim-text>instructions to determine unloading/loading complexity of a mission in terms of a mission type, by using a first formula or a first table or a first logic based on a number of pooling stops and a number of non-pooling stops of the mission;</claim-text>
<claim-text>wherein each stop is to be made in executing a plurality of orders for movement of freight to be delivered by a vehicle of a specific size performing the mission;</claim-text>
<claim-text>instructions to determine one effective vehicle capacity among multiple effective vehicle capacities of the vehicle by using a second formula or a second table or a second logic that provides different values for different complexity missions, the second formula or the second table or the second logic being based on the mission type and the specific size of the vehicle;</claim-text>
<claim-text>wherein the multiple effective vehicle capacities progressively reducing the amount of freight that can be moved by the vehicle, as the number of pooling stops and the number of non-pooling stops increase;</claim-text>
<claim-text>wherein each effective vehicle capacity, in the multiple effective vehicle capacities, is less than the specific size of the vehicle;</claim-text>
<claim-text>instructions to decide on feasibility of performing the mission using the vehicle of the specific size, by comparing the one effective vehicle capacity and a maximum of total freights to be carried by the vehicle at stops in the mission; and</claim-text>
<claim-text>instructions to store in a memory, a result of obtained by execution of the instructions to decide on feasibility.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The one or more non-transitory computer-readable storage media of <claim-ref idref="CLM-00011">claim 11</claim-ref> further comprising:
<claim-text>a graphical user interface comprising fields to receive input on said multiple effective vehicle capacities.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The one or more non-transitory computer-readable storage media of <claim-ref idref="CLM-00011">claim 11</claim-ref> wherein:
<claim-text>the instructions to decide on feasibility comprise instructions to compute a penalty cost that depends on a difference between the maximum and the one effective vehicle capacity.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The one or more non-transitory computer-readable storage media of <claim-ref idref="CLM-00011">claim 11</claim-ref> further comprising:
<claim-text>instructions to pick from among all orders for freight movement, said plurality of orders to be consolidated into said mission, when the orders being picked are found to have at least a partial overlap with one another in respective paths.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A computer comprising:
<claim-text>a processor and a memory coupled to the processor, the memory being encoded with a computer program comprising instructions executable by said processor to prepare missions for movement of freight using vehicles, wherein said instructions are at least to:</claim-text>
<claim-text>determine unloading/loading complexity of a mission in terms of a mission type, by using a first formula or a first table or a first logic based on a number of pooling stops and a number of non-pooling stops of the mission;</claim-text>
<claim-text>wherein each stop is to be made in executing a plurality of orders for movement of freight to be delivered by a vehicle of a specific size performing the mission;</claim-text>
<claim-text>automatically determine one effective vehicle capacity among multiple effective vehicle capacities of the vehicle by using a second formula or a second table or a second logic that provides different values for different complexity missions, the second formula or the second table or the second logic being based on the mission type and the specific size of the vehicle;</claim-text>
<claim-text>wherein the multiple effective vehicle capacities progressively reduce the amount of freight that can be moved by the vehicle, as the number of pooling stops and the number of non-pooling stops increase;</claim-text>
<claim-text>wherein each effective vehicle capacity, in the multiple effective vehicle capacities, is less than the specific size of the vehicle;</claim-text>
<claim-text>decide on feasibility of performing the mission, using the vehicle of the specific size, by comparing the one effective vehicle capacity and a maximum of total freights to be carried by the vehicle at stops in the mission; and</claim-text>
<claim-text>store in the memory, a result obtained by execution of the instructions to decide on feasibility.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The computer of <claim-ref idref="CLM-00015">claim 15</claim-ref> further comprising:
<claim-text>a graphical user interface comprising fields to receive input on said multiple effective vehicle capacities.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The computer of <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein the instructions are further to:
<claim-text>decide on feasibility comprise instructions to compute a penalty cost that depends on a difference between the maximum and the one effective vehicle capacity.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The computer of <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein the instructions are further to:
<claim-text>pick from among all orders for freight movement, said plurality of orders to be consolidated into said mission, when the orders being picked are found by said computer to have at least a partial overlap with one another in respective paths.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. An apparatus for preparing missions for movement of freight using vehicles, the apparatus comprising:
<claim-text>means for determining unloading/loading complexity of a mission in terms of a mission type, by using a first formula or a first table or a first logic based on a number of pooling stops and a number of non-pooling stops of the mission;</claim-text>
<claim-text>wherein each stop is to be made in executing a plurality of orders for movement of freight to be delivered by a vehicle of a specific size performing the mission;</claim-text>
<claim-text>means for automatically determining one effective vehicle capacity among multiple effective vehicle capacities of the vehicle by using a second formula or a second table or a second logic that provides different values for different complexity missions, the second formula or the second table or the second logic being based on the mission type and the specific size of the vehicle;</claim-text>
<claim-text>wherein the multiple effective vehicle capacities progressively reduce the amount of freight that can be moved by the vehicle, as the number of pooling stops and the number of non-pooling stops increase;</claim-text>
<claim-text>wherein each effective vehicle capacity, in the multiple effective vehicle capacities, is less than the specific size of the vehicle;</claim-text>
<claim-text>means for deciding on feasibility of performing the mission using the vehicle of the specific size, by comparing the one effective vehicle capacity and a maximum of total freights to be carried by the vehicle at stops in the mission; and</claim-text>
<claim-text>means for storing a result obtained by said means for deciding on feasibility.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The apparatus of <claim-ref idref="CLM-00019">claim 19</claim-ref> further comprising:
<claim-text>a graphical user interface comprising fields to receive input on said multiple effective vehicle capacities.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
