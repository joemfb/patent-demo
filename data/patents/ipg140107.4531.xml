<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625615-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625615</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12992164</doc-number>
<date>20090518</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2008-129157</doc-number>
<date>20080516</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>213</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>28</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20110101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>56</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>370401</main-classification>
</classification-national>
<invention-title id="d2e71">PCI express switch, PCI express system, and network control method</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>7743189</doc-number>
<kind>B2</kind>
<name>Brown et al.</name>
<date>20100600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710104</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7743197</doc-number>
<kind>B2</kind>
<name>Chavan et al.</name>
<date>20100600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710314</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>8103810</doc-number>
<kind>B2</kind>
<name>Brown et al.</name>
<date>20120100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710 62</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>JP</country>
<doc-number>10-210069</doc-number>
<kind>A</kind>
<date>19980800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>JP</country>
<doc-number>2005250975</doc-number>
<kind>A</kind>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>JP</country>
<doc-number>2005317021</doc-number>
<kind>A</kind>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>JP</country>
<doc-number>2007067738</doc-number>
<kind>A</kind>
<date>20070300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>JP</country>
<doc-number>2007241526</doc-number>
<kind>A</kind>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>JP</country>
<doc-number>2008046722</doc-number>
<kind>A</kind>
<date>20080200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>JP</country>
<doc-number>2008078887</doc-number>
<kind>A</kind>
<date>20080400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>JP</country>
<doc-number>2008171413</doc-number>
<kind>A</kind>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>WO</country>
<doc-number>2009054525</doc-number>
<kind>A</kind>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00013">
<othercit>Multi-Root I/O Virtualization and Sharing, Revision 0.9, mr-lov-09-2007-11-07.doc, PCISIG, Nov. 7, 2007, pp. 15-33.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00014">
<othercit>J. Suzuki et al., &#x201c;ExpressEther&#x2014;Ethernet-Based Virtualization Technology for Reconfigurable Hardware Platform&#x201d;, Proceedings of the 14th IEEE Symposium on High-Performance Interconnects, Aug. 2006.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>17</number-of-claims>
<us-exemplary-claim>16</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>33</number-of-drawing-sheets>
<number-of-figures>33</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110064089</doc-number>
<kind>A1</kind>
<date>20110317</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Hidaka</last-name>
<first-name>Youichi</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Yoshikawa</last-name>
<first-name>Takashi</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Higuchi</last-name>
<first-name>Junichi</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Suzuki</last-name>
<first-name>Jun</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Hidaka</last-name>
<first-name>Youichi</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Yoshikawa</last-name>
<first-name>Takashi</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Higuchi</last-name>
<first-name>Junichi</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Suzuki</last-name>
<first-name>Jun</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>NEC Corporation</orgname>
<role>03</role>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Sheikh</last-name>
<first-name>Ayaz</first-name>
<department>2476</department>
</primary-examiner>
<assistant-examiner>
<last-name>Wong</last-name>
<first-name>Blanche</first-name>
</assistant-examiner>
</examiners>
<pct-or-regional-filing-data>
<document-id>
<country>WO</country>
<doc-number>PCT/JP2009/059125</doc-number>
<kind>00</kind>
<date>20090518</date>
</document-id>
<us-371c124-date>
<date>20101111</date>
</us-371c124-date>
</pct-or-regional-filing-data>
<pct-or-regional-publishing-data>
<document-id>
<country>WO</country>
<doc-number>WO2009/139489</doc-number>
<kind>A </kind>
<date>20091119</date>
</document-id>
</pct-or-regional-publishing-data>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Provided are a first PCI-PCI bridge that handles Multi Root to connect to a plurality of root complexes; a second PCI-PCI bridge that connects to an endpoint; a virtual PCI Express switch that performs a switching process between the first and second PCI-PCI bridges; and a network control device that transfers data that is to be processed in the virtual PCI Express switch to an external switch through a network without passing through a PCI-PCI bridge.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="134.87mm" wi="170.01mm" file="US08625615-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="169.25mm" wi="158.41mm" orientation="landscape" file="US08625615-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="195.41mm" wi="151.55mm" orientation="landscape" file="US08625615-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="177.63mm" wi="158.33mm" orientation="landscape" file="US08625615-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="195.66mm" wi="155.70mm" orientation="landscape" file="US08625615-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="237.74mm" wi="157.99mm" orientation="landscape" file="US08625615-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="227.33mm" wi="153.08mm" orientation="landscape" file="US08625615-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="208.28mm" wi="152.65mm" orientation="landscape" file="US08625615-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="237.24mm" wi="143.68mm" orientation="landscape" file="US08625615-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="235.80mm" wi="139.95mm" orientation="landscape" file="US08625615-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="188.81mm" wi="158.16mm" file="US08625615-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="189.06mm" wi="125.81mm" file="US08625615-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="239.78mm" wi="157.23mm" orientation="landscape" file="US08625615-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="229.70mm" wi="153.25mm" orientation="landscape" file="US08625615-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="219.46mm" wi="160.87mm" orientation="landscape" file="US08625615-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="232.16mm" wi="156.97mm" orientation="landscape" file="US08625615-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="228.94mm" wi="159.17mm" orientation="landscape" file="US08625615-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="234.53mm" wi="141.39mm" orientation="landscape" file="US08625615-20140107-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="235.63mm" wi="141.82mm" orientation="landscape" file="US08625615-20140107-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="135.21mm" wi="149.78mm" file="US08625615-20140107-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="124.12mm" wi="149.94mm" file="US08625615-20140107-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="237.57mm" wi="110.07mm" orientation="landscape" file="US08625615-20140107-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00022" num="00022">
<img id="EMI-D00022" he="240.20mm" wi="109.64mm" orientation="landscape" file="US08625615-20140107-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00023" num="00023">
<img id="EMI-D00023" he="84.92mm" wi="149.10mm" file="US08625615-20140107-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00024" num="00024">
<img id="EMI-D00024" he="192.19mm" wi="154.94mm" orientation="landscape" file="US08625615-20140107-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00025" num="00025">
<img id="EMI-D00025" he="102.79mm" wi="145.88mm" file="US08625615-20140107-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00026" num="00026">
<img id="EMI-D00026" he="192.70mm" wi="126.32mm" orientation="landscape" file="US08625615-20140107-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00027" num="00027">
<img id="EMI-D00027" he="84.41mm" wi="150.79mm" file="US08625615-20140107-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00028" num="00028">
<img id="EMI-D00028" he="197.78mm" wi="123.53mm" orientation="landscape" file="US08625615-20140107-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00029" num="00029">
<img id="EMI-D00029" he="103.46mm" wi="149.61mm" file="US08625615-20140107-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00030" num="00030">
<img id="EMI-D00030" he="200.41mm" wi="143.17mm" orientation="landscape" file="US08625615-20140107-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00031" num="00031">
<img id="EMI-D00031" he="145.80mm" wi="157.06mm" file="US08625615-20140107-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00032" num="00032">
<img id="EMI-D00032" he="147.91mm" wi="162.14mm" file="US08625615-20140107-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00033" num="00033">
<img id="EMI-D00033" he="174.24mm" wi="158.67mm" orientation="landscape" file="US08625615-20140107-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<p id="p-0002" num="0001">The present application is the National Phase of PCT/JP2009/059125, filed May 18, 2009, which claims priority from Japanese Patent Application No. 2008-129157 filed on May 16, 2008, the entire contents of which being incorporated herein by reference.</p>
<heading id="h-0001" level="1">TECHNICAL FIELD</heading>
<p id="p-0003" num="0002">The present invention relates to a PCI Express switch and a PCI Express system that extend PCI Express interfaces of a computing device and a networking device used in a computer and a network device. The present invention also relates to a network control method in the PCI Express system.</p>
<heading id="h-0002" level="1">BACKGROUND ART</heading>
<p id="p-0004" num="0003">Peripheral Component Interconnect (PCI) is widely used as a bus standard for connecting computing devices, such as a central processing unit (CPU), hard disk device and graphic controller, and for connecting networking devices, such as a forwarding engine and network controller. PCI Express is standardized as a next-generation PCI standard: According to PCI Express, a parallel bus of PCI is turned into a serial one and communication takes place in a packet method.</p>
<p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram illustrating one example of the configuration of a computer system that uses PCI Express. As shown in <figref idref="DRAWINGS">FIG. 1</figref>, the computer system that uses PCI Express includes a CPU <b>901</b>, a root complex <b>902</b>, a memory <b>903</b>, a PCI Express switch <b>904</b>, and endpoints <b>905</b>, <b>906</b> and <b>907</b>.</p>
<p id="p-0006" num="0005">The CPU <b>901</b> performs a central processing process of a computer. The root complex <b>902</b> is a root complex of the PCI Express mounted on a host bridge that controls the I/O access from the CPU <b>901</b>. The memory <b>903</b> is connected to the host bridge. The PCI Express switch <b>904</b> is connected to the root complex <b>902</b>. The endpoints <b>905</b>, <b>906</b> and <b>907</b> are the endpoints of the PCI Express mounted on computing devices that is connected to the PCI Express switch <b>904</b>.</p>
<p id="p-0007" num="0006">As described above, in the computer system that uses PCI Express, there is only one root complex <b>902</b> to which the CPU <b>901</b> that manages a memory space of the PCI Express can be connected. Therefore, with the above configuration, it is not possible to form a system in which a device is shared by a plurality of computing systems.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram illustrating an example of the internal configuration of the PCI Express switch <b>904</b>. As shown in <figref idref="DRAWINGS">FIG. 2</figref>, the PCI Express switch <b>904</b> includes an upstream PCI-PCI bridge <b>9041</b>, which is connected in the direction of the root complex; and downstream PCI-PCI bridges <b>9042</b>, <b>9043</b> and <b>9044</b>, which are connected in the directions of the endpoints. The PCI-PCI bridges <b>9041</b>, <b>9042</b>, <b>9043</b> and <b>9044</b> are connected together through a PCI Express switch internal bus <b>9045</b>.</p>
<p id="p-0009" num="0008">For data transferred through the PCI Express system and the PCI Express switch internal bus <b>9045</b>, a PCI Express frame is used: The PCI Express frame is managed on an address space of the CPU <b>901</b>. In the downstream PCI-PCI bridges <b>9042</b>, <b>9043</b> and <b>9044</b> connected to the upstream PCI-PCI bridge <b>9041</b> and the endpoints, only for the PCI Express frame corresponding to an address set by the CPU <b>901</b>, data is transferred to the root complex <b>902</b> or the endpoints <b>905</b>, <b>906</b> and <b>907</b>.</p>
<p id="p-0010" num="0009">As described above, in general, the PCI Express system has the structures of a frame transfer method and PCI express switch that are based on the assumption that there is only one CPU <b>901</b> on the system. Therefore, in the PCI Express system, with the above configuration, it is not possible to connect a plurality of CPUs on the system.</p>
<p id="p-0011" num="0010">Therefore, a method of connecting a plurality of CPUs on a PCI Express system has been proposed. For example, what is disclosed in PTL1 is a method of connecting a plurality of CPUs on a system. <figref idref="DRAWINGS">FIG. 3</figref> is a block diagram illustrating the configuration of a system that can be realized by the method disclosed in PTL1. <figref idref="DRAWINGS">FIG. 4</figref> is a block diagram illustrating an example of the configuration of a settable PCI Express switch <b>111</b> disclosed in PTL1.</p>
<p id="p-0012" num="0011">The PCI Express switch <b>904</b> shown in <figref idref="DRAWINGS">FIGS. 1 and 2</figref> has one internal bus <b>9045</b> and one upstream PCI-PCI bridge <b>9041</b>. On the other hand, the settable PCI Express switch <b>911</b> shown in <figref idref="DRAWINGS">FIGS. 3 and 4</figref> includes a PCI Express switch internal bus <b>9116</b>, which corresponds to an upstream PCI-PCI bridge <b>9111</b>; and a PCI Express switch internal bus <b>9117</b>, which corresponds to an upstream PCI-PCI bridge <b>9112</b>. That is, the number of CPUs <b>901</b> and <b>908</b> being connected equals the number of internal buses <b>9116</b> and <b>9117</b> prepared, which correspond to the upstream PCI-PCI bridges <b>9111</b> and <b>9112</b>. The connection relationship between the internal buses <b>9116</b> and <b>9117</b>, a downstream PCI-PCI bridge <b>9113</b>, a downstream PCI-PCI bridge <b>9114</b> and a downstream PCI-PCI bridge <b>9115</b> is controlled by a bridge controller logic <b>9118</b>. With the above configuration, it is possible to connect a plurality of CPUs.</p>
<p id="p-0013" num="0012">For example, what is disclosed in NPL1 is another method of connecting a plurality of CPUs on a system. <figref idref="DRAWINGS">FIG. 5</figref> is a block diagram illustrating the configuration of a system that can be realized by the method disclosed in NPL1. <figref idref="DRAWINGS">FIGS. 6 and 7</figref> are block diagrams each illustrating an example of the configuration of a MRA (Multi-Root Aware)-PCI Express switch disclosed in NPL1.</p>
<p id="p-0014" num="0013">In a system that uses MRA-PCI Express switches, as shown in <figref idref="DRAWINGS">FIG. 5</figref>, it is necessary to put multi-root PCI manager software (MR-PCIM) <b>952</b> on any one of CPUs (which is a CPU <b>901</b> in the case of <figref idref="DRAWINGS">FIG. 5</figref>) that are connected to the switch. The MR-PCIM <b>952</b> manages the configuration state of the switch. It is also possible to connect I/O devices, such as MR endpoints <b>9505</b> and <b>9506</b>, that handle access from a plurality of root complexes <b>902</b>, <b>909</b> and <b>9021</b>. The setting of the MRA-PCI Express switches is performed from the multi-root PCI manager software <b>952</b>. Therefore, it is possible for a plurality of the root complexes <b>902</b>, <b>909</b> and <b>9021</b> to connect. It is therefore possible for a plurality of the root complexes <b>902</b>, <b>909</b> and <b>9021</b> to access devices of the MR endpoints <b>9505</b> and <b>9506</b>. Incidentally, hereinafter, it may be explained that the MR-PCIM <b>952</b> executes. However, more specifically, the CPU <b>901</b> operates in accordance with the MR-PCIM <b>952</b>, which is software.</p>
<p id="p-0015" num="0014">The following describes the configuration of a MRA-PCI Express switch. Incidentally, what is shown in <figref idref="DRAWINGS">FIG. 5</figref> as an example is the configuration of a system where two MRA-PCI Express switches are used. <figref idref="DRAWINGS">FIGS. 6 and 7</figref> show the internal configuration of MRA-PCI Express switches <b>9511</b> and <b>9512</b>.</p>
<p id="p-0016" num="0015">The MRA-PCI Express switch <b>9511</b> includes PCI-PCI bridges <b>95111</b>, <b>95112</b>, <b>95122</b>, <b>95113</b>, <b>95114</b> and <b>95115</b>, which are different from the PCI Express switch <b>904</b> shown in <figref idref="DRAWINGS">FIGS. 1 and 2</figref>, in order to accommodate a plurality of the root complexes <b>902</b> and <b>909</b> and the MR endpoint <b>9505</b>. The MRA-PCI Express switch <b>9511</b> also includes virtual PCI Express switches <b>95116</b>, <b>95117</b>, <b>95118</b> and <b>95119</b>, which perform a switching process between bridges; a MRA controller logic unit <b>95120</b>, which is set and controlled by the MR-PCIM <b>952</b>; and a setting register <b>95121</b>, in which the setting information thereof is stored.</p>
<p id="p-0017" num="0016">Similarly, another MRA-PCI Express switch <b>9512</b>, which is provided to expand the number of connection ports, includes PCI-PCI bridges <b>95123</b>, <b>95124</b> and <b>95133</b>, which are different from the PCI Express switch <b>904</b> shown in <figref idref="DRAWINGS">FIGS. 1 and 2</figref>. The MRA-PCI Express switch <b>9512</b> also includes virtual PCI Express switches <b>95126</b>, <b>95127</b> and <b>95129</b>, which perform a switching process between bridges; a MRA controller logic unit <b>95130</b>, which is set and controlled by the MR-PCIM <b>952</b>; and a setting register <b>95131</b>, in which the setting information thereof is stored.</p>
<heading id="h-0003" level="1">CITATION LIST</heading>
<heading id="h-0004" level="1">Patent Literature</heading>
<p id="p-0018" num="0000">
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0017">{PTL 1} JP-A-2005-317021 (Page 1, FIG. 3)</li>
</ul>
</p>
<heading id="h-0005" level="1">Non-Patent Literature</heading>
<p id="p-0019" num="0000">
<ul id="ul0002" list-style="none">
    <li id="ul0002-0001" num="0018">{NPL 1} Multi-Root I/O Virtualization and Sharing Specification Revision 0.9, PCI-SIG, Nov. 7, 2007, pp. 30</li>
</ul>
</p>
<heading id="h-0006" level="1">SUMMARY OF INVENTION</heading>
<heading id="h-0007" level="1">Technical Problem</heading>
<p id="p-0020" num="0019">When the configuration realized by the method disclosed in PTL1 is used, the buses inside the PCI Express switch <b>911</b> are completely separated. Therefore, during the operation, in terms of logic, the above is equivalent to the situation where there is a plurality of separate PCI Express systems, each shown in <figref idref="DRAWINGS">FIGS. 1 and 2</figref>. In order to increase the number of ports with the use of the PCI Express switch <b>911</b> that can be set, a tree of buses that are completely separated is formed by connecting the buses in a multi-stage structure in accordance with the PCI Express specifications.</p>
<p id="p-0021" num="0020">When the method disclosed in NPL1 is used, a similar tree to that of the PCI Express shown in <figref idref="DRAWINGS">FIGS. 1 and 2</figref> is formed for each of a plurality of root complexes <b>902</b>, <b>909</b> and <b>9021</b> in the MRA-PCI Express switches <b>9511</b> and <b>9512</b>. Therefore, as for which virtual PCI Express switch is used for each of the root complexes <b>902</b>, <b>909</b> and <b>9021</b>, it is necessary for VH numbers to be assigned in order to use a plurality of PCI-PCI bridges. Incidentally, in this case, a virtual PCI Express switch does not interfere with other virtual PCI Express switches because a switching process is performed for each virtual PCI Express switch.</p>
<p id="p-0022" num="0021">In a PCI-PCI bridge that handles MR, a VH number is assigned, and it is taken into account that a plurality of PCI-PCI bridges is connected to one link. For different VH numbers, such operations as separating credit control and configuration information are performed, and a plurality of PCI-PCI bridge utilization numbers is displayed on one port.</p>
<p id="p-0023" num="0022">The above setting is performed by the MR-PCIM <b>952</b> for the setting registers <b>95121</b> and <b>95131</b>, which are control information of the MRA controller logic unit. Therefore, assignment is performed. <figref idref="DRAWINGS">FIGS. 8 and 9</figref> are explanatory diagrams illustrating examples of the setting of the setting registers <b>95121</b> and <b>95131</b> of the MRA-PCI Express switches <b>9511</b> and <b>9512</b>. In the example shown in <figref idref="DRAWINGS">FIGS. 5 to 7</figref>, the MR-PCIM <b>952</b> is connected to a port <b>1</b> (Port <b>1</b>) that is close to the CPU <b>901</b> and the root complex <b>902</b>.</p>
<p id="p-0024" num="0023">The MRA-PCI Express switches <b>9511</b> and <b>9512</b> are MR-PCI-PCI bridges for the setting from the MR-PCIM <b>952</b> and use a path with a number of VH<b>0</b>.</p>
<p id="p-0025" num="0024">The following describes the setting information of the setting registers <b>95121</b> and <b>95131</b>. For each of the ports, the setting registers <b>95121</b> and <b>95131</b> store information used to form, for a virtual PCI Express switch number, a virtual PCI Express switch thereof, switch port utilization numbers, utilization VH numbers and UP/Down (DN) information representing whether the bridge is an upstream PCI-PCI bridge or downstream PCI-PCI bridge.</p>
<p id="p-0026" num="0025">As shown in <figref idref="DRAWINGS">FIG. 8</figref>, in the setting register <b>95121</b>, for the virtual PCI Express switch <b>95116</b> (Switch <b>1</b>), in the switch number <b>1</b>, &#x201c;VH number: VH<b>0</b>: Upstream PCI-PCI bridge: UP&#x201d; is set in the case of port <b>1</b> (Port <b>1</b>). &#x201c;VH<b>0</b>:DN&#x201d; is set in the case of port <b>3</b> (Port <b>3</b>). &#x201c;No VH number: N/A (which is regarded as a typical PCIe port)&#x201d; is set in the case of port <b>4</b> (Port <b>4</b>). &#x201c;VH<b>0</b>: DN&#x201d; is set in the case of port <b>6</b> (Port <b>6</b>). That is, in the example shown in <figref idref="DRAWINGS">FIG. 8</figref>, the setting information of the setting register <b>95121</b> enables the PCI-PCI bridge <b>95111</b> that handles MR, the virtual PCI Express switch <b>95116</b>, the downstream PCI-PCI bridge <b>95113</b> that handles MR, the MR endpoint <b>9505</b>, the downstream PCI-PCI bridge <b>95114</b>, the endpoint <b>906</b> and the downstream PCI-PCI bridge <b>95122</b> that handles MR to be accessed from the root complex <b>902</b>.</p>
<p id="p-0027" num="0026">Moreover, the setting of the setting register <b>95131</b> of the MRA-PCI Express switch <b>9512</b> makes it possible to access beyond the downstream PCI-PCI bridge <b>95122</b>. As shown in <figref idref="DRAWINGS">FIG. 9</figref>, in the setting register <b>95131</b>, for the virtual PCI Express switch <b>95127</b> (Switch <b>2</b>), &#x201c;VH<b>0</b>: DN&#x201d; is set in the case of port <b>2</b> (Port <b>2</b>). &#x201c;VH<b>0</b>:UP&#x201d; is set in the case of port <b>3</b> (Port <b>3</b>). Accordingly, beyond the downstream PCI-PCI bridge <b>95122</b> that handles MR, the following can be accessed from the root complex <b>902</b>: the downstream PCI-PCI bridge <b>95124</b> that handles MR, the virtual PCI Express switch <b>95127</b> (Switch <b>2</b>), the downstream PCI-PCI bridge <b>95133</b> that handles MR, and the MR endpoint <b>9506</b>.</p>
<p id="p-0028" num="0027">Similarly, the access ranges of the virtual PCI Express switch <b>95117</b> (Switch <b>2</b>), the virtual PCI Express switch <b>95118</b> (Switch <b>3</b>) and the virtual PCI Express switch <b>95126</b> (Switch <b>1</b>) are set in the setting registers <b>95121</b> and <b>95131</b>.</p>
<p id="p-0029" num="0028">Thanks to the above setting, a PCI tree shown in <figref idref="DRAWINGS">FIG. 10</figref> is assembled for the I/O device for the CPU <b>901</b>. For the CPU <b>9011</b>, a PCI tree shown in <figref idref="DRAWINGS">FIG. 11</figref> is assembled. In <figref idref="DRAWINGS">FIGS. 10 and 11</figref>, I/O represents an I/O device, DN means &#x201c;down&#x201d;, and P2P means &#x201c;Peer to Peer.&#x201d;</p>
<p id="p-0030" num="0029">In general, in order to connect one I/O device of PCI Express, one downstream PCI-PCI bridge is required. However, when a MRA-PCI Express switch is used, it is necessary to have a PCI-PCI bridge to connect switches. Therefore, even if there is one I/O device, an upstream PCI-PCI bridge and a downstream PCI-PCI bridge are uselessly connected. Therefore, the problem is that as the number of I/O devices increases, it takes more time to configure a PCI-PCI bridge and start the BIOS. The problem of the longer BIOS start time similarly arises with the settable PCI Express switch disclosed in PTL1.</p>
<p id="p-0031" num="0030">When a MRA-PCI Express switch is used, another problem is that a VH number between switches needs to be set. Therefore, the MR-PCIM <b>952</b> needs to manage a connection link between switches for each root complex in addition to the number of I/O devices connected. Therefore, it takes more time to initialize the MR-PCIM <b>952</b>. In this case, the MRA-PCI Express switch <b>9512</b> cannot perform the setting of a port at all that is connected to another root complex to which the MR-PCIM <b>952</b> is not connected until the initialization process (a process of examining the topology of switches and connected devices) is completed by the MR-PCIM <b>952</b>. Therefore, as it takes more time to initialize, the operational performance of the system deteriorates significantly.</p>
<p id="p-0032" num="0031">When the MR endpoint <b>9506</b> is accessed from the CPU <b>901</b>, the upstream/downstream PCI-PCI bridge <b>95122</b> acts as a downstream PCI-PCI bridge. When the MR endpoint <b>9505</b> is accessed from the CPU <b>9011</b>, the upstream/downstream PCI-PCI bridge <b>95122</b> needs to act as an upstream PCI-PCI bridge. Accordingly, the problem is that the circuit of the PCI-PCI bridge acting as an upstream or downstream bridge becomes more complicated, resulting in an increase in the size of the circuit. If there are two or more connection links between switches, there is a fear that a loop structure may be formed depending on the upstream or downstream setting of a connection position. Therefore, it is not possible to appropriately form a tree of PCI Express.</p>
<p id="p-0033" num="0032">As described above, in a system that uses the PCI Express switch disclosed in PTL1 or PTL2, a PCI-PCI bridge is installed to connect switches together. Even if there is one I/O device, the problem is that an upstream PCI-PCI bridge and a downstream PCI-PCI bridge are connected uselessly. Accordingly, as the number of I/O devices to be housed in a system increases, PCI-PCI bridges are connected uselessly. Therefore, the problem is that it takes more time to configure the PCI-PCI bridges and to start the BIOS.</p>
<p id="p-0034" num="0033">An exemplary object of the present invention is to provide a PCI Express switch, a PCI Express system and a network control method that make it possible to house an I/O device without passing through a PCI-PCI bridge in connecting switches in a PCI Express switch that houses a plurality of root complexes as well as to reduce the increase of the time required to start the BIOS.</p>
<heading id="h-0008" level="1">Solution to Problem</heading>
<p id="p-0035" num="0034">An exemplary PCI Express switch of a first aspect of the present invention includes: a first PCI-PCI bridge that handles Multi Root to connect to a plurality of root complexes; a second PCI-PCI bridge that connects to an endpoint; a virtual PCI Express switch that performs a switching process between the first and second PCI-PCI bridges; and a network control device that transfers data that is to be processed in the virtual PCI Express switch to an external switch through a network without passing through a PCI-PCI bridge.</p>
<p id="p-0036" num="0035">An exemplary PCI Express system of a second aspect of the present invention includes a first PCI Express switch and a second PCI Express switch, wherein the first PCI Express switch includes: a first PCI-PCI bridge that handles Multi Root to connect to a plurality of root complexes; a second PCI-PCI bridge that connects to an endpoint; a virtual PCI Express switch that performs a switching process between the first and second PCI-PCI bridges; and a network control device that transfers data that is to be processed in the virtual PCI Express switch to the second PCI Express switch through a network without passing through a PCI-PCI bridge.</p>
<p id="p-0037" num="0036">An exemplary network control method of a third aspect of the present invention includes the process of, with a PCI Express switch including a first PCI-PCI bridge that handles Multi Root to connect to a plurality of root complexes, a second PCI-PCI bridge that connects to an endpoint and a virtual PCI Express switch that performs a switching process between the first and second PCI-PCI bridges, allowing the PCI Express switch to transfer data that is to be processed in the virtual PCI Express switch to an external PCI Express switch through a network without passing through a PCI-PCI bridge.</p>
<heading id="h-0009" level="1">Advantageous Effects of Invention</heading>
<p id="p-0038" num="0037">According to the present invention, it is possible to house an I/O device without passing through a PCI-PCI bridge in connecting switches in an PCI Express switch that houses a plurality of root complexes as well as to reduce the increase of the time required to start the BIOS.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0010" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 1</figref> A block diagram illustrating one example of the configuration of a computer system that uses PCI Express.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 2</figref> A block diagram illustrating an example of the internal configuration of a PCI Express switch.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 3</figref> A block diagram illustrating the configuration of a system that can be realized by a method disclosed in PTL1.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 4</figref> A block diagram illustrating an example of the configuration of a settable PCI Express switch disclosed in PTL1.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 5</figref> A block diagram illustrating the configuration of a system that can be realized by a method disclosed in NPL1.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 6</figref> A block diagram illustrating an example of the configuration of a MRA-PCI Express switch disclosed in NPL1.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 7</figref> A block diagram illustrating an example of the configuration of a MRA-PCI Express switch disclosed in NPL1.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 8</figref> An explanatory diagram illustrating an example of the setting of setting registers</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 9</figref> An explanatory diagram illustrating an example of the setting of setting registers</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 10</figref> An explanatory diagram illustrating an example of an assembled PCI tree</p>
<p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. 11</figref> An explanatory diagram illustrating an example of an assembled PCI tree</p>
<p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. 12</figref> A block diagram illustrating an example of the configuration of a PCI Express system according to the present invention</p>
<p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. 13</figref> A block diagram illustrating one example of the configuration of a MRA extended PCI Express switch</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 14</figref> A block diagram illustrating one example of the configuration of a MRA extended PCI Express switch</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 15</figref> A block diagram illustrating one example of the configuration of a management module</p>
<p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. 16</figref> A block diagram illustrating one example of the configuration of a network control circuit</p>
<p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. 17</figref> An explanatory diagram illustrating an example of setting information of a setting register</p>
<p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. 18</figref> An explanatory diagram illustrating an example of setting information of a setting register</p>
<p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. 19</figref> An explanatory diagram illustrating an example of a VS-VLAN mapping table</p>
<p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. 20</figref> An explanatory diagram illustrating an example of a VS-V LAN mapping table</p>
<p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. 21</figref> An explanatory diagram illustrating an example of a network frame</p>
<p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. 22</figref> An explanatory diagram illustrating an example of a device information frame</p>
<p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. 23</figref> An explanatory diagram illustrating an example of an own switch device information table</p>
<p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. 24</figref> An explanatory diagram illustrating an example of an own switch device information table</p>
<p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. 25</figref> An explanatory diagram illustrating an example of an other switch device information table</p>
<p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. 26</figref> An explanatory diagram illustrating an example of an other switch device information table</p>
<p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. 27</figref> An explanatory diagram illustrating an example of an own switch device information table</p>
<p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. 28</figref> An explanatory diagram illustrating an example of an own switch device information table</p>
<p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. 29</figref> An explanatory diagram illustrating an example of an other switch device information table</p>
<p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. 30</figref> An explanatory diagram illustrating an example of an other switch device information table</p>
<p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. 31</figref> An explanatory diagram illustrating an example of an assembled PCI tree</p>
<p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. 32</figref> An explanatory diagram illustrating an example of an assembled PCI tree</p>
<p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. 33</figref> A block diagram illustrating an example of the minimum configuration of a PCI Express switch</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0011" level="1">DESCRIPTION OF EMBODIMENTS</heading>
<p id="p-0072" num="0071">Hereinafter, an embodiment of the present invention will be described with reference to the accompanying drawings. The present embodiment relates to a PCI Express system and a PCI Express switch that extend PCI Express interfaces of a computing device and a networking device used in a computer and a network device. In particular, the present embodiment relates to a method of extending a PCI Express switch that connects a plurality of computers, the configuration of a switch inside the PCI Express switch, and a routing circuit.</p>
<p id="p-0073" num="0072">The following provides a brief overview of an PCI Express system and a PCI Express switch according to the present embodiment. According to the present embodiment, the PCI Express switch includes, as well as building blocks that make up a MRA-PCI Express switch, a function of transferring data, which is processed in each virtual PCI Express switch, to Ethernet (Registered Trademark) outside the switch. When data is transferred through the external Ethernet, the PCI Express switch links each virtual PCI Express switch and a virtual LAN (VLAN) on an Ethernetwork before transferring data to each VLAN.</p>
<p id="p-0074" num="0073">The above process is performed by each switch. Therefore, it is possible to exchange (transmit and receive) data between virtual PCI express switches through the VLAN. It is also possible to connect switches without passing through a PCI-PCI bridge when switches are connected. a management frame of information of a PCI-PCI bridge inside each switch is exchanged (transmitted and received) on the Ethernet so that with the use of the VLAN on the Ethernet, data is transferred. Therefore, it is possible to exchange the following information and realize data communication between a plurality of switches on the Ethernet: PCI-PCI bridge information that other switches use, and MAC address information that switches and bridges each need to use to communicate.</p>
<p id="p-0075" num="0074">The following describes the configuration of a PCI Express system according to an embodiment of the present invention. <figref idref="DRAWINGS">FIG. 12</figref> is a block diagram illustrating an example of the configuration of a PCI Express system according to an embodiment of the present invention. As shown in <figref idref="DRAWINGS">FIG. 12</figref>, according to the present embodiment, in the PCI Express system, a MRA extended PCI Express switch <b>304</b> is connected to a CPU <b>101</b>, a CPU <b>108</b>, a root complex <b>102</b>, a memory <b>103</b>, a root complex <b>109</b>, a memory <b>110</b>, a MR endpoint <b>505</b>, an endpoint <b>106</b>, and an endpoint <b>107</b>. In the PCI Express system, the MRA extended PCI Express switch <b>304</b> is also connected to a MRA extended PCI Express switch <b>308</b> through Ethernet (Registered Trademark) <b>801</b>.</p>
<p id="p-0076" num="0075">The MRA extended PCI Express switch <b>308</b> is connected to a CPU <b>1011</b>, a root complex <b>1021</b>, a memory <b>1031</b>, and a MR endpoint <b>506</b>.</p>
<p id="p-0077" num="0076">Incidentally; the root complexes and endpoints that can be connected to the MRA extended PCI Express switches <b>304</b> and <b>308</b> are devices that handle the PCI Express disclosed in PTL1 and NPL1 and MR endpoints disclosed in NPL1. Even if data is transferred through the Ethernet <b>801</b> shown in <figref idref="DRAWINGS">FIG. 12</figref>, devices can communicate with each other as in the system shown in <figref idref="DRAWINGS">FIGS. 5 to 7</figref>.</p>
<p id="p-0078" num="0077">What is described in the present, embodiment is how the MRA extended PCI Express switches <b>304</b> and <b>308</b> are made in order to realize similar communication to the example of the configuration of the MRA-PCI Express switches shown in <figref idref="DRAWINGS">FIGS. 5 to 7</figref>. The following also describes what kind of setting makes possible such communication. Hereinafter, the internal configuration, operation and setting state of the MRA extended PCI Express switches <b>304</b> and <b>308</b> will be described.</p>
<p id="p-0079" num="0078">The following describes the internal configuration of the MRA extended PCI Express switches <b>304</b> and <b>308</b>. According to the present embodiment, the MRA extended PCI Express switches <b>304</b> and <b>308</b> use the following components, which are also used in the MRA-PCI Express: upstream PCI-PCI bridges, downstream PCI-PCI bridges, downstream PCI-PCI bridges that handle MR, MRA controller logic units, and setting registers. In addition to the above building blocks, the MRA extended PCI Express switches <b>304</b> and <b>308</b> include virtual PCI Express switches, which handle the transmitting or receiving of data to or from an external network, and network control circuits, which are equipped with a function of transmitting or receiving data to or from the Ethernet <b>801</b>. The MRA extended PCI Express switches <b>304</b> and <b>308</b> also include management modules that acquire and manage network addresses needed to transmit or receive data between the MRA extended PCI Express switches <b>304</b> and <b>308</b> through the Ethernet <b>801</b>.</p>
<p id="p-0080" num="0079"><figref idref="DRAWINGS">FIG. 13</figref> is a block diagram illustrating one example of the configuration of the MRA extended PCI Express switch <b>304</b>. <figref idref="DRAWINGS">FIG. 14</figref> is a block diagram illustrating one example of the configuration of the MRA extended PCI Express switch <b>308</b>.</p>
<p id="p-0081" num="0080">As shown in <figref idref="DRAWINGS">FIG. 13</figref>, the MRA extended PCI Express switch <b>304</b> includes upstream PCI-PCI bridges <b>3044</b> and <b>3045</b> that handle MR, downstream PCI-PCI bridges <b>3047</b> and <b>3048</b>, a downstream PCI-PCI bridge <b>3046</b> that handles MR, virtual PCI Express switches <b>3061</b>, <b>3062</b>, <b>3063</b> and <b>3064</b> (Switches <b>1</b> to n), a MRA controller logic unit <b>3049</b>, a setting register <b>3050</b>, a network control circuit <b>3042</b> acting as a network control device, and a management module <b>3043</b>.</p>
<p id="p-0082" num="0081">As shown in <figref idref="DRAWINGS">FIG. 14</figref>, the MRA extended PCI Express switch <b>308</b> includes an upstream PCI-PCI bridge <b>3084</b>, a downstream PCI-PCI bridge <b>3085</b> that handles MR, virtual PCI Express switches <b>3088</b>, <b>3089</b> and <b>3090</b> (Switches <b>1</b> to n), a MRA controller logic unit <b>3086</b>, a setting register <b>3087</b>, a network control circuit <b>3082</b>, and a management module <b>3083</b>.</p>
<p id="p-0083" num="0082">In the PCI-PCI bridges that handle MR, VH numbers are assigned in a similar way to the MRA-PCI Express switches shown in <figref idref="DRAWINGS">FIGS. 5 to 7</figref>. As for the settings based on instructions from the MR-PCIM <b>52</b>, the MRA extended PCI Express switches <b>304</b> and <b>308</b> set the setting registers <b>3050</b> and <b>3087</b> through a port of VH<b>0</b> and the MRA controller logic units <b>3049</b> and <b>3086</b>. Therefore, the MRA extended PCI Express switches <b>304</b> and <b>308</b> determine a virtual PCI Express switch to be used, a port thereof, and a VH number as well as makes a determination as to whether the bridge is an upstream or downstream one. Accordingly, a tree of PCI Express is assembled for a root complex, making it possible to access an endpoint.</p>
<p id="p-0084" num="0083">Accordingly, the process of transferring data between the root complexes and the endpoints in the MRA extended PCI Express switches <b>304</b> and <b>308</b> is performed in the same way as in the MRA-PCI Express switch shown in <figref idref="DRAWINGS">FIGS. 5 to 7</figref>.</p>
<p id="p-0085" num="0084">According to the present embodiment, the MRA extended PCI Express switches <b>304</b> and <b>308</b> are characterized in that the data to be processed in the virtual PCI Express switches is exchanged (received and transmitted) between the MRA extended PCI Express switches through a network such as Ethernet <b>801</b>, not through PCI-PCI bridges. For example, when the data to which a switching process is applied by virtual PCI Express switches (<b>1</b> to n) <b>3061</b>, <b>3062</b>, <b>3063</b> and <b>3064</b> is transferred to any components other than the PCI-PCI bridges inside the switch, the MRA extended PCI Express switch <b>304</b> shown in <figref idref="DRAWINGS">FIG. 13</figref> uses the network control circuit <b>3042</b> to carry out data communication with other MRA extended PCI Express switches.</p>
<p id="p-0086" num="0085">When data communication is carried out through a network, it is necessary to acquire and figure out a network address. Therefore, the MRA extended PCI Express switches <b>304</b> and <b>308</b> manage address information using the management modules <b>3043</b> and <b>3083</b>. When data is transferred from each virtual PCI Express switch to another MRA extended PCI Express switch, the MRA extended PCI Express switches <b>304</b> and <b>308</b> manage the relationships between the configuration information of the virtual PCI Express switches and network addresses (For example, the configuration information and the network addresses are stored in a storage unit, such as a memory, in such a way that the configuration information and the network addresses are linked to each other). The MRA extended PCI Express switches <b>304</b> and <b>308</b> give appropriate network addresses when data is transferred. With the above configuration, it is possible to carry out data communication between the MRA extended PCI Express switches.</p>
<p id="p-0087" num="0086">The MRA extended PCI Express switches <b>304</b> and <b>308</b> are characterized in that, when data is transferred through a network, in the MRA extended PCI Express switches <b>304</b> and <b>308</b>, data is logically divided by a plurality of virtual PCI Express switches before a switching process is performed. Accordingly, even when data is transferred through a network, the MRA extended PCI Express switches <b>304</b> and <b>308</b> carry out the logical separation of the network even on the Ethernet <b>801</b> using the VLAN of the Ethernet <b>801</b>. The MRA extended PCI Express switches <b>304</b> and <b>308</b> then link the logical separation of the virtual PCI Express switches and the logical separation on the Ethernet (Registered Trademark) <b>801</b>. Therefore, between a plurality of MRA extended PCI Express switches, the situation where virtual PCI Express switches are connected is made; it is also possible to share and extend the virtual PCI Express switches. More specifically, the MRA extended PCI Express switches <b>304</b> and <b>308</b> transfer data after the mapping of the VLANs (<b>1</b> to n) for each of the virtual PCI Express switches (<b>1</b> to n) when data is transferred through a network.</p>
<p id="p-0088" num="0087"><figref idref="DRAWINGS">FIG. 15</figref> is a block diagram illustrating an example of the configuration of the management module <b>3083</b> that is used when data is transferred between the MRA extended PCI Express switches through a network. <figref idref="DRAWINGS">FIG. 16</figref> is a block diagram illustrating an example of the configuration of the network control circuit <b>3082</b> that is used when data is transferred between the MRA extended PCI Express switches through a network.</p>
<p id="p-0089" num="0088">Incidentally, the configuration of the network control circuit <b>3042</b> that the MRA extended PCI Express switch <b>304</b> has is the same as the configuration of the network control circuit <b>3082</b> shown in <figref idref="DRAWINGS">FIG. 16</figref>. The configuration of the management module <b>3043</b> that the MRA extended PCI Express switch <b>304</b> has is the same as the configuration of the management module <b>3083</b> shown in <figref idref="DRAWINGS">FIG. 15</figref>. However, between the MRA extended PCI Express switches <b>304</b> and <b>308</b>, data to be stored in an other switch device information table <b>30833</b>, an own switch device information table <b>30838</b> and a VS-VLAN mapping table <b>30827</b> is different.</p>
<p id="p-0090" num="0089">The following describes the configuration and operation of the network control circuit <b>3082</b> with reference to <figref idref="DRAWINGS">FIG. 16</figref>. As shown in <figref idref="DRAWINGS">FIG. 16</figref>, the network control circuit <b>3082</b> includes a network frame generation circuit <b>30829</b>, a transmission frame control circuit <b>30822</b>, a reception frame analysis module <b>30824</b>, a reception frame control circuit <b>30823</b>, the VS-VLAN mapping table <b>30827</b>, and a PCIe frame generation circuit <b>30826</b>.</p>
<p id="p-0091" num="0090">When data is transferred from the virtual PCI Express switches and between switches, the data of PCI Express is transmitted from each virtual PCI Express switch to the network frame generation circuit <b>30829</b> that generates a data transfer frame for a network. After receiving the data of PCI Express, the network frame generation circuit <b>30829</b> uses the following to convert data to a network frame <b>2009</b> shown in <figref idref="DRAWINGS">FIG. 21</figref>: the VS-VLAN mapping table <b>30827</b>, and the own/other device information <b>30828</b> output from the management module <b>3083</b>. Incidentally, the VS-VLAN mapping table <b>30827</b> is for example stored in a storage unit, such as a memory, that the network control circuit <b>3082</b> has.</p>
<p id="p-0092" num="0091">The VS-VLAN mapping table <b>30827</b> stores mapping information showing one of the VLANs (<b>1</b> to n) of the Ethernet <b>801</b> that is used in transferring the data from each of the virtual PCI Express switches (<b>1</b> to n).</p>
<p id="p-0093" num="0092">The own/other device information <b>30828</b> is information that is output based on the own switch device information table <b>30838</b> and an other switch device information table <b>30833</b> of the management module <b>3083</b>. The own/other device information <b>30828</b> is used to obtain MAC address information of the source and destination that are used to transmit PCI Express data from the virtual PCI Express switches to a network.</p>
<p id="p-0094" num="0093">As shown in <figref idref="DRAWINGS">FIG. 21</figref>, the network frame <b>2009</b> includes a destination MAC address <b>2001</b>, a source MAC address <b>2002</b>, a VLAN tag <b>2003</b>, Ethernet attribute information <b>2004</b>, network control information <b>2005</b>, PCI Express data <b>2006</b>, and a frame check sequence <b>2007</b>. The network frame <b>2009</b> is an Ethernet frame defined by IEEE802.3 and can be transferred by an Ethernet network device.</p>
<p id="p-0095" num="0094"><figref idref="DRAWINGS">FIG. 19</figref> is an explanatory diagram illustrating an example of a VS-VLAN mapping table <b>30827</b>-<b>1</b> that the MRA extended PCI Express switch <b>304</b> has. As shown in <figref idref="DRAWINGS">FIG. 19</figref>, according to the present embodiment, the VS-VLAN mapping table <b>30827</b>-<b>1</b> that the MRA extended PCI Express switch <b>304</b> has sets the VLAN <b>1</b> for the virtual PCI Express switch <b>1</b>, the VLAN <b>2</b> for the virtual PCI Express switch <b>2</b>, and the use of the VLAN <b>2003</b> for the virtual PCI Express switch <b>3</b> to transfer data.</p>
<p id="p-0096" num="0095"><figref idref="DRAWINGS">FIG. 20</figref> is an explanatory diagram illustrating an example of a VS-VLAN mapping table <b>30827</b>-<b>5</b> that the MRA extended PCI Express switch <b>308</b> has. As shown in <figref idref="DRAWINGS">FIG. 20</figref>, the VS-VLAN mapping table <b>30827</b>-<b>5</b> is set. Therefore, the virtual PCI Express switch <b>1</b> inside the MRA extended PCI Express switch <b>308</b> uses the VLAN <b>2003</b> to transfer data. The virtual PCI Express switch <b>2</b> uses the VLAN <b>1</b> to transfer data.</p>
<p id="p-0097" num="0096">Thanks to the setting of the VS-VLAN mapping table <b>30827</b>-<b>1</b> and VS-VLAN mapping table <b>30827</b>-<b>5</b> shown in <figref idref="DRAWINGS">FIGS. 19 and 20</figref>, in the VLAN <b>1</b>, data communication is carried out between the virtual PCI Express switch <b>1</b> of the MRA extended PCI Express switch <b>304</b> and the virtual PCI Express switch <b>2</b> of the MRA extended PCI Express switch <b>308</b>. Similarly, in the VLAN <b>2003</b>, data communication is carried out between the virtual PCI Express switch <b>3</b> of the MRA extended PCI Express switch <b>304</b> and the virtual PCI Express switch <b>1</b> of the MRA extended PCI Express switch <b>308</b>.</p>
<p id="p-0098" num="0097">The VLAN <b>2</b> is defined only on the VS-VLAN mapping table <b>30827</b>-<b>1</b>. Therefore, under the state of the settings shown in <figref idref="DRAWINGS">FIGS. 19 and 20</figref>, data is not transferred from the MRA extended PCI Express switch <b>304</b> to the virtual PCI Express switches inside the MRA extended PCI Express switch <b>308</b>. However, as described below, device information is issued (transmitted) on the VLAN <b>2</b> by the management module <b>3083</b>. In this case, the management module <b>3083</b> of the MRA extended PCI Express switch <b>308</b> figures out (identifies) the configuration state of the virtual PCI Express switch <b>2</b> of the MRA extended PCI Express switch <b>304</b> on the basis of the issued device information. The management module <b>3083</b> then is used to carry out the mapping for the VLAN <b>2</b> of a new virtual PCI Express switch when an endpoint device of the MRA extended PCI Express switch <b>308</b> is to be connected to the virtual PCI Express switch <b>2</b> of the MRA extended PCI Express switch <b>304</b>&#x2032;.</p>
<p id="p-0099" num="0098"><figref idref="DRAWINGS">FIGS. 23 and 24</figref> are explanatory diagrams illustrating an example of the own switch device information table <b>30838</b> inside the MRA extended PCI Express switch <b>304</b>. <figref idref="DRAWINGS">FIGS. 25 and 26</figref> are explanatory diagrams illustrating an example of the other switch device information table <b>30833</b> inside the MRA extended PCI Express switch <b>304</b>.</p>
<p id="p-0100" num="0099">To transfer data from the virtual PCI Express switch to an external MRA extended PCI Express switch, the network frame generation circuit <b>30829</b> determines the destination MAC address <b>2001</b> of the network frame <b>2009</b> shown in <figref idref="DRAWINGS">FIG. 21</figref> with the use of information of the other switch device information table <b>30833</b> as well as the source MAC address <b>2002</b> with the use of information of the own switch device information table <b>30838</b>. In this case, the network frame generation circuit <b>30829</b> stores the VLAN information obtained from the above VS-VLAN mapping table <b>30827</b> in the VLAN tag <b>2003</b> of the network frame <b>2009</b>.</p>
<p id="p-0101" num="0100">The network frame generation circuit <b>30829</b> also stores a TLP packet of PCI Express transferred from a PCI Express virtual switch in PCI Express data <b>2006</b> without changes. The network frame generation circuit <b>30829</b> also uses the network control information <b>2005</b> as control information used to transfer network data, such as congestion control or how far data has reached on the Ethernet <b>801</b> in the transmission frame control circuit <b>30822</b> and the reception frame control circuit <b>30823</b>.</p>
<p id="p-0102" num="0101">Moreover, the Ethernet attribute information <b>2004</b> represents the frame type of an Ethernet frame. The network frame generation circuit <b>30829</b> stores a fixed value, which is determined by a standard or uniquely by a user, as the Ethernet attribute information <b>2004</b>. The network frame generation circuit <b>30829</b> uses the Ethernet attribute information <b>2004</b> to make a determination as to whether the present Ethernet frame is a network frame <b>2</b> on the Ethernet <b>801</b> and in the reception frame analysis module <b>30824</b>.</p>
<p id="p-0103" num="0102">The following describes the own switch device information table <b>30838</b>. The own switch device information table <b>30838</b> includes two tables: a table where the MAC address of the switch is stored and a table where the MAC address of each virtual PCI Express switch inside the MRA extended PCI Express switch is stored on a per-port basis. The information of the own switch device information table <b>30838</b> is set by exchanging (transmitting and receiving) a device information frame <b>701</b> shown in <figref idref="DRAWINGS">FIG. 22</figref> by the management module <b>3043</b> between the MRA extended PCI Express switches.</p>
<p id="p-0104" num="0103">The following describes the other switch device information table <b>30833</b>. The other switch device information table <b>30833</b> includes two tables: a table where the MAC address of the other switch is stored and a table where the MAC address of each virtual PCI Express switch inside the other MRA extended PCI Express switch is stored on a per-port basis. For a virtual Express switch number on the other switch device information table <b>30833</b>, a value that has passed through the VS-VLAN mapping table <b>30827</b> is stored. Accordingly, after the MRA extended PCI Express switch <b>304</b> is connected to a virtual PCI Express switch of the other switch through a VLAN, the MRA extended PCI Express switch <b>304</b> can figure out (identify) the information of the other device that is in the same space as a virtual PCI Express switch of the MRA extended PCI Express switch <b>304</b> with the use of the other switch device information table <b>30833</b>.</p>
<p id="p-0105" num="0104">For example, in the example shown in <figref idref="DRAWINGS">FIGS. 23</figref>, <b>24</b>, <b>25</b> and <b>26</b>, when the data that comes from the port <b>1</b>/VH<b>0</b>/upstream port of the virtual PCI Express switch <b>1</b> of the MRA extended PCI Express switch <b>304</b> is transferred to the port <b>2</b>/VH<b>0</b>/downstream port of the MRA extended PCI Express switch <b>308</b>, the utilization MAC address &#x201c;00-00-4c-01-01-01&#x201d; entered from an own switch device information table <b>30838</b>-<b>2</b> into the port <b>1</b>/VH<b>0</b>/upstream of the virtual PCI Express switch <b>1</b> is used as the source MAC address <b>2001</b>. Moreover, &#x201c;00-00-4c-02-02-01&#x201d; entered into the port <b>2</b>/VH<b>0</b>/downstream of the virtual PCI express switch number <b>1</b> of an other switch device information table <b>30833</b>-<b>2</b> is used as the destination MAC address <b>2002</b>.</p>
<p id="p-0106" num="0105">When a unicast transfer process is performed, the above method can be used to determine a destination MAC address. However, when a broadcast transfer process is performed in the process of transferring data of PCI Express, it is not possible to determine a destination MAC address. In this case, for example, the MRA extended PCI Express switch <b>304</b> adds (outputs) the data entered from the port <b>1</b>/VH<b>0</b>/upstream port of the virtual PCI Express switch <b>1</b> of the MRA extended PCI Express switch <b>304</b> to the port <b>2</b>/VH<b>0</b>/downstream port of the MRA extended PCI Express switch <b>308</b>. When data is transferred to another port, the MRA extended PCI Express switch <b>304</b> uses the MAC address &#x201c;00-00-4c-01-00-00&#x201d;, which is used by a switch of the own switch device information table <b>30838</b>-<b>1</b> shown in <figref idref="DRAWINGS">FIG. 23</figref>, as the source MAC address <b>2001</b>. The MRA extended PCI Express switch <b>304</b> then uses, as a destination MAC address, a MAC address (the MAC address &#x201c;00-00-4c-02-00-00&#x201d; of a connected switch) stored in the other switch device information table <b>30833</b>-<b>1</b> shown in <figref idref="DRAWINGS">FIG. 25</figref> to transfer.</p>
<p id="p-0107" num="0106">When there is a plurality of targets to be connected, the MRA extended PCI Express switch <b>304</b> may transfer a frame in which the MAC address of each switch is stored to each target. Alternatively, a broadcast transfer process may be performed on the Ethernet <b>801</b> with the destination MAC address set at (ALL F). Since the VLAN is used in accordance with the VS-VLAN mapping table <b>30827</b>, the MRA extended PCI Express switch <b>304</b> transfers data within a VS-VLAN when a broadcast transfer process is performed.</p>
<p id="p-0108" num="0107"><figref idref="DRAWINGS">FIGS. 27 and 28</figref> are explanatory diagrams illustrating an example of the own switch device information table <b>30838</b> in the MRA extended PCI Express switch <b>308</b>. <figref idref="DRAWINGS">FIGS. 29 and 30</figref> are explanatory diagrams illustrating an example of the other switch device information table <b>30833</b> inside the MRA extended PCI Express switch <b>304</b>.</p>
<p id="p-0109" num="0108">In a similar way to the above MRA extended PCI Express switch <b>304</b>, the MRA extended PCI Express switch <b>308</b> transfers data in accordance with the settings of the own switch device information table <b>30838</b>. For example, when the data entered from the port <b>1</b>/(N/A)/upstream port of the virtual PCI Express switch <b>1</b> is transferred to the port <b>3</b>/VH<b>2</b>/downstream port of the MRA extended PCI Express switch <b>304</b>, the MRA extended PCI Express switch <b>308</b> uses, as the source MAC address <b>2001</b>, the utilization MAC address &#x201c;00-00-4c-02-01-01&#x201d; entered from an own switch device information table <b>30838</b>-<b>52</b> into the port UNA/upstream of the virtual PCI Express switch <b>1</b>. The MRA extended PCI Express switch <b>308</b> also uses, as the destination MAC address <b>2002</b>, &#x201c;00-00-4c-01-03-02&#x201d; entered into the port <b>3</b>/VH<b>2</b>/downstream of the virtual PCI Express switch number <b>1</b> of an other switch device information table <b>30833</b>-<b>52</b>.</p>
<p id="p-0110" num="0109">As described above, after generating the network frame <b>2009</b> used to transfer data to another MRA extended PCI Express switch, the MRA extended PCI Express switch <b>308</b> transmits the network frame as a transmission network frame <b>20091</b> with the use of the transmission frame control circuit <b>30822</b> through a network.</p>
<p id="p-0111" num="0110">When data is received from a virtual PCI Express switch of another MRA extended PCI Express switch and between switches, the MRA extended PCI Express switch <b>308</b> receives a frame through the reception frame control circuit, <b>30823</b> with the use of the reception frame analysis module <b>30824</b>. Then, the MRA extended PCI Express switch <b>308</b> transfers the received network frame by the reception frame analysis module <b>30824</b> with the use of the information of the VS-VLAN mapping table <b>30827</b> and own/other device information <b>30828</b>.</p>
<p id="p-0112" num="0111">In the above case, when the data should be transferred into the own switch, the MRA extended PCI Express switch <b>308</b> uses the VS-VLAN mapping table <b>30827</b> to make a determination as to which one of the virtual PCI Express switches (<b>1</b> to n) should be selected for data from each Ethernet VLAN (<b>1</b> to n). Then, the MRA extended PCI Express switch <b>308</b> transfers the data to the corresponding virtual PCI Express switch inside the own switch through the PCIe frame generation circuit <b>30826</b> that generates the PCI Express data <b>2006</b> from the network frame <b>2009</b>. Moreover, the MRA extended PCI Express switch <b>308</b> uses the reception frame analysis module <b>30824</b> to transfer data to an other switch device information manager <b>30832</b> if the frame is the device information management frame shown in <figref idref="DRAWINGS">FIG. 22</figref>.</p>
<p id="p-0113" num="0112">When the data that comes from the port <b>1</b>/VH<b>0</b>/upstream port of the virtual PCI Express switch <b>1</b> of the above MRA extended PCI Express switch <b>304</b> is transferred to the port <b>2</b>/VH<b>0</b>/downstream port of the MRA extended PCI Express switch <b>308</b>, the MRA extended PCI Express switch <b>308</b> uses the VS-VLAN mapping table <b>30827</b>-<b>5</b> shown in <figref idref="DRAWINGS">FIG. 20</figref> to transfer data of the VLAN <b>1</b> to the virtual PCI Express switch <b>2</b>.</p>
<p id="p-0114" num="0113">When the data entered from the port <b>1</b>/(N/A)/upstream port of the virtual PCI Express switch <b>1</b> of the MRA extended PCI Express switch <b>308</b> is transferred to the port <b>3</b>/VH<b>2</b>/downstream port of the MRA extended PCI Express switch <b>304</b>, data that flows on a network is transferred with the use of the VLAN <b>2003</b>. In this case, the MRA extended PCI Express switch <b>304</b> uses the VS-VLAN mapping table <b>30827</b>-<b>1</b> shown in <figref idref="DRAWINGS">FIG. 19</figref> to transfer data of the VLAN <b>2003</b> to the virtual PCI Express switch <b>3</b>.</p>
<p id="p-0115" num="0114">In order to make a determination as to whether there is data inside the own switch that should be transferred, the MRA extended PCI Express switch <b>308</b> uses the information of the VS-VLAN mapping table <b>30827</b> and the own/other device information <b>30828</b> to perform a filtering process of data. In this case, the MRA extended PCI Express switch <b>308</b> determines a virtual PCI Express switch number on the basis of the VLAN tag <b>2003</b> of the received network frame <b>2009</b> using the VS-VLAN mapping table <b>30827</b>. Moreover, the MRA extended PCI Express switch <b>308</b> checks (determines) whether there is the source MAC address <b>2002</b> of the received network frame <b>2009</b> among the virtual PCI Express switch numbers of the other switch device information table <b>30833</b>. The MRA extended PCI Express switch <b>308</b> also checks (determines) whether there is the source MAC address <b>2001</b> of the received network frame <b>2009</b> among the virtual PCI Express switch numbers of the own switch device information table <b>30838</b>.</p>
<p id="p-0116" num="0115">The following looks at the case where the data entered from the port <b>1</b>/VH<b>0</b>/upstream port of the virtual PCI Express switch <b>1</b> of the above MRA extended PCI Express switch <b>304</b> is transferred to the port <b>2</b>/VH<b>0</b>/downstream port of the MRA extended PCI Express switch <b>308</b>. The MRA extended PCI Express <b>308</b> performs a filtering process using the reception frame analysis module <b>30824</b>. In this case, since data is entered from the VLAN <b>1</b>, the MRA extended PCI Express switch <b>308</b> uses the VS-VLAN mapping table <b>30827</b>-<b>5</b> shown in <figref idref="DRAWINGS">FIG. 20</figref> to set the virtual PCI Express switch number to &#x201c;2&#x201d; and the source MAC address of the input frame to &#x201c;00-00-4c-01-01-01.&#x201d; The above settings exist in the first item among those with a virtual PCI Express switch number of 2 on the other switch device information table <b>30833</b>-<b>52</b> of <figref idref="DRAWINGS">FIG. 30</figref>.</p>
<p id="p-0117" num="0116">Moreover, the destination MAC address of the frame is &#x201c;00-00-4c-02-02-01&#x201d; and is located in the third item of the own switch device information table <b>30838</b>-<b>52</b> of <figref idref="DRAWINGS">FIG. 28</figref>. Therefore, the MRA extended PCI Express switch <b>308</b> does not perform a filtering process and transfers data to the corresponding virtual PCI Express switch <b>2</b> inside the own switch through the PCIe frame generation circuit <b>30826</b> that generates the PCI Express data <b>2006</b>.</p>
<p id="p-0118" num="0117">When the MAC address is checked, a broadcast transfer process may be performed. Therefore, the MRA extended PCI Express switch <b>308</b> makes a comparison between the other switch device information table <b>30833</b>-<b>51</b> of <figref idref="DRAWINGS">FIG. 29</figref> and the source MAC address as well as a comparison between the own switch device information table <b>30838</b>-<b>51</b> of <figref idref="DRAWINGS">FIG. 27</figref> and the destination MAC address.</p>
<p id="p-0119" num="0118">The following describes how the management module <b>3083</b> manages the transferring of data with the use of the above VS-VLAN mapping table <b>30827</b>, own switch device information table <b>30838</b>, and other switch device information table <b>30833</b>, as well as the function and operation of the management module <b>3083</b>.</p>
<p id="p-0120" num="0119">The management module <b>3083</b> manages the information required for network communication (the storing/updating of information, for example) on the basis of the setting register controlled by the MRA controller logic unit <b>3086</b> and generates a device information frame on the basis of the information that the management module <b>3083</b> manages. The management module <b>3083</b> exchanges (transmits and receives) the device information frame <b>701</b> between the MRA extended PCI Express switches. Therefore, it is possible to realize an address management function needed for the virtual PCI Express switches inside a plurality of the MRA extended PCI Express switches to carry out data communication using the VLAN of the Ethernet (Registered Trademark) <b>801</b>.</p>
<p id="p-0121" num="0120">The management module <b>3083</b> also manages the connection relationship between the logical separation of the virtual PCI Express switches and the logical separation on the Ethernet <b>801</b> (the storing/updating of information representing the connection relationship, for example). Therefore, it is possible to provide a flat data communication environment that looks as if the virtual PCI Express switches are shared by all under the environment made up of a plurality of MRA extended PCI Express.</p>
<p id="p-0122" num="0121">As shown in <figref idref="DRAWINGS">FIG. 15</figref>, the management module <b>3083</b> includes an own switch device information management circuit <b>30836</b>, a device information transmission module <b>30837</b>, an own switch device information table <b>30838</b>, an own switch VS-VLAN information setting circuit <b>30839</b>, an own/other device information output circuit <b>30835</b>, an other switch device information table <b>30833</b>, an other switch device information management circuit <b>30832</b>, and a device information reception module (not shown).</p>
<p id="p-0123" num="0122">The following describes how the management module <b>3083</b> functions using the VS-VLAN mapping table <b>30827</b>, the own switch device information table <b>30838</b> and the other switch device information table <b>30833</b>.</p>
<p id="p-0124" num="0123">The VS-VLAN mapping table <b>30827</b> is set by the own switch VS-VLAN information setting circuit <b>30839</b>. The own switch VS-VLAN information setting circuit <b>30839</b> acquires (extracts) the information of the setting register <b>3050</b> managed by the MRA controller logic unit <b>3049</b> managed by the MR-PCIM <b>52</b>. Incidentally, the setting register is set in accordance with a similar setting operation to the setting operation disclosed in NPL 1.</p>
<p id="p-0125" num="0124"><figref idref="DRAWINGS">FIG. 17</figref> is an explanatory diagram illustrating an example of the setting information of the setting register <b>3050</b> of the MRA extended PCI Express switch <b>304</b>. <figref idref="DRAWINGS">FIG. 18</figref> is an explanatory diagram illustrating an example of the setting information of the setting register <b>3087</b> of the MRA extended PCI Express switch <b>308</b>.</p>
<p id="p-0126" num="0125">In the example shown in <figref idref="DRAWINGS">FIG. 17</figref>, a setting register <b>5141</b> is set so that the virtual PCI Express switches <b>1</b>, <b>2</b> and <b>3</b> of the MRA extended PCI Express switch <b>304</b> are to be used. Thanks to the above settings, the own switch VS-VLAN information setting circuit <b>30839</b> makes a table to set VLAN information for the virtual PCI Express switches <b>1</b>, <b>2</b> and <b>3</b>. Incidentally, the VS-VLAN mapping table <b>30827</b>-<b>1</b> shown in <figref idref="DRAWINGS">FIG. 19</figref> corresponds to an example of the setting of a table that sets the VLAN information. However, the VLAN numbers are set at 1, 2 and 2003 for the virtual PCI Express switches <b>1</b>, <b>2</b> and <b>3</b>.</p>
<p id="p-0127" num="0126">In the example shown in <figref idref="DRAWINGS">FIG. 18</figref>, a setting register <b>5151</b> is set so that the virtual PCI Express switches <b>1</b> and <b>2</b> of the MRA extended PCI Express switch <b>308</b> are to be used. Thanks to the above settings, the own switch VS-VLAN information setting circuit <b>30839</b> makes a table to set VLAN information for the virtual PCI Express switches <b>1</b> and <b>2</b>. Incidentally, the VS-VLAN mapping table <b>30827</b>-<b>5</b> shown in <figref idref="DRAWINGS">FIG. 20</figref> corresponds to an example of the setting of a table that sets the VLAN information. However, the VLAN numbers are set at <b>2003</b> and <b>1</b> for the virtual PCI Express switches <b>1</b> and <b>2</b>.</p>
<p id="p-0128" num="0127">Incidentally, as for the process of determining the VLAN numbers, a system operator can determine and set in advance which VLAN is to be used to connect the virtual PCI Express switches. In this case, as for a method of setting the VLAN numbers, the same process is performed as in the case where the MR-PCIM <b>52</b> sets a MRA-PCI Express switch. That is, in order to logically keep a plurality of root complexes from existing, when the configuration is the virtual PCI Express switches (n)-VLANs (m)-virtual PCI Express switches (s), the setting is done so that there is only one connected root complex in a plurality of virtual PCI Express switches (n) and virtual PCI Express switches (s) being connected together.</p>
<p id="p-0129" num="0128">The own switch device information table <b>30838</b> is set by the own switch device information management circuit <b>30836</b>. The own switch device information management circuit <b>30836</b> acquires (extracts) the information of the setting register <b>3050</b> managed by the MRA controller logic unit <b>3049</b> managed by the MR-PCIM <b>52</b>. Incidentally, the setting register is set in accordance with a similar setting operation to the setting operation disclosed in NPL1.</p>
<p id="p-0130" num="0129">The own switch device information management circuit <b>30836</b> sets the virtual PCI Express switch numbers and the switch utilization port number/utilization VH number/UP-DN setting information of the own switch device information table <b>30838</b>, on the basis of the virtual PCI Express switch numbers and the information of a list of the switch utilization port number/utilization VH number/UP-DN setting that uses the switch. The virtual PCI Express switch numbers and the information of a list of the switch utilization port number/utilization VH number/UP-DN setting that uses the switch are included in the setting register <b>3050</b>.</p>
<p id="p-0131" num="0130">In the example of the setting of the setting register <b>5141</b> shown in <figref idref="DRAWINGS">FIG. 17</figref> in the MRA extended PCI Express switch <b>304</b>, for the virtual PCI Express switch number <b>1</b>, the following three ports are set: Port <b>1</b>/VH<b>0</b>/UP, Port <b>3</b>/VH<b>0</b>/DN, and Port <b>4</b>/NA/DN. In this case, for the three pieces of port information, as in the settings of the own switch device information table <b>30383</b>-<b>2</b> shown in <figref idref="DRAWINGS">FIG. 24</figref>, the virtual PCI Express switch numbers are set to 1, and the pieces of utilization port number/utilization VH number/UP-DN information are stored. Similarly, the information is stored for all the other virtual PCI Express switch numbers and the port information being used. Since the information for a total of 7 ports is stored in the setting register <b>5141</b>, the information for 7 items is also entered into the Own switch device information table <b>30383</b>-<b>2</b>.</p>
<p id="p-0132" num="0131">Then, the management module <b>3083</b> always sets a unique MAC address on a network for the item entered into the own switch device information table <b>30383</b>. In the first item of the own switch device information table <b>30383</b>-<b>2</b>, for the Port <b>11</b>/VH<b>0</b>/UP of the virtual PCI Express switch number <b>1</b>, the utilization MAC address &#x201c;00-00-4c-01-01-01&#x201d; is set. In order to set a unique MAC address, a port number inside the virtual PCI Express switch is set in the bits <b>0</b> to <b>7</b> of the MAC address. In the bits <b>8</b> to <b>15</b>, the number of the virtual PCI Express switch is set. In the 16 to 23 bits, a number that is serially assigned for each MRA extended PCI Express switch is set. If the MAC addresses to be set are given in an orderly manner and uniquely set on the network as described above, the automatic setting of the MAC addresses may be carried out.</p>
<p id="p-0133" num="0132">Then, as for the items entered into the own switch device information table <b>30838</b>, in order to inform the other MRA extended PCI Express switch of the state of the configuration of the port of the own switch, an own switch device information management circuit <b>20836</b> regularly transmits the device information management frame <b>701</b> shown in <figref idref="DRAWINGS">FIG. 22</figref> through the transmission frame control circuit <b>30822</b> via a network (at predetermined intervals, for example).</p>
<p id="p-0134" num="0133">In the device information management frame <b>701</b>, a broadcast address &#x201c;FF-FF-FF-FF-FF-FF&#x201d; is always set in the destination MAC address. The Ethernet attribute information <b>2004</b> of the device information management frame <b>701</b> represents the type of a frame of an Ethernet frame; a fixed value, which is determined by a standard or uniquely by a user, is stored. The present device information management frame <b>701</b> is used on the Ethernet <b>801</b> and in the reception frame analysis module <b>30824</b> to make a determination as to whether the frame is a device information management frame.</p>
<p id="p-0135" num="0134">In the example of the setting of the own switch device information table <b>30838</b>-<b>2</b> shown in <figref idref="DRAWINGS">FIG. 24</figref> in the MRA extended PCI Express switch <b>304</b>, the information of the Port <b>1</b>/VH<b>0</b>/UP of the virtual PCI Express switch number <b>1</b> of the first item is stored in PCI Express device information <b>7006</b>. The utilization MAC address &#x201c;00-00-4c-01-01-01&#x201d; is stored in the source MAC address <b>7002</b>.</p>
<p id="p-0136" num="0135">Then, the management module <b>3083</b> stores the VLAN information corresponding to the virtual PCI Express switch in a similar way to the storage method of the VLAN tag <b>2003</b> of <figref idref="DRAWINGS">FIG. 21</figref>. For example, in the VS-VLAN mapping table <b>30827</b>-<b>1</b> shown in <figref idref="DRAWINGS">FIG. 19</figref>, the VLAN corresponding to the virtual PCI Express switch number <b>1</b> is 1. Therefore, <b>1</b> is used as the VLAN. Accordingly, when the present device information frame is transmitted from the transmission frame control circuit <b>3082</b> through the Ethernet <b>801</b>, a broadcast transfer process is performed on the VLAN <b>1</b> of the Ethernet <b>801</b>. Therefore, the present device information frame is transferred to all the MRA extended PCI Express switches being connected to the Ethernet <b>801</b>. The transferred frame is received by the reception frame control circuit <b>30823</b> of each MRA extended PCI Express switch. The reception frame analysis module <b>30824</b> recognizes the transferred frame as the device information frame <b>701</b>. As a result, the frame is transferred to the other switch device information management circuit <b>30832</b> inside the management module <b>3083</b> where the frame is used to create the other switch device information table <b>30833</b>.</p>
<p id="p-0137" num="0136">In the example of the setting of the own switch device information table <b>30838</b>-<b>1</b> shown in <figref idref="DRAWINGS">FIG. 23</figref> in the MRA extended PCI Express switch <b>304</b>, the switch utilization MAC address &#x201c;00-00-4c-01-00-00&#x201d; is stored in the source MAC address <b>702</b>. Then, &#x201c;0&#x201d; is used as a VLAN tag and PCI Express device information. The frame is different from a device information frame generated by the above own switch device information table <b>30838</b>-<b>2</b> and is used only for transmission of a switch utilization MAC address with the use of the VLAN <b>0</b>. Accordingly, when the present device information frame is transmitted from the transmission frame control circuit <b>30822</b> through the Ethernet <b>801</b>, a broadcast transfer process is performed on the VLAN <b>0</b> of the Ethernet <b>801</b>. Therefore, the present device information frame is transferred to all the MRA extended PCI Express switches being connected to the Ethernet <b>801</b>. The transferred frame is received by the reception frame control circuit <b>30823</b> of each MRA extended PCI Express switch. The reception frame analysis module <b>30824</b> recognizes the transferred frame as the device information frame <b>701</b>. As a result, the frame is transferred to the other switch device information management circuit <b>30832</b> inside the management module <b>3083</b> where the frame is used to create the other switch device information table <b>30833</b>.</p>
<p id="p-0138" num="0137">The other switch device information table <b>30833</b> is set by the other switch device information management circuit <b>30832</b>. Incidentally, the other switch device information management circuit <b>30832</b> acquires (inputs) from the reception frame analysis module <b>30824</b> the device information frame <b>701</b> transmitted from the own switch device information management circuit <b>30836</b> of the other MRA extended PCI Express switch described above.</p>
<p id="p-0139" num="0138">The other switch device information management circuit <b>30832</b> acquires (extracts) from the device information frame <b>702</b> the virtual PCI Express switch numbers, the switch utilization port number/utilization VH number/UP-DN setting information, and the utilization MAC address of the other switch device information table <b>30833</b>. The VLAN tag <b>7003</b>, or VLAN, is converted into a virtual PCI Express switch number in accordance with the information of the VS-VLAN mapping table <b>30827</b> and the virtual PCI Express switch number is stored. As for the switch utilization port number/utilization VH number/UP-DN setting information, the virtual PCI Express switch number stored in the PCI Express device information <b>7006</b> and the switch utilization port number/utilization VH number/UP-DN setting information that uses the switch are stored without changes. As for the utilization MAC address, the source MAC address <b>7002</b> is stored without changes.</p>
<p id="p-0140" num="0139">Thanks to the above operation, the other switch device information table <b>30833</b> can be set on the basis of the device information frame transmitted from the other MRA extended PCI Express switch.</p>
<p id="p-0141" num="0140">In the example of the setting of the own switch device information table <b>30838</b>-<b>2</b> shown in <figref idref="DRAWINGS">FIG. 24</figref> in the MRA extended PCI Express switch <b>304</b>, Port <b>1</b>/VH<b>0</b>/UP and &#x201c;00-00-4c-01-01-01&#x201d; are stored for the virtual PCI Express switch number <b>1</b> of the item <b>1</b>. Therefore, the MRA extended PCI Express switch <b>304</b> transmits, as the device information frame <b>701</b>, a frame including the destination MAC address &#x201c;FF-FF-FF-FF-FF-FF,&#x201d; the source address &#x201c;00-00-4c-01-01-01,&#x201d; VLAN tag &#x201c;<b>1</b>,&#x201d; and PCI Express device information &#x201c;Port <b>1</b>/VH<b>0</b>/UP.&#x201d;</p>
<p id="p-0142" num="0141">After receiving the present device information frame, the MRA extended PCI Express switch <b>308</b> stores the virtual PCI Express switch number as in the item <b>1</b> shown in the other switch device information table <b>30833</b>-<b>52</b> shown in <figref idref="DRAWINGS">FIG. 30</figref>. In this case, the MRA extended PCI Express switch <b>308</b> uses the VS-VLAN mapping table <b>30827</b>-<b>5</b> shown in <figref idref="DRAWINGS">FIG. 20</figref> to store &#x201c;<b>2</b>&#x201d; as a virtual PCI Express switch number for the VLAN &#x201c;<b>1</b>.&#x201d; As for the switch utilization port number, utilization VH number and UP-DN setting, the Port <b>1</b>/VH<b>0</b>/UP of the PCI Express device information is stored. As for the utilization MAC address, the source address &#x201c;00-00-4c-01-01-01&#x201d; is stored.</p>
<p id="p-0143" num="0142">In the example of the setting of the own switch device information table <b>30838</b>-<b>1</b> shown in <figref idref="DRAWINGS">FIG. 23</figref> in the MRA extended PCI Express switch <b>304</b>, as the switch utilization MAC address &#x201c;00-00-4c-01-00-00,&#x201d; only the source MAC address <b>7002</b> is stored. Therefore, the MRA extended PCI Express switch <b>304</b> transmits, as the device information frame <b>701</b>, a frame including the destination MAC address &#x201c;FF-FF-FF-FF-FF-FF,&#x201d; the source address &#x201c;00-00-4c-01-00-00,&#x201d; VLAN tag &#x201c;<b>0</b>,&#x201d; and PCI express device information &#x201c;<b>0</b>.&#x201d;</p>
<p id="p-0144" num="0143">After receiving the present device information frame, the MRA extended PCI Express switch <b>308</b> stores, as the destination (to-be-connected) switch MAC address, the source address &#x201c;00-00-4c-01-01-01&#x201d; as in the item <b>1</b> shown in the other switch device information table <b>30833</b>-<b>51</b> shown in <figref idref="DRAWINGS">FIG. 29</figref>. Entry numbers are set in the items for switch of the present other switch device information table <b>30833</b>-<b>51</b>. In this case, after receiving the device information frames from the other switches, the entry numbers, calculated by &#x201c;(the number of the MRA extended PCI Express switches that exist on a network)&#x2014;1,&#x201d; are sequentially set in the order 2, 3, . . . . The destination switch MAC addresses corresponding to the number of the entries are set on the basis of the device information frame <b>701</b> that is made up of VLAN tag &#x201c;<b>0</b>&#x201d; and PCI Express device information &#x201c;<b>0</b>.&#x201d;</p>
<p id="p-0145" num="0144">As described above, according to the present embodiment, the MRA extended PCI Express switches <b>304</b> and <b>308</b> figure out the device information of each other by exchanging the device information frame on the network. Moreover, it is possible to transfer data from a virtual PCI Express switch to a virtual PCI Express switch of the other MRA extended PCI Express switch through the network control circuit and the Ethernet <b>801</b>, not through the PCI-PCI bridge.</p>
<p id="p-0146" num="0145">According to the present embodiment, the MRA extended PCI Express switch <b>304</b> operates in accordance with the setting examples of: the setting register <b>5141</b> of <figref idref="DRAWINGS">FIG. 17</figref>, the VS-VLAN mapping table <b>30827</b>-<b>1</b> of <figref idref="DRAWINGS">FIG. 19</figref>, the own switch device information table <b>30838</b>-<b>1</b> of <figref idref="DRAWINGS">FIG. 23</figref>, and the own switch device information table <b>30838</b>-<b>2</b> of <figref idref="DRAWINGS">FIG. 24</figref>. The MRA extended PCI Express switch <b>308</b> operates in accordance with the setting examples of: the setting register <b>5151</b> of <figref idref="DRAWINGS">FIG. 18</figref>, the VS-VLAN mapping table <b>30827</b>-<b>5</b> of <figref idref="DRAWINGS">FIG. 20</figref>, the own switch device information table <b>30838</b>-<b>51</b> of <figref idref="DRAWINGS">FIG. 27</figref>, and the own switch device information table <b>30838</b>-<b>52</b> of <figref idref="DRAWINGS">FIG. 28</figref>. Then, in accordance with the operation described above, the device information frame is transmitted and received through the Ethernet (Registered Trademark) <b>801</b> thanks to the operations of the management module <b>3042</b> and the network control circuit <b>3042</b>.</p>
<p id="p-0147" num="0146">Thanks to the above operations, according to the present embodiment, in the MRA extended PCI Express switch <b>304</b>, the other switch device information table <b>30833</b>-<b>1</b> of <figref idref="DRAWINGS">FIG. 25</figref> and the other switch device information table <b>30833</b>-<b>2</b> of <figref idref="DRAWINGS">FIG. 26</figref> are automatically made.</p>
<p id="p-0148" num="0147">Similarly, in the MRA extended PCI Express switch <b>308</b>, the other switch device information table <b>30833</b>-<b>51</b> of <figref idref="DRAWINGS">FIG. 29</figref> and the other switch device information table <b>30833</b>-<b>52</b> of <figref idref="DRAWINGS">FIG. 30</figref> are automatically made. Thus, it is possible for the MRA extended PCI Express switches <b>304</b> and <b>308</b> to transfer data to a virtual PCI Express switch of the other MRA extended PCI Express switch through the Ethernet <b>801</b>, not through the PCI-PCI bridge.</p>
<p id="p-0149" num="0148">Thanks to the above settings, as for the CPU <b>101</b>, the PCI tree shown in <figref idref="DRAWINGS">FIG. 31</figref> is assembled for the I/O device. As for the CPU <b>1011</b>, the PCI tree shown in <figref idref="DRAWINGS">FIG. 32</figref> is assembled.</p>
<p id="p-0150" num="0149">According to the present embodiment, the configuration of the MRA extended PCI Express switch is realized that requires one downstream PCI-PCI bridge to connect one I/O device at any time. Therefore, no PCI-PCI bridge is put in place in connecting switches: Thanks to the above configuration, no bridge is uselessly connected. Therefore, even if the number of I/O devices increases, it is possible to minimize the time needed to configure a PCI-PCI bridge. Thus, it takes less time to start the BIOS compared with the MRA-PCI Express switch disclosed in NPL1.</p>
<p id="p-0151" num="0150">Moreover, according to the present embodiment, no PCI-PCI bridge is necessary to connect switches. Therefore, it is not necessary to set VH numbers between switches. Therefore, the number of the pieces of information managed by the MR-PCIM <b>52</b> can be reduced only to the number of I/O connections for each root complex at any time. Thus, it is possible to minimize the time required to initialize the MR-PCIM <b>52</b>.</p>
<p id="p-0152" num="0151">Furthermore, according to the present embodiment, particularly, in the process (specific process) of examining the topology of the switch during the initialization process of the MR-PCIM <b>52</b>, the MRA extended PCI Express switches <b>304</b> and <b>308</b> turn out to be a tree of a one-stage PCI Express including one upstream bridge and downstream bridges, the number of which is equal to the number of I/O devices, for the root complex at any time. Therefore, it is possible to simplify the algorithm used to examine the topology of the switch of the MR-PCIM <b>52</b> as well as to reduce the initialization time. Accordingly, it is possible to improve the operational performance of the system in the system where the MR-PCIM <b>52</b> is used.</p>
<p id="p-0153" num="0152">Moreover, according to the present embodiment, when the MR endpoint <b>506</b> is accessed from the CPU <b>101</b>, the upstream/downstream PCI-PCI bridge <b>951225122</b>, which is included in the MRA-PCI Express switch disclosed in NPL1, is unnecessary. Therefore, according to the present embodiment, the MRA extended PCI Express switches <b>304</b> and <b>308</b> can be formed using only a PCI-PCI bridge that works only in an upstream or downstream portion. Thus, it is possible to make the circuit of the PCI-PCI bridge simple.</p>
<p id="p-0154" num="0153">Moreover, according to the present embodiment, even when two links are used to connect switches through the Ethernet <b>801</b>, the two links are equivalent to a portion of the bus on the tree of PCI Express. Therefore, it is possible to prevent the tree of PCI Express from forming a loop structure and to form an appropriate tree of PCI express.</p>
<p id="p-0155" num="0154">As described above, according to the present embodiment, when the number of I/O devices to be housed is increased with the use of the PCI Express switch that accommodates a plurality of root complexes and when switches are connected together in the configuration of a plurality of switches, it is possible to house the I/<b>0</b> devices without passing through a PCI-PCI bridge as well as to prevent the increase of the BIOS start time.</p>
<p id="p-0156" num="0155">That is, according to present embodiment, in addition to the building blocks of the MRA-PCI Express switch, the PCI Express switches <b>304</b> and <b>308</b> are equipped with a function of transferring to the Ethernet <b>801</b> outside the switches the data that is to be processed in each virtual PCI Express switch. The PCI Express switches <b>304</b> and <b>308</b> also link each virtual PCI Express switch to a virtual LAN (VLAN) on the Ethernet <b>801</b> when transferring to the external Ethernet <b>801</b> before transferring data to each VLAN. Therefore, it is possible to exchange (transmit and receive) data between the virtual PCI Express switches through the VLANs as well as to realize a function of connecting switches without passing through the PCI-PCI bridge when the switches are connected. Thus, when switches are connected in a PCI Express switch that houses a plurality of root complex systems, it is possible to accommodate I/O devices without passing through a PCI-PCI bridge and to reduce the increase of the BIOS start time.</p>
<p id="p-0157" num="0156">Moreover, in a system that uses the PCI Express switch disclosed in PTL1 or PTL2, in a MRA-PCI Express switch, it is necessary to set VH numbers between switches of PCI-PCI bridges. Accordingly, as the number of I/O devices to be housed in the system increases, it is necessary to manage the connection links between the switches as well as the number of I/O devices to be connected for each root complex, resulting in an increase in the amount of information managed by a MR-PCIM. Therefore, the problem is that it takes more time to initialize the MR-PCIM. In this case, the MRA-PCI Express switch cannot set the ports at all that are connected to other root complexes to which the MR-PCIM is not connected until the MR-PCIM completes the initialization process (the process of examining the topology of switches and the connected devices). Thus, the longer initialization time means a serious deterioration of the system's operational performance.</p>
<p id="p-0158" num="0157">According to the present embodiment, for the configuration of a plurality of switches in the MRA-PCI Express system, it is possible to prevent the increase of the management information of the MR-PCIM <b>52</b> and to reduce the time required to initialize the MR-PCIM <b>52</b>.</p>
<p id="p-0159" num="0158">That is, according to present embodiment, in addition to the building blocks of the MRA-PCI Express switch, the PCI Express switches <b>304</b> and <b>308</b> are equipped with a function of transferring to the Ethernet <b>801</b> outside the switches the data that is to be processed in each virtual PCI Express switch. The PCI Express switches <b>304</b> and <b>308</b> also link each virtual PCI Express switch to a virtual LAN (VLAN) on the Ethernet <b>801</b> when transferring to the external Ethernet <b>801</b> before transferring data to each VLAN. Therefore, it is possible to exchange (transmit and receive) data between the virtual PCI Express switches through the VLANs as well as to realize a function of connecting switches without passing through the PCI-PCI bridge when the switches are connected. Thus, it is possible to prevent the increase of the management information of the MR-PCIM <b>52</b> and to reduce the time required to initialize the MR-PCIM <b>52</b>.</p>
<p id="p-0160" num="0159">Moreover, in a system that uses the PCI Express switch disclosed in PTL1 or PTL2, if the system is made up of a plurality of MRA-PCI Express switches, it is necessary to operate both an upstream PCI-PCI bridge and a downstream PCI-PCI bridge among PCI-PCI bridges between the switches. Accordingly, the problem is that the use of the method disclosed in PTL1 or PTL2 makes the circuit of the PCI-PCI bridge more complex depending on in which portion, an upstream or downstream portion, the circuit is operated and makes the circuit large in size. Moreover, if there are two connection links between the switches, there is a fear that a loop structure may emerge depending on the upstream/downstream settings of the connection position and that an appropriate tree of PCI Express may not be made.</p>
<p id="p-0161" num="0160">According to the present embodiment, without the need to support both the operations of the upstream/downstream PCI-PCI bridges, it is possible to form a MRA-PCI Express switch (a switch that accommodates a plurality of root complexes) capable of realizing the configuration of a plurality of switches and to make the circuits of the switches simple.</p>
<p id="p-0162" num="0161">That is, according to present embodiment, in addition to the building blocks of the MRA-PCI Express switch, the PCI Express switches <b>304</b> and <b>308</b> are equipped with a function of transferring to the Ethernet (Registered Trademark) <b>801</b> outside the switches the data that is to be processed in each virtual PCI Express switch. The PCI Express switches <b>304</b> and <b>308</b> also link each virtual PCI Express switch to a virtual LAN (VLAN) on the Ethernet <b>801</b> when transferring to the external Ethernet <b>801</b> before transferring data to each VLAN. Therefore, it is possible to exchange (transmit and receive) data between the virtual PCI Express switches through the VLANs as well as to realize a function of connecting switches without passing through the PCI-PCI bridge when the switches are connected. Thus, without the need to support both the operations of the upstream/downstream PCI-PCI bridges, it is possible to form a MRA-PCI Express switch capable of realizing the configuration of a plurality of switches and to make the circuits of the switches simple.</p>
<p id="p-0163" num="0162">Moreover, according to the present embodiment, for the configuration of a plurality of switches, when seen from the CPU, the tree structure of one-hop (one-stage) PCI Express switch is formed only by the upstream/downstream PCI-PCI bridge. Therefore, it is possible to prevent a loop structure from being formed. It is also possible to simplify the initialization process (the process of examining the topology of switches and devices) of the MR-PCIM <b>52</b> as well as to reduce the time.</p>
<p id="p-0164" num="0163">That is, according to present embodiment, in addition to the building blocks of the MRA-PCI Express switch, the PCI Express switches <b>304</b> and <b>308</b> are equipped with a function of transferring to the Ethernet <b>801</b> outside the switches the data that is to be processed in each virtual PCI Express switch. The PCI Express switches <b>304</b> and <b>308</b> also link each virtual PCI Express switch to a virtual LAN (VLAN) on the Ethernet <b>801</b> when transferring to the external Ethernet <b>801</b> before transferring data to each VLAN. Therefore, it is possible to exchange (transmit and receive) data between the virtual PCI Express switches through the VLANs as well as to realize a function of connecting switches without passing through the PCI-PCI bridge when the switches are connected. Thus, it is possible to form the structure of one-hop PCI Express switch that is made up only of the upstream/downstream PCI-PCI bridge when seen from the CPU.</p>
<p id="p-0165" num="0164">The following describes the minimum configuration of a PCI Express switch according to the present invention. <figref idref="DRAWINGS">FIG. 33</figref> is a block diagram illustrating an example of the minimum configuration of a PCI Express switch. As shown in <figref idref="DRAWINGS">FIG. 33</figref>, the MRA extended PCI Express switch <b>304</b> includes at least the following building blocks: the PCI-PCI bridges <b>3044</b> and <b>3046</b> that handle MR, the virtual PCI Express switch <b>3061</b> and the management module <b>3043</b>.</p>
<p id="p-0166" num="0165">The PCI-PCI bridges <b>3044</b> and <b>3046</b> that handle MR are PCI-PCI bridges that handle Multi Root to connect to a plurality of root complexes. The virtual PCI Express switch. <b>3061</b> is equipped with a function of performing a switching process between the PCI-PCI bridges <b>3044</b> and <b>3046</b> that handle MR. The management module <b>3043</b> is equipped with a function of transferring the following data to an external switch through a network, not through the PCI-PCI bridges <b>3044</b> and <b>3046</b> that handle MR: the data that is to be processed in the virtual PCI Express switch <b>3061</b>.</p>
<p id="p-0167" num="0166">According to the PCI Express switch having the minimum configuration shown in <figref idref="DRAWINGS">FIG. 33</figref>, when the switches are connected in the PCI Express switch that houses a plurality of root complexes, it is possible to accommodate the I/O devices without passing through the PCI-PCI bridges. It is also possible to reduce the increase of the BIOS start time.</p>
<p id="p-0168" num="0167">Incidentally, in the embodiment described above, the characteristic configurations of the PCI Express switch and the PCI Express system, such as those described below in (1) to (8), are shown.</p>
<p id="p-0169" num="0168">(1) A PCI Express switch includes: PCI-PCI bridges (which are for example realized by the upstream PCI-PCI bridges <b>3044</b> and <b>3045</b> that handle MR, the downstream PCI-PCI bridges <b>3046</b>, <b>3047</b> and <b>3048</b> that handle MR) that handle Multi Root to connect to a plurality of root complexes; virtual PCI Express switches (which are for example realized by the virtual PCI Express switches <b>3061</b>, <b>3062</b>, <b>3063</b> and <b>3064</b>) that perform a switching process between the PCI-PCI bridges; and network control means (which is for example realized by the management module <b>3043</b>) for transferring data that is to be processed in the virtual PCI Express switches to an external switch through a network without passing through a PCI-PCI bridge.</p>
<p id="p-0170" num="0169">(2) The PCI Express switch may be configured so that the network control means transfers the data that is to be processed in the virtual PCI Express switches to an external switch through Ethernet (Registered Trademark).</p>
<p id="p-0171" num="0170">(3) The PCI Express switch may be configured so that the network control means transfers the data that is to be processed in the virtual PCI Express switches to an external switch through Ethernet (Registered Trademark), the network control means has a table (which is for example realized by the other switch device information table <b>30833</b>, or the own switch device information table <b>30838</b>) to manage, for each virtual PCI Express switch, VLANs that are used to transfer data, and the network control means uses the table to transfer data.</p>
<p id="p-0172" num="0171">(4) The PCI Express switch may be configured so that the network control means includes an external switch table (which is for example realized by the other switch device information table <b>30833</b>) to manage setting information of a virtual PCI Express switch and of the PCI-PCI bridges of the external switch; and the network control means transfers data using the external switch table.</p>
<p id="p-0173" num="0172">(5) The PCI Express switch may be configured so that the network control means includes an own switch table (which is for example realized by the own switch device information table <b>30838</b>) to manage setting information of a virtual PCI Express switch of an own switch and of the PCI-PCI bridges; and the network control means transfers data using the own switch table.</p>
<p id="p-0174" num="0173">(6) The PCI Express switch may be configured so that the network control means includes an own switch table (which is for example realized by the own switch device information table <b>30838</b>) to manage setting information of the virtual PCI Express switch of an own switch and of the PCI-PCI bridges; and the network control means informs the external switch of the setting information of the own switch at predetermined intervals in accordance with the information of the own switch table.</p>
<p id="p-0175" num="0174">(7) The PCI Express switch may be configured so that the network control means receives the setting information of the virtual PCI Express switch of the external switch and of the PCI-PCI bridges, the network control means includes an external switch table (which is for example realized by the other switch device information table <b>30833</b>) to manage the setting information of the virtual PCI Express switch of the external switch and of the PCI-PCI bridges, and the network control means automatically updates the external switch table on the basis of the setting information received from the external switch.</p>
<p id="p-0176" num="0175">(8) A PCI Express system includes a first PCI Express switch (which is for example the MRA extended PCI Express switch <b>304</b>) and a second PCI Express switch (which is for example the MRA extended PCI Express switch <b>308</b>), wherein the first PCI Express switch includes: PCI-PCI bridges (which are for example realized by the upstream PCI-PCI bridges <b>3044</b> and <b>3045</b> that handle MR, or the downstream PCI-PCI bridges <b>3046</b>, <b>3047</b> and <b>3048</b> that handle MR) that handle Multi Root to connect to a plurality of root complexes; virtual PCI Express switches (which are for example realized by the virtual PCI Express switches <b>3061</b>, <b>3062</b>, <b>3063</b> and <b>3064</b>) that perform a switching process between the PCI-PCI bridges; and network control means (which is for example realized by the management module <b>3043</b>) for transferring data that is to be processed in the virtual PCI Express switches to the second PCI Express switch through a network without passing through a PCI-PCI bridge.</p>
<p id="p-0177" num="0176">The above has described the exemplary embodiments of the present invention. However, the present invention may be embodied in other various forms without departing from the spirit and essential characteristics defined by the appended claims. The embodiments described above are therefore to be considered only as illustrative, not as restrictive. The scope of the invention is indicated by the appended claims, not by the specification or abstract. Furthermore, all modifications and alterations which come within the meaning and range of equivalency of the claims are to be embraced within the scope of the present invention.</p>
<heading id="h-0012" level="1">INDUSTRIAL APPLICABILITY</heading>
<p id="p-0178" num="0177">The present invention can be applied to a computer system or network system connected through wires. The present invention can also be applied to all system environments where a PCI Express interface is mounted regardless of wired or wireless connections.</p>
<heading id="h-0013" level="1">REFERENCE SIGNS LIST</heading>
<p id="p-0179" num="0000">
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0178"><b>52</b>: MR-PCIM</li>
    <li id="ul0003-0002" num="0179"><b>101</b>, <b>108</b>, <b>1011</b>: CPU</li>
    <li id="ul0003-0003" num="0180"><b>102</b>, <b>109</b>, <b>1021</b>: Root complex</li>
    <li id="ul0003-0004" num="0181"><b>103</b>, <b>110</b>, <b>1031</b>: Memory</li>
    <li id="ul0003-0005" num="0182"><b>106</b>, <b>107</b>: Endpoint</li>
    <li id="ul0003-0006" num="0183"><b>304</b>, <b>308</b>: MRA extended PCI Express switch</li>
    <li id="ul0003-0007" num="0184"><b>505</b>, <b>506</b>: MR Endpoint</li>
    <li id="ul0003-0008" num="0185"><b>3042</b>, <b>3082</b>: Network control circuit</li>
    <li id="ul0003-0009" num="0186"><b>3043</b>, <b>3083</b>: Management module</li>
    <li id="ul0003-0010" num="0187"><b>3044</b>: Upstream PCI-PCI bridge that handles MR</li>
    <li id="ul0003-0011" num="0188"><b>3045</b>, <b>3084</b>: Upstream PCI-PCI bridge</li>
    <li id="ul0003-0012" num="0189"><b>3046</b>, <b>3085</b>: Downstream PCI-PCI bridge that handles MR</li>
    <li id="ul0003-0013" num="0190"><b>3047</b>, <b>3048</b>: Downstream PCI-PCI bridge</li>
    <li id="ul0003-0014" num="0191"><b>3049</b>, <b>3086</b>: MRA controller logic</li>
    <li id="ul0003-0015" num="0192"><b>3050</b>, <b>3087</b>: Setting register</li>
    <li id="ul0003-0016" num="0193"><b>3061</b>, <b>3062</b>, <b>3063</b>, <b>3064</b>, <b>3088</b>, <b>3089</b>, <b>3090</b>: Virtual PCI Express switch</li>
    <li id="ul0003-0017" num="0194"><b>20091</b>: Transmission network frame</li>
    <li id="ul0003-0018" num="0195"><b>20092</b>: Reception network frame</li>
    <li id="ul0003-0019" num="0196"><b>30822</b>: Transmission frame control circuit</li>
    <li id="ul0003-0020" num="0197"><b>30823</b>: Reception frame control circuit</li>
    <li id="ul0003-0021" num="0198"><b>30824</b>: Reception frame analysis module</li>
    <li id="ul0003-0022" num="0199"><b>30826</b>: PCIe frame generation circuit</li>
    <li id="ul0003-0023" num="0200"><b>30827</b>: VS-VLAN mapping table</li>
    <li id="ul0003-0024" num="0201"><b>30828</b>: Own/other device information</li>
    <li id="ul0003-0025" num="0202"><b>30829</b>: Network frame generation circuit</li>
    <li id="ul0003-0026" num="0203"><b>30832</b>: Other switch device information management circuit</li>
    <li id="ul0003-0027" num="0204"><b>30833</b>: Other switch device information table</li>
    <li id="ul0003-0028" num="0205"><b>30835</b>: Own/other device information output circuit</li>
    <li id="ul0003-0029" num="0206"><b>30836</b>: Own switch device information management circuit</li>
    <li id="ul0003-0030" num="0207"><b>30839</b>: Own switch VS-VLAN information setting circuit</li>
</ul>
</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A PCI Express switch comprising:
<claim-text>a first PCI-PCI bridge handling a Multi Root;</claim-text>
<claim-text>a second PCI-PCI bridge;</claim-text>
<claim-text>a virtual PCI Express switch that performs a switching process between the first and second PCI-PCI bridges; and</claim-text>
<claim-text>a network control device connected to the virtual PCI Express switch,</claim-text>
<claim-text>the first PCI-PCI bridge being connected to a plurality of root complexes,</claim-text>
<claim-text>the second PCI-PCI bridge being connected to an endpoint,</claim-text>
<claim-text>the network control device being connected to an external switch through an external network and being configured to transfer data that is to be processed in the virtual PCI Express switch to the external switch through the external network,</claim-text>
<claim-text>wherein the plurality of root complexes, the endpoint, the external switch, and the external network are outside of the PCI Express switch.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The PCI Express switch according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the external network is Ethernet.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The PCI Express switch according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the external network is Ethernet;</claim-text>
<claim-text>the network control device has a table to manage, for the virtual PCI Express switch, a VLAN that is used to transfer the data; and</claim-text>
<claim-text>the network control device uses the table to transfer the data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The PCI Express switch according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the network control device includes a switch table to manage setting information of the virtual PCI Express switch and the first and second PCI-PCI bridges, and</claim-text>
<claim-text>the network control device transfers the data using the switch table.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The PCI Express switch according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the network control device includes a switch table to manage setting information of the virtual PCI Express switch and the first and second PCI-PCI bridges, and</claim-text>
<claim-text>the network control device informs the external switch of the setting information of the virtual PCI Express switch and the first and second PCI-PCI bridges at predetermined intervals.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The PCI Express switch according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the external switch is another PCI Express switch.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The PCI Express switch according to <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein:
<claim-text>the external switch includes a virtual PCI Express switch and PCI-PCI bridges,</claim-text>
<claim-text>the network control device includes an external switch table to manage setting information of the virtual PCI Express switch and the PCI-PCI bridges of the external switch; and</claim-text>
<claim-text>the network control device transfers the data using the external switch table.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The PCI Express switch according to <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein:
<claim-text>the external switch includes a virtual PCI Express switch and PCI-PCI bridges,</claim-text>
<claim-text>the network control device receives setting information of the virtual PCI Express switch and the PCI-PCI bridges of the external switch;</claim-text>
<claim-text>the network control device includes an external switch table to manage the setting information; and</claim-text>
<claim-text>the network control device automatically updates the external switch table on the basis of the setting information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A PCI Express system comprising
<claim-text>a first PCI Express switch and a second PCI Express switch,</claim-text>
<claim-text>the first PCI Express switch including:
<claim-text>a first PCI-PCI bridge handling a Multi Root;</claim-text>
<claim-text>a second PCI-PCI bridge;</claim-text>
<claim-text>a virtual PCI Express switch that performs a switching process between the first and second PCI-PCI bridges; and</claim-text>
<claim-text>a network control device connected to the virtual PCI Express switch,</claim-text>
<claim-text>the first PCI-PCI bridge being connected to a plurality of root complexes,</claim-text>
<claim-text>the second PCI-PCI bridge being connected to an endpoint,</claim-text>
<claim-text>the network control device being connected to external switch ugh an external network and being configured to transfer data that is to be processed in the virtual PCI Express switch to the external switch through the external network,</claim-text>
<claim-text>wherein the plurality of root complexes, the endpoint, the second PCI Express switch, and the external network are outside of the first PCI Express switch.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The PCI Express system according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the external network is Ethernet.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The PCI Express system according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein:
<claim-text>the external network is Ethernet;</claim-text>
<claim-text>the network control device has a table to manage, for the virtual PCI Express switch, a VLAN that is used to transfer the data; and</claim-text>
<claim-text>the network control device uses the table to transfer the data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The PCI Express system according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein:
<claim-text>the network control device includes a switch table to manage setting information of the virtual PCI Express switch and the first and second PCI-PCI bridges of the first PCI Express switch, and</claim-text>
<claim-text>the network control device transfers the data using the switch table.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The PCI Express system according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein:
<claim-text>the network control device includes a first switch table to manage setting information of the virtual PCI Express switch and the first and second PCI-PCI bridges of the first PCI Express switch; and</claim-text>
<claim-text>the network control device informs the second PCI Express switch of the setting information of the virtual PCI Express switch and the first and second PCI-PCI bridges of the first PCI Express switch at predetermined intervals.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The PCI Express system according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein:
<claim-text>the second PCI Express switch includes a virtual PCI Express switch and PCI-PCI bridges,</claim-text>
<claim-text>the network control device includes an external switch table to manage setting information of the virtual PCI Express switch and the PCI-PCI bridges of the second PCI Express switch; and</claim-text>
<claim-text>the network control device transfers the data using the external switch table.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The PCI Express system according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein:
<claim-text>the second PCI Express switch receives the setting information of the virtual PCI Express switch and the first and second PCI-PCI bridges of the first PCI Express switch;</claim-text>
<claim-text>the second PCI Express switch includes a second switch table to manage the setting information of the virtual PCI Express switch and the first and second PCI-PCI bridges of the first PCI Express switch; and</claim-text>
<claim-text>the second PCI Express switch automatically updates the second switch table on the basis of the setting information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A network control method comprising the steps of:
<claim-text>processing data in a virtual PCI Express switch of a first PCI Express switch; and</claim-text>
<claim-text>transferring the data to a second PCI Express switch through an external network,</claim-text>
<claim-text>the first PCI Express switch including:</claim-text>
<claim-text>a first PCI-PCI bridge handling Multi Root;</claim-text>
<claim-text>a second PCI-PCI bridge; and</claim-text>
<claim-text>the virtual PCI Express switch that performs a switching process between the first and second PCI-PCI bridges,</claim-text>
<claim-text>the first PCI-PCI bridge being connected to a plurality of root complexes,</claim-text>
<claim-text>the second PCI-PCI bridge being connected to an endpoint,</claim-text>
<claim-text>wherein the plurality of root complexes, the endpoint, the second PCI Express switch and the external network are outside of the first PCI Express switch.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The network control method according to <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the external networks is Ethernet. </claim-text>
</claim>
</claims>
</us-patent-grant>
