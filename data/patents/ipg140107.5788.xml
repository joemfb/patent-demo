<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626894-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626894</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10875942</doc-number>
<date>20040624</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>2334</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>173</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>709224</main-classification>
</classification-national>
<invention-title id="d2e53">Generating visualization output of event correlation information</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6393386</doc-number>
<kind>B1</kind>
<name>Zager et al.</name>
<date>20020500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>703 25</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2002/0073195</doc-number>
<kind>A1</kind>
<name>Hellerstein et al.</name>
<date>20020600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709224</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2002/0120734</doc-number>
<kind>A1</kind>
<name>Riosa et al.</name>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709224</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2002/0123947</doc-number>
<kind>A1</kind>
<name>Yuste et al.</name>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>705 35</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2002/0158918</doc-number>
<kind>A1</kind>
<name>Feibush et al.</name>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345853</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2002/0194246</doc-number>
<kind>A1</kind>
<name>Moskowitz et al.</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709102</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2003/0074439</doc-number>
<kind>A1</kind>
<name>Grabarnik et al.</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>709224</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2003/0140280</doc-number>
<kind>A1</kind>
<name>Kaler et al.</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>714 37</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2003/0200293</doc-number>
<kind>A1</kind>
<name>Fearn et al.</name>
<date>20031000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709223</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2004/0090472</doc-number>
<kind>A1</kind>
<name>Risch et al.</name>
<date>20040500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345853</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2005/0283680</doc-number>
<kind>A1</kind>
<name>Kobayashi et al.</name>
<date>20051200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 39</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>JP</country>
<doc-number>2001306998</doc-number>
<date>20011100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00013">
<othercit>Thoenen et al., &#x201c;Event Relationship Networks: A Framework for Action Oriented Analysis in Event Management&#x201d;, 2001 IEEE Online Library, Session Sixteen, Fault Management II, pp. 593-606.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00014">
<othercit>Fernyhough et al., &#x201c;Building Qualitative Event Models Automatically from Visual Input&#x201d;, IEEE Online Library, 1998, pp. 350-355.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00015">
<othercit>Ma et al., &#x201c;Progressive and Interactive Analysis of Event Data Using Event Miner&#x201d;, 2002 IEEE Online Library, pp. 661-664.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00016">
<othercit>Rosner et al., &#x201c;In Touch: A Graphical User Interface Development Tool&#x201d;, IEEE Online Library, 1990, pp. 12/1-12/7.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00017">
<othercit>Sarukkai et al., &#x201c;Parallel Program Visualization using SIEVE.1&#x201d;, ACM Digital Library, 1992, pp. 157-166.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00018">
<othercit>Wang, &#x201c;Team-and-Role-Based Organizational Context and Access Control for Cooperative Hypermedia Environments&#x201d;, ACM Digital Library, 1999, pp. 37-46.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00019">
<othercit>Gi Won On et al., &#x201c;An integrated dynamic and visual debugging for parallel applications&#x201d;, Parallel Computing: Fundamentals, Applications and New Directions, Advances in Parallel Computing, vol. 12, pp. 335-338; Published Amsterdam, Netherlands, 1998.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00020">
<othercit>Evans et al., &#x201c;A visual performance analysis environment&#x201d;, Parallel Computing '91. Proceedings of the International Conference, pp. 515-529; Published Amsterdam, Netherlands, 1992.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00021">
<othercit>IBM Research Disclosure n42895, &#x201c;XML Element Forms: Building Blocks of XML-Based Applications&#x201d;, p. 1658-1659, Dec. 1999.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00022">
<othercit>IBM Research Disclosure 41780, v42, n417, &#x201c;A Runtime Notification Service Tool which Visually Display the Events Flow Through the Event Network to Help User Detect Un-Connected Objects in the Network Channel Application&#x201d;, Jan. 1999.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00023">
<othercit>http://www.open.com/pdf/nervecenter<sub>&#x2014;</sub>datasheet.pdf, &#x201c;Advanced Event Correlation and Root Cause Analysis for Enterprise Networks&#x201d;, Open Network Security Management, Apr. 9, 2004, 2 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00024">
<othercit>Kovalerchuk, &#x201c;Review of Visual Correlation Methods&#x201d;, Version 03.06.2001, http://www.cwu.edu/&#x2dc;borisk/visualization/review2b.pdf, Apr. 9, 2004, 11 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00025">
<othercit>Yemini et al., &#x201c;High Speed &#x26; Robust Event Correlation&#x201d;, http://www1.cs.columbia.edu/ids/research/keypapers/papers/eventcorrelation/ieee.pdf, Apr. 9, 2004, pp. 1-23.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>709223</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709224</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>4</number-of-drawing-sheets>
<number-of-figures>10</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20050289230</doc-number>
<kind>A1</kind>
<date>20051229</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Chen</last-name>
<first-name>Xiaoping</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Lavery</last-name>
<first-name>Andrew Jason</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>McKinney</last-name>
<first-name>Howard Milton</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Chen</last-name>
<first-name>Xiaoping</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Lavery</last-name>
<first-name>Andrew Jason</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>McKinney</last-name>
<first-name>Howard Milton</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Yee &#x26; Associates, P.C.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>LaBaw</last-name>
<first-name>Jeffrey S.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>International Business Machines Corporation</orgname>
<role>02</role>
<address>
<city>Armonk</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Georgandellis</last-name>
<first-name>Andrew</first-name>
<department>2453</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method for graphically representing events at runtime in an event management system is provided. A plurality of events including a first event and a second event are received that define respective states of one or more networked devices. A cause-effect event relation is identified between the first event, the second event, and a projected event responsive to receiving the first and second events. A runtime visualization output is generated that includes a graphical representation of the first event, the second event, the projected event and the event relation.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="106.34mm" wi="164.25mm" file="US08626894-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="240.96mm" wi="167.64mm" file="US08626894-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="238.42mm" wi="165.86mm" file="US08626894-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="235.97mm" wi="166.20mm" file="US08626894-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="233.60mm" wi="171.70mm" file="US08626894-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0002" num="0001">1. Technical Field</p>
<p id="p-0003" num="0002">The present invention relates generally to an improved data processing system and in particular to a method and data processing system for managing networked systems. Still more particularly, the present invention provides a method and apparatus for analyzing events and for visualizing cause and effect correlation information among multiple events at runtime in a networked system.</p>
<p id="p-0004" num="0003">2. Description of Related Art</p>
<p id="p-0005" num="0004">As distributed or networked systems become increasingly complex, effective management and evaluation of a networked system progressively increases in difficulty. In typical networked systems, a system manager monitors critical activities of network systems and applications.</p>
<p id="p-0006" num="0005">A common approach to networked systems management is implementation of an event management system (EMS). An EMS is a system that receives system state information and that takes a corrective action in response to an indication of an undesirable system state. Event messages (referred to herein as &#x201c;events&#x201d;) indicative of a system state are sent to the EMS, and the EMS parses the event and takes a particular corrective action. The corrective action may be, for example, a maintenance command that is executed on one or more particular networked devices, or a message to a network manager that indicates the event such that the network manager may take a corrective action.</p>
<p id="p-0007" num="0006">In general, an EMS contains a correlation engine that identifies relations among events. Subject matter experts, such as a network engineer or administrator, write correlation rules that the EMS evaluates for identification of the relations. A correlation rule may specify a corrective action based on the event.</p>
<p id="p-0008" num="0007">In addition to a correlation engine, a conventional EMS includes an event console that provides a display of events in real-time. Display of events is provided as a list of independent elements. Each element is associated with a single event and contains various event properties. An event displayed by an event console contains no indication of any relationship with another event. Rather, relations among events is specified only by correlation rules written by the subject matter expert. Thus, an event console provides no visual indication to a user, e.g., a network manager, of the correlation among events, such as a cause and effect relationship, that may exist between events displayed by the event console. Due to the complexity of networked systems and event relations, it is difficult to ascertain events that may occur as a result of received events.</p>
<p id="p-0009" num="0008">Thus, it would be advantageous to provide a method for generating visualization output of event correlation information among events in a networked system. It would be further advantageous to provide a mechanism for providing a runtime visualization output of cause and effect relationships of multiple events received in a networked system and event relations derived from the received events.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0010" num="0009">The present invention provides a method for graphically representing events at runtime in an event management system. A plurality of events including a first event and a second event are received that define respective states of one or more networked devices. A cause-effect event relation is identified between the first event, the second event, and a projected event responsive to receiving the first and second events. A runtime visualization output is generated that includes a graphical representation of the first event, the second event, the projected event and the event relation.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0011" num="0010">The novel features believed characteristic of the invention are set forth in the appended claims. The invention itself, however, as well as a preferred mode of use, further objectives and advantages thereof, will best be understood by reference to the following detailed description of an illustrative embodiment when read in conjunction with the accompanying drawings, wherein:</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 1</figref> is a pictorial representation of a network of data processing systems in which the present invention may be implemented in accordance with a preferred embodiment of the present invention;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram of a data processing system that may be implemented as a server in accordance with a preferred embodiment of the present invention;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram illustrating a data processing system that may be implemented as a client in the network of data processing systems of <figref idref="DRAWINGS">FIG. 1</figref> according to a preferred embodiment of the present invention;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram illustrating components of an event management system implemented according to a preferred embodiment of the present invention;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 5</figref> is a diagrammatic illustration of an implementation of an event relation database of the event management system described with reference to <figref idref="DRAWINGS">FIG. 4</figref> implemented in accordance with a preferred embodiment of the present invention;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 6A</figref> is a diagrammatic illustration of an exemplary runtime visualization output generated by an event console of the event management system described with reference to <figref idref="DRAWINGS">FIG. 4</figref> upon receipt of an event in accordance with a preferred embodiment of the present invention;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 6B</figref> is a diagrammatic illustration of an exemplary runtime visualization output generated by the event console of the event management system described with reference to <figref idref="DRAWINGS">FIG. 4</figref> upon receipt of events and identification of an associated projected event in accordance with a preferred embodiment of the present invention;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 6C</figref> is a diagrammatic illustration of an exemplary runtime visualization output generated by the event console of the event management system described with reference to <figref idref="DRAWINGS">FIG. 4</figref> after interrogation of an event relation database with a projected event in accordance with a preferred embodiment of the present invention;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 6D</figref> is a diagrammatic illustration of a visualization output depicting a list mode of event information in accordance with a preferred embodiment of the present invention; and</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 7</figref> is a diagrammatic illustration of a return data set identifying a projected event that is generated by interrogation of the event relation database when interrogated with antecedent events in accordance with a preferred embodiment of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT</heading>
<p id="p-0022" num="0021">With reference now to the figures, <figref idref="DRAWINGS">FIG. 1</figref> depicts a pictorial representation of a network of data processing systems in which the present invention may be implemented. Network data processing system <b>100</b> is a network of computers in which the present invention may be implemented. Network data processing system <b>100</b> contains a network <b>102</b>, which is the medium used to provide communications links between various devices and computers connected together within network data processing system <b>100</b>. Network <b>102</b> may include connections, such as wire, wireless communication links, or fiber optic cables.</p>
<p id="p-0023" num="0022">In the depicted example, server <b>104</b> is connected to network <b>102</b> along with storage unit <b>106</b>. In addition, clients <b>108</b>, <b>110</b>, and <b>112</b> are connected to network <b>102</b>. These clients <b>108</b>, <b>110</b>, and <b>112</b> may be, for example, personal computers or network computers. In the depicted example, server <b>104</b> provides data, such as boot files, operating system images, and applications to clients <b>108</b>-<b>112</b>. Clients <b>108</b>, <b>110</b>, and <b>112</b> are clients to server <b>104</b>. Network data processing system <b>100</b> may include additional servers, clients, and other devices not shown. In the depicted example, network data processing system <b>100</b> is the Internet with network <b>102</b> representing a worldwide collection of networks and gateways that use the Transmission Control Protocol/Internet Protocol (TCP/IP) suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high-speed data communication lines between major nodes or host computers, consisting of thousands of commercial, government, educational and other computer systems that route data and messages. Of course, network data processing system <b>100</b> also may be implemented as a number of different types of networks, such as for example, an intranet, a local area network (LAN), or a wide area network (WAN). <figref idref="DRAWINGS">FIG. 1</figref> is intended as an example, and not as an architectural limitation for the present invention. Clients <b>108</b>, <b>110</b>, and <b>112</b> or other network devices transmit events to server <b>104</b> by way of network <b>102</b>. Server <b>104</b> runs an EMS and provides a graphical display of relations among received events and anticipated events as described more fully below.</p>
<p id="p-0024" num="0023">Referring to <figref idref="DRAWINGS">FIG. 2</figref>, a block diagram of a data processing system that may be implemented as a server, such as server <b>104</b> in <figref idref="DRAWINGS">FIG. 1</figref>, is depicted in accordance with a preferred embodiment of the present invention. Data processing system <b>200</b> may be a symmetric multiprocessor (SMP) system including a plurality of processors <b>202</b> and <b>204</b> connected to system bus <b>206</b>. Alternatively, a single processor system may be employed. Also connected to system bus <b>206</b> is memory controller/cache <b>208</b>, which provides an interface to local memory <b>209</b>. I/O bus bridge <b>210</b> is connected to system bus <b>206</b> and provides an interface to I/O bus <b>212</b>. Memory controller/cache <b>208</b> and I/O bus bridge <b>210</b> may be integrated as depicted.</p>
<p id="p-0025" num="0024">Peripheral component interconnect (PCI) bus bridge <b>214</b> connected to I/O bus <b>212</b> provides an interface to PCI local bus <b>216</b>. A number of modems may be connected to PCI local bus <b>216</b>. Typical PCI bus implementations will support four PCI expansion slots or add-in connectors. Communications links to clients <b>108</b>-<b>112</b> in <figref idref="DRAWINGS">FIG. 1</figref> may be provided through modem <b>218</b> and network adapter <b>220</b> connected to PCI local bus <b>216</b> through add-in connectors.</p>
<p id="p-0026" num="0025">Additional PCI bus bridges <b>222</b> and <b>224</b> provide interfaces for additional PCI local buses <b>226</b> and <b>228</b>, from which additional modems or network adapters may be supported. In this manner, data processing system <b>200</b> allows connections to multiple network computers. A memory-mapped graphics adapter <b>230</b> and hard disk <b>232</b> may also be connected to I/O bus <b>212</b> as depicted, either directly or indirectly.</p>
<p id="p-0027" num="0026">Those of ordinary skill in the art will appreciate that the hardware depicted in <figref idref="DRAWINGS">FIG. 2</figref> may vary. For example, other peripheral devices, such as optical disk drives and the like, also may be used in addition to or in place of the hardware depicted. The depicted example is not meant to imply architectural limitations with respect to the present invention.</p>
<p id="p-0028" num="0027">The data processing system depicted in <figref idref="DRAWINGS">FIG. 2</figref> may be, for example, an IBM eServer pSeries system, a product of International Business Machines Corporation in Armonk, N.Y., running the Advanced Interactive Executive (AIX) operating system or LINUX operating system.</p>
<p id="p-0029" num="0028">With reference now to <figref idref="DRAWINGS">FIG. 3</figref>, a block diagram illustrating a data processing system is depicted in which the present invention may be implemented. Data processing system <b>300</b> is an example of a client computer. Data processing system <b>300</b> employs a peripheral component interconnect (PCI) local bus architecture. Although the depicted example employs a PCI bus, other bus architectures such as Accelerated Graphics Port (AGP) and Industry Standard Architecture (ISA) may be used. Processor <b>302</b> and main memory <b>304</b> are connected to PCI local bus <b>306</b> through PCI bridge <b>308</b>. PCI bridge <b>308</b> also may include an integrated memory controller and cache memory for processor <b>302</b>. Additional connections to PCI local bus <b>306</b> may be made through direct component interconnection or through add-in boards. In the depicted example, local area network (LAN) adapter <b>310</b>, SCSI host bus adapter <b>312</b>, and expansion bus interface <b>314</b> are connected to PCI local bus <b>306</b> by direct component connection. In contrast, audio adapter <b>316</b>, graphics adapter <b>318</b>, and audio/video adapter <b>319</b> are connected to PCI local bus <b>306</b> by add-in boards inserted into expansion slots. Expansion bus interface <b>314</b> provides a connection for a keyboard and mouse adapter <b>320</b>, modem <b>322</b>, and additional memory <b>324</b>. Small computer system interface (SCSI) host bus adapter <b>312</b> provides a connection for hard disk drive <b>326</b>, tape drive <b>328</b>, and CD-ROM drive <b>330</b>. Typical PCI local bus implementations will support three or four PCI expansion slots or add-in connectors.</p>
<p id="p-0030" num="0029">An operating system runs on processor <b>302</b> and is used to coordinate and provide control of various components within data processing system <b>300</b> in <figref idref="DRAWINGS">FIG. 3</figref>. The operating system may be a commercially available operating system, such as Windows XP, which is available from Microsoft Corporation. An object oriented programming system such as Java may run in conjunction with the operating system and provide calls to the operating system from Java programs or applications executing on data processing system <b>300</b>. &#x201c;Java&#x201d; is a trademark of Sun Microsystems, Inc. Instructions for the operating system, the object-oriented programming system, and applications or programs are located on storage devices, such as hard disk drive <b>326</b>, and may be loaded into main memory <b>304</b> for execution by processor <b>302</b>.</p>
<p id="p-0031" num="0030">Those of ordinary skill in the art will appreciate that the hardware in <figref idref="DRAWINGS">FIG. 3</figref> may vary depending on the implementation. Other internal hardware or peripheral devices, such as flash read-only memory (ROM), equivalent nonvolatile memory, or optical disk drives and the like, may be used in addition to or in place of the hardware depicted in <figref idref="DRAWINGS">FIG. 3</figref>. Also, the processes of the present invention may be applied to a multiprocessor data processing system.</p>
<p id="p-0032" num="0031">As another example, data processing system <b>300</b> may be a stand-alone system configured to be bootable without relying on some type of network communication interfaces As a further example, data processing system <b>300</b> may be a personal digital assistant (PDA) device, which is configured with ROM and/or flash ROM in order to provide non-volatile memory for storing operating system files and/or user-generated data.</p>
<p id="p-0033" num="0032">The depicted example in <figref idref="DRAWINGS">FIG. 3</figref> and above-described examples are not meant to imply architectural limitations. For example, data processing system <b>300</b> also may be a notebook computer or hand held computer in addition to taking the form of a PDA. Data processing system <b>300</b> also may be a kiosk or a Web appliance.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram illustrating components of an EMS implemented according to a preferred embodiment of the present invention. As shown in <figref idref="DRAWINGS">FIG. 4</figref>, EMS <b>400</b> comprises an event database <b>420</b>, correlation engine <b>430</b>, correlation rules database <b>440</b>, event console <b>450</b>, and event relation database <b>460</b>. EMS <b>400</b> is implemented as a computer program product comprising one or more executable instruction sets that may be stored on hard disk <b>232</b> of data processing system <b>200</b> of <figref idref="DRAWINGS">FIG. 2</figref> and processed by a processor, such as processor <b>202</b> or <b>204</b>.</p>
<p id="p-0035" num="0034">Events are conveyed to EMS <b>400</b> from the devices of the network <b>102</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>. In the illustrative example, a first event (EV<b>3</b>) <b>402</b> is received by EMS <b>400</b>, and a subsequent event (EV<b>4</b>) <b>404</b> is later received by EMS <b>400</b>. The events may be placed into event database <b>420</b>. Event database <b>420</b> is a repository that may be accessed by, for example, a structured query language (SQL) front end or interface. Event database <b>420</b> stores events and associated properties. An event may, for example, be stored as a record of a table, and properties of events may be stored as fields of corresponding event records. Other data structures may be suitably substituted for event database <b>420</b>.</p>
<p id="p-0036" num="0035">Events are input into event database <b>420</b> in a syntax compatible with correlation engine <b>430</b>. Event database <b>420</b> may be utilized by an correlation miner or other application that analyzes events and facilities formulation of new correlation rules or causal relations.</p>
<p id="p-0037" num="0036">Additionally, received events are input to correlation engine <b>430</b> that accesses rules of correlation rules database <b>440</b> to determine actions to take. Correlation engine <b>430</b> interprets rules that express or define a situation of interest such as an event pattern or sequence and an action to take in response to the event pattern. In general, correlation engine <b>430</b> receives one or more events, or data derived therefrom, and interrogates correlation rules database <b>440</b> with the event data at runtime. An action to take in response to the interrogation is then retrieved from the correlation rules database <b>440</b>.</p>
<p id="p-0038" num="0037">Correlation engine <b>430</b> also interfaces with event relation database <b>460</b>. In accordance with a preferred embodiment of the present invention, event relation database <b>460</b> stores rules that define correlations among events. For example, rules of event relation database <b>460</b> may define cause and effect relations among events. Other rules may define relations such as clearing relations among events. While event relation database <b>460</b> is illustratively shown as a discrete data structure independently accessed by correlation engine <b>430</b>, causal relation database <b>460</b> may alternatively be integrated with event database <b>420</b> or correlation database <b>440</b>. It should be understood that the illustrated software architecture of <figref idref="DRAWINGS">FIG. 4</figref> is exemplary only and is not intended to imply an architectural limitation of the present invention.</p>
<p id="p-0039" num="0038">Event console <b>450</b> receives analysis data from correlation engine <b>430</b> for generation of event visualization output on a display device at runtime. Event data provided to event console <b>450</b> by correlation engine <b>430</b> may include data representative of an event received by correlation engine <b>430</b>, event property data of the received event retrieved from event database <b>420</b>, action data that indicates a suggested action to take in response to the received event or an anticipated event, and event correlation information obtained from interrogation of event relation database <b>460</b>.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 5</figref> is a diagrammatic illustration of an implementation of event relation database <b>460</b> of <figref idref="DRAWINGS">FIG. 4</figref> implemented in accordance with a preferred embodiment of the present invention. Table <b>500</b> comprises a plurality of records <b>501</b> and <b>502</b>. Table <b>500</b> may be stored on hard disk <b>232</b>, fetched therefrom by processor <b>202</b>, and processed by data processing system <b>200</b> shown in <figref idref="DRAWINGS">FIG. 2</figref>. Each record, such as records <b>501</b><i>a</i>-<b>501</b><i>b</i>, or row, comprises data elements in respective fields <b>502</b><i>a</i>-<b>502</b><i>d. </i></p>
<p id="p-0041" num="0040">Table <b>500</b> has a label, or identifier, assigned thereto. In the present example, table <b>500</b> has a label of &#x201c;RelationDB&#x201d;. Fields <b>502</b><i>a</i>-<b>502</b><i>d </i>each have a respective label, or identifier, that facilitates insertion, deletion, querying, or other data operations or manipulations of table <b>500</b>. In the illustrative example, fields <b>502</b><i>a</i>-<b>502</b><i>d </i>have respective labels of &#x201c;Ante1&#x201d;, &#x201c;Ante2&#x201d;, &#x201c;PR1&#x201d;, and &#x201c;PR2&#x201d;. A particular field, or fields, e.g., fields <b>502</b><i>a </i>and <b>502</b><i>b</i>, may be designated as a key and each respective data element, or the combination of data elements of the key fields, is unique within the key fields. Addressing a particular record, such as records <b>501</b><i>a</i>-<b>501</b><i>b</i>, via an associated key data element is referred to as indexing of the record. Alternatively, a key may be obtained by a function, e.g., a hashing function, that indexes a particular record, such as records <b>501</b><i>a</i>-<b>501</b><i>b. </i></p>
<p id="p-0042" num="0041">Records <b>501</b><i>a</i>-<b>501</b><i>b </i>define respective event relations that may be identified by correlation engine <b>430</b> responsive to receipt of events. Particularly, the exemplary event relations defined by records <b>501</b><i>a</i>-<b>501</b><i>b </i>are causal relations that define cause and effect relationships among events. In the illustrative example, an event relation is defined by one or more antecedent events and one or more associated projected events. As referred to herein, an antecedent event is an event that may cause or induce the occurrence of one or more other events. An antecedent event may be sufficient for causing another event occurrence, or an antecedent event may require one or more other antecedent-events to cause the occurrence of another event. An event that may be anticipated to occur as the result of the occurrence of one or more antecedent events is referred to herein as a projected event. Additionally, an event may be an antecedent event and a projected event. For example, the occurrence of an event may be induced by another event, and the induced event may itself result in the occurrence of another event. Table <b>500</b> is accessed upon receipt of an event for a runtime identification of event relations. In the illustrative example, fields <b>502</b><i>a </i>and <b>502</b><i>b </i>define antecedent events that are associated with projected events defined in fields <b>502</b><i>c </i>and <b>502</b><i>d</i>. For example, record <b>501</b><i>a </i>defines a causal relation having two antecedent events (EV<b>3</b> and EV<b>4</b>) associated with a projected event (EV<b>1</b>). In a similar manner, record <b>501</b><i>b </i>defines a causal relation having a single antecedent event (EV<b>1</b>) with two associated projected events (EV<b>5</b> and EV<b>6</b>). It should be understood that the causal relations shown and described are exemplary only, and the present invention is not limited to any particular types of event relations.</p>
<p id="p-0043" num="0042">Upon receipt of an event, correlation engine <b>430</b> interrogates table <b>500</b> with the received event. The received event, or a derivation thereof such as a unique event identifier, is used by correlation engine <b>430</b> to formulate a query that is submitted to table <b>500</b>. Assume correlation engine <b>430</b> has received event EV<b>3</b>. Correlation engine <b>430</b> may generate, for example, an SQL query such as the following:</p>
<p id="p-0044" num="0043">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="63pt" align="left"/>
<colspec colname="1" colwidth="154pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>SELECT PR1, PR2</entry>
</row>
<row>
<entry/>
<entry>FROM RelationDB</entry>
</row>
<row>
<entry/>
<entry>WHERE (ANTE1=&#x201c;EV3&#x201d;)</entry>
</row>
<row>
<entry/>
<entry>AND (ANTE2=&#x201c;Null&#x201d;)</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
In the present example, a null return data set would be generated as no causal relations are defined having event EV<b>3</b> as a single causal antecedent.
</p>
<p id="p-0045" num="0044">Correlation engine <b>430</b> may then supply the received event EV<b>3</b>, or data derived therefrom, to event console <b>450</b> for runtime generation of visualization output. Additionally, property data associated with the event may be conveyed to event console <b>450</b> as well. In a preferred embodiment, a runtime visualization output representative of events is generated as nodes of a directed graph. For example, <figref idref="DRAWINGS">FIG. 6A</figref> is a diagrammatic illustration of an exemplary runtime visualization output comprising graphical user interface (GUI) <b>650</b> generated by event console <b>450</b> of <figref idref="DRAWINGS">FIG. 4</figref> upon receipt of an event in accordance with a preferred embodiment of the present invention. Runtime visualization output <b>600</b><i>a </i>includes an event representation <b>602</b> provided as a graph node representative of the received event EV<b>3</b> that is displayed in window <b>655</b>. In the present example, no projected event is associated with single causal event EV<b>3</b>. Accordingly, event representation <b>602</b> is graphically output as a single graph node.</p>
<p id="p-0046" num="0045">Returning again to <figref idref="DRAWINGS">FIG. 4</figref>, a second event EV<b>4</b> is received by correlation engine <b>430</b> subsequent to receipt of event EV<b>3</b>. Correlation engine <b>430</b> again formulates an SQL query that is submitted to causal relation database <b>460</b>. For example, the following SQL query may be generated for submission to event relation database <b>460</b> that evaluates whether events <b>402</b> and <b>404</b> may induce the occurrence of one or more projected events:</p>
<p id="p-0047" num="0046">
<tables id="TABLE-US-00002" num="00002">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="168pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>SELECT PR1, PR2</entry>
</row>
<row>
<entry/>
<entry>FROM RelationDB</entry>
</row>
<row>
<entry/>
<entry>WHERE (ANTE1=&#x201c;EV3&#x201d; OR &#x201c;EV4&#x201d;)</entry>
</row>
<row>
<entry/>
<entry>AND (ANTE2=&#x201c;EV3&#x201d; OR &#x201c;EV4&#x201d;)</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 7</figref> is a diagrammatic illustration of a return data set identifying a projected event that is generated by interrogation of event relation database <b>460</b> when interrogated with antecedent events EV<b>3</b> and EV<b>4</b> in accordance with a preferred embodiment of the present invention. As shown, return data set <b>700</b> includes an identification of projected event EV<b>1</b>. Return data set <b>700</b> identifies event EV<b>1</b> as a projected event that may be anticipated to occur due to the receipt of events <b>402</b> and <b>404</b>. Additionally, correlation engine <b>430</b> may interrogate event relation database <b>460</b> to determine if event EV<b>4</b> is a single antecedent event associated with one or more projected events in a manner similar to that described above with reference to the SQL query generated on receipt of event EV<b>3</b>.</p>
<p id="p-0049" num="0048">Correlation engine <b>430</b> may then convey the received event EV<b>4</b> and projected event EV<b>1</b> to event console <b>450</b>. Properties of events EV<b>4</b> and EV<b>1</b> may be conveyed to event console <b>450</b> as well. Event console <b>450</b> updates the runtime visualization output to include the most recently received event and the projected event associated with the received events. Additionally, the event relation among the events is included in the runtime visualization output. For example, <figref idref="DRAWINGS">FIG. 6B</figref> is a diagrammatic illustration of an exemplary runtime visualization output generated by event console <b>450</b> of <figref idref="DRAWINGS">FIG. 4</figref> upon receipt of events EV<b>3</b> and EV<b>4</b> and identification of projected event EV<b>1</b> in accordance with a preferred embodiment of the present invention. Runtime visualization output <b>600</b><i>b </i>includes event representations <b>602</b> and <b>603</b> provided as graph nodes representative of received event EV<b>3</b> and EV<b>4</b>, respectively. Projected event EV<b>1</b> is represented by event representation <b>606</b>. Thus, a runtime visualization output is generated that includes respective representations of a plurality of events, e.g., EV<b>3</b> and EV<b>4</b>, that have occurred and an event that is projected to occur due to the cause-effect relation between the events.</p>
<p id="p-0050" num="0049">In the illustrative example, the causal relation between antecedent events EV<b>3</b> and EV<b>4</b> and projected event EV<b>4</b> is represented by directed edges <b>610</b> and <b>611</b> respectively connecting event representations <b>602</b> and <b>603</b> with event representation <b>606</b>. Particularly, an antecedent event is graphically represented as a source node of a directed edge connecting the antecedent event with the associated projected event, and a projected event is graphically represented as a target node of the directed edge. Moreover, event representation <b>606</b> of event EV<b>1</b> may be graphically designated as a projected event. For example, event representation <b>606</b> is illustratively designated as a projected event by dashed lines enclosing event representation <b>606</b>. However, any manner of graphic designation may be used to distinctly designate the runtime visualization output of an event representation of received events and projected events. For example, the graph nodes comprising event representations may be assigned a particular color indicative of a received event or a projected event.</p>
<p id="p-0051" num="0050">In accordance with another embodiment of the present invention, a projected event may be used to interrogate event relation database <b>460</b>. For example, upon identification of EV<b>1</b> as a projected event, correlation engine <b>430</b> may use the projected event EV<b>1</b> to interrogate event relation database <b>460</b> for additional projected events. In the illustrative example, projected events EV<b>5</b> and EV<b>6</b> are returned to correlation engine <b>430</b> as a return data set upon interrogation of event relation database <b>460</b> with the projected event EV<b>1</b>. Accordingly, correlation engine may provide events EV<b>5</b> and EV<b>6</b> to event console <b>450</b> for update of the runtime visualization output.</p>
<p id="p-0052" num="0051">For example, <figref idref="DRAWINGS">FIG. 6C</figref> is a diagrammatic illustration of runtime visualization output <b>600</b><i>c </i>after receipt of events EV<b>3</b> and EV<b>4</b> and one or more subsequent interrogations of event relation database <b>460</b> in accordance with a preferred embodiment of the present invention. As shown, projected events EV<b>5</b> and EV<b>6</b> are represented by event representations <b>607</b> and <b>608</b>. Events EV<b>5</b> and EV<b>6</b> are graphically designated as projected events by dashed lines encompassing the event representations <b>607</b> and <b>608</b>. The causal relation between projected event EV<b>1</b> and projected events EV<b>5</b> and EV<b>6</b> is designated by directed edges <b>612</b> and <b>613</b> connecting event representation <b>606</b> with event representations <b>607</b> and <b>608</b>. Thus, projected event EV<b>1</b> is graphically designated as an antecedent event of projected events EV<b>5</b> and EV<b>6</b> by way of the graphic representation of the causal relation among events EV<b>1</b>, EV<b>5</b> and EV<b>6</b>.</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 6D</figref> is a diagrammatic illustration of a visualization output depicting a list mode of event information in accordance with preferred embodiment of the present invention. GUI <b>650</b> is representative of a runtime visualization output that may be generated by event console <b>450</b> after identification of event relations after receipt of events EV<b>3</b> and EV<b>4</b>. GUI <b>650</b> comprises event list <b>660</b> having event rows <b>661</b>-<b>665</b> that provide identification of events and associated event properties. Events included in event rows <b>661</b>-<b>665</b> may include received events and events derived from interrogation of event relation database <b>460</b>. Additionally, properties of events identified by event database <b>420</b> of <figref idref="DRAWINGS">FIG. 4</figref> may be displayed in GUI <b>650</b>. Event list <b>660</b> may be displayed concurrently with visualization output depicting event relations, such as visualization output <b>600</b><i>c </i>of <figref idref="DRAWINGS">FIG. 6C</figref>, or alternatively GUI <b>650</b> may be toggled between runtime visualization output of event relations and event list <b>660</b>.</p>
<p id="p-0054" num="0053">As described, a method and computer program product for generating runtime visualization output depicting event relations among events in a networked system is provided. Events are received by an event management system and event representations of the received events are generated in a runtime visualization output. An event relation database defining relations among events is interrogated with the received event. Event relations identified from the interrogation of the event relation database is graphically represented in the runtime visualization output. The visualization output includes a runtime graphic representation of the events and event relations. The runtime visualization output may include representations of a plurality of received events and one or more projected events identified by a cause-effect relation between the plurality of received events and the projected event. Advantageously, a user may easily identify networked system events and event relations.</p>
<p id="p-0055" num="0054">It is important to note that while the present invention has been described in the context of a fully functioning data processing system, those of ordinary skill in the art will appreciate that the processes of the present invention are capable of being distributed in the form of a computer readable medium of instructions and a variety of forms and that the present invention applies equally regardless of the particular type of signal bearing media actually used to carry out the distribution. Examples of computer readable media include recordable-type media, such as a floppy disk, a hard disk drive, a RAM, CD-ROMs, DVD-ROMs, and transmission-type media, such as digital and analog communications links, wired or wireless communications links using transmission forms, such as, for example, radio frequency and light wave transmissions. The computer readable media may take the form of coded formats that are decoded for actual use in a particular data processing system.</p>
<p id="p-0056" num="0055">The description of the present invention has been presented for purposes of illustration and description, and is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. The embodiment was chosen and described in order to best explain the principles of the invention, the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for graphically representing events at runtime in an event management system, the method comprising the computer implemented steps of:
<claim-text>receiving a plurality of events including a first event defining a state of a networked device and a second event defining a state of another networked device;</claim-text>
<claim-text>storing the plurality of events in an event database;</claim-text>
<claim-text>responsive to receiving the first event and the second event, (1) identifying an action to take by interrogating, by a correlation engine, a correlation rules database, and (2) identifying an event relation between the first event, the second event and a projected event, wherein the step of identifying the event relation includes (i) interrogating, by the correlation engine using the first event and the second event, an event relation database having a plurality of records each defining at least one event, and (ii) receiving, by the correlation engine, a return data set including an identification of the event relation between the first event, the second event and the projected event;</claim-text>
<claim-text>responsive to receiving the return data set, identifying another event relation between the projected event and another projected event, wherein the step of identifying the another event relation between the projected event and the another projected event includes (i) interrogating, by the correlation engine, the event relation database using the projected event received in the return data set, and (ii) receiving, by the correlation engine, a second return data set including the another projected event;</claim-text>
<claim-text>retrieving, from the event database, property data associated with the first event, the second event, and the projected event;</claim-text>
<claim-text>sending, by the correlation engine to an event console, the property data, the return data set and the second return data set; and</claim-text>
<claim-text>generating a runtime visualization output by the event console that includes a graphical representation of the first event, the second event, the projected event, the another projected event, the property data, and the event relation, wherein the step of generating the runtime visualization output includes graphically outputting a graph having a first node representative of the first event, a second node representative of the second event, a third node representative of the projected event, and a fourth node representation of the another projected event.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the second return dataset includes a plurality of another projected events.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the step of graphically outputting includes:
<claim-text>graphically outputting a graph edge connecting the first node and the third node, wherein the graph edge is a graphical representation of the event relation, wherein the first node is a source node of the graph edge, and the third node is a target node of the graph edge; and</claim-text>
<claim-text>graphically outputting another graph edge connecting the third node and the fourth node.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the graphical representation of the first event is graphically distinct from the graphical representation of the projected event.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. A computer program product in a computer readable medium for graphically representing events at runtime in an event management system, the computer program product comprising:
<claim-text>first instructions for receiving a first event defining a state of a networked device and a second event defining a state of another networked device;</claim-text>
<claim-text>second instructions for storing the plurality of events in an event database;</claim-text>
<claim-text>third instructions for interrogating a correlation rules database to identify an action to take in response receiving the first event and the second event;</claim-text>
<claim-text>fourth instructions for interrogating an event relation database using the first event and the second event, wherein the event relation database defines a cause-effect event relation between the first event, the second event, and an associated event, wherein the fourth instructions, responsive to interrogating the database, receive a return data set including an identifier of the associated event;</claim-text>
<claim-text>fifth instruction for interrogating, using the identifier of the associated event, the event relation database that defines a cause-effect event relation between the associated event and another associated event;</claim-text>
<claim-text>sixth instructions for retrieving property data associated with the first event, the second event, and the associated event; and</claim-text>
<claim-text>seventh instructions for generating respective graphical representations of the first event, the second event, the associated event, the another associated event, the property data, and the event relation, wherein the graphical representations comprise a directed graph, and wherein the graphical representations of the first event, the second event, the associated event, and the another associated event are respective graph nodes of the directed graph.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The computer program product of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the graphical representation of the event relation comprises a directed edge from the graphical representation of the first event and the second event to the graphical representation of the associated event, and further comprises a directed edge from the graphical representation of the associated event to the graphical representation of the another associated event.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The computer program product of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the graphical representation of the first event and the second event is graphically distinct from the graphical representation of the associated event.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The computer program product of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the fourth instructions are adapted to index a record with an identifier of the first event and the second event.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A data processing system for graphically representing events in an event management system at runtime, comprising:
<claim-text>a memory that contains a set of instructions and an event relation database defining (i) an event relation between a first event, a second event, and an associated event in a record of the event relation database, (ii) another event relation between the associated event and another associated event in another record of the event relation database;</claim-text>
<claim-text>a network adapter adapted to receive event messages from networked devices, including a first event and a second event; and</claim-text>
<claim-text>a processing unit, responsive to execution of the set of instructions, that (i) stores the event messages in an event database; (ii) identifies an action to take by interrogating a correlation rules database, (iii) reads the first event and the second event conveyed to the network adapter and formulates a query that includes an identifier of the first event and the second event, (iv) receives the associated event from the event relation database, (v) formulates another query that includes an identifier of the associated event, (vi) receives the another associated event from the event relation database, and (vii) retrieves property data associated with the first event, the second event, and the associated event from the event database, wherein the processing unit generates a runtime visualization output including a respective graphical representation of the first event, the second event, the associated event, the another associated event, the property data, and the event relation responsive to execution of the query and the another query.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The data processing system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the database comprises a plurality of records each respectively defining a causal relation between a plurality of events.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The data processing system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the associated event is identified in a return data set upon submission of the query to the database.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The data processing system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the graphical representations of the first event, the second event, the associated event, the another associated event, the property data, and the event relation comprise a directed graph.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The data processing system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the graphical representation of the first event and the second event is distinguished from the graphical representation of the associated event.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the event relation database stores rules that define correlations among given events, and the correlation engine interrogates the event relation database using a database query that is formulated by the correlation engine and includes the first event and the second event.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the database query is a structured query language (SQL) database query that is formulated by the correlation engine and includes the first event and the second event.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the correlation rules database stores rules that define actions to take for the given events.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The computer program product of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the event relation database stores rules that define correlations among given events, and the correlation engine interrogates the event relation database using a database query that is formulated by the correlation engine and includes the first event and the second event.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The computer program product of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the database query is a structured query language (SQL) database query that is formulated by the correlation engine and includes the first event and the second event.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The computer program product of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the correlation rules database stores rules that define actions to take for the given events.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The data processing system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the event relation database stores rules that define correlations among given events, and the correlation engine interrogates the event relation database using a database query that is formulated by the correlation engine and includes the first event and the second event.</claim-text>
</claim>
</claims>
</us-patent-grant>
