<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627188-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627188</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13708432</doc-number>
<date>20121207</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>03</class>
<subclass>M</subclass>
<main-group>13</main-group>
<subgroup>03</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>714794</main-classification>
<further-classification>36518509</further-classification>
</classification-national>
<invention-title id="d2e43">Flash memory apparatus and methods using a plurality of decoding stages including optional use of concatenated BCH codes and/or designation of &#x201c;first below&#x201d; cells</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4463375</doc-number>
<kind>A</kind>
<name>Macovski</name>
<date>19840700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>4584686</doc-number>
<kind>A</kind>
<name>Fritze</name>
<date>19860400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>4589084</doc-number>
<kind>A</kind>
<name>Fling et al.</name>
<date>19860500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>4866716</doc-number>
<kind>A</kind>
<name>Weng</name>
<date>19890900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>5077737</doc-number>
<kind>A</kind>
<name>Leger et al.</name>
<date>19911200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>5297153</doc-number>
<kind>A</kind>
<name>Baggen et al.</name>
<date>19940300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>5657332</doc-number>
<kind>A</kind>
<name>Auclair et al.</name>
<date>19970800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>5729490</doc-number>
<kind>A</kind>
<name>Calligaro et al.</name>
<date>19980300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>5793774</doc-number>
<kind>A</kind>
<name>Usui et al.</name>
<date>19980800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>5926409</doc-number>
<kind>A</kind>
<name>Engh et al.</name>
<date>19990700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>5956268</doc-number>
<kind>A</kind>
<name>Lee</name>
<date>19990900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>5982659</doc-number>
<kind>A</kind>
<name>Irrinki et al.</name>
<date>19991100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>6038634</doc-number>
<kind>A</kind>
<name>Ji et al.</name>
<date>20000300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>6094465</doc-number>
<kind>A</kind>
<name>Stein et al.</name>
<date>20000700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>6119245</doc-number>
<kind>A</kind>
<name>Hiratsuka</name>
<date>20000900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>6182261</doc-number>
<kind>B1</kind>
<name>Haller et al.</name>
<date>20010100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>6192497</doc-number>
<kind>B1</kind>
<name>Yang et al.</name>
<date>20010200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>6195287</doc-number>
<kind>B1</kind>
<name>Hirano</name>
<date>20010200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>6199188</doc-number>
<kind>B1</kind>
<name>Shen et al.</name>
<date>20010300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>6209114</doc-number>
<kind>B1</kind>
<name>Wolf et al.</name>
<date>20010300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>6259627</doc-number>
<kind>B1</kind>
<name>Wong</name>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>6278633</doc-number>
<kind>B1</kind>
<name>Wong et al.</name>
<date>20010800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>6279133</doc-number>
<kind>B1</kind>
<name>Vafai et al.</name>
<date>20010800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>6301151</doc-number>
<kind>B1</kind>
<name>Engh et al.</name>
<date>20011000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>6370061</doc-number>
<kind>B1</kind>
<name>Yachareni et al.</name>
<date>20020400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>6374383</doc-number>
<kind>B1</kind>
<name>Weng</name>
<date>20020400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00027">
<document-id>
<country>US</country>
<doc-number>6504891</doc-number>
<kind>B1</kind>
<name>Chevallier</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00028">
<document-id>
<country>US</country>
<doc-number>6532169</doc-number>
<kind>B1</kind>
<name>Mann et al.</name>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00029">
<document-id>
<country>US</country>
<doc-number>6532556</doc-number>
<kind>B1</kind>
<name>Wong et al.</name>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00030">
<document-id>
<country>US</country>
<doc-number>6553533</doc-number>
<kind>B2</kind>
<name>Demura et al.</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00031">
<document-id>
<country>US</country>
<doc-number>6560747</doc-number>
<kind>B1</kind>
<name>Weng</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00032">
<document-id>
<country>US</country>
<doc-number>6637002</doc-number>
<kind>B1</kind>
<name>Weng et al.</name>
<date>20031000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00033">
<document-id>
<country>US</country>
<doc-number>6639865</doc-number>
<kind>B2</kind>
<name>Kwon</name>
<date>20031000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00034">
<document-id>
<country>US</country>
<doc-number>6674665</doc-number>
<kind>B1</kind>
<name>Mann et al.</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00035">
<document-id>
<country>US</country>
<doc-number>6704902</doc-number>
<kind>B1</kind>
<name>Shinbashi et al.</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00036">
<document-id>
<country>US</country>
<doc-number>6751766</doc-number>
<kind>B2</kind>
<name>Guterman et al.</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00037">
<document-id>
<country>US</country>
<doc-number>6772274</doc-number>
<kind>B1</kind>
<name>Estakhri</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00038">
<document-id>
<country>US</country>
<doc-number>6781910</doc-number>
<kind>B2</kind>
<name>Smith</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00039">
<document-id>
<country>US</country>
<doc-number>6792569</doc-number>
<kind>B2</kind>
<name>Cox et al.</name>
<date>20040900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00040">
<document-id>
<country>US</country>
<doc-number>6873543</doc-number>
<kind>B2</kind>
<name>Smith et al.</name>
<date>20050300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00041">
<document-id>
<country>US</country>
<doc-number>6891768</doc-number>
<kind>B2</kind>
<name>Smith et al.</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00042">
<document-id>
<country>US</country>
<doc-number>6914809</doc-number>
<kind>B2</kind>
<name>Hilton et al.</name>
<date>20050700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00043">
<document-id>
<country>US</country>
<doc-number>6915477</doc-number>
<kind>B2</kind>
<name>Gollamudi et al.</name>
<date>20050700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00044">
<document-id>
<country>US</country>
<doc-number>6952365</doc-number>
<kind>B2</kind>
<name>Gonzalez et al.</name>
<date>20051000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00045">
<document-id>
<country>US</country>
<doc-number>6961890</doc-number>
<kind>B2</kind>
<name>Smith</name>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00046">
<document-id>
<country>US</country>
<doc-number>6990012</doc-number>
<kind>B2</kind>
<name>Smith et al.</name>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00047">
<document-id>
<country>US</country>
<doc-number>6996004</doc-number>
<kind>B1</kind>
<name>Fastow et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00048">
<document-id>
<country>US</country>
<doc-number>6999854</doc-number>
<kind>B2</kind>
<name>Roth</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00049">
<document-id>
<country>US</country>
<doc-number>7010739</doc-number>
<kind>B1</kind>
<name>Feng et al.</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00050">
<document-id>
<country>US</country>
<doc-number>7012835</doc-number>
<kind>B2</kind>
<name>Gonzalez et al.</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00051">
<document-id>
<country>US</country>
<doc-number>7038950</doc-number>
<kind>B1</kind>
<name>Hamilton et al.</name>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00052">
<document-id>
<country>US</country>
<doc-number>7068539</doc-number>
<kind>B2</kind>
<name>Guterman et al.</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00053">
<document-id>
<country>US</country>
<doc-number>7079436</doc-number>
<kind>B2</kind>
<name>Perner et al.</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00054">
<document-id>
<country>US</country>
<doc-number>7149950</doc-number>
<kind>B2</kind>
<name>Spencer et al.</name>
<date>20061200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00055">
<document-id>
<country>US</country>
<doc-number>7177977</doc-number>
<kind>B2</kind>
<name>Chen et al.</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00056">
<document-id>
<country>US</country>
<doc-number>7191379</doc-number>
<kind>B2</kind>
<name>Adelmann et al.</name>
<date>20070300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00057">
<document-id>
<country>US</country>
<doc-number>7196946</doc-number>
<kind>B2</kind>
<name>Chen et al.</name>
<date>20070300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00058">
<document-id>
<country>US</country>
<doc-number>7203874</doc-number>
<kind>B2</kind>
<name>Roohparvar</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00059">
<document-id>
<country>US</country>
<doc-number>7290203</doc-number>
<kind>B2</kind>
<name>Emma et al.</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00060">
<document-id>
<country>US</country>
<doc-number>7292365</doc-number>
<kind>B2</kind>
<name>Knox</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00061">
<document-id>
<country>US</country>
<doc-number>7301928</doc-number>
<kind>B2</kind>
<name>Nakabayashi et al.</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00062">
<document-id>
<country>US</country>
<doc-number>7441067</doc-number>
<kind>B2</kind>
<name>Gorobets et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00063">
<document-id>
<country>US</country>
<doc-number>7466575</doc-number>
<kind>B2</kind>
<name>Shalvi et al.</name>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00064">
<document-id>
<country>US</country>
<doc-number>7533328</doc-number>
<kind>B2</kind>
<name>Alrod et al.</name>
<date>20090500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00065">
<document-id>
<country>US</country>
<doc-number>7558109</doc-number>
<kind>B2</kind>
<name>Brandman et al.</name>
<date>20090700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>36518503</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00066">
<document-id>
<country>US</country>
<doc-number>7593263</doc-number>
<kind>B2</kind>
<name>Sokolov et al.</name>
<date>20090900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00067">
<document-id>
<country>US</country>
<doc-number>7697326</doc-number>
<kind>B2</kind>
<name>Sommer et al.</name>
<date>20100400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00068">
<document-id>
<country>US</country>
<doc-number>7706182</doc-number>
<kind>B2</kind>
<name>Shalvi et al.</name>
<date>20100400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00069">
<document-id>
<country>US</country>
<doc-number>7804718</doc-number>
<kind>B2</kind>
<name>Kim</name>
<date>20100900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00070">
<document-id>
<country>US</country>
<doc-number>7805663</doc-number>
<kind>B2</kind>
<name>Brandman et al.</name>
<date>20100900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00071">
<document-id>
<country>US</country>
<doc-number>7805664</doc-number>
<kind>B1</kind>
<name>Yang et al.</name>
<date>20100900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00072">
<document-id>
<country>US</country>
<doc-number>7844877</doc-number>
<kind>B2</kind>
<name>Litsyn et al.</name>
<date>20101100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00073">
<document-id>
<country>US</country>
<doc-number>7904783</doc-number>
<kind>B2</kind>
<name>Brandman et al.</name>
<date>20110300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714755</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00074">
<document-id>
<country>US</country>
<doc-number>7961797</doc-number>
<kind>B1</kind>
<name>Yang et al.</name>
<date>20110600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00075">
<document-id>
<country>US</country>
<doc-number>8020073</doc-number>
<kind>B2</kind>
<name>Emma et al.</name>
<date>20110900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00076">
<document-id>
<country>US</country>
<doc-number>8122328</doc-number>
<kind>B2</kind>
<name>Liu et al.</name>
<date>20120200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00077">
<document-id>
<country>US</country>
<doc-number>2002/0063774</doc-number>
<kind>A1</kind>
<name>Hillis et al.</name>
<date>20020500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00078">
<document-id>
<country>US</country>
<doc-number>2002/0085419</doc-number>
<kind>A1</kind>
<name>Kwon et al.</name>
<date>20020700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00079">
<document-id>
<country>US</country>
<doc-number>2002/0154769</doc-number>
<kind>A1</kind>
<name>Petersen et al.</name>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00080">
<document-id>
<country>US</country>
<doc-number>2003/0065876</doc-number>
<kind>A1</kind>
<name>Lasser</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00081">
<document-id>
<country>US</country>
<doc-number>2003/0101404</doc-number>
<kind>A1</kind>
<name>Zhao et al.</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00082">
<document-id>
<country>US</country>
<doc-number>2003/0105620</doc-number>
<kind>A1</kind>
<name>Bowen</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00083">
<document-id>
<country>US</country>
<doc-number>2003/0192007</doc-number>
<kind>A1</kind>
<name>Miller et al.</name>
<date>20031000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00084">
<document-id>
<country>US</country>
<doc-number>2004/0015771</doc-number>
<kind>A1</kind>
<name>Lasser et al.</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00085">
<document-id>
<country>US</country>
<doc-number>2004/0030971</doc-number>
<kind>A1</kind>
<name>Tanaka et al.</name>
<date>20040200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00086">
<document-id>
<country>US</country>
<doc-number>2004/0153722</doc-number>
<kind>A1</kind>
<name>Lee</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00087">
<document-id>
<country>US</country>
<doc-number>2004/0153817</doc-number>
<kind>A1</kind>
<name>Norman et al.</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00088">
<document-id>
<country>US</country>
<doc-number>2004/0181735</doc-number>
<kind>A1</kind>
<name>Xin</name>
<date>20040900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00089">
<document-id>
<country>US</country>
<doc-number>2005/0013165</doc-number>
<kind>A1</kind>
<name>Ban</name>
<date>20050100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00090">
<document-id>
<country>US</country>
<doc-number>2005/0018482</doc-number>
<kind>A1</kind>
<name>Cemea et al.</name>
<date>20050100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00091">
<document-id>
<country>US</country>
<doc-number>2005/0083735</doc-number>
<kind>A1</kind>
<name>Chen et al.</name>
<date>20050400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00092">
<document-id>
<country>US</country>
<doc-number>2005/0117401</doc-number>
<kind>A1</kind>
<name>Chen et al.</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00093">
<document-id>
<country>US</country>
<doc-number>2005/0120265</doc-number>
<kind>A1</kind>
<name>Pline et al.</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00094">
<document-id>
<country>US</country>
<doc-number>2005/0128811</doc-number>
<kind>A1</kind>
<name>Kato et al.</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00095">
<document-id>
<country>US</country>
<doc-number>2005/0138533</doc-number>
<kind>A1</kind>
<name>Le Bars et al.</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00096">
<document-id>
<country>US</country>
<doc-number>2005/0144213</doc-number>
<kind>A1</kind>
<name>Simkins et al.</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00097">
<document-id>
<country>US</country>
<doc-number>2005/0144368</doc-number>
<kind>A1</kind>
<name>Chung et al.</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00098">
<document-id>
<country>US</country>
<doc-number>2005/0169057</doc-number>
<kind>A1</kind>
<name>Shibata et al.</name>
<date>20050800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00099">
<document-id>
<country>US</country>
<doc-number>2005/0172179</doc-number>
<kind>A1</kind>
<name>Brandenberger et al.</name>
<date>20050800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00100">
<document-id>
<country>US</country>
<doc-number>2005/0213393</doc-number>
<kind>A1</kind>
<name>Lasser</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00101">
<document-id>
<country>US</country>
<doc-number>2006/0059406</doc-number>
<kind>A1</kind>
<name>Micheloni et al.</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00102">
<document-id>
<country>US</country>
<doc-number>2006/0059409</doc-number>
<kind>A1</kind>
<name>Lee</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00103">
<document-id>
<country>US</country>
<doc-number>2006/0064537</doc-number>
<kind>A1</kind>
<name>Oshima</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00104">
<document-id>
<country>US</country>
<doc-number>2006/0101193</doc-number>
<kind>A1</kind>
<name>Murin</name>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00105">
<document-id>
<country>US</country>
<doc-number>2006/0203587</doc-number>
<kind>A1</kind>
<name>Li et al.</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00106">
<document-id>
<country>US</country>
<doc-number>2006/0221692</doc-number>
<kind>A1</kind>
<name>Chen</name>
<date>20061000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00107">
<document-id>
<country>US</country>
<doc-number>2006/0248434</doc-number>
<kind>A1</kind>
<name>Radke et al.</name>
<date>20061100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00108">
<document-id>
<country>US</country>
<doc-number>2006/0268608</doc-number>
<kind>A1</kind>
<name>Noguchi et al.</name>
<date>20061100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00109">
<document-id>
<country>US</country>
<doc-number>2006/0294312</doc-number>
<kind>A1</kind>
<name>Walmsley</name>
<date>20061200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00110">
<document-id>
<country>US</country>
<doc-number>2007/0025157</doc-number>
<kind>A1</kind>
<name>Wan et al.</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00111">
<document-id>
<country>US</country>
<doc-number>2007/0063180</doc-number>
<kind>A1</kind>
<name>Asano et al.</name>
<date>20070300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00112">
<document-id>
<country>US</country>
<doc-number>2007/0103992</doc-number>
<kind>A1</kind>
<name>Sakui et al.</name>
<date>20070500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00113">
<document-id>
<country>US</country>
<doc-number>2007/0104004</doc-number>
<kind>A1</kind>
<name>So et al.</name>
<date>20070500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00114">
<document-id>
<country>US</country>
<doc-number>2007/0109858</doc-number>
<kind>A1</kind>
<name>Conley et al.</name>
<date>20070500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00115">
<document-id>
<country>US</country>
<doc-number>2007/0124652</doc-number>
<kind>A1</kind>
<name>Litsyn et al.</name>
<date>20070500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00116">
<document-id>
<country>US</country>
<doc-number>2007/0143561</doc-number>
<kind>A1</kind>
<name>Gorobets</name>
<date>20070600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00117">
<document-id>
<country>US</country>
<doc-number>2007/0150694</doc-number>
<kind>A1</kind>
<name>Chang et al.</name>
<date>20070600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00118">
<document-id>
<country>US</country>
<doc-number>2007/0168625</doc-number>
<kind>A1</kind>
<name>Cornwell et al.</name>
<date>20070700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00119">
<document-id>
<country>US</country>
<doc-number>2007/0171714</doc-number>
<kind>A1</kind>
<name>Wu et al.</name>
<date>20070700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00120">
<document-id>
<country>US</country>
<doc-number>2007/0171730</doc-number>
<kind>A1</kind>
<name>Ramamoorthy et al.</name>
<date>20070700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00121">
<document-id>
<country>US</country>
<doc-number>2007/0180346</doc-number>
<kind>A1</kind>
<name>Murin</name>
<date>20070800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00122">
<document-id>
<country>US</country>
<doc-number>2007/0223277</doc-number>
<kind>A1</kind>
<name>Tanaka et al.</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00123">
<document-id>
<country>US</country>
<doc-number>2007/0226582</doc-number>
<kind>A1</kind>
<name>Tang et al.</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00124">
<document-id>
<country>US</country>
<doc-number>2007/0226592</doc-number>
<kind>A1</kind>
<name>Radke</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00125">
<document-id>
<country>US</country>
<doc-number>2007/0228449</doc-number>
<kind>A1</kind>
<name>Takano et al.</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00126">
<document-id>
<country>US</country>
<doc-number>2007/0253249</doc-number>
<kind>A1</kind>
<name>Kang et al.</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00127">
<document-id>
<country>US</country>
<doc-number>2007/0253250</doc-number>
<kind>A1</kind>
<name>Shibata et al.</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00128">
<document-id>
<country>US</country>
<doc-number>2007/0263439</doc-number>
<kind>A1</kind>
<name>Cornwell et al.</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00129">
<document-id>
<country>US</country>
<doc-number>2007/0266291</doc-number>
<kind>A1</kind>
<name>Toda et al.</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00130">
<document-id>
<country>US</country>
<doc-number>2007/0271494</doc-number>
<kind>A1</kind>
<name>Gorobets</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00131">
<document-id>
<country>US</country>
<doc-number>2008/0010581</doc-number>
<kind>A1</kind>
<name>Alrod et al.</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00132">
<document-id>
<country>US</country>
<doc-number>2008/0028014</doc-number>
<kind>A1</kind>
<name>Hilt et al.</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00133">
<document-id>
<country>US</country>
<doc-number>2008/0055989</doc-number>
<kind>A1</kind>
<name>Lee et al.</name>
<date>20080300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00134">
<document-id>
<country>US</country>
<doc-number>2008/0082897</doc-number>
<kind>A1</kind>
<name>Brandman et al.</name>
<date>20080400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00135">
<document-id>
<country>US</country>
<doc-number>2008/0092026</doc-number>
<kind>A1</kind>
<name>Brandman et al.</name>
<date>20080400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714793</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00136">
<document-id>
<country>US</country>
<doc-number>2008/0104309</doc-number>
<kind>A1</kind>
<name>Cheon et al.</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00137">
<document-id>
<country>US</country>
<doc-number>2008/0116509</doc-number>
<kind>A1</kind>
<name>Harari et al.</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00138">
<document-id>
<country>US</country>
<doc-number>2008/0123420</doc-number>
<kind>A1</kind>
<name>Brandman et al.</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>36518509</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00139">
<document-id>
<country>US</country>
<doc-number>2008/0126686</doc-number>
<kind>A1</kind>
<name>Sokolov et al.</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00140">
<document-id>
<country>US</country>
<doc-number>2008/0127104</doc-number>
<kind>A1</kind>
<name>Li et al.</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00141">
<document-id>
<country>US</country>
<doc-number>2008/0128790</doc-number>
<kind>A1</kind>
<name>Jung</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00142">
<document-id>
<country>US</country>
<doc-number>2008/0130341</doc-number>
<kind>A1</kind>
<name>Shalvi et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00143">
<document-id>
<country>US</country>
<doc-number>2008/0137413</doc-number>
<kind>A1</kind>
<name>Kong et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00144">
<document-id>
<country>US</country>
<doc-number>2008/0148115</doc-number>
<kind>A1</kind>
<name>Sokolov et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00145">
<document-id>
<country>US</country>
<doc-number>2008/0151617</doc-number>
<kind>A1</kind>
<name>Alrod et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>3651852</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00146">
<document-id>
<country>US</country>
<doc-number>2008/0158958</doc-number>
<kind>A1</kind>
<name>Shalvi et al.</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00147">
<document-id>
<country>US</country>
<doc-number>2008/0159059</doc-number>
<kind>A1</kind>
<name>Moyer</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00148">
<document-id>
<country>US</country>
<doc-number>2008/0162079</doc-number>
<kind>A1</kind>
<name>Astigarraga et al.</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00149">
<document-id>
<country>US</country>
<doc-number>2008/0168216</doc-number>
<kind>A1</kind>
<name>Lee</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00150">
<document-id>
<country>US</country>
<doc-number>2008/0168320</doc-number>
<kind>A1</kind>
<name>Cassuto et al.</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00151">
<document-id>
<country>US</country>
<doc-number>2008/0181001</doc-number>
<kind>A1</kind>
<name>Shalvi</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00152">
<document-id>
<country>US</country>
<doc-number>2008/0198650</doc-number>
<kind>A1</kind>
<name>Shalvi et al.</name>
<date>20080800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00153">
<document-id>
<country>US</country>
<doc-number>2008/0198652</doc-number>
<kind>A1</kind>
<name>Shalvi et al.</name>
<date>20080800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00154">
<document-id>
<country>US</country>
<doc-number>2008/0219050</doc-number>
<kind>A1</kind>
<name>Shalvi et al.</name>
<date>20080900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00155">
<document-id>
<country>US</country>
<doc-number>2008/0225599</doc-number>
<kind>A1</kind>
<name>Chae</name>
<date>20080900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00156">
<document-id>
<country>US</country>
<doc-number>2008/0263262</doc-number>
<kind>A1</kind>
<name>Sokolov et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00157">
<document-id>
<country>US</country>
<doc-number>2008/0282106</doc-number>
<kind>A1</kind>
<name>Shalvi et al.</name>
<date>20081100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00158">
<document-id>
<country>US</country>
<doc-number>2008/0285351</doc-number>
<kind>A1</kind>
<name>Shlick et al.</name>
<date>20081100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00159">
<document-id>
<country>US</country>
<doc-number>2008/0301532</doc-number>
<kind>A1</kind>
<name>Uchikawa et al.</name>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00160">
<document-id>
<country>US</country>
<doc-number>2009/0024905</doc-number>
<kind>A1</kind>
<name>Shalvi et al.</name>
<date>20090100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00161">
<document-id>
<country>US</country>
<doc-number>2009/0043951</doc-number>
<kind>A1</kind>
<name>Shalvi et al.</name>
<date>20090200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00162">
<document-id>
<country>US</country>
<doc-number>2009/0072303</doc-number>
<kind>A9</kind>
<name>Prall et al.</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00163">
<document-id>
<country>US</country>
<doc-number>2009/0091979</doc-number>
<kind>A1</kind>
<name>Shalvi</name>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00164">
<document-id>
<country>US</country>
<doc-number>2009/0103358</doc-number>
<kind>A1</kind>
<name>Sommer et al.</name>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00165">
<document-id>
<country>US</country>
<doc-number>2009/0106485</doc-number>
<kind>A1</kind>
<name>Anholt</name>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00166">
<document-id>
<country>US</country>
<doc-number>2009/0113275</doc-number>
<kind>A1</kind>
<name>Chen et al.</name>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00167">
<document-id>
<country>US</country>
<doc-number>2009/0125671</doc-number>
<kind>A1</kind>
<name>Flynn et al.</name>
<date>20090500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00168">
<document-id>
<country>US</country>
<doc-number>2009/0144600</doc-number>
<kind>A1</kind>
<name>Perlmutter et al.</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00169">
<document-id>
<country>US</country>
<doc-number>2009/0150748</doc-number>
<kind>A1</kind>
<name>Egner et al.</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00170">
<document-id>
<country>US</country>
<doc-number>2009/0157964</doc-number>
<kind>A1</kind>
<name>Kasorla et al.</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00171">
<document-id>
<country>US</country>
<doc-number>2009/0158126</doc-number>
<kind>A1</kind>
<name>Perlmutter et al.</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00172">
<document-id>
<country>US</country>
<doc-number>2009/0168524</doc-number>
<kind>A1</kind>
<name>Golov et al.</name>
<date>20090700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00173">
<document-id>
<country>US</country>
<doc-number>2009/0187803</doc-number>
<kind>A1</kind>
<name>Anholt et al.</name>
<date>20090700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00174">
<document-id>
<country>US</country>
<doc-number>2009/0199074</doc-number>
<kind>A1</kind>
<name>Sommer</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00175">
<document-id>
<country>US</country>
<doc-number>2009/0213653</doc-number>
<kind>A1</kind>
<name>Perlmutter et al.</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00176">
<document-id>
<country>US</country>
<doc-number>2009/0213654</doc-number>
<kind>A1</kind>
<name>Perlmutter et al.</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00177">
<document-id>
<country>US</country>
<doc-number>2009/0228761</doc-number>
<kind>A1</kind>
<name>Perlmutter et al.</name>
<date>20090900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00178">
<document-id>
<country>US</country>
<doc-number>2009/0240872</doc-number>
<kind>A1</kind>
<name>Perlmutter et al.</name>
<date>20090900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00179">
<document-id>
<country>US</country>
<doc-number>2010/0005270</doc-number>
<kind>A1</kind>
<name>Jiang</name>
<date>20100100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00180">
<document-id>
<country>US</country>
<doc-number>2010/0058146</doc-number>
<kind>A1</kind>
<name>Weingarten et al.</name>
<date>20100300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00181">
<document-id>
<country>US</country>
<doc-number>2010/0064096</doc-number>
<kind>A1</kind>
<name>Weingarten et al.</name>
<date>20100300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00182">
<document-id>
<country>US</country>
<doc-number>2010/0088557</doc-number>
<kind>A1</kind>
<name>Weingarten et al.</name>
<date>20100400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00183">
<document-id>
<country>US</country>
<doc-number>2010/0091535</doc-number>
<kind>A1</kind>
<name>Sommer et al.</name>
<date>20100400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00184">
<document-id>
<country>US</country>
<doc-number>2010/0095186</doc-number>
<kind>A1</kind>
<name>Weingarten</name>
<date>20100400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00185">
<document-id>
<country>US</country>
<doc-number>2010/0110787</doc-number>
<kind>A1</kind>
<name>Shalvi et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00186">
<document-id>
<country>US</country>
<doc-number>2010/0115376</doc-number>
<kind>A1</kind>
<name>Shalvi et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00187">
<document-id>
<country>US</country>
<doc-number>2010/0122113</doc-number>
<kind>A1</kind>
<name>Weingarten et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00188">
<document-id>
<country>US</country>
<doc-number>2010/0124088</doc-number>
<kind>A1</kind>
<name>Shalvi et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00189">
<document-id>
<country>US</country>
<doc-number>2010/0131580</doc-number>
<kind>A1</kind>
<name>Kanter et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00190">
<document-id>
<country>US</country>
<doc-number>2010/0131806</doc-number>
<kind>A1</kind>
<name>Weingarten et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00191">
<document-id>
<country>US</country>
<doc-number>2010/0131809</doc-number>
<kind>A1</kind>
<name>Katz</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00192">
<document-id>
<country>US</country>
<doc-number>2010/0131826</doc-number>
<kind>A1</kind>
<name>Shalvi et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00193">
<document-id>
<country>US</country>
<doc-number>2010/0131827</doc-number>
<kind>A1</kind>
<name>Sokolov et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00194">
<document-id>
<country>US</country>
<doc-number>2010/0131831</doc-number>
<kind>A1</kind>
<name>Weingarten et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00195">
<document-id>
<country>US</country>
<doc-number>2010/0146191</doc-number>
<kind>A1</kind>
<name>Katz</name>
<date>20100600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00196">
<document-id>
<country>US</country>
<doc-number>2010/0146192</doc-number>
<kind>A1</kind>
<name>Weingarten et al.</name>
<date>20100600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00197">
<document-id>
<country>US</country>
<doc-number>2010/0149881</doc-number>
<kind>A1</kind>
<name>Lee et al.</name>
<date>20100600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00198">
<document-id>
<country>US</country>
<doc-number>2010/0180073</doc-number>
<kind>A1</kind>
<name>Weingarten et al.</name>
<date>20100700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00199">
<document-id>
<country>US</country>
<doc-number>2010/0199149</doc-number>
<kind>A1</kind>
<name>Weingarten et al.</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00200">
<document-id>
<country>US</country>
<doc-number>2010/0211724</doc-number>
<kind>A1</kind>
<name>Weingarten</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00201">
<document-id>
<country>US</country>
<doc-number>2010/0211833</doc-number>
<kind>A1</kind>
<name>Weingarten</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00202">
<document-id>
<country>US</country>
<doc-number>2010/0211856</doc-number>
<kind>A1</kind>
<name>Weingarten</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00203">
<document-id>
<country>US</country>
<doc-number>2010/0251066</doc-number>
<kind>A1</kind>
<name>Radke</name>
<date>20100900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00204">
<document-id>
<country>US</country>
<doc-number>2010/0253555</doc-number>
<kind>A1</kind>
<name>Weingarten et al.</name>
<date>20101000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00205">
<document-id>
<country>US</country>
<doc-number>2010/0257309</doc-number>
<kind>A1</kind>
<name>Barsky et al.</name>
<date>20101000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00206">
<document-id>
<country>US</country>
<doc-number>2010/0293321</doc-number>
<kind>A1</kind>
<name>Weingarten</name>
<date>20101100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00207">
<document-id>
<country>US</country>
<doc-number>2011/0051521</doc-number>
<kind>A1</kind>
<name>Levy et al.</name>
<date>20110300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00208">
<document-id>
<country>US</country>
<doc-number>2011/0055461</doc-number>
<kind>A1</kind>
<name>Steiner et al.</name>
<date>20110300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00209">
<document-id>
<country>US</country>
<doc-number>2011/0096612</doc-number>
<kind>A1</kind>
<name>Steiner et al.</name>
<date>20110400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00210">
<document-id>
<country>US</country>
<doc-number>2011/0119562</doc-number>
<kind>A1</kind>
<name>Steiner et al.</name>
<date>20110500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00211">
<document-id>
<country>US</country>
<doc-number>2011/0153919</doc-number>
<kind>A1</kind>
<name>Sabbag</name>
<date>20110600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00212">
<document-id>
<country>US</country>
<doc-number>2011/0161775</doc-number>
<kind>A1</kind>
<name>Weingarten</name>
<date>20110600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00213">
<document-id>
<country>US</country>
<doc-number>2011/0214029</doc-number>
<kind>A1</kind>
<name>Steiner et al.</name>
<date>20110900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00214">
<document-id>
<country>US</country>
<doc-number>2011/0214039</doc-number>
<kind>A1</kind>
<name>Steiner et al.</name>
<date>20110900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00215">
<document-id>
<country>US</country>
<doc-number>2011/0246792</doc-number>
<kind>A1</kind>
<name>Weingarten</name>
<date>20111000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00216">
<document-id>
<country>US</country>
<doc-number>2011/0246852</doc-number>
<kind>A1</kind>
<name>Sabbag</name>
<date>20111000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00217">
<document-id>
<country>US</country>
<doc-number>2011/0252187</doc-number>
<kind>A1</kind>
<name>Segal et al.</name>
<date>20111000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00218">
<document-id>
<country>US</country>
<doc-number>2011/0252188</doc-number>
<kind>A1</kind>
<name>Weingarten</name>
<date>20111000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00219">
<document-id>
<country>US</country>
<doc-number>2011/0271043</doc-number>
<kind>A1</kind>
<name>Segal et al.</name>
<date>20111100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00220">
<document-id>
<country>US</country>
<doc-number>2011/0302428</doc-number>
<kind>A1</kind>
<name>Weingarten</name>
<date>20111200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00221">
<document-id>
<country>US</country>
<doc-number>2012/0001778</doc-number>
<kind>A1</kind>
<name>Steiner et al.</name>
<date>20120100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00222">
<document-id>
<country>US</country>
<doc-number>2012/0005554</doc-number>
<kind>A1</kind>
<name>Steiner et al.</name>
<date>20120100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00223">
<document-id>
<country>US</country>
<doc-number>2012/0005558</doc-number>
<kind>A1</kind>
<name>Steiner et al.</name>
<date>20120100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00224">
<document-id>
<country>US</country>
<doc-number>2012/0005560</doc-number>
<kind>A1</kind>
<name>Steiner et al.</name>
<date>20120100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00225">
<document-id>
<country>US</country>
<doc-number>2012/0008401</doc-number>
<kind>A1</kind>
<name>Katz et al.</name>
<date>20120100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00226">
<document-id>
<country>US</country>
<doc-number>2012/0008414</doc-number>
<kind>A1</kind>
<name>Katz et al.</name>
<date>20120100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00227">
<document-id>
<country>US</country>
<doc-number>2012/0051144</doc-number>
<kind>A1</kind>
<name>Weingarten et al.</name>
<date>20120300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00228">
<document-id>
<country>US</country>
<doc-number>2012/0063227</doc-number>
<kind>A1</kind>
<name>Weingarten et al.</name>
<date>20120300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00229">
<document-id>
<country>US</country>
<doc-number>2012/0066441</doc-number>
<kind>A1</kind>
<name>Weingarten</name>
<date>20120300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00230">
<document-id>
<country>US</country>
<doc-number>2012/0110250</doc-number>
<kind>A1</kind>
<name>Sabbag et al.</name>
<date>20120500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00231">
<othercit>Search Report of PCT Patent Application WO 2009/118720 A3.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00232">
<othercit>Search Report of PCT Patent Application WO 2009/095902 A3.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00233">
<othercit>Search Report of PCT Patent Application WO 2009/078006 A3.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00234">
<othercit>Search Report of PCT Patent Application WO 2009/074979 A3.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00235">
<othercit>Search Report of PCT Patent Application WO 2009/074978 A3.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00236">
<othercit>Search Report of PCT Patent Application WO 2009/072105 A3.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00237">
<othercit>Search Report of PCT Patent Application WO 2009/072104 A3.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00238">
<othercit>Search Report of PCT Patent Application WO 2009/072103 A3.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00239">
<othercit>Search Report of PCT Patent Application WO 2009/072102 A3.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00240">
<othercit>Search Report of PCT Patent Application WO 2009/072101 A3.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00241">
<othercit>Search Report of PCT Patent Application WO 2009/072100 A3.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00242">
<othercit>Search Report of PCT Patent Application WO 2009/053963 A3.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00243">
<othercit>Search Report of PCT Patent Application WO 2009/053962 A3.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00244">
<othercit>Search Report of PCT Patent Application WO 2009/053961 A3.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00245">
<othercit>Search Report of PCT Patent Application WO 2009/037697 A3.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00246">
<othercit>Yani Chen, Kcshab K. Parhi, &#x201c;Small Area Parallel Chien Search Architectures for Long BCH Codes&#x201d;, Ieee Transactions on Very Large Scale Integration(VLSI) Systems, vol. 12, No. 5, May 2004.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00247">
<othercit>Yuejian Wu, &#x201c;Low Power Decoding of BCH Codes&#x201d;, Nortel Networks, Ottawa, Ont., Canada, in Circuits and systems, 2004. ISCAS '04. Proceeding of the 2004 International Symposium on Circuits and Systems, published May 23-26, 2004, vol. 2, pp. H-369-72 vol. 2.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00248">
<othercit>Michael Purser, &#x201c;Introduction to Error Correcting Codes&#x201d;, Artech House Inc., 1995.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00249">
<othercit>Ron M. Roth, &#x201c;Introduction to Coding Theory&#x201d;, Cambridge University Press, 2006.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00250">
<othercit>Akash Kumar, Sergei Sawitzki, &#x201c;High-Throughput and Low Power Architectures for Reed Solomon Decoder&#x201d;, (a.kumar at tue.nl, Eindhoven University of Technology and sergei.sawitzki at philips.com), Oct. 2005.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00251">
<othercit>Todd K.Moon, &#x201c;Error Correction Coding Mathematical Methods and Algorithms&#x201d;, A John Wiley &#x26; Sons, Inc., 2005.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00252">
<othercit>Richard E. Blahut, &#x201c;Algebraic Codes for Data Transmission&#x201d;, Cambridge University Press, 2003.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00253">
<othercit>David Esseni, Bruno Ricco, &#x201c;Trading-Off Programming Speed and Current Absorption in Flash Memories with the Ramped-Gate Programming Technique&#x201d;, Ieee Transactions on Electron Devices, vol. 47, No. 4, Apr. 2000.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00254">
<othercit>Giovanni Campardo, Rino Micheloni, David Novosel, &#x201c;VLSI&#x2014;Design of Non-Volatile Memories&#x201d;, Springer Berlin Heidelberg New York, 2005.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00255">
<othercit>John G. Proakis, &#x201c;Digital Communications&#x201d;, 3rd ed., New York: McGraw-Hill, 1995.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00256">
<othercit>J.M. Portal, H. Aziza, D. Nee, &#x201c;EEPROM Memory: Threshold Voltage Built in Self Diagnosis&#x201d;, ITC International Test Conference, Paper 2.1, Feb. 2005.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00257">
<othercit>J.M. Portal, H. Aziza, D. Nee, &#x201c;EEPROM Diagnosis Based on Threshold Voltage Embedded Measurement&#x201d;, Journal of Electronic Testing: Theory and Applications 21, 33-42, 2005.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00258">
<othercit>G. Tao, A. Scarpa, J. Dijkstra, W. Stidl, F. Kuper, Data retention prediction for modern floating gate non-volatile memories, Microelectronics Reliability 40 (2000), 1561-1566.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00259">
<othercit>T. Hirncno, N. Matsukawa, H. Hazama, K. Sakui, M. Oshikiri, K. Masuda, K. Kanda, Y. Itoh, J. Miyamoto, &#x201c;A New Technique for Measuring Threshold Voltage Distribution in Flash EEPROM Devices&#x201d;, Proc. IEEE 1995 Int. Conference on Microelectronics Test Structures, vol. 8, Mar. 1995.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00260">
<othercit>Boaz Eitan, Guy Cohen, Assaf Shappir, Eli Lusky, Amichai Givant, Meir Janai, Ilan Bloom, Yan Polansky, Oleg Dadashev, Avi Lavan, Ran Sahar, Eduardo Maayan, &#x201c;4-bit per Cell NROM Reliability&#x201d;, Appears on the website of Saifun.com.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00261">
<othercit>Paulo Cappelletti, Clara Golla, Piero Olivo, Enrico Zanoni, &#x201c;Flash Memories&#x201d;, Kluwer Academic Publishers, 1999.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00262">
<othercit>JEDEC Standard, &#x201c;Stress-Test-Driven Qualification of Integrated Circuits&#x201d;, JEDEC Solid State Technology Association. JEDEC Standard No. 47F pp. 1-26, Dec. 2007.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00263">
<othercit>Dempster, et al., &#x201c;Maximum Likelihood from Incomplete Data via the EM Algorithm&#x201d;, Journal of the Royal Statistical Society. Series B (Methodological), vol. 39, No. 1 (1997), pp. 1-38.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00264">
<othercit>Mielke, et al., &#x201c; Flash EEPROM Threshold Instabilities due to Charge Trapping During Program/Erase Cycling&#x201d;, IEEE Transactions on Device and Materials Reliability, vol. 4, No. 3, Sep. 2004, pp. 335-344.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00265">
<othercit>Daneshbeh, &#x201c;Bit Serial Systolic Architectures for Multiplicative Inversion and Division over GF (2)&#x201d;, A thesis presented to the University of Waterloo, Ontario, Canada, 2005, pp. 1-118.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00266">
<othercit>Chen, Formulas for the solutions of Quadratic Equations over GF (2), IEEE Trans. Inform. Theory, vol. IT-28, No. 5, Sep. 1982, pp. 792-794.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00267">
<othercit>Berlekamp et al., &#x201c;On the Solution of Algebraic Equations over Finite Fields&#x201d;, Inform. Cont. 10, Oct. 1967, pp. 553-564.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>36518509</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>34</number-of-drawing-sheets>
<number-of-figures>41</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>12667386</doc-number>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>8335977</doc-number>
</document-id>
</parent-grant-document>
<parent-pct-document>
<document-id>
<country>WO</country>
<doc-number>PCT/IL2008/001233</doc-number>
<date>20080917</date>
</document-id>
</parent-pct-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13708432</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60996782</doc-number>
<date>20071205</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61006120</doc-number>
<date>20071219</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61006805</doc-number>
<date>20080131</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61064853</doc-number>
<date>20080331</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61071465</doc-number>
<date>20080430</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61071464</doc-number>
<date>20080430</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61129608</doc-number>
<date>20080708</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20130104005</doc-number>
<kind>A1</kind>
<date>20130425</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Weingarten</last-name>
<first-name>Hanan</first-name>
<address>
<city>Herzelia</city>
<country>IL</country>
</address>
</addressbook>
<residence>
<country>IL</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Levy</last-name>
<first-name>Shmuel</first-name>
<address>
<city>Qiryat Tivon</city>
<country>IL</country>
</address>
</addressbook>
<residence>
<country>IL</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Katz</last-name>
<first-name>Michael</first-name>
<address>
<city>Haifa</city>
<country>IL</country>
</address>
</addressbook>
<residence>
<country>IL</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Weingarten</last-name>
<first-name>Hanan</first-name>
<address>
<city>Herzelia</city>
<country>IL</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Levy</last-name>
<first-name>Shmuel</first-name>
<address>
<city>Qiryat Tivon</city>
<country>IL</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Katz</last-name>
<first-name>Michael</first-name>
<address>
<city>Haifa</city>
<country>IL</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Dentons US LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Densbits Technologies Ltd.</orgname>
<role>03</role>
<address>
<city>Haifa</city>
<country>IL</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Wilson</last-name>
<first-name>Yolanda L</first-name>
<department>2113</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method for decoding a plurality of flash memory cells which are error correction-coded, the method may include: comparing physical values residing in the plurality of flash memory cells to a first set of decision thresholds thereby to provide a first item of comparison information for each of the plurality of cells; comparing physical values residing the plurality of flash memory cells to a second set of decision thresholds, thereby to provide a second item of comparison information for each of the plurality of cells, wherein neither of the first and second sets of decision thresholds is a subset of the other; and determining logical values for the plurality of flash memory cells by combining said first and second items of comparison information.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="108.29mm" wi="183.22mm" file="US08627188-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="202.10mm" wi="157.14mm" orientation="landscape" file="US08627188-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="152.74mm" wi="164.68mm" file="US08627188-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="181.36mm" wi="198.63mm" file="US08627188-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="228.18mm" wi="188.21mm" file="US08627188-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="218.44mm" wi="169.08mm" file="US08627188-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="151.13mm" wi="159.00mm" file="US08627188-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="157.90mm" wi="150.71mm" file="US08627188-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="193.55mm" wi="145.80mm" file="US08627188-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="188.89mm" wi="180.68mm" file="US08627188-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="178.22mm" wi="158.75mm" file="US08627188-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="156.80mm" wi="159.68mm" file="US08627188-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="164.68mm" wi="195.16mm" file="US08627188-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="224.71mm" wi="194.23mm" file="US08627188-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="123.78mm" wi="154.94mm" file="US08627188-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="180.42mm" wi="142.07mm" file="US08627188-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="214.29mm" wi="180.09mm" file="US08627188-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="232.24mm" wi="184.15mm" file="US08627188-20140107-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="242.91mm" wi="185.76mm" file="US08627188-20140107-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="231.31mm" wi="177.55mm" file="US08627188-20140107-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="224.37mm" wi="169.42mm" file="US08627188-20140107-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="210.90mm" wi="185.08mm" file="US08627188-20140107-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00022" num="00022">
<img id="EMI-D00022" he="208.70mm" wi="181.02mm" file="US08627188-20140107-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00023" num="00023">
<img id="EMI-D00023" he="196.43mm" wi="149.94mm" file="US08627188-20140107-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00024" num="00024">
<img id="EMI-D00024" he="223.27mm" wi="168.06mm" file="US08627188-20140107-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00025" num="00025">
<img id="EMI-D00025" he="212.43mm" wi="157.48mm" file="US08627188-20140107-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00026" num="00026">
<img id="EMI-D00026" he="230.46mm" wi="169.67mm" file="US08627188-20140107-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00027" num="00027">
<img id="EMI-D00027" he="200.15mm" wi="142.66mm" file="US08627188-20140107-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00028" num="00028">
<img id="EMI-D00028" he="198.97mm" wi="129.46mm" file="US08627188-20140107-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00029" num="00029">
<img id="EMI-D00029" he="197.36mm" wi="157.73mm" file="US08627188-20140107-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00030" num="00030">
<img id="EMI-D00030" he="200.83mm" wi="160.61mm" file="US08627188-20140107-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00031" num="00031">
<img id="EMI-D00031" he="229.70mm" wi="175.34mm" file="US08627188-20140107-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00032" num="00032">
<img id="EMI-D00032" he="172.80mm" wi="167.81mm" file="US08627188-20140107-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00033" num="00033">
<img id="EMI-D00033" he="201.76mm" wi="166.29mm" file="US08627188-20140107-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00034" num="00034">
<img id="EMI-D00034" he="207.69mm" wi="178.22mm" file="US08627188-20140107-D00034.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO CO PENDING RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application claims priority to U.S. Nonprovisional application Ser. No. 12/667,386, filed on Dec. 31, 2009 and entitled &#x201c;Flash Memory Apparatus and Methods Using a Plurality of Decoding Stages Including Optional Use of Concatenated BCH Codes And/Or Designation of &#x2018;First Below&#x2019; Cells&#x201d;, which in turn claims priority to a PCT International Application No. PCT/IL2008/001233, with International Filing Date of Sep. 17, 2008, published on Jun. 11, 2009 as International Publication No. WO 2009/072103, which in turn claims priority from U.S. Provisional Patent Application No. 61/006,120, filed Dec. 19, 2007 and entitled &#x201c;Systems and Methods for Coping with Multi Stage Decoding in Flash Devices&#x201d;, U.S. Provisional Patent Application No. 61/071,464, filed Apr. 30, 2008 and entitled &#x201c;A Decoder Operative to Effect A Plurality of Decoding Stages Upon Flash Memory Data and Methods Useful in Conjunction Therewith&#x201d;, U.S. Provisional Patent Application No. 60/996,782, filed Dec. 5, 2007 and entitled &#x201c;Systems and Methods for Using a Training Sequence in Flash Memory&#x201d;, U.S. Provisional Patent Application No. 61/064,853, filed Mar. 31, 2008 and entitled &#x201c;Flash Memory Device with Physical Cell Value Deterioration Accommodation and Methods Useful in Conjunction Therewith&#x201d;, U.S. Provisional Patent Application No. 61/006,805, filed Jan. 31, 2008 and entitled &#x201c;A Method for Extending the Life of Flash Devices&#x201d;, U.S. Provisional Patent Application No. 61/071,465, filed Apr. 30, 2008 and entitled &#x201c;Systems and Methods for Temporarily Retiring Memory Portions&#x201d; and US Provisional Patent Application No. 61/129,608, filed Jul. 8, 2008 and entitled &#x201c;A Method for Acquiring and Tracking Detection Thresholds in Flash Devices&#x201d;, all of which are incorporated herein by reference in their entirety.</p>
<p id="p-0003" num="0002">Other co-pending applications include: U.S. Provisional Application No. 60/960,207, filed Sep. 20, 2007 and entitled &#x201c;Systems and Methods for Coupling Detection in Flash Memory&#x201d;, U.S. Provisional Application No. 61/071,467, filed Apr. 30, 2008 and entitled &#x201c;Improved Systems and Methods for Determining Logical Values of Coupled Flash Memory Cells&#x201d;, U.S. Provisional Application No. 60/960,943, filed Oct. 22, 2007 and entitled &#x201c;Systems and methods to reduce errors in Solid State Disks and Large Flash Devices&#x201d; and U.S. Provisional Application No. 61/071,469, filed Apr. 30, 2008 and entitled &#x201c;Systems and Methods for Averaging Error Rates in Non-Volatile Devices and Storage Systems&#x201d;, U.S. Provisional Application No. 60/996,027, filed Oct. 25, 2007 and entitled &#x201c;Systems and Methods for Coping with Variable Bit Error Rates in Flash Devices&#x201d;, U.S. Provisional Application No. 61/071,466, filed Apr. 30, 2008 and entitled &#x201c;Systems and Methods for Multiple Coding Rates in Flash Devices&#x201d;, U.S. Provisional Application No. 61/006,385, filed Jan. 10, 2008 and entitled &#x201c;A System for Error Correction Encoder and Decoder Using the Lee Metric and Adapted to Work on Multi-Level Physical Media&#x201d;, U.S. Provisional Application No. 61/064,995, filed Apr. 8, 2008 and entitled &#x201c;Systems and Methods for Error Correction and Decoding on Multi-Level Physical Media&#x201d;, U.S. Provisional Application No. 60/996,948, filed Dec. 12, 2007 and entitled &#x201c;Low Power BCH/RS Decoding: a Low Power Chien-Search Implementation&#x201d;, U.S. Provisional Application No. 61/071,487, filed May 1, 2008 and entitled &#x201c;Chien-Search System Employing a Clock-Gating Scheme to Save Power for Error Correction Decoder and other Applications&#x201d;, U.S. Provisional Application No. 61/071,468, filed Apr. 30, 2008 and entitled &#x201c;A Low Power Chien-Search Based BCH/RS Recoding System for Flash Memory, Mobile Communications Devices and Other Applications&#x201d;, U.S. Provisional Application No. 61/006,806, filed Jan. 31, 2008 and entitled &#x201c;Systems and Methods for using a Erasure Coding in Flash memory&#x201d;, U.S. Provisional Application No. 61/071,486, filed May 1, 2008 and entitled &#x201c;Systems and Methods for Handling Immediate Data Errors in Flash Memory&#x201d;, U.S. Provisional Application No. 61/006,078, filed Dec. 18, 2007 and entitled &#x201c;Systems and Methods for Multi Rate Coding in Multi Level Flash Devices&#x201d;, U.S. Provisional Application No. 61/064,923, filed Apr. 30, 2008 and entitled &#x201c;Apparatus For Coding At A Plurality Of Rates In Multi-Level Flash Memory Systems, And Methods Useful In Conjunction Therewith&#x201d;, U.S. Provisional Application No. 61/064,760, filed Mar. 25, 2008 and entitled &#x201c;Hardware efficient implementation of rounding in fixed-point arithmetic&#x201d;, U.S. Provisional Application No. 61/071,404, filed Apr. 28, 2008 and entitled &#x201c;Apparatus and Methods for Hardware-Efficient Unbiased Rounding&#x201d;, U.S. Provisional Application No. 61/136,234, filed Aug. 20, 2008 and entitled &#x201c;A Method Of Reprogramming A Non-Volatile Memory Device Without Performing An Erase Operation&#x201d;, U.S. Provisional Application No. 61/129,414, filed Jun. 25, 2008 and entitled &#x201c;Improved Programming Speed in Flash Devices Using Adaptive Programming&#x201d;, and several other co-pending patent applications being filed concurrently (same day).</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0004" num="0003">The present invention relates generally to flash memory and more particularly to encoding and decoding data stored in a flash memory device.</p>
<heading id="h-0003" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0005" num="0004">The state of the art is believed to be represented by the following references inter alia:
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0005">[1] &#x201c;Interleaving policies for flash memory&#x201d;, United States Published Patent Application 20070168625</li>
    <li id="ul0001-0002" num="0006">[2] &#x201c;Minimization of FG-FG coupling in flash memory&#x201d;, U.S. Pat. No. 6,996,004</li>
    <li id="ul0001-0003" num="0007">[3] CharnKeitKong, P. Yamaguchi, K. Imai, H. &#x201c;New Constructions of k/(k+1) Rate-Variable Punctured Convolutional Codes&#x201d;, Proceedings. 1993 IEEE International Symposium on Information Theory, January 1993, page(s): 138-138</li>
    <li id="ul0001-0004" num="0008">[4] Construction of Rate (n&#x2212;1)/n Punctured Convolutional Code with Minimum Required SNR Criterion, Pil J. Lee, IEEE Trans. On Comm. Vol. 36, NO. 10, October 1988</li>
    <li id="ul0001-0005" num="0009">[5] &#x201c;Introduction to Coding Theory&#x201d;, Ron M. Roth, Cambridge University Press, 2006</li>
    <li id="ul0001-0006" num="0010">[6] &#x201c;Principles of Digital Communication and Coding&#x201d;, A. J. Viterbi and J. K. Omura, McGraw-Hill 1979</li>
    <li id="ul0001-0007" num="0011">[7] &#x201c;Low Density Parity Check Codes&#x201d;, Robert G. Gallager, 1963?, Ph.D. Thesis, Cambridge, Mass.</li>
    <li id="ul0001-0008" num="0012">[8] &#x201c;Modern Coding Theory&#x201d;, Richardson, T.; Urbanke, R., Cambridge University Press, 2005.</li>
    <li id="ul0001-0009" num="0013">[9] &#x201c;Bit-Interleaved Coded Modulation&#x201d;, Giuseppe Caire, Giorgio Taricco, and Ezio Biglieri, IEEE Transactions On Information Theory, Vol. 44, No. 3, May 1998</li>
    <li id="ul0001-0010" num="0014">[10] R. E. Blahut, Theory and Practice of Error Control Codes. Reading, Mass.: Addison-Wesley, 1983.</li>
    <li id="ul0001-0011" num="0015">[11] G. D. Formey Jr, &#x201c;Generalized minimum distance decoding,&#x201d; IEEE Trans. Inf. Theory, vol. IT-12, pp. 125-131, April 1966.</li>
    <li id="ul0001-0012" num="0016">[12] D. Chase. &#x201c;A class of algorithms for decoding block codes with channel measurement information,&#x201d; IEEE Trans. Inform. Theory, vol. IT-I 8, pp. 170-182, January 1972.</li>
    <li id="ul0001-0013" num="0017">[13] R. Koetter, A. Vardy, &#x201c;Algebraic Soft-Decision Decoding of Reed-Solomon Codes&#x201d;, IEEE Transactions On Information Theory, Vol. 49, No. 11, November 2003</li>
    <li id="ul0001-0014" num="0018">[14] B. Hassibi and B. M. Hochwald, &#x201c;How much training is needed in a multiple-antenna wireless link?&#x201d;, IEEE Transactions on Information Theory, vol. 49, no. 10, April 2003, pages 951-964.</li>
    <li id="ul0001-0015" num="0019">[15] U.S. Pat. Nos. 5,729,490 to Calligaro et al; 5,926,409 to Engh et al, 6,952,365 to Gonzalez et al, and 7,068,539 and 7,317,364, both to Guterman et al.</li>
    <li id="ul0001-0016" num="0020">[16<i>] Algebraic Codes for Data Transmission</i>, Richard E. Blahut, distributed by Amazon whose website is available at amazon.com.</li>
    <li id="ul0001-0017" num="0021">[17] &#x201c;Efficient Maximum Likelihood Decoding of Linear Block Codes Using a Trellis&#x201d;, Jack K. Wolf, IEEE Transactions on Information Theory, Vol. IT-24, No. 1, January 1978</li>
    <li id="ul0001-0018" num="0022">[18] &#x201c;A Class of Algorithms for Decoding Block Codes With Channel Measurement Information&#x201d;, David Chase, IEEE Transactions on Information Theory, Vol. IT-18, No. 1, January 1972</li>
</ul>
</p>
<p id="p-0006" num="0023">Conventional flash memory technology is described in the following publications inter alia:
<ul id="ul0002" list-style="none">
    <li id="ul0002-0001" num="0024">Paulo Cappelletti, Clara Golla, Piero Olivo, Enrico Zanoni, &#x201c;Flash Memories&#x201d;, Kluwer Academic Publishers, 1999</li>
    <li id="ul0002-0002" num="0025">G. Campardo, R. Micheloni, D. Novosel, &#x201c;CLSI-Design of Non-Volatile Memories&#x201d;, Springer Berlin Heidelberg New York, 2005</li>
</ul>
</p>
<p id="p-0007" num="0026">The disclosures of all publications and patent documents mentioned in the specification, and of the publications and patent documents cited therein directly or indirectly, are hereby incorporated by reference.</p>
<heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0008" num="0027">The following terms may be construed either in accordance with any definition thereof appearing in the prior art literature or in accordance with the specification, or as follows:</p>
<p id="p-0009" num="0028">Bit error rate (BER)=a parameter that a flash memory device manufacturer commits to vis a vis its customers, expressing the maximum proportion of wrongly read bits (wrongly read bits/total number of bits) that users of the flash memory device need to expect at any time during the stipulated lifetime of the flash memory device e.g. 10 years.</p>
<p id="p-0010" num="0029">Block=a set of flash memory device cells which must, due to physical limitations of the flash memory device, be erased together. Also termed erase sector, erase block.</p>
<p id="p-0011" num="0030">Cell: A component of flash memory that stores one bit of information (in single-level cell devices) or n bits of information (in a multi-level device having 2 exp n levels). Typically, each cell comprises a floating-gate transistor. n may or may not be an integer. &#x201c;Multi-level&#x201d; means that the physical levels in the cell are, to an acceptable level of certainty, statistically partitionable into multiple distinguishable regions, plus a region corresponding to zero, such that digital values each comprising multiple bits can be represented by the cell. In contrast, in single-level cells, the physical levels in the cell are assumed to be statistically partitionable into only two regions, one corresponding to zero and one other, non-zero region, such that only one bit can be represented by a single-level cell.</p>
<p id="p-0012" num="0031">Charge level: the measured voltage of a cell which reflects its electric charge.</p>
<p id="p-0013" num="0032">Cycling: Repeatedly writing new data into flash memory cells and repeatedly erasing the cells between each two writing operations.</p>
<p id="p-0014" num="0033">Decision regions: Regions extending between adjacent decision levels, e.g. if decision levels are 0, 2 and 4 volts respectively, the decision regions are under 0 V, 0 V-2 V, 2V-4 V, and over 4 V.</p>
<p id="p-0015" num="0034">Demapping: basic cell-level reading function in which a digital n-tuple originally received from an outside application is derived from a physical value representing a physical state in the cell having a predetermined correspondence to the digital n-tuple.</p>
<p id="p-0016" num="0035">Digital value or &#x201c;logical value&#x201d;: n-tuple of bits represented by a cell in flash memory capable of generating 2 exp n distinguishable levels of a typically continuous physical value such as charge, where n may or may not be an integer.</p>
<p id="p-0017" num="0036">Erase cycle: The relatively slow process of erasing a block of cells (erase sector), each block typically comprising more than one page, or, in certain non-flash memory devices, of erasing a single cell or the duration of so doing. An advantage of erasing cells collectively in blocks as in flash memory, rather than individually, is enhanced programming speed: Many cells and typically even many pages of cells are erased in a single erase cycle.</p>
<p id="p-0018" num="0037">Erase-write cycle: The process of erasing a block of cells (erase sector), each block typically comprising a plurality of pages, and subsequently writing new data into at least some of them. The terms &#x201c;program&#x201d; and &#x201c;write&#x201d; are used herein generally interchangeably.</p>
<p id="p-0019" num="0038">Flash memory: Non-volatile computer memory including cells that are erased block by block, each block typically comprising more than one page, but are written into and read from, page by page. Includes NOR-type flash memory, NAND-type flash memory, and PRAM, e.g. Samsung PRAM, inter alia, and flash memory devices with any suitable number of levels per cell, such as but not limited to 2, 4, or 8.</p>
<p id="p-0020" num="0039">Mapping: basic cell-level writing function in which incoming digital n-tuple is mapped to a program level by inducing a program level in the cell, having a predetermined correspondence to the incoming logical value.</p>
<p id="p-0021" num="0040">Page=A portion, typically 512 or 2048 or 4096 bytes in size, of a flash memory e.g. a NAND or NOR flash memory device. Writing can be performed page by page, as opposed to erasing which can be performed only erase sector by erase sector. A few bytes, typically 16-32 for every 512 data bytes are associated with each page (typically 16, 64 or 128 per page), for storage of error correction information. A typical block may include 32 512-byte pages or 64 2048-byte pages.</p>
<p id="p-0022" num="0041">Present level, Charge level: The amount of charge in the cell. The Amount of charge currently existing in a cell, at the present time, as opposed to &#x201c;program level&#x201d;, the amount of charge originally induced in the cell (i.e. at the end of programming).</p>
<p id="p-0023" num="0042">Program: same as &#x201c;write&#x201d;.</p>
<p id="p-0024" num="0043">Program level (programmed level, programming level): amount of charge originally induced in a cell to represent a given logical value, as opposed to &#x201c;present level&#x201d;.</p>
<p id="p-0025" num="0044">Reprogrammability (Np): An aspect of flash memory quality. This is typically operationalized by a reprogrammability parameter, also termed herein &#x201c;Np&#x201d;, denoting the number of times that a flash memory can be re-programmed (number of erase-write cycles that the device can withstand) before the level of errors is so high as to make an unacceptably high proportion of those errors irrecoverable given a predetermined amount of memory devoted to redundancy. Typically recoverability is investigated following a conventional aging simulation process which simulates or approximates the data degradation effect that a predetermined time period e.g. a 10 year period has on the flash memory device, in an attempt to accommodate for a period of up to 10 years between writing of data in flash memory and reading of the data therefrom.</p>
<p id="p-0026" num="0045">Resolution: Number of levels in each cell, which in turn determines the number of bits the cell can store; typically a cell with 2^n levels stores n bits. Low resolution (partitioning the window, W, of physical values a cell can assume into a small rather than large number of levels per cell) provides high reliability.</p>
<p id="p-0027" num="0046">Retention: of original physical levels induced in the cells; retention is typically below 100% resulting in deterioration of original physical levels into present levels.</p>
<p id="p-0028" num="0047">Retention time: The amount of time that data has been stored in a flash device, typically without, or substantially without, voltage having been supplied to the flash device i.e. the time which elapses between programming of a page and reading of the same page.</p>
<p id="p-0029" num="0048">Symbol: Logical value</p>
<p id="p-0030" num="0049">Threshold level, VT (threshold voltage): the voltage (e.g.) against which the charge level of a cell (e.g. the flash cell's gate voltage, at which the gate begins to conduct) is measured. For example, a cell may be said to store a particular digital n-tuple D if the charge level or other physical level of the cell falls between two threshold values T.</p>
<p id="p-0031" num="0050">Soft decoding: A decoding process of a physical value yielding not only a logical value, from among various possible logical values, which the physical value is assumed to represent, but also a confidence indicator indicative of the degree of confidence that the correct logical value has been selected, from among the various possible logical values, as that which the physical value represents.</p>
<p id="p-0032" num="0051">Hard decoding: A decoding process of a physical value yielding only a logical value, from among various possible logical values, which the physical value is assumed to represent, without a confidence indicator (in contrast to soft decoding).</p>
<p id="p-0033" num="0052">Today's Flash memory devices store information with high density on Flash cells with ever smaller dimensions. In addition, Multi-Level Cells (MLCs) store several bits per cell by setting the amount of charge in the cell. The amount of charge is then quantified by a detector, e.g. by measuring a threshold voltage of the transistor gate denoted by VT. Due to inaccuracies during the programming procedure and charge loss due to time and temperature (also known as retention), the measured levels during a Read operation suffer from detection errors. The small dimensions of the Flash cells result in cells that can store very small amounts of charge, enhancing the effects of inaccuracies due to programming and retention. Thus, new single level cells (SLCs) and MLC devices have significantly increased bit error rate (BER), decreasing the reliability of the device.</p>
<p id="p-0034" num="0053">Flash devices are organized into (physical) pages. Each page typically contains a section allocated for data (512 bytes-4 Kbytes) and a small amount of bytes (16-32 bytes for every 512 data bytes) containing redundancy and back pointers. The redundancy bytes are used to store error correcting information, for correcting errors which may have occurred during the page Read. Each Read and Program operation is performed on an entire page. A number of pages are grouped together to form an Erase Block (EB). A page cannot be erased unless the entire EB which contains it is erased.</p>
<p id="p-0035" num="0054">One measure of a Flash device quality is the number of times (Np) it may be reprogrammed and the period that the device can store data before irrecoverable errors occur (usually 10 years). The higher the number of program-erase cycles, the higher the BER. Thus, today's MLC devices can perform around Np=1000 cycles for 10 years retention before the allocation of 16-32 bytes of redundancy per 512 bytes of data bytes becomes insufficient to correct errors. SLC devices usually perform better but obtain a much lower density and hence their prices are much higher. Note that following Np program-erase cycles the device is still operational but the BER is higher. Furthermore, in many devices (e.g. NROM Flash devices), this behavior is predictable and it can be shown that the number of redundancy bytes used to correct these errors does not jump rapidly.</p>
<p id="p-0036" num="0055">During a Read operation, most devices decide on the programmed level of the Flash cell by comparing the measured physical level (also termed &#x201c;cell's charge level&#x201d;) to a number of threshold levels which divide the range of voltage values into bins. The programmed level is then defined according to the bin in which the cell's charge level lies. It is well known in the literature, e.g. as described in &#x201c;Principles of Digital Communication and Coding&#x201d;, A. J. Viterbi and J. K. Omura, McGraw-Hill 1979, that in the presence of coded information, reliability may be significantly improved if more refined, i.e. more accurate information on the cell's charge level is extracted. For instance, if the charge level lies near to an edge of the bin, the measurement is less reliable and is more likely to be a result of an error, e.g. due to retention. More refined information is equivalent to dividing the range of voltage values to more bins than the number of possible programmed levels. Information from this more refined binning, in which the number of bins exceeds the number of programmed levels, is known as soft information. Information obtained from a binning process employing a number of bins which is equal to the number of program levels is referred to as hard information.</p>
<p id="p-0037" num="0056">Conventional extraction of soft information adversely affects device performance. For example, a read operation which divides the range of voltage values into 16 bins may take approximately twice as long as dividing the same range into only 8 levels.</p>
<p id="p-0038" num="0057">Certain embodiments of the present invention seek to provide multi stage decoding with different read accuracies at different stages, so as to boost the average performance while enjoying the benefits of soft information. According to need, at each stage more accurate information, or even same-accuracy additional information, on the threshold voltage value of each cell is extracted and the decoding method is adapted to process the more accurate information.</p>
<p id="p-0039" num="0058">According to certain embodiments of the present invention, in the first stage stored bits are read in hard decision mode. This process maintains the high performance of hard decision output but has degraded reliability. If the codeword is found to be decodable or some other criterion is passed, the codeword is declared to be successfully decoded and no further decoding occurs. Otherwise, a second stage of reading is performed, typically with higher precision (soft), and decoding is performed with the soft information. This increases reliability in that more errors are corrected per page but degrades the read time and power performance.</p>
<p id="p-0040" num="0059">According to one embodiment of the present invention, termed herein the &#x201c;nearly-hard&#x201d; Strategy, the average performance, even after cycling and retention, is maintained close to that of hard decisions while gaining some of the benefits of soft decision decoding. In general this is effected by ensuring that following retention and cycling, only a small percentage (say 1%) of the codewords (pages) are deciphered using soft decoding. This in turn ensures that hard decision decoding will decipher most pages correctly such that the added time used to read soft decision outputs for those rare pages which were not deciphered correctly at the hard stage, increases the average decoding time and power consumption only slightly. An example of the &#x201c;nearly-hard&#x201d; Strategy is described below with reference to <figref idref="DRAWINGS">FIGS. 8 and 9</figref>.</p>
<p id="p-0041" num="0060">According to another embodiment of the present invention, termed herein the &#x201c;maintain-performance-when-young, reliability-when-old&#x201d; Strategy, a good Read performance is provided during the device's &#x201c;youth&#x201d; (before much cycling has been performed and before the device has undergone much retention) and good reliability is provided toward the device's end of life (following cycling and retention), at the expense of the performance. Although this strategy sacrifices performance at the end of the device's life, reliability is typically better than that provided by the previous embodiment. An example of the &#x201c;maintain-performance-when-young, reliability-when-old&#x201d; Strategy is described below with reference to <figref idref="DRAWINGS">FIG. 10</figref>.</p>
<p id="p-0042" num="0061">Examples of codes which may be decoded using hard and soft outputs in accordance with certain embodiments of the present invention are described herein and are not intended to be limiting.</p>
<p id="p-0043" num="0062">There is thus provided, in accordance with certain embodiments of the present invention, a method for decoding a plurality of flash memory cells which are error-correction-coded as a unit, the method comprising providing a hard-decoding success indication indicating whether or not hard-decoding is at least likely to be successful; and soft-decoding the plurality of flash memory cells at a first resolution only if the hard-decoding success indication indicates that the hard-decoding is not at least likely to be successful.</p>
<p id="p-0044" num="0063">Further in accordance with at least one embodiment of the present invention, the method also comprises hard-decoding the plurality of flash memory cells before the providing; the hard-decoding success indication indicates whether or not the hard-decoding was successful; and the soft-decoding is performed only if the hard-decoding success indication indicates that the hard-decoding was not successful.</p>
<p id="p-0045" num="0064">Still further in accordance with at least one embodiment of the present invention, the method comprises using at least one of the following error correction codes to encode the plurality of flash memory cells: convolutional coding; LDPC; BCH; and Reed-Solomon.</p>
<p id="p-0046" num="0065">Further in accordance with at least one embodiment of the present invention, the method also comprises using an error correction code to encode the plurality of flash memory cells such that the plurality of flash memory cells is partitioned into a first subset of cells storing data and a second, smaller subset of cells storing redundancy; and selecting a size of the smaller subset large enough to ensure that an acceptable proportion of units undergoing soft decoding from among a total number of units decoded, is not exceeded, large enough to ensure that an acceptable rate of failure to decode is not exceeded and smaller than is required to ensure the same acceptable rate of failure to hard-decode.</p>
<p id="p-0047" num="0066">Further in accordance with at least one embodiment of the present invention, the method also comprises providing a soft-decoding success indication indicating whether or not the soft-decoding was successful; and soft-decoding the plurality of flash memory cells at a second resolution finer than the first resolution only if the soft-decoding success indication indicates that the soft-decoding was not successful.</p>
<p id="p-0048" num="0067">Still further in accordance with at least one embodiment of the present invention, the hard-decoding success indication comprises an a priori indication of whether or not hard-decoding, yet to be performed, is at least likely to be successful.</p>
<p id="p-0049" num="0068">Additionally in accordance with at least one embodiment of the present invention, the a priori indication is based on at least one indication of the quality of the flash memory cells.</p>
<p id="p-0050" num="0069">Further in accordance with at least one embodiment of the present invention, the indication of the quality of the flash memory cells is based at least partly on the number of program/erase cycles the flash memory cells have undergone.</p>
<p id="p-0051" num="0070">Still further in accordance with at least one embodiment of the present invention, the indication of the quality of the flash memory cells is based at least partly on the amount of time the flash memory cells have spent in a state of retention.</p>
<p id="p-0052" num="0071">Additionally in accordance with at least one embodiment of the present invention, the hard-decoding comprises a first iteration of an LDPC decoding procedure yielding a bit error rate parameter and wherein the hard-decoding success indication is based on the bit error rate parameter.</p>
<p id="p-0053" num="0072">Also provided, in accordance with at least one embodiment of the present invention, is a method for decoding a plurality of flash memory cells which are error-correction-coded as a unit, the method comprising comparing physical values residing in the plurality of flash memory cells to a first set of decision thresholds thereby to provide a first item of comparison information for each of the plurality of cells; comparing physical values residing in the plurality of flash memory cells to a second set of decision thresholds, thereby to provide a second item of comparison information for each of the plurality of cells, wherein neither of the first and second sets of decision thresholds is a subset of the other; and determining logical values for the plurality of flash memory cells by combining the first and second items of comparison information.</p>
<p id="p-0054" num="0073">Further in accordance with at least one embodiment of the present invention, the first and second sets of decision thresholds are disjoint.</p>
<p id="p-0055" num="0074">Still further in accordance with at least one embodiment of the present invention, the indication of the quality of the flash memory cells is based at least partly on a comparison of at least a statistic representing the current state of a sample of the plurality of flash memory cells with a reliably stored indication of a previous state of the sample.</p>
<p id="p-0056" num="0075">Additionally in accordance with at least one embodiment of the present invention, the statistic comprises a mean of the current physical values of the sample and the indication of a previous state comprises a mean of previous physical values of the sample.</p>
<p id="p-0057" num="0076">Further in accordance with at least one embodiment of the present invention, the statistic comprises an indication of the distribution width of the current physical values of the sample and the indication of a previous state comprises an indication of the distribution width of previous physical values of the sample.</p>
<p id="p-0058" num="0077">Additionally in accordance with at least one embodiment of the present invention, the combining comprises identifying a pair of decision thresholds closest to the physical values from among a set of decision thresholds comprising a union of the first and second sets of decision thresholds.</p>
<p id="p-0059" num="0078">Also provided, in accordance with at least one embodiment of the present invention, is an apparatus for decoding a plurality of flash memory cells which are error-correction-coded as a unit, the apparatus comprising a first comparison unit comparing physical values residing in the plurality of flash memory cells to a first set of decision thresholds thereby to provide a first item of comparison information for each of the plurality of cells; a second comparison unit comparing physical values residing in the plurality of flash memory cells to a second set of decision thresholds, thereby to provide a second item of comparison information for each of the plurality of cells, wherein neither of the first and second sets of decision thresholds is a subset of the other; and a logical value generator determining logical values for the plurality of flash memory cells by combining the first and second items of comparison information.</p>
<p id="p-0060" num="0079">Also provided, in accordance with yet a further embodiment of the present invention is an apparatus for decoding a plurality of flash memory cells which are error-correction-coded as a unit, the apparatus comprising a success indicator providing a hard-decoding success indication indicating whether or not hard-decoding is at least likely to be successful; and a conditionally operated soft decoder operative to soft-decode the plurality of flash memory cells at a first resolution only if the hard-decoding success indication indicates that the hard-decoding is not at least likely to be successful.</p>
<p id="p-0061" num="0080">Further in accordance with at least one embodiment of the present invention, the method also comprises decoding the plurality of flash memory cells at least once in addition to the soft-decoding, wherein the soft-decoding comprises comparing physical values residing in the plurality of flash memory cells to a first set of decision thresholds thereby to provide a first item of comparison information for each of the plurality of cells, and wherein the decoding at least once in addition comprises comparing physical values residing in the plurality of flash memory cells to a second set of decision thresholds, thereby to provide a second item of comparison information for each of the plurality of cells, wherein neither of the first and second sets of decision thresholds is a subset of the other; and wherein the method also comprises determining logical values for the plurality of flash memory cells by combining the first and second items of comparison information.</p>
<p id="p-0062" num="0081">Still further in accordance with at least one embodiment of the present invention, the soft-coding comprises a plurality of decoding stages including at least one pair of adjacent stages including a first stage and a second stage, the method also comprising determining thresholds of the second stage based on at least one result of the first stage.</p>
<p id="p-0063" num="0082">Also provided, in accordance with certain embodiments of the present invention, is a method for reading Flash memory apparatus having c cells using an increasing sequence of B&#x2212;1 thresholds defining a sequence of B bins, the method comprising providing at least one buffer operative to store information indicating whether or not each individual cell from among the c cells is &#x201c;done&#x201d; and indicating an individual one of the B bins which is associated with each individual cell from among the c cells; and, for each individual threshold, in order, in the increasing sequence of B&#x2212;1 thresholds, comparing all cells in a c-cell flash memory physical page to the individual threshold in the sequence thereby to obtain an &#x201c;above&#x201d; or &#x201c;below&#x201d; value for each cell; and for each &#x201c;first below&#x201d; cell, defined as a cell which yields a &#x201c;below&#x201d; value and is &#x201c;not done&#x201d;, modifying the at least one buffer to indicate that the &#x201c;first below&#x201d; cell is &#x201c;done&#x201d; and to indicate that the &#x201c;first below&#x201d; cell is associated with a bin in the sequence of bins which is just below the individual threshold.</p>
<p id="p-0064" num="0083">The flash memory apparatus may for example include a physical page or more typically a first multiplicity of such, each physical page including a second multiplicity of cells such as 32,000 cells. Typically, the at least one buffer is not modified for cells which are &#x201c;done&#x201d;, or for cells which are &#x201c;not done&#x201d; but found to be above a current threshold.</p>
<p id="p-0065" num="0084">Further in accordance with certain embodiments of the present invention, the at least one buffer comprises a label buffer array storing c labels, each label indicating an individual state from among B+1 states which is associated with an individual cell from among the c cells, the B+1 states including B states indicating that the individual cell is &#x201c;done&#x201d; and respectively indicating an individual one of the B bins which is associated with the individual cell and a (B+1)th state indicating that the individual cell is &#x201c;not done&#x201d;, the label buffer array being initialized to the (B+1)th state.</p>
<p id="p-0066" num="0085">Typically the label buffer array includes log<sub>2</sub>(B) label buffers each of which stores a single bit of the total ID of an individual bin.</p>
<p id="p-0067" num="0086">Still further in accordance with certain embodiments of the present invention, the modifying comprises, for each &#x201c;first below&#x201d; cell which yields a &#x201c;below&#x201d; value and has a &#x201c;not done&#x201d; value in the &#x201c;done&#x201d; buffer, modifying the &#x201c;done&#x201d; buffer to indicate that the &#x201c;first below&#x201d; cell is &#x201c;done&#x201d; and modifying the label buffer array to indicate that the &#x201c;first below&#x201d; cell is associated with a bin in the sequence of bins which is just below the individual threshold.</p>
<p id="p-0068" num="0087">Further in accordance with certain embodiments of the present invention, the method also comprises modifying the label buffer array to indicate that all remaining cells, if any, therewithin, are associated with the last bin in the sequence of bins, the remaining cells being defined as cells which do not yield a &#x201c;below&#x201d; value when the last threshold in the increasing sequence of B&#x2212;1 thresholds is used in the comparing.</p>
<p id="p-0069" num="0088">Further in accordance with certain embodiments of the present invention, the at least one buffer comprises a &#x201c;done&#x201d; buffer storing c &#x201c;done&#x201d; bits indicating whether an individual cell c is &#x201c;done&#x201d; or &#x201c;not done&#x201d;, the buffer initially being set entirely to &#x201c;not done&#x201d;.</p>
<p id="p-0070" num="0089">Still further in accordance with certain embodiments of the present invention, the at least one buffer also comprises a label buffer array storing c N-bit labels, each label indicating an individual one of the B bins which is associated with an individual cell from among the c cells, the label buffer array being initialized to values which differ from all labels of the first B&#x2212;1 bins in the sequence of bins.</p>
<p id="p-0071" num="0090">Additionally in accordance with certain embodiments of the present invention, the modifying comprises, for each &#x201c;first below&#x201d; cell which yields a &#x201c;below&#x201d; value and has a &#x201c;not done&#x201d; value in the &#x201c;done&#x201d; buffer, modifying the &#x201c;done&#x201d; buffer to indicate that the &#x201c;first below&#x201d; cell is &#x201c;done&#x201d;; and modifying the label buffer array to indicate that the &#x201c;first below&#x201d; cell is associated with a bin in the sequence of bins which is just below the individual threshold.</p>
<p id="p-0072" num="0091">Further in accordance with certain embodiments of the present invention, each of the cells stores L bits comprising one bit each from L logical pages (L&#x3e;1).</p>
<p id="p-0073" num="0092">Still further in accordance with certain embodiments of the present invention, the modifying comprises, for each &#x201c;first below&#x201d; cell, defined as a cell which yields a &#x201c;below&#x201d; value and is &#x201c;not done&#x201d;, modifying the at least one buffer to indicate an ID of the bin in the sequence of bins which is just below the individual threshold.</p>
<p id="p-0074" num="0093">Further provided, in accordance with certain embodiments of the present invention, is a system for reading Flash memory apparatus having c cells using an increasing sequence of B&#x2212;1 thresholds defining a sequence of B bins, the system comprising at least one buffer operative to store information indicating whether or not each individual cell from among the c cells is &#x201c;done&#x201d; and indicating an individual one of the B bins which is associated with each individual cell from among the c cells; and &#x201c;first below&#x201d; cell based buffer updating apparatus operative, for each individual threshold, in order, in the increasing sequence of B&#x2212;1 thresholds, to compare all cells in a c-cell flash memory physical page to the individual threshold in the sequence thereby to obtain an &#x201c;above&#x201d; or &#x201c;below&#x201d; value for each the cell; and for each &#x201c;first below&#x201d; cell, defined as a cell which yields a &#x201c;below&#x201d; value and is &#x201c;not done&#x201d;, to modify the at least one buffer to indicate that the &#x201c;first below&#x201d; cell is &#x201c;done&#x201d; and to indicate that the &#x201c;first below&#x201d; cell is associated with a bin in the sequence of bins which is just below the individual threshold.</p>
<p id="p-0075" num="0094">Further in accordance with certain embodiments of the present invention, the at least one buffer comprises a label buffer array storing c labels, each label indicating an individual state from among B+1 states which is associated with an individual cell from among the c cells, the B+1 states including B states indicating that the individual cell is &#x201c;done&#x201d; and respectively indicating an individual one of the B bins which is associated with the individual cell and a (B+1)th state indicating that the individual cell is &#x201c;not done&#x201d;, the label buffer array being initialized to the (B+1)th state.</p>
<p id="p-0076" num="0095">Still further in accordance with certain embodiments of the present invention, the at least one buffer comprises a &#x201c;done&#x201d; buffer storing c &#x201c;done&#x201d; bits indicating whether an individual cell c is &#x201c;done&#x201d; or &#x201c;not done&#x201d;, the buffer initially being set entirely to &#x201c;not done&#x201d;; and a label buffer array storing c N-bit labels, each label indicating an individual one of the B bins which is associated with an individual cell from among the c cells, the label buffer array being initialized to values which differ from all labels of the first B&#x2212;1 bins in the sequence of bins.</p>
<p id="p-0077" num="0096">N may for example be 3. Generally N=log 2(B+1) or log 2(B) depending on the embodiment.</p>
<p id="p-0078" num="0097">A particular advantage of the embodiment shown and described above is that the number of buffers employed depends on the number of labels rather than on the number of thresholds thereby saving memory.</p>
<p id="p-0079" num="0098">Another advantage of the embodiment shown and described above is that hard decisions become easy to make in that each hard decision reduces to accessing one of the N bits of all labels in the label buffer array. To do this, labels are selected appropriately e.g. such that a predetermined one of the bits such as the MSB or LSB contains hard decision information categorizing a cell to which the label belongs as either a &#x201c;1&#x201d; logical value or a &#x201c;0&#x201d; logical value within a logical page.</p>
<p id="p-0080" num="0099">It is appreciated that the order defined between thresholds and use of terms &#x201c;increasing&#x201d;, &#x201c;decreasing&#x201d;, &#x201c;above&#x201d; &#x201c;below&#x201d; etc may correspond to the natural order between physical values e.g. a cell with a value of 3.1 V is &#x201c;below&#x201d; a threshold of 3.2V and a threshold of 3.5 V appears &#x201c;after&#x201d; a threshold of 3.2V in the threshold sequence, or may alternatively be defined as any other order including the reverse of the natural order between physical values e.g. a cell with a value of 3.1 V is &#x201c;above&#x201d; a threshold of 3.2V and a threshold of 3.5 V appears &#x201c;before&#x201d; a threshold of 3.2V in the threshold sequence. When the process of claim <b>1</b> is completed, the label buffer is found to store, for each cell, a bin with which that cell is associated.</p>
<p id="p-0081" num="0100">Further in accordance with certain embodiments of the present invention, the method also comprises selecting an error correction code to be used for encoding the plurality of flash memory cells, the error correction code comprising a concatenation of an inner BCH code and an outer BCH code.</p>
<p id="p-0082" num="0101">Still further in accordance with certain embodiments of the present invention, the method is performed for a given application having defined requirements as to maximum available memory, maximum available processing time and minimum decoding accuracy pertaining to decoding of contents of the cells, wherein the inner BCH code being short enough to enable soft decoding of content of flash memory cells, thereby to generate soft decoded content, and the outer BCH code being long enough to enable hard decoding of the soft decoded content, the soft decoding followed by the hard decoding yielding a decoded result which conforms to the requirements, the inner BCH code being too short to enable hard decoding which conforms to the requirements, and the outer BCH code being too long to enable soft decoding which conforms to the requirements.</p>
<p id="p-0083" num="0102">For example, if each codeword includes 255 bits, the outer code may add 8-11 redundancy bits.</p>
<p id="p-0084" num="0103">Also provided, in accordance with certain embodiments of the present invention, is a method for error-correction encoding and subsequently decoding a plurality of flash memory cells, the method comprising encoding content to be stored in the plurality of flash memory cells using an error correction code comprising a concatenation of an inner BCH code and an outer BCH code, thereby to define encoded content to be stored in the cells, sampling the encoded content thereby to generate codewords of bits, estimating reliability of the sampling including generating a reliability score for each of the bits, soft decoding each of the codewords using the inner BCH code, thereby to generate soft decoded content including at least one preliminarily corrected codeword; and hard decoding the soft decoded content, using the outer BCH code, thereby to generate reconstructed contents of the cells. Typically although not necessarily, encoding and decoding take place in the same device.</p>
<p id="p-0085" num="0104">Further in accordance with certain embodiments of the present invention, the inner BCH code has a Minimum Distance value of 3.</p>
<p id="p-0086" num="0105">Still further in accordance with certain embodiments of the present invention, the soft decoding comprises, for each codeword which suffers from an unknown number of errors, determining a reasonable cap, integer max_C, on the unknown number of errors C; computing a syndrome for the codeword; unless the syndrome equals zero, for c=1, . . . max_C, finding at least one set of c bits in the codeword which, when flipped, zero the syndrome, giving a set score to each set of c bits by summing the reliability scores of all bits in the set; and assigning an error-number-score by minimizing over the set scores of all sets of c bits found in the finding step, determining the unknown number of errors C, to be the c with the smallest error-number-score; and for the set of c bits having, among all sets of c bits found for c=C, the smallest set score, flipping all c bits.</p>
<p id="p-0087" num="0106">Further in accordance with certain embodiments of the present invention, the set finding step comprises searching for at least one bit defining at least one set of c bits, only within a subset of the bits in the codeword which have lower reliability scores than the bits in the codeword which do not belong to the subset. It is appreciated that the larger is the subset, the more reliable, but time-consuming is the soft decoding process and conversely, to the extent the subset is small, the soft decoding process is less reliable but faster.</p>
<p id="p-0088" num="0107">Still further in accordance with certain embodiments of the present invention, the searching is performed from the bit whose reliability score is smallest and onward to bits whose reliability scores are larger and larger, and wherein the searching is terminated, when a bit is reached whose reliability score exceeds the error number score of a previous c value.</p>
<p id="p-0089" num="0108">Additionally in accordance with certain embodiments of the present invention, the hard-decoding employs an error locator polynomial and wherein the hard-decoding success indication is determined based on the error locator polynomial without completing the hard decoding.</p>
<p id="p-0090" num="0109">Further in accordance with certain embodiments of the present invention, the hard-decoding success indication is provided by only partly performing a hard decoding process on the plurality of flash memory cells.</p>
<p id="p-0091" num="0110">Further in accordance with certain embodiments of the present invention, the hard-decoding success indication comprises a number of errors detected by hard-decoding the inner code without decoding the outer code.</p>
<p id="p-0092" num="0111">Still further in accordance with certain embodiments of the present invention, the hard-decoding of the outer code employs an error locator polynomial and wherein the hard-decoding success indication is determined based on the error locator polynomial without completing the hard decoding of the outer code.</p>
<p id="p-0093" num="0112">Additionally in accordance with certain embodiments of the present invention, the hard-decoding success indication is determined following encoding using both of the inner and outer BCH codes, and wherein the soft-decoding comprises soft decoding of the inner code and hard decoding of the outer code.</p>
<p id="p-0094" num="0113">Further in accordance with certain embodiments of the present invention, the soft decoding comprises using dynamic programming.</p>
<p id="p-0095" num="0114">Dynamic programming may require relatively large amounts of memory time and/or processing time.</p>
<p id="p-0096" num="0115">Also provided, in accordance with certain embodiments of the present invention, is a system for error-correction encoding and subsequently decoding a plurality of flash memory cells, the system comprising a concatenated BCH encoder operative to encode content to be stored in the plurality of flash memory cells using an error correction code comprising a concatenation of an inner BCH code and an outer BCH code, thereby to define encoded content to be stored in the cells, a sampler and reliability estimator operative to sample the encoded content thereby to generate codewords of bits and to estimate reliability of the sampling including generating a reliability score for each of the bits, an inner BCH soft decoder operative to soft decode each of the codewords using the inner BCH code, thereby to generate soft decoded content including at least one preliminarily corrected codeword; and an outer BCH hard decoder operative to hard decode the soft decoded content, using the outer BCH code, thereby to generate reconstructed contents of the cells.</p>
<p id="p-0097" num="0116">Certain embodiments of the present invention seek to provide reading of &#x2018;soft&#x2019; information using log 2(# of bins)+1 buffers.</p>
<p id="p-0098" num="0117">Certain embodiments of the present invention seek to provide reading of &#x2018;soft&#x2019; information using log 2(# of bins+1) buffers.</p>
<p id="p-0099" num="0118">Certain embodiments of the present invention seek to provide reading of &#x2018;soft&#x2019; information using log 2(# of bins+1) buffers or log 2(# of bins)+1 buffers in an multi-level cell associated with several pages.</p>
<p id="p-0100" num="0119">Certain embodiments of the present invention seek to provide reading of &#x2018;soft&#x2019; information using log 2(# of bins+1) buffers or log 2(# of bins)+1 buffers with non-deterministic comparison results.</p>
<p id="p-0101" num="0120">Certain embodiments of the present invention seek to provide Deciding on Coarse/Fine decoding based on cycling/effecting cycling.</p>
<p id="p-0102" num="0121">Certain embodiments of the present invention seek to provide Deciding on Coarse/Fine decoding based on partial decoding results (e.g. partial LDPC, our new multi-BCH decoding results, base on ELP polynomial degree).</p>
<p id="p-0103" num="0122">Certain embodiments of the present invention seek to provide Deciding in Coarse/Fine decoding based on Metrics of coarse reading (such as variances, . . . )</p>
<p id="p-0104" num="0123">Certain embodiments of the present invention seek to provide a method which uses BCH coding for both soft and hard decoding. The BCH code may be a concatenated BCH code including an Inner code which is a short BCH code and an outer code which is a long BCH code decoded using hard decoding. For soft decoding of the BCH code, &#x201c;dynamic programming&#x201d; may be used, or alternatively any other suitable method such as approximation of the maximum likelihood estimator for decoding, containing loops with early terminations.</p>
<p id="p-0105" num="0124">Certain embodiments of the present invention seek to provide use of BCH decoding in a multistage decoding scheme to obtain an overall short average decoding time, while keeping the number of read operations from the flash close to that of hard decoding.</p>
<p id="p-0106" num="0125">Certain embodiments of the present invention seek to provide use of intermediate decoding results before deciding whether to proceed to soft decoding, including relying on the number of errors detected by the inner code and/or relying on the degree of the ELP in the decoding procedure of the outer code.</p>
<p id="p-0107" num="0126">Any suitable processor, display and input means may be used to process, display, store and accept information, including computer programs, in accordance with some or all of the teachings of the present invention, such as but not limited to a conventional personal computer processor, workstation or other programmable device or computer or electronic computing device, either general-purpose or specifically constructed, for processing; a display screen and/or printer and/or speaker for displaying; machine-readable memory such as optical disks, CDROMs, magnetic-optical discs or other discs; RAMs, ROMs, EPROMs, EEPROMs, magnetic or optical or other cards, for storing, and keyboard or mouse for accepting. The term &#x201c;process&#x201d; as used above is intended to include any type of computation or manipulation or transformation of data represented as physical, e.g. electronic, phenomena which may occur or reside e.g. within registers and/or memories of a computer.</p>
<p id="p-0108" num="0127">The above devices may communicate via any conventional wired or wireless digital communication means, e.g. via a wired or cellular telephone network or a computer network such as the Internet.</p>
<p id="p-0109" num="0128">The apparatus of the present invention may include, according to certain embodiments of the invention, machine readable memory containing or otherwise storing a program of instructions which, when executed by the machine, implements some or all of the apparatus, methods, features and functionalities of the invention shown and described herein. Alternatively or in addition, the apparatus of the present invention may include, according to certain embodiments of the invention, a program as above which may be written in any conventional programming language, and optionally a machine for executing the program such as but not limited to a general purpose computer which may optionally be configured or activated in accordance with the teachings of the present invention.</p>
<p id="p-0110" num="0129">Any trademark occurring in the text or drawings is the property of its owner and occurs herein merely to explain or illustrate one example of how an embodiment of the invention may be implemented.</p>
<p id="p-0111" num="0130">Unless specifically stated otherwise, as apparent from the following discussions, it is appreciated that throughout the specification discussions, utilizing terms such as, &#x201c;processing&#x201d;, &#x201c;computing&#x201d;, &#x201c;estimating&#x201d;, &#x201c;selecting&#x201d;, &#x201c;ranking&#x201d;, &#x201c;grading&#x201d;, &#x201c;calculating&#x201d;, &#x201c;determining&#x201d;, &#x201c;generating&#x201d;, &#x201c;reassessing&#x201d;, &#x201c;classifying&#x201d;, &#x201c;generating&#x201d;, &#x201c;producing&#x201d;, &#x201c;stereo-matching&#x201d;, &#x201c;registering&#x201d;, &#x201c;detecting&#x201d;, &#x201c;associating&#x201d;, &#x201c;superimposing&#x201d;, &#x201c;obtaining&#x201d; or the like, refer to the action and/or processes of a computer or computing system, or processor or similar electronic computing device, that manipulate and/or transform data represented as physical, such as electronic, quantities within the computing system's registers and/or memories, into other data similarly represented as physical quantities within the computing system's memories, registers or other such information storage, transmission or display devices.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0112" num="0131">Certain embodiments of the present invention are illustrated in the following drawings:</p>
<p id="p-0113" num="0132"><figref idref="DRAWINGS">FIG. 1</figref> is a simplified block diagram illustration of a system for two-stage decoding while reading data from a flash memory device, the system being constructed and operative in accordance with certain embodiments of the present invention;</p>
<p id="p-0114" num="0133"><figref idref="DRAWINGS">FIG. 2</figref> is a graph showing the probability of failure in a check equation of weight <b>101</b> vs. the bit error rate, useful in implementing certain embodiments of the present invention;</p>
<p id="p-0115" num="0134"><figref idref="DRAWINGS">FIG. 3A</figref> is a simplified diagram of cycle count and training data located in a page constructed in accordance with certain embodiments of the present invention;</p>
<p id="p-0116" num="0135"><figref idref="DRAWINGS">FIG. 3B</figref> is a simplified diagram of cycle count and training data located in an erase block constructed in accordance with certain embodiments of the present invention;</p>
<p id="p-0117" num="0136"><figref idref="DRAWINGS">FIGS. 4 and 5</figref> are simplified flowchart illustrations of methods useful in implementing certain embodiments of the present invention;</p>
<p id="p-0118" num="0137"><figref idref="DRAWINGS">FIG. 6A</figref> is a graph of Read 1 (hard) decision levels for hard information, the graph being constructed in accordance with certain embodiments of the present invention;</p>
<p id="p-0119" num="0138"><figref idref="DRAWINGS">FIG. 6B</figref> is a graph of Read 2B (soft=Read 2A+Read 1) decision levels for soft information, the graph being constructed in accordance with certain embodiments of the present invention;</p>
<p id="p-0120" num="0139"><figref idref="DRAWINGS">FIG. 7</figref> is a graph of Read 3B (soft=Read 3A+Read 2A+Read1) decision levels for soft information, the graph being constructed in accordance with certain embodiments of the present invention;</p>
<p id="p-0121" num="0140"><figref idref="DRAWINGS">FIG. 8</figref> is a simplified flowchart illustration of a decoding method provided in accordance with an embodiment of the present invention;</p>
<p id="p-0122" num="0141"><figref idref="DRAWINGS">FIG. 9</figref> is a simplified flowchart illustration of instructions which may be issued by uController <b>20</b> to decoder <b>35</b> under the &#x201c;nearly-hard&#x201d; strategy assuming 3 read stages are used rather than 2 as in <figref idref="DRAWINGS">FIG. 8</figref>;</p>
<p id="p-0123" num="0142"><figref idref="DRAWINGS">FIG. 10</figref> is a simplified flowchart illustration of an example of a method for performing multi-stage read under the &#x201c;maintain-performance-when-young, reliability-when-old&#x201d; strategy, all in accordance with certain embodiments of the present invention;</p>
<p id="p-0124" num="0143"><figref idref="DRAWINGS">FIG. 11</figref> is a simplified flowchart illustration of a method for reading finer information from a Flash device operative in accordance with certain embodiments of the present invention;</p>
<p id="p-0125" num="0144"><figref idref="DRAWINGS">FIG. 12</figref> is an example graph showing punctured convolution code performance estimation with an outer BCH code (4 errors, rate=7/8, constraint length=9) over a block of 512+5 spare bytes based on the distance spectra given for one of the codes in reference [3], useful in implementing the &#x201c;nearly hard&#x201d; strategy according to certain embodiments of the present invention;</p>
<p id="p-0126" num="0145"><figref idref="DRAWINGS">FIG. 13</figref> is a simplified flowchart illustration of a method useful in implementing certain embodiments of the present invention;</p>
<p id="p-0127" num="0146"><figref idref="DRAWINGS">FIG. 14</figref> is a simplified flowchart illustration of Coarse/Fine decoding based on partial results from hard decoding, operative in accordance with certain embodiments of the present invention;</p>
<p id="p-0128" num="0147"><figref idref="DRAWINGS">FIG. 15</figref> is a simplified flowchart illustration of Coarse/Fine decoding based on partial results and hard decoding success/failure, operative in accordance with certain embodiments of the present invention;</p>
<p id="p-0129" num="0148"><figref idref="DRAWINGS">FIG. 16</figref> is a simplified flowchart illustration of Coarse/Fine decoding based on metric from measurements, operative in accordance with certain embodiments of the present invention;</p>
<p id="p-0130" num="0149"><figref idref="DRAWINGS">FIG. 17</figref> is a table storing thresholds and labels which is useful in certain embodiments of the present invention;</p>
<p id="p-0131" num="0150"><figref idref="DRAWINGS">FIG. 18A</figref> is a diagram of Labels and Done bits buffers which are useful in certain embodiments of the present invention;</p>
<p id="p-0132" num="0151"><figref idref="DRAWINGS">FIG. 18B</figref> is a diagram of Labels buffers which are useful in certain embodiments of the present invention;</p>
<p id="p-0133" num="0152"><figref idref="DRAWINGS">FIG. 19</figref> is a diagram of Label assignment for the LSB page in a multi-level cell case, where each cell assigned to 3 different pages, all in accordance with certain embodiments of the present invention;</p>
<p id="p-0134" num="0153"><figref idref="DRAWINGS">FIG. 20</figref> is a simplified flowchart illustration of a method for Soft sampling using done bits, operative in accordance with certain embodiments of the present invention;</p>
<p id="p-0135" num="0154"><figref idref="DRAWINGS">FIG. 21</figref> is a simplified flowchart illustration of a method for Soft Decoding without a Done bit, operative in accordance with certain embodiments of the present invention;</p>
<p id="p-0136" num="0155"><figref idref="DRAWINGS">FIG. 22</figref> is a simplified flowchart illustration of a method for soft sampling without a done bit and without using one of the labels for &#x201c;Not Done&#x201d;, operative in accordance with certain embodiments of the present invention;</p>
<p id="p-0137" num="0156"><figref idref="DRAWINGS">FIGS. 23A-23B</figref>, taken together, form a simplified flowchart illustration of Soft sampling with multi comparison result changes, operative in accordance with certain embodiments of the present invention;</p>
<p id="p-0138" num="0157"><figref idref="DRAWINGS">FIG. 24A</figref> is a simplified functional block diagram of a Multi-Stage Encoder/Decoder which is useful in certain embodiments of the present invention;</p>
<p id="p-0139" num="0158"><figref idref="DRAWINGS">FIG. 24B</figref> is a diagram of a Code word structure for the encoder/decoder of <figref idref="DRAWINGS">FIG. 24A</figref>;</p>
<p id="p-0140" num="0159"><figref idref="DRAWINGS">FIGS. 25A-25B</figref>, taken together, form a simplified flowchart illustration of approximated soft decoding, operative in accordance with certain embodiments of the present invention;</p>
<p id="p-0141" num="0160"><figref idref="DRAWINGS">FIGS. 26A-26B</figref>, taken together, form a simplified flowchart illustration of a soft decoding procedure with early termination of loop, operative in accordance with certain embodiments of the present invention;</p>
<p id="p-0142" num="0161"><figref idref="DRAWINGS">FIG. 27</figref> is an example table for the case of m=5, which is useful in certain embodiments of the present invention;</p>
<p id="p-0143" num="0162"><figref idref="DRAWINGS">FIG. 28</figref> is a Reverse syndrome table, which is useful in certain embodiments of the present invention;</p>
<p id="p-0144" num="0163"><figref idref="DRAWINGS">FIG. 29</figref> is a simplified flowchart illustration of a method for reading Flash memory apparatus having c cells using an increasing sequence of thresholds defining a sequence of bins, operative in accordance with certain embodiments of the present invention;</p>
<p id="p-0145" num="0164"><figref idref="DRAWINGS">FIG. 30</figref> is a simplified flowchart illustration of a method for error-correction encoding and subsequently decoding a plurality of flash memory cells, operative in accordance with certain embodiments of the present invention;</p>
<p id="p-0146" num="0165"><figref idref="DRAWINGS">FIG. 31</figref> is a simplified flowchart illustration of a method for performing the soft-decoding step <b>2730</b> of <figref idref="DRAWINGS">FIG. 30</figref>, which is operative in accordance with certain embodiments of the present invention;</p>
<p id="p-0147" num="0166"><figref idref="DRAWINGS">FIG. 32</figref> is a simplified flowchart illustration of a method for computing a mean and standard deviation of a conditional probability density function of physical values of cells programmed to a rightmost program level, the method being operative in accordance with certain embodiments of the present invention;</p>
<p id="p-0148" num="0167"><figref idref="DRAWINGS">FIG. 33</figref> is a simplified flowchart illustration of a method for identifying a characterizing set of histogram bin centers and corresponding histogram bin values, which encompass the large part of a conditional probability density function of physical values of flash memory cells which were programmed to a particular program level, the method being operative in accordance with certain embodiments of the present invention; and</p>
<p id="p-0149" num="0168"><figref idref="DRAWINGS">FIG. 34</figref> is a simplified flowchart illustration of a method for computing the mean and standard deviation of the condition probability density function of physical values of a particular program level, the method being operative in accordance with certain embodiments of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION OF CERTAIN EMBODIMENTS</heading>
<p id="p-0150" num="0169">State-of-the-art flash memory devices store information with high density on Flash cells with ever smaller dimensions. In addition, Multi-Level Cells (MLC) store several bits per cell by setting the amount of charge in the cell. The amount of charge is then measured by a detector, as measured by a threshold voltage of the transistor gate denoted by VT. Due to inaccuracies during the programming procedure and charge loss due to time and temperature (also known as retention), the measured levels during a Read operation suffer from detection errors. The small dimensions of the Flash cells result in cells that can store very small amounts of charge, enhancing the effects of inaccuracies due to programming and retention. Thus, new single level cells (SLC) and MLC (two or more bits per cell) devices have significantly increased bit error rate (BER), decreasing the reliability of the device.</p>
<p id="p-0151" num="0170">Flash devices are organized into (physical) pages. Each page contains a section allocated for data (512 bytes-8 Kbytes) and a small amount of bytes (16-32 bytes for every 512 data bytes) containing redundancy and back pointers. The redundancy bytes are used to store error correcting information, for correcting errors which may have occurred during the page Read. Each Read and Program operation is performed on an entire page. A number of pages are grouped together to form an Erase Block (EB). A page cannot be erased unless the entire erase block which contains it is erased.</p>
<p id="p-0152" num="0171">An important measure of a Flash device quality is the number of times (Np) it may be reprogrammed and the period that it can store information (usually 10 years) before irrecoverable errors occur. The higher the number of program-erase cycles, the higher the bit error rate (BER). Thus, today's MLC devices can perform around Np=1000 cycles for 10 years retention before the allocation of 16-32 bytes of redundancy per 512 bytes of data bytes becomes insufficient to correct errors. SLC devices usually perform better but obtain a much lower density and hence their prices are much higher. Note that following Np program-erase cycles the device is still operational but the BER is higher. Furthermore, in many devices (e.g. NROM Flash devices), this behavior is predictable and the number of redundancy bytes used to correct these errors does not jump rapidly.</p>
<p id="p-0153" num="0172">During a Read operation, most devices decide on the programmed level of the Flash cell by comparing it to a number of threshold levels which divide the range of VT values into bins. The programmed level is then defined according to the bin in which the cell's transistor gate threshold voltage (VT) lies. It is well known that in the presence of coded information, reliability may be significantly improved if more refined (more accurate) information on the cell's transistor gate threshold voltage (VT) is extracted. For instance, if the transistor gate threshold voltage (VT) lies near to an edge of the bin, the measurement is less reliable and is more likely to be a result of an error (due to retention). In essence, more refined information is equivalent to dividing the range of transistor gate threshold voltage (VT) values to more bins than there are programmed levels. The information from this more refined binning is termed herein &#x201c;soft&#x201d; information as opposed to information obtained from the initial bin selection, according to the number of program levels which latter information is termed herein &#x201c;hard&#x201d; information.</p>
<p id="p-0154" num="0173">Unfortunately, there is conventionally a price to be paid in extracting soft information: device performance may be compromised. To read a device which divides the range of transistor gate threshold voltage (VT) values into 16 bins may take approximately twice as long as dividing it into 8 levels. Certain embodiments of the present invention seek to provide a solution to or reduce the effects of this problem.</p>
<p id="p-0155" num="0174">Certain embodiments of the present invention seek to provide multi stage decoding with a variable read accuracy at each stage intended to obtain fast read performance while enjoying the benefits of soft information decoding in non-volatile memories where obtaining high accuracy samples incurs a timing penalty. If desired, at each stage more accurate or additional information on the transistor gate threshold voltage (VT) value of each cell is extracted and the decoding method is adapted to handle more accurate information.</p>
<p id="p-0156" num="0175">Initially, stored bits are typically read by making a conventional hard decision. That is, each bit is given a marker of &#x2018;0&#x2019; or &#x2018;1&#x2019;. This procedure maintains the high performance of hard decision output but reliability is relatively low. If the codeword is decodable or some other criterion is passed, the codeword is declared successfully decoded. Otherwise, a second, &#x201c;soft&#x201d; stage of reading with higher precision is performed (soft) and decoding occurs with soft information. This increases reliability (corrects more errors per page) but degrades the read time and power performance. To accelerate this procedure it may be advisable to perform &#x2018;soft&#x2019; decoding based on intermediate results from the hard decoding procedure, rather than waiting for the output of the decoding process, as described below in detail.</p>
<p id="p-0157" num="0176">In the embodiment described herein by way of example, &#x2018;soft&#x2019; information, unlike &#x2018;hard&#x2019; input information which simply assigns a &#x2018;0&#x2019; or a &#x2018;1&#x2019; to the input bits, contains a score in addition to the hard information. The score determines confidence in the hard information e.g. how close the detected bit was to its proper position. For example, in Flash memories the data is stored as charge in a cell. A threshold delineates a &#x201c;border&#x201d; between one amount of charge from another. If the detected charge is very close to the threshold, the score (alternatively, reliability) is typically low as a small detection error may push the level from one side of the threshold to the other. On the other hand, if the detected charge is far away from the threshold, the score is typically high as only very large, hence rare, detection errors could push the detected level to the other side of the threshold. Therefore, the log-likelihood ratio log(P(Y|X=0)/P(Y|X=1)) is typically associated with the score, where Y is the distance between the detected charge and the thresholds, P(Y|X=0) is the probability of detecting a charge at point Y given that the symbol transmitted agrees with the hard decision, and P(Y|X=1) is the probability of detecting a charge at point Y given that the symbol transmitted disagrees with the hard decision.</p>
<p id="p-0158" num="0177"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an example of a system employing multi stage decoding in accordance with an embodiment of the present invention. The system typically comprises a uController <b>20</b>, a Flash array <b>40</b>, an Encoder <b>30</b>, and a Decoder <b>35</b> capable of decoding hard and soft information such that, typically, soft decoding occurs only when hard decoding has been unsuccessful and/or is likely to be unsuccessful. The uController <b>20</b> reads pages from the Flash Array <b>40</b> and sends them for decoding at the Decoder <b>35</b>. According to certain embodiments of the present invention, the uController <b>20</b> may read the same page several times in sequence, that is in several stages. During each stage, the read accuracy for the next stage and whether it will be initiated may be determined e.g. according to some or all of several indicators such as the number of Program/Erase cycles of the Erase Block, the success/failure of decoding and the number of errors detected in the decoding during previous stage as described in detail below. The system is operative in conjunction with a Host <b>10</b> which initiates arbitrary requests for reading and writing &#x201c;logical&#x201d; pages (or sectors).</p>
<p id="p-0159" num="0178">uController <b>20</b> typically comprises a controller, RAM storage, and ROM storage and handles all requests from the hosts, controlling the Flash device array <b>40</b> the encoder <b>30</b> and the decoder <b>35</b>. For example, the ucontroller <b>20</b> is able to read and program pages from and to the Flash array <b>40</b>, to send and read pages to be encoded and decoded, and to define whether hard or soft decoding is to be employed. The uController <b>20</b> typically initiates all stages and decides how many stages are to be employed, e.g. how many read operations from the Flash Array <b>40</b> are to be performed for a given page. The uController <b>20</b> typically uses information extracted from the Flash array <b>20</b> and/or indications from the Decoder <b>35</b> to evaluate whether an additional decoding stage is to be employed or not and/or an acceptable level of accuracy is obtained.</p>
<p id="p-0160" num="0179">In SD card and USB drive applications, the main task of the conventional uController is to translate read/write commands sent by the host to read page, program page and block erase commands on the Flash device through a standard interface such as a NAND Flash interface. During conventional program and read page operations the data is conventionally encoded and decoded using a standard error correction code using hard information. In contrast, according to certain embodiments of the present invention, these procedures are replaced and mixed decoding (hard and soft, e.g. depending on need) is provided.</p>
<p id="p-0161" num="0180">The Encoder <b>30</b> and Decoder <b>35</b> are controlled by the uController <b>20</b>. The Encoder <b>30</b> receives commands to encode data sent by uController <b>20</b>. The encoder <b>30</b> may be a hard encoder, or a soft encoder, or may have 2 selectable modes of operation: hard and soft. The Decoder <b>35</b> also receives commands, from the uController <b>20</b>, to decode information from the Flash Array <b>40</b>. Decoder <b>35</b> decodes information using either soft information or hard information. Many encoding schemes and decoding schemes are known in the literature. According to certain embodiments of the present invention, the decoder <b>35</b> outputs an indicator indicating whether the decoding process was or is likely to be successful and, optionally, some additional qualitative information e.g. as described below.</p>
<p id="p-0162" num="0181">The Flash Device Array <b>40</b> may comprise multiple Flash devices or a single Flash device and is typically mapped as a single large contiguous address space of pages. The array <b>40</b> accepts commands to program and read pages and to erase Erase Blocks which typically store several consecutive pages. Furthermore, this unit is operative to selectably perform several types of read operations, depending on the decoding stage.</p>
<p id="p-0163" num="0182">The various Read operations may have the same read accuracy (same amount of bins) or a different read accuracy. The difference between read operations performed at different stages may be in the values of and/or number of the threshold voltages used to determine the charge value residing in each cell. The uController <b>20</b> may combine Read results resulting from two or more stages, to obtain a higher accuracy (a more dense division into bins) than that obtained by any of the read operations in isolation.</p>
<p id="p-0164" num="0183">The specific system illustrated in <figref idref="DRAWINGS">FIG. 1</figref> is not intended to be limiting. For example, the encoder <b>30</b> and/or decoder <b>35</b> may lie in between the uController <b>20</b> and the Flash Device Array <b>40</b> such that the data from and to the Flash array <b>40</b> passes directly through the Encoder <b>30</b> and/or Decoder <b>35</b> and not via the uController <b>20</b>.</p>
<p id="p-0165" num="0184">In the described embodiments of the present invention, the use of the terms flash memory, flash memory device, flash memory apparatus, solid state disk, memory device etc. is non-limiting (also referred to in general as &#x201c;storage apparatus&#x201d;). In certain embodiments of the present invention, the elements associated with the storage apparatus as well as the sequence of operations carried, are integral to the storage apparatus. In certain other embodiments of the present invention, at least some of the elements associated with the storage apparatus and at least some of the related operations are external to the flash, the solid state disk etc. For example, some of the operations performed by uController <b>20</b> of <figref idref="DRAWINGS">FIG. 1</figref> may be carried by the central processing unit of the host <b>10</b>, without limiting the scope of the present invention. For example, the decision to take a second stage of reading (e.g. soft reading) may be taken within the Host and sent to the uController for execution. For convenience only, the following description of certain embodiments of the present invention refers mainly to the term flash memory or solid state disk, however those versed in the art will readily appreciate that the embodiments that are described with reference to flash memory or solid state disk are likewise applicable mutatis mutandis to any storage apparatus which includes at least one memory portion affected by multi-stage reading.</p>
<p id="p-0166" num="0185">Conventional Flash devices typically do not accommodate reading of soft information (or distinguishing between more than two voltage levels representing two programming levels). To overcome this problem, several read &#x201c;passes&#x201d; are typically performed, changing the threshold levels, in number and/or in value, between one read and the next. One method for reading finer information from the Flash device is described below with reference to <figref idref="DRAWINGS">FIG. 11</figref>. Assuming it is desired to divide the readout into K bins, K&#x2212;1 threshold points Vth(i=1 . . . K&#x2212;1), ordered from lowest to highest, are defined. A bin is associated with each cell in the Flash page; initially that bin is assumed to be the zero bin. The following process is then performed iteratively:</p>
<p id="p-0167" num="0186">1. Set the threshold to Vth(it) where (it) is the iteration number (it=1, . . . , K&#x2212;1).</p>
<p id="p-0168" num="0187">2. Perform a binary read operation using this threshold value.</p>
<p id="p-0169" num="0188">3. Each bit corresponds to one of the cells in the page. If a certain bit=0 the appropriate bin level is increased by 1.</p>
<p id="p-0170" num="0189">The end result is that one of the K levels is associated with each cell. It is appreciated that since reading more levels is time consuming, using the above process takes K&#x2212;1 times as long as does a binary read.</p>
<p id="p-0171" num="0190">Several examples of alternative decoding schemes which may be used to implement the Decoder <b>35</b> are now described. The following examples refer to binary codes, which are codes based on two possible program levels for each cell, whereas in fact there may be more than two programming levels per Flash cell. However, there is no loss of generality, since bits may be allocated to a program level e.g. using conventional Gray coding, described e.g. in Reference [9]. Thus, given hard information, the levels may be mapped back into bits. The Gray coding ensures that errors between two adjacent levels cause only one bit to be in error.</p>
<p id="p-0172" num="0191">As described above, suitable output indications are used to determine whether to go beyond an initial hard read of the data to be decoded, as shown below e.g. in <figref idref="DRAWINGS">FIGS. 8 and 9</figref>, step <b>102</b>; in <figref idref="DRAWINGS">FIG. 9</figref> steps <b>302</b>; and in <figref idref="DRAWINGS">FIG. 10</figref> step <b>207</b>. Output indications which are suitable for various types of error correction codes are now described.</p>
<p id="p-0173" num="0192">LDPC codes are well known in the literature e.g. as described in references [7] and [8]. These codes perform extremely well with soft information for which they offer a relatively efficient method of decoding. These codes are linear and may be defined by their check matrix. The check matrix is typically denoted by H and comprises a k&#xd7;n matrix containing binary symbols. The codeword is denoted by c and is a column vector of length n of ones and zeros. The code is defined by the set of all codewords such that Hc=0 where the vector multiplication is performed in modulo 2. In general, LDPC codes are known to have a relatively low number of ones in the check matrix, allowing these codes to be efficiently decoded using iterative decoding methods e.g. as described in references [7] [8], using both hard and soft inputs. If the bit error rate (BER) in the hard information is above or near to a certain threshold, the probability of decoding error using hard information is high. However, if soft information is supplied, the decoding error probability may be significantly reduced. Hence, multi-stage decoding as described herein is particularly useful for LDPC codes since the decoding method may accept both hard and soft inputs.</p>
<p id="p-0174" num="0193">Suitable output indications for deciding whether the BER is above or below a certain threshold are now described. In LDPC codes, each row of the matrix H constitutes a check equation. For every codeword, the exclusive-or of the symbols with indices corresponding to ones in the check equation is typically 0, however, if an error occurred in one of those symbols, the check equation fails and its exclusive-or is 1 instead of 0. In general, the more errors occur in a codeword, the more check equations fail. Thus, according to one embodiment of the present invention, the total number of check equations which did not agree in H (as obtained from hard information), being a good indicator of bit error rate, may be used to decide whether soft information is to be employed or not. A numerical example is now described:</p>
<p id="p-0175" num="0194">Denoting the number of ones (alternatively, row weight) in a check equation (i.e. the number of ones in the relevant row in the check matrix H) by L and Using the symbol p to denote the probability of error in reading a bit using hard information, the probability of a check matrix failing is:</p>
<p id="p-0176" num="0195">
<maths id="MATH-US-00001" num="00001">
<math overflow="scroll">
<mrow>
  <mfrac>
    <mrow>
      <mn>1</mn>
      <mo>-</mo>
      <msup>
        <mrow>
          <mo>(</mo>
          <mrow>
            <mn>1</mn>
            <mo>-</mo>
            <mrow>
              <mn>2</mn>
              <mo>&#x2062;</mo>
              <mi>p</mi>
            </mrow>
          </mrow>
          <mo>)</mo>
        </mrow>
        <mi>L</mi>
      </msup>
    </mrow>
    <mn>2</mn>
  </mfrac>
  <mo>.</mo>
</mrow>
</math>
</maths>
</p>
<p id="p-0177" num="0196"><figref idref="DRAWINGS">FIG. 2</figref> shows how this probability changes as a function of p for the case of L=101. To compute the average number of failed check equations in the matrix H, define the polynomial</p>
<p id="p-0178" num="0197">
<maths id="MATH-US-00002" num="00002">
<math overflow="scroll">
<mrow>
  <mrow>
    <mi>&#x3bb;</mi>
    <mo>&#x2061;</mo>
    <mrow>
      <mo>(</mo>
      <mi>X</mi>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>=</mo>
  <mrow>
    <munderover>
      <mo>&#x2211;</mo>
      <mrow>
        <mi>i</mi>
        <mo>=</mo>
        <mn>0</mn>
      </mrow>
      <mi>&#x3c1;</mi>
    </munderover>
    <mo>&#x2062;</mo>
    <mrow>
      <msub>
        <mi>&#x3bb;</mi>
        <mi>i</mi>
      </msub>
      <mo>&#x2062;</mo>
      <msup>
        <mi>X</mi>
        <mi>i</mi>
      </msup>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
<br/>
where &#x3bb;<sub>i </sub>is the fractions of rows in H with weight i and &#x3c1; is the highest row weight. The average number of failed check equations is then given by
</p>
<p id="p-0179" num="0198">
<maths id="MATH-US-00003" num="00003">
<math overflow="scroll">
<mrow>
  <mfrac>
    <mi>K</mi>
    <mn>2</mn>
  </mfrac>
  <mo>&#x2062;</mo>
  <mrow>
    <mo>(</mo>
    <mrow>
      <mn>1</mn>
      <mo>-</mo>
      <mrow>
        <mi>&#x3bb;</mi>
        <mo>&#x2061;</mo>
        <mrow>
          <mo>(</mo>
          <mrow>
            <mn>1</mn>
            <mo>-</mo>
            <mrow>
              <mn>2</mn>
              <mo>&#x2062;</mo>
              <mi>p</mi>
            </mrow>
          </mrow>
          <mo>)</mo>
        </mrow>
      </mrow>
    </mrow>
    <mo>)</mo>
  </mrow>
</mrow>
</math>
</maths>
<br/>
where K is the number of rows in H.
</p>
<p id="p-0180" num="0199">Therefore, the number of failed rows may be taken as an indicator of p, the probability of error in reading a bit using hard information. For example if hard decisions are used, LDPC code is not capable of decoding if p&#x3c;2e-3. According to an embodiment of the present invention, this incapability is detected by checking the number of failed check matrices. According to certain embodiments of the present invention, if this number corresponds to p&#x3e;1 e-3, a second stage is initiated with an additional, soft read. The additional read may use a higher number of read bins and/or different threshold levels such that, in combination with the information yielded by the previous read, more refined information is available. Thus it is possible to use, e.g. the information in <figref idref="DRAWINGS">FIG. 2</figref>, to build a predefined table associating the LDPC decoding capability with p and the accuracy of the information available during decoding.</p>
<p id="p-0181" num="0200">According to certain embodiments of the present invention, an indication for failed decoding during the first stage may comprise failure of the LDPC method to converge following a given number of iterations. As already mentioned, the most common decoding method for LDPC codes is iterative. Following each iteration comes a check of whether some of the check equations failed. If all check equations agree, a successful decoding process is declared; otherwise, if after a certain number of iterations (say 100) the decoding process fails, a decoding error is conventionally declared. In accordance with certain embodiments of the present invention, occurrence of this &#x201c;decoding error&#x201d; may be used to initiate an additional read stage by the uController <b>20</b>, such that the decoding error no longer means an actual failure to decode; instead, according to certain embodiments of the invention, it is taken to be a call for one or more further read stages.</p>
<p id="p-0182" num="0201">According to certain embodiments of the present invention, a further indication for failed first stage decoding may be obtained by adding cyclic redundancy check (CRC) to the data. That is, on top of the data some of the redundancy bytes are allocated for CRC and both data and CRC are encoded using the LDPC code, which makes use of the remaining redundancy bytes. Several standard CRC computation methods may be used to compute additional 32 bits or 64 bits or 128 bits based on the data to be decoded. Following decoding, the CRC is computed again based on the decoded data and is compared against the decoded CRC. If the comparison fails, a decoding error is declared, this being still another indication for failed first stage decoding.</p>
<p id="p-0183" num="0202">The indications described above may be used in isolation or in any combination, to initiate additional decoding stages as described in detail herein.</p>
<p id="p-0184" num="0203">Algebraic codes such as RS and BCH codes are described in references [5] and [10] and are common in today's storage systems as they offer good results in the case of high rates (the ratio between the data length and the codeword length) with hard decisions. However, the same codes do not perform as well nor as efficiently, under soft decoding. Nonetheless, for very high rate codes, soft decoding of RS and BCH codes may be considered; several options exist, some sub-optimal, e.g. as described in references [11], [12] and [13]. When algebraic codes are used, some or all of several optional indications for unsuccessful decoding during the hard information stage may be employed. One such indication is based on comparing the number of roots detected during the Chien search (in both RS and BCH codes) with the degree of the error locator polynomial. Another indication is whether or not the syndrome is equal to zero following decoding. A third indication may be obtained using CRC as in the case of LDPC codes.</p>
<p id="p-0185" num="0204">Another coding scheme which is common in communication systems is a concatenation of an inner convolutional code with an outer algebraic code. Convolutional codes are limited to lower rates than those achievable using LDPC and algebraic codes but have the advantage, relative to algebraic codes, that they can be naturally decoded with soft information. Convolutional codes perform less well than LDPC codes do, but can be implemented more efficiently. Examples of certain types of convolutional codes are described in reference [4].</p>
<p id="p-0186" num="0205">According to an embodiment of the present invention, indications that the hard read is insufficient may be obtained during decoding using convolutional code. A common process for decoding convolutional codes is the Viterbi-algorithm which at each stage gives a score for the top candidates for the decoded word. These scores indicate how close the top candidate is to one of the codewords. If, following decoding, the best candidate has a score lower than a certain threshold, the uController can decide that the decoded word is unreliable and a second stage should be initiated. According to certain embodiments of the present invention, a more refined indication is obtained by giving scores to certain sections of the codeword. Thus, the uController might initiate a second stage not to the entire page but only to those sections that received low scores. This might reduce the amount of time required for the second stage read.</p>
<p id="p-0187" num="0206">According to an embodiment of the present invention, an indication that the hard stage is insufficient may be given during the algebraic decoding stage which is performed using hard decisions.</p>
<p id="p-0188" num="0207">According to an embodiment of the present invention, the indication as to whether or not to proceed with a soft reading stage, or another soft reading stage, may also be based entirely or partially on indications of the state of &#x201c;health&#x201d; of the flash device. For example, the uController unit <b>20</b> may derive such indications directly or indirectly from information stored on the Flash Device Array <b>40</b>, such as but not limited to: the number of Program/Erase cycles which an Erase Block has undergone, the time that has elapsed from programming of a page until when it was finally read, and the variance and average of the distribution of the cells threshold voltage level distribution for any program level.</p>
<p id="p-0189" num="0208">For example, <figref idref="DRAWINGS">FIG. 3A</figref> shows how the cycle count (number of program/erase cycles) is stored together with the data for each page. A training sequence also may be stored per page which allows distributions of the voltage thresholds of the cells to be evaluated. Some methods for selecting a training sequence as a function of the distributions are known in the art, e.g. as described in reference [14] and the publications referred to therein. Passage of time may be determined from standard variation and mean parameters extracted during the training phase to evaluate the time or distributions during a read operation by comparing those parameters to those obtained during tests in the lab on sample devices.</p>
<p id="p-0190" num="0209">Another example of information stored on the flash device array which may be used as an indication of whether an additional reading stage should be performed, is shown in <figref idref="DRAWINGS">FIG. 3B</figref>. The embodiment of <figref idref="DRAWINGS">FIG. 3B</figref> makes use of the fact that all pages in a given Erase Block have undergone the same program/Erase cycles. Hence, the cycle count is stored only once for the entire block. Additionally, a training sequence may appear only once per the entire Erase block. During a system initialization, the training sequences of all blocks may be read and the time from the last Erase operation of the block until the system initialization, termed herein a &#x201c;time stamp&#x201d;, may be learned. When programming a new page, this &#x201c;time stamp&#x201d; is stored as part of the page instead of storing the entire training sequence, thereby saving space. As the distribution may be approximated from the time stamp, indeed the time stamp may be used to replace the training sequence which earlier appeared per page.</p>
<p id="p-0191" num="0210">In order to determine a cut-off point for a cycle counter, allowing the cycle counter to serve as an indication of whether only hard decoding is to be used, or whether another stage of soft decoding is to be used, the method of <figref idref="DRAWINGS">FIG. 4</figref> may be employed. The method of <figref idref="DRAWINGS">FIG. 4</figref> typically comprises some or all of the following steps suitably ordered e.g. as shown:</p>
<p id="p-0192" num="0211">Step <b>50</b>: Graph the page error rate of the hard mode of the decoder (<b>35</b> in <figref idref="DRAWINGS">FIG. 1</figref>) as a function of the average bit error rate.</p>
<p id="p-0193" num="0212">Step <b>52</b>: Define BERth as the average bit error rate at which the graph of step <b>50</b> is exactly equal to a page error rate defined by an application (say 1E-15).</p>
<p id="p-0194" num="0213">Step <b>54</b>: Graph the average bit error rate as a function of program/erase cycles given that a predetermined retention time, say 10 years, has elapsed. This may be effected using a testing process in which the device is programmed and erased several times and after the last time, is programmed again and oven-baked for a period of time considered to simulate the predetermined retention period.</p>
<p id="p-0195" num="0214">Step <b>56</b>: For all cycle counts for which the BER in the graph of step <b>54</b> is less than BERth, use hard decoding, otherwise use soft decoding.</p>
<p id="p-0196" num="0215">The uController <b>20</b> of <figref idref="DRAWINGS">FIG. 1</figref> may read the cycle count field for the Erase Block (or page) and determine the read accuracy to be employed, using the above 4-step method to select either &#x201c;hard&#x201d; read (faster read operation) or &#x201c;soft&#x201d; read (slower read operation) i.e. the threshold for the selection is predetermined according to experiments, comprising the above 4-step method, performed during the engineering stage. The cycle counter of each erase block may be stored in the flash memory array <b>40</b> either in reliable cells or using a separate code. For example, one way of storing this information more reliably is to store only one bit of the information per cell, since a small number of bits per cell guarantees a substantially lower bit error rate.</p>
<p id="p-0197" num="0216">The cycle count at each time an erase block is programmed, is larger than the count was the last time the erase block was programmed. However, the significance of the cycle count for the purposes of the present invention may vary with circumstance. Flash devices tend to perform better, (as if the number of cycles decreased), the longer the time since the last programming cycle and their bit error rate improves accordingly following retention. For example, a Flash memory device which had 1000 program/erase cycles within a period of one week, may suffer a significantly degraded BER following retention. However, a Flash device that underwent 999 program/Erase cycles and a year later underwent its 1000th cycle, may be found to suffer from a far less degraded BER following the same amount of retention.</p>
<p id="p-0198" num="0217">The time passage from the previous EB erase can be estimated through the cycle counts and the number of errors which occurred during the latest read operation of the oldest page in the erase block. According to certain embodiments of the present invention, termed herein &#x201c;weighted cycle count indicator&#x201d; embodiments, the cycle count (Np) may be set to a lower value if the number of errors which occurred during the latest read operation of the oldest page in the erase block was large, so as to enable a higher rate of encoding and a more compact storage.</p>
<p id="p-0199" num="0218">As described above, a training sequence, optionally in conjunction with a cycle count, may be used to determine the distribution of the threshold voltage levels. Given this distribution it is possible to determine a suitable accuracy for the read operation. The accuracy is dependent on the standard variations of the distributions and a table mapping the standard variation to the accuracy may be given.</p>
<p id="p-0200" num="0219">One suitable decision criterion for whether to use soft or hard coding, as a function of cycle count and time elapsed between programming and reading, may be generated according to the method of <figref idref="DRAWINGS">FIG. 5</figref>. The method of <figref idref="DRAWINGS">FIG. 5</figref> typically comprises some or all of the following steps suitably ordered e.g. as shown:</p>
<p id="p-0201" num="0220">Step <b>70</b>: Generate a graph of the page error rate of the hard decoder as a function of the average bit error rate.</p>
<p id="p-0202" num="0221">Step <b>72</b>: Define BERth as the average bit error rate at which the graph of step <b>70</b> is exactly equal to an application-defined page error rate (say 1E-15).</p>
<p id="p-0203" num="0222">Step <b>74</b>: Generate several graphs of the average bit error rate as a function of program/erase cycles, each graph pertaining to a different period of retention time following occurrence of the program erase cycles and preceding reading. This may be effected by use of a testing process in which, for each graph, the device is programmed and erased various numbers of times and then programmed once again and oven-baked for a predefined retention period.</p>
<p id="p-0204" num="0223">Step <b>76</b>: To decide whether to use soft or hard decoding, read the cycle counter value and determine t, the amount of time that has passed since the device was programmed. Select the graph, from among those generated in step <b>74</b> whose retention time is closest to t. Check if the bit error rate for the cycle counter value is less than BERth. If so, hard decoding should be used, otherwise soft decoding should be used.</p>
<p id="p-0205" num="0224">If the distribution is known, the BER (bit error rate) can be determined and the decision on whether to use soft or hard decoding may be made by comparing the bit error rate to BERth. If the bit error rate is less than BERth, hard decoding should be used, otherwise soft decoding should be used.</p>
<p id="p-0206" num="0225">As a first example consider a flash device which stores 2 bits per cell, i.e., which has 4 program levels as shown in <figref idref="DRAWINGS">FIGS. 6A and 6B</figref>. Define the Read operations which the Flash array may perform, such as for example the following 3 types of Read operations:</p>
<p id="p-0207" num="0226">a. Read 1: a read operation which corresponds to hard decisions. The vertical lines in <figref idref="DRAWINGS">FIG. 6A</figref> denote the decision levels selected for the Read 1 operation.</p>
<p id="p-0208" num="0227">b. Read 2A: a read operation with 12 threshold levels whose locations are shown in <figref idref="DRAWINGS">FIG. 6B</figref> as dotted lines. Read 1+Read 2A together divide the total voltage range into 16 bins.</p>
<p id="p-0209" num="0228">c. Read 2B: a read operation with 15 threshold levels corresponding to the solid and dotted vertical lines in <figref idref="DRAWINGS">FIG. 6B</figref>. Read 2A and 2B have, respectively, four and five times the number of threshold levels that Read 1 has. Therefore, a conventional implementation of these reads would take four and five times as long, respectively.</p>
<p id="p-0210" num="0229">As a second example, consider the 3 read stages of <figref idref="DRAWINGS">FIG. 7</figref> comprising a hard read stage with 4 bins, a fine read stage with 16 bins and an ultra-fine or finer read stage with 28 bins. This may be effected by adding an additional read operation Read 3A which uses additional 12 additional thresholds. Therefore, the Read 3A operation in combination with the previous reads (Read 1, Read 2A and Read 2B, totaling 15 thresholds) define 27 thresholds which divide the signal into the desired 28 bins.</p>
<p id="p-0211" num="0230">Due to retention, the centers of the distributions of the program levels might shift to the left. The threshold levels may be moved appropriately to accommodate this.</p>
<p id="p-0212" num="0231">The uController <b>20</b> instructs the decoder <b>35</b> differently under the &#x201c;nearly-hard&#x201d; or &#x201c;maintain-performance-when-young, reliability-when-old&#x201d; strategies described above, e.g. as illustrated in <figref idref="DRAWINGS">FIGS. 8 and 10</figref> respectively.</p>
<p id="p-0213" num="0232"><figref idref="DRAWINGS">FIG. 8</figref> is a simplified flowchart illustration of a multi-stage read method, typically implemented in the form of instructions issued by uController <b>20</b> to decoder <b>35</b>, operative in accordance with the &#x201c;nearly-hard&#x201d; strategy and assuming 2 read stages are used. According to this strategy the Read operation always terminates with a conventional hard decision read, so the method of <figref idref="DRAWINGS">FIG. 8</figref> begins with a Read 1 operation (<b>100</b>). This may be followed by an attempt to decode using the hard decision decoder (<b>101</b>) and a subsequent success check (<b>102</b>), although alternatively or in addition, if LDPC is used, an indication of expected success may be available in the first iteration. In the event of success, the operation is complete. If not, proceed with a Read 2A operation (<b>103</b>) and add the threshold levels to those used in Read 1 so as to divide the entire range into 16 bins. Decode using soft information (<b>104</b>) and finish.</p>
<p id="p-0214" num="0233"><figref idref="DRAWINGS">FIG. 9</figref> is a simplified flowchart illustration of instructions issued by uController <b>20</b> to decoder <b>35</b> under the &#x201c;nearly-hard&#x201d; strategy and assuming 3 read stages are used rather than 2 as in <figref idref="DRAWINGS">FIG. 8</figref>.</p>
<p id="p-0215" num="0234"><figref idref="DRAWINGS">FIG. 10</figref> is an example of a method for performing multi-stage read under the &#x201c;maintain-performance-when-young, reliability-when-old&#x201d; strategy. The method begins with recovering some information on threshold voltage distributions in block <b>200</b>, e.g. via the training sequence and/or cycle count indicators, as described above. This is followed by a check as to whether the STD is large or small (<b>201</b>). If large, proceed with a Read 2B operation (<b>204</b>) and soft decoding (<b>205</b>). Otherwise, perform a Read 1 operation (hard decision) and hard decoding. If the hard decoding fails (<b>207</b>), perform soft decoding as in <figref idref="DRAWINGS">FIG. 7</figref>.</p>
<p id="p-0216" num="0235">Considerations for designing a code according to the &#x201c;nearly-hard&#x201d; strategy are now described, based on the following definitions:</p>
<p id="p-0217" num="0236">1. FERreq=The application-specific frame error rate: an upper bound on the probability of wrongly decoding a page (FER=frame error rate).</p>
<p id="p-0218" num="0237">2. PFloss=The average performance loss: the average time loss during a page read due to the fact that more levels are being read.</p>
<p id="p-0219" num="0238">Assuming an error correction coding scheme with a given amount of redundancy which can be used for both hard and soft information, an evaluation may be made as to how large the lobes of the charge level distributions can be such that the code remains operative. Assuming the distance between the lobes is d and the standard variation of the distribution of the lobes is &#x3c3;, this may be done by finding the smallest d/a satisfying that:</p>
<p id="p-0220" num="0239">a. the code still works</p>
<p id="p-0221" num="0240">b. the performance loss is no larger than PFloss and</p>
<p id="p-0222" num="0241">c. the page error rates are smaller than FERreq.</p>
<p id="p-0223" num="0242">To find the smallest d/a satisfying a-c the method of <figref idref="DRAWINGS">FIG. 13</figref> may be employed. The method of <figref idref="DRAWINGS">FIG. 13</figref> typically comprises some or all of the following steps suitably ordered e.g. as shown:</p>
<p id="p-0224" num="0243">Step <b>510</b>: Graph the estimated frame error rate of the code as a function of d/&#x3c3;, when hard inputs are used. The estimation may be obtained conventionally, e.g. by simulation or by analytical methods.</p>
<p id="p-0225" num="0244">Step <b>520</b>: Graph the estimated frame error rate of the code as a function of d/&#x3c3;, when soft inputs are used, assuming a given number of bins, say 20. The estimation may be obtained conventionally, e.g. by simulation or by analytical methods.</p>
<p id="p-0226" num="0245">Step <b>530</b>: Compute the performance loss for each Nu using the graph generated in step <b>510</b>. Assuming that the soft read operation follows the method of <figref idref="DRAWINGS">FIG. 11</figref>, reading L levels expends more time than reading hard information by a factor of L. Therefore, the performance of the code is computed as FER(d/&#x3c3;)*L where FER(d/&#x3c3;) is the value of the graph generated in step <b>510</b> at d/&#x3c3;.</p>
<p id="p-0227" num="0246">Step <b>540</b>: Find the smallest d/&#x3c3; such that the performance loss computed in step <b>530</b> is smaller than PFloss and such that the frame error rate using soft information as computed in step <b>520</b> is smaller than FERreq.</p>
<p id="p-0228" num="0247">As an example, the graphs of steps <b>510</b> and <b>520</b> are illustrated in <figref idref="DRAWINGS">FIG. 12</figref> for a concatenated code of a punctured convolution code of rate 7/8 with a BCH code that can correct 4 errors over a page of 512+5 (spare) bytes. The number of levels is assumed to be 50 and then the performance loss is less than 5% and the FERreq=1E-15. As is appreciated from the graph, choosing d/&#x3c3;=6 yields an approximate FER of 1E-3 using hard information and hence a 5% performance loss whereas using soft information easily yields page error rates of less than FERreq. If only hard decoding were to be employed, the value of d/&#x3c3; would be 7.</p>
<p id="p-0229" num="0248">In order to design a code which operates at a given d/&#x3c3; and functions at a given performance, loss and frame error rate codes with increasing redundancies can be designed until a code is obtained which satisfies all of the above conditions.</p>
<p id="p-0230" num="0249">A method for Coarse/Fine decoding based on Intermediate hard decoding results is now described with reference to <figref idref="DRAWINGS">FIG. 14</figref>. In this embodiment, the decision to perform &#x201c;soft&#x201d; decoding is based on partial results of the hard decoding instead of the complete results of the hard decoding which yields a pass/fail result. 3 different examples for partial results are now described:
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0000">
    <ul id="ul0004" list-style="none">
        <li id="ul0004-0001" num="0250">1) If LDPC as is being used as a code, partial results may be obtained during the first iteration of the LDPC which gives us the number of parity check equations which do not agree. A threshold may be set such that if the number of equations that disagree exceeds this threshold, it is decided that the probability of hard decoding failure is high and turn to perform &#x201c;soft&#x201d; decoding. In the event that the number of bad parity equations is below the thresholds, LDPC iterations continued until a &#x201c;hard&#x201d;-decoded codeword is obtained.</li>
        <li id="ul0004-0002" num="0251">2) If concatenated BCH codes are considered, including a short inner code concatenated with a long outer code, partial decoding results may be obtained from the inner codes from which the number of errors corrected by the inner codes may be counted. A threshold may be defined such that if the number of errors corrected by the inner BCH codes is higher than this threshold, it is declared that there is a high probability of failure in hard decoding and outer code decoding is discontinued; instead decode proceeds using reliability information and &#x201c;soft&#x201d; decoding.</li>
        <li id="ul0004-0003" num="0252">3) A third option comprises performing part of the BCH code decoding e.g., in the case of concatenated codes, part of the outer code decoding. The conventional BCH decoding procedure has 3 stages: Syndrome computation, Error locator polynomial (ELP) computation and Chien search. If the BCH code is designed to correct a significant amount of error (say more than 30), any error sequences which are beyond the error correcting capability of the code are bound to yield high order ELPs. Therefore, a cap, or upper threshold may be put on the order of the ELP and it may be decided that if the order of the ELP is above that cap, &#x201c;soft decoding&#x201d; will be employed. A similar method may be used with Reed-Solomon codes as opposed to BCH codes.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0231" num="0253">The method of <figref idref="DRAWINGS">FIG. 14</figref> may be modified by additionally performing &#x201c;soft&#x201d; decoding using reliability information if failure to decode is present after completing the decoding process.</p>
<p id="p-0232" num="0254">In step <b>610</b>, typically, a Hard reading of a Flash page (i.e. only bit values of 0 or 1 are returned) is performed, followed by a portion of the total hard decoding task, e.g. decoding of only some of the total amount of coded data, which portion generates partial results. In step <b>620</b> at least one metric is generated from the partial results of the portion of hard decoding performed in step <b>610</b> in order to evaluate the chances of a successful completion of the hard decoding. Suitable metrics are described above for 3 different cases. If a predetermined success criterion is achieved, e.g. if the at least one metric is above a certain threshold, the method proceeds with step <b>640</b>. If not, hard decoding is completed (step <b>630</b>). In step <b>640</b> the page is read using a finer resolution and on top of the hard results, a reliability measure is obtained. Step <b>640</b> is followed by step <b>650</b> which comprises soft decoding.</p>
<p id="p-0233" num="0255"><figref idref="DRAWINGS">FIG. 15</figref> is a simplified flowchart illustration of a method for Coarse/Fine decoding based on partial results and hard decoding success/failure, operative in accordance with certain embodiments of the present invention. The method of <figref idref="DRAWINGS">FIG. 15</figref> is similar to the method of <figref idref="DRAWINGS">FIG. 14</figref> other than step <b>760</b> which checks whether the hard decoding, predicted to be successful, has indeed been completed successfully. If not, soft reading and decoding are performed, as in steps <b>640</b> and <b>650</b> in <figref idref="DRAWINGS">FIG. 14</figref>.</p>
<p id="p-0234" num="0256">Methods for Coarse/Fine decoding based on metrics of measurement are now described with reference to <figref idref="DRAWINGS">FIG. 16</figref>. In certain applications, analog values of the cells in a page may be read using varying degrees of accuracy. More accurate reading of the page incurs longer reading times and is therefore less desirable. However, less accurate measurement may yield smaller decoding success probabilities. The method of <figref idref="DRAWINGS">FIG. 16</figref> is useful for deciding whether to perform coarse or fine reading and decoding.</p>
<p id="p-0235" num="0257">The method typically begins with stage <b>1</b> reading (step <b>810</b>) which comprises coarser hence faster reading. Step <b>820</b> is a metric evaluation step. For example, variance of one of the lobes may be evaluated (step <b>820</b>). Say each cell is programmed to one of 8 levels. When performing stage <b>1</b> reading the possible cell values are divided into bins. The bins which surround the highest lobe are identified. This is done by starting from the highest bin and counting the number of elements added for each bin added, successively taking lower and lower bins until the number of cells expected at the highest lobe is roughly obtained. Once the appropriate bins have been obtained, the variance or STD may be estimated.</p>
<p id="p-0236" num="0258">According to certain embodiments, an average or central value of a highest lobe in a probability density function graph of logical values read from flash memory may be found, by defining mock thresholds between maximal values identified for a new flash memory device and minimal values identified for an extremely run down (high retention, high cycle count) flash memory device. To do this, a new flash memory device may be taken up at a set up stage, and a large number of cells therein, perhaps one erase-sector full, may be programmed to their highest levels. The erase sector is read, using suitable thresholds whose intervals define a suitable resolution, to determine the location of the top edge of the highest (rightmost) lobe. An extremely run-down flash memory device is then taken up, also at the set up stage, and a large number of cells therein, perhaps one erase-sector full, may be programmed to their highest levels. The erase sector is read, using suitable thresholds whose intervals define a suitable resolution, to determine the location of the bottom edge of the lowest (leftmost) lobe. It can then be assumed to be the case, that any flash memory device's highest lobe falls within the window between the known bottom edge of the lowest lobe of the run-down flash memory, and the known top edge of the highest lobe of the new flash memory. This is helpful, for example, when it is desired to define mock reading thresholds to identify the location of a highest lobe of a probability density function of an individual flash memory device, wherein the mock reading thresholds are to span all possible locations of the highest lobe. This can be done by distributing mock reading thresholds throughout the entire window described above.</p>
<p id="p-0237" num="0259">Once the variance has been found, it may be compared to a given threshold (step <b>830</b>). If the variance is too high it may be concluded that all the lobes suffer from this variance and decoding is not likely to succeed with the current coarse reading resolution and that a higher resolution reading is in order (step <b>850</b>). Alternatively, the average of the highest lobe may be computed and compared to the average one would obtain just after programming. A threshold value may be set for the difference between the two averages (current average and the one just following programming) such that if the difference is larger than a given threshold, the device is deemed to have aged considerably and therefore its distributions are likely to be very wide and require higher precision reading (step <b>850</b>).</p>
<p id="p-0238" num="0260">In summary, six alternative coarse/fine reading methods are described herein, with reference to FIGS. <b>8</b>,<b>9</b>, <b>10</b>, <b>14</b>, <b>15</b> and <b>16</b> respectively. The method of <figref idref="DRAWINGS">FIG. 10</figref> relies on standard variation indications obtained from page distribution indication which are typically pre-measured e.g. before page reading begins. The method of <figref idref="DRAWINGS">FIG. 16</figref> uses metrics computed from the flash page reading its own measurements, using a suitable process such as Read 1, Read 2A or read 3A, to decide whether to employ Soft decoding or hard decoding. These metrics might for example include standard variations computed from flash page reading. The method of <figref idref="DRAWINGS">FIG. 14</figref> is a partial/conditional hard decoding method which can be used instead of completely executing hard decoding processes e.g. those of <figref idref="DRAWINGS">FIG. 8</figref>, step <b>101</b>; <figref idref="DRAWINGS">FIG. 9</figref>, step <b>101</b>; and <figref idref="DRAWINGS">FIG. 10</figref>, step <b>203</b>. In the method of <figref idref="DRAWINGS">FIG. 14</figref>, partial hard decoding (step <b>610</b>) is effected. Hard decoding is then completed (step <b>630</b>) if (step <b>620</b>) it is likely to be successful. Otherwise (steps <b>640</b>, <b>650</b>), soft decoding may be used.</p>
<p id="p-0239" num="0261">The method of <figref idref="DRAWINGS">FIG. 15</figref> is another partial/conditional hard decoding method which can be used instead of completely executing hard decoding processes e.g. those of <figref idref="DRAWINGS">FIG. 8</figref>, step <b>101</b>; <figref idref="DRAWINGS">FIG. 9</figref>, step <b>101</b>; and <figref idref="DRAWINGS">FIG. 10</figref>, step <b>203</b>. In the method of <figref idref="DRAWINGS">FIG. 15</figref>, partial hard decoding (step <b>710</b>) is effected. Hard decoding is then completed if (step <b>720</b>) it is likely to be successful but may be used only if indeed (step <b>760</b>) it can be demonstrated retroactively to have been successful. Otherwise (steps <b>740</b>, <b>750</b>), soft decoding may be used.</p>
<p id="p-0240" num="0262">To estimate the mean and standard deviation of the highest program level, the methods illustrated in <figref idref="DRAWINGS">FIGS. 32-34</figref> may be used. First, a subset of histogram values is identified, which corresponds to the highest program level. This is done by searching for the first bin from the right at which a local maximum is attained. Regardless of the state of the flash device in question, the first significant maximum from the right always correspond to the highest program level, e.g. as shown in <figref idref="DRAWINGS">FIG. 32</figref> at step <b>3520</b> and in <figref idref="DRAWINGS">FIG. 33</figref>.</p>
<p id="p-0241" num="0263">Once the maximizing bin is identified, several bins may be taken from either side of that bin and accounted for as belonging to cells in the highest program level. Denote by m* the first bin index from the right at which the histogram posses a local maximum. Then, e.g. as shown in <figref idref="DRAWINGS">FIG. 5</figref> at step <b>3530</b> and in <figref idref="DRAWINGS">FIG. 34</figref>, the mean and standard deviation of the highest program level can be estimated as follows:</p>
<p id="p-0242" num="0264">
<maths id="MATH-US-00004" num="00004">
<math overflow="scroll">
  <mrow>
    <mi>&#x3bc;</mi>
    <mo>=</mo>
    <mfrac>
      <mrow>
        <munderover>
          <mo>&#x2211;</mo>
          <mrow>
            <mi>k</mi>
            <mo>=</mo>
            <mrow>
              <msup>
                <mi>m</mi>
                <mo>*</mo>
              </msup>
              <mo>-</mo>
              <msub>
                <mi>N</mi>
                <mi>B</mi>
              </msub>
            </mrow>
          </mrow>
          <mrow>
            <msup>
              <mi>m</mi>
              <mo>*</mo>
            </msup>
            <mo>+</mo>
            <msub>
              <mi>N</mi>
              <mi>B</mi>
            </msub>
          </mrow>
        </munderover>
        <mo>&#x2062;</mo>
        <mrow>
          <mrow>
            <mi>H</mi>
            <mo>&#x2061;</mo>
            <mrow>
              <mo>(</mo>
              <mi>k</mi>
              <mo>)</mo>
            </mrow>
          </mrow>
          <mo>&#x2062;</mo>
          <mrow>
            <mi>A</mi>
            <mo>&#x2061;</mo>
            <mrow>
              <mo>(</mo>
              <mi>k</mi>
              <mo>)</mo>
            </mrow>
          </mrow>
        </mrow>
      </mrow>
      <mrow>
        <munderover>
          <mo>&#x2211;</mo>
          <mrow>
            <mi>k</mi>
            <mo>=</mo>
            <mrow>
              <msup>
                <mi>m</mi>
                <mo>*</mo>
              </msup>
              <mo>-</mo>
              <msub>
                <mi>N</mi>
                <mi>B</mi>
              </msub>
            </mrow>
          </mrow>
          <mrow>
            <msup>
              <mi>m</mi>
              <mo>*</mo>
            </msup>
            <mo>+</mo>
            <msub>
              <mi>N</mi>
              <mi>B</mi>
            </msub>
          </mrow>
        </munderover>
        <mo>&#x2062;</mo>
        <mrow>
          <mi>H</mi>
          <mo>&#x2061;</mo>
          <mrow>
            <mo>(</mo>
            <mi>k</mi>
            <mo>)</mo>
          </mrow>
        </mrow>
      </mrow>
    </mfrac>
  </mrow>
</math>
</maths>
<maths id="MATH-US-00004-2" num="00004.2">
<math overflow="scroll">
  <mrow>
    <mi>&#x3c3;</mi>
    <mo>=</mo>
    <msqrt>
      <mrow>
        <mi>max</mi>
        <mo>(</mo>
        <mrow>
          <mrow>
            <mfrac>
              <mrow>
                <munderover>
                  <mo>&#x2211;</mo>
                  <mrow>
                    <mi>k</mi>
                    <mo>=</mo>
                    <mrow>
                      <msup>
                        <mi>m</mi>
                        <mo>*</mo>
                      </msup>
                      <mo>-</mo>
                      <msub>
                        <mi>N</mi>
                        <mi>B</mi>
                      </msub>
                    </mrow>
                  </mrow>
                  <mrow>
                    <msup>
                      <mi>m</mi>
                      <mo>*</mo>
                    </msup>
                    <mo>+</mo>
                    <msub>
                      <mi>N</mi>
                      <mi>B</mi>
                    </msub>
                  </mrow>
                </munderover>
                <mo>&#x2062;</mo>
                <mrow>
                  <mrow>
                    <mi>H</mi>
                    <mo>&#x2061;</mo>
                    <mrow>
                      <mo>(</mo>
                      <mi>k</mi>
                      <mo>)</mo>
                    </mrow>
                  </mrow>
                  <mo>&#x2062;</mo>
                  <msup>
                    <mrow>
                      <mo>(</mo>
                      <mrow>
                        <mrow>
                          <mi>A</mi>
                          <mo>&#x2061;</mo>
                          <mrow>
                            <mo>(</mo>
                            <mi>k</mi>
                            <mo>)</mo>
                          </mrow>
                        </mrow>
                        <mo>-</mo>
                        <mi>&#x3bc;</mi>
                      </mrow>
                      <mo>)</mo>
                    </mrow>
                    <mn>2</mn>
                  </msup>
                </mrow>
              </mrow>
              <mrow>
                <munderover>
                  <mo>&#x2211;</mo>
                  <mrow>
                    <mi>k</mi>
                    <mo>=</mo>
                    <mrow>
                      <msup>
                        <mi>m</mi>
                        <mo>*</mo>
                      </msup>
                      <mo>-</mo>
                      <msub>
                        <mi>N</mi>
                        <mi>B</mi>
                      </msub>
                    </mrow>
                  </mrow>
                  <mrow>
                    <msup>
                      <mi>m</mi>
                      <mo>*</mo>
                    </msup>
                    <mo>+</mo>
                    <msub>
                      <mi>N</mi>
                      <mi>B</mi>
                    </msub>
                  </mrow>
                </munderover>
                <mo>&#x2062;</mo>
                <mrow>
                  <mi>H</mi>
                  <mo>&#x2061;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mi>k</mi>
                    <mo>)</mo>
                  </mrow>
                </mrow>
              </mrow>
            </mfrac>
            <mo>-</mo>
            <mfrac>
              <msup>
                <mi>dV</mi>
                <mrow>
                  <mstyle>
                    <mspace width="0.3em" height="0.3ex"/>
                  </mstyle>
                  <mo>&#x2062;</mo>
                  <mi>z</mi>
                </mrow>
              </msup>
              <mn>12</mn>
            </mfrac>
          </mrow>
          <mo>,</mo>
          <mi>O</mi>
        </mrow>
        <mo>)</mo>
      </mrow>
    </msqrt>
  </mrow>
</math>
</maths>
<br/>
where N<sub>B </sub>is chosen on the one hand to guarantee that all the distribution mass of the highest program level is accounted for, and on the other hand to prevent penetration of cells from lower program levels into the computation. The term
</p>
<p id="p-0243" num="0265">
<maths id="MATH-US-00005" num="00005">
<math overflow="scroll">
<mfrac>
  <msup>
    <mi>dV</mi>
    <mrow>
      <mstyle>
        <mspace width="0.3em" height="0.3ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mi>z</mi>
    </mrow>
  </msup>
  <mn>12</mn>
</mfrac>
</math>
</maths>
<br/>
accounts for the quantization noise stemming from the sampling of the histogram.
</p>
<p id="p-0244" num="0266">The method of <figref idref="DRAWINGS">FIG. 16</figref> is also applicable to applications in which the coarse read operation is a hard read operation. A hard read is equivalent to having a single threshold distinguishing between any two lobes. If these thresholds are set to work with programming levels just following programming, one of the thresholds may be employed to count the number of cells below and above this threshold. Following some time the distribution both shifts and becomes wider. This would cause the number of cells below the threshold to increase. This indication may be employed to decide that retention had affected the cells and the distributions have widened and therefore, finer resolution reading is to be employed.</p>
<p id="p-0245" num="0267">A soft reading method, for acquiring &#x201c;soft&#x201d; measurements, is now described with reference to <figref idref="DRAWINGS">FIG. 20</figref>. In NAND Flash memory arrays an entire page of cells (say 32K cells) is compared at once against a variable threshold. This is done by setting the floating gate to the variable threshold level, applying a voltage on the bit-line and checking whether a current flows through the string (or whether the current is above a predefined threshold). However, this only yields a binary result for each cell. To obtain &#x201c;Soft&#x201d; measurements, this process may be repeated several times, each time with a different variable level. For example, if it is desired to obtain 5-bit of &#x201c;soft&#x201d; measurements, this process may be repeated 32 times.</p>
<p id="p-0246" num="0268">In general, to obtain the 5-bits of &#x201c;soft&#x201d; measurements the array may first be read 31 times and the information stored in 31 memory buffers (each buffer has the same size as a page). Then soft information may be extracted from the data in the 31 buffers. An alternative method which employs less memory and less buffers (5 or 6 buffers for 5-bits &#x201c;soft&#x201d; information) is now described.</p>
<p id="p-0247" num="0269">One application involves &#x201c;soft&#x201d; measurement extraction which is performed on an external controller chip and the NAND flash memory only performs the variable level (binary) comparisons. The result of the binary comparison is then sent to the controller (say, serially, byte by byte). In some implementations the controller may set the compared threshold level by setting some internal register in the NAND memory array chip or by setting an external Digital to Analog Converter (DAC). The controller then generates compare commands and page read commands to obtain the final &#x201c;soft&#x201d; information.</p>
<p id="p-0248" num="0270">The goal is to assign each cell to a bin defined by the voltage span between two threshold levels. Each bin is identified by a label. According to the method of <figref idref="DRAWINGS">FIG. 20</figref> the memory may be sampled using only the buffers used for the labels and an additional done bit buffer. An example of this type of memory organization appears in <figref idref="DRAWINGS">FIG. 18A</figref>. <figref idref="DRAWINGS">FIG. 18B</figref> is a diagram of Labels buffers without the &#x201c;done bit&#x201d; buffer which are useful in certain embodiments of the present invention.</p>
<p id="p-0249" num="0271">In Step <b>1200</b>, thresholds defining the bins are obtained and sorted from lowest to highest. Also obtained are the labels corresponding to each bin, from the lowest bin up to the highest bin. If the thresholds may be sorted to begin with the sorting step is not needed. In Step <b>1204</b> the done bit buffer is initialized so as to identify that none of the cells have yet been assigned to a bin. Steps <b>1206</b> to <b>1224</b> are then repeated for each of the possible thresholds from the lowest to the highest.</p>
<p id="p-0250" num="0272">Steps <b>1210</b> till <b>1220</b> are then performed for each of the cells in a page. One operation per cell is assumed to simplify this example, however, in fact, these steps may be parallelized, performed on 8 cells simultaneously. Such parallelization may be more suitable for state-of-the-art NAND flash interfaces which output the read page result as a serial sequence of bytes. Thus, a compare result would be read as a sequence of bytes. It is assumed that the comparison result of a cell is &#x2018;0&#x2019; if the gating threshold of the cell is higher than the threshold being compared and &#x2018;1&#x2019; if it is lower. Using that notation, if the comparison result for a cell is a &#x2018;1&#x2019;, the final label associated with it cannot yet be determined. If it is a zero and the done bit is not yet set, the corresponding cell is assigned the label corresponding to the bin defined by the space between the precious threshold and the current one (step <b>1216</b>). The end result is that the first comparison change from &#x201c;1&#x201d; to &#x201c;0&#x201d; is always detected.</p>
<p id="p-0251" num="0273">The method of <figref idref="DRAWINGS">FIG. 20</figref> may be modified to work with several different scenarios. For example, the process may start from the highest threshold down to the lowest threshold. In that case the comparison in step <b>1212</b> would be to &#x2018;1&#x2019; instead of &#x2018;0&#x2019;. In another implementation, the done bit initialization step (<b>1204</b>) may be skipped by adding an initialization per cell which occurs only during the first threshold iteration.</p>
<p id="p-0252" num="0274">Alternatively, the done bit buffer may be omitted as shown in the method of <figref idref="DRAWINGS">FIG. 21</figref>. In the method of <figref idref="DRAWINGS">FIG. 21</figref>, one of the labels is replaced with a label signifying &#x201c;Not Done&#x201d;. The check of the not done bits is replaced with a check of a &#x201c;Not Done&#x201d; label. The case where all comparisons resulted in a &#x201c;1&#x201d; is labeled; during the last iteration the labels are set to the label signifying the highest bin.</p>
<p id="p-0253" num="0275">Yet another alternative method is that illustrated in <figref idref="DRAWINGS">FIG. 22</figref> which does not use the Done bits buffer and does not even sacrifice one of the labels for the sake of defining a &#x201c;not done&#x201d; state. Instead, the memory label buffer is always set to that defined by the next threshold, as long as the comparison yields a &#x201c;1&#x201d; (below threshold) and as long as the previous value corresponded to the label of the current threshold. The end result is detection of a first change from a &#x201c;1&#x201d; to &#x201c;0&#x201d;. When step <b>1372</b> is absent, a new method results which implements detection of the last change of &#x201c;1&#x201d; to &#x201c;0&#x201d;.</p>
<p id="p-0254" num="0276">The above &#x2018;soft&#x2019; reading may also be applied for the case where each cell is a multi-level cell and each physical row of cells contains two or more pages stored as least significant bits (LSB), most significant bits (MSB) and so on. Several bins are assigned the same labels as shown in <figref idref="DRAWINGS">FIG. 19</figref>. To clarify, <figref idref="DRAWINGS">FIG. 17</figref> illustrates an example of a possible table of labels, corresponding to the thresholds. From the table of <figref idref="DRAWINGS">FIG. 17</figref> it is apparent that only three bits may be employed to identify each label. 28 thresholds are employed. Using the method of <figref idref="DRAWINGS">FIG. 20</figref>, only 4 buffers may be employed, since each buffer is a bit wide. Furthermore, it is apparent from the choice of labels in the table of <figref idref="DRAWINGS">FIG. 17</figref> that the first bit of each label identifies the &#x2018;hard&#x2019; value of the bit.</p>
<p id="p-0255" num="0277">It may be the case that a comparison result is not a deterministic one. That is, due to noise at the sense amplifiers of the NAND arrays, if the compared threshold voltage is close to that of the cell itself, the result may toggle between &#x2018;0&#x2019; and &#x2018;1&#x2019; following repeated comparisons with the same threshold. Therefore, if there is a sequence of threshold comparisons where the thresholds are close to one another, during a sequence of comparisons from the lowest to the highest threshold, the comparison results of some of the cells may change twice from a &#x2018;1&#x2019; to &#x2018;0&#x2019;. It may not be desirable to use the label allocated for either the first or second change; instead, it may be desirable to allocate a label defined by the average of those bin locations as shown in the method of <figref idref="DRAWINGS">FIGS. 23A-23B</figref>.</p>
<p id="p-0256" num="0278">The method of <figref idref="DRAWINGS">FIGS. 23A-23B</figref> is also characterized by use of an un-done buffer which identifies whether a change from a 1 to a 0 has been observed; and/or a secondary label table, on-top of that described above, which typically includes several sub-tables, each associated with a different label. Thus, if the done bit is already set, and the undone bit identifies a second change from a 1 to 0, the secondary table can be used to decide on the value of the label allocated to the cell, depending on the label currently associated with the cell. By setting the label table accordingly, a label which identifies the middle ground between the two bins may be associated with the 1 to 0 change.</p>
<p id="p-0257" num="0279">Intermediate decoding results may be obtained for a Fine decoding stage.</p>
<p id="p-0258" num="0280">A multi-stage decoding scheme for Flash memories using BCH codes is now described with reference to <figref idref="DRAWINGS">FIGS. 24A-28</figref>.</p>
<p id="p-0259" num="0281">A coding and decoding system is now described which is capable of performing both hard and soft decoding. The system is characterized in that both encoding and decoding are performed with relatively little complexity and are easily realized on a small silicon die.</p>
<p id="p-0260" num="0282">The Code structure of the system is first described. The code typically comprises a concatenation of two BCH codes, e.g. as described in the above-referenced Blahut publication and as shown in <figref idref="DRAWINGS">FIG. 24A</figref>. In the example embodiment described herein, the inner BCH encoder <b>2230</b> has a minimum distance of 3. That is, during &#x2018;hard&#x2019; decoding up to one error in each of the inner code's packets can be corrected. The inner code can also be decoded with soft information as described hereinbelow. The outer code 3210 typically comprises a BCH code capable of correcting several errors and therefore has a larger redundancy.</p>
<p id="p-0261" num="0283">The encoding process typically comprises the following steps:</p>
<p id="h-0007" num="0000">a. The data, containing k1 bits, is encoded using the outer encoder <b>2210</b>. The outer encoder <b>2210</b> appends redundancy bits to the data, as shown in <figref idref="DRAWINGS">FIG. 24B</figref>, thus producing a codeword of overall (together with the data bits) k2 bits.</p>
<p id="p-0262" num="0284">b. The k2 bits produced by the Outer encoder <b>2210</b> are partitioned into short packets (say V bits each). Each packet is appended with a short redundancy by the BCH encoder. Thus, the inner encoder produces Y bits from every V bits, as shown in <figref idref="DRAWINGS">FIG. 24B</figref>. After concatenating all the packets together, the result is a codeword of an overall of n bits. k1, k2, V, Y and n are all integers; k2&#x3e;k1; Y&#x3e;V.</p>
<p id="p-0263" num="0285">The decoding process typically comprises some or all of the following steps, suitably ordered e.g. as shown:</p>
<p id="h-0008" num="0000">c. The codeword is fragmented into packets. Each packet is decoded using the inner BCH decoder (using &#x2018;hard&#x2019; decoding). Thus, for each packet, the decoder produces V corrected bits.</p>
<p id="h-0009" num="0000">d. The corrected packets are concatenated (only the V bits, without the inner code redundancy) and decoded using the outer code which produces k1 bits of data.</p>
<p id="h-0010" num="0000">e. Determine whether or not the decoding is successful. This may be detected if a CRC check on the data fails or may be detected by the outer decoder <b>2210</b>.</p>
<p id="p-0264" num="0286">f. If step (e) finds that the decoding is successful, the decoding process ends here. Otherwise, continue with steps (g)-(i). Alternatively, check intermediate results such as whether the inner code corrected a large number of errors (above a certain threshold). If this is the case, the method may not decode the outer code at all before performing soft decoding. Alternatively or in addition, the degree of the error locator polynomial (ELP) may be checked during decoding of the outer code. If the degree is too high, soft decoding may be performed without first effecting a Chien search.
<br/>
g. The data is reread with higher accuracy, i.e. soft information is read.
<br/>
h. The soft information is fragmented into packets. Each packet is decoded using the inner BCH decoder <b>2230</b> using &#x2018;soft&#x2019; decoding. Thus, for each packet, the decoder produces V corrected bits.
<br/>
i. Steps (e) and (f) are repeated with the newly decoded packets.
</p>
<p id="p-0265" num="0287">Example:
<ul id="ul0005" list-style="none">
    <li id="ul0005-0001" num="0000">
    <ul id="ul0006" list-style="none">
        <li id="ul0006-0001" num="0288">1) The codeword length: n=17406.</li>
        <li id="ul0006-0002" num="0289">2) Data length: k1=16416 (2048+4 bytes where the extra 4 bytes may be used for a CRC check).</li>
        <li id="ul0006-0003" num="0290">3) The outer code is a (17091, 16416, 91) BCH designed over the finite field GF(2<sup>15</sup>). The code is capable of correcting 45 errors and appends 45*15 bits of redundancy to the 16416 bits of data.</li>
        <li id="ul0006-0004" num="0291">4) The Inner code is an (511,501,3) BCH code that appends 9 bits of redundancy to every 1013 bits of data. The code is capable of correcting 1 error. Therefore, the output of the Outer code is partitioned into packets of 501 bits (the last packet is 228 bits which is zero padded with 0 bits to obtain 501 bits). Then, each packet is appended with 9 bits and the coded packets are all concatenated together to form the codeword of length 17406 bits.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0266" num="0292">Soft decoding of the inner code is now described. As the inner code has relatively a short redundancy (in the example above it is only 9 bits) and the &#x2018;hard&#x2019; correction capability is limited (one error), there exist efficient methods for performing soft decoding for this BCH code. For example, Maximum Likelihood decoding may be performed by using a Viterbi-like algorithm e.g. as described in the above-referenced Wolf publication. Sub-optimal decoding can achieve almost optimal performance in this case. Examples of sub-optimal decoding appear in the above-referenced Chase publication.</p>
<p id="p-0267" num="0293">An example of sub-optimal &#x2018;soft&#x2019; decoding of the inner code is now described. The decoding procedure relies on the fact that the code has a short redundancy and therefore, can only correct a limited number of errors using &#x2018;soft&#x2019; decoding. Thus, it is possible to use suitable methods of enumeration, to find a sequence of errors which is most likely. One such method is illustrated in <figref idref="DRAWINGS">FIGS. 25A-25B</figref>.</p>
<p id="p-0268" num="0294">In step <b>2300</b> in <figref idref="DRAWINGS">FIG. 25A</figref>, a table, e.g. as shown in <figref idref="DRAWINGS">FIG. 27</figref>, is created which associates any bit of the codeword of the inner code with a syndrome letter. Let &#x3b1; be primitive value in GF(2<sup>m</sup>). The associated syndrome is defined by &#x3b1;<sup>Y-i-1 </sup>and the codeword length, Y, is smaller than or equal to 2<sup>m</sup>&#x2212;1. Next, compute the syndrome, e.g. conventionally as defined by Synd=&#x3a3;<sub>i=0</sub><sup>Y-1</sup>h(i)a<sup>Y-1-i</sup>. All computations are made over the field GF(2<sup>m</sup>) and h(i) signifies the i&#x2032;th bit in h. The following steps in <figref idref="DRAWINGS">FIGS. 25A-25B</figref> show how the enumeration is localized to the most likely candidates (the L indices with the smallest scores).</p>
<p id="p-0269" num="0295"><figref idref="DRAWINGS">FIG. 27</figref> is an example of a table associating each bit index of an inner codeword with a syndrome as is seen in the first and last columns of the table. This table refers to a BCH code over the filed GF(2<sup>5</sup>) where the primitive polynomial is X<sup>5</sup>+X<sup>2</sup>+1 and the primitive element is &#x3b1;=b00010.</p>
<p id="p-0270" num="0296">Referring again to <figref idref="DRAWINGS">FIG. 25A</figref>, in step <b>2401</b>, a parameter max_C is obtained which determines the number of overall iterations. This parameter is determined during simulations to minimize this parameter and still obtain a result similar to that of a Maximum Likelihood decoder. Another parameter is L. This parameter determines the size of the group of indexes which is to be searched for errors. This parameter is optimized in a similar manner.</p>
<p id="p-0271" num="0297">Hard data is obtained from the Flash device (step <b>2402</b>) and stored in a vector h e.g. as shown in <figref idref="DRAWINGS">FIG. 27</figref>, in an example which pertains to a case in which the inner codeword is 2^5&#x2212;1 long. The syndrome is computed as described above in step <b>2404</b>. If the syndrome is 0, it is concluded that there was no error and the method terminates exit (step <b>2405</b>). If the syndrome is not 0, the scores of each detected bit are obtained (step <b>2406</b>). A numerical example of the result of this step is illustrated in the table of <figref idref="DRAWINGS">FIG. 27</figref> which includes the scores for an exemplar where the inner codeword is 2^5&#x2212;1 bits long.</p>
<p id="p-0272" num="0298">For this exemplar, the syndrome computation will yield Synd=b00011. In step <b>2408</b> the L bit indexes with the smallest score are obtained. An example is shown for the exemplar in <figref idref="DRAWINGS">FIG. 27</figref> and for the case where the L=5, H (the set of L indexes with the lowest scores) would be H={4, 10, 15, 20, 24} and their corresponding scores are {20, 2, 1, 30, 40}. Steps <b>2412</b>-<b>2428</b> of <figref idref="DRAWINGS">FIG. 26B</figref> are then repeated max_C times where max_C is the maximum number of errors that may be detected and C+1 is the current number of errors being searched for. In the example of <figref idref="DRAWINGS">FIG. 27</figref> it is assumed that max_C=2.</p>
<p id="p-0273" num="0299">In step <b>2412</b> of <figref idref="DRAWINGS">FIG. 26B</figref>, a set of C indexes are generated from the set H and their respective syndrome is computed. For the case where C=0, this step does not take effect. For the case of C=1 and for the case of L=5 and the exemplar of <figref idref="DRAWINGS">FIG. 27</figref> there are 5 iterations with indexes chosen as 4, 10, 15, 20 and 24 (based on H). In step <b>2414</b>, the effect on the syndrome is calculated for each of these cases giving by way of example the following respective results: b01011, b11000, b11011, b00111 and b10100. In step <b>2416</b>, an additional bit index is calculated that yields an overall syndrome of 0. This computation can be made via an inverse syndrome table such as the one shown in <figref idref="DRAWINGS">FIG. 28</figref> where the index to the table is calculated as Synd Xor Synd_part. In the example shown herein the first iteration yields the following result Synd Xor Syndpart=b00011, yielding the error index 13. The second iteration (C=1) yields the following 5 results Synd Xor Synd_part=b01000, b11011, b11000, b00100 and b10111 which in turn yield the following indexes for the pair error locations ({4,28}, {10,15}, {15,10}, {20,29} and {24,5}).</p>
<p id="p-0274" num="0300">In step <b>2417</b>, the score of each possible error sequence is calculated. For example, for the first iteration (C=0) the score is 50. For the second iteration, the scores of each of the found pairs are given by 70, 3, 3, 80 and 90 respectively. The value of the smallest score and the appropriate error sequence is stored in steps <b>2420</b> and <b>2422</b>. By the end of the C iterations, it is possible to give a good estimate of the most probable error sequence and following the termination of this procedure the bits corresponding to this error sequence are flipped. For example, in the exemplar of <figref idref="DRAWINGS">FIG. 27</figref>, the most probable error sequence is the pair {10,15} as indeed is the case.</p>
<p id="p-0275" num="0301">The procedure described in <figref idref="DRAWINGS">FIGS. 25A-25B</figref> can be modified by allowing an early termination of the loop defined by steps <b>2412</b>-<b>2424</b>, as shown in <figref idref="DRAWINGS">FIG. 26B</figref>. This is done by sorting the indexes of the L lowest scores according to the scores starting from the lowest up to the largest. The inner enumeration performed by steps <b>2412</b>-<b>2424</b> is effected on sequences of C error indexes such that the sum of scores of the c elements (i.e. score_tmp_A=s(H(i<sub>1</sub>))+s(H(i<sub>2</sub>))+s(H(i<sub>c</sub>))) rises as the enumeration progresses. Then, if it is detected that the best score so far is smaller than the sum of scores of c elements (step <b>2418</b>), enumeration is terminated and c is then increased, or the search terminated.</p>
<p id="p-0276" num="0302">The term &#x201c;soft decoding&#x201d; as used herein is intended to include a process which receives input from a precursor &#x201c;sampling&#x201d; process in which physical values residing in flash memory cells are sampled, and the reliability with which each cell is sampled is estimated, generating a reliability score for each cell. In soft decoding, a decision is made, based on the sampled data and reliability scores generated in the sampling process, as to which bits contain errors. Each such erroneous bit is flipped, thereby to generate correctly reconstructed data. It is appreciated that either the soft decoding method of <figref idref="DRAWINGS">FIGS. 25A-25B</figref>, or the soft decoding method of <figref idref="DRAWINGS">FIGS. 26A-26B</figref>, may serve as a method of operation for the inner code block <b>2230</b> of <figref idref="DRAWINGS">FIG. 24A</figref>.</p>
<p id="p-0277" num="0303">The term &#x201c;concatenation&#x201d; of codes is used herein to refer to outer and inner codes, the latter of which is used to encode the output of the other. The outer code encodes data for storage in flash memory, generating first redundancy bits, and the inner code encodes the data and its first redundancy bits, generating second redundancy bits. When decoding, the inner code's decoder is used first, followed by the outer code's decoder.</p>
<p id="p-0278" num="0304">One implementation of the soft decoding functionality in block <b>2230</b> of <figref idref="DRAWINGS">FIG. 24A</figref> is now described in detail, with reference, again, to <figref idref="DRAWINGS">FIGS. 25A-25B</figref>. It is appreciated that decoding block <b>2240</b> of <figref idref="DRAWINGS">FIG. 24A</figref> may comprise a conventional BCH decoder. Typically, a reasonable cap, max_C, is determined on the unknown number of errors C in each codeword generated by the sampling process preceding the soft decoding process, e.g. by setting max_C to the number of errors per codeword that would tend to occur if a conventional maximum likelihood method were to be used for decoding. Max_C is typically an integer such as for example 5.</p>
<p id="p-0279" num="0305">A syndrome is computed per codeword; it is appreciated that each physical page in flash memory typically includes many codewords such as 32 or 128 codewords. If the syndrome is 0, the method of <figref idref="DRAWINGS">FIG. 3</figref> is finished because this indicates that there are no errors in the codeword. If the syndrome is not zero, the number of errors in the codeword can be anywhere from 1 to the reasonable maximum number of errors namely max_C. Typically, a table T of Y elements is obtained, associating each bit of a codeword generated by the inner code from clear content, with a syndrome.</p>
<p id="p-0280" num="0306">If the number of errors in the codeword is 1, then at least some of the bits in the codeword may be processed to find those bits which when individually flipped, cause the codeword to yield a syndrome of 0. Either all of the bits may be processed to find such bits, or alternatively, in an effort to achieve processing speed with a certain decrement in accuracy or reliability, only those bits in the codeword having low reliability scores, which are most likely to contain errors, may be processed to find such bits.</p>
<p id="p-0281" num="0307">Each such bit is given a score which equals that bit's reliability score. The possibility that there is one error, is assigned an error-number-score corresponding to that bit which, if flipped, resets with word's syndrome.</p>
<p id="p-0282" num="0308">If the number of errors in the codeword is 2, then at least some of the bits in the codeword may be processed to find those pairs of bits which, when both are flipped, cause the codeword to yield a syndrome of 0. Either all of the bits may be processed to find such bit pairs, or alternatively, in an effort to achieve processing speed with a certain decrement in accuracy or reliability, only those bits in the codeword having low reliability scores, which are most likely to contain errors, may be processed to find such bit pairs. The low reliability scoring bits may be the b bits in the codeword whose reliability scores are lowest i.e. the lowest b bits in the codeword if the bits are ranking in ascending order of their reliability scores. The parameter b is selected to be relatively large if it is desired to maintain accuracy at the expense of speed and relatively low if it is desired to sacrifice accuracy for speed. For example, if the codeword includes 255 bits, b may be 30 or 100, yielding a speed advantage in the former instance and an accuracy advantage in the latter instance.</p>
<p id="p-0283" num="0309">Each such bit pair is given a score which equals the sum of the reliability scores of the two bits in the bit pair. The possibility that there are two errors in the codeword, is assigned an error-number-score which is the smallest bit pair score from among all bit pairs found. Therefore a bit pair whose score is smallest is deemed to be the erroneous bit pair if indeed the number of errors in the codeword is 2.</p>
<p id="p-0284" num="0310">The above process may be repeated for the possibilities that the number of errors in the codeword is 3, 4, and so forth respectively, all the way to C_max which in the example followed herein is 5. For this last case, then, the procedure may be: If the number of errors in the codeword is 5, then at least some of the bits in the codeword may be processed to find those sets of 5 bits which, when all are flipped, cause the codeword to yield a syndrome of 0. Either all of the bits may be processed to find such bit sets, or alternatively, in an effort to achieve processing speed with a certain decrement in accuracy or reliability, only those bits in the codeword having low reliability scores, which are most likely to contain errors, may be processed to find such bit sets (bit quintuples).</p>
<p id="p-0285" num="0311">Each such bit set is given a score which equals the sum of the 5 reliability scores of the 5 bits in the bit set respectively. The possibility that there are five errors in the codeword, is assigned an error-number-score which is the smallest bit set score from among all bit quintuples found. Therefore a bit set whose score is smallest is deemed to be the erroneous bit set if indeed the number of errors in the codeword is 5.</p>
<p id="p-0286" num="0312">The issue of whether the number of errors in the codeword is 1 or 2 or . . . or C_max, is now resolved. Typically, the number of errors is assumed to be the possibility whose error-number-score is lowest, over all possibilities. For example, if C_max is 5 and the error-number-scores of the following numbers of errors: 1, 2, 3, 4 and 5, for a particular codeword, are 9, 8, 10, 20 and 30 respectively, then the number of errors in the codeword may be assumed to be 8 because the error-number-score for the &#x201c;2 errors&#x201d; possibility is 8, lower than the error-number-scores assuming that the number of errors is 1, 3, 4 or 5, namely 9, 10, 20 and 30 respectively. The locations of the errors is assumed to be the bits in the bit-set which yielded the lowest error-number-score. These bits are flipped to correct the error. In the above example, the location of the 2 errors which are assumed to have occurred in the codeword, are taken to be the 2 bits in the bit-pair which yielded a bit set score of 8; these 2 bits are flipped.</p>
<p id="p-0287" num="0313">More generally, it is appreciated that the soft decoding process may comprise the following steps:</p>
<p id="p-0288" num="0314">a. determining a reasonable cap, integer max_C, on the unknown number of errors C.</p>
<p id="p-0289" num="0315">b. computing a syndrome for the codeword;</p>
<p id="p-0290" num="0316">c. unless the syndrome equals zero in which case the process is terminated, perform the following steps i-iii for c=1, . . . max_C:
<ul id="ul0007" list-style="none">
    <li id="ul0007-0001" num="0000">
    <ul id="ul0008" list-style="none">
        <li id="ul0008-0001" num="0317">i. finding at least one set of c bits in the codeword which, when flipped, zero the syndrome;</li>
        <li id="ul0008-0002" num="0318">ii. giving a set score to each set of c bits by summing the reliability scores of all bits in the set; and</li>
        <li id="ul0008-0003" num="0319">iii. assigning an error-number-score by minimizing over the set scores of all sets of c bits found in the finding step;</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0291" num="0320">d. determining the unknown number of errors C, to be the c yielding the smallest error-number-score;</p>
<p id="p-0292" num="0321">e. for the set of c bits having, among all sets of c bits found for c=C, the smallest set score, flip all c bits.</p>
<p id="p-0293" num="0322"><figref idref="DRAWINGS">FIG. 29</figref> is a simplified flowchart illustration of a method for reading Flash memory apparatus having c cells using an increasing sequence of thresholds defining a sequence of bins, operative in accordance with certain embodiments of the present invention. The method of <figref idref="DRAWINGS">FIG. 29</figref> typically comprises some or all of the following steps, suitably ordered e.g. as shown:</p>
<p id="p-0294" num="0323">Step <b>2600</b>: provide at least one buffer operative to store information indicating whether or not each individual cell from among the c cells is &#x201c;done&#x201d; and indicate an individual one of the B bins which is associated with each individual cell from among the c cells.</p>
<p id="p-0295" num="0324">Step <b>2610</b>: for each individual threshold, in order, in the increasing sequence of B&#x2212;1 thresholds:</p>
<p id="p-0296" num="0325">Step <b>2620</b>: compare all cells in a c-cell flash memory physical page to the individual threshold in the sequence thereby to obtain an &#x201c;above&#x201d; or &#x201c;below&#x201d; value for each cell</p>
<p id="p-0297" num="0326">Step <b>2630</b>: for each &#x201c;first below&#x201d; cell, defined as a cell which yields a &#x201c;below&#x201d; value and is &#x201c;not done&#x201d;, modify the at least one buffer to indicate that the &#x201c;first below&#x201d; cell is &#x201c;done&#x201d; and to indicate that the &#x201c;first below&#x201d; cell is associated with a bin in the sequence of bins which is just below the individual threshold.</p>
<p id="p-0298" num="0327"><figref idref="DRAWINGS">FIG. 30</figref> is a simplified flowchart illustration of a method for error-correction encoding and subsequently decoding a plurality of flash memory cells, operative in accordance with certain embodiments of the present invention. The method of <figref idref="DRAWINGS">FIG. 30</figref> typically comprises some or all of the following steps, suitably ordered e.g. as shown:</p>
<p id="p-0299" num="0328">Step <b>2700</b>: encode content to be stored in the plurality of flash memory cells using an error correction code comprising a concatenation of an inner BCH code and an outer BCH code, thereby to define encoded content to be stored in the cells;</p>
<p id="p-0300" num="0329">Step <b>2710</b>: sample the encoded content thereby to generate codewords of bits.</p>
<p id="p-0301" num="0330">Step <b>2720</b>: estimate reliability of the sampling including generating a reliability score for each of the bits.</p>
<p id="p-0302" num="0331">Step <b>2730</b>: soft decode each of the codewords using the inner BCH code, thereby to generate soft decoded content including at least one preliminarily corrected codeword</p>
<p id="p-0303" num="0332">Step <b>2740</b>: hard decode said soft decoded content, using said outer BCH code, thereby to generate reconstructed contents of cells.</p>
<p id="p-0304" num="0333"><figref idref="DRAWINGS">FIG. 31</figref> is a simplified flowchart illustration of a method for performing the soft-decoding step <b>2730</b> of <figref idref="DRAWINGS">FIG. 30</figref>, which is operative in accordance with certain embodiments of the present invention. The method of <figref idref="DRAWINGS">FIG. 31</figref> typically comprises some or all of the following steps, suitably ordered e.g. as shown:</p>
<p id="p-0305" num="0334">Step <b>2800</b>: determine a reasonable cap, integer max_C, on the unknown number of errors C;</p>
<p id="p-0306" num="0335">Step <b>2810</b>: compute a syndrome for the codeword;</p>
<p id="p-0307" num="0336">Step <b>2820</b>: Decision: syndrome equals zero?</p>
<p id="p-0308" num="0337">Step <b>2830</b>: for c=1, . . . max_C:
<ul id="ul0009" list-style="none">
    <li id="ul0009-0001" num="0000">
    <ul id="ul0010" list-style="none">
        <li id="ul0010-0001" num="0338">Step <b>2832</b>: find at least one set of c bits in the codeword which, when flipped, zero the syndrome</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0309" num="0339">Step <b>2834</b>: give a set score to each set of c bits by summing the reliability scores of all bits in the set</p>
<p id="p-0310" num="0340">Step <b>2836</b>: assign an error-number-score by minimizing over the set scores of all sets of c bits found in step <b>2840</b></p>
<p id="p-0311" num="0341">Step <b>2840</b>: determine the unknown number of errors C, to be the c with the smallest error-number-score</p>
<p id="p-0312" num="0342">Step <b>2850</b>: for the set of c bits having, among all sets of c bits found for c=C, the smallest set score, flipping all c bits.</p>
<p id="p-0313" num="0343">Generally, according to certain embodiments of the present invention, a decision to perform soft decoding need not only depend on actual or predicted unsuccessful termination of hard decoding. Alternatively or in addition, a decision to perform soft decoding may occur as a function of other partial hard decoding results such as but not limited to the following:</p>
<p id="p-0314" num="0344">A) Soft decoding may be performed if it is found that there are many errors in the inner codes which build up a page. If the number of errors exceeds a certain predetermined threshold, decoding of the outer code may be skipped and the method may proceed directly to soft decoding.</p>
<p id="p-0315" num="0345">B) Outer code decoding typically comprises 3 stages: Syndrome computation, error locator polynomial (ELP) computation and Chien search. However, if the second stage produces an error locator polynomial whose degree exceeds a certain predetermined threshold value, Chien search may be skipped and instead, the method may proceed directly to soft decoding.</p>
<p id="p-0316" num="0346">It is appreciated that step <b>100</b> in <figref idref="DRAWINGS">FIGS. 8 and 9</figref> comprises a hard read process and may employ the method of <figref idref="DRAWINGS">FIG. 21</figref>. Step <b>103</b> both in <figref idref="DRAWINGS">FIGS. 8 and 9</figref> comprises a soft read process and may employ the method of <figref idref="DRAWINGS">FIG. 22</figref>. Step <b>204</b> in <figref idref="DRAWINGS">FIG. 10</figref> comprises a soft read process and may employ the method of <figref idref="DRAWINGS">FIG. 22</figref>. Step <b>202</b> in <figref idref="DRAWINGS">FIG. 10</figref> comprises a hard read process and may employ the method of <figref idref="DRAWINGS">FIG. 21</figref>. Step <b>610</b> in <figref idref="DRAWINGS">FIG. 14</figref> comprises a hard read process followed by a portion of the total hard decoding task. Step <b>640</b> in <figref idref="DRAWINGS">FIG. 14</figref> comprises a soft read process. Step <b>710</b> in <figref idref="DRAWINGS">FIG. 15</figref> comprises a hard read process followed by a portion of the total hard decoding task. Step <b>740</b> in <figref idref="DRAWINGS">FIG. 15</figref> comprises a soft read process. Step <b>810</b> in <figref idref="DRAWINGS">FIG. 16</figref> comprises a hard read process and may employ the method of <figref idref="DRAWINGS">FIG. 21</figref>. Step <b>840</b> in <figref idref="DRAWINGS">FIG. 16</figref> comprises Hard decoding or Soft decoding using available metrics, according to available read accuracy. Step <b>850</b> in <figref idref="DRAWINGS">FIG. 16</figref> comprises a soft read process. Step <b>860</b> in <figref idref="DRAWINGS">FIG. 16</figref> comprises soft decoding. It is also appreciated that the terms &#x201c;Read1&#x201d;, &#x201c;Read 2A&#x201d; and &#x201c;Read 3A&#x201d; are used herein generally to indicate, respectively, a hard read operation, a first soft read operation, and a second soft read operation whose thresholds are finer than the first soft read operation. Finally, it is appreciated that the method of <figref idref="DRAWINGS">FIG. 21</figref> can be used for any suitable set of reading thresholds, hence for any or all of Read1, Read 2A and Read 3A. The same is true for the method of <figref idref="DRAWINGS">FIG. 22</figref>, and for the method of <figref idref="DRAWINGS">FIG. 23</figref>.</p>
<p id="p-0317" num="0347">It is appreciated that software components of the present invention including programs and data may, if desired, be implemented in ROM (read only memory) form including CD-ROMs, EPROMs and EEPROMs, or may be stored in any other suitable computer-readable medium such as but not limited to disks of various kinds, cards of various kinds and RAMs. Components described herein as software may, alternatively, be implemented wholly or partly in hardware, if desired, using conventional techniques.</p>
<p id="p-0318" num="0348">Included in the scope of the present invention, inter alia, are electromagnetic signals carrying computer-readable instructions for performing any or all of the steps of any of the methods shown and described herein, in any suitable order; machine-readable instructions for performing any or all of the steps of any of the methods shown and described herein, in any suitable order; program storage devices readable by machine, tangibly embodying a program of instructions executable by the machine to perform any or all of the steps of any of the methods shown and described herein, in any suitable order; a computer program product comprising a computer useable medium having computer readable program code having embodied therein, and/or including computer readable program code for performing, any or all of the steps of any of the methods shown and described herein, in any suitable order; any technical effects brought about by any or all of the steps of any of the methods shown and described herein, when performed in any suitable order; any suitable apparatus or device or combination of such, programmed to perform, alone or in combination, any or all of the steps of any of the methods shown and described herein, in any suitable order; information storage devices or physical records, such as disks or hard drives, causing a computer or other device to be configured so as to carry out any or all of the steps of any of the methods shown and described herein, in any suitable order; a program pre-stored e.g. in memory or on an information network such as the Internet, before or after being downloaded, which embodies any or all of the steps of any of the methods shown and described herein, in any suitable order, and the method of uploading or downloading such, and a system including server's and/or client's for using such; and hardware which performs any or all of the steps of any of the methods shown and described herein, in any suitable order, either alone or in conjunction with software.</p>
<p id="p-0319" num="0349">Certain operations are described herein as occurring in the microcontroller internal to a flash memory device. Such description is intended to include operations which may be performed by hardware which may be associated with the microcontroller such as peripheral hardware on a chip on which the microcontroller may reside. It is also appreciated that some or all of these operations, in any embodiment, may alternatively be performed by the external, host-flash memory device interface controller including operations which may be performed by hardware which may be associated with the interface controller such as peripheral hardware on a chip on which the interface controller may reside. Finally it is appreciated that the internal and external controllers may each physically reside on a single hardware device, or alternatively on several operatively associated hardware devices.</p>
<p id="p-0320" num="0350">Any data described as being stored at a specific location in memory may alternatively be stored elsewhere, in conjunction with an indication of the location in memory with which the data is associated. For example, instead of storing page- or erase-sector-specific information within a specific page or erase sector, the same may be stored within the flash memory device's internal microcontroller or within a microcontroller interfacing between the flash memory device and the host, and an indication may be stored of the specific page or erase sector associated with the cells.</p>
<p id="p-0321" num="0351">It is appreciated that the teachings of the present invention can, for example, be implemented by suitably modifying, or interfacing externally with, a flash controlling apparatus. The flash controlling apparatus controls a flash memory array and may comprise either a controller external to the flash array or a microcontroller on-board the flash array or otherwise incorporated therewithin. Examples of flash memory arrays include Samsung's K9XXG08UXM series, Hynix's HY27UK08BGFM Series, Micron's MT29F64G08TAAWP or other arrays such as but not limited to NOR or phase change memory. Examples of controllers which are external to the flash array they control include STMicroelectrocincs's ST7265x microcontroller family, STMicroelectrocincs's ST72681 microcontroller, and SMSC's USB97C242, Trasp an Technologies' TS-4811, Chip sbank CBM2090/CBM1190. Examples of commercial IP software for Flash file systems are: Denali's Spectra&#x2122; NAND Flash File System, Aarsan's NAND Flash Controller IP Core and Arasan's NAND Flash File System. It is appreciated that the flash controller apparatus need not be NAND-type and can alternatively, for example, be NOR-type or phase change memory-type.</p>
<p id="p-0322" num="0352">A Flash controlling apparatus, whether external or internal to the controlled flash array, typically includes the following components: a Memory Management/File system, a NAND interface (or other flash memory array interface), a Host Interface (USB, SD or other), error correction circuitry (ECC) typically comprising an Encoder and matching decoder, and a control system managing all of the above.</p>
<p id="p-0323" num="0353">The present invention may for example interface with or modify, as per any of the embodiments described herein, one, some or all of the above components and particularly the ECC and NAND interface components. The NAND interface component, or a functional unit interacting therewith, is, according to certain embodiments of the present invention, operative to read both soft and hard information.</p>
<p id="p-0324" num="0354">Features of the present invention which are described in the context of separate embodiments may also be provided in combination in a single embodiment. Conversely, features of the invention, including method steps, which are described for brevity in the context of a single embodiment or in a certain order may be provided separately or in any suitable subcombination or in a different order. &#x201c;e.g.&#x201d; is used herein in the sense of a specific example which is not intended to be limiting.</p>
<p id="p-0325" num="0355">The scope of the present invention includes but is not limited to the embodiments specifically claimed below:</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-math idrefs="MATH-US-00001" nb-file="US08627188-20140107-M00001.NB">
<img id="EMI-M00001" he="6.69mm" wi="76.20mm" file="US08627188-20140107-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00002" nb-file="US08627188-20140107-M00002.NB">
<img id="EMI-M00002" he="8.81mm" wi="76.20mm" file="US08627188-20140107-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00003" nb-file="US08627188-20140107-M00003.NB">
<img id="EMI-M00003" he="6.01mm" wi="76.20mm" file="US08627188-20140107-M00003.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00004 MATH-US-00004-2" nb-file="US08627188-20140107-M00004.NB">
<img id="EMI-M00004" he="37.76mm" wi="76.20mm" file="US08627188-20140107-M00004.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00005" nb-file="US08627188-20140107-M00005.NB">
<img id="EMI-M00005" he="6.35mm" wi="76.20mm" file="US08627188-20140107-M00005.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-claim-statement>We claim:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for decoding a plurality of flash memory cells which are error-correction-coded, the method comprising: providing a hard-decoding success indication indicating whether or not hard-decoding is at least likely to be successful; and soft-decoding the plurality of flash memory cells at a first resolution only if the hard-decoding success indication indicates that the hard-decoding is not at least likely to be successful; wherein said hard-decoding success indication comprises an a priori indication of whether or not hard-decoding yet to be performed, is at least likely to be successful; wherein said a priori indication is based on at least one indication of the quality of the flash memory cells; wherein said indication of the quality of the flash memory cells is based at least partly on a comparison of at least a statistic representing the current state of a sample of said plurality of flash memory cells with a reliably stored indication of a previous state of said sample.</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said statistic comprises an indication of the distribution width of the current physical values of said sample and said indication of a previous state comprises an indication of the distribution width of previous physical values of said sample.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said statistic comprises a mean of the current physical values of said sample and said indication of a previous state comprises a mean of previous physical values of said sample.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. A method for reading Flash memory apparatus having c cells using an increasing sequence of B&#x2212;1 thresholds defining a sequence of B bins, the method comprising: providing at least one buffer operative to store information indicating whether or not each individual cell from among the c cells is &#x201c;done&#x201d; and indicating an individual one of said B bins which is associated with each individual cell from among said c cells; and for each individual threshold, in order, in the increasing sequence of B&#x2212;1 thresholds: comparing all cells in a c-cell flash memory physical page to said individual threshold in said sequence thereby to obtain an &#x201c;above&#x201d; or &#x201c;below&#x201d; value for each said cell; and for each &#x201c;first below&#x201d; cell, defined as a cell which yields a &#x201c;below&#x201d; value and is &#x201c;not done&#x201d;, modifying said at least one buffer to indicate that said &#x201c;first below&#x201d; cell is &#x201c;done&#x201d; and to indicate that said &#x201c;first below&#x201d; cell is associated with a bin in said sequence of bins which is just below said individual threshold.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method according to <claim-ref idref="CLM-00004">claim 4</claim-ref> wherein said at least one buffer comprises a label buffer array storing c labels, each label indicating an individual state from among B+1 states which is associated with an individual cell from among said c cells, the B+1 states including B states indicating that said individual cell is &#x201c;done&#x201d; and respectively indicating an individual one of said B bins which is associated with said individual cell and a (B+1)th state indicating that said individual cell is &#x201c;not done&#x201d;, said label buffer array being initialized to the (B+1)th state.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method according to <claim-ref idref="CLM-00005">claim 5</claim-ref> wherein said modifying comprises: for each &#x201c;first below&#x201d; cell which yields a &#x201c;below&#x201d; value and has a &#x201c;not done&#x201d; value in the &#x201c;done&#x201d; buffer, modifying said &#x201c;done&#x201d; buffer to indicate that said &#x201c;first below&#x201d; cell is &#x201c;done&#x201d; and modifying said label buffer array to indicate that said &#x201c;first below&#x201d; cell is associated with a bin in said sequence of bins which is just below said individual threshold.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method according to <claim-ref idref="CLM-00006">claim 6</claim-ref> and also comprising modifying said label buffer array to indicate that all remaining cells, if any, therewithin, are associated with the last bin in said sequence of bins, said remaining cells being defined as cells which do not yield a &#x201c;below&#x201d; value when the last threshold in said increasing sequence of B&#x2212;1 thresholds is used in said comparing.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method according to <claim-ref idref="CLM-00005">claim 5</claim-ref> wherein said modifying comprises: for each &#x201c;first below&#x201d; cell, defined as a cell which yields a &#x201c;below&#x201d; value and is &#x201c;not done&#x201d;, modifying said at least one buffer to indicate an ID of the bin in said sequence of bins which is just below said individual threshold.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method according to <claim-ref idref="CLM-00004">claim 4</claim-ref> wherein said at least one buffer comprises: a &#x201c;done&#x201d; buffer storing c &#x201c;done&#x201d; bits indicating whether an individual cell c is &#x201c;done&#x201d; or &#x201c;not done&#x201d;, said buffer initially being set entirely to &#x201c;not done&#x201d;.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method according to <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein said at least one buffer also comprises a label buffer array storing c N-bit labels, each label indicating an individual one of said B bins which is associated with an individual cell from among said c cells, said label buffer array being initialized to values which differ from all labels of the first B&#x2212;1 bins in said sequence of bins.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method according to <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein said modifying comprises: for each &#x201c;first below&#x201d; cell which yields a &#x201c;below&#x201d; value and has a &#x201c;not done&#x201d; value in the &#x201c;done&#x201d; buffer, modifying said &#x201c;done&#x201d; buffer to indicate that said &#x201c;first below&#x201d; cell is &#x201c;done&#x201d;; and modifying said label buffer array to indicate that said &#x201c;first below&#x201d; cell is associated with a bin in said sequence of bins which is just below said individual threshold.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method according to <claim-ref idref="CLM-00004">claim 4</claim-ref> wherein each of said cells stores L bits comprising one bit each from L logical pages (L&#x3e;1).</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A system for reading Flash memory apparatus having c cells using an increasing sequence of B&#x2212;1 thresholds defining a sequence of B bins, the system comprising: at least one buffer operative to store information indicating whether or not each individual cell from among the c cells is &#x201c;done&#x201d; and indicating an individual one of said B bins which is associated with each individual cell from among said c cells; and &#x201c;first below&#x201d; cell based buffer updating apparatus operative, for each individual threshold, in order, in the increasing sequence of B&#x2212;1 thresholds, to compare all cells in a c-cell flash memory physical page to said individual threshold in said sequence thereby to obtain an &#x201c;above&#x201d; or &#x201c;below&#x201d; value for each said cell; and for each &#x201c;first below&#x201d; cell, defined as a cell which yields a &#x201c;below&#x201d; value and is &#x201c;not done&#x201d;, to modify said at least one buffer to indicate that said &#x201c;first below&#x201d; cell is &#x201c;done&#x201d; and to indicate that said &#x201c;first below&#x201d; cell is associated with a bin in said sequence of bins which is just below said individual threshold.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The system according to <claim-ref idref="CLM-00013">claim 13</claim-ref> wherein said at least one buffer comprises a label buffer array storing c labels, each label indicating an individual state from among B+1 states which is associated with an individual cell from among said c cells, the B+1 states including B states indicating that said individual cell is &#x201c;done&#x201d; and respectively indicating an individual one of said B bins which is associated with said individual cell and a (B+1)th state indicating that said individual cell is &#x201c;not done&#x201d;, said label buffer array being initialized to the (B+1)th state.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The system according to <claim-ref idref="CLM-00013">claim 13</claim-ref> wherein said at least one buffer comprises: a &#x201c;done&#x201d; buffer storing c &#x201c;done&#x201d; bits indicating whether an individual cell c is &#x201c;done&#x201d; or &#x201c;not done&#x201d;, said buffer initially being set entirely to &#x201c;not done&#x201d;; and a label buffer array storing c N-bit labels, each label indicating an individual one of said B bins which is associated with an individual cell from among said c cells, said label buffer array being initialized to values which differ from all labels of the first B&#x2212;1 bins in said sequence of bins.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A method for error-correction encoding and subsequently decoding a plurality of flash memory cells, the method comprising: encoding content to be stored in the plurality of flash memory cells using an error correction code comprising a concatenation of an inner BCH code and an outer BCH code, thereby to define encoded content to be stored in the cells; sampling said encoded content thereby to generate codewords of bits; estimating reliability of said sampling including generating a reliability score for each of said bits; soft decoding each of said codewords using said inner BCH code, thereby to generate soft decoded content including at least one preliminarily corrected codeword; and hard decoding said soft decoded content, using said outer BCH code, thereby to generate reconstructed contents of said cells.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The method according to <claim-ref idref="CLM-00016">claim 16</claim-ref> wherein said inner BCH code has a Minimum Distance value of 3.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method according to <claim-ref idref="CLM-00016">claim 16</claim-ref> wherein said soft decoding comprises, for each codeword which suffers from an unknown number of errors: determining a reasonable cap, integer max_C, on the unknown number of errors C; computing a syndrome for the codeword; unless the syndrome equals zero, for c=1, . . . max_C: finding at least one set of c bits in the codeword which, when flipped, zero the syndrome; giving a set score to each set of c bits by summing the reliability scores of all bits in said set; and assigning an error-number-score by minimizing over the set scores of all sets of c bits found in said finding step; determining said unknown number of errors C, to be the c with the smallest error-number-score; and for the set of c bits having, among all sets of c bits found for c=C, the smallest set score, flipping all c bits.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method according to <claim-ref idref="CLM-00018">claim 18</claim-ref> wherein said set finding step comprises searching for at least one bit defining at least one set of c bits, only within a subset of the bits in said codeword which have lower reliability scores than the bits in said codeword which do not belong to said subset.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The method according to <claim-ref idref="CLM-00019">claim 19</claim-ref> wherein said searching is performed from the bit whose reliability score is smallest and onward to bits whose reliability scores are larger and larger, and wherein said searching is terminated, when a bit is reached whose reliability score exceeds the error number score of a previous c value.</claim-text>
</claim>
</claims>
</us-patent-grant>
