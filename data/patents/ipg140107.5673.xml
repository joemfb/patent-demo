<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626774-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626774</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13356535</doc-number>
<date>20120123</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>62</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>17</main-group>
<subgroup>30</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>707748</main-classification>
</classification-national>
<invention-title id="d2e53">Location based apps ranking for mobile wireless computing and communicating devices</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>7464153</doc-number>
<kind>B1</kind>
<name>Abbott et al.</name>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709224</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>8396759</doc-number>
<kind>B2</kind>
<name>Mehta et al.</name>
<date>20130300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705 267</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2002/0188589</doc-number>
<kind>A1</kind>
<name>Salmenkaita et al.</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2003/0004937</doc-number>
<kind>A1</kind>
<name>Salmenkaita et al.</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  3</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2004/0043758</doc-number>
<kind>A1</kind>
<name>Sorvari et al.</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>4554141</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2008/0263024</doc-number>
<kind>A1</kind>
<name>Landschaft et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  5</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2009/0150535</doc-number>
<kind>A1</kind>
<name>Abbott et al.</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709223</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2010/0100512</doc-number>
<kind>A1</kind>
<name>Brodin et al.</name>
<date>20100400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2010/0157989</doc-number>
<kind>A1</kind>
<name>Krzyzanowski et al.</name>
<date>20100600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2010/0262619</doc-number>
<kind>A1</kind>
<name>Zargahi et al.</name>
<date>20101000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707770</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2011/0093264</doc-number>
<kind>A1</kind>
<name>Gopalakrishnan</name>
<date>20110400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>704235</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2011/0105150</doc-number>
<kind>A1</kind>
<name>Moon et al.</name>
<date>20110500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2011/0137881</doc-number>
<kind>A1</kind>
<name>Cheng et al.</name>
<date>20110600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707706</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2011/0191330</doc-number>
<kind>A1</kind>
<name>Barve et al.</name>
<date>20110800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2011/0191331</doc-number>
<kind>A1</kind>
<name>Barve et al.</name>
<date>20110800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2011/0191332</doc-number>
<kind>A1</kind>
<name>Barve et al.</name>
<date>20110800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2011/0320307</doc-number>
<kind>A1</kind>
<name>Mehta et al.</name>
<date>20111200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705 267</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2012/0253656</doc-number>
<kind>A1</kind>
<name>Brandt</name>
<date>20121000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>701410</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2012/0290583</doc-number>
<kind>A1</kind>
<name>Mahaniok et al.</name>
<date>20121100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707741</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2012/0309411</doc-number>
<kind>A1</kind>
<name>MacGougan et al.</name>
<date>20121200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>4554561</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2012/0309412</doc-number>
<kind>A1</kind>
<name>MacGougan et al.</name>
<date>20121200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>4554561</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>2012/0326922</doc-number>
<kind>A1</kind>
<name>Yang et al.</name>
<date>20121200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>3423573</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>2013/0005383</doc-number>
<kind>A1</kind>
<name>Isberg et al.</name>
<date>20130100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>455517</main-classification></classification-national>
</us-citation>
</us-references-cited>
<number-of-claims>17</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>707748</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>5</number-of-drawing-sheets>
<number-of-figures>5</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20130191397</doc-number>
<kind>A1</kind>
<date>20130725</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Avadhanam</last-name>
<first-name>Phani Bhushan</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Li</last-name>
<first-name>Xintian</first-name>
<address>
<city>Cupertino</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Avadhanam</last-name>
<first-name>Phani Bhushan</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Li</last-name>
<first-name>Xintian</first-name>
<address>
<city>Cupertino</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Neugeboren O'Dowd PC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Qualcomm Innovation Center, Inc.</orgname>
<role>02</role>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Corrielus</last-name>
<first-name>Jean M</first-name>
<department>2162</department>
</primary-examiner>
<assistant-examiner>
<last-name>Aspinwall</last-name>
<first-name>Evan</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Systems, methods, and apparatuses are disclosed for presenting applications to a user, via a mobile wireless communication device (user equipment), that are selected and ranked based on context information describing a location and type of motion of the user equipment, and/or a time that the ranking request was made, compared to context information describing the applications.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="211.67mm" wi="154.18mm" file="US08626774-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="259.50mm" wi="198.04mm" file="US08626774-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="246.04mm" wi="160.87mm" file="US08626774-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="256.37mm" wi="181.36mm" file="US08626774-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="259.50mm" wi="174.33mm" file="US08626774-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="258.91mm" wi="195.41mm" file="US08626774-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">1. Field</p>
<p id="p-0003" num="0002">The presently disclosed embodiments relate generally to applications for touch devices and smart phones, and more specifically to ranking of such applications based on characteristics such as location, time, and type of user movement.</p>
<p id="p-0004" num="0003">2. Background</p>
<p id="p-0005" num="0004">Many UEs, appliances, and other networked devices now have the ability to run a broad variety of specialized apps (applications) and to allow the user to select and download ones that are of interest. As used herein, widgets are considered a subset of apps.</p>
<p id="p-0006" num="0005">This added functionality has led to application stores (or app stores), that is, servers which maintain inventories and rankings of applications for purchase and download. Examples include the IPHONE APP STORE (APPLE), APP WORLD (BLACKBERRY), ANDROID MARKET (GOOGLE), LG APPLIANCE WEBSTORE (LG), OVI STORE (NOKIA), OPERA WIDGETS (OPERA), SAMSUNG APPLICATION STORE (SAMSUNG), PLAYNOW ARENA (SONY), VODAFONE WIDGETS (VODAFONE), V-CAST STORE (VERIZON), and many others.</p>
<p id="p-0007" num="0006">These app stores can include hundreds of thousands of apps typically ranked according to popularity among users. Unfortunately, many useful apps and new, yet high-quality apps are not easily found via the current ranking systems. Keyword searches can be used, but users are not always able to think of keywords that will return relevant apps. Apps can also be browsed via category, but this option too is limited by keyword searching and popularity rankings within each category.</p>
<p id="p-0008" num="0007">As a result, users spend exorbitant amounts of time searching for apps, and often do not find what they are looking for or do not find the most beneficial apps. Apps that could be beneficial, but do not fall within the user's purview are often never found. These approaches also may not take into consideration the personal interests or circumstances of a user. There is therefore a need in the art for improved systems and method for ranking apps.</p>
<heading id="h-0002" level="1">SUMMARY</heading>
<p id="p-0009" num="0008">Illustrative embodiments of the present disclosure that are shown in the drawings are summarized below. These and other embodiments are more fully described in the Detailed Description section. It is to be understood, however, that there is no intention to limit the disclosure to the forms described in this Summary or in the Detailed Description. One skilled in the art can recognize that there are numerous modifications, equivalents, and alternative constructions that fall within the spirit and scope of the disclosure as expressed in the claims.</p>
<p id="p-0010" num="0009">Embodiments of the disclosure comprise a remote wireless server system comprising a context information server and an application raking application running on an application ranking server. The context information server can have a context manager application and a context information processor. The context manager application can receive and store search terms describing desired applications and receive and store context data associated with a user equipment describing a location or type of motion of the user equipment and/or a time when the search terms were generated. The context information processor can analyze and convert the context data into a first context information associated with the user equipment. The application ranking application can compare the search terms and the first context information with a second context information associated with two or more applications. The application ranking application can further rank the two or more applications based on the comparing operation in order to generate a ranked list of applications selected from the two or more applications.</p>
<p id="p-0011" num="0010">Other embodiments of the disclosure can include a method for ranking apps for use on a wireless communications device. The method can comprise receiving search terms from a user equipment and selecting two or more applications from an application library as those application most relevant to the search terms. The method can further include receiving context data from the user equipment describing a location or type of motion of the user equipment and/or a time when the search terms were generated. The method can also include converting the context data to a first context information and accessing a second context information describing the two or more applications. The method can finally include comparing the search terms and the first context information with the second context information to generate a ranked list of applications based on which of the two or more applications are most relevant to the search terms and the first context information.</p>
<p id="p-0012" num="0011">Further embodiments of the disclosure can comprise a user equipment. The user equipment can have a means for generating context data and a means for transmitting the context data to a context information server. The user equipment can further include a means for receiving a ranked list of applications from an application ranking server and a means for displaying the ranked list of applications to a user. The user equipment can also comprise a means for receiving a user selection of one or more applications from the ranked list of applications and a means for downloading and installing the one or more applications on the user equipment.</p>
<p id="p-0013" num="0012">Still further embodiments of the disclosure can include a non-transitory, tangible computer readable storage medium, encoded with processor readable instructions to perform a method for ranking applications for download and install to a user equipment. The method can comprise receiving search terms from a user equipment and selecting two or more applications from an application library as those application most relevant to the search terms. The method can further include receiving context data from the user equipment describing a location or type of motion of the user equipment and/or a time when the search terms were generated. The method can also include converting the context data to a first context information and accessing a second context information describing the two or more applications. The method can finally include comparing the search terms and the first context information with the second context information to generate a ranked list of applications based on which of the two or more applications are most relevant to the search terms and the first context information.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of a user equipment, an associated network communication system, and a remote server system including remote servers.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 2</figref> illustrates another method for providing a ranked list of applications for download and installation on a user equipment.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 3</figref> illustrates a user equipment having a user interface where the apps can be searched, viewed in a ranked order, and selected for purchase and/or download.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a user equipment having a user interface where the apps can be searched, viewed in a ranked order, and selected for purchase and/or download.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 5</figref> shows a diagrammatic representation of one embodiment of a machine in the exemplary form of a computer system within which a set of instructions can execute for causing a device to perform or execute any one or more of the aspects and/or methodologies of the present disclosure.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0019" num="0018">The word &#x201c;exemplary&#x201d; is used herein to mean &#x201c;serving as an example, instance, or illustration.&#x201d; Any embodiment described herein as &#x201c;exemplary&#x201d; is not necessarily to be construed as preferred or advantageous over other embodiments.</p>
<p id="p-0020" num="0019">To overcome the aforementioned challenges in the prior art, when a user searches for apps, the search results can be ranked based on search terms or categories of apps provided by the user along with context information (e.g., location, time, and movement) describing the user equipment (UE). These can be compared to context information describing the app or an entity associated with the app to determine the ranking. The context information can be associated with the UE or an app via metadata in the app or tagging of the app, to name two examples.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of a UE <b>102</b>, an associated network communication system <b>104</b>, and a remote server system <b>129</b> including remote servers <b>106</b>, <b>108</b>, <b>110</b>. The UE <b>102</b>, associated network communication system <b>104</b>, and servers <b>106</b>, <b>108</b>, <b>110</b> are configured to provide application suggestions and application rankings to the UE <b>102</b> based on context information (e.g., location, movement, and/or time characteristics shared between the UE <b>102</b> and a plurality of apps) and optionally search terms or a preferred category of applications that the user provides. The UE <b>102</b> may be configured to communicate with a context information server <b>106</b>, an app ranking server <b>108</b>, and an app store server <b>110</b>. This communication can be facilitated by the network communication system <b>104</b> (or network), which can also facilitate communication between the servers <b>106</b>, <b>108</b>, <b>110</b> and other UE and between the UE <b>102</b> and other UE. The servers <b>106</b>, <b>108</b>, <b>110</b> are configured to suggest apps for download and installation to the UE <b>102</b> and to rank apps for download and installation based on context information, search terms or a category provided by a user via the UE <b>102</b>, as well as other factors such as user rankings and number of user downloads per app.</p>
<p id="p-0022" num="0021">While current app ranking systems base app ranking on user preference for an app and/or a number of user downloads for an app, the herein disclosed systems, methods, and apparatuses seek to provide more relevant app search suggestions and search result rankings by also considering the context in which a user is searching for an app (e.g., context information). Context information for the user (or UE <b>102</b>) along with context information associated with each app, can in combination, be used to select and rank more relevant app suggestions and search results for a user than was possible in the art. Context information for the user (or UE <b>102</b>) can include, for instance, the UE <b>102</b> location, type of motion, and a time when the app ranking request is made. Context information for the user or UE <b>102</b> may also relate to the search terms or application category that the user provides. Context information associated with each app can include, for example, location (e.g., &#x201c;near COOR'S FIELD&#x201d; or &#x201c;on the DC Mall&#x201d;), time (e.g., &#x201c;9 am,&#x201d; &#x201c;afternoon,&#x201d; or &#x201c;Christmas time&#x201d;), or a type of motion (e.g., &#x201c;walking,&#x201d; &#x201c;running,&#x201d; or &#x201c;riding a bus&#x201d;).</p>
<p id="p-0023" num="0022">The following discussion of the system illustrated in <figref idref="DRAWINGS">FIG. 1</figref> will be described in combination with the method illustrated in <figref idref="DRAWINGS">FIG. 2</figref>. Initially an optional app request module <b>134</b> running on the UE <b>102</b> or an optional app request module <b>117</b> running on the app ranking server <b>108</b> makes a request for apps. The request can include search terms provided by the user. For instance, a user can search for apps in the APPLE APPSTORE or the ANDROID MARKETPLACE by entering search terms. The app request can also be made automatically by the app ranking server <b>108</b> or the app store server <b>110</b>, either of which can automatically suggest apps for the UE <b>102</b> to present to the user. The search terms can also describe a category of desired applications, such as sports, restaurants, or business applications.</p>
<p id="p-0024" num="0023">The request can be received by the remote server system <b>129</b> (assuming the request is made by the UE <b>102</b>) (Block <b>202</b>) and can be fulfilled by a combination of the context information server <b>106</b> and the app ranking server <b>108</b>. The remote server system <b>129</b> can select two or more applications from an application library <b>120</b> residing on the app store server <b>110</b> (Block <b>204</b>). The context information server <b>106</b> can be configured to receive and convert context data to context information <b>112</b> from the UE <b>102</b> (Blocks <b>206</b> and <b>208</b>) and access context information describing the two or more apps (Block <b>210</b>). The context information can be stored in the context information server <b>106</b> as context information <b>112</b>.</p>
<p id="p-0025" num="0024">A context manager application <b>114</b> running on a context information processor <b>113</b> of the context information server <b>106</b> can manage handling and storage of the context information <b>112</b>. For instance, the context manager application <b>114</b> can receive context data from the UE <b>102</b> and convert it to context information <b>112</b>. The context manager application <b>114</b> can also extract context data or information from the UE <b>102</b> by tracking UE <b>102</b> activities and app downloads in order to collect location, time, and motion data that is extracted as context data and converted to the context information <b>112</b>. Rather than extracting context data from the UE <b>102</b>, the context manager application <b>114</b> can also (or alternatively) directly monitor the UE <b>102</b> location, time, and motion and generate the context information <b>112</b> from the monitoring. The context manager application <b>114</b> can also extract context information <b>112</b> describing apps from the apps themselves. For instance, the context manager application <b>114</b> may read metadata in the XML of an app or read metadata or tags associated with the app. In other words, the context manager application <b>114</b> extracts context information <b>112</b>, stores it, and organizes it on the context information server <b>106</b>.</p>
<p id="p-0026" num="0025">The app ranking server <b>108</b> includes an app ranking application <b>118</b>, which accesses an apps library <b>120</b> residing on the app store server <b>110</b> to determine what apps are available for download and installation on the UE <b>102</b>. The app ranking application <b>118</b> also analyzes the context information <b>112</b> and selects and ranks some or all of the apps in the apps library <b>120</b> as a ranked list of applications <b>116</b> (Block <b>212</b>). The app ranking application <b>118</b> can then provide the ranked list of applications <b>116</b> to a store manager application <b>122</b> that can provide the ranked list of applications <b>116</b> to the UE <b>102</b>. Alternatively, the app ranking application <b>118</b> can provide the ranked list of application <b>116</b> directly to the UE <b>102</b>, thus bypassing the store manager application <b>122</b>. This embodiment can be useful where one wants to bypass a traditional app store such as the APPLE APP STORE and create an independent app store.</p>
<p id="p-0027" num="0026">The application library <b>120</b> may include app data for each app. The application data may include information about the apps that can be downloaded from the app store server <b>110</b>. For each app, this information may include the name of the app, a description of the app, the cost of the app, and/or metadata relating to the app. This information may also include information about where a copy of the app may be downloaded, such as one or more URL addresses where the app may be downloaded from, such as that of the app store server <b>110</b>.</p>
<p id="p-0028" num="0027">The store manager application <b>122</b> may be configured to manage all aspects of an application purchase and/or download transaction. For example, the store manager application <b>122</b> may be configured to obtain a requested application from the application library <b>120</b>, to process billing and/or payment related to the purchase of the app, and/or to download that app to the requesting UE <b>102</b>. The store manager application <b>122</b> may be configured to perform these tasks automatically without further input from the user or may present the user with one or more dialog boxes, such as a dialog box requesting confirmation of the purchase transaction.</p>
<p id="p-0029" num="0028">The servers <b>106</b>, <b>108</b>, <b>110</b> can all be part of a server system <b>129</b>, which includes one or more servers able to perform all the functions described above with reference to the servers <b>106</b>, <b>108</b>, <b>110</b>. In other words, one of skill in the art will recognize that the components, modules, servers, processors, applications, information, and libraries within the server system <b>129</b> have been described as logical blocks that can be implemented in a variety of hardware, software, and firmware combinations. For instance, the servers <b>106</b>, <b>108</b>, <b>110</b> could operate on one physical server or on multiple physical servers, for instance where three virtual servers operate on a single piece of computing hardware. As another example, the functionality of the context information server <b>106</b> can be combined with the functionality of the app ranking server <b>108</b> onto one set of one or more servers while the functionality of the app store server <b>110</b> can be carried out by another set of one or more servers.</p>
<p id="p-0030" num="0029">The UE <b>102</b> includes a mobile communication system <b>124</b> configured to manage communications to and from the UE <b>102</b>. The UE <b>102</b> also includes a user interface <b>126</b> (e.g., a touchscreen display or a combination of a keyboard, mouse, and display) where the user can enter a search request and the ranked list of applications <b>116</b> can be displayed when returned from the app ranking server <b>108</b> or the app store server <b>110</b>. The UE <b>102</b> may also include sensing systems <b>127</b> for providing context data or context information <b>112</b> to the context information server <b>106</b>. These can include a location sensing system <b>128</b>, a time sensing system <b>130</b>, and/or a motion sensing system <b>132</b>.</p>
<p id="p-0031" num="0030">The location sensing system <b>128</b> can determine a location of the UE <b>102</b> (e.g., via GPS, cell tower triangulation, user entry of coordinates or an address). The location sensing system <b>128</b> may be of any type. For example, it may include a GPS chip set configured to determine the geographic location of the UE <b>102</b> based on positioning signals from global satellites. The location sensing system <b>128</b> may in addition or instead include an architecture that uses both GPS as well as network elements to determine position (AGPS). The location sensing system can in addition or instead use cell tower triangulation to determine position based on the nearest cell tower ID. These are just two non-limiting examples of implementations of the location sensing system <b>128</b>.</p>
<p id="p-0032" num="0031">The location sensing system <b>128</b> may optionally operate with a sensing device(s) <b>136</b>, such as a GPS receiver. For instance, the sensing device(s) <b>136</b> can be a GPS receiver or accelerometer, while the location sensing system <b>128</b> can be software, hardware, firmware, or a combination of these that operates to translate the GPS signal into context data. Alternatively, the sensing device(s) <b>136</b> can provide context data to the location sensing system <b>128</b>, which is then converted to context information <b>112</b> by the context information server <b>106</b> or by the location sensing system <b>128</b> and then passed to the context information server <b>106</b>.</p>
<p id="p-0033" num="0032">The time sensing system <b>130</b> can provide a time stamp or other time context information associated with the UE <b>102</b> (e.g., 12:01 pm). For instance, when a user makes an app search request, the time sensing system <b>130</b> may attach a time stamp to the query as it is sent to the app store server <b>110</b>. Alternatively, the time sensing system <b>130</b> may be foregone, since the app store server <b>110</b> or the context information server <b>106</b> can ascertain a time of an app query and use this time. In other words, time is more universally measurable than location and type of motion, and therefore the time sensing system <b>130</b> may not be needed.</p>
<p id="p-0034" num="0033">The time sensing system <b>130</b> may optionally operate with the sensing device(s) <b>136</b>, such as a digital clock signal generator. For instance, the sensing device(s) <b>136</b> can include a clock signal generator, while the time sensing system <b>130</b> can be software, hardware, firmware, or a combination of these that operates to translate the clock signal into context data. Alternatively, the sensing device(s) <b>136</b> can provide context data to the time sensing system <b>130</b>, which is then converted to context information <b>112</b> by the context information server <b>106</b> or by the time sensing system <b>130</b> and then passed to the context information server <b>106</b>.</p>
<p id="p-0035" num="0034">The motion sensing system <b>132</b> can determine what type of motion or movement the UE <b>102</b> (and therefore also the user) is engaged in. Some non-limiting examples of types of movement include, stationary, walking, running, biking, driving, riding public transportation, flying, boating, riding a ferry, and riding a train. The motion sensing system <b>132</b> may even determine what carrier is being used in the case of commercial transportation (e.g., UE <b>102</b> began flying at a time that corresponds to and is traveling along a flight path corresponding to United flight <b>608</b> to Newark). Location, speed, and acceleration can be determined via GPS or cell tower triangulation, to name two non-limiting examples.</p>
<p id="p-0036" num="0035">From this example it should be apparent that in some cases context data is generated that overlaps for location and type of motion, for instance where location and a type of motion are both determined based on GPS coordinates. The context manager application <b>114</b> can take this context data and determine a UE <b>102</b> location and type of motion from it.</p>
<p id="p-0037" num="0036">As the list of exemplary types of movement makes apparent, the motion sensing system <b>132</b> may simply measure a speed of motion, but may also perform more complex analyses of motion. For instance, merely measuring a speed of the UE <b>102</b> will not differentiate between a user that is driving a car and a user that is riding a bus or a train. For such differentiation the motion sensing system <b>132</b> might look at speed, location relative to known bus or rail lines, and locations where acceleration, deceleration, and stoppage occur. If the UE <b>102</b> has been traveling along the same route as a particular public bus, and stoppage points corresponding to one or more known bus stops on the route have been observed, then the motion sensing system <b>132</b> can conclude that the mode of transportation is a bus rather than a car. The motion sensing system <b>132</b> may also monitor for a threshold density of wireless signals in order to determine whether a UE <b>102</b> is on public transportation or not (e.g., more high strength signals will be measured on a bus or train than in a car due to the density of cell-phone-using passengers). These examples are merely illustrative of the plethora of ways in which types of motion can be determined and the plethora of factors that can be used to make such determinations.</p>
<p id="p-0038" num="0037">The motion sensing system <b>132</b> may optionally operate with the sensing device(s) <b>136</b>, such as an accelerometer or GPS receiver. For instance, the sensing device(s) <b>136</b> can include an accelerometer, while the motion sensing system <b>132</b> can be software, hardware, firmware, or a combination of these that operates to translate the accelerometer signal into context data. Alternatively, the sensing device(s) <b>136</b> can provide context data to the motion sensing system <b>132</b>, which is then converted to context information <b>112</b> by the context information server <b>106</b> or by the motion sensing system <b>132</b> and then passed to the context information server <b>106</b>.</p>
<p id="p-0039" num="0038">It will be understood that the sensing systems <b>127</b> can be implemented in any combination of hardware, software, or firmware. For instance, the location, time, and motions sensing systems <b>128</b>, <b>130</b>, <b>132</b> could be executable code operating on a processor of the UE <b>102</b> or could be multiple processors running different executable codes.</p>
<p id="p-0040" num="0039">The sensing systems <b>127</b> can generate data that the context information server <b>106</b> can convert to context information, or the sensing systems <b>127</b> can generate context information and provide the same to the information server <b>106</b>. For instance, the motion sensing system <b>132</b> can determine a type of movement based on UE <b>102</b> speed, location, and acceleration in an embodiment and pass the type of movement to the context information server <b>106</b> as context information <b>112</b>. Yet, in another embodiment, the motion sensing system <b>132</b> can measure speed, location, and acceleration of the UE <b>102</b> and pass this context data to the context information server <b>106</b>, where this context data can be analyzed to determine the type of movement and stored as context information <b>112</b>.</p>
<p id="p-0041" num="0040">The context information <b>112</b> can be stored in a non-volatile memory of the context information server <b>106</b>. The context information <b>112</b> can also be stored in temporary memory such as RAM, buffer, or cache of the context information server <b>106</b>.</p>
<p id="p-0042" num="0041">Context data can be raw data acquired from a sensing device <b>136</b> or the sensing systems <b>127</b>, and that has not been analyzed. Context data is converted into context information <b>112</b> either by the sensing systems <b>127</b> or by the context information server <b>106</b>. Context information <b>112</b> can also be extracted from apps or analysis of apps.</p>
<p id="p-0043" num="0042">Context information <b>112</b> associated with apps can include tags (e.g., restaurant, grocery, coupons). Tags can be broad (e.g., &#x201c;Christmas time&#x201d; or &#x201c;riding a bus&#x201d;) or narrow (e.g., &#x201c;December 24<sup>th</sup>, 5:00 pm&#x201d; or &#x201c;riding the 83&#xd7; bus&#x201d;) or anywhere in between. Tags can be metadata associated with an app or can be embedded in the app code (e.g., the XML). Where there are no tags, the context manager application <b>114</b> can assign a tag to an app, for instance by analyzing the app code and/or searching the Internet for references to the app that can provide context information <b>112</b>.</p>
<heading id="h-0005" level="1">Context Information&#x2014;Location</heading>
<p id="p-0044" num="0043">Context information <b>112</b> describing location can include, but is not limited to, latitude, longitude, altitude, and addresses, distances (or radii) from points of interest (e.g., city centers, event centers, stadiums, airports, or restaurants), distance (or radii) from the UE <b>102</b> (including vertical, horizontal, and three-dimensional distance), floor numbers of buildings or others structures. Context information <b>112</b> describing location can describe the UE <b>102</b> location and/or describe a location associated with an app. Context information <b>112</b> describing UE <b>102</b> location is often extracted from the UE <b>102</b>, while context information <b>112</b> describing a location associated with an app is often extracted from the app itself.</p>
<p id="p-0045" num="0044">The app ranking application <b>118</b> can access the context information <b>112</b> stored on the context information server <b>106</b> in order to select and rank apps from the application library <b>120</b>. The app ranking application <b>118</b> can use the context information <b>112</b> describing location to determine distances, elevation changes, and routes between the UE <b>102</b> and a location associated with an app. Apps associated with locations that are closer to the UE <b>102</b> location can be ranked higher. Alternatively, only those apps associated with locations that are within a threshold distance (or radii) of the UE <b>102</b> may be returned as search results or suggested to the user. In another embodiment, apps within a threshold distance of the UE <b>102</b> may receive a ranking boost, but still be ranked according to a number of factors including location context information <b>112</b>, while apps outside the threshold distance are ranked without regard to location context information <b>112</b>.</p>
<p id="p-0046" num="0045">Context information <b>112</b> describing location can include vertical distances, floor numbers, and/or elevations. These can be used, for instance, in the context of an elderly or injured user searching for apps (or having apps suggested to them by the app store server <b>110</b>). Such users may be far less interested in apps associated with locations that the user is unable to, or has difficulty, reaching (e.g., locations that are far from the user in the vertical dimension). For instance, an athlete who recently sprained an ankle and temporarily has great difficulty with stairs may be uninterested in apps that are associated with locations requiring the user to climb stairs to get to. Apps associated with locations that did not require large elevation changes, or ascending stairs, might be ranked higher for this user. This is just one of many examples where the app ranking application <b>118</b> may consider vertical distances when ranking apps.</p>
<p id="p-0047" num="0046">Context information <b>112</b> describing location can take the form of tags associated with each app. For example, apps that provide games, video clips, travel guides, or duty-free catalogs may each be associated with the tag &#x201c;airport,&#x201d; since each of these apps may be relevant to a person who is at or is going to an airport. Similarly, apps that calculate waiter tips, provide restaurant reviews, provide nutritional guides, or translate words may each be associated with the tag &#x201c;restaurant,&#x201d; since each of these applications may be relevant to a person who is at or is going to a restaurant. Another example is the tag &#x201c;grocery store&#x201d; for coupon applications, nutritional applications, price comparison applications, and loyalty card applications. A single app may have multiple tags associated with it. For example, a video game app may have the tags &#x201c;airport,&#x201d; &#x201c;bus terminal,&#x201d; and &#x201c;train&#x201d; associated with it. Tags can be applied by an application developer (or app developer) or automatically by the context manager application.</p>
<p id="p-0048" num="0047">Even where an app is tagged with location context information <b>112</b>, the information may not be in the same form across apps, thus making it difficult to compare the context information <b>112</b> of different apps. For instance, apps often have different location data types (e.g., GPS coordinates versus an address), or some apps have location tags while others have coordinates. In another case, one app may have context information <b>112</b> describing a parcel of land (a two-dimensional location) rather than an address (a one-dimensional location). In other instances, apps may not even include location data.</p>
<p id="p-0049" num="0048">To overcome this challenge, these various forms of context information <b>112</b> can be transformed into a common information type that is more easily compared between apps. For instance, location data for a plurality of apps may be transformed into geographical coordinates (e.g., latitude and longitude) or an address. Thus, for instance, where one app may have address information associated with it (e.g., embedded in the app executable code) another app may have latitude and longitude coordinates associated with it, but both of these examples of context information <b>112</b> describing location can be stored on the context information server <b>106</b> as addresses. For example, latitude and longitude coordinates could be extracted and transformed into address information while the address information could be extracted but not transformed.</p>
<p id="p-0050" num="0049">In one embodiment, various types of context information <b>112</b> describing location can be extracted and transformed into a single type of context information <b>112</b> via geocoding. Geocoding is the process of deriving associated geographic coordinates (often expressed as latitude and longitude) from other geographic data, such as street addresses, or zip codes (postal codes). Reverse geocoding is the opposite: deriving an associated textual location such as a street address, from geographic coordinates. For instance, transforming address information into latitude and longitude. As an example of geocoding in action, imagine that an app for online pre-ordering of Moe's Mondo Mud Muffins includes address information in the app that allows users to link to a smartphone's mapping application and get directions to Moe's. The systems and methods herein disclosed can use this address information to rank the Moe's app in terms of location. However, the address information is not easily compared to other app location data such as geographical coordinates. Geocoding takes the address information in the Moe's app and transforms it into latitude and longitude coordinates or any other data type that can be commonly compared between apps.</p>
<p id="p-0051" num="0050">Geocoding and reverse geocoding are not limited to geographical coordinates, like latitude and longitude, or textual location, such as address. They can also deal with the following non-limiting list of location data types: neighborhood, town, city, zip code, area code, county, municipal district, state, region (e.g., Western United States or &#x201c;the South&#x201d; or &#x201c;the Bible Belt&#x201d;), time zone, country, group of countries (e.g., European Union), and continent.</p>
<p id="p-0052" num="0051">Geocoding does not have to be applied to every app to be ranked. Sometimes, some apps may already include the common location data type. For instance, the system may try to associate address information with each app. Some apps may already have address information embedded in their code, and thus geocoding can be skipped relative to these apps. As such, all apps can have the common location data type despite not all having geocoding applied to them.</p>
<p id="p-0053" num="0052">The location used to determine ranking may not be a current location of the UE <b>102</b>. For instance, where a user is on a bus and likely to get off at a certain bus stop, the UE <b>102</b> location can be considered the bus stop&#x2014;a future location. Alternatively, the bus route can be considered the UE <b>102</b> location such that apps having context information <b>112</b> describing locations near the bus route are ranked higher than other apps. These are two examples show that UE <b>102</b> location need not be limited to the UE <b>102</b> current location and can include a range of locations (e.g., a bus route).</p>
<p id="p-0054" num="0053">In some embodiments, there may be a ranking preference for apps sponsored by the owner of land that a UE <b>102</b> is on or near. An app sponsored by the owner of land that the UE <b>102</b> is on may automatically be ranked highest or may be given a substantial ranking boost. Alternatively, when the UE <b>102</b> is within a threshold distance of the land owned by an app sponsor, the app may be ranked highest or given a substantial ranking boost. For instance, when a user enters a BEST BUY parking lot or store, and searches for apps related to electronics, the BEST BUY app may be preferentially given the #1 ranking regardless of other context information <b>112</b> or factors such as number of user downloads.</p>
<heading id="h-0006" level="1">Context Information&#x2014;Time</heading>
<p id="p-0055" num="0054">Time context information associated with apps can include at least any of the following: seconds, minutes, hours, days, weeks, months, years, decades, and centuries. More specific examples include happy hour, 9 am, wake up, lunch, sunset, weekend, Valentine's Day, the third week of being unemployed, and a first wedding anniversary, to name a few. Time context information can be absolute (e.g., 11:11 pm on Nov. 11, 2011 or midnight on January 1), can be a range (e.g., 5 pm to 8 pm), or can be related to a given event (e.g., ten minutes before the KISS concert or within ten hours after the start of Black Friday). Context information <b>112</b> describing time can describe the UE <b>102</b> time and/or describe a time associated with an app. Context information <b>112</b> describing UE <b>102</b> time is often extracted from the UE <b>102</b> or the context information server <b>106</b> at the time that an app search is made, while context information <b>112</b> describing a time associated with an app is often extracted from the app itself. Time context information for the UE <b>102</b> can include a time stamp generated when the request for a ranking of apps is made or when it is received.</p>
<p id="p-0056" num="0055">The app ranking application <b>118</b> can access the context information <b>112</b> stored on the context information server <b>106</b> in order to select and rank apps from the application library <b>120</b>. The app ranking application <b>118</b> can use the context information <b>112</b> describing time to determine how much time separates the search from the time associated with the app or whether the search is taking place during a time period or range specified by the context information <b>112</b> of the app. The user can also specify a time or period of interest in the search query.</p>
<p id="p-0057" num="0056">Apps having time context information closest to a time at which the query is made or closest to a time specified in the query, can be assigned higher rank. As one example, a Black Friday application may have time context information indicating that the Black Friday application is most relevant near Black Friday. A MACY'S REWARDS CARD member application may have or be paired with time context information indicating that the app is most relevant around Christmas (a time period rather than a specific time). When a user performs a search that returns both these apps on November 20, the Black Friday app may be ranked higher since November 20 is closer to Black Friday than to Christmas.</p>
<p id="p-0058" num="0057">In another embodiment, apps having a smaller time range can be assigned higher rank. For instance, a Black Friday application may have time context information related to the two weeks preceding Black Friday. A MACY'S REWARDS CARD may have time context information related to the three months prior to Christmas. A user searching for a shopping app may come across both of these apps during the week preceding Thanksgiving, and while the time context information should indicate that both are equally-relevant, since the Black Friday app has a shorter time span for the time context information <b>112</b>, it would be ranked higher than the MACY'S app. This feature may encourage app developers to be more specific in their tagging of apps.</p>
<p id="p-0059" num="0058">Apps can also have time sensitive context information. For instance, higher rankings may only be assigned to apps when they appear on search results during the time sensitive period. For instance, the Black Friday app may only receive a higher ranking until Black Friday. Once the time sensitive period has passed (once Black Friday has passed), the time sensitive context information no longer gives the Black Friday app a ranking advantage.</p>
<p id="p-0060" num="0059">Context information <b>112</b> describing time can take the form of tags associated with each app. A single app may have multiple time tags associated with it.</p>
<p id="p-0061" num="0060">Even where an app is tagged with time context information <b>112</b>, the information may not be in the same form across apps, thus making it difficult to compare the context information <b>112</b> of different apps. In other instances, apps may not even include time data. To overcome this challenge, these various forms of context information <b>112</b> can be transformed into a common information type that is more easily compared between apps.</p>
<p id="p-0062" num="0061">Some apps may not have any time data. In such cases, time data can be inferred. For instance, the app may have received thousands of comments in an app store or on Internet forums and review sites, and some of these comments may mention one or more times associated with the app. The context manager application <b>114</b> can analyze these comments and ascertain a time to associate with the app.</p>
<heading id="h-0007" level="1">Context Information&#x2014;Motion</heading>
<p id="p-0063" num="0062">Context information <b>112</b> describing movement can be associated with either or both of the UE <b>102</b> and the app. Types of movement described by this information can include, for example, stationary, running, walking, driving, riding a commuter rail, flying, and boating, to name a few. Apps having motion context information <b>112</b> matching or closest to the type of movement that the UE <b>102</b> is involved in can be ranked higher. For instance, given a user who is on a plane, apps having tags or automatically-generated context information indicating that they will be most relevant to user's traveling on planes can be ranked higher.</p>
<p id="p-0064" num="0063">The motion context information <b>112</b> can be based on a current motion of the UE <b>102</b> or on recent motion. For instance, even though a user stopped running three minutes ago, the motion context information <b>112</b> might still indicate moving or running for the UE <b>102</b>. As another example, the app ranking application <b>118</b> or context information manager <b>114</b> may determine that a user is traveling on a bus and that the user typically exits at a particular bus stop.</p>
<p id="p-0065" num="0064">Context information <b>112</b> is not limited to the location, time, and type of motion context information <b>112</b> described above, although these descriptions do provide one of skill in the art with sufficient description and examples to allow them to implement other types of context information <b>112</b>. Essentially, any context information <b>112</b> that can be gleaned via the sensing systems <b>127</b> described, or similar sensing systems, and context information <b>112</b> associated with apps, can be used to provide more relevant app search results to users.</p>
<p id="p-0066" num="0065">A number of variations on the disclosed embodiments that were not explicitly described, should be apparent to one of skill in the art. For instance, while the examples of location, time, and motion context information <b>112</b> have made it appear that only one of these contexts affects app ranking, one of skill in the art will understand that this was done merely to simplify the explanation and examples of context information <b>112</b>. In application, rankings can be based on a combination of the location, time, and motion context information <b>112</b>, along with other factors such as user rankings and number of app downloads. Search terms as well as or in addition to context information <b>112</b> associated with the UE <b>102</b> can be used. Furthermore, the rankings can be biased towards one or more of these aspects based on weighting factors (e.g., location context information may have greater weight than time context information <b>112</b>). Rankings can even see different weight given to different context information <b>112</b> of the same type. Weighting can be based on the source of context information <b>112</b> or the way in which it is combined and analyzed with other context information <b>112</b>. The existence or non-existence of certain types of context information <b>112</b> can also affect weighting. The specificity of context information <b>112</b> provided by app developers can also affect rankings.</p>
<p id="p-0067" num="0066">One or more types of context information <b>112</b> can be used in combination. For instance, location, method of travel, and time of travel can be used in combination. In particular, where the user is elderly, the location of an app may be close at hand, but a large number of steps without any wheelchair access points may stand between the UE <b>102</b> and the location associated with the app such that the app will be ranked lower than it would be based solely on distance. So, the app ranking application <b>118</b> may not only calculate a distance between the UE <b>102</b> and locations associated with apps, but it may also determine how long it will take the user of the UE <b>102</b> to reach the locations and how difficult such a journey might be. In contrast, where a number of apps are within easy walking distance of the UE <b>102</b> via streets and sidewalks, such factors as time of travel may not be that relevant.</p>
<p id="p-0068" num="0067">As another example, even though there are a large number of stairs between the elderly user and a location associated with an app, this fact may not be detrimental to the app's ranking during certain times of day&#x2014;when an elevator is functioning, which would allow the elderly user easier access to the location associated with the app.</p>
<p id="p-0069" num="0068">In another instance, app ranking can be based on context information <b>112</b> and one or more traditional ranking factors. For instance, an app can be ranked based on location context information <b>112</b> and number of user downloads of the app. In particular, the ranking may be based on a number of user downloads, but only users that are within a threshold distance (or radii) of the UE <b>102</b> are considered when counting the number of user downloads. As seen, various types of context information <b>112</b> can be combined, or combinations of context information <b>112</b> and traditional ranking factors can be made, in order to better determine a relevance of an app to a user.</p>
<p id="p-0070" num="0069">Context information <b>112</b> is also not limited to location, time, and type of motion. In the case of the injured or elderly user, the context information <b>112</b> would also describe the user's state (e.g., elderly, injured, young, business professional, etc.). In the case of determining a user's type of motion (e.g., on a bus or in a car), context information <b>112</b> may include an automated Internet search for bus routes, bus stops, and expected time of travel. Many other types of context information <b>112</b> besides location, time, type of motion are envisioned.</p>
<p id="p-0071" num="0070">While numerous embodiments have been described where context information <b>112</b> is generated and compared for both the UE <b>102</b> and the app, in other embodiments, the UE <b>102</b> need not be associated with context information <b>112</b>. Instead, search terms that the user enters into an app query can be compared to context information <b>112</b> associated with the app (e.g., tags) in order to find apps that are most relevant to the user's interest. For example, the search request may specify an interest in certain types of locations associated with apps, such as business, retail stores, restaurants, listings in Yellow Pages, local social networking opportunities, and/or GPS navigational points of interest. The app request module <b>134</b> may be configured to allow a user to specify these location types through the user interface <b>126</b>. In some embodiments, a combination of UE <b>102</b> context information <b>112</b> and app search terms can be compared to app context information <b>112</b> in order to select and rank a set of app search results or suggestions.</p>
<heading id="h-0008" level="1">Ranking and Weighting</heading>
<p id="p-0072" num="0071">Ranking of apps and the weighting applied to different context information <b>112</b> will now be described. The app ranking application <b>118</b> can base its ranking on any one or more of location, time, type of movement, and other types of context information <b>112</b> not explicitly described, along with traditional app ranking bases such as user rating, app usage, and quantity of downloads. For instance, a ranking of apps can be based on both user ratings and location. When two or more types of context information <b>112</b> are used to rank apps, different weights can be assigned to each type of context information <b>112</b>. For instance, location may be given greater weight than type of movement. Where one or more types of context information <b>112</b> are used along with traditional ranking factors (e.g., number of user downloads or user popularity), weighting can again apply. For instance, context information <b>112</b> may be given greater weight than the traditional ranking factors.</p>
<p id="p-0073" num="0072">Even within a given type of context information <b>112</b>, weighting can be applied. For instance, given an AMC movie theatres app, the app ranking application <b>118</b> can look at the user's history of movie interests (e.g., via a recent history of trailers that the user has viewed or movies that the user has looked up movie times for at FANDANGO.com) and give greater weight to movie theater locations where movies are playing that are likely to interest the user. In other words, if the user is searching for apps at two different AMC theaters, but one of them is playing at one or more theatres that the user is more likely to be interested in, then the AMC app is more likely to be found near the top of the search results when the user searches for apps in the vicinity of that theater. As another example, different apps may be ranked in terms of a distance from the UE <b>102</b>, where increased distance means that an app will be ranked lower than apps that are closer. However, this difference in ranking may be more exaggerated in rural areas than in cities, because of a determination that it takes longer to travel the same distance in rural areas than in cities (e.g., due to less-extensive road and public transit options). In other words, a search for an app in the city where the location associated with the app is 0.5 miles from the UE <b>102</b>, will be ranked higher than a search for a similar app in a rural area that is also 0.5 miles from the UE <b>102</b>. In this way, the app ranking application <b>118</b> can take into account, not just context information <b>112</b> (e.g., location and distance), but also how that context information <b>112</b> translates into real world relevance (e.g., travel time is a more important contextual indicator than mere distance).</p>
<p id="p-0074" num="0073">Weight may be given to context information based on the source of the context information <b>112</b>. As one example, where an app is tagged by the app developer and also automatically tagged via the context manager application <b>114</b>, the automatic tag may have greater weight than the app developer tag.</p>
<p id="p-0075" num="0074">Context information <b>112</b> may also have different weight depending on the way in which it is combined with other types of context information <b>112</b>. As an example, context information <b>112</b> describing elevation may have little relevance too, and is thus assigned little weight, for most users. However, for injured or elderly users, this same context information <b>112</b> may have much greater weight.</p>
<p id="p-0076" num="0075">Rankings can also take into account whether an app is associated with a certain type of context information <b>112</b> or not. In some embodiments, where apps do not have some form of context information <b>112</b> (e.g., there is location context information <b>112</b> but no type of motion context information <b>112</b>), rather than trying to infer or automatically generate context information <b>112</b>, apps lacking context information <b>112</b> can merely be ranked lower than apps having this type of context information <b>112</b>.</p>
<p id="p-0077" num="0076">Because of the incentive for app developers to broadly tag their apps such that their apps are ranked higher in a greater number of user searches, rankings may also take context information <b>112</b> specificity into consideration, and give greater weight to more specific context information <b>112</b>. For instance, where the context information <b>112</b> is in the form of a range (e.g., December 1-December 31 or within the city limits), apps having a smaller range of values can be ranked higher, thus creating a disincentive for app developers to overly broaden their tags. For instance, two apps being ranked based on distance from a user may have location tags described as &#x201c;Michigan&#x201d; and &#x201c;the Michigan Tech campus.&#x201d; A user searching for an app who is within Michigan, may find that the app tagged with &#x201c;the Michigan Tech campus&#x201d; is higher ranked than the app tagged with &#x201c;Michigan&#x201d;, all else being equal, because the former had more specific context information <b>112</b>. This aspect of the disclosure may encourage developers to apply more specific tags to their apps.</p>
<p id="p-0078" num="0077">The prior art typically ranks apps based on user preference or ranking and number of user downloads of a given app. However, more importantly than user preference and number of downloads would be user preference as given by a set of users having similar interests or characteristics to the user searching for an app. Also useful would be a number of app downloads in a given area or at a given time or while engaged in a given type of motion. In other words, contextualizing the number of downloads for a given app. When a user requests a ranking of apps that may be relevant to skiing they typically receive a combination of skiing games, ski equipment retailer apps, snow forecast apps, etc, and these apps are ranked in large part on the number of other users that have downloaded each app. However, this disclosure improves on this ranking method by also looking at the number of downloads for a given app in a location, time, or while engaged in a type of movement that is found to be relevant to the user and the user's search.</p>
<p id="p-0079" num="0078">In an embodiment, a ranking of apps is based in part on a number of user downloads of an app at or near a location described by the location context information <b>112</b>. This can include a location that is within a threshold distance of the UE <b>102</b> or that is within a threshold distance of a location referenced in the user's search terms. As one example, an app can be ranked higher if the UE <b>102</b> is near a location near which a large number of other users also downloaded the app. In another embodiment, the ranking of apps is based in part on a number of user downloads of an app at a time that falls near a time or within a time range defined by context information <b>112</b> describing time. One example, includes ranking an app higher because the search was for Valentine's Day apps and a large number of users downloaded the app within the few weeks preceding Valentine's day. In another embodiment, the ranking is based in part on a number of user downloads of an app occurring while the downloading user was engaged in a type of motion that matches the motion described in the context information <b>112</b>. For instance, an app can be ranked higher if the UE <b>102</b> is on a plane and a large number of users downloaded the app while on a plane.</p>
<heading id="h-0009" level="1">Metadata and Tagging</heading>
<p id="p-0080" num="0079">The following is a more in depth discussion of tagging and metadata associated with apps. Apps can be associated with context information <b>112</b> via code embedded in the app (e.g., metadata in the resource file of the XML) or metadata associated with the app code or via tagging that occurs prior to or during app upload to an app store. In an embodiment, context information <b>112</b> can be derived from or provided by app developers (e.g., via categorizing his/her app) and users (e.g., via tracking user activity). An app developer can add metadata to the app code or associate metadata with the app when uploading the app to an app store. In this way, the app developer has a level of control over how his/her app is ranked based on context information. For instance, the app developer can embed an address or GPS coordinates in the app code or can associate a time period with his/her app before uploading the app to an app store. McDonald's, for example, might be tagged with metadata such as &#x201c;restaurant&#x201d;, &#x201c;fast food&#x201d;, and/or &#x201c;American food.&#x201d; These tags may be the same as are used to categorize the service in a telephone directory. While the app developer can assign these tags to an app, they may also be automatically assigned by looking up the particular service organization and its associated classification(s) in a telephone directory or an Internet-based source of company information.</p>
<p id="p-0081" num="0080">Alternatively, when uploading an app to an app store, the app store may present the app developer with context information inputs such as text boxes for inputting context information or radio buttons for selecting predefined context information. In one example, an app store may present a text box to app developers allowing the developer to enter words or phrases describing the app's context.</p>
<p id="p-0082" num="0081">In another example, an app store upload interface may include radio buttons for selecting categories of context information that they believe their app fits into. For instance, upon uploading an app, the app store may present an app developer with twelve radio buttons each associated with a month of the year. App developers can select any one or more of the radio buttons to indicate a time context for their app when uploading. While they have the option of selecting all twelve months and thus covering a broader time context, the app rankings may also rank apps with smaller time context ranges higher thus encouraging app developers to be more selective in the months used to indicate a time context for their apps. These are just some of the many ways that app developers can tag their apps or otherwise provide context information <b>112</b> associated with their apps.</p>
<p id="p-0083" num="0082">Apps can also be automatically tagged or associated with context information <b>112</b>. Automatic tagging can occur where an app does not have any context information <b>112</b> (e.g., the app developer did not tag the app or the app is a legacy app created before context tagging comes into being). The context manager application <b>114</b> can be primarily responsible for automatic tagging. For instance, the context information manager <b>114</b> can extract and/or assign context information from apps that have been uploaded to the app store but were not tagged by an app developer. This can be desirable for legacy apps&#x2014;those that were uploaded before context tagging came into being.</p>
<p id="p-0084" num="0083">Automatic tagging can extract information from a variety of sources and perform various analyses in order to determine proper context information <b>112</b> for an app. For instance, an app may have received thousands of comments in an app store or on Internet forums and review sites, and some of these comments may mention one or more locations associated with the app. The context manager application <b>114</b> can analyze these comments and ascertain a location to associate with the app. In another example the app developer or company, whose name may be extracted from the app, can be found via an Internet search, and the app can then be associated with the location of the app developer or development company. As another example, apps can be automatically associated with brick-and-mortar locations related to the app. Gas stations, businesses, theme parks and others may have location associations based on a brick-and-mortar address, to name a few examples. For instance, a BEST BUY app may be automatically associated with location context information <b>112</b> identifying BEST BUY store locations. An AMC movie theaters app can automatically be associated with GPS coordinates of its theaters. An app related to Christmas food recipes can be automatically associated with Christmas time. An app for SOUTHWEST AIRLINES can automatically be associated with the flying type of motion.</p>
<p id="p-0085" num="0084">Automatic tagging may be based on user action. The context manager application <b>114</b> can track usage of apps that have been downloaded to UEs and in this way ascertain what location, time, type of movement, and other context information <b>112</b> should be associated with an app. In this way, more objective location, time, and motion context information can be ascertained than when an app developer provides context information. For instance, an app developer for Papa Pronto's Pizza may indicate an address and a ten mile radius for location context information, the ten mile radius covering the delivery zone for Papa's. Yet, the context manager application <b>114</b> may receive usage data for the app showing that 98% of users download and use the app within a residential neighborhood East of Papa's. Perhaps the West side of Papa's is an oil refinery and industrial complex where very little pizza orders are made. The context manager application <b>114</b> could then automatically assign location context information <b>112</b> as the West side of Papa's within a 10 mile radius. The context information <b>112</b> would thus favor the residential side of Papa's since people in the refinery and industrial complex have demonstrated little interest in the Papa's app. This example shows just one of many ways that automatically derived context information <b>112</b> can override or be used in combination with context information <b>112</b> provided by app developers.</p>
<p id="p-0086" num="0085">In some embodiments, app developers may not be given the opportunity to provide context information <b>112</b>. Instead, automated tagging by the context manager application <b>114</b> may be the only source of context information <b>112</b> for the apps that are uploaded to the application library <b>120</b>.</p>
<p id="p-0087" num="0086">These examples of tagging apps and associating them with context information shows just a fraction of the many ways that apps can be assigned context information both by the app developers and by autonomous systems such as the context manager application <b>114</b>.</p>
<p id="p-0088" num="0087">The purpose of the ranking may affect what context information <b>112</b> is automatically associated with an app. For instance, a sports team's app could be automatically associated with the location of the home stadium when a first search is made. However, in a different search context, the location associated with the sports team's app could be the closest stadium in which the sports team was playing. For instance, for a Boston user in Kansas City searching for BOSTON REDSOX apps, one or more apps related to the Red Sox may be associated with the location of the Kansas City Royals baseball stadium or the next closest rival stadium, the COLORADO ROCKIES COORS FIELD. What these examples show is that the context information <b>112</b> associated with an app may depend on the type of app search or the type of user doing the search.</p>
<p id="p-0089" num="0088">The discussion now turns to some of the other system components of the UE <b>102</b>. The mobile communication system <b>124</b> may be of any type. For example, it may include a transmitter, a receiver, one or more data processing sub-systems, and/or other components. The mobile communication system <b>124</b> may be in communication with the user interface <b>126</b>, which facilitates input and output of information between the UE <b>102</b> and the user. The user interface <b>126</b> may include any type of user interface device, such as a microphone, loud speaker, headphone, earphone, display (including touch screen), mouse, and/or keyboard.</p>
<p id="p-0090" num="0089">In another embodiment, the app request module <b>134</b> may periodically, or according to a pre-programmed schedule, transmit the request to one or more of the servers <b>106</b>, <b>108</b>, <b>110</b>.</p>
<p id="p-0091" num="0090">The network communication system <b>104</b> may be configured to facilitate communication between UEs, such as the UE <b>102</b>, and servers, such as the context information server <b>106</b>, the app ranking server <b>108</b>, and the app store server <b>110</b>. The network communication system <b>104</b> may have any configuration to facilitate this functionality. For example, the network communication system <b>104</b> may include one or more mobile communication networks, the Internet, one or more gateways, one or more local area networks, and/or one or more wide area networks.</p>
<p id="p-0092" num="0091">One of skill in the art will understand that the servers discussed above are abstract representations of logical blocks that in application can be part of a single rack of servers in one location, can be remote computers in different locations, or can be distributed between two or more computers at one or more locations.</p>
<p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. 2</figref> illustrates another method for providing a ranked list of applications for download and installation on a user equipment. A user can request a ranking of applications by entering one or more search terms, as is common practice on app stores such as the ANDROID MARKETPLACE. A user can also select a category of applications in which the user would like to see a ranked list of applications. The category can also be passed to remote servers in the form of search terms (e.g., restaurants, movies, sports, transportation). The method receives the search terms from the users UE in receiving operation <b>202</b>. A remote server system, such as <b>129</b> illustrated in <figref idref="DRAWINGS">FIG. 1</figref> can perform the receiving operation <b>202</b>. The remote server system can then select two or more applications from an application library based on the received search terms in a selecting operation <b>204</b>. The selecting operation <b>204</b> typically is carried out without reference to context information. However, in some embodiments, even the selecting operation <b>204</b> can consider context information when selecting the two or more applications. The method can also include a second receiving operation <b>206</b> in which context data from the UE is received. The context data can describe a location of the UE, a type of motion of the UE, and/or a time when the search terms were generated, transmitted, or received. The context data can then be converted to a first context information in a converting operation <b>208</b> that is carried out by the remote server system. In an alternative embodiment, the UE can collect context data and convert it to context information before passing the context information on to the remote server system. Second context information describing the two or more applications that were selected by the selecting operation <b>204</b> can then be accessed in an accessing operation <b>210</b>. Finally, a ranked list of applications can be generated in a comparing operation <b>212</b>. The comparing operation <b>212</b> involves comparing the search terms and the first context information with the second context information and generating the ranked list of applications based on which of the two or more applications selected in selecting operation <b>204</b> are most relevant to the search terms and the first context information. In other words, the user's desired category or type of application along with context information about the UE are compared to context information about the applications that the method selected as potential candidates for download and install on the UE.</p>
<p id="p-0094" num="0093">The first and second context information can both be stored in a memory of the remote server system and can be accessed by a processor in order to analyze and use the first and second context information. As described earlier, the remote server system can comprise any one or more components commonly used to implement one or more remote servers such as server racks, memory, and processors.</p>
<p id="p-0095" num="0094">The illustrated operations are not limited to the order indicated. For instance, the first receiving operation <b>202</b> and the second receiving operation <b>206</b> can overlap in time, take place simultaneously, or the second receiving operation <b>206</b> can occur first. As another example, the accessing operation <b>210</b> can take place at the same time as the receiving operations <b>202</b>, <b>206</b> and the converting operation <b>208</b>.</p>
<p id="p-0096" num="0095">In alternative embodiments, the user may not provide search terms. Instead, the ranking can be generated automatically in response to an indicator from the UE. A user action may trigger the indicator. For instance, where a user opens an app store, the UE may automatically transmit context data or first context information to the remote server system. The remote server system may receive the data or first context information, access second context information associated with a set of apps, and provide a ranked list of applications to the UE for display on an initial page of the app store that the user sees. In other words, the ranking can be triggered by a user search or merely a user action.</p>
<p id="p-0097" num="0096"><figref idref="DRAWINGS">FIG. 3</figref> illustrates a UE <b>300</b> having a user interface <b>302</b> where the apps can be searched, viewed in a ranked order, and selected for purchase and/or download. The user interface (UI) <b>302</b> includes a list of five visible apps (many others are off screen) that have been returned as ranked search results in response to a user request for apps.</p>
<p id="p-0098" num="0097">Whether the user provided specific context requests (e.g., location, time, motion type) or not, the results are ranked based on context information. In this case, between a name of the app (e.g., RANDOM APP or BEST APP) and a cost of the app (e.g., FREE or $0.99) three of the apps show a distance (e.g., 0:06 mi). This distance can represent a distance that the user is from a location associated with each app. These distances can be based on the same mode of transportation (e.g., driving) or can be based on the optimum mode of transportation for the route selected for each app. As seen, the closest app, in terms of distance, is RANDOM APP, which can be reached in 0.6 miles. The second-highest-ranked app, BEST APP, can be reached in 0.15 miles. In this embodiment, user ratings as indicated by stars, show that RANDOM APP has received poorer user ratings than BEST APP, yet because it is closer in terms of location context information describing location, RANDOM APP is ranked higher than BEST APP.</p>
<p id="p-0099" num="0098">Yet, one will recognize that while context information may be the dominant weight in a ranking, other factors such as cost and user rating can still affect the ranking. For instance, BEST APP is ranked higher than JAMS APP, even though JAMS APP can be reached in less distance than BEST APP. This may be because JAMS APP must be paid for (e.g., $0.99) and BEST APP is free. Thus, where there is only a slight difference in the location context information associated with two apps, another factor, such as cost in this case, may determine the ranking between the two. This despite the fact that location has greater weight than cost in this illustration.</p>
<p id="p-0100" num="0099">Some apps can be ranked lower merely because they do not include location context information. For instance, THE BUY ME APP has received putrid reviews compared to JAMS APP, and they both cost the same, yet JAMS APP is ranked higher because it has location context information, whereas THE BUY ME APP does not.</p>
<p id="p-0101" num="0100">The UI <b>302</b> also includes category selection buttons, such as &#x201c;New&#x201d; and &#x201c;Timely Apps.&#x201d; The &#x201c;New&#x201d; button can be used to put recently uploaded apps at the top of the ranking. The ranking of apps may be heavily weighted by context information describing location. The &#x201c;Timely Apps&#x201d; button may alter this weighting to favor apps associated with context information describing a time that is relevant to the user. On the other hand, the &#x201c;Timely Apps&#x201d; button may alter the weighting such that only time context information and no location context information is considered in the ranking.</p>
<p id="p-0102" num="0101">The distance indicator could be replaced by a time indicator representing a time to travel to each location associated with an app. The ranking could also be based on a time of travel rather than a distance of travel.</p>
<p id="p-0103" num="0102"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a UE <b>400</b> having a user interface <b>402</b> where the apps can be searched, viewed in a ranked order, and selected for purchase and/or download. The user interface (UI) <b>402</b> includes a list of five visible apps (many others are off screen) that have been returned as ranked search results in response to a user request for apps.</p>
<p id="p-0104" num="0103">Whether the user provided specific context requests (e.g., location, time, motion type) or not, the results are ranked based on context information. In this case, between a name of the app (e.g., RANDOM APP or BEST APP) and a cost of the app (e.g., FREE or $0.99) three of the apps show a time (e.g., 0:06 hrs). This time can represent a time of travel or a time until the app is most relevant (e.g., the opening of The Fast and The Furious <b>9</b>) or a time until the app is no longer relevant (e.g., the end of Happy Hour at Moe's Murderous Margaritas). As seen, the closest app, in terms of time, is RANDOM APP, which will be most relevant (or no longer relevant) in six minutes. The second-highest-ranked app, BEST APP, will be most relevant in one hour and 15 minutes. In this embodiment, user ratings as indicated by stars, show that RANDOM APP has received poorer user ratings than BEST APP, yet because it is more relevant in terms of time, RANDOM APP is ranked higher than BEST APP.</p>
<p id="p-0105" num="0104">The ranking of apps may be heavily weighted by context information describing time. The &#x201c;Nearby Apps&#x201d; button may alter this weighting to favor apps associated with context information describing a location that is relevant to the user. On the other hand, the &#x201c;Nearby Apps&#x201d; button may alter the weighting such that only location context information and no time context information is considered in the ranking.</p>
<p id="p-0106" num="0105">The systems and methods described herein can be implemented in a machine such as a computer system in addition to the specific physical devices described herein. <figref idref="DRAWINGS">FIG. 5</figref> shows a diagrammatic representation of one embodiment of a machine in the exemplary form of a computer system <b>500</b> within which a set of instructions can execute for causing a device to perform or execute any one or more of the aspects and/or methodologies of the present disclosure. The components in <figref idref="DRAWINGS">FIG. 5</figref> are examples only and do not limit the scope of use or functionality of any hardware, software, embedded logic component, or a combination of two or more such components implementing particular embodiments.</p>
<p id="p-0107" num="0106">Computer system <b>500</b> may include a processor <b>501</b>, a memory <b>503</b>, and a storage <b>508</b> that communicate with each other, and with other components, via a bus <b>540</b>. The bus <b>540</b> may also link a display <b>532</b>, one or more input devices <b>533</b> (which may, for example, include a keypad, a keyboard, a mouse, a stylus, etc.), one or more output devices <b>534</b>, one or more storage devices <b>535</b>, and various tangible storage media <b>536</b>. All of these elements may interface directly or via one or more interfaces or adaptors to the bus <b>540</b>. For instance, the various tangible storage media <b>536</b> can interface with the bus <b>540</b> via storage medium interface <b>526</b>. Computer system <b>500</b> may have any suitable physical form, including but not limited to one or more integrated circuits (ICs), printed circuit boards (PCBs), mobile handheld devices (such as mobile telephones or PDAs), laptop or notebook computers, distributed computer systems, computing grids, or servers.</p>
<p id="p-0108" num="0107">Processor(s) <b>501</b> (or central processing unit(s) (CPU(s))) optionally contains a cache memory unit <b>502</b> for temporary local storage of instructions, data, or computer addresses. Processor(s) <b>501</b> are configured to assist in execution of computer readable instructions. Computer system <b>500</b> may provide functionality as a result of the processor(s) <b>501</b> executing software embodied in one or more tangible computer-readable storage media, such as memory <b>503</b>, storage <b>508</b>, storage devices <b>535</b>, and/or storage medium <b>536</b>. The computer-readable media may store software that implements particular embodiments, and processor(s) <b>501</b> may execute the software. Memory <b>503</b> may read the software from one or more other computer-readable media (such as mass storage device(s) <b>535</b>, <b>536</b>) or from one or more other sources through a suitable interface, such as network interface <b>520</b>. The software may cause processor(s) <b>501</b> to carry out one or more processes or one or more steps of one or more processes described or illustrated herein. Carrying out such processes or steps may include defining data structures stored in memory <b>503</b> and modifying the data structures as directed by the software.</p>
<p id="p-0109" num="0108">The memory <b>503</b> may include various components (e.g., machine readable media) including, but not limited to, a random access memory component (e.g., RAM <b>504</b>) (e.g., a static RAM &#x201c;SRAM&#x201d;, a dynamic RAM &#x201c;DRAM, etc.), a read-only component (e.g., ROM <b>505</b>), and any combinations thereof. ROM <b>505</b> may act to communicate data and instructions unidirectionally to processor(s) <b>501</b>, and RAM <b>504</b> may act to communicate data and instructions bidirectionally with processor(s) <b>501</b>. ROM <b>505</b> and RAM <b>504</b> may include any suitable tangible computer-readable media described below. In one example, a basic input/output system <b>506</b> (BIOS), including basic routines that help to transfer information between elements within computer system <b>500</b>, such as during start-up, may be stored in the memory <b>503</b>.</p>
<p id="p-0110" num="0109">Fixed storage <b>508</b> is connected bidirectionally to processor(s) <b>501</b>, optionally through storage control unit <b>507</b>. Fixed storage <b>508</b> provides additional data storage capacity and may also include any suitable tangible computer-readable media described herein. Storage <b>508</b> may be used to store operating system <b>509</b>, EXECs <b>510</b> (executables), data <b>511</b>, APV applications <b>512</b> (application programs), and the like. Often, although not always, storage <b>508</b> is a secondary storage medium (such as a hard disk) that is slower than primary storage (e.g., memory <b>503</b>). Storage <b>508</b> can also include an optical disk drive, a solid-state memory device (e.g., flash-based systems), or a combination of any of the above. Information in storage <b>508</b> may, in appropriate cases, be incorporated as virtual memory in memory <b>503</b>.</p>
<p id="p-0111" num="0110">In one example, storage device(s) <b>535</b> may be removably interfaced with computer system <b>500</b> (e.g., via an external port connector (not shown)) via a storage device interface <b>525</b>. Particularly, storage device(s) <b>535</b> and an associated machine-readable medium may provide nonvolatile and/or volatile storage of machine-readable instructions, data structures, program modules, and/or other data for the computer system <b>500</b>. In one example, software may reside, completely or partially, within a machine-readable medium on storage device(s) <b>535</b>. In another example, software may reside, completely or partially, within processor(s) <b>501</b>.</p>
<p id="p-0112" num="0111">Bus <b>540</b> connects a wide variety of subsystems. Herein, reference to a bus may encompass one or more digital signal lines serving a common function, where appropriate. Bus <b>540</b> may be any of several types of bus structures including, but not limited to, a memory bus, a memory controller, a peripheral bus, a local bus, and any combinations thereof, using any of a variety of bus architectures. As an example and not by way of limitation, such architectures include an Industry Standard Architecture (ISA) bus, an Enhanced ISA (EISA) bus, a Micro Channel Architecture (MCA) bus, a Video Electronics Standards Association local bus (VLB), a Peripheral Component Interconnect (PCI) bus, a PCI-Express (PCI-X) bus, an Accelerated Graphics Port (AGP) bus, HyperTransport (HTX) bus, serial advanced technology attachment (SATA) bus, and any combinations thereof.</p>
<p id="p-0113" num="0112">Computer system <b>500</b> may also include an input device <b>533</b>. In one example, a user of computer system <b>500</b> may enter commands and/or other information into computer system <b>500</b> via input device(s) <b>533</b>. Examples of an input device(s) <b>533</b> include, but are not limited to, an alpha-numeric input device (e.g., a keyboard), a pointing device (e.g., a mouse or touchpad), a touchpad, a joystick, a gamepad, an audio input device (e.g., a microphone, a voice response system, etc.), an optical scanner, a video or still image capture device (e.g., a camera), and any combinations thereof. Input device(s) <b>533</b> may be interfaced to bus <b>540</b> via any of a variety of input interfaces <b>523</b> (e.g., input interface <b>523</b>) including, but not limited to, serial, parallel, game port, USB, FIREWIRE, THUNDERBOLT, or any combination of the above.</p>
<p id="p-0114" num="0113">In particular embodiments, when computer system <b>500</b> is connected to network <b>530</b>, computer system <b>500</b> may communicate with other devices, specifically mobile devices and enterprise systems, connected to network <b>530</b>. Communications to and from computer system <b>500</b> may be sent through network interface <b>520</b>. For example, network interface <b>520</b> may receive incoming communications (such as requests or responses from other devices) in the form of one or more packets (such as Internet Protocol (IP) packets) from network <b>530</b>, and computer system <b>500</b> may store the incoming communications in memory <b>503</b> for processing. Computer system <b>500</b> may similarly store outgoing communications (such as requests or responses to other devices) in the form of one or more packets in memory <b>503</b> and communicated to network <b>530</b> from network interface <b>520</b>. Processor(s) <b>501</b> may access these communication packets stored in memory <b>503</b> for processing.</p>
<p id="p-0115" num="0114">Examples of the network interface <b>520</b> include, but are not limited to, a network interface card, a modem, and any combination thereof. Examples of a network <b>530</b> or network segment <b>530</b> include, but are not limited to, a wide area network (WAN) (e.g., the Internet, an enterprise network), a local area network (LAN) (e.g., a network associated with an office, a building, a campus or other relatively small geographic space), a telephone network, a direct connection between two computing devices, and any combinations thereof. A network, such as network <b>530</b>, may employ a wired and/or a wireless mode of communication. In general, any network topology may be used.</p>
<p id="p-0116" num="0115">Information and data can be displayed through a display <b>532</b>. Examples of a display <b>532</b> include, but are not limited to, a liquid crystal display (LCD), an organic liquid crystal display (OLED), a cathode ray tube (CRT), a plasma display, and any combinations thereof. The display <b>532</b> can interface to the processor(s) <b>501</b>, memory <b>503</b>, and fixed storage <b>508</b>, as well as other devices, such as input device(s) <b>533</b>, via the bus <b>540</b>. The display <b>532</b> is linked to the bus <b>540</b> via a video interface <b>522</b>, and transport of data between the display <b>532</b> and the bus <b>540</b> can be controlled via the graphics control <b>521</b>.</p>
<p id="p-0117" num="0116">In addition to a display <b>532</b>, computer system <b>500</b> may include one or more other peripheral output devices <b>534</b> including, but not limited to, an audio speaker, a printer, and any combinations thereof. Such peripheral output devices may be connected to the bus <b>540</b> via an output interface <b>524</b>. Examples of an output interface <b>524</b> include, but are not limited to, a serial port, a parallel connection, a USB port, a FIREWIRE port, a THUNDERBOLT port, and any combinations thereof.</p>
<p id="p-0118" num="0117">In addition or as an alternative, computer system <b>500</b> may provide functionality as a result of logic hardwired or otherwise embodied in a circuit, which may operate in place of or together with software to execute one or more processes or one or more steps of one or more processes described or illustrated herein. Reference to software in this disclosure may encompass logic, and reference to logic may encompass software. Moreover, reference to a computer-readable medium may encompass a circuit (such as an IC) storing software for execution, a circuit embodying logic for execution, or both, where appropriate. The present disclosure encompasses any suitable combination of hardware, software, or both.</p>
<p id="p-0119" num="0118">Those of skill in the art would understand that information and signals may be represented using any of a variety of different technologies and techniques. For example, data, instructions, commands, information, signals, bits, symbols, and chips that may be referenced throughout the above description may be represented by voltages, currents, electromagnetic waves, magnetic fields or particles, optical fields or particles, or any combination thereof.</p>
<p id="p-0120" num="0119">Those of skill would further appreciate that the various illustrative logical blocks, modules, circuits, and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware, computer software, or combinations of both. To clearly illustrate this interchangeability of hardware and software, various illustrative components, blocks, modules, circuits, and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application, but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.</p>
<p id="p-0121" num="0120">The various illustrative logical blocks, modules, and circuits described in connection with the embodiments disclosed herein may be implemented or performed with a general purpose processor, a digital signal processor (DSP), an application specific integrated circuit (ASIC), a field programmable gate array (FPGA) or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor, but in the alternative, the processor may be any conventional processor, controller, and microcontroller. A processor may also be implemented as a combination of computing devices, e.g., a combination of a DSP and a microprocessor, a plurality of microprocessors, one or more microprocessors in conjunction with a DSP core, or any other such configuration.</p>
<p id="p-0122" num="0121">The steps of a method or algorithm described in connection with the embodiments disclosed herein may be embodied directly in hardware, in a software module executed by a processor, or in a combination of the two. A software module may reside in RAM memory, flash memory, ROM memory, EPROM memory, EEPROM memory, registers, hard disk, a removable disk, a CD-ROM, or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such the processor can read information from, and write information to, the storage medium. In the alternative, the storage medium may be integral to the processor. The processor and the storage medium may reside in an ASIC. The ASIC may reside in a user terminal. In the alternative, the processor and the storage medium may reside as discrete components in a user terminal.</p>
<p id="p-0123" num="0122">While the method steps described herein may have been discussed in a particular order, one of skill in the art will recognize that many method steps can be carried out in a different order and overlap in time without departing from the spirit of this disclosure.</p>
<p id="p-0124" num="0123">The previous description of the disclosed embodiments is provided to enable any person skilled in the art to make or use the present invention. Various modifications to these embodiments will be readily apparent to those skilled in the art, and the generic principles defined herein may be applied to other embodiments without departing from the spirit or scope of the invention. Thus, the present invention is not intended to be limited to the embodiments shown herein but is to be accorded the widest scope consistent with the principles and novel features disclosed herein.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A remote wireless server system comprising:
<claim-text>a context information server having:
<claim-text>a context manager application that:
<claim-text>receives and stores search terms describing desired applications; and</claim-text>
<claim-text>receives and stores context data associated with a user equipment describing a location or type of motion of the user equipment and/or a time when the search terms were generated; and</claim-text>
</claim-text>
<claim-text>a context information processor that analyzes and converts the context data into a first context information associated with the user equipment; and</claim-text>
</claim-text>
<claim-text>an application ranking application running on an application ranking server, the application ranking application:
<claim-text>comparing the search terms and the first context information with a second context information associated with two or more applications, where the second context information includes a number of downloads or an amount of usage of each of the two or more applications that occurred:
<claim-text>within a radius of a location;</claim-text>
<claim-text>within a time range of or surrounding a time; or</claim-text>
<claim-text>while other users were engaged in a type of motion;</claim-text>
<claim-text>wherein the radius, location, time range, time, or type of motion is autonomously collected and provided by one or more application developers; and</claim-text>
</claim-text>
<claim-text>ranking the two or more applications based on the comparing to generate a ranked list of applications selected from the two or more applications.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The remote wireless system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the autonomously collected data has a greater impact on the second context information.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The remote wireless system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the ranking favors applications where the one or more application developers has provided one or more of the location, radius, time, time range, or type of motion.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The remote wireless system of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the ranking is inversely related to a magnitude of the radius or a magnitude of the time range provided by the one or more application developers.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. A method for ranking apps for use on a wireless communications device comprising:
<claim-text>receiving, via a network interface, search terms from a user equipment;</claim-text>
<claim-text>selecting, via a processor, two or more applications from an application library as those applications most relevant to the search terms;</claim-text>
<claim-text>receiving, via the network interface, context data from the user equipment describing a location or type of motion of the user equipment and/or a time when the search terms were generated;</claim-text>
<claim-text>converting, via the processor, the context data to a first context information;</claim-text>
<claim-text>accessing, in a memory, a second context information describing the two or more applications, where the second context information includes a number of downloads or an amount of usage of each of the two or more applications that occurred:
<claim-text>within a radius of a location;</claim-text>
<claim-text>within a time range of or surrounding a time; or</claim-text>
<claim-text>while other users were engaged in a type of motion; and</claim-text>
</claim-text>
<claim-text>wherein the radius, location, time range, time, or type of motion is provided by one or more application developers;</claim-text>
<claim-text>comparing, via the processor, the search terms and the first context information with the second context information to generate a ranked list of applications based on which of the two or more applications are most relevant to the search terms and the first context information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the radius, time range, time, and type of motion are indicated by the first context information.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the radius, time range, time, and type of motion are indicated by the search terms.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The remote wireless system of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the search terms describe a category of applications.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein part of the second context information is provided by application developers.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein part of the second context information is generated via analysis of the two or more applications.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the application ranking application gives greater weight to that part of the second context information generated via analysis of the two or more applications than that part provided by application developers.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A user equipment comprising:
<claim-text>a means for generating first context data describing a time, location, and type of motion of the user equipment;</claim-text>
<claim-text>a means for detecting an input of search terms describing desired applications;</claim-text>
<claim-text>a means for transmitting the first context data and the search terms to a context information server;</claim-text>
<claim-text>a means for receiving a ranked list of applications from an application ranking server;</claim-text>
<claim-text>wherein the applications are ranked based in part on second context information including a number of downloads or an amount of usage of each application that occurred:
<claim-text>within a three-dimensional radius of a location described by the search terms;</claim-text>
<claim-text>close to a time described by the search terms; or</claim-text>
<claim-text>while other users were engaged in a type of motion described by the search terms;</claim-text>
</claim-text>
<claim-text>a means for displaying the ranked list of applications to a user;</claim-text>
<claim-text>a means for receiving a user selection of one or more applications from the ranked list of applications; and</claim-text>
<claim-text>a means for downloading and installing the one or more applications on the user equipment.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The user equipment of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the location, time, or type of motion is described by the first context information.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the radius, location, time, or type of motion is autonomously collected.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A non-transitory, tangible computer readable storage medium, encoded with processor readable instructions to perform a method for ranking applications for download and install to a user equipment, the method comprising:
<claim-text>receiving search terms from a user equipment;</claim-text>
<claim-text>selecting two or more applications from an application library as those applications most relevant to the search terms;</claim-text>
<claim-text>receiving context data from the user equipment describing a location or type of motion of the user equipment and/or a time when the search terms were generated;</claim-text>
<claim-text>converting the context data to a first context information;</claim-text>
<claim-text>accessing a second context information describing the two or more applications, where the second context information includes a number of downloads or an amount of usage of each of the two or more applications that occurred within a three-dimensional radius of a location; and</claim-text>
<claim-text>comparing the search terms and the first context information with the second context information to generate a ranked list of applications based on which of the two or more applications are most relevant to the search terms and the first context information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The computer readable media of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the location is indicated by the first context information.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The computer readable media of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the location is indicated by the search terms.</claim-text>
</claim>
</claims>
</us-patent-grant>
