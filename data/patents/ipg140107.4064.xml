<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625133-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625133</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12855537</doc-number>
<date>20100812</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2009-192236</doc-number>
<date>20090821</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>561</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>3</main-group>
<subgroup>12</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>K</subclass>
<main-group>15</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>358  115</main-classification>
<further-classification>358  113</further-classification>
<further-classification>358  118</further-classification>
<further-classification>358  19</further-classification>
<further-classification>358  11</further-classification>
</classification-national>
<invention-title id="d2e71">Print data processing apparatus, print data processing method, and storage medium</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5652711</doc-number>
<kind>A</kind>
<name>Vennekens</name>
<date>19970700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  117</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6662270</doc-number>
<kind>B1</kind>
<name>Sans et al.</name>
<date>20031200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711118</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>8054474</doc-number>
<kind>B2</kind>
<name>Torii</name>
<date>20111100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  111</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2002/0163664</doc-number>
<kind>A1</kind>
<name>Sugano</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  115</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2004/0095596</doc-number>
<kind>A1</kind>
<name>Rijavec</name>
<date>20040500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  115</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2004/0197124</doc-number>
<kind>A1</kind>
<name>Klassen</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>400 70</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2008/0007754</doc-number>
<kind>A1</kind>
<name>Torii</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  112</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2009/0067004</doc-number>
<kind>A1</kind>
<name>Mazur</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  117</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2010/0277757</doc-number>
<kind>A1</kind>
<name>Smith</name>
<date>20101100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  115</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>JP</country>
<doc-number>H05-201077</doc-number>
<kind>A</kind>
<date>19930800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>JP</country>
<doc-number>2002248829</doc-number>
<kind>A</kind>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>JP</country>
<doc-number>2008015605</doc-number>
<kind>A</kind>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>WO</country>
<doc-number>2009038670</doc-number>
<kind>A1</kind>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>3</number-of-claims>
<us-exemplary-claim>2</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>17</number-of-drawing-sheets>
<number-of-figures>19</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110043855</doc-number>
<kind>A1</kind>
<date>20110224</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Ono</last-name>
<first-name>Takashi</first-name>
<address>
<city>Inagi</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Ono</last-name>
<first-name>Takashi</first-name>
<address>
<city>Inagi</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Canon U.S.A., Inc. IP Division</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Canon Kabushiki Kaisha</orgname>
<role>03</role>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Poon</last-name>
<first-name>King</first-name>
<department>2675</department>
</primary-examiner>
<assistant-examiner>
<last-name>Peren</last-name>
<first-name>Vincent</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A print data processing apparatus includes a first processor and a second processor. The first processor rasterizes a resource of print data corresponding to pages that precede an m-th page, in a case where a plurality of pages of print data share the resource, and generates intermediate data of the m-th page using the rasterized resource without generating any intermediate data of the pages that precede the m-th page. The second processor rasterizes a resource of print data corresponding to pages that precede an n-th page without using a resource rasterized by the first processor corresponding to pages that precede an m-th page and generates intermediate data of the n-th page using the rasterized resource without generating any intermediate data of the pages that precede the n-th page, wherein the n-th page is one of pages that follow the m-th page.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="181.86mm" wi="174.92mm" file="US08625133-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="194.06mm" wi="168.15mm" file="US08625133-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="147.83mm" wi="161.80mm" file="US08625133-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="220.39mm" wi="185.50mm" file="US08625133-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="229.79mm" wi="154.09mm" file="US08625133-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="253.24mm" wi="183.90mm" file="US08625133-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="244.86mm" wi="179.32mm" file="US08625133-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="250.11mm" wi="183.90mm" file="US08625133-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="249.34mm" wi="174.41mm" file="US08625133-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="244.09mm" wi="171.96mm" file="US08625133-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="226.99mm" wi="175.51mm" file="US08625133-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="243.76mm" wi="150.28mm" file="US08625133-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="131.32mm" wi="103.63mm" file="US08625133-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="88.98mm" wi="134.87mm" file="US08625133-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="208.03mm" wi="153.42mm" file="US08625133-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="260.27mm" wi="154.77mm" orientation="landscape" file="US08625133-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="257.47mm" wi="151.64mm" orientation="landscape" file="US08625133-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="251.46mm" wi="148.17mm" orientation="landscape" file="US08625133-20140107-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0002" num="0001">1. Field of the Invention</p>
<p id="p-0003" num="0002">The present invention relates to a print data processing apparatus, a print data processing method, and a storage medium.</p>
<p id="p-0004" num="0003">2. Description of the Related Art</p>
<p id="p-0005" num="0004">When an image forming apparatus (e.g., a copying machine) performs an image output operation, the image forming apparatus generates intermediate data based on an analysis on a Page Description Language (PDL) serving as print data and rasterizes the intermediate data into raster data. The PDL can define rendering commands for respective data, such as characters and graphics data.</p>
<p id="p-0006" num="0005">The PDLs can be classified into various types. For example, if a PDL includes characters and graphics data that are independent in each page and there is no dependency between characters and graphics data of different pages, the PDL is referred to as an &#x201c;independent PDL.&#x201d;</p>
<p id="p-0007" num="0006">Further, if the above-described data can be shared among a plurality of pages included in the PDL, the PDL is referred to as a &#x201c;non-independent PDL.&#x201d; The above-described data is generally referred to as a &#x201c;resource.&#x201d; Further, if the independent PDL includes directly accessible head data of a page, the PDL is referred to as a &#x201c;directly accessible PDL.&#x201d;</p>
<p id="p-0008" num="0007">The recent progress in hardware technologies has introduced multicore processors, which are installable in a Multi Function Peripheral (MFP). The multicore processors enable the MFP to realize parallel operations of a plurality of functions (e.g., copy and print) that can be smoothly performed.</p>
<p id="p-0009" num="0008">A printing control technique discussed in Japanese Patent Application Laid-Open No. 05-201077 uses multicore processors to speedily perform drawing processing based on a PDL.</p>
<p id="p-0010" num="0009">The above-described printing control technique discussed in Japanese Patent Application Laid-Open No. 05-201077 includes reading a row of print commands (PDL) that extends on a plurality of pages when a PDL is allocated to different processors on a page-by-page basis, and executing empty drawing for setting drawing attribute parameters of each page without performing actual drawing (real drawing). The above-described conventional printing control technique further includes causing each processor to execute real drawing processing according to the row of print commands when the empty drawing of a page has been completed.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0011" num="0010">A print data processing apparatus includes a first processor configured to rasterize a resource of print data corresponding to pages that precede an m-th page, in a case where a plurality of pages of print data share the resource, and configured to generate intermediate data of the m-th page using the rasterized resource without generating any intermediate data of the pages that precede the m-th page, and a second processor configured to rasterize a resource of print data corresponding to pages that precede an n-th page and configured to generate intermediate data of the n-th page using the rasterized resource without generating any intermediate data of the pages that precede the n-th page, wherein the n-th page is one of pages that follow the m-th page.</p>
<p id="p-0012" num="0011">Further features and aspects of the present invention will become apparent from the following detailed description of exemplary embodiments with reference to the attached drawings.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0013" num="0012">The accompanying drawings, which are incorporated in and constitute a part of the specification, illustrate exemplary embodiments, features, and aspects of the invention and, together with the description, serve to explain the principles of the invention.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram illustrating an example of a system configuration of an image forming apparatus according to a first exemplary embodiment of the present invention.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram illustrating an example of a module configuration of the image forming apparatus according to the first exemplary embodiment of the present invention.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 3</figref> is a flowchart illustrating an example of print processing that can be performed by the image forming apparatus according to the first exemplary embodiment.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 4</figref> is a flowchart illustrating an example of PDL determination processing that can be performed by a PDL analysis program according to the first exemplary embodiment of the present invention.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart illustrating an example scheduling for a page non-independent PDL according to the first exemplary embodiment of the present invention.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 6</figref> is a flowchart illustrating an example scheduling for a page independent PDL according to the first exemplary embodiment of the present invention.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 7</figref> is a flowchart illustrating an example scheduling for a page directly accessible PDL according to the first exemplary embodiment of the present invention.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 8</figref> is a flowchart illustrating an example of analysis processing for a page non-independent PDL according to the first exemplary embodiment of the present invention.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 9</figref> is a flowchart illustrating an example of analysis processing for a page independent PDL according to the first exemplary embodiment of the present invention.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 10</figref> is a flowchart illustrating an example of analysis processing for a page directly accessible PDL according to the first exemplary embodiment of the present invention.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 11</figref> is a flowchart illustrating an example of DL generation processing according to the first exemplary embodiment of the present invention.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 12</figref> is a flowchart illustrating an example of rasterization processing according to the first exemplary embodiment of the present invention.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 13</figref> illustrates an example of a PDL management table according to the first exemplary embodiment of the present invention.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIGS. 14A</figref>, <b>14</b>B, and <b>14</b>C illustrate examples of a page management table according to the first exemplary embodiment of the present invention.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIGS. 15A</figref>, <b>15</b>B, and <b>15</b>C illustrate examples of a relationship between an example module control and required processing time in scheduling processing according to the first exemplary embodiment of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DESCRIPTION OF THE EMBODIMENTS</heading>
<p id="p-0029" num="0028">Various exemplary embodiments, features, and aspects of the invention will be described in detail below with reference to the drawings. In the context of each exemplary embodiment of the present invention, the term &#x201c;PDL&#x201d; is referred to as print data usable in a document printing operation, in which positional information and format information of characters and graphics are defined beforehand. The term &#x201c;resource&#x201d; is referred to as data repetitively used when a PDL including a plurality of pages is converted into intermediate data.</p>
<p id="p-0030" num="0029">Rasterization of the resource includes, for example, conversion of compressed image data into a bitmap image or conversion of a character code into a character pattern (i.e., a character image). The term &#x201c;non-independent PDL&#x201d; represents a PDL including a plurality of pages that share a resource. The term &#x201c;independent PDL&#x201d; represents a PDL including characters and graphics data defined for each page and includes a plurality of pages that do not need to share a resource.</p>
<p id="p-0031" num="0030">The term &#x201c;directly accessible PDL&#x201d; represents a PDL that includes a leading analysis command of each page that is directly accessible and includes a plurality of pages that do not need to share a resource. The term &#x201c;independent PDL&#x201d; represents a PDL that does not enable to directly access a leading analysis command of each page. The term &#x201c;analysis&#x201d; is referred to as performing processing for reading a print command of a PDL and identifying the type of the read print command.</p>
<p id="p-0032" num="0031">A configuration of an image forming apparatus according to a first exemplary embodiment is described below in detail with reference to <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram illustrating an example of a system configuration of an image forming apparatus <b>102</b> that performs print data processing according to the first exemplary embodiment of the present invention. The image forming apparatus <b>102</b> illustrated in <figref idref="DRAWINGS">FIG. 1</figref> includes a network interface (I/F) <b>202</b>, a random access memory (RAM) <b>203</b>, a read only memory (ROM) <b>208</b>, and a hard disc drive (HDD) <b>217</b>. Further, the image forming apparatus <b>102</b> includes a central processing unit <b>1</b> (CPU<b>1</b>) <b>218</b>, a CPU<b>2</b> <b>219</b>, an engine I/F <b>212</b>, and a printer engine <b>213</b>.</p>
<p id="p-0034" num="0033">The network I/F <b>202</b> is a functional unit configured to input and output information from and to an external device. For example, the network I/F <b>202</b> can receive a PDL transmitted from an external device via a network <b>104</b>.</p>
<p id="p-0035" num="0034">The RAM <b>203</b> is a functional unit configured to temporarily store various kinds of information. More specifically, the RAM <b>203</b> includes a reception buffer <b>204</b>, a work memory <b>205</b>, a frame buffer <b>206</b>, a raster memory <b>207</b>, and a shared memory <b>220</b>.</p>
<p id="p-0036" num="0035">The reception buffer <b>204</b> serves as a storage area capable of storing each PDL received from an external device via the network I/F <b>202</b>. The work memory <b>205</b> serves as a work storage area that is temporarily usable when the received PDL is converted into an intermediate code. The frame buffer <b>206</b> serves as a storage area capable of storing the intermediate code converted in the image forming apparatus <b>102</b>. The raster memory <b>207</b> serves as a storage area capable of storing the data having been subjected to rendering processing after being rasterized from the intermediate code.</p>
<p id="p-0037" num="0036">The shared memory <b>220</b> serves as a storage area capable of storing data generated through processing performed by the CPU<b>1</b> <b>218</b> or the CPU<b>2</b> <b>219</b> or both units according to programs stored in the ROM <b>208</b>. Further, when both units are accessible to the shared memory <b>220</b>, respective units can share the data stored in the shared memory <b>220</b>. For example, in a case where a resource is stored in the shared memory <b>220</b>, both units (CPU<b>1</b> <b>218</b> and CPU<b>2</b> <b>219</b>) can share the resource stored in the shared memory <b>220</b>.</p>
<p id="p-0038" num="0037">The ROM <b>208</b> is a functional unit configured to store control programs that can be executed by the CPU<b>1</b> <b>218</b> or the CPU<b>2</b> <b>219</b>, or both units, of the image forming apparatus <b>102</b> to perform processing. The ROM <b>208</b> includes a PDL analysis program <b>209</b>, a display list (DL) generation program <b>210</b> that generates intermediate data (i.e., a DL), a rasterization processing program <b>214</b>, and a page scheduler <b>215</b>.</p>
<p id="p-0039" num="0038">The PDL analysis program <b>209</b> is a program that can identify the type of each PDL that is read from the reception buffer <b>204</b>. The type of each PDL is discriminable as one of a plurality of predetermined types. Further, the PDL analysis program <b>209</b> can cause the CPU to execute PDL analysis processing according to the identified type of the PDL.</p>
<p id="p-0040" num="0039">The DL generation program <b>210</b> is a program that can generate intermediate data from the data analyzed by the PDL analysis program <b>209</b> and cause the CPU to execute processing for storing intermediate data into the frame buffer <b>206</b>.</p>
<p id="p-0041" num="0040">The rasterization processing program <b>214</b> is a program that can rasterize the intermediate data stored in the frame buffer <b>206</b> by rendering the same into bitmap data and cause the CPU to execute processing for storing the rasterized bitmap data into the raster memory <b>207</b>.</p>
<p id="p-0042" num="0041">The page scheduler <b>215</b> is a program that can request the CPU to execute page analysis processing and DL generation processing. More specifically, the page scheduler <b>215</b> requests the CPU<b>1</b> <b>218</b> and the CPU<b>2</b> <b>219</b> to execute the PDL analysis program <b>209</b> to analyze each page of a PDL and further execute the DL generation program <b>210</b> to generate a DL. The PDL analysis program <b>209</b> and the DL generation program <b>210</b> (i.e., the programs to be used to generate intermediate data based on print data) are hereinafter referred to as &#x201c;print data processing program.&#x201d;</p>
<p id="p-0043" num="0042">Further, the page scheduler <b>215</b> performs processing for identifying the type of a PDL received from an external device and allocating predetermined pages included in the PDL to two CPUs installed on the image forming apparatus <b>102</b> according to the identified type of the PDL. A detailed configuration of the page scheduler <b>215</b> is described below. Further, a third processor (not illustrated in the present exemplary embodiment), if provided as an additional CPU other than the CPU<b>1</b> <b>218</b> or the CPU<b>2</b> <b>219</b>, can execute the above-described programs stored in the ROM <b>208</b>.</p>
<p id="p-0044" num="0043">The CPU<b>1</b> <b>218</b> is operable as a first processor according to the present exemplary embodiment. The CPU<b>2</b> <b>219</b> is operable as a second processor according to the present exemplary embodiment. Each of the CPU<b>1</b> <b>218</b> and the CPU<b>2</b> <b>219</b> is a central processing unit (CPU) that can perform arithmetic processing and various controls to be performed by the image forming apparatus <b>102</b>. Respective units can execute a program loaded into the RAM <b>203</b> from the ROM <b>208</b> to perform predetermined data processing. Each CPU includes a &#x201c;core processor&#x201d;, i.e., an assembly including a command generator and a calculator that are integrally operable.</p>
<p id="p-0045" num="0044">The engine I/F <b>212</b> can input and output signals to and from the printer engine <b>213</b>. The printer engine <b>213</b> can perform print processing, which includes electro-photographically forming a latent image on a photosensitive drum based on image data, transferring a toner image onto a recording paper, and fixing the transferred toner image.</p>
<p id="p-0046" num="0045">Next, an example of processing to be performed by the page scheduler <b>215</b> according to the first exemplary embodiment of the present invention is described below. <figref idref="DRAWINGS">FIG. 2</figref> illustrates an example of a module configuration of the page scheduler <b>215</b>.</p>
<p id="p-0047" num="0046">In <figref idref="DRAWINGS">FIG. 2</figref>, an area encircled by a dotted line <b>302</b> includes the PDL analysis program <b>209</b> and the DL generation program <b>210</b>, which are executed by the CPU<b>1</b> <b>218</b> to perform PDL processing on a page-by-page basis. An area encircled by a dotted line <b>303</b> includes the PDL analysis program <b>209</b> and the DL generation program <b>210</b>, which are executed by the CPU<b>2</b> <b>219</b> to perform PDL processing on a page-by-page basis.</p>
<p id="p-0048" num="0047">The page scheduler <b>215</b> sends a control command <b>310</b> to the CPU<b>1</b> <b>218</b> to activate the PDL analysis program <b>209</b>. Similarly, the page scheduler <b>215</b> sends a control command <b>311</b> to the CPU<b>2</b> <b>219</b> to activate the PDL analysis program <b>209</b>. Further, the page scheduler <b>215</b> sends a control command <b>320</b> to the CPU<b>1</b> <b>218</b> to activate the DL generation program <b>210</b>. Similarly, the page scheduler <b>215</b> sends a control command <b>321</b> to the CPU<b>2</b> <b>219</b> to activate the DL generation program <b>210</b>.</p>
<p id="p-0049" num="0048">The page scheduler <b>215</b> can use mathematical function call and inter-process communication to perform the above-described controls. The PDL analysis program <b>209</b> that can be executed by the CPU<b>1</b> <b>218</b> reads a PDL stored in the reception buffer <b>204</b> according to the control command <b>310</b> received from the page scheduler <b>215</b> and executes the PDL analysis processing.</p>
<p id="p-0050" num="0049">The DL generation program <b>210</b> that can be executed by the CPU<b>1</b> <b>218</b> performs DL generation processing based on the control command <b>320</b> received from the page scheduler <b>215</b> and an analysis result sent from the PDL analysis program <b>209</b> and performs processing for storing a generated DL in the frame buffer <b>206</b>.</p>
<p id="p-0051" num="0050">The PDL analysis program <b>209</b> and the DL generation program <b>210</b> that can be executed by the CPU<b>2</b> <b>219</b> perform processing similar to those of the CPU<b>1</b> <b>218</b>. The above-described module configuration can realize PDL page parallel processing.</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 3</figref> is a flowchart illustrating an example of print processing that can be performed by the image forming apparatus <b>102</b> according to the first exemplary embodiment.</p>
<p id="p-0053" num="0052">In step S<b>1001</b>, the network I/F <b>202</b> receives a PDL transmitted via the network <b>104</b> from a PC connected to the network <b>104</b>. The received PDL is stored in the reception buffer <b>204</b>. In step S<b>1002</b>, the page scheduler <b>215</b> requests the PDL analysis program <b>209</b> to perform PDL determination processing to identify the type of the received PDL.</p>
<p id="p-0054" num="0053">In step S<b>1003</b>, the page scheduler <b>215</b> determines whether the PDL identified by the PDL analysis program <b>209</b> is a non-independent PDL. If it is determined that the identified PDL is a non-independent PDL (NO in step S<b>1003</b>), then in step S<b>1007</b>, the page scheduler <b>215</b> executes page scheduling processing for the non-independent PDL. If it is determined that the PDL identified by the PDL analysis program <b>209</b> is a page independent PDL (YES in step S<b>1003</b>), then in step S<b>1004</b>, the page scheduler <b>215</b> further determines whether the identified PDL is a PDL directly accessible to page head data.</p>
<p id="p-0055" num="0054">If it is determined that the determined PDL is not a directly accessible PDL (NO in step S<b>1004</b>), then in step S<b>1006</b>, the page scheduler <b>215</b> executes page scheduling processing for the page independent PDL. If it is determined that the determined PDL is a directly accessible PDL (YES in step S<b>1004</b>), then in step S<b>1005</b>, the page scheduler <b>215</b> executes page scheduling processing for the directly accessible PDL. As described above, appropriately executing the PDL analysis processing and the DL generation processing according to the type of each PDL is useful to enable a plurality of processors to appropriately perform drawing processing.</p>
<p id="p-0056" num="0055">For example, in a case where the PDL to be processed is an independent PDL or a directly accessible PDL, a plurality of pages included in the PDL do not share a resource. Therefore, it is unnecessary to perform processing in which a resource is shared by a plurality of PDL analysis processing. Hence, the CPU does not execute the processing in which a resource is shared by a plurality of PDL analysis processing.</p>
<p id="p-0057" num="0056">On the other hand, in a case where the PDL to be processed is a non-independent PDL, a plurality of pages included in the PDL share a resource. Therefore, it is necessary to perform processing in which a resource is shared by a plurality of PDL analysis processing. Therefore, in this case, the CPU executes the processing in which a resource is shared by a plurality of PDL analysis processing.</p>
<p id="p-0058" num="0057">Further, in a case where the PDL to be processed is a directly accessible PDL, it is unnecessary to perform PDL analysis processing for pages that precedes a target page. Therefore, a PDL analysis processing program does not perform PDL analysis processing for the pages that precedes the target page.</p>
<p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. 4</figref> is a flowchart illustrating an example of the PDL determination processing to be performed by the PDL analysis program <b>209</b> according to the first exemplary embodiment. The PDL analysis program <b>209</b> executes the following processing.</p>
<p id="p-0060" num="0059">In step S<b>1101</b>, the PDL analysis program <b>209</b> determines whether a PDL determination request is received from the page scheduler <b>215</b>. If it is determined that PDL determination request is received (YES in step S<b>1101</b>), then in step S<b>1102</b>, the PDL analysis program <b>209</b> reads stored data from the reception buffer <b>204</b>.</p>
<p id="p-0061" num="0060">In step S<b>1103</b>, the PDL analysis program <b>209</b> determines whether there is any undetermined PDL analysis processing in a PDL management table that is described below. If it is determined that the undetermined PDL analysis processing is present (YES in step S<b>1103</b>), then in step S<b>1104</b>, the PDL analysis program <b>209</b> analyzes a part of a print command of the target PDL. In step S<b>1105</b>, the PDL analysis program <b>209</b> determines whether the target PDL is analyzable data.</p>
<p id="p-0062" num="0061">If it is determined that the target PDL is analyzable data (YES in step S<b>1105</b>), then in step S<b>1106</b>, the PDL analysis program <b>209</b> sets the determined PDL analysis processing as PDL analysis processing to be executed. Then in step S<b>1107</b>, the PDL analysis program <b>209</b> returns the determined PDL to the page scheduler <b>215</b>. If it is determined that there in not any undetermined PDL analysis processing (NO in step S<b>1103</b>), then in step S<b>1110</b>, the PDL analysis program <b>209</b> sets prioritized PDL analysis processing, which is set beforehand, as analysis processing to be executed. Then, in step S<b>1111</b>, the PDL analysis program <b>209</b> returns the prioritized PDL to the page scheduler <b>215</b>.</p>
<p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. 13</figref> illustrates an example of the PDL management table that can be used for the PDL determination processing according to the present exemplary embodiment.</p>
<p id="p-0064" num="0063">A PDL management table <b>600</b> is a table that stores type information of each PDL and a pointer of PDL analysis processing <b>601</b>. The PDL analysis processing <b>601</b> includes a mathematical function that performs data analysis processing for each PDL. In the PDL determination processing, the PDL analysis program <b>209</b> executes analysis processing in order of PDL <b>1</b>, PDL<b>2</b> and PDLN and determines the PDL that can be analyzed.</p>
<p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. 14A</figref> illustrates an example of a page management table that can be used by the page scheduler <b>215</b> to perform page management according to the first exemplary embodiment.</p>
<p id="p-0066" num="0065">A page management table <b>500</b> is a page management table that is usable to manage a currently processed page. The page management table <b>500</b> includes an address <b>510</b> of page information <b>501</b> and the number of currently processed pages <b>511</b>. The page information <b>501</b> stores information of the currently processed page. The page information <b>501</b> includes a page ID <b>520</b> that identifies the currently processed page, a processing ID <b>521</b> that identifies processing currently applied to the page, and a link address <b>522</b> that is linked to the next page management list.</p>
<p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. 14B</figref> illustrates the page management table in an initialization state, according to which the address <b>510</b> of the page information is NULL and the number of currently processed pages <b>511</b> is equal to 0. <figref idref="DRAWINGS">FIG. 14C</figref> illustrates the page management table in a processing state, according to which the number of currently processed pages <b>511</b> is equal to 2 (namely, there are two pieces of page information) and the link address <b>522</b> of the final page information is NULL.</p>
<p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart illustrating an example page scheduling for a page non-independent PDL that can be performed by the page scheduler <b>215</b> according to the first exemplary embodiment. The PDL analysis program <b>209</b> executes the following processing.</p>
<p id="p-0069" num="0068">Further, it is assumed that an n-th page represents a page to be processed by the CPU<b>1</b> <b>218</b> and an m-th page represents a page to be processed by the CPU<b>2</b> <b>219</b>. Further, an x-th page is the next page of a page whose intermediate data is already generated by the CPU<b>1</b> <b>218</b> before the n-th page is processed. Further, a y-th page is the next page of a page whose intermediate data is already generated by the CPU<b>2</b> <b>219</b> before the m-th page is processed.</p>
<p id="p-0070" num="0069">In step S<b>1202</b>, the page scheduler <b>215</b> initializes a page counter Pcnt (i.e., Pcnt=0). Then, in step S<b>1203</b>, the page scheduler <b>215</b> initializes the page management table stored in the work memory <b>205</b>. In step S<b>1204</b>, the page scheduler <b>215</b> sends a job start notification to PDL analysis processing <b>1</b> and <b>2</b> of the PDL analysis program <b>209</b> and to DL generation processing <b>1</b> and <b>2</b> of the DL generation program <b>210</b>. In step S<b>1205</b>, the page scheduler <b>215</b> determines whether a page end notification is received from the DL generation processing <b>1</b> or the DL generation processing <b>2</b> of the DL generation program <b>210</b>.</p>
<p id="p-0071" num="0070">If it is determined that the page end notification is not received from the DL generation processing <b>1</b> or the DL generation processing <b>2</b> (NO instep S<b>1205</b>), then in step S<b>1206</b>, the page scheduler <b>215</b> determines whether a job end notification is received from the PDL analysis processing <b>1</b> or the PDL analysis processing <b>2</b> of the PDL analysis program <b>209</b>. If it is determined that the job end notification is not received from the PDL analysis processing <b>1</b> or the PDL analysis processing <b>2</b> (NO in step S<b>1206</b>), then in step S<b>1207</b>, the page scheduler <b>215</b> searches through the page management table stored in the work memory <b>205</b> and determines whether the PDL analysis processing <b>1</b> of the PDL analysis program <b>209</b> is in progress.</p>
<p id="p-0072" num="0071">If it is determined that the PDL analysis processing <b>1</b> of the PDL analysis program <b>209</b> is not in progress (NO in step S<b>1207</b>), then in step S<b>1210</b>, the page scheduler <b>215</b> increments the page counter Pcnt. In step S<b>1211</b>, the page scheduler <b>215</b> adds information of the page Pcnt to the page management table stored in the work memory <b>205</b>. For example, if the added page is the third page, m is set to 3.</p>
<p id="p-0073" num="0072">In step S<b>1212</b>, the page scheduler <b>215</b> requests the PDL analysis processing <b>1</b> of the PDL analysis program <b>209</b> to perform processing for the pages 1 to Pcnt. According to the above-described example, the PDL analysis processing is performed for the first to m-th pages. Further, in step S<b>1213</b>, the page scheduler <b>215</b> requests the DL generation processing <b>1</b> of the DL generation program <b>210</b> to skip the pages 1 to (Pcnt&#x2212;1). More specifically, the DL generation processing <b>1</b> of the DL generation program <b>210</b> does not generate any intermediate data of the pages 1 to (Pcnt&#x2212;1) (i.e., the first and second pages). Then, the DL generation processing <b>1</b> generates intermediate data based on the PDL of the page Pcnt (i.e., the m-th page).</p>
<p id="p-0074" num="0073">If it is determined that the PDL analysis processing <b>1</b> of the PDL analysis program <b>209</b> is in progress (YES in step S<b>1207</b>), then in step S<b>1208</b>, the page scheduler <b>215</b> searches through the page management table stored in the work memory <b>205</b> and determines whether the PDL analysis processing <b>2</b> of the PDL analysis program <b>209</b> is in progress. According to the above-described example, the PDL analysis processing <b>1</b> is performing the processing for the m-th page. If it is determined that the PDL analysis processing <b>2</b> of the PDL analysis program <b>209</b> is not in progress (NO instep S<b>1208</b>), then in step S<b>1220</b>, the page scheduler <b>215</b> increments the page counter Pcnt. In this case, the page counter Pcnt becomes 4 and n is set to 4.</p>
<p id="p-0075" num="0074">In step S<b>1221</b>, the page scheduler <b>215</b> adds information of the page Pcnt to the page management table stored in the work memory <b>205</b> (namely, the fourth page is added). In step S<b>1222</b>, the page scheduler <b>215</b> requests the PDL analysis processing <b>2</b> of the PDL analysis program <b>209</b> to perform processing for the pages 1 to Pcnt (i.e., the first to n-th pages). Further, in step S<b>1223</b>, the page scheduler <b>215</b> requests the DL generation processing <b>2</b> of the DL generation program <b>210</b> to skip the pages 1 to (Pcnt&#x2212;1) (i.e., the first to third pages). More specifically, the DL generation processing <b>2</b> of the DL generation program <b>210</b> does not generate any intermediate data of the pages 1 to (Pcnt&#x2212;1) (i.e., the first to third pages). Then, the DL generation processing <b>2</b> generates intermediate data based on the PDL of the page Pcnt (i.e., the n-th page).</p>
<p id="p-0076" num="0075">If it is determined that the page end notification is received from the DL generation processing <b>1</b> or the DL generation processing <b>2</b> (YES in step S<b>1205</b>), then in step S<b>1230</b>, the page scheduler <b>215</b> deletes the page information corresponding to the page notified by the page end notification from the page management table stored in the work memory <b>205</b>. In step S<b>1231</b>, the page scheduler <b>215</b> sends a DL storage destination related with the frame buffer <b>206</b> notified by the page end notification together with page information to the rasterization processing program <b>214</b> and requests the rasterization processing program <b>214</b> to perform the processing.</p>
<p id="p-0077" num="0076">If it is determined that the job end notification is received from the PDL analysis processing <b>1</b> or the PDL analysis processing <b>2</b> (YES in step S<b>1206</b>), then in step S<b>1240</b>, the page scheduler <b>215</b> determines whether any page being currently processed remains in the page management table of the work memory <b>205</b>. If it is determined that the page being currently processed is present (YES in step S<b>1240</b>), then in step S<b>1241</b>, the page scheduler <b>215</b> waits for a page end notification sent from the DL generation processing <b>1</b> or the DL generation processing <b>2</b> of the DL generation program <b>210</b>.</p>
<p id="p-0078" num="0077">If it is determined that the page end notification is received (YES in step S<b>1241</b>), then in step S<b>1242</b>, the page scheduler <b>215</b> deletes the page information corresponding to the page notified by the page end notification from the page management table stored in the work memory <b>205</b>. In step S<b>1243</b>, the page scheduler <b>215</b> sends a DL storage destination related with the frame buffer <b>206</b> notified by the page end notification together with page information to the rasterization processing program <b>214</b> and requests the rasterization processing program <b>214</b> to perform the processing.</p>
<p id="p-0079" num="0078">If it is determined that there is not any page remaining in the page management table (NO instep S<b>1240</b>), then in step S<b>1244</b>, the page scheduler <b>215</b> sends a job end notification to the PDL analysis processing <b>1</b> and <b>2</b> of the PDL analysis program <b>209</b> and to the DL generation processing <b>1</b> and <b>2</b> of the DL generation program <b>210</b>.</p>
<p id="p-0080" num="0079"><figref idref="DRAWINGS">FIG. 6</figref> is a flowchart illustrating an example page scheduling for a page independent PDL that can be performed by the page scheduler <b>215</b> according to the first exemplary embodiment. The page scheduler <b>215</b> executes the following processing.</p>
<p id="p-0081" num="0080">In step S<b>1302</b>, the page scheduler <b>215</b> initializes the page counter Pcnt (i.e., Pcnt=0). Then, in step S<b>1303</b>, the page scheduler <b>215</b> initializes the page management table stored in the work memory <b>205</b>. In step S<b>1304</b>, the page scheduler <b>215</b> sends a job start notification to the PDL analysis processing <b>1</b> and <b>2</b> of the PDL analysis program <b>209</b> and to the DL generation processing <b>1</b> and <b>2</b> of the DL generation program <b>210</b>. In step S<b>1305</b>, the page scheduler <b>215</b> determines whether a page end notification is received from the DL generation processing <b>1</b> or the DL generation processing <b>2</b> of the DL generation program <b>210</b>.</p>
<p id="p-0082" num="0081">If it is determined that the page end notification is not received from the DL generation processing <b>1</b> or the DL generation processing <b>2</b> (NO instep S<b>1305</b>), then in step S<b>1306</b>, the page scheduler <b>215</b> determines whether a job end notification is received from the PDL analysis processing <b>1</b> or the PDL analysis processing <b>2</b> of the PDL analysis program <b>209</b>. If it is determined that the job end notification is not received from the PDL analysis processing <b>1</b> or the PDL analysis processing <b>2</b> (NO in step S<b>1306</b>), then in step S<b>1307</b>, the page scheduler <b>215</b> searches through the page management table stored in the work memory <b>205</b> and determines whether the PDL analysis processing <b>1</b> of the PDL analysis program <b>209</b> is in progress.</p>
<p id="p-0083" num="0082">If it is determined that the PDL analysis processing <b>1</b> of the PDL analysis program <b>209</b> is not in progress (NO in step S<b>1307</b>), then in step S<b>1310</b>, the page scheduler <b>215</b> increments the page counter Pcnt. In step S<b>1311</b>, the page scheduler <b>215</b> adds information of the page Pcnt to the page management table stored in the work memory <b>205</b>. In step S<b>1312</b>, the page scheduler <b>215</b> requests the PDL analysis processing <b>1</b> of the PDL analysis program <b>209</b> to skip the pages 1 to (Pcnt&#x2212;1) and perform processing for the page Pcnt. Further, the page scheduler <b>215</b> requests the DL generation processing <b>1</b> to perform the page Pcnt processing.</p>
<p id="p-0084" num="0083">If it is determined that the PDL analysis processing <b>1</b> of the PDL analysis program <b>209</b> is in progress (YES in step <b>1307</b>), then in step S<b>1308</b>, the page scheduler <b>215</b> searches through the page management table stored in the work memory <b>205</b> and determines whether the PDL analysis processing <b>2</b> of the PDL analysis program <b>209</b> is in progress. If it is determined that the PDL analysis processing <b>2</b> of the PDL analysis program <b>209</b> is not in progress (NO in step S<b>1308</b>), then in step S<b>1320</b>, the page scheduler <b>215</b> increments the page counter Pcnt.</p>
<p id="p-0085" num="0084">In step S<b>1321</b>, the page scheduler <b>215</b> adds information of the page Pcnt to the page management table stored in the work memory <b>205</b>. In step S<b>1322</b>, the page scheduler <b>215</b> requests the PDL analysis processing <b>2</b> of the PDL analysis program <b>209</b> to skip the pages 1 to (Pcnt&#x2212;1) and perform processing for the page Pcnt. Further, the page scheduler <b>215</b> requests the DL generation processing <b>2</b> to perform the page Pcnt processing.</p>
<p id="p-0086" num="0085">If it is determined that the page end notification is received from the DL generation processing <b>1</b> or the DL generation processing <b>2</b> (YES in step S<b>1305</b>), then in step S<b>1330</b>, the page scheduler <b>215</b> deletes the page information corresponding to the page notified by the page end notification from the page management table stored in the work memory <b>205</b>. In step S<b>1331</b>, the page scheduler <b>215</b> sends a DL storage destination related with the frame buffer <b>206</b> notified by the page end notification together with page information to the rasterization processing program <b>214</b> and requests the rasterization processing program <b>214</b> to perform the processing.</p>
<p id="p-0087" num="0086">If it is determined that the job end notification is received from the PDL analysis processing <b>1</b> or the PDL analysis processing <b>2</b> (YES in step S<b>1306</b>), then in step S<b>1340</b>, the page scheduler <b>215</b> determines whether any page being currently processed remains in the page management table of the work memory <b>205</b>.</p>
<p id="p-0088" num="0087">If it is determined that the page being currently processed is present (YES in step S<b>1340</b>), then in step S<b>1341</b>, the page scheduler <b>215</b> waits for a page end notification sent from the DL generation processing <b>1</b> or the DL generation processing <b>2</b> of the DL generation program <b>210</b>. If it is determined that the page end notification is received (YES in step S<b>1341</b>), then in step S<b>1342</b>, the page scheduler <b>215</b> deletes the page information corresponding to the page notified by the page end notification from the page management table stored in the work memory <b>205</b>.</p>
<p id="p-0089" num="0088">In step S<b>1343</b>, the page scheduler <b>215</b> sends a DL storage destination related with the frame buffer <b>206</b> notified by the page end notification together with page information to the rasterization processing program <b>214</b> and requests the rasterization processing program <b>214</b> to perform the processing.</p>
<p id="p-0090" num="0089">If it is determined that there is not any page remaining in the page management table (NO instep S<b>1340</b>), then in step S<b>1344</b>, the page scheduler <b>215</b> sends a job end notification to the PDL analysis processing <b>1</b> and <b>2</b> of the PDL analysis program <b>209</b> and to the DL generation processing <b>1</b> and <b>2</b> of the DL generation program <b>210</b>.</p>
<p id="p-0091" num="0090"><figref idref="DRAWINGS">FIG. 7</figref> is a flowchart illustrating an example page scheduling for a directly accessible PDL that can be performed by the page scheduler <b>215</b> according to the first exemplary embodiment. The page scheduler <b>215</b> executes the following processing.</p>
<p id="p-0092" num="0091">Instep S<b>1402</b>, the page scheduler <b>215</b> initializes the page counter Pcnt (i.e., Pcnt=0). Then, in step S<b>1403</b>, the page scheduler <b>215</b> initializes the page management table stored in the work memory <b>205</b>. In step S<b>1404</b>, the page scheduler <b>215</b> sends a job start notification to the PDL analysis processing <b>1</b> and <b>2</b> of the PDL analysis program <b>209</b> and to the DL generation processing <b>1</b> and <b>2</b> of the DL generation program <b>210</b>.</p>
<p id="p-0093" num="0092">In step S<b>1405</b>, the page scheduler <b>215</b> determines whether a page end notification is received from the DL generation processing <b>1</b> or the DL generation processing <b>2</b> of the DL generation program <b>210</b>. If it is determined that the page end notification is not received from the DL generation processing <b>1</b> or the DL generation processing <b>2</b> (NO in step S<b>1405</b>), then in step S<b>1406</b>, the page scheduler <b>215</b> determines whether a job end notification is received from the PDL analysis processing <b>1</b> or the PDL analysis processing <b>2</b> of the PDL analysis program <b>209</b>.</p>
<p id="p-0094" num="0093">If it is determined that the job end notification is not received from the PDL analysis processing <b>1</b> or the PDL analysis processing <b>2</b> (NO in step S<b>1406</b>), then in step S<b>1407</b>, the page scheduler <b>215</b> searches through the page management table stored in the work memory <b>205</b> and determines whether the PDL analysis processing <b>1</b> of the PDL analysis program <b>209</b> is in progress.</p>
<p id="p-0095" num="0094">If it is determined that the PDL analysis processing <b>1</b> of the PDL analysis program <b>209</b> is not in progress (NO in step S<b>1407</b>), then in step S<b>1410</b>, the page scheduler <b>215</b> increments the page counter Pcnt. In step S<b>1411</b>, the page scheduler <b>215</b> adds information of the page Pcnt to the page management table stored in the work memory <b>205</b>. In step S<b>1412</b>, the page scheduler <b>215</b> requests the PDL analysis processing <b>1</b> of the PDL analysis program <b>209</b> to perform processing for the page Pcnt.</p>
<p id="p-0096" num="0095">If it is determined that the PDL analysis processing <b>1</b> of the PDL analysis program <b>209</b> is in progress (i.e., YES in step <b>1407</b>), then in step S<b>1408</b>, the page scheduler <b>215</b> searches through the page management table stored in the work memory <b>205</b> and determines whether the PDL analysis processing <b>2</b> of the PDL analysis program <b>209</b> is in progress. If it is determined that the PDL analysis processing <b>2</b> of the PDL analysis program <b>209</b> is not in progress (NO in step S<b>1408</b>), then in step S<b>1420</b>, the page scheduler <b>215</b> increments the page counter Pcnt.</p>
<p id="p-0097" num="0096">In step S<b>1421</b>, the page scheduler <b>215</b> adds information of the page Pcnt to the page management table stored in the work memory <b>205</b>. Further, in step S<b>1422</b>, the page scheduler <b>215</b> requests the PDL analysis processing <b>2</b> of the PDL analysis program <b>209</b> to perform processing for the page Pcnt.</p>
<p id="p-0098" num="0097">If it is determined that the page end notification is received from the DL generation processing <b>1</b> or the DL generation processing <b>2</b> (YES in step S<b>1405</b>), then in step S<b>1430</b>, the page scheduler <b>215</b> deletes the page information corresponding to the page notified by the page end notification from the page management table stored in the work memory <b>205</b>.</p>
<p id="p-0099" num="0098">In step S<b>1431</b>, the page scheduler <b>215</b> sends a DL storage destination related with the frame buffer <b>206</b> notified by the page end notification together with page information to the rasterization processing program <b>214</b> and requests the rasterization processing program <b>214</b> to perform the processing.</p>
<p id="p-0100" num="0099">If it is determined that the job end notification is received from the PDL analysis processing <b>1</b> or the PDL analysis processing <b>2</b> (YES in step S<b>1406</b>), then in step S<b>1440</b>, the page scheduler <b>215</b> determines whether any page being currently processed remains in the page management table of the work memory <b>205</b>.</p>
<p id="p-0101" num="0100">If it is determined that the page being currently processed is present (YES in step S<b>1440</b>), then in step S<b>1441</b>, the page scheduler <b>215</b> waits for a page end notification sent from the DL generation processing <b>1</b> or the DL generation processing <b>2</b> of the DL generation program <b>210</b>.</p>
<p id="p-0102" num="0101">If it is determined that the page end notification is received (YES in step S<b>1441</b>), then in step S<b>1442</b>, the page scheduler <b>215</b> deletes the page information corresponding to the page notified by the page end notification from the page management table stored in the work memory <b>205</b>.</p>
<p id="p-0103" num="0102">Further, in step S<b>1443</b>, the page scheduler <b>215</b> sends a DL storage destination related with the frame buffer <b>206</b> notified by the page end notification together with page information to the rasterization processing program <b>214</b> and requests the rasterization processing program <b>214</b> to perform the processing.</p>
<p id="p-0104" num="0103">If it is determined that there is not any page remaining in the page management table (NO instep S<b>1440</b>), then in step S<b>1444</b>, the page scheduler <b>215</b> sends a job end notification to the PDL analysis processing <b>1</b> and <b>2</b> of the PDL analysis program <b>209</b> and to the DL generation processing <b>1</b> and <b>2</b> of the DL generation program <b>210</b>.</p>
<p id="p-0105" num="0104"><figref idref="DRAWINGS">FIG. 8</figref> is a flowchart illustrating an example of analysis processing for the page non-independent PDL according to the present exemplary embodiment. The PDL analysis processing program <b>209</b> executes the following processing. In step S<b>2001</b>, the PDL analysis processing program <b>209</b> waits for a job start notification sent from the page scheduler <b>215</b>.</p>
<p id="p-0106" num="0105">If the PDL analysis processing program <b>209</b> receives the job start notification (YES in step S<b>2001</b>), then in step S<b>2002</b>, the PDL analysis processing program <b>209</b> initializes the page counter (i.e., PFcnt=0). In step S<b>2003</b>, the PDL analysis processing program <b>209</b> waits for a page processing request sent from the page scheduler <b>215</b>. Further, in step S<b>2004</b>, the PDL analysis processing program <b>209</b> waits for a job end notification sent from the page scheduler <b>215</b>.</p>
<p id="p-0107" num="0106">If the page processing request is received (YES in step S<b>2003</b>), then in step S<b>2005</b>, the PDL analysis processing program <b>209</b> compares the page counter PFcnt with the page notified by the processing request received in step S<b>2003</b>. For example, in a case where the PDL analysis processing <b>2</b> illustrated in <figref idref="DRAWINGS">FIG. 5</figref> requests the m-th page, the PDL analysis processing program <b>209</b> compares the fourth page with the page counter PFcnt.</p>
<p id="p-0108" num="0107">If it is determined that the processing requested page is larger than the page counter PFcnt (YES in step S<b>2005</b>), then in step S<b>2006</b>, the PDL analysis processing program <b>209</b> increments the page counter PFcnt (i.e., PFcnt=PFcnt+1). In step S<b>2007</b>, the PDL analysis processing program <b>209</b> sends the page counter PFcnt value and a page start notification to the DL generation processing of the DL generation program <b>210</b>.</p>
<p id="p-0109" num="0108">In the above-described case, the y-th page is the page whose intermediate data is generated by the DL generation processing <b>2</b> before the PDL analysis processing <b>2</b> analyzes the m-th page. Therefore, the page counter PFcnt represents the third page before it is incremented.</p>
<p id="p-0110" num="0109">In step S<b>2008</b>, the PDL analysis processing program <b>209</b> reads stored data from the reception buffer <b>204</b> and performs analysis processing on the read data. The PDL analysis processing program <b>209</b> analyzes drawing commands of characters and graphics and other commands such as rasterization or usage of a resource.</p>
<p id="p-0111" num="0110">In a case where the PDL analysis processing program <b>209</b> analyzes a command for rasterizing a resource that is shared by a plurality of pages in step S<b>2008</b>, it is unnecessary to perform rasterization of the resource if the same command is already executed. To confirm whether the same command is already executed, the PDL analysis processing program <b>209</b> is required to refer to the page management table of the page scheduler <b>215</b>.</p>
<p id="p-0112" num="0111">The PDL analysis processing program <b>209</b> identifies a page whose analysis processing is executed by the analysis processing program <b>209</b> being executed by another CPU. As the rasterization of the resource is already completed for the pages whose analysis processing is performed by the analysis processing program executed by another CPU, the corresponding resource rasterization processing can be omitted.</p>
<p id="p-0113" num="0112">For example, the PDL analysis processing <b>2</b> illustrated in <figref idref="DRAWINGS">FIG. 5</figref> does not perform resource rasterization processing for the n-th and preceding pages whose rasterization is already completed by the PDL analysis processing <b>1</b> and performs resource rasterization processing for the fourth page that is not yet rasterized by the PDL analysis processing <b>1</b>.</p>
<p id="p-0114" num="0113">In step S<b>2009</b>, the PDL analysis processing program <b>209</b> determines whether the analysis result is a job end. If it is determined that the analysis result is not the job end (NO in step S<b>2009</b>), then in step S<b>2010</b>, the PDL analysis processing program <b>209</b> determines whether the analysis result is a page end. If it is determined that the analysis result is not the page end (NO in step S<b>2010</b>), then in step S<b>2011</b>, the PDL analysis processing program <b>209</b> determines whether the analyzed information is necessary for the next and subsequent pages. If it is determined that the analyzed information is necessary (YES in step S<b>2011</b>), then in step S<b>2012</b>, the PDL analysis processing program <b>209</b> stores the analyzed information in the work memory <b>205</b>.</p>
<p id="p-0115" num="0114">Further, in a case where the analyzed information is a command that rasterizes the resource shared by a plurality of pages and the same resource is not stored in the work memory <b>205</b>, processing for storing the rasterized resource in the work memory <b>205</b> is performed. For example, the PDL analysis processing <b>1</b> illustrated in <figref idref="DRAWINGS">FIG. 5</figref> stores a resource corresponding to the first to third pages and the PDL analysis processing <b>2</b> stores a resource corresponding to the fourth page.</p>
<p id="p-0116" num="0115">The PDL analysis processing program <b>209</b> that performs the analysis processing of step S<b>2008</b> can use the resource stored in the work memory <b>205</b> if necessary. Therefore, the PDL analysis processing program <b>209</b> can omit rasterization processing for a resource whose rasterization is not required in the PDL analysis processing to be performed subsequently.</p>
<p id="p-0117" num="0116">In step S<b>2013</b>, the PDL analysis processing program <b>209</b> requests the DL generation processing of the DL generation program <b>210</b> to generate a DL. If it is determined that the analysis result is the job end (YES instep S<b>2009</b>), then in step S<b>2020</b>, the PDL analysis processing program <b>209</b> sends a job end notification to the page scheduler <b>215</b>.</p>
<p id="p-0118" num="0117">In step S<b>2021</b>, the PDL analysis processing program <b>209</b> waits for a job end notification sent from the page scheduler <b>215</b>. If it is determined that the job end notification is received from the page scheduler <b>215</b> (YES in step S<b>2021</b>), then in step S<b>2001</b>, the PDL analysis processing program <b>209</b> waits for a job start notification. If it is determined that the analysis result is the page end (YES in step S<b>2010</b>), then in step S<b>2030</b>, the PDL analysis processing program <b>209</b> sends a page end notification to the DL generation processing of the DL generation program <b>210</b> and the processing returns to step S<b>2005</b>.</p>
<p id="p-0119" num="0118"><figref idref="DRAWINGS">FIG. 9</figref> is a flowchart illustrating an example of analysis processing for the page independent PDL according to the present exemplary embodiment. The PDL analysis processing program <b>209</b> executes the following processing.</p>
<p id="p-0120" num="0119">In step S<b>2101</b>, the PDL analysis processing program <b>209</b> waits for a job start notification sent from the page scheduler <b>215</b>. If the PDL analysis processing program <b>209</b> receives the job start notification (YES in step S<b>2101</b>), then in step S<b>2102</b>, the PDL analysis processing program <b>209</b> initializes the page counter (i.e., PFcnt=0). Instep S<b>2103</b>, the PDL analysis processing program <b>209</b> waits for a page processing request sent from the page scheduler <b>215</b>. Further, in step S<b>2104</b>, the PDL analysis processing program <b>209</b> waits for a job end notification sent from the page scheduler <b>215</b>.</p>
<p id="p-0121" num="0120">If the page processing request is received (YES in step S<b>2103</b>), then in step S<b>2105</b>, the PDL analysis processing program <b>209</b> compares the page counter PFcnt with the page notified by the processing request received in step S<b>2104</b>. If it is determined that the processing requested page is different from PFcnt+1 (NO in step S<b>2105</b>), then in step S<b>2106</b>, the PDL analysis processing program <b>209</b> skips the data stored in the reception buffer <b>204</b> that precedes the head of the processing requested page.</p>
<p id="p-0122" num="0121">In step S<b>2107</b>, the PDL analysis processing program <b>209</b> inputs the processing requested page to the page counter PFcnt. In step S<b>2108</b>, the PDL analysis processing program <b>209</b> sends the page counter PFcnt value and a page start notification to the DL generation processing of the DL generation program <b>210</b>. In step S<b>2109</b>, the PDL analysis processing program <b>209</b> reads the data stored in the reception buffer <b>204</b> and performs analysis processing on the read data.</p>
<p id="p-0123" num="0122">In step S<b>2110</b>, the PDL analysis processing program <b>209</b> determines whether the analysis result is a job end. If it is determined that the analysis result is not the job end (NO in step S<b>2110</b>), then in step S<b>2111</b>, the PDL analysis processing program <b>209</b> determines whether the analysis result is a page end. If it is determined that the analysis result is not the page end (NO in step S<b>2111</b>), then in step S<b>2112</b>, the PDL analysis processing program <b>209</b> requests the DL generation processing of the DL generation program <b>210</b> to generate a DL.</p>
<p id="p-0124" num="0123">If it is determined that the analysis result is the job end (YES in step S<b>2110</b>), then in step S<b>2120</b>, the PDL analysis processing program <b>209</b> sends a job end notification to the page scheduler <b>215</b>. Then, in step S<b>2121</b>, the PDL analysis processing program <b>209</b> waits for a job end notification sent from the page scheduler <b>215</b>. If it is determined that the job end notification is received from the page scheduler <b>215</b> (YES in step S<b>2121</b>), then in step S<b>2101</b>, the PDL analysis processing program <b>209</b> waits for a job start notification.</p>
<p id="p-0125" num="0124">If it is determined that the analysis result is the page end (YES in step S<b>2111</b>), then in step S<b>2130</b>, the PDL analysis processing program <b>209</b> sends a page end notification to the DL generation processing of the DL generation program <b>210</b>. Then, the processing returns to step S<b>2103</b> (i.e., the page processing notification step) and step S<b>2104</b> (i.e., the job end notification waiting step).</p>
<p id="p-0126" num="0125"><figref idref="DRAWINGS">FIG. 10</figref> is a flowchart illustrating an example of analysis processing for the directly accessible PDL that can be performed by the PDL analysis processing program <b>209</b> according to the present exemplary embodiment. The PDL analysis processing program <b>209</b> executes the following processing.</p>
<p id="p-0127" num="0126">In step S<b>2201</b>, the PDL analysis processing program <b>209</b> waits for a job start notification sent from the page scheduler <b>215</b>. If the PDL analysis processing program <b>209</b> receives the job start notification (YES in step S<b>2201</b>), then in step S<b>2202</b>, the PDL analysis processing program <b>209</b> initializes the page counter (i.e., PFcnt=0). Instep S<b>2203</b>, the PDL analysis processing program <b>209</b> waits for a page processing request sent from the page scheduler <b>215</b>. Further, in step S<b>2204</b>, the PDL analysis processing program <b>209</b> waits for a job end notification sent from the page scheduler <b>215</b>.</p>
<p id="p-0128" num="0127">If the page processing request is received (YES in step S<b>2204</b>), then in step S<b>2207</b>, the PDL analysis processing program <b>209</b> inputs a requested page number to the page counter PFcnt. Then, in step S<b>2208</b>, the PDL analysis processing program <b>209</b> sends the page counter PFcnt value and a page start notification to the DL generation processing of the DL generation program <b>210</b>. In step S<b>2209</b>, the PDL analysis processing program <b>209</b> reads the page PFcnt from the data stored in the reception buffer <b>204</b> and performs analysis processing on the read page PFcnt.</p>
<p id="p-0129" num="0128">In step S<b>2210</b>, the PDL analysis processing program <b>209</b> determines whether the analysis result is a job end. If it is determined that the analysis result is not the job end (NO in step S<b>2210</b>), then in step S<b>2211</b>, the PDL analysis processing program <b>209</b> determines whether the analysis result is a page end. If it is determined that the analysis result is not the page end (NO in step S<b>2211</b>), then in step S<b>2212</b>, the PDL analysis processing program <b>209</b> requests the DL generation processing of the DL generation program <b>210</b> to generate a DL.</p>
<p id="p-0130" num="0129">If it is determined that the analysis result is the job end (YES in step S<b>2210</b>), then in step S<b>2220</b>, the PDL analysis processing program <b>209</b> sends a job end notification to the page scheduler <b>215</b>. Then, in step S<b>2221</b>, the PDL analysis processing program <b>209</b> waits for a job end notification sent from the page scheduler <b>215</b>. If the job end notification is received from the page scheduler <b>215</b> (YES in step S<b>2221</b>), then in step S<b>2201</b>, the PDL analysis processing program <b>209</b> waits for a job start notification.</p>
<p id="p-0131" num="0130">If it is determined that the analysis result is the page end (YES in step S<b>2211</b>), then in step S<b>2230</b>, the PDL analysis processing program <b>209</b> sends a page end notification to the DL generation processing of the DL generation program <b>210</b>. Then, the processing returns to step S<b>2203</b> (i.e., the page processing notification step) and to step S<b>2204</b> (i.e., the job end notification waiting step).</p>
<p id="p-0132" num="0131"><figref idref="DRAWINGS">FIG. 11</figref> is a flowchart illustrating an example of DL generation processing that can be performed by the DL generation program <b>210</b> according to the present exemplary embodiment. The DL generation program <b>210</b> executes the following processing. In step S<b>3001</b>, the DL generation program <b>210</b> waits for a job start notification sent from the page scheduler <b>215</b>. If the DL generation program <b>210</b> receives the job start notification (YES in step S<b>3001</b>), then in step S<b>3002</b>, the DL generation program <b>210</b> initializes a skip page Pskip to 0&#xd7;FFFFFFFF.</p>
<p id="p-0133" num="0132">In step S<b>3003</b>, the DL generation program <b>210</b> determines whether a job end notification is received from the page scheduler <b>215</b>. If the job end notification is not received (NO in step S<b>3003</b>), then in step S<b>3004</b>, the DL generation program <b>210</b> determines whether a page skip request is received from the page scheduler <b>215</b>. If the page skip request is received (YES in step S<b>3004</b>), then in step S<b>3005</b>, the DL generation program <b>210</b> inputs a page designated by the page skip request to the skip page Pskip.</p>
<p id="p-0134" num="0133">For example, in a case where the DL generation processing <b>2</b> illustrated in <figref idref="DRAWINGS">FIG. 5</figref> generates the fourth page, the page scheduler <b>215</b> requests skipping the first to third pages. Thus, the DL generation program <b>210</b> inputs the fourth page (i.e., the page following the third page) to the skip page Pskip.</p>
<p id="p-0135" num="0134">In step S<b>3006</b>, the DL generation program <b>210</b> determines whether a page start notification is received from the analysis processing of the PDL analysis program <b>209</b>. If the page start notification is received (YES in step S<b>3006</b>), then in step S<b>3007</b>, the DL generation program <b>210</b> compares the skip page Pskip with a page ID included in the page start notification. If it is determined that the skip page Pskip is greater than the page designated by the page start notification (YES in step S<b>3007</b>), then in step S<b>3008</b>, the DL generation program <b>210</b> sets an empty function that does not perform any processing for the DL generation processing.</p>
<p id="p-0136" num="0135">Through the above-described processing, in the above-described example case, the DL generation processing <b>2</b> does not generate any intermediate data of the first to third pages. In a case where the skip page Pskip is smaller than the page designated by the page start notification (NO in step S<b>3007</b>), then in step S<b>3009</b>, the DL generation program <b>210</b> sets a mathematical function that causes the DL generation processing to execute processing and stores the DL in the frame buffer <b>206</b>. In a case where the page requested for the DL generation processing <b>2</b> illustrated in <figref idref="DRAWINGS">FIG. 5</figref> is the fourth page, the page ID is equal to 4. In this case, the DL generation program <b>210</b> executes the processing of step S<b>2009</b>.</p>
<p id="p-0137" num="0136">If it is determined that a DL generation request is received from the analysis processing of the PDL analysis program <b>209</b> (YES in step S<b>3010</b>), then in step S<b>3011</b>, the DL generation program <b>210</b> executes a mathematical function for the DL generation processing. If the DL generation request is not received (NO in step S<b>3010</b>), then in step S<b>3020</b>, the DL generation program <b>210</b> determines whether a page end notification is received. If the page end notification is received (YES in step S<b>3020</b>), then in step S<b>3021</b>, the DL generation program <b>210</b> sends a page end notification together with the page ID and a DL storage destination related with the frame buffer <b>206</b> to the page scheduler <b>215</b>.</p>
<p id="p-0138" num="0137"><figref idref="DRAWINGS">FIG. 12</figref> is a flowchart illustrating an example of the rasterization processing that can be performed by the rasterization processing program <b>214</b> according to the present exemplary embodiment. In step S<b>4001</b>, the rasterization processing program <b>214</b> determines whether a processing request is received from the page scheduler <b>215</b>. If the processing request is received (YES in step S<b>4001</b>), then in step <b>4002</b>, the rasterization processing program <b>214</b> reads a processing requested DL from the frame buffer <b>206</b> and rasterizes the read DL into bitmap data, and then stores the bitmap data in the raster memory <b>207</b>. In step <b>4003</b>, the rasterization processing program <b>214</b> outputs the bitmap data stored in the raster memory <b>207</b> to the printer engine <b>213</b> via the engine I/F <b>212</b>. The printer engine <b>213</b> performs printing.</p>
<p id="p-0139" num="0138"><figref idref="DRAWINGS">FIGS. 15A</figref>, <b>15</b>B, and <b>15</b>C illustrate examples of a relationship between a module control and required processing time in the scheduling processing according to the present exemplary embodiment.</p>
<p id="p-0140" num="0139"><figref idref="DRAWINGS">FIG. 15A</figref> illustrates a relationship between an example module control and required processing time in a case where the PDL to be processed is a page non-independent PDL. In this case, the page scheduler <b>215</b> sends the control command <b>310</b> to the PDL analysis program <b>209</b> of the CPU<b>1</b> <b>218</b> to request processing of the first page. Further, the page scheduler <b>215</b> sends the control command <b>311</b> to the PDL analysis program <b>209</b> of the CPU<b>2</b> <b>219</b> to request processing of the first and second pages.</p>
<p id="p-0141" num="0140">The reason why the above-described processing is performed is because the DL generation program cannot execute the DL generation processing for a requested page unless rasterization of a resource of pages that precede the requested page is completed. The page scheduler <b>215</b> sends the control command <b>321</b> to the DL generation program <b>210</b> of the CPU<b>2</b> <b>219</b> to request skipping of the first page. The time required for the above-described processing is shorter than a conventional processing time, although a significant time is required for the page skipping operation. In this manner, the present exemplary embodiment can speedily accomplish drawing processing for a PDL including two or more pages that share a resource.</p>
<p id="p-0142" num="0141"><figref idref="DRAWINGS">FIG. 15B</figref> illustrates a relationship between an example module control and required processing time in a case where the PDL to be processed is a page independent PDL. In this case, the page scheduler <b>215</b> sends the control command <b>310</b> to the PDL analysis program <b>209</b> of the CPU<b>1</b> <b>218</b> to request processing of the first page. Further, the page scheduler <b>215</b> sends the control command <b>311</b> to the PDL analysis program <b>209</b> of the CPU<b>2</b> <b>219</b> to request skipping of the first page and processing of the second page. The processing time required in this case is shorter than the processing time for the page non-independent PDL because the time required for the page skipping operation can be further reduced.</p>
<p id="p-0143" num="0142"><figref idref="DRAWINGS">FIG. 15C</figref> illustrates a relationship between an example module control and required processing time in a case where the PDL to be processed is a page directly accessible PDL. In this case, the page scheduler <b>215</b> sends the control command <b>310</b> to the PDL analysis program <b>209</b> of the CPU<b>1</b> <b>218</b> to request processing of the first page. Further, the page scheduler <b>215</b> sends the control command <b>311</b> to the PDL analysis program <b>209</b> of the CPU<b>2</b> <b>219</b> to request processing of the second page. The processing time required in this case is shorter than the processing time for the page independent PDL because the page skipping operation is not required.</p>
<p id="p-0144" num="0143">In the above-described exemplary embodiment, the number of CPUs used to perform operations is only two (i.e., the CPU<b>1</b> <b>218</b> serving as the first processor and the CPU<b>2</b> <b>219</b> serving as the second processor). However, it is useful to use a third processor that can perform the above-described PDL analysis processing and the DL generation processing. It is useful to use one core processor to execute one PDL analysis processing program and one DL generation processing program. It is useful to use a multicore processor that can serve as the CPU. Further, it is useful to use a micro processing unit (MPU) that can perform functions comparable to those of the CPU that performs the PDL analysis processing and the DL generation processing.</p>
<p id="p-0145" num="0144">Further, in the above-described exemplary embodiment, switching between the PDL analysis processing and the DL generation processing is performed according to the type of each PDL. However, it is useful to enable a user to designate specific PDL analysis processing and specific DL generation processing. In this case, the user can designate preferred processing via an operation panel of the image forming apparatus <b>102</b> or a PC connected to the network <b>104</b>.</p>
<p id="p-0146" num="0145">Further, in the above-described exemplary embodiment, the image forming apparatus <b>102</b> performs the PDL analysis processing and the DL generation processing according to the type of each PDL (e.g., non-independent PDL, independent PDL, and directly accessible PDL). However, the image forming apparatus <b>102</b> can perform the PDL analysis processing and the DL generation processing on only one or two of the non-independent PDL, the independent PDL, and the directly accessible PDL. For example, the image forming apparatus <b>102</b> can perform the PDL analysis processing and the DL generation processing according to each of the non-independent PDL and the independent PDL.</p>
<p id="p-0147" num="0146">Further, in a case where the PDL to be processed is the non-independent PDL, the CPU<b>1</b> <b>218</b> and the CPU<b>2</b> <b>219</b> share a resource that is shared for a plurality of pages to speedily accomplish the analysis processing. However, although the above-described effects may be reduced, it is also useful for each CPU to independently hold a resource that is shared for a plurality of pages.</p>
<p id="h-0005" num="0000">Other Embodiments</p>
<p id="p-0148" num="0147">Aspects of the present invention can also be realized by a computer of a system or apparatus (or devices such as a CPU or MPU) that reads out and executes a program recorded on a memory device to perform the functions of the above-described embodiment(s), and by a method, the steps of which are performed by a computer of a system or apparatus by, for example, reading out and executing a program recorded on a memory device to perform the functions of the above-described embodiment(s). For this purpose, the program is provided to the computer for example via a network or from a recording medium of various types serving as the memory device (e.g., computer-readable medium).</p>
<p id="p-0149" num="0148">While the present invention has been described with reference to exemplary embodiments, it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all modifications, equivalent structures, and functions.</p>
<p id="p-0150" num="0149">This application claims priority from Japanese Patent Application No. 2009-192236 filed Aug. 21, 2009, which is hereby incorporated by reference herein in its entirety.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An information processing apparatus comprising:
<claim-text>a schedule unit configured to allocate a certain page in received print data to execution units;</claim-text>
<claim-text>a first execution unit configured to generate intermediate data from the page allocated to the first execution unit;</claim-text>
<claim-text>a second execution unit configured to generate intermediate data from the page allocated to the second execution unit in parallel with the first execution unit to generate the intermediate data; and</claim-text>
<claim-text>a determination unit configured to determine whether or not the received print data is in an independent format,</claim-text>
<claim-text>wherein the schedule unit allocates an m-th page to the first execution unit and an n-th page to the second execution unit, the n indicating a larger integer than the m,</claim-text>
<claim-text>wherein the first execution unit rasterizes a resource of the print data of the m-th page and pages preceding the m-th page and generates intermediate data of the m-th page using the rasterized resource and the second execution unit rasterizes a resource of the print data of the n-th page and pages preceding the n-th page and generates intermediate data of the n-th page using the rasterized resource, in a case where the determination unit determines that the received print data is not in an independent format,</claim-text>
<claim-text>wherein the first execution unit rasterizes a resource of the print data of the m-th page without rasterizing a resource of the print data of pages preceding the m-th page and generates intermediate data of the m-th page using the rasterized resource and the second execution unit rasterizes a resource of the print data of the n-th page without rasterizing a resource of the print data of pages preceding the n-th page and generates intermediate data of the n-th page using the rasterized resource, in a case where the determination unit determines that the received print data is in an independent format,</claim-text>
<claim-text>wherein the determination unit further determines whether the received print data is in a directly accessible format in the case where the determination unit determines the received print data is in an independent format,</claim-text>
<claim-text>wherein the first execution unit skips the pages preceding the m-th page and rasterizes a resource of the print data of the m-th page without rasterizing a resource of the print data of pages preceding the m-th page and generates intermediate data of the m-th page using the rasterized resource and the second execution unit skips the pages preceding the n-th page and rasterizes a resource of the print data of the n-th page without rasterizing a resource of the print data of pages preceding the n-th page and generates intermediate data of the n-th page using the rasterized resource, in a case where the determination unit determines that the received data is not in a directly accessible format, and</claim-text>
<claim-text>wherein the first execution unit directly reads the m-th page without analyzing the print data of the pages preceding the m-th page, rasterizes a resource of the print data of the m-th page without rasterizing a resource of the print data of the pages preceding the m-th page and generates intermediate data using the rasterized resource and the second execution unit directly reads the n-th page without analyzing the print data of the pages preceding the n-th page, rasterizes a resource of the print data of the n-th page without rasterizing a resource of the print data of the pages preceding the n-th page and generates intermediate data using the rasterized resource, in a case where the determination unit determines that the received data is in a directly accessible format.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. A method comprising:
<claim-text>a scheduling step of allocating a certain page in received print data to execution units;</claim-text>
<claim-text>a first execution step of generating intermediate data from the page allocated to a first execution unit;</claim-text>
<claim-text>a second execution step of generating intermediate data from the page allocated to a second execution unit in parallel with the first execution step to generate the intermediate data; and</claim-text>
<claim-text>a determination step of determining whether or not the received print data is in an independent format,</claim-text>
<claim-text>wherein the scheduling step comprises allocating an m-th page to the first execution unit and an n-th page to the second execution unit, the n indicating a larger integer than the m,</claim-text>
<claim-text>wherein the first execution step comprises rasterizing a resource of the print data of the m-th page and pages preceding the m-th page and generating intermediate data of the m-th page using the rasterized resource and the second execution step comprises rasterizing a resource of the print data of the n-th page and pages preceding the n-th page and generating intermediate data of the n-th page using the rasterized resource, in a case where it is determined that the received print data is not in an independent format,</claim-text>
<claim-text>wherein the first execution step comprises rasterizing a resource of the print data of the m-th page without rasterizing a resource of the print data of pages preceding the m-th page and generating intermediate data of the m-th page using the rasterized resource and the second execution step comprises rasterizing a resource of the print data of the n-th page without rasterizing a resource of the print data of pages preceding the n-th page and generating intermediate data of the n-th page using the rasterized resource, in a case where it is determined that the received print data is in an independent format,</claim-text>
<claim-text>wherein the determination step further comprises determining whether the received print data is in a directly accessible format in the case where it is determined that the received print data is in an independent format,</claim-text>
<claim-text>wherein the first execution step comprises skipping the pages preceding the m-th page and rasterizing a resource of the print data of the m-th page without rasterizing a resource of the print data of pages preceding the m-th page and generating intermediate data of the m-th page using the rasterized resource and the second execution step comprises skipping the pages preceding the n-th page and rasterizing a resource of the print data of the n-th page without rasterizing a resource of the print data of pages preceding the n-th page and generating intermediate data of the n-th page using the rasterized resource, in a case where it is determined that the received data is not in a directly accessible format, and</claim-text>
<claim-text>wherein the first execution step comprises directly reading the m-th page without analyzing the print data of the pages preceding the m-th page, rasterizing a resource of the print data of the m-th page without rasterizing a resource of the print data of the pages preceding the m-th page and generating intermediate data using the rasterized resource and the second execution step comprises directly reading the n-th page without analyzing the print data of the pages preceding the n-th page, rasterizing a resource of the print data of the n-th page without rasterizing a resource of the print data of the pages preceding the n-th page and generating intermediate data using the rasterized resource, in a case where it is determined that the received data is in a directly accessible format.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. A non-transitory computer-readable storage medium storing a software program that causes a computer to perform a method, the method comprising:
<claim-text>a scheduling step of allocating a certain page in received print data to execution units;</claim-text>
<claim-text>a first execution step of generating intermediate data from the page allocated to a first execution unit;</claim-text>
<claim-text>a second execution step of generating intermediate data from the page allocated to a second execution unit in parallel with the first execution step to generate the intermediate data; and</claim-text>
<claim-text>a determination step of determining whether or not the received print data is in an independent format,</claim-text>
<claim-text>wherein the scheduling step comprises allocating an m-th page to the first execution unit and an n-th page to the second execution unit, the n indicating a larger integer than the m,</claim-text>
<claim-text>wherein the first execution step comprises rasterizing a resource of the print data of the m-th page and pages preceding the m-th page and generating intermediate data of the m-th page using the rasterized resource and the second execution step comprises rasterizing a resource of the print data of the n-th page and pages preceding the n-th page and generating intermediate data of the n-th page using the rasterized resource, in a case where it is determined that the received print data is not in an independent format,</claim-text>
<claim-text>wherein the first execution step comprises rasterizing a resource of the print data of the m-th page without rasterizing a resource of the print data of pages preceding the m-th page and generating intermediate data of the m-th page using the rasterized resource and the second execution step comprises rasterizing a resource of the print data of the n-th page without rasterizing a resource of the print data of pages preceding the n-th page and generating intermediate data of the n-th page using the rasterized resource, in a case where it is determined that the received print data is in an independent format,</claim-text>
<claim-text>wherein the determination step further comprises determining whether the received print data is in a directly accessible format in the case where it is determined that the received print data is in an independent format,</claim-text>
<claim-text>wherein the first execution step comprises skipping the pages preceding the m-th page and rasterizing a resource of the print data of the m-th page without rasterizing a resource of the print data of pages preceding the m-th page and generating intermediate data of the m-th page using the rasterized resource and the second execution step comprises skipping the pages preceding the n-th page and rasterizing a resource of the print data of the n-th page without rasterizing a resource of the print data of pages preceding the n-th page and generating intermediate data of the n-th page using the rasterized resource, in a case where it is determined that the received data is not in a directly accessible format, and</claim-text>
<claim-text>wherein the first execution step comprises directly reading the m-th page without analyzing the print data of the pages preceding the m-th page, rasterizing a resource of the print data of the m-th page without rasterizing a resource of the print data of the pages preceding the m-th page and generating intermediate data using the rasterized resource and the second execution step comprises directly reading the n-th page without analyzing the print data of the pages preceding the n-th page, rasterizing a resource of the print data of the n-th page without rasterizing a resource of the print data of the pages preceding the n-th page and generating intermediate data using the rasterized resource, in a case where it is determined that the received data is in a directly accessible format. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
