<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627052-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627052</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12102112</doc-number>
<date>20080414</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>1292</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>9</main-group>
<subgroup>24</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>177</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>713  1</main-classification>
<further-classification>713  2</further-classification>
<further-classification>713100</further-classification>
<further-classification>711164</further-classification>
</classification-national>
<invention-title id="d2e53">System and method of enabling a function within a module configured to be used within an information handling system</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6298255</doc-number>
<kind>B1</kind>
<name>Cordero et al.</name>
<date>20011000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>600372</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2004/0025037</doc-number>
<kind>A1</kind>
<name>Hair</name>
<date>20040200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713189</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2005/0038969</doc-number>
<kind>A1</kind>
<name>Schrodinger et al.</name>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711164</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2009/0249381</doc-number>
<kind>A1</kind>
<name>White et al.</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>720718</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00005">
<othercit>T. Eisenbarth, &#x201c;Reconfigurable Trusted Computing in Hardware&#x201d;, STC, Nov. 2, 2007, pp. 15-20, Alexandria, Virginia.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>19</number-of-claims>
<us-exemplary-claim>10</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>713  1</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713  2</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713100</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711164</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>3</number-of-drawing-sheets>
<number-of-figures>3</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20090259833</doc-number>
<kind>A1</kind>
<date>20091015</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Mohrmann</last-name>
<first-name>Vaden</first-name>
<address>
<city>Round Rock</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Rangarajan</last-name>
<first-name>Madhusudhan</first-name>
<address>
<city>Round Rock</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Mohrmann</last-name>
<first-name>Vaden</first-name>
<address>
<city>Round Rock</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Rangarajan</last-name>
<first-name>Madhusudhan</first-name>
<address>
<city>Round Rock</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Larson Newman, LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Dell Products, LP</orgname>
<role>02</role>
<address>
<city>Round Rock</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Yanchus, III</last-name>
<first-name>Paul</first-name>
<department>2116</department>
</primary-examiner>
<assistant-examiner>
<last-name>Brown</last-name>
<first-name>Michael J</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A system and method of enabling a function within a module configured to be used with an information handling system is disclosed. In one form, the method of enabling functions includes detecting whether to install a custom install routine within a module configured to enable access to a hash function, and accessing a lock bit configured to lock access to the hash function. The method can further include detecting whether to set the lock bit to lock access to the hash function.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="82.21mm" wi="177.80mm" file="US08627052-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="234.36mm" wi="139.28mm" orientation="landscape" file="US08627052-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="178.90mm" wi="98.13mm" orientation="landscape" file="US08627052-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="196.34mm" wi="152.82mm" file="US08627052-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD OF THE DISCLOSURE</heading>
<p id="p-0002" num="0001">This disclosure relates generally to information handling systems, and more particularly, to a function within a module configured to be used within an information handling system.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">As the value and use of information continues to increase, individuals and businesses seek additional ways to process and store information. One option is an information handling system. An information handling system generally processes, compiles, stores, and/or communicates information or data for business, personal, or other purposes. Because technology and information handling needs and requirements can vary between different applications, information handling systems can also vary regarding what information is handled, how the information is handled, how much information is processed, stored, or communicated, and how quickly and efficiently the information can be processed, stored, or communicated. The variations in information handling systems allow for information handling systems to be general or configured for a specific user or specific use such as financial transaction processing, airline reservations, enterprise data storage, or global communications. In addition, information handling systems can include a variety of hardware and software components that can be configured to process, store, and communicate information and can include one or more computer systems, data storage systems, and networking systems.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0004" num="0003">It will be appreciated that for simplicity and clarity of illustration, elements illustrated in the Figures have not necessarily been drawn to scale. For example, the dimensions of some of the elements are exaggerated relative to other elements. Embodiments incorporating teachings of the present disclosure are shown and described with respect to the drawings presented herein, in which:</p>
<p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. 1</figref> illustrates a block diagram of an information handling system according to an aspect of the disclosure;</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 2</figref> illustrates a functional block diagram of security card including a lock bit enabled module according to an aspect of the disclosure; and</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 3</figref> illustrates a flow diagram of a method of enabling a function within a module according to an aspect of the disclosure.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<p id="p-0008" num="0007">The use of the same reference symbols in different drawings indicates similar or identical items.</p>
<heading id="h-0004" level="1">DETAILED DESCRIPTION OF DRAWINGS</heading>
<p id="p-0009" num="0008">The following description in combination with the figures is provided to assist in understanding the teachings disclosed herein. The following discussion will focuses on specific implementations and embodiments. This focus is provided to assist in describing the teachings and should not be interpreted as a limitation on the scope or applicability of the teachings. However, other teachings can certainly be used in this application. The teachings can also be used in other applications and with several different types of architectures such as distributed computing architectures, client/server architectures, or middleware server architectures and associated components.</p>
<p id="p-0010" num="0009">For purposes of this disclosure, an information handling system can include any instrumentality or aggregate of instrumentalities operable to compute, classify, process, transmit, receive, retrieve, originate, switch, store, display, manifest, detect, record, reproduce, handle, or use any form of information, intelligence, or data for business, scientific, control, entertainment, or other purposes. For example, an information handling system can be a personal computer, a PDA, a consumer electronic device, a network server or storage device, a switch router, wireless router, or other network communication device, or any other suitable device and can vary in size, shape, performance, functionality, and price. The information handling system can include memory (volatile (e.g. random-access memory, etc.), nonvolatile (read-only memory, flash memory etc.) or any combination thereof), one or more processing resources, such as a central processing unit (CPU), a graphics processing unit (GPU), hardware or software control logic, or any combination thereof Additional components of the information handling system can include one or more storage devices, one or more communications ports for communicating with external devices, as well as, various input and output (I/O) devices, such as a keycard, a mouse, a video/graphic display, or any combination thereof. The information handling system can also include one or more buses operable to transmit communications between the various hardware components. Portions of an information handling system may themselves be considered information handling systems.</p>
<p id="p-0011" num="0010">Portions of an information handling system, when referred to as a &#x201c;device,&#x201d; a &#x201c;module,&#x201d; or the like, can be configured as hardware, software (which can include firmware), or any combination thereof. For example, a portion of an information handling system device may be hardware such as, for example, an integrated circuit (such as an Application Specific Integrated Circuit (ASIC), a Field Programmable Gate Array (FPGA), a structured ASIC, or a device embedded on a larger chip), a card (such as a Peripheral Component Interface (PCI) card, a PCI-express card, a Personal Computer Memory Card International Association (PCMCIA) card, or other such expansion card), or a system (such as a motherboard, a system-on-a-chip (SoC), or a stand-alone device). Similarly, the device could be software, including firmware embedded at a device, such as a Pentium class or PowerPC&#x2122; brand processor, or other such device, or software capable of operating a relevant environment of the information handling system. The device could also be a combination of any of the foregoing examples of hardware or software. Note that an information handling system can include an integrated circuit or a board-level product having portions thereof that can also be any combination of hardware and software.</p>
<p id="p-0012" num="0011">Devices or programs that are in communication with one another need not be in continuous communication with each other unless expressly specified otherwise. In addition, devices or programs that are in communication with one another may communicate directly or indirectly through one or more intermediaries.</p>
<p id="p-0013" num="0012">Embodiments discussed below describe, in part, distributed computing solutions that manage all or part of a communicative interaction between network elements. In this context, a communicative interaction may be intending to send information, sending information, requesting information, receiving information, receiving a request for information, or any combination thereof. As such, a communicative interaction could be unidirectional, bidirectional, multi-directional, or any combination thereof. In some circumstances, a communicative interaction could be relatively complex and involve two or more network elements. For example, a communicative interaction may be &#x201c;a conversation&#x201d; or series of related communications between a client and a server&#x2014;each network element sending and receiving information to and from the other. The communicative interaction between the network elements is not necessarily limited to only one specific form. A network element may be a node, a piece of hardware, software, firmware, middleware, another component of a computing system, or any combination thereof.</p>
<p id="p-0014" num="0013">In the description below, a flow charted technique may be described in a series of sequential actions. Unless expressly stated to the contrary, the sequence of the actions and the party performing the actions may be freely changed without departing from the scope of the teachings. Actions may be added, deleted, or altered in several ways. Similarly, the actions may be re-ordered or looped. Further, although processes, methods, algorithms or the like may be described in a sequential order, such processes, methods, algorithms, or any combination thereof may be operable to be performed in alternative orders. Further, some actions within a process, method, or algorithm may be performed simultaneously during at least a point in time (e.g., actions performed in parallel), can also be performed in whole, in part, or any combination thereof.</p>
<p id="p-0015" num="0014">As used herein, the terms &#x201c;comprises,&#x201d; &#x201c;comprising,&#x201d; &#x201c;includes,&#x201d; &#x201c;including,&#x201d; &#x201c;has,&#x201d; &#x201c;having&#x201d; or any other variation thereof, are intended to cover a non-exclusive inclusion. For example, a process, method, article, or apparatus that comprises a list of features is not necessarily limited only to those features but may include other features not expressly listed or inherent to such process, method, article, or apparatus. Further, unless expressly stated to the contrary, &#x201c;or&#x201d; refers to an inclusive-or and not to an exclusive-or. For example, a condition A or B is satisfied by any one of the following: A is true (or present) and B is false (or not present), A is false (or not present) and B is true (or present), and both A and B are true (or present).</p>
<p id="p-0016" num="0015">Also, the use of &#x201c;a&#x201d; or &#x201c;an&#x201d; is employed to describe elements and components described herein. This is done merely for convenience and to give a general sense of the scope of the invention. This description should be read to include one or at least one and the singular also includes the plural, or vice versa, unless it is clear that it is meant otherwise. For example, when a single device is described herein, more than one device may be used in place of a single device. Similarly, where more than one device is described herein, a single device may be substituted for that one device.</p>
<p id="p-0017" num="0016">Unless otherwise defined, all technical and scientific terms used herein have the same meaning as commonly understood by one of ordinary skill in the art to which this invention belongs. Although methods and materials similar or equivalent to those described herein can be used in the practice or testing of embodiments of the present invention, suitable methods and materials are described below. All publications, patent applications, patents, and other references mentioned herein are incorporated by reference in their entirety, unless a particular passage is cited. In case of conflict, the present specification, including definitions, will control. In addition, the materials, methods, and examples are illustrative only and not intended to be limiting.</p>
<p id="p-0018" num="0017">To the extent not described herein, many details regarding specific materials, processing acts, and circuits are conventional and may be found in textbooks and other sources within the computing, electronics, and software arts.</p>
<p id="p-0019" num="0018">An information handling system and method of using it are described below. An exemplary, non-limiting system description is described before addressing methods of using it. Some of the functionality of modules within the system is described with the system. The utility of the system and its modules will become more apparent with the description of the methods that follow the description of the system and modules.</p>
<p id="p-0020" num="0019">According to an aspect, a method of enabling functions is disclosed. The method can include detecting whether to install a custom install routine within a module configured to enable access to a hash function, and accessing a lock bit configured to lock access to the hash function. The method can further include detecting whether to set the lock bit to lock access to the hash function.</p>
<p id="p-0021" num="0020">According to another aspect, a security card is disclosed. The security card can include a module configured to execute a hash function installation routine to install a hash function. The security card can further include a memory coupled to the module and configured to store a hash function loaded during the installation process. The security card can also include a hash function lock bit configured to be set in association with completion of installation of a hash function.</p>
<p id="p-0022" num="0021">According to a further aspect, an information handling system is disclosed. The information handling system can include a security card configurable to access a hash function installed during execution of a hash function installation routine. The information handling system can further include a trusted platform module configured to execute the hash function installation routine. The information handling system can also include a hash function lock bit configured to be set upon installation of the hash function using the hash function installation routine.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 1</figref> illustrates a block diagram of an exemplary embodiment of an information handling system <b>100</b>. The information handling system <b>100</b> can be a computer system such as a server, a desktop computer, a laptop computer, a rack of computers (e.g., networked servers), the like, or any combination thereof. After reading this specification, skilled artisans will appreciate that the information handling system can be configured to their particular needs or desires.</p>
<p id="p-0024" num="0023">As illustrated in <figref idref="DRAWINGS">FIG. 1</figref>, the information handling system <b>100</b> can include a processor <b>102</b> connected to a host bus <b>104</b> and can further include additional processors generally designated as N<sup>th </sup>processor <b>106</b> connected to a host bus <b>108</b>. The processors <b>102</b> and <b>106</b> can be separate physical processors, and in another embodiment, the processors <b>102</b> and <b>106</b> can be different cores within the same integrated circuit. The processor <b>102</b> can be connected to a chipset <b>110</b> via the host bus <b>104</b>. Further, the processor <b>106</b> can be connected to the chipset <b>110</b> via the host bus <b>108</b>. The chipset <b>110</b> can support multiple processors and can allow for simultaneous processing of multiple processors and support the exchange of information within information handling system <b>100</b> during multiple processing operations.</p>
<p id="p-0025" num="0024">In an embodiment, the chipset <b>110</b> can be referred to as a memory hub or a memory controller. For example, the chipset <b>110</b> can include an Accelerated Hub Architecture (AHA) that uses a dedicated bus to transfer data between the processors <b>102</b> and <b>106</b>. For example, the chipset <b>110</b> including an AHA-enabled chipset can include a memory controller hub and an input/output (I/O) controller hub. As a memory controller hub, the chipset <b>110</b> can function to provide access to the processor <b>102</b> using the host bus <b>104</b> and the processor <b>106</b> using the host bus <b>108</b>. The chipset <b>110</b> can also provide a memory interface for accessing memory <b>112</b> using a host bus <b>114</b>. In a particular embodiment, the host buses <b>104</b>, <b>108</b>, and <b>114</b> can be individual buses or part of the same bus. The chipset <b>110</b> can also provide bus control and handle transfers between the host buses <b>104</b>, <b>108</b>, and <b>114</b>.</p>
<p id="p-0026" num="0025">According to another aspect, the chipset <b>110</b> can be generally considered an application specific chipset that provides connectivity to various buses, and integrates other system functions. For example, the chipset <b>110</b> can be provided using an Intel&#xae;-brand Hub Architecture (IHA) chipset also that can include two parts, a Graphics and Accelerated Graphics Port (AGP) Memory Controller Hub (GMCH) and an I/O Controller Hub (ICH). For example, an Intel 820E, an 815E chipset, or any combination thereof, available from the Intel Corporation of Santa Clara, Calif., can provide at least a portion of the chipset <b>110</b>. The chipset <b>110</b> can also be packaged as an application specific integrated circuit (ASIC).</p>
<p id="p-0027" num="0026">The information handling system <b>100</b> can also include a video/graphic interface module <b>122</b> that can be connected to the chipset <b>110</b> using host bus <b>124</b>. The video/graphic module <b>122</b> includes two or more video/graphic ports, such as video/graphics port <b>1221</b> and video/graphic port <b>1222</b>, capable of providing image information substantially simultaneously to a common video/graphics display device <b>126</b> for substantially simultaneous display as described in greater detail herein. Also, each of the video/graphic ports <b>1221</b> and <b>1222</b> are capable of providing image information to separate video/graphic devices for substantially simultaneous display. The video/graphic display device <b>126</b> is also referred to herein as a display unit <b>126</b>.</p>
<p id="p-0028" num="0027">The display unit <b>126</b> can include one or more types of video/graphic display devices, such as a flat panel display (FPD) or other type of display device. In accordance with the present disclosure, the video/graphic interface module <b>122</b> can detect the presence of a cable adapter <b>170</b> and configure multiple video/graphic ports, such as DisplayPort video/graphic ports, to operate in tandem along with the cable adapter to implement a Dual-Link DVI video/graphic port.</p>
<p id="p-0029" num="0028">The information handling system <b>100</b> can also include an I/O interface module <b>130</b> that can be connected via an I/O bus <b>120</b> to the chipset <b>110</b>. The I/O bus <b>120</b> and the I/O interface <b>130</b> can include industry standard buses or proprietary buses and respective interfaces or controllers. In one form, a PCI bus can be operated at approximately 66 MHz and a PCI-Express bus can be operated at more than one (1) speed (e.g. 2.5 GHz and 5 GHz). PCI buses and PCI-Express buses can comply with industry standards for connecting and communicating between various PCI-enabled hardware devices. Other buses can also be used in association with, or independent of, the I/O bus <b>120</b> including, but not limited to, industry standard buses or proprietary buses, such as Industry Standard Architecture (ISA), Small Computer Serial Interface (SCSI), Inter-Integrated Circuit (I<sup>2</sup>C), System Packet Interface (SPI), or Universal Serial buses (USBs).</p>
<p id="p-0030" num="0029">In an alternate embodiment, the chipset <b>110</b> can be a chipset employing a Northbridge/Southbridge chipset configuration (not separately illustrated). For example, a Northbridge portion of the chipset <b>110</b> can communicate with the processor <b>102</b> and can control interaction with the memory <b>112</b>, interaction with bus <b>120</b>, which can be a PCI bus, and interactions with bus <b>124</b> which can be a PCI bus or an AGP bus. The Northbridge portion can also communicate with the processor <b>102</b> using host bus <b>104</b> and with the processor <b>106</b> using the host bus <b>108</b>. The chipset <b>110</b> can also include a Southbridge portion that can handle I/O functions of the chipset <b>110</b>. The Southbridge portion can manage the basic forms of I/O such as USB, serial I/O, audio outputs, Integrated Drive Electronics (IDE), and ISA I/O for the information handling system <b>100</b>.</p>
<p id="p-0031" num="0030">The information handling system <b>100</b> can further include a disk controller <b>132</b> connected to the bus <b>120</b>. The disk controller <b>132</b> can be used to connect one or more disk drives such as a hard disk drive (HDD) <b>134</b> and an optical disk drive (ODD) <b>136</b> such as a Read/Write Compact Disk (R/W-CD), a Read/Write Digital Video Disk (R/W-DVD), a Read/Write mini Digital Video Disk (R/W mini-DVD), or other type of optical disk drive. The I/O interface can be coupled to a pointing device <b>140</b> and a keyboard <b>148</b>.</p>
<p id="p-0032" num="0031">In a particular form, the information handling system <b>100</b> includes a BIOS <b>142</b> that can be updated during a manufacturing process. The information handling system <b>100</b> also includes a security card <b>150</b> having a module <b>152</b> and a lock bit <b>154</b>. The security card <b>150</b> could be configured as a part of various components or devices of the information handling system <b>100</b>. Additionally, the security card <b>150</b> can be integrated in whole or in part with a motherboard, system board, or any combination thereof. For example, the security card <b>150</b> can be a system board. In other forms, the security card <b>150</b> can include an expansion card, memory card, network card, game controller card, or various other cards that would benefit from the use hash functions secured using the lock bit <b>154</b>.</p>
<p id="p-0033" num="0032">According to a particular aspect, the security card <b>150</b> can include hash functions that can be enabled to allow access to specific functions, data, or features of the security card <b>150</b>. A hash function can process a string (or &#x201c;message&#x201d;) of any length as an input, and produce a fixed length string as an output. An output, called a hash value, digest, checksum, or the like can be used with a stream of data. During manufacturing, a hash function installation routine can be executed, and hash functions operable to be used with the security card <b>150</b> can be enabled. Upon installation, the lock bit <b>154</b> configured as a hash function lock bit can be set. Setting the lock bit <b>154</b> upon installing or enabling the hash functions can ensure that further access to the hash functions of the security card <b>150</b> cannot occur. In this manner, undesired access, attacks, etc. can be obviated through setting the lock bit <b>154</b> and securing the security card <b>150</b>. According to a further aspect, the lock bit <b>154</b> can be set to lock the security card <b>150</b> and is hard-coded such that locking the lock bit <b>154</b> is irreversible and ensures that hash functions cannot be access for the lifetime of the security module <b>150</b>.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 2</figref> illustrates a functional block diagram of security card illustrated generally at <b>200</b>. The security card <b>200</b> can includes a processor <b>202</b>, an I/O interface <b>204</b>, and an EEPROM <b>206</b>. The security card <b>200</b> can also include a module <b>214</b> including a lock bit <b>208</b> configured as a hash function lock bit, and a unique identifier <b>210</b> stored within a memory such as an EEPROM device <b>206</b>. The module <b>214</b> can include a trusted platform module (TPM) device. The EEPROM device <b>206</b> can also include other information such as card type, driver, etc. According to an aspect, the EEPROM <b>206</b> can store hash functions that can be used to access card specific or module specific functions or data. The lock bit <b>208</b> can be used to enable access to hash functions of the security card <b>200</b>. In an aspect, hash functions can be specifically within the security card <b>200</b>, and can be used to access sensitive or confidential information, functions, features, etc. that can be used specific to the security card <b>200</b>. The I/O interface <b>212</b> can be coupled to an information handling system (IHS) bus <b>212</b> of an information handling system (not illustrated). According to a further aspect, the security card <b>200</b> can include a trusted platform module (TPM), a security module, or various other modules, cards, etc. configurable to include all or portions of the security card <b>200</b>.</p>
<p id="p-0035" num="0034">According to a particular aspect, the lock bit <b>208</b> can be altered during a manufacturing process. The lock bit <b>208</b> can enable or disable use or access to hash functions of the security card <b>200</b> and can be set or left unset in a manufacturing environment. For example, if a customer has a specific hash function that can be loaded onto the security card <b>200</b>, the I/O interface <b>204</b> can be accessed, and a hash function installation routine can be executed by the processor <b>202</b> to enable one or more hash functions to be used by the security card <b>200</b>. Upon executing the hash function installation routine, the lock bit <b>208</b> can be permanently set to restrict further access to the security card <b>200</b> to modify hash functions. Additionally, the module <b>214</b> including a processor <b>202</b> enables the hash function routine to be executed local to the module <b>214</b> and security card <b>200</b> thereby reducing or obviating the need to communicate data using the IHS bus <b>212</b> during installation of the hash functions.</p>
<p id="p-0036" num="0035">According to another aspect, a customer may not desire to have a hash function installation routine, or a hash function enabled within the security card <b>200</b>. For example, the customer may desire to install hash functions upon receipt of the security card <b>200</b> and/or an information handling system housing the security card <b>200</b>. As such, during a manufacturing process, the lock bit <b>208</b> will not be set to allow the customer to install hash functions as needed or desired at a customer's site. In this manner, a customer can maintain confidentially, version control, updates, etc. local to the customer site and enable upon receipt.</p>
<p id="p-0037" num="0036">According to a further aspect, a generic hash function installation routine can be installed during a manufacturing process. For example, a generic hash function installation routine can include loading a standard set of hash functions. Upon loading the standard set of hash functions, the lock bit <b>208</b> can be set thereby not allowing subsequent access to the hash functions to modify the hash functions of the security card <b>200</b>. In this manner, generic hash functions can be enabled while securing the integrity of such functions by setting a lock bit <b>208</b> and disabling subsequent access.</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 3</figref> illustrates a flow diagram of a method of enabling a function within a module according to an aspect of the disclosure. <figref idref="DRAWINGS">FIG. 3</figref> can be employed in whole, or in part, by the information handling system <b>100</b> depicted in <figref idref="DRAWINGS">FIG. 1</figref>, or any other type of system, controller, device, module, processor, or any combination thereof, operable to employ all, or portions of, the method of <figref idref="DRAWINGS">FIG. 3</figref>. Additionally, the method can be embodied in various types of encoded logic including software, firmware, hardware, or other forms of digital storage mediums, computer readable mediums, or logic, or any combination thereof, operable to provide all, or portions, of the method of <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0039" num="0038">The method begins generally at block <b>300</b> and can be employed within a manufacturing environment. At block <b>302</b>, a security card can be identified. For example, an information handling system can include several different types of cards that can be installed. As such, each security card can include a unique identifier that can be accessed to identify a card type. Upon identifying a card type, the method can proceed to decision block <b>303</b> and detects whether the lock bit of the security card has been set. If the lock bit has been set, the method can proceed to block <b>314</b> as described below. If at decision block <b>303</b>, the lock bit is not set, the method can proceed to decision block <b>304</b>, and detects whether a custom hash function install routine may be available. If a custom has function install routine cannot be detected, the method can proceed to block <b>306</b>, and accesses a generic hash function install routine. The method can then proceed to block <b>308</b>, and the generic hash function routine can be loaded onto the module of the security card. The method can then proceed to block <b>310</b>, and the module can execute the generic hash function install routine. Upon completing execution, the method can then proceed to block <b>312</b>, and a hash function lock bit can be set. The hash function lock bit ensures that hash functions installed within the module cannot be altered, changed, etc.</p>
<p id="p-0040" num="0039">Upon setting the hash function lock bit, the method can proceed to block <b>314</b>, and a can complete other task. The method can proceed to block <b>316</b> and exits. For example, the method can continue with additional manufacturing processes, software installations, etc. as needed or desired.</p>
<p id="p-0041" num="0040">At decision block <b>304</b>, the method detects a custom hash function install routine, the method can proceed to decision block <b>318</b>. At decision block <b>318</b>, the method can detect whether a customer supplied hash function install routine may be available. If a customer supplied hash function install routine is detected, the method can proceed to block <b>320</b>, and accesses the customer supplied hash function install routine. The method can then proceed to block <b>322</b>, and loads the customer supplied hash function install routine onto the module. Upon loading the customer supplied hash function install routine, the module can proceed to block <b>310</b>, and executes the customer supplied hash function install routine. The method can then proceed to block <b>312</b> as described above.</p>
<p id="p-0042" num="0041">If at decision block <b>318</b>, if a customer supplied hash function install routine cannot detected (e.g. the customer will install), the method can proceed to block <b>324</b>, and ensures one or more hash functions man not be enabled. The method can then proceed to block <b>326</b>, and ensures the hash function lock bit is not set. For example, the method can check the lock bit and a hash function. If the lock bit had been set, or hash function may be enabled, or any combination thereof, an error message can be sent to an operator. In a form, the BIOS could be check using OS Utilities that check the security card, TPM module, etc. The BIOS can also be configured to output an indication as to whether the lock bit had been set. Various other methods can also be deployed. The method can then proceed to block <b>314</b> and updates the BIOS, and to block <b>316</b> and exits.</p>
<p id="p-0043" num="0042">Note that not all of the activities described above in the general description or the examples are required, that a portion of a specific activity may not be required, and that one or more further activities may be performed in addition to those described. Still further, the order in which activities are listed are not necessarily the order in which they are performed.</p>
<p id="p-0044" num="0043">The specification and illustrations of the embodiments described herein are intended to provide a general understanding of the structure of the various embodiments. The specification and illustrations are not intended to serve as an exhaustive and comprehensive description of all of the elements and features of apparatus and systems that use the structures or methods described herein. Many other embodiments may be apparent to those of skill in the art upon reviewing the disclosure. Other embodiments may be used and derived from the disclosure, such that a structural substitution, logical substitution, or another change may be made without departing from the scope of the disclosure. Accordingly, the disclosure is to be regarded as illustrative rather than restrictive.</p>
<p id="p-0045" num="0044">Certain features are, for clarity, described herein in the context of separate embodiments, may also be provided in combination in a single embodiment. Conversely, various features that are, for brevity, described in the context of a single embodiment, may also be provided separately or in any subcombination. Further, reference to values stated in ranges includes each and every value within that range.</p>
<p id="p-0046" num="0045">Benefits, other advantages, and solutions to problems have been described above with regard to specific embodiments. However, the benefits, advantages, solutions to problems, and any feature(s) that may cause any benefit, advantage, or solution to occur or become more pronounced are not to be construed as a critical, required, or essential feature of any or all the claims.</p>
<p id="p-0047" num="0046">The above-disclosed subject matter is to be considered illustrative, and not restrictive, and the appended claims are intended to cover any and all such modifications, enhancements, and other embodiments that fall within the scope of the present invention. Thus, to the maximum extent allowed by law, the scope of the present invention is to be determined by the broadest permissible interpretation of the following claims and their equivalents, and shall not be restricted or limited by the foregoing detailed description.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method of enabling functions of a security card comprising:
<claim-text>detecting whether to install a custom install routine within a module configured to enable access to a hash function during a manufacturing process of the security card;</claim-text>
<claim-text>accessing a lock bit configured to lock access to the hash function; and</claim-text>
<claim-text>detecting whether to set the lock bit to lock access to the hash function based on whether the custom install routine has been installed during the manufacturing process of the security card;</claim-text>
<claim-text>setting, at a manufacturing site, the lock bit to disable installation of another hash function when the custom install routine has been installed during the manufacturing process; and</claim-text>
<claim-text>sending the security card to a customer site with the lock bit not set to allow a customer to install hash functions at the customer site when the custom install routine has not been installed during the manufacturing process.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>detecting the custom install routine;</claim-text>
<claim-text>installing the custom install routine within the module; and</claim-text>
<claim-text>executing the custom install routine using the module.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising updating a BIOS of an information handling system.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>detecting a customer site install preference of the custom install routine;</claim-text>
<claim-text>ensuring a hash function install routine is not executed using the module; and</claim-text>
<claim-text>ensuring the lock bit is not disabled.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>identifying the module as a trusted platform module (TPM);</claim-text>
<claim-text>detecting a hash function install routine to use with the trusted platform module;</claim-text>
<claim-text>executing the hash function install routine using the trusted platform module; and</claim-text>
<claim-text>setting the lock bit configured as a hash function lock bit of the trusted platform module.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>accessing the security card during a software installation within the manufacturing process;</claim-text>
<claim-text>detecting whether to install the hash function onto the security card;</claim-text>
<claim-text>installing the hash function onto the security card; and</claim-text>
<claim-text>setting a hash function lock bit of the security card.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>accessing the security card during a software installation within the manufacturing process;</claim-text>
<claim-text>ensuring the hash function is not installed onto the security card; and</claim-text>
<claim-text>ensuring the lock bit configured is not set.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>ensuring a hash function is not installed on the module; and</claim-text>
<claim-text>shipping the module to the customer with the lock bit unset.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:
<claim-text>receiving the module at a customer site;</claim-text>
<claim-text>accessing the module;</claim-text>
<claim-text>installing the hash function using a customer hash function installation routine; and</claim-text>
<claim-text>setting the lock bit upon installing the hash function.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A security card comprising:
<claim-text>a module configured to execute a hash function installation routine to install a hash function;</claim-text>
<claim-text>a memory coupled to the module and configured to store a hash function loaded during the installation process; and</claim-text>
<claim-text>a hash function lock bit configured to be set, at a manufacturing site, in association with completing the installation of a hash function routine during a manufacturing process of the security card, wherein the security card is sent to a customer site with the lock bit not set to allow a customer to install hash functions at the customer site when the hash function routine has not been installed during the manufacturing process.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The security card of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein:
<claim-text>the module is configured to detect that the hash function is not to be installed during execution of the hash function installation routine; and</claim-text>
<claim-text>the module is configured not to set the hash function lock bit when the hash function is not installed.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The security card of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein:
<claim-text>the module is configured to execute a generic hash function installation routine;</claim-text>
<claim-text>the module is configured to install a generic hash function; and</claim-text>
<claim-text>the module is configured to set the hash function lock bit.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The security card of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein:
<claim-text>the module includes a processor configured to execute the hash function installation routine; and</claim-text>
<claim-text>the module is configured to not access a system bus during execution of the hash function installation routine.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The security card of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the module includes a trusted platform module.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The security card of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising:
<claim-text>a plurality of hash functions installed during execution of the hash function installation routine, wherein the plurality of hash functions are accessible to an information handling system; and</claim-text>
<claim-text>a hash function lock bit configured to disable an updating of the plurality of hash functions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. An information handling system comprising:
<claim-text>a security card configurable to access a hash function installed during execution of a hash function installation routine;</claim-text>
<claim-text>a unique identifier stored within a memory, wherein the unique identifier is accessed to identify a type of operations to be performed by the security card;</claim-text>
<claim-text>a trusted platform module configured to execute the hash function installation routine; and</claim-text>
<claim-text>a hash function lock bit configured to be set upon installation of the hash function using the hash function installation routine during a manufacturing process of the security card, wherein the information handling system is sent to a customer site with the lock bit not set to allow a customer to install hash functions at the customer site when the hash function has not been installed during the manufacturing process.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The information handling system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising:
<claim-text>an I/O interface configured to communicate the hash function installation routine to the system board using a data bus; and</claim-text>
<claim-text>wherein the trusted platform module is configured to initiate disabling access to the data bus during installation of the hash function.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The information handling system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising a hash function lock bit configured to be set only one time.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The information handling system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, further comprising the hash function lock bit configured to be set at a customer site. </claim-text>
</claim>
</claims>
</us-patent-grant>
