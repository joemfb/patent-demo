<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626690-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626690</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13033443</doc-number>
<date>20110223</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>374</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>N</subclass>
<main-group>5</main-group>
<subgroup>02</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>706 46</main-classification>
</classification-national>
<invention-title id="d2e53">Pattern recognition</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6618725</doc-number>
<kind>B1</kind>
<name>Fukuda et al.</name>
<date>20030900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6826569</doc-number>
<kind>B2</kind>
<name>Robertson</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7415461</doc-number>
<kind>B1</kind>
<name>Guha et al.</name>
<date>20080800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2005/0289401</doc-number>
<kind>A1</kind>
<name>Goin et al.</name>
<date>20051200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 47</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2007/0282785</doc-number>
<kind>A1</kind>
<name>Fayyad et al.</name>
<date>20071200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2009/0006290</doc-number>
<kind>A1</kind>
<name>Gunawardana et al.</name>
<date>20090100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2009/0083222</doc-number>
<kind>A1</kind>
<name>Craswell et al.</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  3</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2009/0124507</doc-number>
<kind>A1</kind>
<name>Sun et al.</name>
<date>20090500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2009/0157643</doc-number>
<kind>A1</kind>
<name>Gollapudi et al.</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2010/0185649</doc-number>
<kind>A1</kind>
<name>Zhou et al.</name>
<date>20100700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2012/0136855</doc-number>
<kind>A1</kind>
<name>Ni et al.</name>
<date>20120500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707724</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00012">
<othercit>Craswell et al, Random Walks on the Click Graph, 2007.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00013">
<othercit>Deng et al, A Generalized Co-HITS Algorithm and its Application to Bipartite Graphs, 2009.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00014">
<othercit>Dogrusoz et al, On labeling in graph visualization, 2007.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00015">
<othercit>Schulz et al, Visual Analysis of Bipartite Biological Networks, 2008.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00016">
<othercit>International Search Report, PCT/US2011/026722, Feb. 28, 2012, 9 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00017">
<othercit>Y. Chen, et al.; &#x201c;Application of Distributed Safe Log Management in Small-scale, High-risk System&#x201d;; Feb. 26-28, 2010; pp. 427-429; vol. 1; http://ieeexplore.ieee.org/Xplore/login.jsp?url=http://ieeexplore.ieee.org/ iel5/5445099/5451211/05451919.pdf%3Farnumber%3D5451919&#x26;authDecision=203.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00018">
<othercit>Zan Huang, et al.; &#x201c;Analyzing Consumer-product Graphs: Empirical Findings and Applications in Recommender Systems&#x201d;; Jul. 2007; pp. 1146-1164; vol. 53; http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.67.1856.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00019">
<othercit>Bjorn Scheuermann, et al.; &#x201c;On the Time Synchronization of Distributed Log Files in Networks with Local Broadcast Media&#x201d;; Apr. 2009; pp. 431-444; vol. 17; http://portal.acm.org/citation.cfm?id=1552199.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00020">
<othercit>Almudena Konrad, et al.; &#x201c;Determining Model Accuracy of Network Traces&#x201d;; Feb. 19, 2006; http://bnrg.cs.berkeley.edu/&#x2dc;adj/publications/paper-files/accuracy-jcss06.pdf.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>15</number-of-claims>
<us-exemplary-claim>7</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>7</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120215736</doc-number>
<kind>A1</kind>
<date>20120823</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Aharon</last-name>
<first-name>Michal</first-name>
<address>
<city>Haifa</city>
<country>IL</country>
</address>
</addressbook>
<residence>
<country>IL</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Cohen</last-name>
<first-name>Ira</first-name>
<address>
<city>Modiin</city>
<country>IL</country>
</address>
</addressbook>
<residence>
<country>IL</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Bergman</last-name>
<first-name>Ruth</first-name>
<address>
<city>Haifa</city>
<country>IL</country>
</address>
</addressbook>
<residence>
<country>IL</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Shaked</last-name>
<first-name>Doron</first-name>
<address>
<city>Kirayat Tivon</city>
<country>IL</country>
</address>
</addressbook>
<residence>
<country>IL</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Aharon</last-name>
<first-name>Michal</first-name>
<address>
<city>Haifa</city>
<country>IL</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Cohen</last-name>
<first-name>Ira</first-name>
<address>
<city>Modiin</city>
<country>IL</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Bergman</last-name>
<first-name>Ruth</first-name>
<address>
<city>Haifa</city>
<country>IL</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Shaked</last-name>
<first-name>Doron</first-name>
<address>
<city>Kirayat Tivon</city>
<country>IL</country>
</address>
</addressbook>
</inventor>
</inventors>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Hewlett-Packard Development Company, L.P.</orgname>
<role>02</role>
<address>
<city>Houston</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Gaffin</last-name>
<first-name>Jeffrey A</first-name>
<department>2129</department>
</primary-examiner>
<assistant-examiner>
<last-name>Chubb</last-name>
<first-name>Mikayla</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method for pattern recognition performed by a physical computing system includes, with the physical computing system, structuring data as a bi-partite graph, a set of instance nodes within the graph representing instances within the data and a set of property nodes within the graph representing properties of the instances, edges between the instance nodes and the property nodes representing values of the properties, assigning a transition probability function to each of the instance nodes and to each of the property nodes, and applying a random walker to the graph, the random walker utilizing the transition probability functions.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="238.84mm" wi="152.91mm" file="US08626690-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="212.51mm" wi="171.53mm" file="US08626690-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="260.77mm" wi="139.87mm" file="US08626690-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="261.28mm" wi="151.89mm" file="US08626690-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="260.94mm" wi="151.89mm" file="US08626690-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="251.12mm" wi="166.03mm" file="US08626690-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="216.92mm" wi="128.95mm" file="US08626690-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">Various professions often look for patterns in large amounts of data that relates to real life issues. For example, one who studies medicine might look for patterns that indicate a correlation between two physical properties of a patient. Particularly, analyzing large sets of patient data might indicate that individuals who share certain characteristics and past experiences are at risk for particular types of illnesses or other adverse conditions. Finding these patterns in the data provides scientists with additional tools that can help discover causal relationships and thereby find ways to treat such illnesses.</p>
<p id="p-0003" num="0002">Various techniques such as factor analysis and Principal Component Analysis (PCA) can be used to reduce a number of observable variables within a set of data to a smaller number of unobserved variables that affect the observable variables. Viewing these unobserved variables helps to find patterns within the data. However, such techniques only find patterns that are present within most of the data. In some cases, a pattern may exist within a smaller percentage of the data. Such a pattern would not be picked up by various factor analysis methods.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0002" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0004" num="0003">The accompanying drawings illustrate various embodiments of the principles described herein and are a part of the specification. The illustrated embodiments are merely examples and do not limit the scope of the claims.</p>
<p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram showing an illustrative physical computing system, according to one example of principles described herein.</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 2</figref> is a diagram showing an illustrative bi-partite graph, according to one example of principles described herein.</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram showing the use of transition probability functions for property nodes within a bi-partite graph, according to one example of principles described herein.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram showing the use of a transition probability function for an instance node within a bi-partite graph, according to one example of principles described herein.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIGS. 5A and 5B</figref> are diagrams showing illustrative graphs that indicate correlation between two different properties, according to one example of principles described herein.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 6</figref> is a flowchart showing an illustrative method for pattern recognition, according to one example of principles described herein.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<p id="p-0011" num="0010">Throughout the drawings, identical reference numbers designate similar, but not necessarily identical, elements.</p>
<heading id="h-0003" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0012" num="0011">As mentioned above, various techniques such as factor analysis and Principal Component Analysis (PCA) can be used to reduce a number of observable variables within a set of data to a smaller number of unobserved variables that affect the observable variables. Viewing these unobserved variables helps to find patterns within the data. However, such techniques only find patterns that are present within most of the data. In some cases, a pattern may exist within a smaller percentage of the data. Such a pattern would not be picked up by various factor analysis methods.</p>
<p id="p-0013" num="0012">In light of this and other issues, the present specification discloses methods and systems for pattern recognition in large amounts of data. Particularly, methods described herein will allow a system to detect patterns that exist within smaller subsets of the available data. A pattern is a non-negligible set of instances that share similar values of similar properties.</p>
<p id="p-0014" num="0013">According to certain illustrative examples, data that is to be searched for patterns is structured as a bi-partite graph. A bi-partite graph is a type of data structure. A data structure is a way of storing and representing data such that it can be used efficiently. A bi-partite graph data structure includes two sets of nodes. A node in the first set can be connected to any number of the nodes in the second set and vice versa. The connections between nodes are referred to as edges.</p>
<p id="p-0015" num="0014">To structure the data to allow it to be searched efficiently for patterns, the first set of nodes within the bi-partite graph data structure is used to represent the instances within the data. These nodes will be referred to as instance nodes. The second set of nodes within the data structure is used to represent the properties that may be exhibited by those instances. These nodes will be referred to as property nodes. An edge between a particular instance node and a particular property node is assigned the value of that property associated with that particular instance. For example, if the instance nodes represent persons who have taken a survey and the property nodes represent the questions in that survey, then the edge between an instance node and a property node represents the answer given by the person associated with that instance node to the question associated with that property node.</p>
<p id="p-0016" num="0015">Each property node is then assigned a transition probability function. The transition probability function assigned to a particular property node is based on the nature of the property associated with that property node. Additionally, each instance node is assigned a transition probability function that varies based on the property nodes connected to that instance node.</p>
<p id="p-0017" num="0016">A random walker is then applied to the bi-partite graph. The random walker is designed to jump from an instance node to a property node and then from that property node back to an instance node. This process continues for a particular period of time. The edges that the random walker chooses to traverse will be randomly selected according to a computed transition probability function. The transition probability function will cause the random walker to be more likely to traverse certain edges more than others. By looking at the edges that are more frequently traversed, patterns in the data can be revealed.</p>
<p id="p-0018" num="0017">In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present systems and methods. It will be apparent, however, to one skilled in the art that the present apparatus, systems and methods may be practiced without these specific details. Reference in the specification to &#x201c;an embodiment,&#x201d; &#x201c;an example&#x201d; or similar language means that a particular feature, structure, or characteristic described in connection with the embodiment or example is included in at least that one embodiment, but not necessarily in other embodiments. The various instances of the phrase &#x201c;in one embodiment&#x201d; or similar phrases in various places in the specification are not necessarily all referring to the same embodiment.</p>
<p id="p-0019" num="0018">Referring now to the figures, <figref idref="DRAWINGS">FIG. 1</figref> is a diagram showing an illustrative physical computing system (<b>100</b>) that can be used for pattern recognition. According to certain illustrative examples, the physical computing system (<b>100</b>) includes a memory (<b>102</b>) having pattern recognition software (<b>104</b>) and data (<b>106</b>) stored thereon. The physical computing system (<b>100</b>) also includes a processor (<b>108</b>) and a user interface (<b>110</b>).</p>
<p id="p-0020" num="0019">There are many types of memory available. Some types of memory, such as solid state drives, are designed for storage. These types of memory typically have large storage volume but relatively slow performance. Other types of memory, such as those used for Random Access Memory (RAM), are optimized for speed and are often referred to as &#x201c;working memory.&#x201d; The various forms of memory may store information in the form of software (<b>104</b>) and data (<b>106</b>).</p>
<p id="p-0021" num="0020">The physical computing system (<b>100</b>) also includes a processor (<b>108</b>) for executing the software (<b>104</b>) and using or updating the data (<b>106</b>) stored in memory (<b>102</b>). The software (<b>104</b>) may include an operating system. An operating system allows other applications to interact properly with the hardware of the mobile computing system. The other applications may include a pattern recognition application.</p>
<p id="p-0022" num="0021">A user interface (<b>110</b>) may provide a means for the user (<b>112</b>) to interact with the physical computing system (<b>100</b>). The user interface may include any collection of devices for interfacing with a human user (<b>112</b>). For example, the user interface (<b>110</b>) may include an input device such as a keyboard or mouse and an output device such as a monitor.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 2</figref> is a diagram showing an illustrative bi-partite graph (<b>200</b>). As mentioned above, data can be structured as a bi-partite graph (<b>200</b>). Throughout this specification and in the appended claims, the term &#x201c;bi-partite graph&#x201d; refers to a data structure and not a visual display. A first set of nodes within the graph (<b>200</b>) will be referred to as instance nodes (<b>214</b>). A second set of nodes within the graph will be referred to as property nodes (<b>216</b>). Edges (<b>218</b>) exist between the instance nodes (<b>214</b>) and the property nodes (<b>216</b>). These edges (<b>218</b>) can be assigned a value.</p>
<p id="p-0024" num="0023">Each instance node (<b>202</b>) within the bi-partite graph (<b>200</b>) represents one instance within the data. For example, in the case where the data represents results of a survey taken by several people, each instance node will represent one participant of that survey.</p>
<p id="p-0025" num="0024">Each property node (<b>216</b>) within the bi-partite graph (<b>200</b>) represents a particular property that can be associated with an instance. For example, in the above mentioned example where the data represents results from a survey taken by several people, each property node may represent one question asked in that survey.</p>
<p id="p-0026" num="0025">The edges (<b>218</b>) within the bi-partite graph (<b>200</b>) are used to indicate the value of each property associated with a particular instance. In some cases, the data may not be complete and thus each instance node (<b>202</b>) may not necessary have an edge (<b>218</b>) connecting to each property node (<b>216</b>). The edges are assigned a value according to the instance node and the property node to which they connect. For example, the edge (<b>218</b>) between instance <b>1</b> (<b>202</b>-<b>1</b>) and the age property node (<b>204</b>) is assigned the value of 32. This indicates that the person associated with instance <b>1</b> (<b>202</b>-<b>1</b>) is 32 years of age. Likewise, the edge (<b>218</b>) connected between instance <b>2</b> (<b>202</b>-<b>2</b>) and the age property node (<b>204</b>) is assigned the value of 47. This indicates that the person associated with instance <b>2</b> (<b>202</b>-<b>2</b>) is 47 years of age. Additionally, the value of an edge may include more than one value. For example, an edge may represent a paired value. One of the values in the pair can represent the answer given by a survey participant and the other value can represent the time it took for that participant to give that answer.</p>
<p id="p-0027" num="0026">The other property nodes (<b>216</b>) represent various other properties. Particularly, the Yes/No question property node (<b>206</b>) may represent a person's response to a yes or no question. The rating property node (<b>208</b>) may represent a person's response to a question asking the person to rate a particular experience on a scale from one to five. The spending property node (<b>210</b>) may represent a person's response to a question regarding how much money he or she spends on a particular day. The region property node (<b>212</b>) may indicate the geographical region of where a person lives. The pattern recognition principles described herein will find patterns among these various properties.</p>
<p id="p-0028" num="0027">The bi-partite graph (<b>200</b>) shown in <figref idref="DRAWINGS">FIG. 2</figref> and in the remaining figures is a simple example. A practical bi-partite graph representing a practical set of data will generally be much larger. Thus, the pattern recognition principles described herein will be able to detect patterns in large amounts of complex data.</p>
<p id="p-0029" num="0028">The various properties represented by the property nodes (<b>216</b>) may be measured in different manners. For example, some properties may contain a large set of discrete values to which a person may belong. For example, if age is measured in years and months, there is a relatively large set of discrete values to represent that age. Conversely, some properties can be measured in a relatively small set of discrete values. For example, the Yes/No question property node (<b>206</b>) may represent a question that can be answered in one of two discrete values, such as an answer to a simple yes or no question. In some cases, the value of an edge may be continuous in nature. This would be the case if the property connected to that edge is one that can take on a continuum of values.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram showing the use of transition probability functions for property nodes within a bi-partite graph. As mentioned above, a random walker is applied to the bi-partite graph. The random walker will jump from an instance node to a property node and vice versa. It will not, however, jump from an instance node to another instance node. Additionally, it will not jump from a property node to another property node. When the random walker is on a particular property node, it will randomly jump along one of the edges connected from that property node to one of the instance nodes (<b>202</b>). However, the probability it will jump to along a particular edge is not necessarily the same for each edge connected to that property node. A transition probability function assigned to that node will determine the probability that the random walker will jump along each edge (<b>218</b>) connected to that property node.</p>
<p id="p-0031" num="0030">A probability function is used to define the probability that a random selection of elements within a set will choose a particular element. For example, if a set contains five elements to be chosen at random, then a probability function will describe the probability that each of those five elements will be chosen. The probability that a particular element will be chosen is typically assigned a value between 0 and 1. The adding of the probability assigned to each element within the set will sum to 1. For example, if each of the five elements within the set had an equal chance of being selected, then the probability function would define each element as having a probability of 0.2, the sum of each element being 1. However, a probability function does not necessarily have to assign each element an equal probability of being selected.</p>
<p id="p-0032" num="0031">The transition probability function assigned to a particular property node treats each edge connected to that property node as an element within a set. Each edge is given a probability according to the transition probability function. The probability assigned to each element is based on the value of the edge from which the random walker arrived. The transition probability function will be such that the random walker is more likely to choose edges with a value similar to that of the arriving edge.</p>
<p id="p-0033" num="0032">For example, if the random walker jumps from instance node <b>1</b> (<b>202</b>-<b>1</b>) to the age property node (<b>204</b>), then the transition probability function (<b>302</b>) assigned to the age property node (<b>204</b>) will determine the probability that the random walker will jump along each edge (<b>218</b>) connected to the age property node (<b>204</b>). The random walker will either jump along the edge connected to instance <b>2</b> (<b>202</b>-<b>2</b>), the edge connected to instance <b>3</b> (<b>202</b>-<b>3</b>), or the edge connected to instance <b>4</b> (<b>202</b>-<b>4</b>). Because the random walker arrived at the age property node (<b>204</b>) from an edge with a value of 32, it will be more likely to leave the age property node (<b>204</b>) on an edge (<b>218</b>) with a value that is closer to 32. Thus, the most likely edge (<b>218</b>) to be traversed is the edge connecting to instance <b>4</b> (<b>202</b>-<b>4</b>). This is because the number 28 is closer to the number 32 than the number 47 or the number 13. However, it is still possible that the random walker will jump to instance <b>2</b> (<b>202</b>-<b>2</b>) or instance <b>3</b> (<b>202</b>-<b>3</b>), but the random walker is less likely to do so.</p>
<p id="p-0034" num="0033">Each property node (<b>216</b>) may be assigned a unique transition probability function. The transition probability function assigned to a particular property node is dependent upon the nature of that property node. For example, due to the range of values for the age property in the data, a continuous transition probability function (<b>302</b>-<b>1</b>) may be more appropriate for the age property node (<b>204</b>). However, in other cases, the property may only take on a small discrete range of values. For example, the rating property node (<b>206</b>) may represent a question that asks a participant in the survey to rate a particular experience from one to five based on how enjoyable that experience was. Because the edges (<b>218</b>) connected to the rating property node (<b>208</b>) will only take on a small range of values, a discrete transition probability function (<b>302</b>-<b>2</b>) may be more appropriate for the rating property node (<b>208</b>). However, a continuous transition probability function may be used as well.</p>
<p id="p-0035" num="0034">Using a discrete transition probability function, when the random walker is on the rating property node (<b>208</b>), the random walker will most likely jump to an instance node connected through an edge having a similar value to the edge from which it came. For example, if the random walker arrived from instance node <b>2</b> (<b>202</b>-<b>2</b>) along the edge with a value of 4, it will be more likely to leave the rating property node (<b>208</b>) on the edge connected to instance <b>3</b> (<b>202</b>-<b>3</b>) than the edge connected to instance <b>4</b> (<b>202</b>-<b>4</b>). This is because the value of 5 is closer to the value of 4 than the value of 2.</p>
<p id="p-0036" num="0035">In some cases, the discrete set of values for a particular property may not have a numerical order. For example, if the property is a person's profession, then the possible set of responses would not be numerically ordered. In this case, the responses may be grouped according to type of profession. The transition probability function may then make it more likely that the random walker will jump to an edge with a profession in the same group.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram showing the use of a transition probability function for an instance node within a bi-partite graph. According to certain illustrative examples, when the random walker arrives at an instance node, the instance transition probability function (<b>402</b>) associated with that instance node determines which edge (<b>218</b>) the random walker will traverse to get to one of the property nodes (<b>216</b>) connected to that instance node (<b>202</b>). In order for the random walker to find patterns in the data, the instance transition probability function associated with each instance node is configured to make it more likely that the random walker will jump to a property node that is correlated to the property node from which it came. This is done by determining how well one property correlates with another property at a particular value. The mechanism for determining how well one property correlates with another will be described in more detail below in the text associated with <figref idref="DRAWINGS">FIGS. 5A and 5B</figref>.</p>
<p id="p-0038" num="0037">For example, if the random walker arrives at instance node <b>3</b> (<b>202</b>-<b>3</b>) from the age property node (<b>204</b>), then the instance probability function (<b>402</b>) associated with instance node <b>3</b> (<b>202</b>-<b>3</b>) will make it more likely that the random walker will jump to a property that correlates well with age property at the age of 13. In this example, the pattern recognition system may have previously determined that at the age range around 13 years old, there is a correlation to the spending property (<b>210</b>). This may be because 13 year olds typically do not spend a lot of money per day and thus a number of persons around the age of 13 would be spending similar amounts of money per day. This may not be the case for other age ranges. Thus, the instance probability function will be such that when the random walker is choosing from among the property nodes connected to instance <b>3</b> (<b>202</b>-<b>3</b>), it will be more likely to jump to the spending property node (<b>210</b>) than another node which does not correlate well with the age property node (<b>204</b>). It will still be possible for the random walker to jump to a property node that does not correlate well. However, it will be less likely to do so.</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIGS. 5A and 5B</figref> are diagrams showing illustrative graphs that indicate correlation between two different properties. According to certain illustrative examples, the pattern recognition system may determine how well each property correlates with the other properties before applying the random walker function. <figref idref="DRAWINGS">FIG. 5A</figref> illustrates a comparison between two properties that do not correlate well. Alternatively, <figref idref="DRAWINGS">FIG. 5B</figref> illustrates a comparison between two properties that show a correlation at a particular range of values. Each set of bars along the horizontal axis of each graph (<b>500</b>, <b>510</b>) represents an instance (<b>504</b>) within the data. The vertical length of each graph (<b>500</b>, <b>510</b>) indicates the value of a particular property. The white bars represent a first property and the shaded bars represent a second property.</p>
<p id="p-0040" num="0039">To determine how well two properties correlate, the pattern recognition system sorts a first property based on each edge connected to that property node. The edges represent the value of each instance that shares that property. The edges can be sorted in a variety of ways based on the value of the edges. In this example, the edges are sorted from least value to greatest value. The graph (<b>500</b>) in <figref idref="DRAWINGS">FIG. 5A</figref> shows ten different instances. These instances are shown sorted based on their values of the first property represented by the white bars (<b>506</b>). The pattern recognition system can then look at the value of the second property of each of the instances represented by the shaded bars (<b>508</b>). In <figref idref="DRAWINGS">FIG. 5A</figref>, it can be seen that there is no pattern in the second property values represented by the shaded bars (<b>508</b>). The values of the second property are random. Thus, there is little correlation between these two properties.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 5B</figref> illustrates the comparison between two different properties. Again, the instances (<b>504</b>) are sorted based on the value of the first property which is represented by the white bars (<b>514</b>), Here, there is a stability of the values of the second property at a particular range (<b>512</b>) of instances, Thus, the pattern recognition system can determine that there is a correlation between these two properties at the value ranges of the range (<b>512</b>) of instances where stability is found. This correlation can be used to determine how likely the random walker will choose to jump to one property over another.</p>
<p id="p-0042" num="0041">In some cases, the correlation between each of the properties in the entire bi-partite graph can be predetermined before the random walker function is applied. The transition probability functions for both the instance nodes and the property nodes can also be determined before the random walker function is applied. In some cases, the transition probability functions can be represented by transition matrices. Transition matrices are often used in stochastic system modeling to determine the probability between different outcomes. In some examples, patterns can be found by looking at the stationary vector of a stochastic system. The stationary vector can be determined through application of various mathematical computations on the transition probability matrices. These computations are known in the art and thus a detailed description of them will not be given here.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 6</figref> is a flowchart showing an illustrative method for pattern recognition. According to certain illustrative examples, the method includes, with a physical computing system, structuring (block <b>602</b>) data as a bi-partite graph, a set of instance nodes within the graph representing instances within the data and a set of property nodes within the graph representing properties of the instances, edges between the instance nodes and the property nodes representing values of the properties, assigning (block <b>604</b>) a transition probability function to each of the instance nodes and to each of the property nodes, and applying (block <b>606</b>) a random walker to the graph, the random walker utilizing the transition probability functions.</p>
<p id="p-0044" num="0043">In conclusion, through use of methods and systems related to pattern recognition described herein, patterns that are present in a non-negligible number of instances may be revealed. This can allow those who study subjects related to the data to find patterns and relationships that were previously unknown. These patterns and relationships can lead to further research and discovery of new causal relationships.</p>
<p id="p-0045" num="0044">The preceding description has been presented only to illustrate and describe embodiments and examples of the principles described. This description is not intended to be exhaustive or to limit these principles to any precise form disclosed. Many modifications and variations are possible in light of the above teaching.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for pattern recognition performed by a physical computing system, the method comprising:
<claim-text>with said physical computing system, structuring data as a hi-partite graph, a set of instance nodes within said graph representing instances within said data and a set of property nodes within said graph representing properties of said instances, edges between said instance nodes and said property nodes representing values of said properties;</claim-text>
<claim-text>with said physical computing system, assigning a transition probability function to each of said instance nodes and to each of said property nodes; and</claim-text>
<claim-text>with said physical computing system, applying a random walker to said graph, said random walker utilizing said transition probability functions;</claim-text>
<claim-text>in which said transition probability function assigned to each of said property nodes is such that said random walker is more likely to transition between edges closer in value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising, with said physical computing system, determining a pattern in said data by determining which of said edges is more frequently traversed by said random walker.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which a transition probability function assigned to a property node within said set of property nodes comprises one of a continuous transition probability function based on a property associated with that property node and a discrete transition probability function based on a property associated with that property node.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which a transition probability function assigned to a particular instance node within said set of instant nodes comprises a transition probability function configured to make said random walker transition between edges connected to correlated properties.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, in which said correlated properties are correlated at the value of the arriving edge connected to said particular instance node.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, in which it is determined how correlated two properties are by:
<claim-text>sorting each edge connected to a first property by value;</claim-text>
<claim-text>sorting each edge connected to a second property based on said sorting of said edges connected to said first property; and</claim-text>
<claim-text>determining if there is a stability of values at any range within said edges connected to said second property.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A physical computing system comprising:
<claim-text>a processor; and</claim-text>
<claim-text>a memory communicatively coupled to said processor;</claim-text>
<claim-text>in which said processor is configured to:
<claim-text>structure data as a bi-partite graph, a set of instance nodes within said graph representing instances within said data and a set of property nodes within said graph representing properties of said instances, edges between said instance nodes and said property nodes representing values of said properties;</claim-text>
<claim-text>assign a transition probability function to each of said instance nodes and to each of said property nodes; and</claim-text>
<claim-text>apply a random walker to said graph, said random walker utilizing said transition probability functions;</claim-text>
<claim-text>in which said transition probability function assigned to said property node is such that said random walker is more likely to transition between edges closer in value.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The system of <claim-ref idref="CLM-00007">claim 7</claim-ref>, in which said processor is further configured to determine a pattern in said data by determining which of said edges is more frequently traversed by said random walker.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The system of <claim-ref idref="CLM-00007">claim 7</claim-ref>, in which a transition probability function assigned to a property node within said set of property nodes comprises one of: a continuous transition probability function based on a property associated with that property node and a discrete transition probability function based on a property associated with that property node.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The system of <claim-ref idref="CLM-00007">claim 7</claim-ref>, in which a transition probability function assigned to a particular instance node within said set of instant nodes comprises a transition probability function configured to make said random walker transition between edges connected to correlated properties.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, in which said correlated properties are correlated at the value of the arriving edge connected to said particular instance node.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, in which in which to determine how correlated two properties are, said processor is further configured to:
<claim-text>sort each edge connected to a first property by value;</claim-text>
<claim-text>sort each edge connected to a second property based on said sorting of said edges connected to said first property; and</claim-text>
<claim-text>determine if there is a stability of values at any range within said edges connected to said second property.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A computer program product for managing providing a layout for graphic objects, said computer program product comprising:
<claim-text>a computer readable storage device having computer readable code embodied therewith, said computer readable program code comprising:
<claim-text>computer readable program code configured to structure data as a bi-partite graph, a set of instance nodes within said graph representing instances within said data and a set of property nodes within said graph representing properties of said instances, edges between said instance nodes and said property nodes representing values of said properties;</claim-text>
<claim-text>computer readable program code configured to assign a transition probability function to each of said instance nodes and to each of said property nodes;</claim-text>
<claim-text>computer readable program code configured to apply a random walker to said graph, said random walker utilizing said transition probability functions; and</claim-text>
<claim-text>computer readable program code configured to determine a pattern in said data by determining which of said edges is more frequently traversed by said random walker;</claim-text>
<claim-text>in which said transition probability function assigned to each of said instance nodes and property nodes is such that said random walker is more likely to transition between edges closer in value.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The computer program product of <claim-ref idref="CLM-00013">claim 13</claim-ref>, in which said transition probability function assigned to each property node within said set of property nodes comprises one of: a continuous transition probability function based on a property associated with that property node and a discrete transition probability function based on a property associated with that property node.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The computer program product of <claim-ref idref="CLM-00013">claim 13</claim-ref>, in which a transition probability function assigned to a particular instance node within said set of instant nodes comprises a transition probability function configured to make said random walker transition between edges connected to correlated properties. </claim-text>
</claim>
</claims>
</us-patent-grant>
