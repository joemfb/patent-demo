<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627085-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627085</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13539038</doc-number>
<date>20120629</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>CA</country>
<doc-number>2296220</doc-number>
<date>20000117</date>
</priority-claim>
</priority-claims>
<rule-47-flag/>
<us-term-of-grant>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>9</main-group>
<subgroup>32</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>713175</main-classification>
<further-classification>713153</further-classification>
<further-classification>713156</further-classification>
<further-classification>380278</further-classification>
<further-classification>380279</further-classification>
</classification-national>
<invention-title id="d2e71">Customizable public key infrastructure and development tool for same</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5218637</doc-number>
<kind>A</kind>
<name>Angebaud et al.</name>
<date>19930600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5787172</doc-number>
<kind>A</kind>
<name>Arnold</name>
<date>19980700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6108788</doc-number>
<kind>A</kind>
<name>Moses et al.</name>
<date>20000800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6499110</doc-number>
<kind>B1</kind>
<name>Moses et al.</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00005">
<othercit>Baboo, Santosh; Java Bean Component Architecture for Java; http://www.iormyx.com/whitepapers/javabeans/javabean.htm; published on Dec. 31, 1999 and retrieved Jan. 15, 2001.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00006">
<othercit>Chokhani, S.; Internet X. 509 Public Key Infrastructure Certificate Policy and Certification Practices Framework; ftp://ftp.int-evry.fr/pub/in-notes/rfc2527.txt; published Mar. 1999 and retrieved on Oct. 12, 2006.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00007">
<othercit>Clark, Cheryl et al.; Digital Signatures Initiative: An Enterprise Solution of Trust Final Report of the DSI Workgroup; published on Oct. 2000.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00008">
<othercit>Myers, M. et al.; Internet X. 509 Certificate request Message Format; ftp://ftp.int-evry.fr/pub/in-notes/rfc2511.txt.; retrieved on Oct. 12, 2006.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00009">
<othercit>Myers, M. et al.; Certificate Management Messages over CMS; ftp://ftp.int-evry.fr/pub/in-notes/rfc2797.txt; retrieved in Oct. 12, 2006.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>Venners, Bill; Security and the Class Loader Architecture; http://www.artima.com/underthehood/classloadersP.html; published Aug. 1997 and retrieved on Sep. 17, 2009.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00011">
<othercit>Zukowski, John; Introduction to the JavaBeans API: Short Course; http://java.sun.com/developer/onlineTraining/Beans/JBeansAPI/shortcourse.html; published and retrieved on Sep. 17, 2009.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>380278</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>380279</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713153</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713156</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713175</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713279</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>7</number-of-drawing-sheets>
<number-of-figures>7</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>12559091</doc-number>
<date>20090914</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>8214636</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13539038</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>10196286</doc-number>
<date>20020717</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>7610484</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>12559091</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>PCT/US01/01390</doc-number>
<date>20010117</date>
</document-id>
<parent-status>PENDING</parent-status>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>10196286</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60260892</doc-number>
<date>20010112</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60261169</doc-number>
<date>20010116</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120331288</doc-number>
<kind>A1</kind>
<date>20121227</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Kapoor</last-name>
<first-name>Amit</first-name>
<address>
<city>Palo Alto</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Kapoor</last-name>
<first-name>Amit</first-name>
<address>
<city>Palo Alto</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Novak Druce Connolly Bove + Quigg LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Certicom Corp.</orgname>
<role>03</role>
<address>
<city>Mississauga</city>
<country>CA</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Shiferaw</last-name>
<first-name>Eleni</first-name>
<department>2437</department>
</primary-examiner>
<assistant-examiner>
<last-name>Callahan</last-name>
<first-name>Paul</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A public key infrastructure comprises a client side to request and utilize certificates in communication across a network and a server side to administer issuance and maintenance of said certificates. The server side has a portal to receive requests for a certificate from a client. A first policy engine to processes such requests in accordance with a set of predefined protocols. A certification authority is also provided to generate certificates upon receipt of a request from the portal. The CA has a second policy engine to implement a set of predefined policies in the generation of a certificate. Each of the policy engines includes at least one policy configured as a software component e.g. a Java bean, to perform the discreet functions associated with the policy and generate notification in response to a change in state upon completion of the policy.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="134.28mm" wi="241.38mm" file="US08627085-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="243.50mm" wi="161.12mm" orientation="landscape" file="US08627085-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="217.25mm" wi="169.84mm" orientation="landscape" file="US08627085-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="226.31mm" wi="168.83mm" orientation="landscape" file="US08627085-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="71.80mm" wi="119.80mm" file="US08627085-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="140.04mm" wi="170.01mm" file="US08627085-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="133.27mm" wi="171.70mm" file="US08627085-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="233.26mm" wi="155.70mm" orientation="landscape" file="US08627085-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is a continuation of U.S. application Ser. No. 12/559,091 filed Sep. 14, 2009, now U.S. Pat. No. 8,214,636, which is a continuation of U.S. application Ser. No. 10/196,286 filed Jul. 17, 2002, now U.S. Pat. No. 7,610,484 which is a continuation of PCT/US01/01390 filed on Jan. 17, 2001 which claims priority from Canadian Application No. 2,296,220 filed on Jan. 17, 2000, U.S. Application No. 60/260,892 filed on Jan. 12, 2001 and U.S. Application No. 60/261,169 filed on Jan. 16, 2001 the contents of which are incorporated herein by reference.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0003" num="0002">The present invention relates to the field of cryptography and in particular to public key infrastructures.</p>
<heading id="h-0003" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0004" num="0003">Electronic commerce and communication has heightened the need to provide better ways to manage trust when using networked computing systems. The availability of manageable security services such as user authentication, data confidentiality, and user accountability are essential for deploying trustworthy Internet-based services.</p>
<p id="p-0005" num="0004">Research and development in the field of public key cryptography has been the greatest source of robust and scalable security protocol solutions. Public key cryptography is the basis for a number of popular digital signature and key management schemes. These include Diffie-Hellman key agreement and the RSA, DSA, and ECDSA digital signature algorithms. Public key algorithms are typically combined with other cryptographic algorithms (e.g. DES) and security protocols (e.g. SSL) to provide a wide range of sophisticated and scalable security services such as authentication, confidentiality, and integrity.</p>
<p id="p-0006" num="0005">Public key cryptography uses a pair of cryptographic keys&#x2014;one private and one public. Public key cryptography provides an elegant architecture for authentication and authorization, on any kind of communication channel. The Private key is kept secret and used to create digital signatures and decrypt encrypted messages. The public key of the user can be published and used by others to confirm the validity of a digital signature or to encrypt a message to the owner of the corresponding private key.</p>
<p id="p-0007" num="0006">A public-key certificate binds a public-key value to a set of information that identifies an entity (such as a person, organization, account or site) associated with use of the corresponding private key. This entity is known as the &#x201c;subject&#x201d; of the certificate. The binding is certified by a certificate authority (CA) who issues a certificate that can be used by subject to assure other parties of the authenticity of a communication. The certificate is used by a &#x201c;certificate user&#x201d; or &#x201c;relying party&#x201d; that needs to assure them of the accuracy of the public key distributed via that certificate and that will be used to verify a message. Without such certification, the user cannot be sure that the public key is really the public key of the subject. A certificate user is typically an entity that is verifying a digital signature from the certificate's subject or an entity sending encrypted data to the subject. The degree to which a certificate user can trust the binding embodied in a certificate depends on several factors. These factors include the practices followed by the certification authority (CA) in authenticating the subject; the CA's operating policy, procedures and security controls; the subject's obligations (e.g. to protect the private key); and the stated undertakings and legal obligations of the CA, such as warranties and limitations on liability.</p>
<p id="p-0008" num="0007">The CA which issues the certificates is frequently a software application running on a server and implementing a set of protocols and policies and administering the certificates that are issued. The certificate can be signed with an asymmetric cryptographic algorithm (using a digital signature) or authenticated with a symmetric system (using a message authentication code [MAC]).</p>
<p id="p-0009" num="0008">Usually a CA is responsible for several tasks. These may include, without restriction:
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0009">Receiving certificate requests</li>
        <li id="ul0002-0002" num="0010">Validating that the requesting entity has control of the private key matching the requested public key (proof of possession)</li>
        <li id="ul0002-0003" num="0011">Validating the conformance of the request with local policy, including restrictions on identifying information, attribute information and/or keying material.</li>
        <li id="ul0002-0004" num="0012">Modifying the request to create conformance with local policy</li>
        <li id="ul0002-0005" num="0013">Validating the information in the request against external data sources</li>
        <li id="ul0002-0006" num="0014">Determining if the request has been authenticated by the user or some other authority</li>
        <li id="ul0002-0007" num="0015">Presenting the request for manual approval by an administrator or administrators</li>
        <li id="ul0002-0008" num="0016">Signing or authenticating the certificate</li>
        <li id="ul0002-0009" num="0017">Publishing the certificate to a central storage point or multiple storage points</li>
        <li id="ul0002-0010" num="0018">Returning the certificate to the requestor</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0010" num="0019">With the dramatic increase in use of public key certificates there has been recognized a need for organizations to manage the security requirements for certificate issuing and management components. This need has evolved into what is termed a Public Key Infrastructure (PKI). A public key infrastructure (PKI) is commonly defined to be the set of hardware, software, people, policies and procedures needed to create, manage, store, distribute, revoke and destroy certificates and keys based on public key cryptography, in a distributed computing system.</p>
<p id="p-0011" num="0020">A certificate issuing and management system (CIMS) includes the components of the PKI that are responsible for the issuance, revocation and overall management of the certificates and certificate status information. A CIMS always includes a CA and may include Registration Authorities (RAs), a portal and other subcomponents.</p>
<p id="p-0012" num="0021">A complete PKI has many components. These components are typically distributed throughout the Internet as well as within private enterprise networks. Like other network management and security components, PKI capabilities must exist to one degree or another on virtually all network clients, servers and underlying infrastructure components.</p>
<p id="p-0013" num="0022">Public key infrastructure provides an efficient, scalable method of managing identity. The identity of people, devices and services can be efficiently conveyed and managed within distributed, heterogeneous network environments using PKI-based methods.</p>
<p id="p-0014" num="0023">In order to be commercially viable a PKI should be able to provide a Standards-based PKI architecture, protocol interoperability arid security modeling; scalable performance and assurance to match project requirements, schedule and budget; support for rapid evaluation, customization and deployment efforts; highly-scalable and distributable registration system to match organizational needs. As the use of PKI infrastructures has increased and the number of protocols and possible configurations has increased there is a need for a system and method that minimizes PKI development, customization and deployment barriers-to-entry for Internet-based Secure Service Providers (e-commerce, banking, telecommunications); Operating System Vendors or Distributors; Independent Software Vendors (ISV); PKI System Integrators and Consultants; Trust Service Providers (TSP); Internet Service Providers (ISP); Application Service Providers (ASP); Enterprise Security Solution Providers. However, presently such infrastructure tends to be provided on a customized basis to meet particular specifications and does not readily provide the flexibility and adaptability required in current environments.</p>
<p id="p-0015" num="0024">It is therefore an object of the present invention to obviate or mitigate the above disadvantages.</p>
<heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0016" num="0025">In general terms, the present invention provides a public key infrastructure in which each of a portal and a CA have respective policy engines, each of which includes at least one policy configured as a software component to perform the discreet functions associated with the policy and generate notification in response to a change in state upon completion of the policy.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0017" num="0026">These and other features of the preferred embodiments of the invention will become more apparent in the following detailed description in which reference is made to the appended drawings wherein:</p>
<p id="p-0018" num="0027"><figref idref="DRAWINGS">FIG. 1</figref> is a diagrammatic representation of a network having a PK1 and secure transaction</p>
<p id="p-0019" num="0028"><figref idref="DRAWINGS">FIG. 2</figref> is a schematic representation of the architecture of a portal.</p>
<p id="p-0020" num="0029"><figref idref="DRAWINGS">FIG. 3</figref> is an portion of a graphical representation of a policy engine.</p>
<p id="p-0021" num="0030"><figref idref="DRAWINGS">FIG. 4</figref> is a schematic representation of the implementation of a pair of policies.</p>
<p id="p-0022" num="0031"><figref idref="DRAWINGS">FIG. 5</figref> is an enlarged view of a portion of the representation of <figref idref="DRAWINGS">FIG. 3</figref> having a drop down menu for selection of a new policy.</p>
<p id="p-0023" num="0032"><figref idref="DRAWINGS">FIG. 6</figref> is a view of a screen presented for a certificate request.</p>
<p id="p-0024" num="0033"><figref idref="DRAWINGS">FIG. 7</figref> is a representation of different PKI Topographies.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
<p id="p-0025" num="0034">Although the invention has been described with reference to certain specific embodiments, various modifications thereof will be apparent to those skilled in the art without departing from the spirit and scope of the invention as outlined in the claims appended hereto. In the following description like numerals refer to like structures in the drawings.</p>
<p id="p-0026" num="0035">Referring therefore to <figref idref="DRAWINGS">FIG. 1</figref>, a data communication network <b>10</b> provides communication capability between a pair of correspondents <b>12</b>, <b>14</b>. The network <b>10</b> is typically embodied as the Internet allowing one correspondent to send a message to and receive messages from other correspondents. In the embodiment shown in <figref idref="DRAWINGS">FIG. 1</figref>, the initiating correspondent <b>12</b> is shown as a client side wireless device such as a cellphone, pager or PDA communicating through a gateway <b>16</b> that implements a wireless application protocol (WAP).</p>
<p id="p-0027" num="0036">The recipient correspondent <b>14</b> is shown as a server <b>18</b> associated with an e-commerce service, such as a financial institution or on-line shopping facility. It will be understood, however, that these are simply by way of example only and that other configurations of network and implementations other than the Internet are contemplated.</p>
<p id="p-0028" num="0037">The nature of communications between the correspondents <b>12</b>, <b>14</b> may require security to be implemented and accordingly a public key infrastructure (PKI), indicated at <b>20</b>, is provided to the network <b>10</b>.</p>
<p id="p-0029" num="0038">The PKI <b>20</b> includes a portal or Registration Authority (RA) <b>22</b> to receive and process requests for a certificate from correspondent <b>12</b> and a certification authority (CA) <b>24</b>. The PK1 <b>20</b> provides a standards-based certificate issuance and management system (CIMS) platform for issuing, publishing and revoking public key certificates.</p>
<p id="p-0030" num="0039">The CA <b>24</b> issues the certificate through the portal <b>22</b> to the correspondent <b>12</b> and posts information about the certificate to a directory <b>26</b> that can be accessed by other correspondents <b>14</b>. The posted information may include a certificate revocation list (CRL) for determining the validity of a certificate received and copies of the issued certificates.</p>
<p id="p-0031" num="0040">As an overview of the operation, therefore, the correspondent <b>12</b> who wishes to conduct a secure transaction with the correspondent <b>14</b> initially applies to the portal <b>22</b> for a certificate. The portal <b>22</b> processes the request in accordance with predetermined criteria and either rejects the request or, if approved, passes it to the CA <b>24</b>. The CA <b>24</b> processes the request according to specific procedures and issues a certificate to the portal <b>22</b>. The CA <b>24</b> also posts the certificate to the directory for subsequent use. Essentially the certificate is a message incorporating the public key of the correspondent <b>12</b> that is signed by the private key of the CA <b>24</b>.</p>
<p id="p-0032" num="0041">The portal <b>22</b> may either forward the certificate or, more usually, creates the certificate location URL and relays the URL to the correspondent <b>12</b> for inclusion in messages forwarded to the other correspondent <b>14</b>.</p>
<p id="p-0033" num="0042">The correspondent <b>12</b> initiates the transaction through the gateway <b>16</b> and includes a message signed with the private key of correspondent <b>12</b> that has been certified by the CA <b>24</b> and the URL of the certificate.</p>
<p id="p-0034" num="0043">Upon receiving the message, the correspondent <b>14</b> retrieves the certificate and extracts the public key of the correspondent <b>12</b> using the public key of the CA <b>24</b>. The message from the correspondent <b>12</b> is then verified using the extracted public key and the secure transaction completed.</p>
<p id="p-0035" num="0044">It will be appreciated that the communication between the various parties in the network will be conducted in accordance standard protocols. Thus, in the example shown in <figref idref="DRAWINGS">FIG. 1</figref>, the correspondent <b>12</b> communicates with the portal <b>22</b> using a WPKI protocol and with the gateway <b>16</b> using a secure WTLS session; the portal <b>22</b> communicates with the CA <b>24</b> with a Certificate Management Protocol (CMP) and the gateway <b>16</b> communicates with the server <b>18</b> with a secure SSL/TLS session.</p>
<p id="p-0036" num="0045">With other correspondents <b>12</b> included in the network such as a desktop, as indicated in <figref idref="DRAWINGS">FIG. 1</figref>, it is necessary to provide multiple protocol handling at the portal <b>22</b>. Similarly, as shown in ghosted outline, one correspondent may be able to access multiple domains, each having a particular CA and purpose.</p>
<p id="p-0037" num="0046">The portal <b>22</b> has three major roles in the PKI; 20<sub>x </sub></p>
<p id="p-0038" num="0047">Firstly, the PKI portal <b>22</b> handles the Registration Authority (RA) functions in the PKI, e.g., registers users, approves or denies requests made by end-usersl2 like requests for first-time certificates and renewal of expired certificates, etc.</p>
<p id="p-0039" num="0048">Secondly, because of the multiple devices that may be used, the portal translates and relays access protocols/message formats on behalf of PKI enabled clients. The portal <b>22</b> is a networked server responsible for translating protocol requests, and relaying back protocol responses, between PKI clients <b>12</b> and the CA <b>24</b>.</p>
<p id="p-0040" num="0049">For example, in a typical application, WPKI requests from Wireless clients <b>12</b> are converted to CMP requests for the CA <b>24</b>. Likewise, the PKI portal on behalf of the wireless client processes/converts responses, from the CA. Similarly, PKCS #10 requests from WAP servers/gateways <b>16</b> are converted to requests for the CA. Likewise, the PKI portal on behalf of the WAP server/gateway processes and converts responses, from the CA. Also, requests from desktop clients <b>12</b> using a CMP protocol are approved (or denied) and relayed to the CA. The PKI portal similarly relays responses from the CA <b>24</b> to the desktop client.</p>
<p id="p-0041" num="0050">The main protocol-handling tasks of the portal <b>22</b> include:
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0051">Serving WML pages to the WAP clients to be able to request certificates</li>
    <li id="ul0003-0002" num="0052">Serving HTML pages to WAP servers to be able to request certificates</li>
    <li id="ul0003-0003" num="0053">Processing WAP-client WPKI certificate requests</li>
    <li id="ul0003-0004" num="0054">Process WAP-server/gateway PKCS #10 certificate requests</li>
    <li id="ul0003-0005" num="0055">Process desktop-client CMP certificate requests</li>
    <li id="ul0003-0006" num="0056">Sign and forward approved requests to the CA</li>
    <li id="ul0003-0007" num="0057">Public certificates for a WAP client to database/directory and return the certificate location as a Uniform Resource Locator (URL) to the WAP client</li>
    <li id="ul0003-0008" num="0058">Relay copies of WAP server/gateway and desktop-client certificates to the WAP server/gateway and desktop-client respectively.</li>
</ul>
</p>
<p id="p-0042" num="0059">Thirdly, the portal <b>22</b> processes and schedules client certificate requests in accordance with the registration policies of the particular PKI in which it is used. The PKI portal <b>22</b> can access database/directories to manage state information.</p>
<p id="p-0043" num="0060">As shown in <figref idref="DRAWINGS">FIG. 2</figref>, the general architecture for the portal <b>22</b> includes a socket server, <b>30</b>, a port handler <b>32</b>, a content handler <b>34</b>, a serverhandler <b>36</b> and a policy engine <b>38</b>.</p>
<p id="p-0044" num="0061">The socketserver <b>30</b> is the main loop responsible for accepting connections from the various clients <b>12</b> and routing them to the appropriate port handlers <b>32</b>. This is a multi-threaded architecture and is responsible for maintaining a pool of threads which allows the server to handle multiple requests from the clients.</p>
<p id="p-0045" num="0062">The porthandlers <b>32</b> wait for connections on various ports from the socketservers <b>30</b>. The port handlers <b>32</b> allow a single server to handle connections on multiple ports (e.g. CMP on port 829 as well as port 80).</p>
<p id="p-0046" num="0063">After passing the port handler <b>32</b>, content handlers <b>34</b> are responsible for recognizing the various formats from the clients and converting them to a CMP message. The content handlers <b>34</b> support the protocols that may be used in the PKI such as CMP (RFC 2510), PKCS-10 and WAP PKI messages. As required new translations can be written and added to the content handler <b>34</b>.</p>
<p id="p-0047" num="0064">The serverhandler <b>36</b> is responsible for managing the transaction state of pending requests. It is also responsible for managing the polling protocol in case the request is not approved directly. The server handler <b>36</b> is also responsible for firing the message events to the policy engine <b>36</b> and provides the supporting infrastructure for the same.</p>
<p id="p-0048" num="0065">The policy engine <b>38</b> is responsible for managing the policies for the portal <b>22</b>. This includes the administration function as well as the event mechanism for routing of various messages. New policies can be defined and uploaded to the policy engine <b>38</b> providing for an extremely flexible architecture.</p>
<p id="p-0049" num="0066">Policies are the set of rules that define how a system is supposed to operate. Policies are driven by real-world needs and functional requirements. In the particular case of public-key infrastructure, there are several identifiable areas of protocol and system security policy that must be realized and enforced. These policies are typically driven by a variety of PKI-related protocol and security standards as well as requirements specific to the task at hand. For example, a certificate that is used to identify a person as a medical doctor and his or her right to issue digitally signed prescriptions would probably require a more complicated enrollment and vetting process than that for a certificate used to provide access to a consumer entertainment web site.</p>
<p id="p-0050" num="0067">Policies start out in the form of written rules and specifications. These rules and specifications are then realized in software and hardware to implement the desired system.</p>
<p id="p-0051" num="0068">In the preferred embodiment the policy engine <b>38</b> on the portal <b>22</b> will handle nearly all the processing required to produce a signed certificate, except for the actual signing of the certificate by the CA's signing key. This results in a more efficient and flexible system. It also allows for robust physical protection of the CA's signing key to be implemented independent of the physical requirements of a registration subsystem that may be widely distributed geographically so as to support both local and distributed registration authority topologies.</p>
<p id="p-0052" num="0069">Typically, and as will be more fully described below, the policy engine <b>38</b> of the portal <b>22</b> implements a set of policies by which the correspondents <b>12</b> are uniquely and reliably authenticated before issuing certificates to them.</p>
<p id="p-0053" num="0070">The policy engine <b>38</b> may be subdivided conceptually into different sets of policies each of which have different accessibility to an administrator. Typically the policy engine <b>38</b> will comprise a set of protocol policies, business related policies, and routing policies. Limited accessibility is provided to the protocol policies and, as noted above some may be made mandatory. The business policies of those that are most likely to be adjusted to take into account particular requirements of the particular business and are given a high level of accessibility. The routing policies receive and direct requests receive results and distributes the results. It will be noted from <figref idref="DRAWINGS">FIG. 3</figref> that routing policies act as a node indicated at &#x201c;Policy Engine&#x201d; for all other policies so that interaction with the policy engine is controlled through a single routing policy.</p>
<p id="p-0054" num="0071">The graphical representation of <figref idref="DRAWINGS">FIG. 3</figref> illustrates a portion of a policy engine implemented on the portal <b>22</b>. The Registration and vetting policies are largely based on the types of entities to be issued certificates as well as the intended use and the reliance limits associated with those certificates. In <figref idref="DRAWINGS">FIG. 3</figref>, each of the policies is represented by a box <b>40</b> with interaction between the policies <b>40</b> being indicated by an arrowed line <b>42</b>.</p>
<p id="p-0055" num="0072">The policies that may be required at the portal <b>22</b> will differ from application to application but by way of example, may include within the routing policies to:
<ul id="ul0004" list-style="none">
    <li id="ul0004-0001" num="0073">a) check transaction (T<sub>x</sub>) indicated at <b>40</b><i>a </i></li>
    <li id="ul0004-0002" num="0074">b) check recipient (<b>40</b><i>b</i>)</li>
    <li id="ul0004-0003" num="0075">c) check origin (<b>40</b><i>c</i>)</li>
</ul>
</p>
<p id="p-0056" num="0076">The policies also perform administration tasks such as
<ul id="ul0005" list-style="none">
    <li id="ul0005-0001" num="0077">d) handling unsupported message (<b>40</b><i>d</i>)</li>
    <li id="ul0005-0002" num="0078">e) indicating wrong signor (<b>40</b><i>e</i>)</li>
    <li id="ul0005-0003" num="0079">f) handle aborted message (<b>40</b><i>f</i>)</li>
</ul>
</p>
<p id="p-0057" num="0080">To provide flexibility and adaptability, each of the policies <b>40</b> described above are implemented in a powerful and highly-flexible manner using Java&#x2122; software components called JavaBeans&#x2122;. Such components are configured to perform the discrete functions associated with the policy and generate a notification in response to a change of state. In the preferred embodiment, each policy &#x201c;bean&#x201d; is actually a piece of Java&#x2122;<sub>code </sub>that fits the form of a software component interface template. Each policy &#x201c;bean&#x201d; implements a specific set of steps called a policy during system initialization, subject registration, certificate issuance, certificate publishing, certificate revocation and other certificate lifecycle and system maintenance processes.</p>
<p id="p-0058" num="0081">As indicated by the arrowed links, <b>42</b>, Policy JavaBeans&#x2122; are liked together in a variety of ways to realize a complete certificate issuance and management system. The links between the icons show possible routing paths for notification of a change of state during processing commonly referred to as an event. By clicking on an individual icon, <b>40</b>, a system administrator can modify parameters associated with a particular policy. For example, by opening the &#x201c;Recipient Filter&#x201d; policy <b>40</b><i>b </i>an administrator can configure the policy parameters to specify the particular LDAP directory where a list of subscribers is maintained.</p>
<p id="p-0059" num="0082">Each of the policy Java beans have an input interface <b>44</b>, an output interface <b>46</b> and an executable code <b>48</b>. The interfaces <b>44</b>, <b>46</b> permit each of the beans <b>40</b> to communicate with one another according to standardized formats. The output <b>48</b> generates an event upon completion of a change of state and the input <b>46</b> &#x201c;listens&#x201d; for such events to initiate its own policy. If necessary, a translator nodule <b>50</b> may be interposed between beans <b>40</b> to map an output from one bean to the input format of an adjacent bean <b>40</b>.</p>
<p id="p-0060" num="0083">The policy manager <b>38</b>, therefore, receives and processes the requests from a correspondent and determines whether they can be forwarded to the CA <b>24</b> for issuance of a certificate.</p>
<p id="p-0061" num="0084">The CA <b>24</b> includes a policy manager <b>60</b>, similar to the policy manager <b>38</b>, a portal interface <b>62</b> for implementing a PKIX CMP certificate management protocols and interfaces <b>64</b>, <b>66</b> for interfacing with supporting database and directory components through suitable protocols such as JDBC and JNDI standard API's. The policy manager <b>60</b> implements a set of policies <b>40</b> as Java beans functionally inter-connected as indicated as described above with respect to the engine <b>38</b>. The policies may include those used on the portal <b>22</b> together with policies specific to the function of the CA.</p>
<p id="p-0062" num="0085">Again, each of the policies <b>68</b> has an input <b>72</b>, an output <b>74</b> and an executing code <b>76</b>. Where necessary a translator is interposed between adjacent policies.</p>
<p id="p-0063" num="0086">The policy manager <b>60</b>, therefore, is functional to respond to a request for a certificate received from the portal <b>22</b>, issue the certificate to the portal <b>22</b> and store the certificate in the directory <b>26</b>.</p>
<p id="p-0064" num="0087">It will be apparent that the architecture described above offers the capability of satisfying diverse requirements within the PKI. To take advantage of this versatility, the PKI is configured using a system configuration and maintenance interface between an Administrative Console <b>80</b> and the respective one of the servers. The PKI is configured from a suite of software including libraries of API's and beans and a utility for configuring each component of the PKI. The utility provides a selection of graphical and drop down menu driven interfaces as exemplified in <figref idref="DRAWINGS">FIG. 5</figref> to configure and manage the policies associated with the PKI. Using such interfaces allows the policies to be added to the policy engine <b>38</b>, <b>60</b>, or, by clicking on the policy, the policy modified. Typically, the portal <b>22</b> and the CA <b>24</b> will be supplied as separate computer readable media, typically CD ROMs allowing each portal <b>22</b> and CA <b>24</b> to be configured using the visual manipulation tool in the utility as seen on the GUI of <figref idref="DRAWINGS">FIGS. 3 and 4</figref>.</p>
<p id="p-0065" num="0088">Utilizing the visual development tool incorporated with the utility, the required protocols may be implemented and the Java beans defining the policy <b>40</b> engine, <b>68</b> modified to suit the particular application. The Administrative Console <b>80</b> through a GUI interface provides access to the graphical representation of the portal <b>22</b> or CA <b>24</b> and to a library of beans that may be &#x201c;dropped&#x201d; into the policy engine to provide the required functionality.</p>
<p id="p-0066" num="0089">The utility, stored on the portal <b>22</b> and CA <b>24</b> also provides GUI interfaces for an administrator to facilitate management of the PK1, such as a request for a certificate as shown schematically in <figref idref="DRAWINGS">FIG. 6</figref>. Additional functionality may be provided by providing toolkits to facilitate the generation of new policies.</p>
<p id="p-0067" num="0090">Among the tool kits included in the suite are:</p>
<p id="h-0007" num="0000">a) ASN.1 Toolkit</p>
<p id="p-0068" num="0091">The ITU X.509 standard specifies the contents of digital certificates using Abstract Syntac Notation (ASN.1). ASN.1 is an international standard defined by the ISO/CCITT&#x2019; for defining high-level protocol information is widely used for the specification of communications protocols. The ASN.1 standard is comprised of two distinct portions: (1) the language for defining protocol data units and (2) the encoding and decoding rules for converting the protocol units for transmission over the wire.</p>
<p id="p-0069" num="0092">The ASN.1 toolkit provides for the handling of the basic ASN.1 types as well as the encoding/decoding of ASN.1 structures.</p>
<p id="p-0070" num="0093">The following tables summarize the fundamental ASNI.data types as well as the encoding/decoding schemes that should be supported.</p>
<p id="h-0008" num="0000">Primitive ASN.1 Types</p>
<p id="p-0071" num="0094">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="77pt" align="left"/>
<colspec colname="2" colwidth="35pt" align="center"/>
<colspec colname="3" colwidth="105pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Type</entry>
<entry>Supported</entry>
<entry>Comments</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>INTEGER</entry>
<entry>X</entry>
<entry>Supports encoding of very large</entry>
</row>
<row>
<entry/>
<entry/>
<entry>integers use for cryptography</entry>
</row>
<row>
<entry>BITSTRING</entry>
<entry>X</entry>
</row>
<row>
<entry>BOOLEAN</entry>
<entry>X</entry>
</row>
<row>
<entry>ENUMERATED</entry>
<entry>X</entry>
</row>
<row>
<entry>OCTET STRING</entry>
<entry>X</entry>
</row>
<row>
<entry>OBJECT IDENTIFIER</entry>
<entry>X</entry>
</row>
<row>
<entry>IA5String</entry>
<entry>X</entry>
</row>
<row>
<entry>NumericString</entry>
<entry>X</entry>
</row>
<row>
<entry>NULL</entry>
<entry>X</entry>
</row>
<row>
<entry>Printable String</entry>
<entry>X</entry>
</row>
<row>
<entry>UTCTime</entry>
<entry>X</entry>
<entry>Does automatic conversion of time</entry>
</row>
<row>
<entry/>
<entry/>
<entry>into local time zone</entry>
</row>
<row>
<entry>GeneralTime</entry>
<entry>X</entry>
<entry>Does automatic conversion of time</entry>
</row>
<row>
<entry/>
<entry/>
<entry>into local time zone</entry>
</row>
<row>
<entry>REAL</entry>
<entry>X</entry>
</row>
<row>
<entry>T61 String</entry>
<entry>X</entry>
</row>
<row>
<entry>UTF8String</entry>
<entry>X</entry>
</row>
<row>
<entry>VisibleString</entry>
<entry>X</entry>
</row>
<row>
<entry>GeneralString</entry>
<entry>X</entry>
</row>
<row>
<entry>Any</entry>
<entry>X</entry>
<entry>Supports standalone ANY, not</entry>
</row>
<row>
<entry/>
<entry/>
<entry>recommend for use</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Structured ASN.1 Types
</p>
<p id="p-0072" num="0095">
<tables id="TABLE-US-00002" num="00002">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="56pt" align="left"/>
<colspec colname="2" colwidth="42pt" align="center"/>
<colspec colname="3" colwidth="119pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Type</entry>
<entry>Supported</entry>
<entry>Comments</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Enveloped</entry>
<entry>X</entry>
<entry>Used to support tagged types not</entry>
</row>
<row>
<entry/>
<entry/>
<entry>contained within other ASN.1 structures</entry>
</row>
<row>
<entry>SET</entry>
<entry>X</entry>
</row>
<row>
<entry>SET OF</entry>
<entry>X</entry>
</row>
<row>
<entry>SEQUENCE OF</entry>
<entry>X</entry>
</row>
<row>
<entry>CHOICE</entry>
<entry>X</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Encoding/Decoding Schemes
</p>
<p id="p-0073" num="0096">
<tables id="TABLE-US-00003" num="00003">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="91pt" align="left"/>
<colspec colname="2" colwidth="42pt" align="center"/>
<colspec colname="3" colwidth="84pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Type</entry>
<entry>Supported</entry>
<entry>Comments</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Basic Encoding Rules (BER)</entry>
<entry>X</entry>
<entry/>
</row>
<row>
<entry>Distinguished Encoding Rules</entry>
<entry>X</entry>
</row>
<row>
<entry>(DER)</entry>
</row>
<row>
<entry>XML Encoding Rules (XER)</entry>
<entry/>
<entry>For future use</entry>
</row>
<row>
<entry>Packed Encoding Rules (PER)</entry>
<entry/>
<entry>Mostly seen in telecomm</entry>
</row>
<row>
<entry/>
<entry/>
<entry>industry</entry>
</row>
<row>
<entry>Canonical Encoding Rules</entry>
<entry/>
<entry>Very little use seen so far</entry>
</row>
<row>
<entry>(CER)</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<ul id="ul0006" list-style="none">
    <li id="ul0006-0001" num="0097">The ASN.1 toolkit utilizes the dynamic linking capability of JAVA&#x2122; to resolve ANY DEFINED BY. The ASN.1 toolkit uses an ASCII configuration file to store object identifier-to-class mappings. This allows for support for new object identifiers without requiring recompilation.
<br/>
b) Cryptography Toolkit
</li>
    <li id="ul0006-0002" num="0098">This toolkit provides low-level cryptography primitives such as key generation, hash (message digest) functions, message digest, encryption/decryption, key exchange, etc. These functions are provided as a JAVA&#x2122; <i>Cryptography Package Provider </i>confirming to the <i>Java Security Architecture. </i>
<br/>
Hash Functions
</li>
</ul>
</p>
<p id="p-0074" num="0099">
<tables id="TABLE-US-00004" num="00004">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="35pt" align="left"/>
<colspec colname="2" colwidth="49pt" align="center"/>
<colspec colname="3" colwidth="119pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Algorithm</entry>
<entry>Supported</entry>
<entry>Comments</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>MD5</entry>
<entry>X</entry>
<entry>Rivest, R., &#x201c;The MD5 Message-Digest</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>Algorithm&#x201d;, <i>RFC 1321</i>, April 1992</entry>
</row>
<row>
<entry/>
<entry>SHA</entry>
<entry>X</entry>
<entry>Obsolete. Superceded by FIPS PUB</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>180-1. Included for compatibility with</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>legacy systems only.</entry>
</row>
<row>
<entry/>
<entry>SHA-1</entry>
<entry>X</entry>
<entry>NIST, <i>FIPS PUB 180-1</i>: Secure Hash</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>Standard, April 1995.</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Message Authentication Code (MAC) Functions
</p>
<p id="p-0075" num="0100">
<tables id="TABLE-US-00005" num="00005">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="56pt" align="left"/>
<colspec colname="2" colwidth="42pt" align="center"/>
<colspec colname="3" colwidth="119pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Algorithm</entry>
<entry>Supported</entry>
<entry>Comments</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>HMAC-MD5</entry>
<entry>X</entry>
<entry>H. Krawczyk, et. Al., &#x201c;MHAC: Keyed-</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Hashing for Message Authentication:,</entry>
</row>
<row>
<entry/>
<entry/>
<entry><i>IETF RFC 2104</i>, February 1997</entry>
</row>
<row>
<entry>HMAC-SHA-1</entry>
<entry>X</entry>
<entry>H. Krawczyk, et. Al., &#x201c;HMAC: Keyed-</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Hashing for Message Authentication&#x201d;,</entry>
</row>
<row>
<entry/>
<entry/>
<entry><i>IETF RFC 2104</i>, February 1997</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Digital Signing/Verification
</p>
<p id="p-0076" num="0101">
<tables id="TABLE-US-00006" num="00006">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="63pt" align="left"/>
<colspec colname="2" colwidth="35pt" align="center"/>
<colspec colname="3" colwidth="119pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Algorithm</entry>
<entry>Supported</entry>
<entry>Comments</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>DSA (X9.57 OID)</entry>
<entry>X</entry>
<entry>See <i>RFC 2459</i></entry>
</row>
<row>
<entry>DSA (O1W OID)</entry>
<entry>X</entry>
<entry>Object identifier not PKIX compliant.</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Included for legacy certificate support.</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Encoding of parameters is different</entry>
</row>
<row>
<entry>RSA (with MD5)</entry>
<entry>X</entry>
<entry>See RFC 2459 (per PKCS #1)</entry>
</row>
<row>
<entry>RSA (with SHA-1)</entry>
<entry>X</entry>
<entry>See RFC 2459 (per PKCS #1)</entry>
</row>
<row>
<entry>RDSA</entry>
<entry>X</entry>
<entry>FIPS 186-1</entry>
</row>
<row>
<entry>ECDSA</entry>
<entry>X</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Encryption Algorithms
</p>
<p id="p-0077" num="0102">
<tables id="TABLE-US-00007" num="00007">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="49pt" align="center"/>
<colspec colname="3" colwidth="112pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Algorithm</entry>
<entry>Supported</entry>
<entry>Comments</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>DES</entry>
<entry>X</entry>
<entry>FIPS PUB 81: ECB and CBC Mode</entry>
</row>
<row>
<entry/>
<entry>Triple DES</entry>
<entry>X</entry>
<entry>PKCS#5 (DES-EDE3-CBC-Pad, RFC</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>1423) ANSI X9.52</entry>
</row>
<row>
<entry/>
<entry>RC2&#x2009;&#xae;</entry>
<entry>X</entry>
<entry><i>RFC 2268</i></entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Key Agreement Algorithms
</p>
<p id="p-0078" num="0103">
<tables id="TABLE-US-00008" num="00008">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="56pt" align="left"/>
<colspec colname="2" colwidth="42pt" align="center"/>
<colspec colname="3" colwidth="119pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Algorithm</entry>
<entry>Supported</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="56pt" align="left"/>
<colspec colname="2" colwidth="42pt" align="center"/>
<colspec colname="3" colwidth="119pt" align="left"/>
<tbody valign="top">
<row>
<entry>Diffie-Hellman</entry>
<entry>X</entry>
<entry>RFC 2631/(based on ANSI x9.42 Draft)</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
c) PKIX Message Toolkit
<ul id="ul0007" list-style="none">
    <li id="ul0007-0001" num="0104">This toolkit provides functions to create and manipulate all of the PKIX-compliant messages defined in Certificate Management Protocols (RFC 2510), Certificate Request Message Format (CRMF) (RFC 2511), and PKCS #10: Certification Request Syntax (RFC 2314).</li>
    <li id="ul0007-0002" num="0105">The toolkits provide both &#x201c;low-level&#x201d; APIs, with direct access to ASN.1 structures, and &#x201c;high-level&#x201d; API, that hide much of the detail of the underlying ASN.1 structures. Applications can choose which level of access they require. For most simple client applications, the higher-level APIs are quite adequate. Server applications, on the other hand will generally require the more fine-grained access afforded by the low-level API's. The major difference between the two sets of APIs is that the high-level API's assign semantic meaning to the data field, whereas the low-level APIs are used only for data manipulation.</li>
    <li id="ul0007-0003" num="0106">The PKIX messages supported by the low-level APIs are:</li>
</ul>
</p>
<p id="p-0079" num="0107">
<tables id="TABLE-US-00009" num="00009">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="91pt" align="left"/>
<colspec colname="2" colwidth="63pt" align="center"/>
<colspec colname="3" colwidth="49pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Message Type</entry>
<entry>Supported</entry>
<entry>Comments</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>Initial Certificate Request</entry>
<entry>X</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Initial Certificate Response</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Certificate Response</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>PKCS#10 Certificate Request</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Proof-of-Possession (POP)</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Challenge</entry>
</row>
<row>
<entry/>
<entry>Proof-of-Possession (POP)</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Response</entry>
</row>
<row>
<entry/>
<entry>Key Update Request</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Key Update Response</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Revocation Request</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Revocation Response</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Cross Certificate Request</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Cross Certificate Response</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>CA Key Update</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Announcement</entry>
</row>
<row>
<entry/>
<entry>Certificate Announcement</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Revocation Announcement</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>CRL Announcement</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Confirmation</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Nested Message</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>General Message</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>General Response</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Error Message</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<ul id="ul0008" list-style="none">
    <li id="ul0008-0001" num="0108">The PKIX messages supported by the high-level APIs are:</li>
</ul>
</p>
<p id="p-0080" num="0109">
<tables id="TABLE-US-00010" num="00010">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="84pt" align="left"/>
<colspec colname="2" colwidth="63pt" align="center"/>
<colspec colname="3" colwidth="56pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Message Type</entry>
<entry>Supported</entry>
<entry>Comments</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>Initial Certificate Request</entry>
<entry>X</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Initial Certificate Response</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Certificate Request</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Certificate Response</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Revocation Request</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Revocation Response</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Confirmation</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>General Message</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>General Response</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry>Error Message</entry>
<entry>X</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
d) PKIX protocol Toolkit
<ul id="ul0009" list-style="none">
    <li id="ul0009-0001" num="0110">This toolkit provides two features:</li>
    <li id="ul0009-0002" num="0111">1. Encoding of the PKIX messages into messages suitable for transmission.</li>
    <li id="ul0009-0003" num="0112">2. Transfer of the PKIX messages over different transport protocols such as HTTP or TCP.</li>
    <li id="ul0009-0004" num="0113">The toolkit should support two transport protocols:</li>
</ul>
</p>
<p id="p-0081" num="0114">
<tables id="TABLE-US-00011" num="00011">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="63pt" align="left"/>
<colspec colname="2" colwidth="35pt" align="center"/>
<colspec colname="3" colwidth="119pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Transport Protocol</entry>
<entry>Supported</entry>
<entry>Comments</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>TCP</entry>
<entry>X</entry>
<entry>Certificate management Protocols (RFC</entry>
</row>
<row>
<entry/>
<entry/>
<entry>2510)</entry>
</row>
<row>
<entry>HTTP</entry>
<entry>X</entry>
<entry>Using HTTP as a Transport Protocol for</entry>
</row>
<row>
<entry/>
<entry/>
<entry>CMP (PKIX Draft)</entry>
</row>
<row>
<entry>CMC</entry>
<entry/>
<entry>Certificate Management Messages over</entry>
</row>
<row>
<entry/>
<entry/>
<entry>CMC (PKIX Draft) We will consider</entry>
</row>
<row>
<entry/>
<entry/>
<entry>supporting based on demand and draft</entry>
</row>
<row>
<entry/>
<entry/>
<entry>stability.)</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<ul id="ul0010" list-style="none">
    <li id="ul0010-0001" num="0115">Note: the PKIX Protocol Toolkit allows for application to switch between different transport protocols in a transparent manner.
<br/>
e) PKCS Toolkit
</li>
    <li id="ul0010-0002" num="0116">This toolkit is a set of Java&#x2122; packages that implement the various <i>Public Key Cryptography Standards </i>(<i>PKCS</i>) and allow the application developer to create and manipulate the underlying data structures.</li>
</ul>
</p>
<p id="p-0082" num="0117">
<tables id="TABLE-US-00012" num="00012">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="42pt" align="center"/>
<colspec colname="3" colwidth="133pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Standard</entry>
<entry>Supported</entry>
<entry>Comments</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>PKCS#1</entry>
<entry>X</entry>
<entry>RSA Encryption Standard. Provides</entry>
</row>
<row>
<entry/>
<entry/>
<entry>encoding/decoding of ASN.1 structures</entry>
</row>
<row>
<entry>PKCS#2</entry>
<entry>X</entry>
<entry>PKCS#2 and PKCS#4 have been</entry>
</row>
<row>
<entry/>
<entry/>
<entry>incorporated into PKCS#1</entry>
</row>
<row>
<entry>PKCS#3</entry>
<entry>X</entry>
<entry>Diffie-Hellman Key-Agreement Standard</entry>
</row>
<row>
<entry>PKCS#4</entry>
<entry>X</entry>
<entry>PKCS#2 and PKCS #4 have been</entry>
</row>
<row>
<entry/>
<entry/>
<entry>incorporated into PKCS#1</entry>
</row>
<row>
<entry>PKCS#5</entry>
<entry>X</entry>
<entry>Password-based Cryptography Standard</entry>
</row>
<row>
<entry>PKCS#6</entry>
<entry>X</entry>
<entry>Extended-certificate syntax Standard</entry>
</row>
<row>
<entry>PKCS#7</entry>
<entry>X</entry>
<entry>Cryptographic Message Syntax Standard</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Content Types Supported: Enveloped</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Data, Encrypted Data and Signed Data</entry>
</row>
<row>
<entry>PKCS#8</entry>
<entry>X</entry>
<entry>Private-Key Information Syntax Standard</entry>
</row>
<row>
<entry>PKCS#9</entry>
<entry>X</entry>
<entry>Selected Attribute Types</entry>
</row>
<row>
<entry>PKCS#10</entry>
<entry>X</entry>
<entry>Certification Request Syntax Standard</entry>
</row>
<row>
<entry>PKCS#11</entry>
<entry>X</entry>
<entry>Cryptographic Token Interface Standard</entry>
</row>
<row>
<entry/>
<entry/>
<entry>(&#x201c;Cryptoki&#x201d;)</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Smart Cards will be supported through the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>OpenCard Framework or via JNI-</entry>
</row>
<row>
<entry/>
<entry/>
<entry>facilitated native PKCS# 11 APIs on host</entry>
</row>
<row>
<entry/>
<entry/>
<entry>platform</entry>
</row>
<row>
<entry>PKCS#12</entry>
<entry>X</entry>
<entry>Personal Information Exchange Syntax</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Standard for supporting</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Personal Security Environments (PSE)</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0083" num="0118">To obtain a certificate the correspondent <b>12</b> directs a request through a browser to the portal <b>22</b>. The portal <b>22</b> makes available a key generation applet that is loaded to the correspondent <b>12</b> and steps the correspondent through the creation of the session private key and the collection of other information needed for completing a certificate request.</p>
<p id="p-0084" num="0119">The correspondent <b>12</b> then forwards the completed request to the portal <b>22</b>. Upon receipt of the request, the portal <b>22</b> forwards it to the policy engine <b>38</b> where the selected policies are reviewed. Each policy provides an event to listening beans, and, if approved, the request is forwarded to the CA <b>24</b>. If necessary, the request may be forwarded for human intervention for manual approval through the console <b>80</b>. This can be done by downloading the request to a portal client where it may be reviewed, approved, modified or rejected by the designated person.</p>
<p id="p-0085" num="0120">The portal client returns the request to the portal <b>22</b> from where, if approved, it is forwarded to the CA <b>24</b>. The CA <b>24</b> processes its through it own policies for final approval and signing. If rejected, it is returned via the administration policies to the correspondent <b>12</b>. During this process all of the transactions between the portal <b>22</b>, its clients and the CA <b>24</b> are signed, allowing for an audit trail in case of dispute or audit purposes. The configuration of the policy engine as software components, e.g. Java beans, provides the administrator with a highly flexible capability for customizing a PK1 policy engine best suited to the needs of the business.</p>
<p id="p-0086" num="0121">Because of the flexibility offered by the architecture, it is possible that an administrator may amend the policies or the configuration of the portal <b>22</b> or CA: <b>24</b> in an undesirable manner. To enhance the security and provide an audit trail it is possible for the individual policies to be digitally signed and for the configured policy engine also to be digitally signed. Any subsequent amendment or adjustment of the policy engine would then be evident upon inspection of the digitally signature.</p>
<p id="p-0087" num="0122">Security may also be enhanced by making certain of the policies mandatory in any policy engine or by performing mandatory checks upon the configured policy engine prior to utilization. Such check could be form by feeding test data to the policy engine and obtaining predictable responses. For example, a policy checking for small subgroup attacks may be required and its presence validated by feeding data susceptible to such an attack.</p>
<p id="p-0088" num="0123">A particular benefit utilized within the configuration and the policy engine is the ability to dynamically change the parameters and class of a policy as to change the configuration of policies within the policy engine itself without inhibiting the operations of server. To achieve this, the administrator signs a request to either the portal or the CA <b>24</b> to change e.g. a parameter in one of the policies. The receipt of the request inhibits further processing a certificate requests by either the portal <b>22</b> or CA <b>24</b> is updated. The policy engine completes the processing of any transactions currently being handled and then performs the update or change. Once completed, the policy engine is again able to receive and process the requests.</p>
<p id="p-0089" num="0124">Selected beans may also be provided with a historical check to ensure that looping between adjacent policies will be detected and inhibited.</p>
<p id="p-0090" num="0125">The presentation of the representation of the policy engine may be enhanced by imparting characteristics to the representation of the beans and links during configuration. Links initiated by common event may be identified with a particular color and different colors used for different events. Similarly the events themselves may be colored to aid in visual distinction and different shapes be accorded to the graphical representations of the events to further differentiate. The representation of the lines linking adjacent beans may be modified so as to curve around other representations and events and the names of events may be selectively displayed or hidden as required.</p>
<p id="p-0091" num="0126">As shown in <figref idref="DRAWINGS">FIG. 7</figref> the flexibility offered by the separation of RA's and CA's and the independence of the policies implemented allows a number of PK12 topographies to be utilized.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method of generating certificates, the method comprising:
<claim-text>receiving at a portal on a server side of a public key infrastructure, a request for a certificate from a client;</claim-text>
<claim-text>said portal processing said request using a first policy engine in accordance with a first set of predefined protocols, said portal being communicably interposed between said client and a certification authority, said first policy engine allowing policies to be defined and modified, said policies comprising a set of rules;</claim-text>
<claim-text>said portal determining whether to approve or deny said request according to said first set of predefined protocols, said portal configured to provide multiple protocol handling to accommodate different client types and to translate at least one protocol request and relay back at least one protocol response between said client and said certification authority;</claim-text>
<claim-text>for an approved request, said portal requesting a certificate from said certification authority;</claim-text>
<claim-text>said portal receiving said certificate from said certification authority; and</claim-text>
<claim-text>said portal providing said certificate to said client;</claim-text>
<claim-text>said first policy engine configured to perform at least one function associated with at least one policy and to generate a notification in response to completion of said at least one function.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said at least one policy is responsive to notification of a change in state from another policy in said first policy engine.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said at least one policy is implemented using software components, wherein policy beans associated with said software components correspond to said functions.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said at least one policy is digitally signed to enhance security.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising enabling use of at least one toolkit to facilitate generation of new policies.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said first policy engine is adapted to enable new policies to be defined and uploaded thereto.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said portal comprises a Registration Authority and wherein said first set of predefined protocols includes all processing to produce said certificate with the exception of signing of said certificate.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A non-transitory computer readable medium having stored thereon computer readable instructions for performing a method of generating certificates, said computer readable instructions comprising instructions for:
<claim-text>receiving at a portal on a server side of a public key infrastructure, a request for a certificate from a client;</claim-text>
<claim-text>said portal processing said request using a first policy engine in accordance with a first set of predefined protocols, said portal being communicably interposed between said client and a certification authority, said first policy engine allowing policies to be defined and modified, said policies comprising a set of rules;</claim-text>
<claim-text>said portal determining whether to approve or deny said request according to said first set of predefined protocols, said portal configured to provide multiple protocol handling to accommodate different client types and to translate at least one protocol request and relay back at least one protocol response between said client and said certification authority;</claim-text>
<claim-text>for an approved request, said portal requesting a certificate from said certification authority;</claim-text>
<claim-text>said portal receiving said certificate from said certification authority; and</claim-text>
<claim-text>said portal providing said certificate to said client;</claim-text>
<claim-text>said first policy engine configured to perform at least one function associated with at least one policy and to generate a notification in response to completion of said at least one function.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The non-transitory computer readable medium according to <claim-ref idref="CLM-00008">claim 8</claim-ref> wherein said at least one policy is responsive to notification of a change in state from another policy in said first policy engine.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The non-transitory computer readable medium according to <claim-ref idref="CLM-00008">claim 8</claim-ref> wherein said at least one policy is implemented using software components, wherein policy beans associated with said software components correspond to said discrete functions.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The non-transitory computer readable medium according to <claim-ref idref="CLM-00008">claim 8</claim-ref> wherein said at least one policy is digitally signed to enhance security.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The non-transitory computer readable medium according to <claim-ref idref="CLM-00008">claim 8</claim-ref> wherein said instructions further comprise instructions for enabling use of at least one toolkit to facilitate generation of new policies.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The non-transitory computer readable medium according to <claim-ref idref="CLM-00008">claim 8</claim-ref> wherein said first policy engine is adapted to enable new policies to be defined and uploaded thereto.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The non-transitory computer readable medium according to <claim-ref idref="CLM-00008">claim 8</claim-ref> wherein said portal comprises a Registration Authority and wherein said first set of predefined protocols includes all processing to produce said certificate, with the exception of policies related to the signing of said certificate.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A system to administer generating certificates, said system comprising a portal communicably interposed between a certification authority and one or more clients, said portal comprising at least one processor embodied at least partially in hardware and configured for:
<claim-text>receiving at said portal a request for a certificate from a client;</claim-text>
<claim-text>processing said request using a first policy engine in accordance with a first set of predefined protocols, said first policy engine allowing policies to be defined and modified, said policies comprising a set of rules;</claim-text>
<claim-text>determining whether to approve or deny said request according to said first set of predefined protocols,</claim-text>
<claim-text>said portal configured to provide multiple protocol handling to accommodate different client types and to translate at least one protocol request and relay back at least one protocol response between said client and said certification authority;</claim-text>
<claim-text>for an approved request, requesting a certificate from said certification authority; receiving said certificate from said certification authority; and providing said certificate to said client;</claim-text>
<claim-text>said first policy engine configured to perform at least one function associated with at least one policy and to generate a notification in response to completion of said at least one function.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The system according to <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein said at least one policy is responsive to notification of a change in state from another policy in said first policy engine.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The system according to <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein said at least one policy is implemented using software components, wherein policy beans associated with said software components correspond to said discrete functions.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The system according to <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein said at least one policy is digitally signed to enhance security.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The system according to <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein said first policy engine is adapted to enable new policies to be defined and uploaded thereto.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The system according to <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein said portal comprises a Registration Authority, and wherein said first set of predefined protocols includes all processing to produce said certificate, with the exception of policies related to the signing of said certificate.</claim-text>
</claim>
</claims>
</us-patent-grant>
