<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627120-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627120</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12914549</doc-number>
<date>20101028</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>372</us-term-extension>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>1</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>1</main-group>
<subgroup>26</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>1</main-group>
<subgroup>32</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>9</main-group>
<subgroup>46</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>713300</main-classification>
<further-classification>713340</further-classification>
<further-classification>718100</further-classification>
</classification-national>
<invention-title id="d2e55">Delayed execution of operations</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5448731</doc-number>
<kind>A</kind>
<name>Wang et al.</name>
<date>19950900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>718103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6898718</doc-number>
<kind>B2</kind>
<name>Morrow</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713320</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7505753</doc-number>
<kind>B2</kind>
<name>Sorvari et al.</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7716500</doc-number>
<kind>B2</kind>
<name>Esliger</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713300</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>7752471</doc-number>
<kind>B1</kind>
<name>Kolokowsky</name>
<date>20100700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713310</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>8255720</doc-number>
<kind>B1</kind>
<name>Conway</name>
<date>20120800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713320</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2003/0065959</doc-number>
<kind>A1</kind>
<name>Morrow</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713300</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2004/0133345</doc-number>
<kind>A1</kind>
<name>Asahara</name>
<date>20040700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2005/0108075</doc-number>
<kind>A1</kind>
<name>Douglis et al.</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2005/0235209</doc-number>
<kind>A1</kind>
<name>Morita et al.</name>
<date>20051000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2006/0036945</doc-number>
<kind>A1</kind>
<name>Radtke et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2006/0069458</doc-number>
<kind>A1</kind>
<name>Lee et al.</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2006/0178813</doc-number>
<kind>A1</kind>
<name>Chen</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2007/0265025</doc-number>
<kind>A1</kind>
<name>Commarford et al.</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2007/0283180</doc-number>
<kind>A1</kind>
<name>Nakajima</name>
<date>20071200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2009/0089555</doc-number>
<kind>A1</kind>
<name>Cataldo et al.</name>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>712220</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2009/0265103</doc-number>
<kind>A1</kind>
<name>Kostepen</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2010/0112955</doc-number>
<kind>A1</kind>
<name>Krishnaswamy et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>455 6711</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2010/0115048</doc-number>
<kind>A1</kind>
<name>Scahill</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709213</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2010/0287559</doc-number>
<kind>A1</kind>
<name>Mergen et al.</name>
<date>20101100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>718103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2012/0209946</doc-number>
<kind>A1</kind>
<name>McClure et al.</name>
<date>20120800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709217</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>JP</country>
<doc-number>2000-337911</doc-number>
<date>20001200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>JP</country>
<doc-number>2001-141501</doc-number>
<date>20010500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>KR</country>
<doc-number>10-2002-0082510</doc-number>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>KR</country>
<doc-number>10-2009-0029518</doc-number>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>KR</country>
<doc-number>10-2009-0093444</doc-number>
<date>20090900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00027">
<othercit>International Search Report &#x26; Written Opinion for Application No. PCT/US2010/052024, dated Jun. 10, 2011, 11 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00028">
<othercit>International Search Report &#x26; Written Opinion in international application No. PCT/US2010/054578, dated Mar. 28, 2011, 13 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00029">
<othercit>International Search Report &#x26; Written Opinion in international application No. PCT/US2010/052024, dated Jun. 10, 2011, 11 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00030">
<othercit>International Search Report &#x26; Written Opinion for Application No. PCT/US2010/054578, dated Mar. 28, 2011, 13 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00031">
<othercit>Tezuka, Taro and Katsumi Tanaka. &#x201c;Temporal and Spatial Attribute Extraction from Web Documents and Time-Specific Regional Web Search System.&#x201d; Web and Wireless Geographical Information Systems: 4<sup>th </sup>International Workshop, Nov. 2004, vol. 3428, pp. 14-25.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>29</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>713300</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713340</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>718100</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>20</number-of-drawing-sheets>
<number-of-figures>25</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61255847</doc-number>
<date>20091028</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110099392</doc-number>
<kind>A1</kind>
<date>20110428</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Conway</last-name>
<first-name>David P.</first-name>
<address>
<city>Los Altos</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Conway</last-name>
<first-name>David P.</first-name>
<address>
<city>Los Altos</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Fish &#x26; Richardson P.C.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Google Inc.</orgname>
<role>02</role>
<address>
<city>Mountain View</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Connolly</last-name>
<first-name>Mark</first-name>
<department>2115</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">In general, the subject matter described in this specification can be embodied in methods, systems, and program products for performing power management. A computer process that requires, to be performed, substantial portions of battery storage on the mobile computing device is identified. Execution of the identified process can be deferred while the mobile computing device is not connected to a power source that is for charging the battery storage and that is external to the mobile computing device. Connection of the mobile computing device to the power source is sensed. Performance of the process is triggered in response to sensing that the mobile computing device has been connected to the power source.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="152.32mm" wi="215.90mm" file="US08627120-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="230.04mm" wi="187.79mm" orientation="landscape" file="US08627120-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="252.48mm" wi="169.84mm" file="US08627120-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="242.91mm" wi="197.36mm" file="US08627120-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="224.28mm" wi="178.82mm" orientation="landscape" file="US08627120-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="247.99mm" wi="187.79mm" file="US08627120-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="244.77mm" wi="189.65mm" file="US08627120-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="228.09mm" wi="180.09mm" orientation="landscape" file="US08627120-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="244.18mm" wi="176.19mm" orientation="landscape" file="US08627120-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="240.96mm" wi="174.33mm" file="US08627120-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="237.74mm" wi="142.92mm" file="US08627120-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="241.55mm" wi="187.11mm" orientation="landscape" file="US08627120-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="249.94mm" wi="156.97mm" file="US08627120-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="231.31mm" wi="178.82mm" orientation="landscape" file="US08627120-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="251.88mm" wi="187.11mm" file="US08627120-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="242.91mm" wi="190.33mm" orientation="landscape" file="US08627120-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="246.04mm" wi="187.79mm" orientation="landscape" file="US08627120-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="247.99mm" wi="125.56mm" file="US08627120-20140107-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="247.40mm" wi="196.09mm" orientation="landscape" file="US08627120-20140107-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="254.42mm" wi="187.11mm" orientation="landscape" file="US08627120-20140107-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="246.72mm" wi="177.55mm" orientation="landscape" file="US08627120-20140107-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading>
<p id="p-0002" num="0001">This application claims priority to U.S. Provisional Application Ser. No. 61/255,847, filed on Oct. 28, 2009 entitled &#x201c;Search, Navigation, and Docking with a Mobile Computing Device,&#x201d; the entire contents of which are hereby incorporated by reference.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">TECHNICAL FIELD</heading>
<p id="p-0003" num="0002">This document generally relates to execution of computer processes.</p>
<heading id="h-0003" level="1">BACKGROUND</heading>
<p id="p-0004" num="0003">Mobile computing devices such as smartphones may offer users rich experiences. Such a device may allow users to browse internet websites, download third-party application programs, use mapping applications that show the device's present geographical location on a map, and make telephone calls, among many possibilities.</p>
<p id="p-0005" num="0004">Users can place such a mobile device in a dock to power a battery of the device or to supplement the functionality of the device. For example, a dock may include a male data terminal that engages a female data terminal of the mobile device. The dock may create a snug fit with the mobile device to ensure that the data terminals are not damaged upon user pivoting of the mobile device in any direction. Upon connection of the terminals, the dock can supply electrical power to the mobile device.</p>
<p id="p-0006" num="0005">The mobile device may communicate data to the dock through the data terminal, for example, to play music or display a video. The dock may include components that are superior to components in the mobile device, for example, speakers or a display that are larger than those of the mobile device. The mobile device may receive commands from the dock, for example, in response to a user selecting a &#x201c;next song&#x201d; button on the dock.</p>
<p id="p-0007" num="0006">Upon the mobile device being placed into the dock, the display of the mobile device may change. The display may remain substantially the same while the mobile device is connected to the dock, and may change back to an original display when the user removes the mobile device from the dock. Communication between the mobile device and the dock may be preconfigured and the device and dock may begin to communicate immediately upon user placement of the device in the dock, without user intervention.</p>
<p id="p-0008" num="0007">A mobile computing device may include various mechanisms for reducing battery usage. For example, upon the device becoming low on stored power, the mobile device may switch to a low-power energy state. The switch to the low-power energy state may reduce a brightness of a display, reduce a frequency of mobile device wireless data transfers, and reduce an effective processing speed of the mobile device.</p>
<p id="p-0009" num="0008">The mobile computing device may include an application program that allows a user to identify a location at which the user has parked his car, and the application program may store the location. Upon the user desiring to find the location of his car, the user can launch the application program. The launched application program can identify a direction to the user's car.</p>
<heading id="h-0004" level="1">SUMMARY</heading>
<p id="p-0010" num="0009">This document describes techniques, methods, systems, and mechanisms for performing delayed execution of operations. A mobile computing device may suspend operation of particular processes while the device is using battery power. Upon the mobile device being connected to line power, the mobile device may resume operation of the processes. In some examples, a process may be identified by a user. The user may select the particular process from a list of executing processes, or may configure mobile device settings so that specific processes delay execution until the connection to line power. The user may also provide a secondary type of user input to a user interface element, and the command that is associated with a primary type of user input for the user interface element may execute upon device connection to line power.</p>
<p id="p-0011" num="0010">In some examples, an application program identifies, upon installation of the application program, one or more of its processes as candidates for delayed execution. Such processes may automatically delay execution upon being launched, or may delay execution upon the mobile device entering a state where battery power is to be conserved. In some examples, the processes are identified by an external procedure. For example, the procedure may measure metrics of executing processes to identify those processes that have been executing for substantial periods of time without user input, or that processes that are likely to consume substantial portions of battery power before completion.</p>
<p id="p-0012" num="0011">Accordingly, execution of the identified processes is suspended. Upon the mobile device determining that the device has been connected to line power, the mobile device may resume execution of the suspended processes. The resumption in process execution may be delayed for a determined amount of time, or until a charge level of the battery exceeds a threshold (e.g., a threshold charge that would enable the mobile device to complete execution of the suspended processes even if the mobile device were disconnected from the line power).</p>
<p id="p-0013" num="0012">In general, one aspect of the subject matter described in this specification can be embodied in a computer-implemented power management method. The method includes identifying, on a mobile computing device, a computer process that, to be performed, requires substantial portions of battery storage on the mobile computing device. The method includes deferring execution of the identified process while the mobile computing device is not connected to a power source that is for charging the battery storage and that is external to the mobile computing device. The method includes sensing that the mobile computing device has been connected to the power source. The method includes triggering performance of the process in response to sensing that the mobile computing device has been connected to the power source.</p>
<p id="p-0014" num="0013">Another aspect of the subject matter described in this specification can be embodied in a computer-readable storage medium storing instructions that, when executed by one or more processing devices, perform operations. The operations include identifying, on a mobile computing device, a computer process that, to be performed, requires substantial portions of battery storage on the mobile computing device. The operations include deferring execution of the identified process while the mobile computing device is not connected to a power source that is for charging the battery storage of the mobile computing device and that is external to the mobile computing device. The operations include sensing that the mobile computing device has been connected to the power source. The operations include triggering performance of the process in response to sensing that the mobile computing device has been connected to the power source.</p>
<p id="p-0015" num="0014">In yet another aspect, the subject matter described in this specification can be embodied in a computing device having power management features. The computing device includes a power sensor that is arranged to detect when the computing device is attached to a power source that is for charging the computing device. The computing device includes one or more power-intensive processes that perform operations that are identified to be excessive drains on battery levels for the device. The computing device includes a power manager, that is to execute on a processor on the device, and that is programmed to withhold execution of the operations while the device is not connected to the power source, and to trigger execution of the operations automatically in response to sensing with the power sensor that the device has been connected to the power source.</p>
<p id="p-0016" num="0015">Particular embodiments can be implemented, in certain instances, to realize one or more of the following advantages. Usage of battery power on a mobile computing device may be preserved. Accordingly, the operational life of the mobile computing device between charges may be extended. Further, the device may be free to use other more power-intensive processes. The suspension in processing may be done on a selective basis, instead of broadly reducing the processing speed of the mobile device or shutting down a device feature (e.g., shutting down a radio). Delayed execution of a user interface control that has been selected allows users to suspend a process without identifying a textual name for the process from a list.</p>
<p id="p-0017" num="0016">The details of one or more embodiments are set forth in the accompanying drawings and the description below. Other features, objects, and advantages will be apparent from the description and drawings, and from the claims.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">DESCRIPTION OF DRAWINGS</heading>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 1</figref> shows a music docking system and a mobile computing device in the form of a touchscreen smartphone.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 2</figref> shows a schematic diagram of a docked mobile computing device.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 3</figref> shows an example desktop dock for a mobile computing device.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 4</figref> shows an example car dock for a mobile computing device.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 5</figref> shows a partially transparent view of a dock in which a mobile computing device has been placed.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 6</figref> shows a bottom view of a mobile computing device.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 7</figref> shows a flowchart of an example process for identifying a dock that a mobile computing device has physically mated with, and for establishing a wireless connection with the dock.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 8</figref> shows an example user interface profile that is displayed by a mobile computing device upon docking in a car dock.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 9</figref> shows an example user interface profile that is displayed by a mobile computing device upon docking in a desktop dock.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 10</figref> shows a modification to an example user interface profile that is displayed by a mobile computing device upon docking in a car dock.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 11</figref> shows a flowchart of an example process for displaying a dock-specific profile.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 12</figref> shows an example flowchart for delaying wireless termination upon undocking of a mobile device.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 13</figref> shows a user interface of a mobile computing device that has been removed from a dock, but that remains in wireless communication with the dock.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 14</figref> shows another user interface of a mobile computing device that has been removed from a dock, but that remains in wireless communication with the dock.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 15</figref> shows a flowchart of an example process for maintaining a wireless connection upon undocking.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 16</figref> shows an example user interface of a map that identifies a location at which a user changed his mode of transportation.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 17</figref> shows an example display of data that may be used to determine a location at which a user changed his mode of transportation.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 18</figref> shows a flowchart of an example process for determining a geographical location at which a user changed a mode of transportation.</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 19</figref> shows a user interface for delaying execution of a computer process.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 20</figref> shows a user interface for delaying execution of a computer process.</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIGS. 21A-B</figref> show a flowchart of an example process for delaying execution of computer processes.</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 22</figref> shows an example system that includes a mobile computing device and a dock.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 23</figref> is a conceptual diagram of a system that may be used to implement the systems and methods described in this document.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 24</figref> is a block diagram of computing devices that may be used to implement the systems and methods described in this document, as either a client or as a server or plurality of servers.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<p id="p-0042" num="0041">Like reference symbols in the various drawings indicate like elements.</p>
<heading id="h-0006" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0043" num="0042">This document generally describes mobile computing devices and associated docking systems.</p>
<p id="p-0044" num="0043">General Overview</p>
<p id="p-0045" num="0044">Base stations or docks are commonly used to recharge mobile computing devices, and in some instances can be used to also communicate to or from a device. For example, a simple power cord can be used to recharge a device, while a music base system may provide power and may also receive data through the same physical connection that supplies the power, or a nearby physical connection, usually along an edge of the mobile computing device in a manner that allows a screen of the device to be visible to a user of the device while it is docked. The docking connections may be friction fittings so that a device may be inserted and removed easily, though click locks may also be used to help ensure that a cord or other structure does not dislodge easily from the device.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 1</figref> shows a music docking system and a mobile computing device in the form of a touchscreen smartphone. This figure shows schematically a system in which a wired electrical connection is made upon docking the device, and the formation of the electrical connection triggers other actions on the device to occur. In the figure, the dock <b>104</b> takes a familiar form of an appliance that can be plugged into a standard electrical outlet and that includes amplifiers and speakers, among other things.</p>
<p id="p-0047" num="0046">A first device state <b>102</b>A of the mobile device is shown when the device is physically connected to the dock <b>104</b>, and a second device state <b>102</b>B is shown when the device has subsequently been undocked. A charging mechanism is shown schematically in the figure by supply voltage <b>110</b> that is provided through a physical docking connector <b>108</b> to recharge batteries in the device and to allow the device to operate when it is docked. The dock <b>104</b> also has a display that can show a time, or status relating to the dock <b>104</b>, including via information that is received from the device.</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 2</figref> shows a schematic diagram of a docked mobile computing device. An input manager <b>212</b> in the device manages input to the device, including touch input to a screen on the device. A display manager <b>214</b> coordinates with the touch manager and controls what items are displayed in what positions, which will be shown over other items, and which will be shown as having the device's focus.</p>
<p id="p-0049" num="0048">A connection manager <b>218</b> manages docked and wireless connections for the device, such as in the manners discussed above. For example, the connection manager <b>218</b> may infer a context for a device based on the manner in which it is docked, and may notify various applications <b>216</b> that may be run on a processor of the device <b>200</b>, including navigational applications, of the device context. A power manager <b>208</b> and voltage sensor <b>209</b> cooperate to determine when a device has been plugged into a power source, and also to determine when certain activities may occur on a device after it has been plugged in. Finally, various wireless interfaces <b>220</b>-<b>224</b> may be employed by the device <b>200</b> in order to communicate by a variety of modes, such as BLUETOOTH, WiFi, 3G, 4G and other cellular connections.</p>
<p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. 3</figref> shows an example desktop dock for a mobile computing device. This figure shows the desktop dock <b>302</b> in both a front view <b>302</b>A and a rear view <b>302</b>B. As illustrated in the front view <b>302</b>A, the dock <b>302</b> is adapted to receive a mobile computing device <b>304</b> when the dock <b>302</b> is resting on a flat surface. In other words, a user of the device <b>304</b> may place the device <b>304</b> into the dock, for example, to charge a battery of the device <b>304</b> and route an audio signal to an external speaker system.</p>
<p id="p-0051" num="0050">The dock <b>302</b> may include three conductive pins for establishing physical electrical connections with the device <b>304</b>, when it is docked. A first pin <b>306</b> may provide a positive voltage electrical current to the device <b>304</b>. A second pin <b>308</b> may provide a reference voltage (e.g., ground) to the device <b>304</b>. A third pin <b>310</b> may be used for bi-directional serial data communication between the dock <b>302</b> and the device <b>304</b>. Additional pins may be included in other implementations, such as to provide for parallel data communications with the device <b>304</b>.</p>
<p id="p-0052" num="0051">As illustrated in the back view <b>302</b>B, the dock <b>302</b> includes a 3.5 mm female audio output jack <b>320</b>, and a female USB jack <b>322</b>. A 3.5 mm to RCA cable <b>324</b> may connect the dock <b>302</b> to an external audio source <b>328</b> (e.g., a receiver of a home stereo system). A USB cable <b>326</b> may connect the dock <b>302</b> to a power brick for connection to an AC power source. In some examples, the USB cable <b>326</b> may connect to a DC power source without a power brick, for example by connecting to a laptop computer. The laptop computer may supply solely DC power to the dock <b>302</b>, or may additionally establish digital data communications with the dock <b>302</b>.</p>
<p id="p-0053" num="0052">Accordingly, and as described in more detail throughout this document, the dock <b>302</b> may power a device <b>304</b> that has been placed in the dock <b>302</b>, and may recharge a battery of the device <b>304</b>. While docked, the device <b>304</b> may provide audio transmissions to the dock <b>302</b>, which the dock <b>302</b> may route such transmission to the external audio source <b>328</b>. The audio transmissions may be transmitted wirelessly between a radio transceiver in the device <b>304</b> and a radio transceiver in the dock <b>302</b>. The pin <b>310</b> that is used for serial communication may be used to initiate the wireless communication, but not be used to execute subsequent data communication between the dock <b>302</b> and the device <b>304</b> (e.g., to subsequently transfer data that represents an audio signal).</p>
<p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. 4</figref> shows an example car dock for a mobile computing device. In this figure, the car dock <b>402</b> includes a base <b>404</b> for mounting the car dock <b>402</b> to a surface (e.g., a car dashboard, a car windshield, a desk, or a wall). The base <b>404</b> may include a suction cup <b>406</b> that enables the base <b>404</b> to mount to consistent surfaces. A disk <b>408</b> can be adhesively attached to an uneven surface (e.g., a rippled car dashboard) to provide a consistent surface for the dock.</p>
<p id="p-0055" num="0054">The base <b>404</b> may connect to the docking body <b>410</b> via a rod. A first end of the rod may connect with the base <b>404</b> using a ball joint, while a second end of the rod may connect to the docking body <b>410</b> with another ball joint. Thus, the docking body <b>410</b> may be pivoted to face in different orientations, and may rotate between landscape and portrait orientations.</p>
<p id="p-0056" num="0055">The docking body <b>410</b> includes a recessed inner portion <b>403</b> that is surrounded by a wall <b>412</b>. The recessed inner portion <b>403</b> and the wall <b>412</b> are shaped to correspond to the outside of a housing of a mobile computing device. A lower wall <b>412</b><i>a </i>and a retractable top latch <b>416</b> may at least partially enclose a front surface of the mobile device in order to constrain the mobile device to the dock <b>402</b>. In some examples, the side walls <b>412</b><i>b </i>may not partially enclose the front surface. In other words, the walls may not circumferentially wrap more than half-way around a narrowest portion of the mobile device.</p>
<p id="p-0057" num="0056">The car dock <b>402</b> may include a female USB jack <b>414</b> to receive a USB cord (not shown) that supplies power, and in some examples, data. The car dock <b>402</b> also includes speakers <b>418</b> that radiate sound from a back side of the dock. In some examples, the speakers <b>418</b> play audio that has been wirelessly transmitted from a mobile device to the dock. A volume rocker switch <b>426</b> allows a user to adjust the volume of audio that is output by the speakers <b>418</b>. The car dock <b>402</b> also includes a microphone <b>434</b>. The dock microphone <b>434</b> may have acoustic qualities that are better suited for speakerphone operation than does a microphone of a mobile device. Thus, the dock <b>402</b> may wirelessly transmit, to a docked device, an audio signal that is received using the dock microphone <b>434</b>.</p>
<p id="p-0058" num="0057">A first pin <b>432</b> may provide a positive voltage electrical signal to a docked device. A second pin <b>430</b> may provide a reference voltage to the device. A third pin <b>428</b> may be used for serial data communication between the device and the dock <b>402</b>. The pins <b>428</b>-<b>432</b> may be provided in a same spacing and orientation as the pins <b>306</b>-<b>310</b> of <figref idref="DRAWINGS">FIG. 3</figref>. In other words, the pins in both devices contact the same portions of a mobile computing device that is moved between the docks.</p>
<p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. 5</figref> shows a partially transparent view of a dock in which a mobile computing device has been placed. The dock <b>502</b> may be the desktop dock <b>302</b> that is illustrated in <figref idref="DRAWINGS">FIG. 3</figref>. The dock <b>502</b> is shown as partially transparent to illustrate its engagement with the mobile computing device <b>504</b>.</p>
<p id="p-0060" num="0059">The mobile computing device <b>504</b> may be docked into the dock <b>502</b>. A docked device <b>504</b> may be a device that has been placed by a user into a recess of the dock <b>502</b> that is shaped to correspond to at least a portion of an outside of a housing for the device <b>504</b>. In some examples, the device's conductive pads <b>602</b>, <b>604</b>, and <b>606</b> (see <figref idref="DRAWINGS">FIG. 6</figref>) electrically contact the dock's conductive pins <b>306</b>, <b>308</b>, and <b>310</b> (see <figref idref="DRAWINGS">FIG. 3</figref>) when the device <b>504</b> is docked. When docked, the conductive elements in each dock may remain in contact without continued user assistance. Each conductive pad may be electrically isolated from each other, and each conductive pin may be electrically isolated from each other.</p>
<p id="p-0061" num="0060">In some examples, the conductive pins <b>306</b>, <b>308</b>, and <b>310</b> are pins that are biased by springs towards the recess in the dock. When the device <b>504</b> has been docked, the conductive pads <b>602</b>, <b>604</b>, and <b>606</b> engage the pins <b>306</b>, <b>308</b>, and <b>310</b>. The pins may be rods that are substantially cylindrical along a length of the pins and that are rounded at the end of the pin that contacts the respective conductive pads <b>602</b>, <b>604</b>, and <b>606</b>. When docked, the device <b>504</b> may force the pins at least partially out of the cavity and into an internal portion of the dock <b>502</b>.</p>
<p id="p-0062" num="0061">In some implementations, the dock <b>502</b> is designed to receive the device <b>504</b> in a &#x201c;frictionless&#x201d; manner. In other words, a user may place and remove the device <b>504</b> from the dock <b>502</b> without applying much more force than is necessary to manipulate the device <b>504</b> in free space.</p>
<p id="p-0063" num="0062">Accordingly, the dock <b>502</b> may not include any guiderails or protrusions that engage with the device <b>504</b> and that cause the device <b>504</b> to be placed into the dock <b>502</b>, or removed from the dock <b>502</b>, with a one-dimensional linear movement. For example, a proximal end <b>510</b> of the mobile device (e.g., an end that is closest to the dock <b>504</b> along a longitudinal axis <b>506</b> of the mobile device) may be placed into a lower portion of the recess as the mobile device is being docked, so that the longitudinal axis <b>506</b> of the mobile device remains substantially parallel to a longitudinal axis <b>514</b> of a rear face <b>328</b> of the dock.</p>
<p id="p-0064" num="0063">In another example, the proximal end <b>510</b> of the mobile device <b>504</b> may be positioned in a lower portion of the cavity so that a longitudinal axis <b>506</b> of the mobile device <b>504</b> is not substantially parallel with the longitudinal axis <b>514</b> of the rear face <b>328</b> of the dock <b>502</b> (e.g., as in the position <b>518</b>). In this example, the distal end <b>508</b> of the mobile device <b>504</b> may be pivoted (e.g., as illustrated with arrow <b>520</b>) in order to place the mobile device <b>504</b> in a resting dock position. Upon pivoting, the longitudinal axis <b>506</b> of the mobile device <b>504</b> may be moved into a substantially parallel relationship to the longitudinal axis <b>514</b> of the face <b>328</b> of the dock <b>502</b>.</p>
<p id="p-0065" num="0064">Thus, the device <b>504</b> may be initially placed into the dock <b>502</b> in an orientation that causes compression of the pins <b>306</b>, <b>308</b>, and <b>310</b> in an orientation such that the direction of pin compression is not parallel to the longitudinal axis <b>506</b> of the device. Upon pivoting the mobile device, the direction of pin compression may align in a parallel relationship with the longitudinal axis <b>506</b> of the device. In some examples, no part of the dock <b>502</b> rotates with the device <b>504</b> as the device <b>504</b> is rotated into or out of a resting docked position.</p>
<p id="p-0066" num="0065">The dock <b>502</b> may include a rear race <b>328</b>, side walls <b>330</b><i>a </i>and <b>330</b><i>b</i>, and a lower retaining wall <b>332</b>. The side walls <b>330</b><i>a</i>-<i>b </i>may cover a portion of the side walls <b>516</b> of the mobile device <b>504</b>. The lower retaining wall <b>332</b> may include a lip <b>512</b> that does not substantially cover a front portion of the mobile device <b>504</b>, and which may not cover any user input or user output devices on the mobile device <b>504</b>. The lip <b>512</b> may rise enough to retain the device <b>504</b> in the dock <b>502</b> when the device has been docked.</p>
<p id="p-0067" num="0066">The lip <b>512</b> may not, however, prevent the proximal end <b>510</b> of the mobile device from essentially popping out of the dock when a user applies force to the distal end of the mobile device <b>504</b> in a direction <b>522</b> that is oriented towards the rear face <b>328</b> of the dock. The force may cause the proximal end <b>510</b> of the mobile device to &#x201c;jump&#x201d; out of the dock <b>502</b>, and may cause disruption of electrical communication between the pins <b>306</b>, <b>308</b>, and <b>310</b> and the conductive pads <b>602</b>, <b>604</b>, and <b>606</b>. Removal of a device may be &#x201c;prevented&#x201d; when a force that is sufficient to lift the device <b>504</b> is applied to the device, and the device <b>504</b> is not removed from the dock <b>502</b>.</p>
<p id="p-0068" num="0067">Further, the lip <b>512</b> may not prevent the mobile device <b>504</b> from rotating in a forward direction <b>514</b> if a user applies a force <b>524</b> to the distal end <b>508</b> of the mobile device <b>504</b> in a direction that is away from a face of the <b>328</b> of the dock <b>502</b>. Application of such force may cause the device <b>504</b> to pivot in the forward direction <b>514</b>, eventually falling out of the dock if the user does not lift the device away from the dock after some degree of pivoting (e.g., 10 degrees). A user may also remove the device <b>504</b> so that a longitudinal axis <b>506</b> of the device <b>504</b> remains parallel to a longitudinal axis <b>514</b> of the face <b>328</b> (e.g., so that a rear face of the device <b>504</b> slides along the face <b>328</b> of the dock for two centimeters before removal away from the dock <b>502</b>).</p>
<p id="p-0069" num="0068">In some examples, a user lifts the device <b>504</b> in a vertical direction <b>526</b> out of the dock <b>502</b>. In such examples, the device <b>504</b> may be removed from the dock with little apparent friction. For example, the dock <b>502</b> may not frictionally engage the device <b>504</b> as the device is removed, beyond frictional contact forces that may be present when a device is vertically removed from a surface (e.g., frictional forces that may be apparent when a device is vertically removed from a flat table). In some examples, these forces do not exceed 0.009625 Newtons.</p>
<p id="p-0070" num="0069">In some examples, the device <b>504</b> may be removed from the dock <b>502</b> without substantial movement of the dock <b>502</b> occurring as a result of moving the device <b>504</b>. For example, when the dock <b>502</b> is not affixed to the surface or held by a user, the dock may move less than 0.2 mm when the device <b>504</b> is lifted. Such lack of substantial movement may occur even when the dock <b>502</b> weighs less than the device <b>504</b>, for example, seventy percent of the weight of the device <b>504</b> when the device <b>504</b> includes a battery.</p>
<p id="p-0071" num="0070">The dock <b>502</b> may include three electrical pins <b>306</b>, <b>308</b>, and <b>310</b> that contact the device <b>504</b>, and the device <b>504</b> may include corresponding electrical pads <b>602</b>, <b>604</b>, and <b>606</b>. The electrical pads <b>602</b>, <b>604</b>, and <b>606</b> may each include a surface that is substantially flush with a surface of the exterior of a housing of the mobile device <b>504</b>. For example, a substantially flush surface may sit no more than 0.5 mm above or below an outermost adjacent exterior surface of the device <b>504</b>.</p>
<p id="p-0072" num="0071">The mobile device <b>504</b> may include a female data connection terminal <b>610</b> on a bottom of the device <b>504</b>. The dock <b>502</b>, however, may not include a corresponding male data connection terminal. Thus, the mobile device <b>504</b> may include a data terminal that is oriented for exchange of data with the dock <b>502</b>, while the dock <b>502</b> may not include a corresponding terminal.</p>
<p id="p-0073" num="0072">The dock <b>502</b>, accordingly, may not include components that engage, on the device <b>504</b>, a surface of the device <b>504</b> that is internal to the device and that is parallel to the longitudinal axis <b>506</b>. For example, if the dock <b>502</b> included a male data connection terminal that mated with the female data connection terminal <b>610</b>, side walls of the male connection terminal may frictionally engage with the side walls of the female connection terminal <b>610</b>. In contrast, pin <b>306</b>, for example, contacts the conductive pin <b>602</b> in an orthogonal manner. Thus, the pins <b>306</b>, <b>308</b>, and <b>310</b> and the conductive pads <b>602</b>, <b>604</b>, and <b>606</b> may not prevent the mobile device <b>504</b> from laterally moving in a direction that is orthogonal to the dock's longitudinal axis <b>506</b> or the axis <b>328</b> of the dock (even if another portion of the dock may prevent such lateral movement). Instead, a proximal portion <b>510</b> of the mobile device may be able to move in a direction that is orthogonal to a direction of compression of the pins <b>306</b>, <b>308</b>, and <b>310</b>, while the mobile device <b>506</b> is in contact with the pins <b>306</b>, <b>308</b>, and <b>310</b>. A frictional force of a pin sliding across a face of a conductive pad is not a substantial frictional force.</p>
<p id="p-0074" num="0073">Dock Identification and Establishing a Wireless Connection</p>
<p id="p-0075" num="0074"><figref idref="DRAWINGS">FIG. 7</figref> shows a flowchart of an example process for identifying a dock that a mobile computing device has physically mated with, and for establishing a wireless connection with the dock. The described actions may occur upon a user physically placing the mobile device into a dock, for example, as illustrated in <figref idref="DRAWINGS">FIG. 3</figref> (i.e., the placement of device <b>304</b> into dock <b>302</b>) and <figref idref="DRAWINGS">FIG. 4</figref> (i.e., the placement of device <b>304</b> into dock <b>402</b>). In various examples, the process describes an automatic BLUETOOTH pairing that occurs upon the mobile device determining the type of dock when upon docking.</p>
<p id="p-0076" num="0075">In box <b>702</b>, the mobile computing device determines that the device has connected with electrical power. For example, the device may receive an indication that the device has begun to charge, or may receive an indication that voltage is present on an electrical bus that provides power for charging the device. As an illustration, the mobile computing device that is illustrated in <figref idref="DRAWINGS">FIG. 6</figref> may determine that the device has been connected to electrical power when power is received at conductive pad <b>602</b>.</p>
<p id="p-0077" num="0076">In box <b>704</b>, the mobile computing device determines whether the device is connected with a dock. For example, the mobile computing device may determine whether a voltage of the conductive pad <b>606</b>, which may normally be pulled up to a first voltage level when the mobile device is not connected to a dock, has been pulled down to a second voltage level as may occur when the conductive pad <b>606</b> is electrically connected with pin <b>310</b>.</p>
<p id="p-0078" num="0077">The mobile computing device may perform the operations of boxes <b>702</b> and <b>704</b> separately because the mobile device may be unable to determine a source of the power (e.g., whether the power is being received through the data terminal <b>610</b> or through the conductive pad <b>602</b>). In various examples, the determinations of boxes <b>702</b> and <b>704</b> are performed in a single step. In other words, the mobile device may be able to determine, when power is connected, whether the source of the power is through the data terminal <b>610</b> or is through the conductive pad <b>602</b>. If the mobile device is not determined to be connected to a dock, the process ends (box <b>706</b>).</p>
<p id="p-0079" num="0078">In box <b>708</b>, the mobile computing device transmits to the dock a command that requests that the dock respond with the dock type. In some examples, the command is transmitted over a single wire interface, for example, from the conductive pad <b>606</b> of the mobile device to the pin <b>310</b> of the dock.</p>
<p id="p-0080" num="0079">In box <b>710</b>, the dock receives the request. In response, the dock may access a stored alphanumeric identifier which identifies the dock type, and may transmit the dock type alphanumeric identifier back to the mobile device (box <b>712</b>). In various examples, dock <b>302</b> and dock <b>402</b> would each respond with a different identifier, but multiple of the same type of dock may respond with the same identifier.</p>
<p id="p-0081" num="0080">In box <b>714</b>, the mobile computing device receives the dock type identifier. The device, at box <b>716</b>, uses the identifier to determine whether the device has previously stored data for establishing a wireless connection with the dock (e.g., whether the device includes a wireless network identifier for the dock and an authentication code for establishing the wireless connection). If the device has the stored data, the device may establish the wireless connection, as described with reference to box <b>732</b>. If the device does not have the stored data, the device requests the wireless network identifier from the dock (box <b>718</b>).</p>
<p id="p-0082" num="0081">In box <b>720</b>, the dock receives the request for the wireless network identifier. In response, the dock may access a stored alphanumeric identifier of a network address that the dock may use for wireless communication, and may transmit the accessed network address back to the dock as the network identifier (box <b>722</b>). In some examples, the network identifier is stored under the BD_ADDR variable and is a unique address of the dock as a BLUETOOTH device, similar to MAC addresses of a network card. This address may be used in pairing the mobile device and the dock.</p>
<p id="p-0083" num="0082">In box <b>724</b>, the mobile computing device receives and stores the network identifier. The mobile device may store the network identifier in association with the dock type identifier, so that the mobile device may identify the network identifier upon subsequently docking with the dock (and thus receiving the dock type identifier).</p>
<p id="p-0084" num="0083">In box <b>726</b>, the mobile computing device generates and sends an authentication code to the dock. For example, a BLUETOOTH device may use a passkey or pin code in order to establish communication with another BLUETOOTH device. Thus, the mobile device may generate the authentication code, send the code to the other device, and may store the code in association with the dock type identifier. The dock subsequently receives the code (box <b>728</b>).</p>
<p id="p-0085" num="0084">Upon the mobile computing device and the dock both having stored the code, the devices may establish wireless communication with each other. For example, with BLUETOOTH communication, the dock may send the passkey back to the mobile device as an acknowledgment, and in response both device may wirelessly pair and exchange data. In various examples, the dock may be configured to remain unable to wirelessly pair with any devices until the dock has received a code from another device over a physical electrical connection. In various examples, the dock wireless radio may remain off until the dock receives the wireless code.</p>
<p id="p-0086" num="0085">In various examples, the dock generates the authentication code and transmits the code to the mobile device. In various examples, the dock requests the wireless address from the mobile computing device. In various examples, the communication between the mobile computing device and the dock is performed using Modified Frequency Modulation (MFM) and Run length limited (RLL) coding to ensure that the length of repeated bits during which a signal does not change is limited. In various examples, the mobile computing device and the dock establish wireless communication through a third device, for example, a Wi-Fi router.</p>
<p id="p-0087" num="0086">In various examples, a transmission by either the mobile device or the dock starts with two &#x201c;1&#x201d; databits (0101 after MFM encoding, where &#x201c;1&#x201d; indicates a transition and &#x201c;0&#x201d; indicates a maintained output). Such a start allows the receiving device to synchronize on rising and falling edges, which may help avoid problems that are caused by a DC bias on the line, or problems that may be caused by a non-center switching threshold on the general purpose input/output.</p>
<p id="p-0088" num="0087">In various examples, a device that is receiving data waits for an edge and measures the time from the last edge of the same polarity. An error is recorded if the edge occurs outside of a specified margin of error. Once the expected quantity of bits has been read, a validation may be performed to determine whether the received data represents a valid MFM encoded pattern.</p>
<p id="p-0089" num="0088">In various examples, a device that is transmitting reads a hardware timer before and after toggling the output to generate an edge. If the difference in times is outside of an acceptable margin, the device stops transmitting. If there has been a delay in the code, the receiving device may detect that there was an error unless the error occurred during the last one or more bits of a byte or of a transmission sequence. Errors in the last bit may be caught by a checksum byte as an erroneous transmission may not be a valid MFM sequence. A known stop bit may be added to improve the error checking.</p>
<p id="p-0090" num="0089">In various examples, all write commands are the same length and all read commands are the same length. Both read and write commands may begin with the mobile device sending the command followed by a short delay where the dock takes control of the data line by driving the data line to the same voltage level that the mobile device left the line in. The dock may immediately respond with a response. The response may include two start data bits followed by one acknowledgment data bit for a write command (e.g., box <b>726</b>). The response may include two start data bits followed by 8 result data bits for read commands (e.g., boxes <b>708</b> and <b>718</b>). In some examples, the dock cannot initiate a command, and may only respond to commands by the mobile device.</p>
<p id="p-0091" num="0090">In various examples, a separate command may be used to send or receive each byte of multi-byte data such as the wireless network identifier or authentication code. Another command may read or send a checksum byte. Breaking the communication into smaller portions may limit the time spent with device interrupts disabled.</p>
<p id="p-0092" num="0091">In various additional examples, identification of a dock type may occur in a variety of manners. For example, one or more electrical contacts may be provided on the device and at a corresponding location on the dock. The number of electrical contacts that are made between the device and the dock may be used to determine what type of dock the device has been docked to. For example, where the device and dock each have two contacts, the device could determine three different dock types, in which a first contact is made, a second contact is made, or both contacts are made (no contacts may have to be assumed to represent a device that is not built to the standard). The three types of docks in such an example may include a music player, an automobile, and a video monitor. Additional electrical contacts may provide for additional information to be determined by the mobile computing device when it is docked. The particular types and locations of contacts may be defined by a standard, so that the mobile device may be interoperable with docks made by a variety of suppliers. In a similar manner, magnets may be placed in the device and/or dock, and attraction of the magnets to items placed in the opposite machine may be used to make determinations in a manner similar to that for the contacts just discussed.</p>
<p id="p-0093" num="0092">In another implementation, the dock identification may be communicated to the mobile computing device through a physical data connection between the dock and the device. For example, the data connection may be parallel to or integral with the electrical connection between the device and the dock, or the data may be superimposed over the electrical signal that is passed to the device. A digital representation may be provided to the device in this manner that identifies the type of dock, and thus the context in which the mobile device has been docked.</p>
<p id="p-0094" num="0093">The context in which the device has been docked may also be inferred from a variety of other signals. For example, an accelerometer on the device may determine that the dock is vibrating at a particular frequency that is indicative of an operating automobile, and the device may thus infer that the dock is an automobile dock. In other situations, the device may emit a tone and listen for the tone, and determine its environment based on the manner in which the tone has been modified from its admitted state.</p>
<p id="p-0095" num="0094">For example, particular dampening of the tone or echoing of the tone may indicate that the device is in a user's home, car, or the outdoors. In a similar manner, docking in a car may enable the device to sync over a BLUETOOTH connection with the car itself, and the device may use the fact of the connection, or data that is passed over the connection, to determine that it has been docked within a car. A more granular determination may be made in other circumstances such as where a device may determine which car of multiple cars it has been synced in or docked in. For example, the device may determine that it has been docked in a sports car and may adjust its mode of operation accordingly, versus being docked in a sport utility vehicle. A user may also establish profiles for each type of vehicle so that the docked device changes to the particular profile when it senses that it has been docked into that type of vehicle.</p>
<p id="p-0096" num="0095">Dock-Specific Profiles</p>
<p id="p-0097" num="0096"><figref idref="DRAWINGS">FIG. 8</figref> shows an example user interface profile that is displayed by a mobile computing device upon docking in a car dock. As an illustration, a user of a mobile computing device <b>804</b>, Jim, is sitting in his house and using his mobile device <b>804</b> to view a newspaper website. Jim receives a call from a friend asking if Jim would like to join the friend for supper. Jim agrees, walks out to his car, and gets in his car.</p>
<p id="p-0098" num="0097">Jim takes his mobile device <b>804</b> and places the mobile device in a car dock <b>802</b> which Jim had previously mounted to his car windshield. As described throughout this document, Jim's mobile device <b>804</b> determines that the mobile device has been docked, and determines that the type of dock is a car dock <b>804</b> (e.g., as opposed to a desktop dock).</p>
<p id="p-0099" num="0098">Jim may never have placed the mobile device <b>804</b> in the car dock <b>802</b> before. Thus, upon Jim placing the mobile device <b>804</b> in the car dock <b>802</b>, the mobile device displays the configuration dialog box <b>806</b>. The configuration dialog box <b>806</b> includes a first user interface element <b>808</b> that enables Jim to activate wireless communication between the mobile device and the dock for using the dock as a &#x201c;speaker phone,&#x201d; and a second user interface element <b>810</b> that enables Jim to activate wireless communication between the mobile device and the dock for using the dock to audibly output &#x201c;music and media.&#x201d;</p>
<p id="p-0100" num="0099">Jim would like to use the full capabilities of the dock, and thus selects both options by tapping on the selectable user interface elements, which show check marks upon user selection. Jim would also like the mobile device <b>804</b> to remember his selections so that the dialog box <b>806</b> does not appear upon a subsequent docking. Thus, Jim selects the &#x201c;Remember Settings&#x201d; interface element <b>812</b>. Jim then selects the &#x201c;OK&#x201d; interface element <b>814</b>, which causes the dialog box <b>806</b> to be removed from display. In some examples, Jim may go to a &#x201c;settings&#x201d; user interface page to change his wireless settings because the dialog box <b>806</b> may no longer appear upon docking. In some examples, the dialog box <b>806</b> does not include the &#x201c;Remember Settings&#x201d; interface element <b>812</b>, and the dialog box <b>806</b> only appears the first time that the mobile device is docked with a particular dock or type of dock.</p>
<p id="p-0101" num="0100">User selection of the &#x201c;OK&#x201d; interface element <b>814</b> may trigger activation of wireless communication between the mobile device <b>804</b> and the dock <b>802</b> based on the selected settings. Thus, if an incoming telephone call is received while the device <b>804</b> is docked, the ringing and audio from the party that is calling Jim may be output over the dock speakers instead of the mobile device speakers. In other words, the mobile device <b>804</b> wirelessly transmits to the dock <b>802</b> data that encodes an audio signal of the incoming telephone call ring and audio of the voice of the calling party. The dock <b>802</b> may receive the data, and from the data, generate an audio signal to audibly output over the dock's speakers.</p>
<p id="p-0102" num="0101">Also, the dock <b>804</b> may include a microphone <b>816</b> that may be activated when telephone calls are initiated or received when the mobile device is docked and when the &#x201c;speaker phone&#x201d; setting has been selected. During the telephone call, Jim may speak into free space even though his mobile device <b>802</b> is an arm's length away from Jim. The microphone that is in the dock may be designed to work adequately at an arm's length distance where, for example, the microphone in the mobile device <b>804</b> may be at least partially obscured by the dock and may have been designed to work preferably for audio that is spoken within several inches of the mobile device.</p>
<p id="p-0103" num="0102">Further, because Jim has selected to use the dock for &#x201c;music and media&#x201d; audio, when Jim launches an application program that has registered with the mobile computing device <b>804</b> as an application program for playing media files (e.g., songs, audiobooks, or video files), audio that is output by the application program may be wirelessly transmitted to the dock for audible output. Thus, Jim may audibly output media files over the dock's speakers by placing the mobile device in the dock. On the other hand, if Jim had not selected to use the dock for &#x201c;music and media,&#x201d; the mobile device <b>804</b> may have audibly output the audio through the speakers of the mobile device <b>804</b>, or through a 3.5 mm headphone jack of the mobile device <b>804</b> (if a line is plugged into the headphone jack). Thus, if Jim wishes to run audio through a 3.5 mm audio line of the mobile device <b>804</b>, Jack may not want to select the &#x201c;music and media&#x201d; interface element <b>810</b>.</p>
<p id="p-0104" num="0103">Upon Jim selecting the &#x201c;OK&#x201d; interface element <b>814</b>, the dialog box <b>806</b> may disappear and the car dock specific desktop <b>818</b> may display without obstruction by the dialog box <b>806</b>. The car dock specific desktop <b>818</b> may include six selectable interface elements for launching six corresponding application programs. For example, Jim may select the &#x201c;Navigate&#x201d; interface element <b>820</b> to launch an application program that provides driving directions from a present location of the mobile device to a user-input location. Selection of a &#x201c;Call&#x201d; interface element <b>822</b> may launch an application program that allows Jim to place a telephone call with the mobile device <b>804</b>.</p>
<p id="p-0105" num="0104">Selection of a &#x201c;Voice Search&#x201d; interface element <b>824</b> may launch an application program that allows Jim to audibly speak a query and, in response, the mobile telephone may display a list of search results. Selection of a &#x201c;Contacts&#x201d; interface element <b>826</b> may launch an application program that causes the mobile device <b>804</b> to display a list of Jim's contacts. Selection of a &#x201c;Music&#x201d; interface element <b>828</b> may launch a media player application program. Using the media player application program, Jim may navigate a media collection and select a media file for audile and/or visual output by the mobile device <b>804</b>. Selection of the &#x201c;Exit Car Mode&#x201d; interface element <b>830</b> may cause the car dock specific desktop <b>818</b> to disappear and be replaced by a desktop that is displayed during an undocked state of the mobile device (even though the mobile device may remain in the dock).</p>
<p id="p-0106" num="0105">As illustrated in <figref idref="DRAWINGS">FIG. 8</figref>, the car dock specific desktop <b>818</b> is rotated to present the display in landscape mode (e.g., a mode where a default orientation of text is presented to read along a longest dimension of the display, or a mode where a vertical orientation of display content appears along a shortest dimension of the display). In some examples, the car dock specific desktop <b>818</b> is displayed in landscape mode regardless of an orientation of the mobile device <b>814</b>, while a display of the desktop while the mobile device is not docked may appear in either landscape mode or portrait mode, depending on an orientation of the mobile device <b>804</b> (e.g., as determined by an accelerometer sensor). In some examples, upon the mobile device <b>804</b> being placed in the car dock <b>802</b>, the touch sensor buttons <b>832</b><i>a</i>-<i>d </i>are deactivated so that the buttons do not cause a change to the display if selected. The touch sensor buttons <b>832</b><i>a</i>-<i>d</i>, however, may be active when the mobile device is not docked, or when the mobile device is in a different type of dock.</p>
<p id="p-0107" num="0106">A background display <b>834</b> is displayed as lying behind partially transparent selectable interface elements <b>820</b>-<b>830</b> (elsewhere referred to as application program shortcuts). In some examples, the background display changes at least partially based on the geographical position of the mobile computing device. In this illustration, the background illustrates an image of the ocean. For example, Jim may be driving up U.S. Route 101 along the Oregon west coast and an image of a place that is nearby Jim's location may be retrieved from a server and may be displayed as the background display. If Jim were driving through the mountains, an image that includes mountains may be selected.</p>
<p id="p-0108" num="0107">In some examples, the background display is of a map, where the map pans as a location of the mobile computing device changes. For example, the map may show an overhead view of streets that are nearby the mobile computing device's present location, and an icon that represents a current location of the mobile computing device. As the geographical position of the mobile computing device changes, the display of the map may change. For example, when Jim is in Oregon, the map may show a display of the region of Oregon around Jim. As Jim drives north and reaches Seattle, the map may pan to show a map of Seattle. The map may appear as the background display upon Jim docking the mobile device, without Jim supplying any user input subsequent to docking.</p>
<p id="p-0109" num="0108"><figref idref="DRAWINGS">FIG. 9</figref> shows an example user interface profile that is displayed by a mobile computing device upon docking in a desktop dock. The user interface includes a configuration dialog box <b>906</b> that includes an interface element for activating use of the dock for music, ringer, and alarm audio (but may silence other audio events). Like the configuration dialog box <b>806</b>, the dialog box <b>906</b> may be presented a first time that the mobile device <b>804</b> is placed in the desktop dock, or if the mobile device <b>904</b> is placed in the desktop dock a subsequent time but if a user did not previously select the &#x201c;Remember Settings&#x201d; interface element <b>910</b>.</p>
<p id="p-0110" num="0109">When the mobile device <b>804</b> is docked in the desktop dock, the mobile device <b>804</b> presents a user interface desktop <b>934</b> that is specific to the desktop dock, and that is activated upon placing the device <b>804</b> in the dock. The user interface includes a contrast interface element <b>914</b> that, when selected, may dim the screen to facilitate use of the docked device as a bedside clock. The user interface includes an alarm interface element <b>916</b> that a user can select in order to set or cancel alarms. In some examples, the next scheduled alarm is displayed on the desktop (e.g., behind the dialog box <b>906</b>).</p>
<p id="p-0111" num="0110">The photo interface element <b>918</b> may be selected to display an interface for viewing pictures or a slideshow of pictures. The media interface element <b>920</b> may be selected to launch an interface for playing media that is stored on the mobile device <b>804</b>, or that the mobile device <b>804</b> can access over a network. The home interface element <b>922</b> may be selected to bring a user back to a display of a desktop user interface that is displayed when the mobile device is undocked.</p>
<p id="p-0112" num="0111"><figref idref="DRAWINGS">FIG. 10</figref> shows a modification to an example user interface profile that is displayed by a mobile computing device upon docking in a car dock. In this example, a user may modify the desktop by dragging application program shortcuts (e.g., graphical interface elements that, when selected, cause the mobile computing device to launch a corresponding application program) to different locations, deleting application program shortcuts, and adding new application program shortcuts.</p>
<p id="p-0113" num="0112">For example, a primary user input selection (e.g., a single tap with a finger) of the &#x201c;Maps&#x201d; application shortcut <b>1002</b> may cause the mobile device to launch the maps application program. A secondary user input selection (e.g., a single press and hold with a finger) of the same &#x201c;Maps&#x201d; application shortcut <b>1002</b> may invoke a user interface state that allows moving the &#x201c;Maps&#x201d; application shortcut <b>1002</b>.</p>
<p id="p-0114" num="0113">In <figref idref="DRAWINGS">FIG. 10</figref>, a user has pressed the Maps application shortcut <b>1002</b>, held the shortcut to invoke a modifiable user interface, and is in the process of moving the shortcut <b>1002</b> to a different location. Upon user terminating user contact with the display, the shortcut <b>1002</b> may move to a selected location (e.g., a location in the two-by-three-grid of interface elements that is closest to the location of release). Other interface elements may shift to different grid positions if the selected grid position is occupied. The user may alternatively drag the shortcut <b>1002</b> to the trash icon <b>1008</b> in order to remove the shortcut <b>1002</b> from display.</p>
<p id="p-0115" num="0114">In various examples, each location in the grid that does not include an application program shortcut may display an interface element that, when selected, prompts a user to add an application program shortcut at the displayed location (e.g., with the text &#x201c;Add shortcut&#x201d;). The &#x201c;Add shortcut&#x201d; interface elements (e.g., interface elements <b>1004</b> and <b>1006</b>) may appear in the empty slots of the desktop grid during a first display of the user interface upon docking the mobile device, or may appear only upon the user interface entering a &#x201c;modifiable&#x201d; state (e.g., upon the user providing a long press to either an application shortcut or a blank location in the desktop).</p>
<p id="p-0116" num="0115"><figref idref="DRAWINGS">FIG. 11</figref> shows a flowchart of an example process for displaying a dock-specific profile. In box <b>1102</b>, a mobile computing device determines that the device has been docked, for example, by identifying that an electrical signal is being received from the dock. The determination that the device has been docked may include determining a type of the dock (box <b>1104</b>). The type of dock may be determined based on a serial digital signal that the mobile device receives from the dock. The dock determination operations are described in more detail throughout this document, for example, with reference to <figref idref="DRAWINGS">FIG. 7</figref>.</p>
<p id="p-0117" num="0116">In box <b>1106</b>, the mobile device determines whether the device has previously docked with the type of dock. For example, the device, when docked, may store an indication that the device has docked. Thus, upon a subsequent docking, the mobile device can check to see if the indication is stored, and, if the indication is not stored, the device may determine that it has not previously docked with the type of dock. In various examples, the indication is stored by the dock and is transmitted to the mobile device upon docking. If the mobile device is being docked for the first time, the dock configuration interface may be displayed (box <b>1110</b>). In various examples, the indication identifies a type of the dock, so that the configuration interface may be displayed only when a device is docked for a first time with a particular type of dock, even though the device may have previously docked with other types of docks.</p>
<p id="p-0118" num="0117">In box <b>1110</b>, a dock configuration user interface is displayed. In some examples, the configuration user interface is specific to the dock. In other words, the mobile device may be configured to dock with multiple types of docks, and a different configuration interface may display for each dock. For example, the dialog box <b>806</b> may be displayed the first time a mobile device is docked with a car dock, and a dialog box <b>906</b> may be displayed the first time the mobile device is docked with a desktop dock.</p>
<p id="p-0119" num="0118">In box <b>1112</b>, the configuration user interface displays user interface controls that enable a user to adjust communication settings between the dock and the mobile device. In various examples, the user interface controls enable the user to activate settings for wirelessly transmitting specific types of information between the dock and mobile device. For example, activation of a first setting may cause the mobile device to transmit to the docking system audio that is generated by one or more media player application programs. Activation of a second setting may cause the mobile device to transmit to the docking system audio that is received during a telephone call, and to receive from the docking system audio that a microphone in the docking system receives during a telephone call. Activation of a third setting may toggle whether the mobile device terminates a wireless connection with the dock upon undocking, or whether the wireless communication persists upon undocking.</p>
<p id="p-0120" num="0119">In box <b>1114</b>, the configuration user interface displays a user interface control for saving a current configuration (e.g., a current user activation of settings). For example, if the user selects the user interface control <b>910</b>, the user settings may be stored upon selection of the &#x201c;OK&#x201d; button <b>912</b>. Thus, upon subsequent docking of the mobile device with the same dock or type of dock, the configuration user interface may not be displayed. Instead, the user interface desktop <b>934</b> may display without presentation of the configuration dialog box <b>906</b>.</p>
<p id="p-0121" num="0120">Accordingly, at box <b>1108</b>, a determination is performed whether the mobile device should present a configuration display when the device has been docked, but the device is not being docked for a first time. If the configuration settings have not been saved (as described above with reference to interface control <b>910</b>), the configuration user interface may be displayed again. If the configuration settings have been saved, the configuration user interface may not be displayed.</p>
<p id="p-0122" num="0121">Regardless, upon docking, a dock-specific user interface profile is displayed to a user (box <b>1116</b>). The dock-specific user interface can include the display of the dock configuration user interface in the above-described circumstances (box <b>1110</b>), and can also include a display of a dock-specific background (box <b>1118</b>), or a shortcut modification interface (box <b>1124</b>), among various examples.</p>
<p id="p-0123" num="0122">In box <b>1118</b>, the mobile computing device displays a dock-specific background. In some examples, a background is a display that is presented as a backdrop to a set of icons that a user may select for launching corresponding application programs. These icons may be referred to as application program shortcuts. The application program shortcuts may each reference an application program that the user has downloaded to the mobile device from an application store.</p>
<p id="p-0124" num="0123">The combination of the application program shortcuts and the background is referenced herein as a mobile device &#x201c;desktop.&#x201d; The desktop may be a first display that is presented to a user upon docking a device, or upon acknowledging settings in a configuration screen. The desktop may be a first display that is presented to a user upon turning the device on, and possibly navigating past an authentication interface or a device unlocking interface. The desktop may display upon user selection of a hardware button (e.g., the button <b>832</b><i>c</i>).</p>
<p id="p-0125" num="0124">In some examples, the background display is updated based on a geographical location of the mobile computing device (box <b>1120</b>). For example, the background display may include a geographical street map, and the displayed portion of the street map may change as the mobile device geographically moves so that a center of the street map continuously corresponds to a location of the mobile computing device on the street map.</p>
<p id="p-0126" num="0125">In some examples, the background updates for a specific type of dock, but not for another type of dock. For example, the background display may not update based on a geographical location of the mobile computing device when placed in a second type of dock (box <b>1222</b>). For example, the background may update periodically to include another picture from a collection of the user's photographs. The selection of the picture may not be based on geographical location, however. Accordingly, whether or not a background updates based on geographical position may depend on a type of dock.</p>
<p id="p-0127" num="0126">In box <b>1124</b>, a shortcut modification interface is displayed by a mobile computing device. For example, the user interface of <figref idref="DRAWINGS">FIG. 10</figref> may be displayed to a user when the mobile device is placed in a car dock. The shortcut modification interface may display a collection of application program shortcuts in a grid, where each application program shortcut may be snapped to a grid location. In this example, those locations that do not include an application program shortcut include an icon that may be selected to generate an application program shortcut (e.g., icons <b>1004</b> and <b>1006</b>).</p>
<p id="p-0128" num="0127">User selection, for example, of icon <b>1004</b> may invoke a user interface for selecting an application program that an application program shortcut that is generated in the selected location may launch. In various examples, every position in the grid that is not occupied by an application program shortcut includes an icon for generating an application program shortcut. In various examples, the icons for generating the application program shortcuts are displayed upon entering a state for modifying the desktop, for example, upon selection of an &#x201c;Edit Desktop&#x201d; user interface element.</p>
<p id="p-0129" num="0128">In box <b>1128</b>, an application program shortcut (e.g., interface element <b>1002</b>) is moved by dragging the application program shortcut to a new location in the grid. If the new location already includes an existing application program shortcut, the existing application program shortcut may change in visual appearance (e.g., to highlight a border). Upon release of the application program shortcut that is being moved, the application program shortcut may &#x201c;drop&#x201d; into the new location, and the application program shortcut that was at the new location may move to a different location.</p>
<p id="p-0130" num="0129">Accordingly, with respect to docking of a device, various actions are disclosed that may occur automatically (i.e., without user intervention) when a user docks their mobile computing device to a base or dock. For example, the device can recognize an environment that is associated with the dock and may change modes to match that environment.</p>
<p id="p-0131" num="0130">The mode of operation of the device may change automatically in response to the device being docked. In general, the mode of operation may be changed so that the current mode of operation matches the environment or context in which the mobile computing device has been determined to of been placed. For example, if the environment is determined to be a dock attached to a video monitor, the mode of operation may be changed by launching a media player and arranging the media player to display videos that are available for playing on the device.</p>
<p id="p-0132" num="0131">In contrast, if the dock is determined to be a music dock, the media playing application may be launched again, but a library of the user's music may be highlighted on the device. If the dock is determined to be an automotive dock, the device may be placed into a mode appropriate for activities in an automobile, such as a mode that shows a mapping application or a navigation application, and a GPS unit on the device may be turned on and activated automatically so as to enable real-time updating of the mapping application or navigation application.</p>
<p id="p-0133" num="0132">Effect of Undocking a Mobile Computing Device</p>
<p id="p-0134" num="0133"><figref idref="DRAWINGS">FIG. 12</figref> shows an example flowchart for delaying wireless termination upon undocking of a mobile device. As described throughout this document, a mobile computing device may establish wireless communication with a dock upon placement in the dock. The mobile device may subsequently be removed from the dock for a short period of time without termination of the wireless communication session. If the mobile device is placed back in the dock within the period of time, the wireless communication may not be interrupted.</p>
<p id="p-0135" num="0134">As an illustration, the mobile device may be placed in the desktop dock that is described throughout this document. Because the mobile device may gently rest in the desktop dock without significant restraint, a user may unknowingly cause disruption of physical electrical power or communication transfer between the mobile device and the dock when touching the mobile device's screen. Further a user may accidentally knock the mobile device out of the dock, or may remove the mobile device from the dock and shortly thereafter decide that the user does not want the device to transition to an undocked graphical interface. In all of these cases, the user may quickly place the device back into the dock without termination of the wireless communication session. Rather, a wireless communication session may only terminate if the mobile device remains undocked a predetermined amount of time (e.g., two seconds).</p>
<p id="p-0136" num="0135">In box <b>1202</b>, a mobile computing device determines that the mobile computing device has been docked. For example, the mobile computing device may receive an electrical signal that indicates that the mobile device has been physically placed in a dock. Various mechanisms for determining that a mobile device has been docked are described throughout this document.</p>
<p id="p-0137" num="0136">In box <b>1204</b>, wireless communication between the mobile device and the dock is established. For example, the dock may transmit to the mobile device a dock identification number, a BLUETOOTH address, and a BLUETOOTH pin code. The mobile computing device may use the received information to establish wireless communication (e.g., a BLUETOOTH wireless communication session) with the dock. As described throughout this document, the mobile device and the dock may use wireless communication to exchange media data (e.g., music or video data).</p>
<p id="p-0138" num="0137">In box <b>1206</b>, the mobile computing device determines that the device has undocked. The determination may be performed by sensing a termination or change in a signal that the mobile device had used to determine that the device was docked. For example, if the mobile device determined that the device was docked by sensing that the device received electrical power for charging a battery, the mobile device may determine that the device is no longer docked when the device senses that the electrical power ceases. In some examples, the mobile device receives a periodic signal over the physical data connection that provided the dock identification data, and cessation of the periodic signal may indicate that the mobile device is no longer docked. In some examples, the dock determines that the mobile device is no longer docked and wirelessly transmits an indication to the mobile device informing the mobile device that the device is no longer docked.</p>
<p id="p-0139" num="0138">In box <b>1208</b>, the mobile computing device invokes a delay before the mobile device terminates the wireless communication with the dock. In some examples, the mobile device queues a message to terminate the wireless communication with a one-second delay. In some examples, the mobile device activates a one-second timer without placing the termination message in a queue (and executes the termination upon expiration of the timer, as described below). In various examples, the delay may be 0.2 second, 0.5 seconds, 0.8 seconds, 1.0 seconds, 1.5 seconds, 2 seconds, 5 seconds, or 10 seconds.</p>
<p id="p-0140" num="0139">In box <b>1210</b>, a user alert is provided. For example, upon a mobile device determining that it is undocked, the mobile device may audibly beep or wirelessly provide a beeping audio signal to the dock for audible output. In some examples, the mobile device may display a prompt on the mobile device's display. In some examples, the mobile device or dock may flash a notification light.</p>
<p id="p-0141" num="0140">In box <b>1212</b>, the mobile device determines if the device has been docked. For example, the mobile device may identify if the determination that was described with respect to box <b>1202</b> is performed again. If the mobile device is re-docked during the delay period, the queued message to terminate the wireless communication may be deleted. On the other hand, if the mobile device is not re-docked during the time period of the delay, the wireless communication may be terminated (as described with reference to box <b>1214</b>).</p>
<p id="p-0142" num="0141">In box <b>1214</b>, the wireless communication between the mobile device and the dock is terminated. For example, the mobile device may send a command to break down the wireless communication session, or vice versa. The wireless communication may remain inactive until the mobile computing device is docked yet again.</p>
<p id="p-0143" num="0142">In various examples, the operations of boxes <b>1202</b> through <b>1214</b> are performed without receipt of user input. Instead, a user's only contact with a mobile device may be manipulation of the mobile device in relation to a location of the dock.</p>
<p id="p-0144" num="0143"><figref idref="DRAWINGS">FIG. 13</figref> shows a user interface of a mobile computing device that has been removed from a dock, but that remains in wireless communication with the dock. As described throughout this document, for example with reference to <figref idref="DRAWINGS">FIG. 12</figref>, a mobile computing device that is placed in a dock may establish wireless communication with the dock. A user may adjust configuration settings to define an effect of undocking on the wireless communication. In some examples, the user may prefer that the mobile device terminate the wireless communication after a brief time period (e.g., as described with reference to <figref idref="DRAWINGS">FIG. 12</figref>). In other examples, the user may prefer that the mobile device remain in communication with the dock.</p>
<p id="p-0145" num="0144">As an illustration, a user of a mobile computing device, Jim, may place his mobile device in a dock, and may play a music album from his electronic media library. The mobile device may wirelessly transmit the music to the dock, and the dock may audibly output the music over a stereo system that Jim has connected to the dock via an audio output cable.</p>
<p id="p-0146" num="0145">Jim moves around his living room performing chores and listening to the music, until the music suddenly dims and is replaced by the sound of a ringing telephone. Jim speaks &#x201c;Answer Call&#x201d; into free space, a microphone in the dock picks up Jim's words, and the dock wirelessly transmits the words to the mobile device. The mobile device may use a speech recognition system to determine whether the received audio includes a spoken command. In this example, the spoken command &#x201c;Answer Call&#x201d; causes the mobile device to perform an action to answer the incoming telephone call. Jim chats with the calling party for a while, and the calling party's voice is output over Jim's stereo system. After saying goodbye, the calling party hangs up, ending the call. The music resumes playing over the stereo system.</p>
<p id="p-0147" num="0146">Jim may decide to do chores in another room, and thus walks over to the dock and pulls the mobile device out of the dock. Because Jim has configured his mobile device so that the wireless communication continues when the device is undocked, the music may continue to play over the speakers even though Jim has walked into the other room with his mobile device.</p>
<p id="p-0148" num="0147">In some examples, upon Jim undocking the mobile device, an undocked/communicating user interface profile is presented, where the undocked/communicating user interface profile is specific to the mobile device being undocked but wirelessly communicating with the dock. In various examples, the undocked/communicating user interface profile is different than a docked user interface profile that is presented while the mobile device is docked, or an undocked/non-communicating user interface profile that is presented while the mobile device is undocked but is not in wireless communication with the dock. The mobile computing device may, in various examples, switch from the undocked/non-communicating profile, to the docked profile, to the undocked/communicating profile without receiving user input. The user may only manipulate the mobile device in to and out of the dock.</p>
<p id="p-0149" num="0148">An example undocked/communicating user interface profile is shown in <figref idref="DRAWINGS">FIG. 13</figref>. In this figure, the mobile computing device is displaying a dock control interface <b>1302</b> over a desktop display <b>1330</b>. In some examples, the dock control interface <b>1302</b> may appear automatically upon undocking without receipt of user input. In some examples, a user may toggle display of the dock control interface <b>1302</b> with selection of an icon <b>1332</b> that displayed in the mobile device's status bar. The icon <b>1332</b> may appear when the mobile computing device undocks.</p>
<p id="p-0150" num="0149">The dock control interface <b>1302</b> includes interface elements for modifying dock operation and modifying the type of data that is communicated to the dock. For example, the dock includes a first button <b>1306</b> for increasing dock volume and a second button <b>1308</b> for decreasing dock volume. Upon user selection of the increase volume button <b>1306</b>, the mobile device may transmit a command to the dock to amplify the audio signal that the dock is outputting over its speakers. The dock may receive the command and may change a gain of an amplifier that is part of the dock.</p>
<p id="p-0151" num="0150">The dock control interface <b>1302</b> may display controls for each application program that is communicating with the dock. In this example, Jim has previously launched a media player application program, which is playing a music album. As a result, controls that are specific to the media player application program are displayed in the interface <b>1302</b>. For example, the interface <b>1302</b> includes a &#x201c;Pause&#x201d; media file button <b>1312</b> and a &#x201c;Next&#x201d; media file button <b>1314</b>.</p>
<p id="p-0152" num="0151">The dock control interface <b>1302</b> includes an &#x201c;Options&#x201d; button <b>1316</b>. User selection of this button may cause the interface <b>1302</b> to expand so that additional options can be displayed. Example additional options include configuration options for managing wireless communication between the mobile device and the dock. Another set of options can include a list of application programs which may be activated for communication with the dock, but which are not presently active (e.g., a telephone application program, a baby monitor application program, and a game application program that can be played in cooperation with the dock).</p>
<p id="p-0153" num="0152">The dock control interface <b>1302</b> may also include a &#x201c;Disconnect from Dock&#x201d; button <b>1318</b>, which upon user selection may cause the wireless communication to terminate. In some examples, application programs that are communicating with the dock are terminated, or are placed in a waiting state (e.g., the media player application program may pause a playing of a music album), upon disconnection. In some examples, the dock control interface <b>1302</b> may disappear from display (and the icon <b>1332</b> may disappear) upon disconnection. In some examples, the dock control interface <b>1302</b> may not appear until the user has again docked the device, and has removed the device from the dock. In other examples, the dock control interface <b>1302</b> may appear when the device is docked.</p>
<p id="p-0154" num="0153"><figref idref="DRAWINGS">FIG. 14</figref> shows another user interface of a mobile computing device that has been removed from a dock, but that remains in wireless communication with the dock. The mobile device <b>1402</b> may store an indication that the device is undocked but in wireless communication with the dock. Thus, the mobile computing device, and application programs that are installed on the mobile device, may take advantage of an ability to determine whether the mobile device <b>1402</b> is wirelessly communicating with the dock.</p>
<p id="p-0155" num="0154">For example, a user of the device <b>1402</b> may launch an application program for a car racing video game. The video game may be configured to execute in two display modes. If the mobile computing device is undocked, but is not wirelessly connected with a dock, the video game may display on a single display (e.g., only the display of the mobile computing device). The single display may include controls for moving the car, along with a view of the active game content (e.g., a view of the car which the user is controlling).</p>
<p id="p-0156" num="0155">If the mobile computing device is in undocked but is in wireless communication with the dock, the video game may display on two displays (e.g., the mobile device and an auxiliary display <b>1404</b> that is connected to the dock through an auxiliary video output). In this example, the application program displays the active game content on the auxiliary display <b>1404</b>, and the controls for moving the car on the mobile device <b>1402</b>. Accordingly, the mobile device, when wirelessly connected to a dock, may enter a state that visually or audibly outputs information that is different than the visual or audible output when the mobile device is not in wireless communication with the dock.</p>
<p id="p-0157" num="0156">In this example, wireless communication of video data to the auxiliary display <b>1404</b> is illustrated by the wireless signal <b>1406</b>. The wireless signal, however, may be transmitted to a dock, which may transmit the signal to the display <b>1404</b> over a cable.</p>
<p id="p-0158" num="0157"><figref idref="DRAWINGS">FIG. 15</figref> shows a flowchart of an example process for maintaining a wireless connection upon undocking. In box <b>1502</b>, a mobile computing device determines that the device has docked. As an example, the mobile device may receive an electrical signal that was transmitted by the dock, and that indicates that the device has been docked.</p>
<p id="p-0159" num="0158">In box <b>1504</b>, the mobile device, upon determining that the device is docked, establishes wireless communication with the dock. For example, the mobile device may receive a BLUETOOTH address from the dock, and may establish a wireless connection with the dock using the BLUETOOTH address.</p>
<p id="p-0160" num="0159">In box <b>1506</b>, the mobile device may determine that the device has undocked. For example, the mobile device may determine that the electrical signal described above with reference to box <b>1502</b> terminates.</p>
<p id="p-0161" num="0160">In <b>1508</b>, the mobile computing device maintains the wireless communication with the dock even though the mobile device may no longer be docked. The communication may remain in effect for an extended period of time (e.g., one minute, five minutes, or sixty minutes), and may terminate, for example, upon (i) the mobile device turning off, or (ii) the user providing user input that causes the mobile device to terminate the wireless communication.</p>
<p id="p-0162" num="0161">In box <b>1510</b>, the mobile computing device displays a prompt upon undocking. The prompt may state that the wireless communication may terminate if the user does not provide user input within a defined time period. For example, the prompt may include, for example: (i) text that states &#x201c;Maintain Wireless Connection?&#x201d;, (ii) a selectable interface element that states &#x201c;Remain Connected&#x201d;, and (iii) a selectable interface element that states &#x201c;Disconnect.&#x201d; In some examples, the prompt includes a visual identification of a time that is remaining before the wireless communication terminates. For example, the prompt may include a numerical countdown in seconds, or may include horizontal bar that expands across the display. In various examples, the prompt is displayed within 0.5 seconds, 1 second, 3 seconds, or 5 seconds of the mobile device being undocked. The prompt may display without the user providing user input after the undocking.</p>
<p id="p-0163" num="0162">Such operation by a mobile telephone may involve &#x201c;Opt-In&#x201d; maintenance of the wireless communication. In another example, the user is provided a prompt to &#x201c;Opt-Out&#x201d; of the wireless communication. If the user does not provide input during the defined time period of display for the prompt, then the prompt may disappear and the wireless communication may remain connected. For example, the prompt may state &#x201c;Disconnect Wireless Connection?&#x201d;</p>
<p id="p-0164" num="0163">In box <b>1512</b>, the user of the mobile device is provided an ability to control the dock's operation via the wireless communication. For example, upon undocking, the mobile computing device may display the dock control interface <b>1302</b> of <figref idref="DRAWINGS">FIG. 13</figref> (or may allow the user to select the dock icon <b>1332</b> upon disconnection). The dock control interface <b>1302</b> may include a disconnect interface button <b>1318</b> that allows a user to terminate the wireless communication (box <b>1514</b>).</p>
<p id="p-0165" num="0164">In some examples, the dock control interface <b>1302</b> may include dock-specific settings (box <b>1516</b>). For example, the mobile computing device may be able to connect with two different types of docks, but only one of the types of docks may include speakers and an amplifier. Thus, the dock volume buttons <b>1306</b> and <b>1308</b> may only display upon docking/undocking to the dock with the speakers. The dock volume buttons <b>1306</b> and <b>1308</b> may not be displayed upon docking/undocking to a dock that does not include the speakers.</p>
<p id="p-0166" num="0165">In some examples, the dock-specific settings are selectable user interface elements that are displayed when the mobile device has been docked/undocked, but not when the mobile device is presently docked. The dock-specific settings may be displayed for multiple types of docks.</p>
<p id="p-0167" num="0166">In box <b>1518</b>, the mobile computing device invokes a master-slave mode. As an example, upon undocking, the user may launch a television application program. Data for displaying a television channel may be received at the mobile computing device over a network, and the mobile computing device may transmit the data to the dock. The dock may forward the data over an auxiliary output line to a television, which may display the television channel to a user. The mobile device, however, may not display the television channel. Instead, the mobile device may operate as a master device that presents options to the user for modifying the display of the television channel (e.g., options to change the channel, fast forward, or rewind). Thus the mobile device may operate as a master device that controls the operation of the slave device and that provides content for display on the slave device (e.g., the dock/television combination).</p>
<p id="p-0168" num="0167">In various examples, a device when docked may make only an electrical charging connection through the physical docking interface, and may separately and automatically make a wireless connection to the dock or to a device that is associated with the dock. For example, when a device is docked to a speaker system, the device may begin charging and may also establish a BLUETOOTH or similar connection to the speaker system for playing music stored (e.g., in MP3 format) on the device over the speaker system. In this manner, when the device has charged, the user can take it out of the dock while the music continues playing, and the user could, for example, walk around and use the device, in effect, as a remote control for the speaker system (within the range of the wireless interface).</p>
<p id="p-0169" num="0168">A wireless data connection of a may be created whenever the dock and mobile computing device are connected. For example, a wireless handshaking function may occur between the two devices, and the devices may then exchange information that identifies the type of dock, and thus the context in which the device has been talked.</p>
<p id="p-0170" num="0169">In various examples, separate wired and wireless connections may be made between a mobile computing device and a dock, or a device associated with a dock, when the mobile computing device is physically docked. The wired connection may be a power connection in a familiar manner, and may be used to recharge the mobile device while it is docked. A wired data connection could also be provided, but that data connection may be broken if and when the mobile computing device is removed from the dock. Thus, as an alternative to, or in addition to, the wired data connection, a wireless data connection may be formed automatically when the docking occurs. Such a connection may be used to transfer files or other information between the mobile computing device and the dock or a device associated with the dock, even after the device has been undocked.</p>
<p id="p-0171" num="0170">Thus, for example, a user may dock their portable computing device to a music or video system, and a wireless handshaking negotiation may occur to establish a data link between the wireless computing device and the dock. The user may then choose to begin playing a media file, and the media file may play through the dock such as when the dock is a speaker system, or through a device associated with the dock, such as a video monitor connected to the dock, where the dock provides for television playing, recording, and similar functions, such as personal video recorder functions. After a time period, the user may want to take the mobile computing device with them but continue playing the media file or files that are stored on the mobile computing device. The user may thus undock the device, and the data transmission may continue over the wireless interface between the mobile computing device and the dock. With the device undocked, the user may employ the device like a remote control, such as by moving throughout the user's home and changing media files, adjusting volume levels, changing rooms in which the media will be played, or other similar actions.</p>
<p id="p-0172" num="0171">Determining a Change in Mode of Transportation</p>
<p id="p-0173" num="0172">A mobile computing device may record a geographical location at which a user changed modes of transportation, for example, so that a user can find a location at which the user parked his car, locked his bicycle, or got on a public transportation system. As described in more detail below, the mobile device may determine the geographical location without the user providing user input.</p>
<p id="p-0174" num="0173"><figref idref="DRAWINGS">FIG. 16</figref> shows an example user interface of a map that identifies a location at which a user changed his mode of transportation. In this example, the user has driven up Trinity Road and turned into the North Tower Mall parking lot. The user drove through the parking lot, parked his car, and got out to walk around the mall for a while. The user eventually decides that he is done shopping and walks outside into the parking lot. The user cannot find his car so he pulls out his mobile device and launches a &#x201c;Maps&#x201d; application program.</p>
<p id="p-0175" num="0174">The maps application program displays an overhead view of a street map <b>1602</b>. The map displays the last location that the user had viewed (e.g., a different part of the city), so the user selects the &#x201c;present location&#x201d; interface element <b>1604</b>. In response, the map displays the area around the user's present location, and displays a blinking graphical interface element <b>1610</b> that illustrates the mobile device's present geographical location (e.g., as determined using cell phone transmitting tower triangulation or a satellite based positioning system).</p>
<p id="p-0176" num="0175">The display of the user's present location does not help the user find his car, so the user presses the &#x201c;history&#x201d; interface element <b>1606</b>. In response, the line <b>1612</b> is displayed on the map. The line <b>1612</b> illustrates a recent route of the mobile computing device based on periodically determined geographical locations of the mobile device. In some examples, each of the geographical locations may be illustrated with a graphical element (e.g., dots <b>1614</b><i>a </i>and <b>1614</b><i>b </i>may identify past geographical locations of the mobile device). The line <b>1612</b> may &#x201c;connect the dots&#x201d; with linear line segments or non-linear line segments. Non-linear line segments may be based, in part, on a trajectory of the mobile device, and may be based, in part, on known transportation routes (e.g., streets or public transportation lines that are near the geographical locations and which the mobile device is determined to be traveling along). During this view of the map <b>1602</b>, the line <b>1612</b> may remain the same thickness and color throughout the entire route up to the user's present location.</p>
<p id="p-0177" num="0176">Upon seeing the line <b>1612</b>, the user may have a better idea of where his car is, but may not know be fully sure where upon the line he parked his car. Thus, the user may select the &#x201c;vehicle change&#x201d; interface element <b>1608</b>. In response, the mobile device may determine that the device changed a transportation mode at location <b>1616</b> from a motorized vehicle to walking. Accordingly, the mobile device may display graphical interface element <b>1616</b> as being different than the graphical interface elements for the rest of the locations of the route. In this illustration, an extra circle has been drawn around geographical element <b>1616</b>. In various examples, a size of the graphical element may be different, a style of the graphical element may be different, or a color of the graphical element may be different.</p>
<p id="p-0178" num="0177">Further, the mobile device may determine that the user switched to a lower-speed form of transportation at interface element <b>1616</b> (e.g., switched from car to walking). Thus, the portion of the line <b>1612</b> between the geographical element <b>1616</b> and interface element <b>1610</b> may be narrower than the portion of the line <b>1612</b> that precedes interface element <b>1610</b>. In various examples, the line <b>1612</b> may be divided into differently styled portions or differently colored portions.</p>
<p id="p-0179" num="0178">As described in more detail below, the mobile device may use various mechanisms to determine a geographical location at which the device (and the user by inference) switches transportation modes. In a first example, the geographical location is selected as the location of the mobile device when the mobile computing device is undocked from dock. For example, the user may have placed the mobile device in a car dock, and the mobile device may be able to determine that an electrical signal from the car dock terminates when the user pulls the mobile device out of the dock. In a second example, the geographical location is determined based on a change in speed of the mobile computing device.</p>
<p id="p-0180" num="0179"><figref idref="DRAWINGS">FIG. 17</figref> shows an example display of data that may be used to determine a location at which a user changed his mode of transportation. A time column <b>1702</b> and position column <b>1704</b> display data that was periodically determined, for example, by a mobile computing device using Global Positioning System techniques. In this illustration, a new location was determined every minute. The time, however, may increment at more or less frequent intervals, and the interval length may differ between location determinations (e.g., based on a speed of the mobile device). In various examples, the location determinations are stored in the position column <b>1704</b> as geographical coordinates (e.g., latitude and longitude). The full coordinates are not displayed in this illustration for lack of space.</p>
<p id="p-0181" num="0180">The speed data (column <b>1706</b>) may be determined based on the time data and the position data. As an example, a distance between a first geographical location and a second geographical location may be determined. A time difference may be determined over the same interval. The distance may be divided by the time to determine a speed, which may be stored in association with either the first time or the second time.</p>
<p id="p-0182" num="0181">In various examples, a moving average speed (column <b>1708</b>) is determined. A moving average speed may be an average speed for a set of recent times. For example, a moving average for a particular time may be an average of a speed for the particular time and the speed for two preceding times (e.g., as illustrated in <figref idref="DRAWINGS">FIG. 17</figref>). Where position readings were not obtained at regular intervals, the moving average may be performed on all speeds that were calculated for a particular range of time (e.g., three minutes).</p>
<p id="p-0183" num="0182">The moving average may be used to determine when a mobile device has dropped below a threshold speed for an extended period of time, as opposed to a temporary stop. As an illustration, a train may travel at 45 mph between stations, but may stop for thirty seconds every so often at a station. A user of a mobile device, however, may remain on the train through several station stops. When the user gets off the train, the user may begin walking and may thus not exceed a speed of four miles-per-hour for ten minutes.</p>
<p id="p-0184" num="0183">With each passing minute the moving average may take less and less of the train speed into account. Thus, at some point, the moving average is only taking the walking speeds into account (or is only substantially taking the walking speeds into account) and the moving average speed drops beneath a threshold. At this point, the mobile device has determined that the user has switched transportation mode.</p>
<p id="p-0185" num="0184">Still, now that the mobile device has determined that the user has switched to a different transportation mode, the mobile device may go back and determine a geographical location of the mobile device where the switch occurred. In some examples, the mobile device bounces backward in time until a speed of the mobile device is encountered that exceeds a walking speed. The location of the mobile device temporally after the encountered speed may be the geographical location where the change in transportation mode occurred (e.g., the best guess that the mobile device can make based on the set of data points).</p>
<p id="p-0186" num="0185">In <figref idref="DRAWINGS">FIG. 17</figref>, the geographical position, time and speed at which the mobile device switched transportation modes is identified with circle <b>1710</b>. For this example, the user is driving a car down the road. The user, at one point, stops the car at a traffic light and his average speed, at identifier <b>1712</b>, drops to two miles-per-hour (the speed may not be zero miles-per-hour because the user may not have remained stopped at the traffic light for the entire minute between location readings). The moving average at the time 3:44 remains at 24.7 miles-per-hour because the moving average also accounts for the speeds at times 3:43 and 3:42. A few minutes later, however, the user turns into a parking lot and slows down, causing his speed to reduce to 11 miles-per-hour. Eventually the user parks his car, around time 3:49, and walks into the mall. The user walks for the next several minutes with his average speed per minute not exceeding four miles per hour. Thus, a time 3:49 is recorded as a time at which the mobile device determined that the user switched transportation modes.</p>
<p id="p-0187" num="0186"><figref idref="DRAWINGS">FIG. 18</figref> shows a flowchart of an example process for determining a geographical location at which a user changed a mode of transportation. In box <b>1802</b>, a change in mode of transportation is determined. The change may be determined using, for example, any combination of the below described methods. Accordingly, a determined change in transportation mode may be probabistically determined based on computer-automated mechanisms, and may or may not represent an actual physical change in transportation mode of a user.</p>
<p id="p-0188" num="0187">In some examples, the change in transportation mode is determined based at least in part on an interruption of an electrical signal that the mobile computing device receives from a dock (box <b>1804</b>). For example, the mobile device may be physically placed into a dock (e.g., the car dock of <figref idref="DRAWINGS">FIG. 4</figref>). The dock may provide electrical power to the mobile device using pin <b>432</b>, and may communicate a digital signal to the mobile device using pin <b>428</b>. As described throughout this document, the power that is provided through pin <b>432</b> may be used to charge a battery of the mobile device, and the pin <b>428</b> may be used to provide information for establishing a wireless communication between the device and the dock. In some examples, the device is determined to be docked when the device receives electrical energy that is wirelessly transmitted to the device by way of inductive coupling (e.g., through the use of a charging pad).</p>
<p id="p-0189" num="0188">The mobile device may determine that the device is docked (box <b>1806</b>) upon sensing a presence of either of these electrical signals. The mobile device may determine that the device has been undocked based on an interruption in either of these electrical signals (box <b>1808</b>). A device that is docked may be determined to be associated with a first transportation mode, while a device that has been undocked may be determined to be associated with a second transportation mode.</p>
<p id="p-0190" num="0189">In various examples, the mobile device may not receive, from the dock, an electrical signal that is indicative of undocking. Rather, the mobile device or dock may include a sensor that determines when the mobile device has been physically separated from the dock. The sensor may be a compression sensor, a proximity sensor, or a magnetic sensor, among various examples. In some examples, a determination that the mobile device has changed from a first transportation mode to a second transportation mode is performed if the device remains undocked for a predetermined time period (e.g., as described throughout this document).</p>
<p id="p-0191" num="0190">In some examples, a change in transportation mode is determined based at least in part on a change in the device speed (box <b>1806</b>). For example, the mobile device may repeatedly determine whether an average speed of the mobile device is below a threshold value (box <b>1808</b>). The average speed of the mobile device may be calculated in various manners, but may remain an average speed of the device over a time period that is greater than two adjacent location determinations.</p>
<p id="p-0192" num="0191">In a first example, the average speed is calculated as a moving average of multiple recent speed measurements. In a second example, the average speed is calculated as an average speed over a time period that is greater than two adjacent location readings. In other words, although the device may include location readings for each minute, an average speed may be calculated using a most recent location reading and a location reading from five minutes ago.</p>
<p id="p-0193" num="0192">The mobile device may determine if the average speed falls below a threshold value. In some examples, the threshold value corresponds to a walking speed of an individual (e.g., 4.1 miles-per-hour). If the average speed falls below the threshold, the mobile device may determine that the transportation mode of the mobile device has changed. In various examples, an average speed is effectively calculated by determining that multiple successive speed determinations fall below the threshold.</p>
<p id="p-0194" num="0193">Once the transportation mode is determined to have changed, the mobile device may identify the geographical location at which the transition in transportation mode occurred (box <b>1810</b>). For example, the mobile device may step backwards from a most recently calculated speed, comparing each speed to a second threshold that may greater than the first threshold (e.g., 12 miles-per-hour), until the speed exceeds the second threshold. The geographical location of the mobile device temporally after the identified speed may be determined as the location at which the mobile device transitioned transportation modes. In other words, the determined location may be a geographical location at an at least temporary resting position of the mobile computing device.</p>
<p id="p-0195" num="0194">In some examples, the second threshold is lower than the first threshold. The first threshold may be used to identify a change in transportation mode of the mobile computing device. For example, when a user pulls a car into a parking lot, the user may drive the car at a low rate of speed just before parking. Thus, the user may travel at a walking speed for a short while before actually parking. A combination of the slow driving and walking after exiting the car may be sufficient to cause the mobile device to identify a change in transportation mode.</p>
<p id="p-0196" num="0195">The mobile device, however, should identify the location of the transition in transportation mode as the location where the user parked his car. In some examples, such determination may be performed using a second threshold that is lower than the first threshold, for example, a threshold that may be equivalent to being stopped or substantially stopped (e.g., one mile-per-hour). Because the user may stop occasionally when he is walking, the relevant stop may be the stop just after the user parked (e.g., the oldest substantially stopped speed during the period of time over which speeds were averaged in determining that the mobile computing device changed modes).</p>
<p id="p-0197" num="0196">In various examples, a change in transportation mode may be similarly determined when a user moves from a low-speed transportation mode (e.g., walking) to a high-speed transportation mode (e.g., biking). For example, the mode may be determined to have changed when a mobile device exceeds a speed threshold for an amount of time. The geographical location of the transition may be the first speed that exceeds the threshold.</p>
<p id="p-0198" num="0197">In some examples, the change in transportation mode is determined based at least in part on disconnection or connection of an auxiliary audio device (box <b>1812</b>). For example, a user of a mobile device may connect a cable to the mobile device's audio output terminal (e.g., a 3.5 mm audio output jack). The cable may connect the mobile device to, for example, a car stereo or an FM transmitter. A removal of the cable may indicate that the car has stopped and that the user disconnected the auxiliary audio line so that the user could take the mobile device with him.</p>
<p id="p-0199" num="0198">In other examples, the change in transportation mode is determined based on connection of an auxiliary audio device. For example, a user may listen to his car stereo while driving, but upon reaching a destination may exit the car and plug in headphones. The user may not be as likely to connect headphones to the mobile device while the user is in the car. Thus, connection of an auxiliary audio device may indicate a change transportation mode. In various examples, an external FM transmitter connects with the mobile device via Bluetooth pairing or a proprietary data connector.</p>
<p id="p-0200" num="0199">In some examples, the change in transportation mode is determined based at least in part on the device location changing in a defined manner (box <b>1814</b>). For example, the mobile device may be determined to be in a vehicle that is moving through a surface parking lot when the device moves in an &#x201c;s&#x201d; shaped route as a user seeks out an empty parking spot. The mobile device may be determined to be in a vehicle that is moving through a parking garage when the device doubles back over a previous geographical location, but with a change in altitude (e.g., a change in altitude that is greater than 2 meters).</p>
<p id="p-0201" num="0200">The device or a server system may store several users' routes through a parking lot or garage, and may use the stored routes to identify when a mobile device deviates from the route. For example, as a user enters a parking garage in his car, the user (and his mobile device) may follow a same winding path through the parking garage as other users. When the user parks his car, however, the user's route may deviate slightly from the common route. Further, after parking, the user may walk in a direction that is opposite or tangential to the direction of car travel. Moreover, vertical movement of the mobile device (e.g., more than 5 meters) without substantial horizontal movement (e.g., more than 5 meters from a center point) may indicate that the user is walking up stairs or is taking an elevator, and thus is in a walking transportation mode.</p>
<p id="p-0202" num="0201">In some examples, the change in transportation mode is determined based at least in part on the geographical location of the device leaving a known route (box <b>1816</b>). For example, the mobile device may be de determined as traveling along a known rail line. If the mobile device changes trajectory to move away from the rail line, a determination that the mobile device has changed transportation mode may be achieved. Similarly, if the mobile device has been traveling along known roads and then begins traveling across a city park which is not known to have any preexisting vehicular transportation routes, a determination that the mobile device changed transportation mode may be achieved.</p>
<p id="p-0203" num="0202">In some examples, the change in transportation mode is determined based at least in part on the device making an abrupt change in direction (box <b>1820</b>). For example, the mobile device may have been traveling in graceful curves along a known rail route and suddenly leaves the rail route in a direction that is substantially back the same direction that the user came. Such a change in direction may be used, for example, to aid a determination that the device has left a known route, in distinction to the determined locations of the mobile device temporarily drifting away from the actual position of the mobile device due to inaccurate position estimations.</p>
<p id="p-0204" num="0203">In some examples, the change in transportation mode is determined based at least in part on the device being near previously determined locations of changes in transportation mode for the device, or for users of other devices (box <b>1818</b>). For example, the mobile device may determine multiple locations of transportation mode changes, as described throughout this document. These locations may be stored by a server system as associated with a user account, and may be used to influence a determination whether a particular mobile device has made a change in transportation mode.</p>
<p id="p-0205" num="0204">As an illustration, a subway station or a parking lot may correspond to multiple determined changes in transportation mode (either of the user or of other users), while a freeway in the middle of Nebraska may not. Thus, a threshold or score that is determined using the described mechanisms may be modified so that the system is more likely to determine a change in transportation mode in the parking lot, as opposed to on the freeway (where a user may have ran into road construction). For example, the threshold value that must be achieved for determining that a geographical location of a mobile device has changed transportation modes may be lower when near previously determined changes in transportation mode, than when away from previously determined changes in transportation mode.</p>
<p id="p-0206" num="0205">In some examples, the change in transportation mode is determined based at least in part on the device being near known locations of transportation mode change (box <b>1822</b>). For example, a system may have stored in a database known locations of parking lots or known locations of subway terminals. Thus, a determination that a mobile device is in or near one of these locations may impact a determination whether a change in transportation mode has occurred.</p>
<p id="p-0207" num="0206">Various combinations of the mechanisms described in boxes <b>1804</b> through <b>1822</b> may be used to determine whether a change in transportation mode has occurred. In examples where multiple mechanisms are used, each of the used mechanisms may contribute a component score for a particular geographical location to an overall score for the geographical location. When an overall score for a geographical location exceeds a threshold value, the geographical location may be identified as a location of transportation mode change.</p>
<p id="p-0208" num="0207">In some examples, the change in transportation mode is determined based at least in part on the device identifying a change in motion input. For example, the mobile device may include an accelerometer that can determine multi-axis changes in acceleration. The accelerometer may be used to determine when the device changes from a first transportation mode to a second transportation mode. As an illustration, the mobile device may be able to identify that a repeating up and down movement corresponds to the motion of a walking individual. A transition from this repeating movement to another repeating movement where the device moves up and down more abruptly, and where the up and down motions are more irregular, may indicate that the device has transitioned to a vehicle transportation mode.</p>
<p id="p-0209" num="0208">Also, the accelerometer may be used to identify specific gestures that suggest that a user has changed transportation modes. For example, a gesture may be a particular motion of the mobile device over a short period of time (e.g., up to three seconds) that is associated with a particular type of user action. Thus, the mobile device may be able to determine a gesture that corresponds to undocking and placement of the mobile device in a pocket or purse, a gesture that corresponds to a user pulling the mobile device out of a pocket or purse and placing the mobile device in a dock, or a gesture that corresponds to a user sitting down or standing up.</p>
<p id="p-0210" num="0209">In some examples, the change in transportation mode is determined based at least in part on the device identifying a signal from another device (box <b>1826</b>). For example, a vehicle may transmit to a mobile device data that identifies the characteristics of the vehicle (e.g., a wireless transmission of data that indicates whether the vehicle is parked, in reverse, or in drive). In another example, the mobile device is able to detect a wireless signal that locks or unlocks a vehicle. In another example, the mobile device is able to detect connection of a pedometer. Such signals may be used to aid a determination of a transportation mode of the mobile computing device.</p>
<p id="p-0211" num="0210">In some examples, the change in transportation mode is determined based at least in part on the device identifying a signal from an application program (box <b>1828</b>). For example, the device may determine that a user has provided to a mapping application program user input that requests walking directions, where the device may previously have been displaying driving directions. In another example, the user may have marked a vehicle parking spot as either available or unavailable using an application program that that crowd sources identifications of available parking spots. In yet another example, the user may lock or unlock a vehicle using an application program. Such signals may be used to aid a determination of a transportation mode of the mobile computing device.</p>
<p id="p-0212" num="0211">In box <b>1830</b>, the location at the determined change in transportation mode is stored. For example, the mobile device or a server system may store a geographical location of the mobile device, within no more than two minutes&#x2014;and preferably under ten seconds&#x2014;of the mobile device undocking (see box <b>1804</b>). In some examples, the stored location is the location identified by the operations discussed with reference to box <b>1810</b>. In various examples, the mobile device or server system may be configured to store a single location, and upon receipt of a subsequent location that has been determined to represent a transportation mode change, may overwrite the value that is stored in the single location. In various examples, the mobile device stores multiple locations.</p>
<p id="p-0213" num="0212">In box <b>1835</b>, the user is prompted regarding the stored location. For example, upon the mobile device determining that the transportation mode has been changed, a dialog box may appear on the mobile device. The dialog box may state &#x201c;Record Location?&#x201d; and include a selectable &#x201c;Yes&#x201d; interface element, and a selectable &#x201c;No&#x201d; interface element. The dialog box may also include a text box that the user may select in order to enter a comment, for example, &#x201c;Row 6, near the light pole.&#x201d; Because the change in transportation mode may not necessarily occur immediately upon the user changing his mode of transportation, the prompt may appear with a display of a map and a graphical indication of the determination location of mode transition. In some examples, the user can change the location of the mode transition, for example, by selecting a different location on the displayed map.</p>
<p id="p-0214" num="0213">In box <b>1840</b>, an indication that the determined location is to be displayed is received. As an example, the user may finish shopping and forget where the user parked his car. The user may pull out his mobile device and provide user input to launch a &#x201c;car finding&#x201d; application program. In another example, the user may have spent the afternoon exploring New York City, all the while jumping on and off of various subways. The user may now be lost and need to determine how to get home. The user may pull out his mobile device and provide user input to launch a &#x201c;maps&#x201d; application program. A map of New York City may appear. The map may display the user's route by default and identifications of locations at which a transition between transportation modes occurred.</p>
<p id="p-0215" num="0214">In box <b>1842</b>, the mobile computing device displays the one or more locations that were stored with reference to box <b>1830</b>. For example, a &#x201c;car finding&#x201d; application program may display a screen that includes a dot that represents a location of the mobile device. The dot may appear accurately placed with regard to a directional bearing or orientation of the mobile device (box <b>1848</b>). For example, as the user turns the mobile device, the dot may move side to side on the mobile device. As the user walks in the direction of the car, the dot may move closer to a bottom of the screen (where the bottom of the screen may represent a user's present location). Thus, the &#x201c;car finding&#x201d; application may mimic a &#x201c;sonar&#x201d; system that shows a bearing of and a distance to a target.</p>
<p id="p-0216" num="0215">In some examples, the dot may appear for display on a map at a location that corresponds to the stored location. The map may also include a display of the user's present location (box <b>1844</b>), and may also display a recent route of the mobile computing device (box <b>1846</b>). In various examples, the route may extend from the user's current location back through the location of the change in transportation mode, and beyond (e.g., until the route leaves the present map display or reaches a predetermined temporal age or distance).</p>
<p id="p-0217" num="0216">In some examples, the route may only extend for a predetermined distance or time beyond and in front of the location of the change in transportation mode. Thus, the route may provide a user with context as to what direction the user was traveling when the user arrived at the purported change in transportation mode and what direction the user was travelling when the user left the purported change in transportation mode. The limited display of the route, however, may not display a most recent portion of the route as to not distract the user from the location at the change in transportation mode.</p>
<p id="p-0218" num="0217">As described with reference to <figref idref="DRAWINGS">FIG. 16</figref>, the user interface element at the location of the change in transportation mode may be different than interface elements that identify other historical locations of the mobile computing device, or may be an only user interface element on the line. In some examples, the route line or markers change type at the location of the change in transportation mode. For example, the line may be narrower, a different color, or a different style after the transportation mode change than before the transportation mode change.</p>
<p id="p-0219" num="0218">In various examples, multiple user interface elements identifying multiple changes in transportation mode along a route may be displayed. In some examples, the display may be filtered to display portions of the route that are specific to a particular type of transportation mode. For example, a user may view a map of the city of New York and filter the display to show subway rides over the last 30 days. Even if the user does not filter the display, the subway rides may appear a different color or style than walking routes, which may appear a different style than driving routes.</p>
<p id="p-0220" num="0219">In various examples, the user interface element at the location of the change in transportation mode may be an only user interface element of a particular style along a route. Thus, the user interface element may specifically denote a unique event along a route, as opposed to a changing display of data (e.g., speed) for every data point along the route, or for regularly occurring data points along a route. If the route includes multiple unique events, the user interface elements may occur at non-regular periodic intervals along a route, where the occurrence of the interface elements may be determined based on a probabistically determined change in transportation mode.</p>
<p id="p-0221" num="0220">In various examples, a method of marking a parking location may include sensing with a mobile computing device, an undocking event for the mobile computing device. The method may include automatically determining a current geographic location for the mobile computing device in response to sensing the undocking event. The method may include registering the current geographic location in memory on the mobile computing device. The method may include displaying to a user, at a later time, the stored geographic location to assist the user in finding the geographic location.</p>
<p id="p-0222" num="0221">In various examples, the described mechanisms are performed by a mobile computing device and a server system. For example, the mobile computing device may determine periodic geographical locations of the mobile device and transmit the locations and corresponding times to a server system. The server system may perform the determination of whether a transportation mode may change and transmit back data for generating a display that is described with reference to box <b>1840</b>.</p>
<p id="p-0223" num="0222">Delaying Execution of Operations</p>
<p id="p-0224" num="0223"><figref idref="DRAWINGS">FIG. 19</figref> shows a user interface for delaying execution of a computer process. Mobile computing devices may operate from a rechargeable battery source, which may be treated as a precious resource because exhaustion of power from the battery source may leave the mobile device inoperable until a user plugs the device into an external power source. Thus, there are various mechanisms to extend the battery life of a mobile device. Some mechanisms include limiting the execution of computer processes that are performed by application programs, as the processes can use battery power by their computational operation, and may invoke the use of power-intensive radios for wireless transmission of information.</p>
<p id="p-0225" num="0224">Accordingly, a mobile computing device may limit the execution of some processes until the mobile computing device is connected to an external power source. Then the mobile device may use the external power to operate the mobile device, or may user the external power to replenish battery power that is used. Some processes may automatically defer their operation until the mobile computing device has been connected to external power. Other processes, however, may require a user prompt.</p>
<p id="p-0226" num="0225">In <figref idref="DRAWINGS">FIG. 19</figref>, the mobile computing device is displaying a desktop user interface, over a portion of which a process control user interface <b>1904</b> is displayed. The process control interface <b>1904</b> allows a user to delay execution of one or more executing processes, for example, until the mobile computing device has been docked. In this illustration, the process performs a download of the application program &#x201c;Great Crosswords.&#x201d;</p>
<p id="p-0227" num="0226">The process control interface <b>1904</b> shows that thirty-five minutes remain in the download of the application program, that one hour and ten minutes remain in battery life if the process continues to download the application program, and that two hours and fifteen minutes would remain if the user delayed execution of the process.</p>
<p id="p-0228" num="0227">A user may select the &#x201c;Delay Until Device Docked&#x201d; user interface element <b>1906</b> to delay the download of the application program. Accordingly, upon selection, the download of the &#x201c;Great Crosswords&#x201d; application program may be suspended until after the user places the mobile computing device in a dock. As described in more detail later, the download may not commence immediately upon docking. Instead, the mobile computing device may have performed an estimate of the battery power that would be required to finish the download, and may wait until the battery has been charged to this level.</p>
<p id="p-0229" num="0228">The process control interface <b>1904</b> may be adapted to provide information on multiple processes that may be executing on the mobile computing device, however, the single download is presented for clarity. In various examples, the process control interface <b>1904</b> may be displayed upon user selection of the &#x201c;Suspend Processes&#x201d; user interface element <b>1908</b>, which may persistently display in the top of the display whenever a process has been determined to be available for delayed execution, regardless of the application program that has device focus.</p>
<p id="p-0230" num="0229">In some examples, the process control interface <b>1904</b> only displays those processes that a user of the mobile device may delay. As described in more detail later, certain processes may register themselves as processes for which execution may be suspended and resumed. For example, the process may register as a type of process (e.g., the process may register as a &#x201c;synching&#x201d; operation), or the process may explicitly identify itself as a process that may be suspended. The registration may occur upon installation of an application program that launches the process. In some examples, the mobile device may add a process to the process control interface <b>1904</b> when the mobile device determines that the process has been operating without user input for a determined amount of time (e.g., 30 minutes), and where another determined amount of time remains until completion of the process.</p>
<p id="p-0231" num="0230">In any event, upon determination that a process may be temporarily suspended, the user interface element <b>1908</b> may animate or the process control interface <b>1904</b> may drop down from the top of the display, effectively prompting the user that one or more processes may be suspended. In some examples, a user is prompted when a battery level drops below a threshold level, when an estimated time of battery life drops below a threshold level, or when a rate of battery use exceeds a threshold level.</p>
<p id="p-0232" num="0231"><figref idref="DRAWINGS">FIG. 20</figref> shows a user interface for delaying execution of a computer process. In this example, the mobile device is presenting a user interface <b>2002</b> that shows information on a third party application program, and that allows the user to download the third party application program to the mobile computing device. Accordingly, a user may cause the mobile device to download the &#x201c;Cool Cross Words!&#x201d; application program by selecting the install user interface element <b>2004</b>. In various examples, the user may select the install interface element <b>2004</b> by tapping on the element, or by using physical mobile device buttons to select the element (e.g., moving a cursor over the element, or using arrow keys to provide focus to the element and then selecting an &#x201c;enter&#x201d; button). Such a user input may be referenced as a &#x201c;primary&#x201d; user input action.</p>
<p id="p-0233" num="0232">In this illustration, a user has pressed his finger to the install interface element <b>2004</b> and held his finger there until a dialog box <b>2006</b> appears. The user moves his finger to the dialog box <b>2006</b> and selects the dialog box <b>2006</b>. In a first example, the dialog box is selected by sliding a finger across the display without removing the finger from the display, and then removing the finger from the display when the dialog box <b>2006</b> has been selected. In a second example, the user may release his finger from the display and the dialog box <b>2006</b> may remain, allowing the user to tap the dialog box <b>2006</b>. In various examples, the secondary user input displays a menu from which the &#x201c;Delay Execution&#x201d; text appears as one of many selectable choices.</p>
<p id="p-0234" num="0233">The long press may be referred to as a &#x201c;secondary&#x201d; user input action. A secondary user input may also be performed, for example, by tapping on an interface element with two fingers, by sliding a finger across a user interface element, or by selecting a user interface element in combination with a physical button or another user interface element. The primary user input may likewise take many various forms. Accordingly, a single user interface element may provide for multiple mechanisms to select the user interface element.</p>
<p id="p-0235" num="0234">In any event, selection of the &#x201c;Delay Execution&#x201d; dialog box <b>2006</b> may cause the dialog box <b>2008</b> to appear for display. The dialog box <b>2008</b> may allow a user to either confirm or cancel that he wants to delay execution of the command associated with the selected user interface element.</p>
<p id="p-0236" num="0235">The confirmation that execution of the command should be delayed may cause the mobile computing device to store an indication of the user interface element that was selected (or the command that is associated with the interface element). The mobile computing device may also store an indication of the state of the application program or mobile computing device upon selection of the user interface element, which may assist the mobile device in performing the process that the user intended that the device perform upon selection of the user interface element <b>2004</b>.</p>
<p id="p-0237" num="0236">In the present illustration, the mobile device may store an indication that the &#x201c;Application Store&#x201d; application program was running, that the user was viewing the &#x201c;Cool Cross Words!&#x201d; page, and that the user selected the &#x201c;Install&#x201d; button. Accordingly, upon the user plugging the mobile device into external power, the device may be able to launch the application program, navigate to the page, and select the user interface element.</p>
<p id="p-0238" num="0237">In various examples, the dialog box <b>2008</b> appears upon the secondary user input without display of the &#x201c;Delay Execution&#x201d; dialog box <b>2006</b>. In various examples, the execution of the command is delayed immediately upon selection of the &#x201c;Delay Execution&#x201d; dialog box <b>2006</b>, without the display of the additional prompt <b>2008</b>.</p>
<p id="p-0239" num="0238"><figref idref="DRAWINGS">FIGS. 21A-B</figref> show a flowchart of an example process for delaying execution of computer processes. In box <b>2102</b>, the mobile computing device identifies a process for which execution should be delayed (also referred to herein as suspension of the process). Although the mobile device may identify more than one process, this document references an identification of a single process for purposes of simplicity. As described below, the process identification may be initiated by a user (box <b>2104</b>), by the process itself (box <b>2106</b>), or by an external procedure (box <b>2108</b>).</p>
<p id="p-0240" num="0239">In box <b>2104</b>, a user initiates identification of a process for delayed execution, for example, by providing user input that causes the mobile device to suspend execution of the process. Without the user input, the process may not suspend at all, or may not suspend for a substantial period of time (e.g., at least five minutes).</p>
<p id="p-0241" num="0240">In box <b>2110</b>, the user provides secondary user-input selection of an interface element, for example, as described with reference to <figref idref="DRAWINGS">FIG. 20</figref>. In this manner, a user may identify a command that is associated with selection of a specific user interface element as a command that the user would like the mobile device to perform, but at a different time. In such examples, a mobile device may not need to have extensive mechanisms for recognizing when to suspend processes and how to suspend processes that are already executing. Rather, the mobile computing device may, at some later point in time, execute the command by recovering the state of an application program and executing the command that is associated with the primary user input for the user interface element.</p>
<p id="p-0242" num="0241">In box <b>2112</b>, the user selects the process from a list of processes. In some examples, the list of processes includes only those processes that can be suspended. Thus, the mobile device may have previously determined which processes can be suspended (e.g., as described with reference to box <b>2106</b>).</p>
<p id="p-0243" num="0242">The list of processes may include only active processes, or may further include processes that are not currently executing but that may execute on the mobile device. For active processes, the user may provide user input to immediately suspend an active process, for example, as illustrated with respect to <figref idref="DRAWINGS">FIG. 19</figref>. For non-active processes, the user may configure settings so that a non-active process is flagged for suspension, either immediately upon execution when undocked or when predefined criteria are met.</p>
<p id="p-0244" num="0243">In box <b>2106</b>, an application program identifies processes for delayed execution. For example, upon installation of an application program, the application program may identify itself or component processes as available for delayed execution, or may identify itself or component processes as of a type that the mobile computing device recognizes as available for delayed execution.</p>
<p id="p-0245" num="0244">In box <b>2114</b>, the application program identifies a process as available for delayed execution. For example, a voice memo application program may explicitly register an &#x201c;upload voice memos to server&#x201d; process as a particular process that may be suspended. Thus, when the voice memo application program requests that the voice memos be uploaded, the mobile device may automatically queue the process for delayed execution (or may prompt the user whether the process should be queued or executed immediately).</p>
<p id="p-0246" num="0245">In box <b>2116</b>, the application program identifies a process as of a type that is available for delayed execution. For example, an application program may register a process as a &#x201c;synching&#x201d; set of operations. The application program may not explicitly have requested that the particular syncing operation be delayed. The application program, however, may utilize common libraries of executable code to perform the synching operation and thus the mobile computing device may be able to suspend any processes that have been registered by various application programs as synching processes.</p>
<p id="p-0247" num="0246">In various examples, the processes that have been identified as available are presented to a user in a list for user configuration, for example, as discussed with reference to box <b>2112</b>.</p>
<p id="p-0248" num="0247">In box <b>2108</b>, an external procedure initiates an identification of an executing process that should be delayed. The external procedure may monitor processes that are currently executing on the mobile computing device, and decide that a particular process should be suspended based on the particular process meeting specific criteria.</p>
<p id="p-0249" num="0248">In box <b>2118</b>, a process is suspended based on time criteria. In a first example, a process that has been executing for a threshold period of time (e.g., five minutes, ten minutes, or thirty minutes) may be identified for suspension. In a second example, a process that requires an excessive amount of time until completion (e.g., an amount of time that exceeds a threshold value) may be identified for suspension.</p>
<p id="p-0250" num="0249">In box <b>2120</b>, a process is suspended based on battery consumption. In a first example, a mobile device is able to estimate an amount of battery power that has been consumed by a process, and may suspend the process if the amount of battery power exceeds a threshold value. In a second example, an estimate of the amount of battery power that will be required is performed, and if the process will require an excessive amount of battery power (e.g., an amount that exceeds a threshold value), the process may be identified for suspension.</p>
<p id="p-0251" num="0250">In box <b>2122</b>, a process is suspended based on a quantity of data transfer. In a first example, a mobile device may suspend a process if the amount of wireless data transferred for the process exceeds a threshold value. In a second example, an estimate of the amount of wireless data transfer that may be required to complete the process is performed, and if the process will require an excessive amount of wireless data transfer (e.g., an amount that exceeds a threshold value), the process may be identified for suspension.</p>
<p id="p-0252" num="0251">In various examples, the criteria of boxes <b>2118</b>, <b>2120</b>, and <b>2122</b> include an amount of time, battery consumption or data transfer that occurs without receiving any user input events during the amount of time, battery consumption or data transfer. Thus, a process may be identified for suspension if the process has remained idle without user interaction with the process. Thus, a user may not be affected so much if the process is suspended. A user input event may be an event that is caused by the user and that changes a sequence of process operations, where the change in sequence may not otherwise occur without the user input.</p>
<p id="p-0253" num="0252">In box <b>2130</b>, execution of the identified process is delayed. In some examples, the mobile computing device sends to the process (or to the application program that is hosting the process) a command that requests that the process suspend operation. In some examples, the mobile computing device forcibly halts execution of the process without notifying the process. In some examples, the mobile computing device stores a state of the process prior to suspension.</p>
<p id="p-0254" num="0253">In box <b>2140</b>, the mobile computing device determines that a power source has been connected to the mobile device. For example, the mobile device may determine that the device has been placed in a dock, as described throughout this document.</p>
<p id="p-0255" num="0254">In box <b>2150</b>, the mobile computing device determines that execution of the identified processes (which were delayed at box <b>2130</b>) may resume. In various examples, the resumption of the identified processes may occur substantially immediately upon determining that a power source has been connected to the device (e.g., within thirty seconds). In other examples, the mobile device may first determine either that the battery level has reached a determined charge (box <b>2152</b>), or that the computing device has received power a determined amount of time (box <b>2154</b>). In some examples, the user provides user input to resume execution of the processes, even though the mobile device has not been docked.</p>
<p id="p-0256" num="0255">In box <b>2152</b>, the mobile device determines that a battery level has reached a determined charge. In a first example, the mobile device may determine that the battery level has reached a predetermined threshold (e.g., 20% of battery capacity). In some examples, the mobile device is available for use prior to the device reaching the threshold. Thus, a user may use the mobile device to make telephone calls while the device is at 10% of battery capacity.</p>
<p id="p-0257" num="0256">In a second example, the mobile device may determine that the battery level has reached a determined threshold, where a charge at the determined threshold allows the mobile device to complete execution of any processes that have been suspended. Thus, the mobile device may calculate an estimate of battery capacity that is required to complete each process in determining the threshold. If the processes cannot be completed on even a full battery charge, the mobile device may begin execution upon the device reaching a full charge, or substantially a full charge (e.g., within 5% of a full charge).</p>
<p id="p-0258" num="0257">In a third example, the mobile device may determine that the battery level has reached another determined threshold, where a charge at the other determined threshold allows the mobile device to complete execution of any processes that have been suspended and still have a determined level of remaining battery charge upon completion of the processes.</p>
<p id="p-0259" num="0258">In box <b>2160</b>, the mobile device resumes execution of the identified processes. For example, upon the mobile device being connected to a power source for the requisite period of time, the mobile device may launch a state of a process into the state of the process prior to suspension of the process.</p>
<p id="p-0260" num="0259">In box <b>2162</b>, execution of the identified process includes communicating with third-party devices. For example, the process which has resumed execution may cause the mobile device to use its wireless radio to exchange data over a cellular network. In some examples, the exchange of data may not involve transmitting data through a device which physically provides power to the mobile device. As an illustration, a docked smartphone may perform a syncing operation using a wireless carrier's network or using a Wi-Fi signal instead of using a physical or wireless data path from the smartphone to the dock.</p>
<p id="p-0261" num="0260">In box <b>2170</b>, the mobile computing device determines that the power source has been disconnected. For example, the mobile device may determine that power is no longer being received by the mobile device or that the device has undocked, as described throughout this document.</p>
<p id="p-0262" num="0261">In box <b>2180</b>, the mobile computing device continues execution of the identified processes upon power source disconnection. Accordingly, a process that was put on hold previously when the device was not docked may now be allowed to execute when the mobile device is not docked.</p>
<p id="p-0263" num="0262">In box <b>2190</b>, the mobile computing device suspends execution of the identified processes in response to determining that the power source was disrupted, for example, as performed in box <b>2130</b>.</p>
<p id="p-0264" num="0263">In various examples, a process may be an instance of a computer program that is being executed. The process may include an actual sequential execution of instructions. A process may reserve memory during execution and may store variables in the reserved memory (e.g., memory that is not available to other processes). Suspension of a process may include halting an execution of the instructions, storing a last performed instruction, storing a to-be-next performed instruction, storing any information in reserved memory, and storing any information in data registers.</p>
<p id="p-0265" num="0264">Although the process that is described with reference to <figref idref="DRAWINGS">FIGS. 21A-B</figref> often discusses actions that are performed by a mobile computing device, such actions may be performed by a server system in cooperation with the mobile device. For example, and with reference to box <b>2152</b>, a mobile device may take a voltage reading off of the device's battery, and may transmit the voltage reading to a server system for calculation whether the voltage reading corresponds to a battery level that has reached an appropriate charge. The server system may transmit back to the device a response. Such client-server communication to receive an answer may be considered a determination that is performed &#x201c;by the mobile computing device.&#x201d;</p>
<p id="p-0266" num="0265">In various examples, a charging device triggers specific actions. Many devices today perform synchronization actions when docked to a computer. Many computers change settings when plugged in (e.g., longer timeout interval on screen's backlight). The idea may be to perform many actions (which could be user configurable) when the device gets plugged in. Examples include (1) generating thumbnails for all images on SD card which is CPU intensive and takes a lot of power, (2) uploading all new pictures to online photo albums because using radio takes power, (3) downloading rich media stored on servers (e.g., pictures, friends pictures, and documents), and (4) switching all non-media and non-voice related application audio to speakerphone for a case where the phone is plugged into car power on the dash for an upcoming navigation application.</p>
<p id="p-0267" num="0266">In certain situations, the docking may simply involve a recognition that the device has been connected to wired power (e.g., plugged into an electrical outlet). In such a situation, the device may automatically commence performing power-hungry applications, such as transferring large files, updating video podcasts, and the like. The automatic performance of such actions may also occur after a delay after plugging the device in, such as when the device has obtained sufficient charge so that the actions can be completed even if a user unplugs the device from outlet power while the actions are being performed.</p>
<p id="p-0268" num="0267">In one example operation of the device and dock, a mere arrival of wired power to the device may trigger the performance of certain actions&#x2014;and specifically actions that are determined to be power-hungry applications, in that they use a lot of electrical power, and thus are actions that might not be advisable when the device is not docked because they would significantly draw down battery power. Those power-hungry actions may include actions such as performing batch file transfers, such as when a user has used their mobile device to record conversations or videos while they're away from a docking station. Such transfers may normally be time-consuming and may consume substantial power when performed over a wireless connection. Similarly, information that is stored in a location other than on the mobile device may be downloaded to the mobile device when the mobile device is docked, either through the physical, or way of a wireless connection that is instigated by the docking of the mobile computing device. Such a transfer may include a transfer of media information, such as podcasts, that have arrived on a user's home computer while the user's mobile computing device was not docked to the home computer.</p>
<p id="p-0269" num="0268">In certain instances, the device may be programmed to automatically obtain or provide certain information through the dock or with a system that is associated with the dock, in response to being docked. For example, when the dock is in an automobile, the device may obtain information about the current status of the automobile, including the current RPMs of the automobile, the gear in which the automobile is operating, a speed of the automobile, the status of air-conditioning and entertainment systems in the automobile, and other information. In addition, the device may be programmed to operate as a partial or complete head unit for an entertainment system in the automobile (or a screen in the car can act as a head unit for the device).</p>
<p id="p-0270" num="0269">For example, the automobile may be provided only with amplifiers, speakers, and associated hardware, but not input and output mechanisms. The mobile computing device may serve the role of the input and output mechanisms, and may also provide for encoding and decoding of digital music and other such common operations. In this way, an owner of an automobile may be able to update the interaction of their car stereo by updating software on the mobile computing device, and may customize the way that their entertainment system in their automobile interacts with them. Also as the user acquires newer mobile computing devices, the user's experience with their mobile entertainment system in their automobile may improve.</p>
<p id="p-0271" num="0270">Moreover, the user may have a preferential experience because the user interface that they face will not be different or substantially different between their interaction when they are at home or walking around, as compared to when they are driving their automobile. The mobile computing device may also act as a supplemental interface for an interface that is part of the automobile. For example, the automobile may provide for radio station selection and other common actions, while the mobile computing device may provide for selection of particular song titles or other media files that are stored on the mobile computing device.</p>
<p id="p-0272" num="0271"><figref idref="DRAWINGS">FIG. 22</figref> shows an example system that includes a mobile computing device and a dock. The mobile computing device <b>2200</b> and dock <b>2240</b> are examples of the mobile devices and docks that are referenced throughout this document. The mobile computing device <b>2200</b> may operate in cooperation with a server system. Thus, although components <b>2202</b> through <b>2224</b> are illustrated as being part of the mobile device <b>2200</b>, the components may be at least partially included in a server system that is in communication with the mobile device.</p>
<p id="p-0273" num="0272">The dock detector <b>2202</b> determines that a mobile computing device has physically paired with a dock. For example, the dock detector may determine that the mobile computing device has electrically coupled with a docking system that is adapted to supply electrical power for charging the mobile computing device. The dock detector may determine that the docking system is a first type of docking system from a plurality of types of docking system, for example, by performing at least some of the operations of the mobile computing device in <figref idref="DRAWINGS">FIG. 7</figref> (e.g., boxes <b>702</b> to <b>714</b>), and by communicating with the dock via conductive pad <b>606</b>.</p>
<p id="p-0274" num="0273">The power sensor <b>2204</b> may be arranged to detect when the computing device is attached to a power source that is for charging the mobile computing device. In various examples, the dock detector <b>2202</b> communicates with the power sensor <b>2204</b>. In various examples, the power sensor <b>2204</b> is unable to distinguish between power that is being supplied through conductive pad <b>602</b> and power that is being supplied through the data terminal <b>610</b>.</p>
<p id="p-0275" num="0274">The wireless connection establisher <b>2216</b> establishes a wireless communication session between the mobile computing device and the docking system in response to the dock detector <b>2202</b> determining that the mobile computing device has physically paired with the docking system. Thus, the wireless connection establisher <b>2216</b> may perform at least some of the operations of the mobile computing device in <figref idref="DRAWINGS">FIG. 7</figref> (e.g., boxes <b>716</b> to <b>732</b>). The wireless connection establisher <b>2216</b> may use the dock type (as determined by the dock detector <b>2202</b>) to identify a corresponding profile <b>2232</b><i>b</i>, and access the wireless settings <b>2236</b><i>b </i>in the corresponding profile. The wireless settings <b>2236</b><i>b </i>may specify a previously saved wireless network identifier and authentication code for establishing the wireless connection with the dock. The wireless settings <b>2236</b><i>b </i>may also specify types of wireless communication to activate between the mobile computing device and dock, for example, whether the dock should act as a speakerphone, and whether the device should audibly output audio that is generated by the mobile device.</p>
<p id="p-0276" num="0275">The user interface selector <b>2206</b> may select a user interface profile for use by the mobile computing device <b>2200</b> in response to the dock type detector <b>2202</b> determining that the mobile computing device has electrically coupled with the docking system and determining the type of docking system. For example, the user interface selector <b>2206</b> may receive from the dock detector <b>2202</b> a type of dock. The user interface selector <b>2206</b> may then use the type of dock to access a corresponding profile from the repository of dock profiles <b>2230</b>. The corresponding profile may include settings for generating a unique graphical scheme for the user, for example, as referenced with respect to <figref idref="DRAWINGS">FIGS. 8-11</figref>.</p>
<p id="p-0277" num="0276">The media streamer <b>2208</b> may wirelessly transmit, from the mobile computing device to the docking system, data that encodes an audio signal so as to cause speakers of the docking system to audibly output the audio signal.</p>
<p id="p-0278" num="0277">The location identifier <b>2210</b> may determine a geographical location of the mobile computing device, for example using Wi-Fi router identification, cell-tower triangulation, or satellite-based positioning systems. Thus, the location identifier <b>2210</b> may determine a plurality of geographical locations of mobile computing device at a plurality of respective times. The mobile device may store the geographical locations and the respective times in the location repository <b>2222</b>.</p>
<p id="p-0279" num="0278">The speed determiner <b>2212</b> may determine a plurality of speeds of the mobile computing device based on the plurality of geographical locations and the plurality of respective times, for example, as described with respect to <figref idref="DRAWINGS">FIGS. 16-18</figref>.</p>
<p id="p-0280" num="0279">The transportation mode determiner <b>2218</b> may determine a particular geographical location at which the mobile computing device switched from a first transportation mode to a second transportation mode. The switch in transportation mode may be determined based on a change in speed of the mobile computing device or, for example, as described with respect to <figref idref="DRAWINGS">FIGS. 16-18</figref>.</p>
<p id="p-0281" num="0280">The location displayer <b>2214</b> may display a visual indication of the particular geographical location, for example, as shown in and described with respect to <figref idref="DRAWINGS">FIG. 16</figref>.</p>
<p id="p-0282" num="0281">Multiple power-intensive processes <b>2224</b><i>a </i>and <b>2224</b><i>b </i>may perform operations that have been identified as excessive drains on battery levels for the mobile device. Each process may be launched by an application program and may be terminated by an application program.</p>
<p id="p-0283" num="0282">The power manager <b>2220</b> may withhold execution of operations of one or more processes while the mobile device is not connected to the power source, and trigger execution of the operations automatically in response to sensing with the power sensor <b>2204</b> that the device has been connected to the power source. The power manager may identify the processes, for example as described with respect to box <b>2102</b> (<figref idref="DRAWINGS">FIG. 21A</figref>).</p>
<p id="p-0284" num="0283">The dock <b>2240</b> may include speakers <b>2242</b> and a microphone <b>2244</b>, as described throughout this document. The dock <b>2240</b> may also include a wireless connection establisher <b>2246</b> to establish a wireless connection with a mobile computing device which has docked in the mobile device, for example, by performing the operations of boxes <b>710</b> through <b>730</b> in <figref idref="DRAWINGS">FIG. 7</figref>. The wireless connection establisher <b>2246</b> may send the dock type identifier <b>2248</b> to the mobile device <b>2200</b>, to enable the dock detector <b>2202</b> to determine the type of dock that the mobile device has mated with. The dock <b>2240</b> may also store wireless settings <b>2250</b> that are particular to the mobile device <b>2200</b>. The wireless settings <b>2250</b> may include a wireless network identifier and authentication code that enables the dock <b>2240</b> to establish a wireless connection with the mobile device <b>2200</b> (after an initial pairing) without exchanging an address and pin code.</p>
<p id="p-0285" num="0284">Referring now to <figref idref="DRAWINGS">FIG. 23</figref>, a conceptual diagram of a system that may be used to implement the systems and methods described in this document is illustrated. In the system, mobile computing device <b>2310</b> can wirelessly communicate with base station <b>2340</b>, which can provide the mobile computing device wireless access to numerous hosted services <b>2360</b> through a network <b>2350</b>.</p>
<p id="p-0286" num="0285">In this illustration, the mobile computing device <b>2310</b> is depicted as a handheld mobile telephone (e.g., a smartphone, or application telephone) that includes a touchscreen display device <b>2312</b> for presenting content to a user of the mobile computing device <b>2310</b> and receiving touch-based user inputs. Other visual, auditory, and tactile output components may also be provided (e.g., LED lights, a speaker for providing tonal, voice-generated, or recorded output, or vibrating mechanisms for tactile output), as may various different input components (e.g., keyboard <b>2314</b>, physical buttons, trackballs, accelerometers, gyroscopes, and magnetometers).</p>
<p id="p-0287" num="0286">Example visual output mechanism in the form of display device <b>2312</b> may take the form of a 3.7 or 4.3 inch LED or AMOLED display with resistive or capacitive touch capabilities, for displaying video, graphics, images, and text, and coordinating user touch inputs locationally with the displayed information so that user contact above a displayed item may be associated with the item by the device <b>2310</b>. The mobile computing device <b>2310</b> may take alternative forms also, including as a laptop computer, a tablet or slate computer, a personal digital assistant, an embedded system (e.g., a car navigation system), a desktop personal computer, or a computerized workstation.</p>
<p id="p-0288" num="0287">An example mechanism for receiving user-input includes keyboard <b>2314</b>, which may be a full qwerty keyboard or a traditional keypad that includes keys for the digits &#x2018;0-9&#x2019;, &#x2018;*&#x2019;, and &#x2018;#.&#x2019; The keyboard <b>2314</b> receives input when a user physically contacts or depresses a keyboard key. User manipulation of a trackball <b>2316</b> or interaction with a trackpad enables the user to supply directional and rate of rotation information to the mobile computing device <b>2310</b> (e.g., to manipulate a position of a cursor on the display device <b>2312</b>).</p>
<p id="p-0289" num="0288">The mobile computing device <b>2310</b> may be able to determine a position of physical contact with the touchscreen display device <b>2312</b> (e.g., a position of contact by a finger or a stylus). Using the touchscreen <b>2312</b>, various &#x201c;virtual&#x201d; input mechanisms may be produced, where a user interacts with a graphical user interface element depicted on the touchscreen <b>2312</b> by contacting the graphical user interface element. An example of a &#x201c;virtual&#x201d; input mechanism is a &#x201c;software keyboard,&#x201d; where a keyboard is displayed on the touchscreen and a user selects keys by pressing a region of the touchscreen <b>2312</b> that corresponds to each key.</p>
<p id="p-0290" num="0289">The mobile computing device <b>2310</b> may include mechanical or touch sensitive buttons <b>2318</b><i>a</i>-<i>d</i>. Additionally, the mobile computing device may include buttons for adjusting volume output by the one or more speakers <b>2320</b>, and a button for turning the mobile computing device on or off. A microphone <b>2322</b> allows the mobile computing device <b>2310</b> to convert audible sounds into an electrical signal that may be digitally encoded and stored in computer-readable memory, or transmitted to another computing device. The mobile computing device <b>2310</b> may also include a digital compass, an accelerometer, proximity sensors, and ambient light sensors.</p>
<p id="p-0291" num="0290">An operating system may provide an interface between the mobile computing device's hardware (e.g., the input/output mechanisms and a processor executing instructions retrieved from computer-readable medium) and software. Example operating systems include the ANDROID mobile device platform; APPLE IPHONE/MAC OS X operating systems; MICROSOFT WINDOWS 7/WINDOWS MOBILE operating systems; SYMBIAN operating system; RIM BLACKBERRY operating system; PALM WEB operating system; a variety of UNIX-flavored operating systems; or a proprietary operating system for computerized devices. The operating system may provide a platform for the execution of application programs that facilitate interaction between the computing device and a user.</p>
<p id="p-0292" num="0291">The mobile computing device <b>2310</b> may present a graphical user interface with the touchscreen <b>2312</b>. A graphical user interface is a collection of one or more graphical interface elements and may be static (e.g., the display appears to remain the same over a period of time), or may be dynamic (e.g., the graphical user interface includes graphical interface elements that animate without user input).</p>
<p id="p-0293" num="0292">A graphical interface element may be text, lines, shapes, images, or combinations thereof. For example, a graphical interface element may be an icon that is displayed on the desktop and the icon's associated text. In some examples, a graphical interface element is selectable with user-input. For example, a user may select a graphical interface element by pressing a region of the touchscreen that corresponds to a display of the graphical interface element. In some examples, the user may manipulate a trackball to highlight a single graphical interface element as having focus. User-selection of a graphical interface element may invoke a pre-defined action by the mobile computing device. In some examples, selectable graphical interface elements further or alternatively correspond to a button on the keyboard <b>2304</b>. User-selection of the button may invoke the pre-defined action.</p>
<p id="p-0294" num="0293">In some examples, the operating system provides a &#x201c;desktop&#x201d; user interface that is displayed upon turning on the mobile computing device <b>2310</b>, activating the mobile computing device <b>2310</b> from a sleep state, upon &#x201c;unlocking&#x201d; the mobile computing device <b>2310</b>, or upon receiving user-selection of the &#x201c;home&#x201d; button <b>2318</b><i>c</i>. The desktop graphical interface may display several icons that, when selected with user-input, invoke corresponding application programs. An invoked application program may present a graphical interface that replaces the desktop graphical interface until the application program terminates or is hidden from view.</p>
<p id="p-0295" num="0294">User-input may manipulate a sequence of mobile computing device <b>2310</b> operations. For example, a single-action user input (e.g., a single tap of the touchscreen, swipe across the touchscreen, contact with a button, or combination of these at a same time) may invoke an operation that changes a display of the user interface. Without the user-input, the user interface may not have changed at a particular time. For example, a multi-touch user input with the touchscreen <b>2312</b> may invoke a mapping application to &#x201c;zoom-in&#x201d; on a location, even though the mapping application may have by default zoomed-in after several seconds.</p>
<p id="p-0296" num="0295">The desktop graphical interface can also display &#x201c;widgets.&#x201d; A widget is one or more graphical interface elements that are associated with an application program that has been executed, and that display on the desktop content controlled by the executing application program. A widget's application program may start with the mobile telephone. Further, a widget may not take focus of the full display. Instead, a widget may only &#x201c;own&#x201d; a small portion of the desktop, displaying content and receiving touchscreen user-input within the portion of the desktop.</p>
<p id="p-0297" num="0296">The mobile computing device <b>2310</b> may include one or more location-identification mechanisms. A location-identification mechanism may include a collection of hardware and software that provides the operating system and application programs an estimate of the mobile telephone's geographical position. A location-identification mechanism may employ satellite-based positioning techniques, base station transmitting antenna identification, multiple base station triangulation, internet access point IP location determinations, inferential identification of a user's position based on search engine queries, and user-supplied identification of location (e.g., by &#x201c;checking in&#x201d; to a location).</p>
<p id="p-0298" num="0297">The mobile computing device <b>2310</b> may include other application modules and hardware. A call handling unit may receive an indication of an incoming telephone call and provide to a user capabilities to answer the incoming telephone call. A media player may allow a user to listen to music or play movies that are stored in local memory of the mobile computing device <b>2310</b>. The mobile telephone <b>2310</b> may include a digital camera sensor, and corresponding image and video capture and editing software. An internet browser may enable the user to view content from a web page by typing in an addresses corresponding to the web page or selecting a link to the web page.</p>
<p id="p-0299" num="0298">The mobile computing device <b>2310</b> may include an antenna to wirelessly communicate information with the base station <b>2340</b>. The base station <b>2340</b> may be one of many base stations in a collection of base stations (e.g., a mobile telephone cellular network) that enables the mobile computing device <b>2310</b> to maintain communication with a network <b>2350</b> as the mobile computing device is geographically moved. The computing device <b>2310</b> may alternatively or additionally communicate with the network <b>2350</b> through a Wi-Fi router or a wired connection (e.g., Ethernet, USB, or FIREWIRE). The computing device <b>2310</b> may also wirelessly communicate with other computing devices using BLUETOOTH protocols, or may employ an ad-hoc wireless network.</p>
<p id="p-0300" num="0299">A service provider that operates the network of base stations may connect the mobile computing device <b>2310</b> to the network <b>2350</b> to enable communication between the mobile computing device <b>2310</b> and other computerized devices that provide services <b>2360</b>. Although the services <b>2360</b> may be provided over different networks (e.g., the service provider's internal network, the Public Switched Telephone Network, and the Internet), network <b>2350</b> is illustrated as a single network. The service provider may operate a server system <b>2352</b> that routes information packets and voice data between the mobile computing device <b>2310</b> and computing devices associated with the services <b>2360</b>.</p>
<p id="p-0301" num="0300">The network <b>2350</b> may connect the mobile computing device <b>2310</b> to the Public Switched Telephone Network (PSTN) <b>2362</b> in order to establish voice or fax communication between the mobile computing device <b>2310</b> and another computing device. For example, the service provider server system <b>2352</b> may receive an indication from the PSTN <b>2362</b> of an incoming call for the mobile computing device <b>2310</b>. Conversely, the mobile computing device <b>2310</b> may send a communication to the service provider server system <b>2352</b> initiating a telephone call with a telephone number that is associated with a device accessible through the PSTN <b>2362</b>.</p>
<p id="p-0302" num="0301">The network <b>2350</b> may connect the mobile computing device <b>2310</b> with a Voice over Internet Protocol (VoIP) service <b>2364</b> that routes voice communications over an IP network, as opposed to the PSTN. For example, a user of the mobile computing device <b>2310</b> may invoke a VoIP application and initiate a call using the program. The service provider server system <b>2352</b> may forward voice data from the call to a VoIP service, which may route the call over the internet to a corresponding computing device, potentially using the PSTN for a final leg of the connection.</p>
<p id="p-0303" num="0302">An application store <b>2366</b> may provide a user of the mobile computing device <b>2310</b> the ability to browse a list of remotely stored application programs that the user may download over the network <b>2350</b> and install on the mobile computing device <b>2310</b>. The application store <b>2366</b> may serve as a repository of applications developed by third-party application developers. An application program that is installed on the mobile computing device <b>2310</b> may be able to communicate over the network <b>2350</b> with server systems that are designated for the application program. For example, a VoIP application program may be downloaded from the Application Store <b>2366</b>, enabling the user to communicate with the VoIP service <b>2364</b>.</p>
<p id="p-0304" num="0303">The mobile computing device <b>2310</b> may access content on the internet <b>2368</b> through network <b>2350</b>. For example, a user of the mobile computing device <b>2310</b> may invoke a web browser application that requests data from remote computing devices that are accessible at designated universal resource locations. In various examples, some of the services <b>2360</b> are accessible over the internet.</p>
<p id="p-0305" num="0304">The mobile computing device may communicate with a personal computer <b>2370</b>. For example, the personal computer <b>2370</b> may be the home computer for a user of the mobile computing device <b>2310</b>. Thus, the user may be able to stream media from his personal computer <b>2370</b>. The user may also view the file structure of his personal computer <b>2370</b>, and transmit selected documents between the computerized devices.</p>
<p id="p-0306" num="0305">A voice recognition service <b>2372</b> may receive voice communication data recorded with the mobile computing device's microphone <b>2322</b>, and translate the voice communication into corresponding textual data. In some examples, the translated text is provided to a search engine as a web query, and responsive search engine search results are transmitted to the mobile computing device <b>2310</b>.</p>
<p id="p-0307" num="0306">The mobile computing device <b>2310</b> may communicate with a social network <b>2374</b>. The social network may include numerous members, some of which have agreed to be related as acquaintances. Application programs on the mobile computing device <b>2310</b> may access the social network <b>2374</b> to retrieve information based on the acquaintances of the user of the mobile computing device. For example, an &#x201c;address book&#x201d; application program may retrieve telephone numbers for the user's acquaintances. In various examples, content may be delivered to the mobile computing device <b>2310</b> based on social network distances from the user to other members. For example, advertisement and news article content may be selected for the user based on a level of interaction with such content by members that are &#x201c;close&#x201d; to the user (e.g., members that are &#x201c;friends&#x201d; or &#x201c;friends of friends&#x201d;).</p>
<p id="p-0308" num="0307">The mobile computing device <b>2310</b> may access a personal set of contacts <b>2376</b> through network <b>2350</b>. Each contact may identify an individual and include information about that individual (e.g., a phone number, an email address, and a birthday). Because the set of contacts is hosted remotely to the mobile computing device <b>2310</b>, the user may access and maintain the contacts <b>2376</b> across several devices as a common set of contacts.</p>
<p id="p-0309" num="0308">The mobile computing device <b>2310</b> may access cloud-based application programs <b>2378</b>. Cloud-computing provides application programs (e.g., a word processor or an email program) that are hosted remotely from the mobile computing device <b>2310</b>, and may be accessed by the device <b>2310</b> using a web browser or a dedicated program. Example cloud-based application programs include GOOGLE DOCS word processor and spreadsheet service, GOOGLE GMAIL webmail service, and PICASA picture manager.</p>
<p id="p-0310" num="0309">Mapping service <b>2380</b> can provide the mobile computing device <b>2310</b> with street maps, route planning information, and satellite images. An example mapping service is GOOGLE MAPS. The mapping service <b>2380</b> may also receive queries and return location-specific results. For example, the mobile computing device <b>2310</b> may send an estimated location of the mobile computing device and a user-entered query for &#x201c;pizza places&#x201d; to the mapping service <b>2380</b>. The mapping service <b>2380</b> may return a street map with &#x201c;markers&#x201d; superimposed on the map that identify geographical locations of nearby &#x201c;pizza places.&#x201d;</p>
<p id="p-0311" num="0310">Turn-by-turn service <b>2382</b> may provide the mobile computing device <b>2310</b> with turn-by-turn directions to a user-supplied destination. For example, the turn-by-turn service <b>2382</b> may stream to device <b>2310</b> a street-level view of an estimated location of the device, along with data for providing audio commands and superimposing arrows that direct a user of the device <b>2310</b> to the destination.</p>
<p id="p-0312" num="0311">Various forms of streaming media <b>2384</b> may be requested by the mobile computing device <b>2310</b>. For example, computing device <b>2310</b> may request a stream for a pre-recorded video file, a live television program, or a live radio program. Example services that provide streaming media include YOUTUBE and PANDORA.</p>
<p id="p-0313" num="0312">A micro-blogging service <b>2386</b> may receive from the mobile computing device <b>2310</b> a user-input post that does not identify recipients of the post. The micro-blogging service <b>2386</b> may disseminate the post to other members of the micro-blogging service <b>2386</b> that agreed to subscribe to the user.</p>
<p id="p-0314" num="0313">A search engine <b>2388</b> may receive user-entered textual or verbal queries from the mobile computing device <b>2310</b>, determine a set of internet-accessible documents that are responsive to the query, and provide to the device <b>2310</b> information to display a list of search results for the responsive documents. In examples where a verbal query is received, the voice recognition service <b>2372</b> may translate the received audio into a textual query that is sent to the search engine.</p>
<p id="p-0315" num="0314">These and other services may be implemented in a server system <b>2390</b>. A server system may be a combination of hardware and software that provides a service or a set of services. For example, a set of physically separate and networked computerized devices may operate together as a logical server system unit to handle the operations necessary to offer a service to hundreds of individual computing devices.</p>
<p id="p-0316" num="0315">In various implementations, operations that are performed &#x201c;in response&#x201d; to another operation (e.g., a determination or an identification) are not performed if the prior operation is unsuccessful (e.g., if the determination was not performed). Features in this document that are described with conditional language may describe implementations that are optional. In some examples, &#x201c;transmitting&#x201d; from a first device to a second device includes the first device placing data into a network for receipt by the second device, but may not include the second device receiving the data. Conversely, &#x201c;receiving&#x201d; from a first device may include receiving the data from a network, but may not include the first device transmitting the data.</p>
<p id="p-0317" num="0316"><figref idref="DRAWINGS">FIG. 24</figref> is a block diagram of computing devices <b>2400</b>, <b>2450</b> that may be used to implement the systems and methods described in this document, as either a client or as a server or plurality of servers. Computing device <b>2400</b> is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers. Computing device <b>2450</b> is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, and other similar computing devices. Additionally computing device <b>2400</b> or <b>2450</b> can include Universal Serial Bus (USB) flash drives. The USB flash drives may store operating systems and other applications. The USB flash drives can include input/output components, such as a wireless transmitter or USB connector that may be inserted into a USB port of another computing device. The components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations described and/or claimed in this document.</p>
<p id="p-0318" num="0317">Computing device <b>2400</b> includes a processor <b>2402</b>, memory <b>2404</b>, a storage device <b>2406</b>, a high-speed interface <b>2408</b> connecting to memory <b>2404</b> and high-speed expansion ports <b>2410</b>, and a low speed interface <b>2412</b> connecting to low speed bus <b>2414</b> and storage device <b>2406</b>. Each of the components <b>2402</b>, <b>2404</b>, <b>2406</b>, <b>2408</b>, <b>2410</b>, and <b>2412</b>, are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate. The processor <b>2402</b> can process instructions for execution within the computing device <b>2400</b>, including instructions stored in the memory <b>2404</b> or on the storage device <b>2406</b> to display graphical information for a GUI on an external input/output device, such as display <b>2416</b> coupled to high speed interface <b>2408</b>. In other implementations, multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory. Also, multiple computing devices <b>2400</b> may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).</p>
<p id="p-0319" num="0318">The memory <b>2404</b> stores information within the computing device <b>2400</b>. In one implementation, the memory <b>2404</b> is a volatile memory unit or units. In another implementation, the memory <b>2404</b> is a non-volatile memory unit or units. The memory <b>2404</b> may also be another form of computer-readable medium, such as a magnetic or optical disk.</p>
<p id="p-0320" num="0319">The storage device <b>2406</b> is capable of providing mass storage for the computing device <b>2400</b>. In one implementation, the storage device <b>2406</b> may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations. A computer program product can be tangibly embodied in an information carrier. The computer program product may also contain instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer- or machine-readable medium, such as the memory <b>2404</b>, the storage device <b>2406</b>, or memory on processor <b>2402</b>.</p>
<p id="p-0321" num="0320">The high speed controller <b>2408</b> manages bandwidth-intensive operations for the computing device <b>2400</b>, while the low speed controller <b>2412</b> manages lower bandwidth-intensive operations. Such allocation of functions is exemplary only. In one implementation, the high-speed controller <b>2408</b> is coupled to memory <b>2404</b>, display <b>2416</b> (e.g., through a graphics processor or accelerator), and to high-speed expansion ports <b>2410</b>, which may accept various expansion cards (not shown). In the implementation, low-speed controller <b>2412</b> is coupled to storage device <b>2406</b> and low-speed expansion port <b>2414</b>. The low-speed expansion port, which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.</p>
<p id="p-0322" num="0321">The computing device <b>2400</b> may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server <b>2420</b>, or multiple times in a group of such servers. It may also be implemented as part of a rack server system <b>2424</b>. In addition, it may be implemented in a personal computer such as a laptop computer <b>2422</b>. Alternatively, components from computing device <b>2400</b> may be combined with other components in a mobile device (not shown), such as device <b>2450</b>. Each of such devices may contain one or more of computing device <b>2400</b>, <b>2450</b>, and an entire system may be made up of multiple computing devices <b>2400</b>, <b>2450</b> communicating with each other.</p>
<p id="p-0323" num="0322">Computing device <b>2450</b> includes a processor <b>2452</b>, memory <b>2464</b>, an input/output device such as a display <b>2454</b>, a communication interface <b>2466</b>, and a transceiver <b>2468</b>, among other components. The device <b>2450</b> may also be provided with a storage device, such as a microdrive or other device, to provide additional storage. Each of the components <b>2450</b>, <b>2452</b>, <b>2464</b>, <b>2454</b>, <b>2466</b>, and <b>2468</b>, are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.</p>
<p id="p-0324" num="0323">The processor <b>2452</b> can execute instructions within the computing device <b>2450</b>, including instructions stored in the memory <b>2464</b>. The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. Additionally, the processor may be implemented using any of a number of architectures. For example, the processor <b>410</b> may be a CISC (Complex Instruction Set Computers) processor, a RISC (Reduced Instruction Set Computer) processor, or a MISC (Minimal Instruction Set Computer) processor. The processor may provide, for example, for coordination of the other components of the device <b>2450</b>, such as control of user interfaces, applications run by device <b>2450</b>, and wireless communication by device <b>2450</b>.</p>
<p id="p-0325" num="0324">Processor <b>2452</b> may communicate with a user through control interface <b>2458</b> and display interface <b>2456</b> coupled to a display <b>2454</b>. The display <b>2454</b> may be, for example, a TFT (Thin-Film-Transistor Liquid Crystal Display) display or an OLED (Organic Light Emitting Diode) display, or other appropriate display technology. The display interface <b>2456</b> may comprise appropriate circuitry for driving the display <b>2454</b> to present graphical and other information to a user. The control interface <b>2458</b> may receive commands from a user and convert them for submission to the processor <b>2452</b>. In addition, an external interface <b>2462</b> may be provide in communication with processor <b>2452</b>, so as to enable near area communication of device <b>2450</b> with other devices. External interface <b>2462</b> may provide, for example, for wired communication in some implementations, or for wireless communication in other implementations, and multiple interfaces may also be used.</p>
<p id="p-0326" num="0325">The memory <b>2464</b> stores information within the computing device <b>2450</b>. The memory <b>2464</b> can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units. Expansion memory <b>2474</b> may also be provided and connected to device <b>2450</b> through expansion interface <b>2472</b>, which may include, for example, a SIMM (Single In Line Memory Module) card interface. Such expansion memory <b>2474</b> may provide extra storage space for device <b>2450</b>, or may also store applications or other information for device <b>2450</b>. Specifically, expansion memory <b>2474</b> may include instructions to carry out or supplement the processes described above, and may include secure information also. Thus, for example, expansion memory <b>2474</b> may be provide as a security module for device <b>2450</b>, and may be programmed with instructions that permit secure use of device <b>2450</b>. In addition, secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner.</p>
<p id="p-0327" num="0326">The memory may include, for example, flash memory and/or NVRAM memory, as discussed below. In one implementation, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer- or machine-readable medium, such as the memory <b>2464</b>, expansion memory <b>2474</b>, or memory on processor <b>2452</b> that may be received, for example, over transceiver <b>2468</b> or external interface <b>2462</b>.</p>
<p id="p-0328" num="0327">Device <b>2450</b> may communicate wirelessly through communication interface <b>2466</b>, which may include digital signal processing circuitry where necessary. Communication interface <b>2466</b> may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through radio-frequency transceiver <b>2468</b>. In addition, short-range communication may occur, such as using a Bluetooth, Wi-Fi, or other such transceiver (not shown). In addition, GPS (Global Positioning System) receiver module <b>2470</b> may provide additional navigation- and location-related wireless data to device <b>2450</b>, which may be used as appropriate by applications running on device <b>2450</b>.</p>
<p id="p-0329" num="0328">Device <b>2450</b> may also communicate audibly using audio codec <b>2460</b>, which may receive spoken information from a user and convert it to usable digital information. Audio codec <b>2460</b> may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device <b>2450</b>. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device <b>2450</b>.</p>
<p id="p-0330" num="0329">The computing device <b>2450</b> may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone <b>2480</b>. It may also be implemented as part of a smartphone <b>2482</b>, personal digital assistant, or other similar mobile device.</p>
<p id="p-0331" num="0330">Various implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.</p>
<p id="p-0332" num="0331">These computer programs (also known as programs, software, software applications or code) include machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the terms &#x201c;machine-readable medium&#x201d; &#x201c;computer-readable medium&#x201d; refers to any computer program product, apparatus and/or device (e.g., magnetic discs, optical disks, memory, Programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term &#x201c;machine-readable signal&#x201d; refers to any signal used to provide machine instructions and/or data to a programmable processor.</p>
<p id="p-0333" num="0332">To provide for interaction with a user, the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.</p>
<p id="p-0334" num="0333">The systems and techniques described here can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (&#x201c;LAN&#x201d;), a wide area network (&#x201c;WAN&#x201d;), peer-to-peer networks (having ad-hoc or static members), grid computing infrastructures, and the Internet.</p>
<p id="p-0335" num="0334">The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.</p>
<p id="p-0336" num="0335">Although a few implementations have been described in detail above, other modifications are possible. Moreover, other mechanisms for performing the systems and methods described in this document may be used. In addition, the logic flows depicted in the figures do not require the particular order shown, or sequential order, to achieve desirable results. Other steps may be provided, or steps may be eliminated, from the described flows, and other components may be added to, or removed from, the described systems. Accordingly, other implementations are within the scope of the following claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer-implemented power management method, comprising:
<claim-text>receiving, by a mobile computing device and from an installed third-party application program, a request to register a component computer process of the third-party application program as available for deferred operation;</claim-text>
<claim-text>receiving, after having received the request to register the process as available for deferred operation, an indication that the process is to execute;</claim-text>
<claim-text>deferring execution of the process by the mobile computing device while the mobile computing device is not connected to a power source that is external to the mobile computing device and that is for charging battery storage on the mobile computing device;</claim-text>
<claim-text>sensing that the mobile computing device has been connected to the power source; and</claim-text>
<claim-text>triggering performance of the process in response to sensing that the mobile computing device has been connected to the power source.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said triggering performance of the process comprises waiting to trigger performance of the process, in response to sensing that the mobile computing device has been connected to the power source, until a charge level of the battery storage has reached a determined level.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the determined level is determined to be a level of the battery storage that is adequate to complete the process without exhausting the battery storage on the mobile device if the mobile computing device is disconnected from the power source before the process has completed.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the determined level is further determined to be a level of the battery storage that is adequate to permit further use of the mobile computing device for a determined amount of time after the process has completed.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said triggering performance of the process comprises waiting a determined amount of time after sensing that the mobile computing device has been connected to the power source.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the determined amount of time is at least fifteen minutes.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein receiving the indication that the process is to execute includes receiving user input, while the mobile computing device is not connected to the power source, that identifies the process.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein said receiving user input that identifies the process includes receiving a secondary type of user input of a user interface element, wherein deferring execution of the process occurs as a result of receiving the second type of user input of the user interface element, wherein the user interface element is configured to trigger performance of the process, when the mobile computing device is not connected to the power source, as a result of receiving a primary type of user input of the user interface element.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein:
<claim-text>the user interface element is associated with a command that triggers performance of the process;</claim-text>
<claim-text>deferring execution of the process includes saving a state of the process; and</claim-text>
<claim-text>triggering performance of the process includes recovering the state of the process and executing the command.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein deferring execution of the process is performed as a result of identifying that the computer process is a process that is configured to receive user input but that has been executing without receiving user input for a determined amount of time.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the determined amount of time is greater than five minutes.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein deferring execution of the process is performed as a result of determining that the battery storage will be exhausted if the process is executed to completion.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the power source converts alternating current (AC) line power to direct current (DC) power.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the performance of the process comprises wireless transmission of data, by the mobile computing device and over the internet, to another computerized device without routing the data through a device that includes the power source.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising sensing that the mobile computing device has been disconnected from the power source, and in response, continuing the performance of the process after the disconnection from the power source until the process has completed.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising, as a result of receiving the indication that the process is to execute, prompting a user of the mobile computing device to indicate whether the process should execute immediately or whether the process should be deferred until the mobile computing device is connected to a power source.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the mobile computing device displays an interface that concurrently identifies (i) a duration of the battery storage if the process should execute immediately, and (ii) a duration of the battery storage if the user indicates that the process should be deferred until the mobile computing device is connected to a power source.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. A non-transitory computer-readable storage medium storing instructions that, when executed by one or more processing devices, cause performance of operations comprising:
<claim-text>receiving, by a mobile computing device and from an installed third-party application program, a request to register a component computer process of the third-party application program as available for deferred operation;</claim-text>
<claim-text>receiving, after having received the request to register the process as available for deferred operation, an indication that the process is to execute;</claim-text>
<claim-text>deferring execution of the process by the mobile computing device while the mobile computing device is not connected to a power source that is external to the mobile computing device and that is for charging battery storage on the mobile computing device;</claim-text>
<claim-text>sensing that the mobile computing device has been connected to the power source; and</claim-text>
<claim-text>triggering performance of the process in response to sensing that the mobile computing device has been connected to the power source.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The computer-readable storage medium of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein said triggering performance of the process comprises waiting to trigger performance of the process, in response to sensing that the mobile computing device has been connected to the power source, until a charge level of the battery storage has reached a determined level.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The computer-readable storage medium of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein said triggering performance of the process comprises waiting a determined amount of time after sensing that the mobile computing device has been connected to the power source.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The computer-readable storage medium of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein receiving the indication that the process is to execute includes receiving user input, while the mobile computing device is not connected to the power source, that identifies the process.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The computer-readable storage medium of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein deferring execution of the process is performed as a result of identifying that the computer process is a process that is configured to receive user input but that has been executing without receiving user input for a determined amount of time.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The computer-readable storage medium of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein deferring execution of the process is performed as a result of determining that the battery storage will be exhausted if the process is executed to completion.</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The computer-readable storage medium of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the operations further comprise sensing that the mobile computing device has been disconnected from the power source, and in response, continuing the performance of the process after the disconnection from the power source until the process has completed.</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The computer-readable storage medium of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the operations further comprise, as a result of receiving the indication that the process is to execute, prompting a user of the mobile computing device to indicate whether the process should execute immediately or whether the process should be deferred until the mobile computing device is connected to a power source.</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. A computing device having power management features, comprising:
<claim-text>a power sensor that is arranged to detect when the computing device is attached to a power source that is for charging the computing device;</claim-text>
<claim-text>one or more processes that perform operations for which a third-party application program has requested that the one or more processes be available for deferred execution; and</claim-text>
<claim-text>a power manager, that is to execute on a processor on the computing device, and that is programmed:
<claim-text>(i) to receive, after the third-party application program has requested that the one or more processes be available for deferred execution, an indication that the one or more processes are to execute,</claim-text>
<claim-text>(ii) to withhold execution of the operations while the computing device is not connected to the power source, and</claim-text>
<claim-text>(iii) to trigger execution of the operations automatically in response to sensing with the power sensor that the computing device has been connected to the power source.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The computing device of <claim-ref idref="CLM-00026">claim 26</claim-ref>, wherein the one or more processes have been identified to be power-intensive processes that are excessive drains on battery levels for the device, and further comprising a plurality of processes and one or more stored indicators that represent whether each process of the plurality of processes is a power-intensive process.</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. The computing device of <claim-ref idref="CLM-00026">claim 26</claim-ref>, wherein the power manager is programmed to automatically trigger execution of the operations by waiting to trigger execution of the operations until a charge level of the computing device has reached a determined level, wherein the determined level is determined to be a level adequate to complete the operations without exhausting the charge of the computing device if the computing device is disconnected from the power source.</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. The computing device of <claim-ref idref="CLM-00028">claim 28</claim-ref>, wherein the determined level further includes a power level adequate to permit further use of the computing device for a determined amount of time after the operations have been completed. </claim-text>
</claim>
</claims>
</us-patent-grant>
