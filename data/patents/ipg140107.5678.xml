<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626779-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626779</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12259956</doc-number>
<date>20081028</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>KR</country>
<doc-number>10-2007-0135615</doc-number>
<date>20071221</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>569</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>7</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>17</main-group>
<subgroup>30</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classifications-cpc>
<main-cpc>
<classification-cpc>
<cpc-version-indicator><date>20130101</date></cpc-version-indicator>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>17</main-group>
<subgroup>30348</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
<scheme-origination-code>C</scheme-origination-code>
</classification-cpc>
</main-cpc>
</classifications-cpc>
<classification-national>
<country>US</country>
<main-classification>707758</main-classification>
</classification-national>
<invention-title id="d2e71">Method and system for managing database</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6122644</doc-number>
<kind>A</kind>
<name>Graefe et al.</name>
<date>20000900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6366901</doc-number>
<kind>B1</kind>
<name>Ellis</name>
<date>20020400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6374263</doc-number>
<kind>B1</kind>
<name>Bunger et al.</name>
<date>20020400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6694322</doc-number>
<kind>B2</kind>
<name>Warren et al.</name>
<date>20040200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6748393</doc-number>
<kind>B1</kind>
<name>Kapoor et al.</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7016914</doc-number>
<kind>B2</kind>
<name>Nayak</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>7272591</doc-number>
<kind>B1</kind>
<name>Ghazal et al.</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>7448047</doc-number>
<kind>B2</kind>
<name>Poole et al.</name>
<date>20081100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>719316</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>7467349</doc-number>
<kind>B1</kind>
<name>Bryar et al.</name>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715205</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>7624094</doc-number>
<kind>B2</kind>
<name>Ellis et al.</name>
<date>20091100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>7627564</doc-number>
<kind>B2</kind>
<name>Yao et al.</name>
<date>20091200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>7676451</doc-number>
<kind>B2</kind>
<name>Burger et al.</name>
<date>20100300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707687</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>7711730</doc-number>
<kind>B2</kind>
<name>Bernal et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707718</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>7716213</doc-number>
<kind>B2</kind>
<name>Cotner et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707718</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>7747610</doc-number>
<kind>B2</kind>
<name>Chinchwadkar et al.</name>
<date>20100600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707716</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>7831592</doc-number>
<kind>B2</kind>
<name>Markl et al.</name>
<date>20101100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707718</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>7849080</doc-number>
<kind>B2</kind>
<name>Chang et al.</name>
<date>20101200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707723</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>7908264</doc-number>
<kind>B2</kind>
<name>Bohannon et al.</name>
<date>20110300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707713</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>7921107</doc-number>
<kind>B2</kind>
<name>Chang et al.</name>
<date>20110400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707723</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>7979457</doc-number>
<kind>B1</kind>
<name>Garman</name>
<date>20110700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707768</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>8108390</doc-number>
<kind>B2</kind>
<name>Manavoglu et al.</name>
<date>20120100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707736</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>2002/0126545</doc-number>
<kind>A1</kind>
<name>Warren et al.</name>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>365200</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>2003/0144868</doc-number>
<kind>A1</kind>
<name>MacIntyre et al.</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>2003/0154442</doc-number>
<kind>A1</kind>
<name>Papierniak</name>
<date>20030800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>7155011</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>2004/0019587</doc-number>
<kind>A1</kind>
<name>Fuh et al.</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  2</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>2005/0138010</doc-number>
<kind>A1</kind>
<name>Bernal et al.</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  3</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00027">
<document-id>
<country>US</country>
<doc-number>2005/0246717</doc-number>
<kind>A1</kind>
<name>Poole et al.</name>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>719316</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00028">
<document-id>
<country>US</country>
<doc-number>2006/0064411</doc-number>
<kind>A1</kind>
<name>Gross et al.</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  3</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00029">
<document-id>
<country>US</country>
<doc-number>2006/0287993</doc-number>
<kind>A1</kind>
<name>Yao et al.</name>
<date>20061200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  4</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00030">
<document-id>
<country>US</country>
<doc-number>2006/0294058</doc-number>
<kind>A1</kind>
<name>Zabback et al.</name>
<date>20061200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  2</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00031">
<document-id>
<country>US</country>
<doc-number>2007/0260611</doc-number>
<kind>A1</kind>
<name>Bohannon et al.</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707 10</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00032">
<document-id>
<country>US</country>
<doc-number>2008/0114803</doc-number>
<kind>A1</kind>
<name>Chinchwadkar et al.</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707102</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00033">
<document-id>
<country>US</country>
<doc-number>2008/0133454</doc-number>
<kind>A1</kind>
<name>Markl et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  2</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00034">
<document-id>
<country>US</country>
<doc-number>2008/0255937</doc-number>
<kind>A1</kind>
<name>Chang et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705 14</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00035">
<document-id>
<country>US</country>
<doc-number>2008/0256039</doc-number>
<kind>A1</kind>
<name>Chang et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  3</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00036">
<document-id>
<country>US</country>
<doc-number>2008/0256056</doc-number>
<kind>A1</kind>
<name>Chang et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  5</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00037">
<document-id>
<country>US</country>
<doc-number>2008/0256059</doc-number>
<kind>A1</kind>
<name>Chang et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  5</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00038">
<document-id>
<country>US</country>
<doc-number>2008/0256060</doc-number>
<kind>A1</kind>
<name>Chang et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  5</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00039">
<document-id>
<country>US</country>
<doc-number>2008/0256061</doc-number>
<kind>A1</kind>
<name>Chang et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  5</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00040">
<document-id>
<country>US</country>
<doc-number>2008/0270368</doc-number>
<kind>A1</kind>
<name>Cotner et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  4</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00041">
<document-id>
<country>US</country>
<doc-number>2008/0275840</doc-number>
<kind>A1</kind>
<name>Burger et al.</name>
<date>20081100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  2</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00042">
<document-id>
<country>US</country>
<doc-number>2008/0281700</doc-number>
<kind>A1</kind>
<name>Koran</name>
<date>20081100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705 14</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00043">
<document-id>
<country>US</country>
<doc-number>2009/0024584</doc-number>
<kind>A1</kind>
<name>Dharap et al.</name>
<date>20090100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  3</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00044">
<othercit>&#x201c;12.2.10. Update Syntax&#x201d; from MySQL 5.0 Reference Manual. Available online at http://dev.mysql.com/doc/refman/5.0/en/update.html. Copyright 2011.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00045">
<othercit>&#x201c;Acid&#x201d; from Wikipedia. Available online at http://en.wikipedia.org/wiki/ACID. Nov. 19, 2011.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00046">
<othercit>H&#xe4;rder, Theo; Reuter, Andreas (Dec. 1983). &#x201c;Principles of Transaction-Oriented Database Recovery&#x201d; (PDF). ACM Computing Surveys 15 (4): 287-317.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00047">
<othercit>Behm, Andreas, Serge Rielau, and Richard Swagerman. &#x201c;Returning modified rows-select statements with side effects,&#x201d; Proceedings of the Thirtieth international conference on Very large data bases&#x2014;vol. 30. VLDB Endowment, 2004.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
</us-references-cited>
<number-of-claims>25</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>5</number-of-drawing-sheets>
<number-of-figures>6</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20090164415</doc-number>
<kind>A1</kind>
<date>20090625</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Lee</last-name>
<first-name>Hye Jung</first-name>
<address>
<city>Chungcheongnam-do</city>
<country>KR</country>
</address>
</addressbook>
<residence>
<country>KR</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Park</last-name>
<first-name>Kieun</first-name>
<address>
<city>Kyunggi-do</city>
<country>KR</country>
</address>
</addressbook>
<residence>
<country>KR</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Kim</last-name>
<first-name>Gabyoung</first-name>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
<residence>
<country>KR</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Lee</last-name>
<first-name>Jong Min</first-name>
<address>
<city>Kyunggi-do</city>
<country>KR</country>
</address>
</addressbook>
<residence>
<country>KR</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Lee</last-name>
<first-name>Hye Jung</first-name>
<address>
<city>Chungcheongnam-do</city>
<country>KR</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Park</last-name>
<first-name>Kieun</first-name>
<address>
<city>Kyunggi-do</city>
<country>KR</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Kim</last-name>
<first-name>Gabyoung</first-name>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Lee</last-name>
<first-name>Jong Min</first-name>
<address>
<city>Kyunggi-do</city>
<country>KR</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Harness, Dickey &#x26; Pierce, P.L.C.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>NHN Business Platform Corporation</orgname>
<role>03</role>
<address>
<city>Seongnam-Si</city>
<country>KR</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Morrison</last-name>
<first-name>Jay</first-name>
<department>2168</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method and system for managing database is disclosed, which is capable of simultaneously performing a data selection procedure and a data click-count update procedure when specific data is selected, the method comprising receiving and analyzing a query in which both a fetch request for a record included in a specific database table and an update request for at least one of columns included in the record are defined together; generating an execution plan to execute the analyzed query; and executing the execution plan by fetching the record and updating at least one of the columns according to the execution plan.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="76.28mm" wi="160.27mm" file="US08626779-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="122.94mm" wi="164.68mm" file="US08626779-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="183.39mm" wi="131.57mm" file="US08626779-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="183.56mm" wi="99.74mm" file="US08626779-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="211.41mm" wi="98.21mm" file="US08626779-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="211.50mm" wi="155.53mm" file="US08626779-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading>
<p id="p-0002" num="0001">This application claims the benefit of Korean Patent Application No. 10-2007-0135615, filed on Dec. 21, 2007, which is hereby incorporated by reference as if fully set forth herein.</p>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">The present invention relates to a method for managing a database, and more particularly, to a method and system for managing a database, which is capable of updating data stored in the database with high efficiency.</p>
<p id="p-0004" num="0003">A database management system (hereinafter, referred to as &#x201c;DBMS&#x201d;) is provided to manage a database with large amounts of data. Such a database management system is essential in recent environments where there are large amounts of new information that is created continuously.</p>
<p id="p-0005" num="0004">The DBMS stores data in type of table in the database, wherein the database table is a basic architecture for storing the data in the database. One database table is comprised of one or more records. At this time, the record indicates one row in the database table. Each record is comprised of one or more columns, wherein the column indicates a domain with a name expressing a table item in a real world for the database table, for example, which can be referred to as an attribute or field.</p>
<p id="p-0006" num="0005">When a specific query is input to the DBMS, the DBMS performs functions of selecting, inserting, updating and deleting the data in the database according to the input query. In this case, the query indicates a specific request for the data stored in the table of database, that is, the query shows an operation required for the data. The query is expressed as a language such as SQL (Structured Query Language).</p>
<p id="p-0007" num="0006">The most typical query in the SQLs is &#x201c;SELECT&#x201d;. Through the use of SELECT query, the data in the table can be obtained. Also, when the data is separately stored in the several tables, the desired data in the specific table can be obtained with reference to the data stored in the other tables.</p>
<p id="p-0008" num="0007">For example, in case of the SQL syntax such as &#x201c;SELECT content FROM board WHERE id=10&#x201d;, it indicates the request for selecting the record which satisfies &#x201c;id=10&#x201d; from the table &#x201c;board&#x201d;.</p>
<p id="p-0009" num="0008">If the DBMS is used for a bulletin board service, especially, a specific content is selected by a user, the DBMS receives a query from a bulletin board service providing server, wherein the query includes &#x201c;SELECT&#x201d; language for the request of the corresponding content and &#x201c;UPDATE&#x201d; language for the request of click-count increment of the corresponding content. According to the received query, the DBMS selects the corresponding content, and updates the click count of the selected content.</p>
<p id="p-0010" num="0009">On provision of the specific content selected by a user in the system according to the prior art, even though selecting the corresponding content should be necessarily accompanied with the increment of click count, the two procedures are performed by the separate queries, thereby lowering the system efficiency.</p>
<p id="p-0011" num="0010">However, when the update of record included in the specific table is performed in the prior art DBMS, the corresponding record is locked until when completing a transaction for the update of the corresponding record. Thus, it is impossible to perform the procedures of SELECT query and UPDATE query at the same time, thereby deteriorating simultaneity in use of the database.</p>
<p id="p-0012" num="0011">In the prior art DBMS, when performing the update of record included in the specific table, the update result is reflected on the table every time the update is performed, whereby the system efficiency deteriorates with increasing counts of updates.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0013" num="0012">Therefore, the present invention has been made in view of the above problems, and it is an object of the present invention to provide a method and system for managing database, which is capable of simultaneously performing a data selection procedure and a data click-count update procedure when specific data is selected.</p>
<p id="p-0014" num="0013">It is another object of the present invention to provide a method and system for managing database, which can minimize a locking duration of corresponding data.</p>
<p id="p-0015" num="0014">It is another object of the present invention to provide a method and system for managing database, which can reflect updated results on Database periodically.</p>
<p id="p-0016" num="0015">Additional advantages, objects, and features of the invention will be set forth in part in the description which follows and in part will become apparent to those having ordinary skill in the art upon examination of the following or may be learned from practice of the invention. The objectives and other advantages of the invention may be realized and attained by the structure particularly pointed out in the written description and claims hereof as well as the appended drawings.</p>
<p id="p-0017" num="0016">To achieve these objects and other advantages and in accordance with the purpose of the invention, as embodied and broadly described herein, a database-managing method comprises receiving and analyzing a query in which both a fetch request for a record included in a specific table and an update request for at least one of columns included in the record are defined together; generating an execution plan to execute the analyzed query; and executing the execution plan by fetching the record and updating at least one of the columns according to the execution plan.</p>
<p id="p-0018" num="0017">At this time, analyzing the query comprises receiving the query; parsing the received query; and checking a validation for the parsed query.</p>
<p id="p-0019" num="0018">At this time, analyzing the query further comprises generating a parse tree for the query through the use of parsing results after parsing the query, wherein the validation of the generated parse tree is checked in the step of checking the validation for the parsed query, and wherein the execution plan for the valid parse tree is generated in the step of generating the execution plan.</p>
<p id="p-0020" num="0019">Also, the record is content included in a specific bulletin board, and at least one column includes a column with a click count for the content.</p>
<p id="p-0021" num="0020">Executing the execution plan comprises generating a transaction to execute the execution plan; fetching the record from the table; obtaining a value recorded in the update-requested column among the fetched records; updating the obtained value recorded in the column; and completing the transaction by noticing the update completion. Also, executing the execution plan further comprises generating a sub-transaction before updating the value recorded in the column; and completing the sub-transaction after updating the value recorded in the column, wherein the update of the value recorded in the column is performed in the sub-transaction. At this time, locks for the table and record are set during a period of processing the sub-transaction for the update of the column.</p>
<p id="p-0022" num="0021">Also, fetching the record is performed by any one of sequential-scanning method or index-scanning method. At this time, the index for the column as well as the value recorded in the column is updated when an index for the update-requested column exists in the step of executing the execution plan.</p>
<p id="p-0023" num="0022">Furthermore, the database-managing method comprises matching an entry comprised of a record ID and a column ID with the value of the column corresponding to the column ID included in the entry, and storing the entry and column value matched with each other in the memory, wherein executing the execution plan comprises updating the column value matched with the entry for the update-requested column in the memory when performing the update for the column according to the update request for the column; and reflecting the column value kept in the memory on the table when a specific condition is satisfied.</p>
<p id="p-0024" num="0023">At this time, the column value is reflected on the table when it is possible to satisfy at least any one of cases that the column value kept in the memory is above a first reference value, and the column value is maintained for a time period longer than a second reference value from a finally-updated time point in the step of reflecting the column value.</p>
<p id="p-0025" num="0024">In another aspect of the present invention, a database-managing system comprises a query analyzer configured to receive and analyze a query in which both a fetch request for a record included in a specific table and an update request for at least one of columns included in the record are defined together; an execution plan generator configured to generate an execution plan to execute the analyzed query; and an execution plan executor configured to execute the execution plan by fetching the record and updating at least one of the columns according to the execution plan.</p>
<p id="p-0026" num="0025">It is to be understood that both the foregoing general description and the following detailed description of the present invention are exemplary and explanatory and are intended to provide further explanation of the invention as claimed.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0027" num="0026">The accompanying drawings, which are included to provide a further understanding of the invention and are incorporated in and constitute a part of this application, illustrate embodiment(s) of the invention and together with the description serve to explain the principle of the invention. In the drawings:</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram illustrating a database-managing system according to one embodiment of the present invention;</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 2</figref> is a flow chart comparing a locking duration on a column-update request process according to the present invention with a locking duration on a column-update request process according to the prior art;</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 3</figref> is a flow chart illustrating a database-managing method according to one embodiment of the present invention;</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 4</figref> is a flow chart illustrating a detailed execution procedure of execution plane shown in <figref idref="DRAWINGS">FIG. 3</figref>; and</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 5</figref> is a flow chart illustrating database-managing method according to another embodiment of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0033" num="0032">Reference will now be made in detail to the preferred embodiments of the present invention, examples of which are illustrated in the accompanying drawings. Wherever possible, the same reference numbers will be used throughout the drawings to refer to the same or like parts.</p>
<p id="p-0034" num="0033">Hereinafter, a method and system for managing database according to the present invention will be described with reference to the accompanying drawings.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram illustrating a database-managing system according to one embodiment of the present invention.</p>
<p id="p-0036" num="0035">Data of various kinds is stored as a table format in a database <b>110</b>. As mentioned above, each table is comprised of one or more records, and each record is comprised of one or more columns. For example, in a case of database with contents on a specific bulletin board, the table indicates a group of the contents, the record indicates each of the contents, and the column indicates an area for storing a content ID, a content writer, and a content click-count.</p>
<p id="p-0037" num="0036">The database-managing system <b>100</b> performs an integrated database-managing function, that is, the database-managing system <b>100</b> connected with the database <b>110</b> updates or deletes data recorded in the database <b>110</b>, or adds data to the database <b>110</b>. The database-managing system <b>100</b> includes a query analyzer <b>120</b>, an execution plan generator <b>130</b>, and an execution plan executor <b>140</b>.</p>
<p id="p-0038" num="0037">The query analyzer <b>120</b> receives queries stored in the database <b>110</b> from an external server (not shown) or a manager terminal (not shown) linked with the database-managing system <b>100</b>, and then analyzes the received queries.</p>
<p id="p-0039" num="0038">As shown in <figref idref="DRAWINGS">FIG. 1</figref>, the query analyzer <b>120</b> includes a query receiver <b>122</b>, a parser <b>124</b>, and a validation checker <b>126</b>.</p>
<p id="p-0040" num="0039">The query receiver <b>122</b> receives the queries from the external server or manager terminal. In this case, the queries received through the query receiver <b>122</b> can be written through the use of SQL (structured query language).</p>
<p id="p-0041" num="0040">In one embodiment of the present invention, the query receiver <b>122</b> receives the query in which both a fetch request for the specific record stored in the database <b>110</b> and an update request for the column of the specific record are defined together. In this case, the query, in which both the fetch request for the specific record stored in the database <b>110</b> and the update request for the column of the specific record are defined together, means the query written to perform procedures for fetching contents and updating the click-count of contents at one time, with notice that the fetch request for the specific content in the database <b>110</b> is accompanied with the update request for the corresponding column of the specific content when the record corresponds to the content.</p>
<p id="p-0042" num="0041">The case of writing the query using the SQL is as follows.</p>
<p id="p-0043" num="0042">1) SELECT content, INCR(counter) FROM board</p>
<p id="p-0044" num="0043">2) SELECT content, INCR(counter)+1 FROM board</p>
<p id="p-0045" num="0044">3) SELECT content, FROM board WITH INCREMENT FOR counter</p>
<p id="p-0046" num="0045">The aforementioned query is &#x201c;SELECT&#x201d; for defining the fetch of specific record, wherein &#x201c;content&#x201d; indicates the record to be fetched, &#x201c;counter&#x201d; indicates the column with the click-count among the columns, &#x201c;board&#x201d; indicates the table with the corresponding record, and &#x201c;INCR( )&#x201d; indicates a function for increasing a specific column value such as the click-count of &#x201c;SELECT&#x201d;.</p>
<p id="p-0047" num="0046">For convenience of the explanation, supposing that the update-requested column corresponds to the column with the click-count recorded therein. It is apparent for those skilled in the art that the column is not limited to the column with the click-count recorded therein.</p>
<p id="p-0048" num="0047">The parser <b>124</b> generates a parse tree by parsing the query received through the query receiver <b>122</b>. In one embodiment of the present invention, the parser <b>124</b> may transform the queries expressed in various types into one syntax type, and generate the parse tree for the transformed syntax type.</p>
<p id="p-0049" num="0048">For example, when receiving the SQL query of 1) through the query receiver <b>122</b>, it is possible to parse the SQL query as it is. However, when receiving the SQL queries of 2) and 3), the parser <b>124</b> transforms the received queries into the following types.</p>
<p id="p-0050" num="0049">2) SELECT content, INCR(counter)+1 FROM board</p>
<p id="p-0051" num="0050">&#x2192; SELECT content, counter+1, &#x3c;INCR(counter)&#x3e; FROM board</p>
<p id="p-0052" num="0051">3) SELECT content, FROM board WITH INCREMENT FOR counter</p>
<p id="p-0053" num="0052">&#x2192; SELECT content, &#x3c;INCR(counter)&#x3e; FROM board</p>
<p id="h-0006" num="0000">At this time, &#x3c;INCR(counter)&#x3e; indicates a hidden column, that is, the column of &#x201c;counter&#x201d; is not included in the result for the query.</p>
<p id="p-0054" num="0053">The validation checker <b>126</b> performs examination of the meaning of the parse tree generated by the parser <b>124</b>. That is, the validation checker <b>126</b> checks whether or not the column or table in the parse tree exists, and whether or not the data type of the column can be compatible with an operator.</p>
<p id="p-0055" num="0054">In one embodiment of the present invention, if &#x201c;INCR( )&#x201d; function is included in the received query, the validation checker <b>126</b> checks at least one of the following three: whether or not the column corresponding to one component of the corresponding function is included in the corresponding table; whether or not the left-sided item has the right-sided item as a domain in an expression when the component is a path expression; and whether or not the data type of component is an integral type.</p>
<p id="p-0056" num="0055">The validation checker <b>126</b> transforms the function of &#x201c;INCR(counter)&#x201d; into &#x201c;INCR(board, ID(counter))&#x201d; by adding the component for processing of the corresponding function to the function &#x201c;INCR(counter)&#x201d; included in the received query. At this time, &#x201c;board&#x201d; indicates an identifier (ID) for the specific record included in the board table, wherein &#x201c;board&#x201d; shows a physical location of the specific record. Also, &#x201c;ID(counter)&#x201d; indicates an ID for the counter column. This information is used for searching the specific record and the location of corresponding column in the specific record.</p>
<p id="p-0057" num="0056">The execution plan generator <b>130</b> generates an execution plan for fetching the requested record based on the parse tree determined to be valid, and updating the column included in the record, and then stores the generated execution plan in a memory <b>160</b>. At this time, the execution plan indicates a data architecture including a method for fetching the record from the specific table, a result record list, and whether or not there is an increment operation for the update-requested column.</p>
<p id="p-0058" num="0057">In one embodiment of the present invention, the execution plan generator <b>130</b> may select any one from the following two methods to fetch the requested record from the specific table, that is, a sequential-scanning method and an index-scanning method. At this time, the sequential-scanning method fetches the record with the corresponding ID by sequentially scanning the records included in the specific table. The index-scanning method fetches the corresponding record by scanning a corresponding index since the index is generated by each ID of the record.</p>
<p id="p-0059" num="0058">The execution plan executor <b>140</b> fetches the corresponding record from the specific table according to the execution plan generated by the execution plan generator <b>130</b>. Also, the execution plan executor <b>140</b> updates the corresponding column value by performing an increment operation for the column value recorded in the column of the record corresponding to the physical location of the update-requested column.</p>
<p id="p-0060" num="0059">In more detail, the execution plan executor <b>140</b> generates a transaction to execute the execution plan generated by the execution plan generator <b>130</b>, to thereby process the generated execution plan during the corresponding transaction. In this case, the transaction indicates one logical working unit, which is defined by one or more SQLs. The transaction secures data consistency and data simultaneity.</p>
<p id="p-0061" num="0060">First, the execution plan executor <b>140</b> performs the procedure of fetching the corresponding record from the specific table in the transaction. In this case, the aforementioned sequential-scanning method or index-scanning method may be used for access to the corresponding record.</p>
<p id="p-0062" num="0061">In one embodiment of the present invention, when fetching the record, the execution plan executor <b>140</b> sets an IS-lock for the corresponding table with starting the scanning of corresponding table, and sets an S-lock for the corresponding record. When the scanning of the corresponding table is completed, the set IS-lock and S-lock are released.</p>
<p id="p-0063" num="0062">In the meantime, the execution plan executor <b>140</b> generates the updated record by obtaining the column value recorded in the column of the record corresponding to the physical location of the update-requested column and applying the increment in the obtained column value, and the updates the column value of the corresponding column by overlapping the updated record with the original record.</p>
<p id="p-0064" num="0063">In one embodiment of the present invention, the execution plan executor <b>140</b> additionally generates a sub-transaction in the aforementioned transaction so as to update the corresponding column value, and makes the corresponding column value updated in the sub-transaction. In this case, with generation of the sub-transaction, the execution plan executor <b>140</b> sets an IX-lock in the table with the corresponding record, and sets an X-lock in the corresponding record, to thereby prevent the simultaneous access to the corresponding table and record, and to release the set IX-lock and X-lock with completion of the sub-transaction.</p>
<p id="p-0065" num="0064">Generally, when trying to update the column value, the lock is set for the corresponding table and record from the update point of column value, and the set lock is released with completion of commit for reflecting the updated column value on the database. In the present invention, the sub-transaction is additionally generated in the transaction for the update of column value. Thus, the lock is set for the corresponding table and record with starting the sub-transaction, and then the set lock is released with completion of the sub-transaction.</p>
<p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. 2</figref> illustrates the schematized locking duration between the prior art and the present invention. As shown in <figref idref="DRAWINGS">FIG. 2A</figref> illustrating the locking duration in the column value update process according to the prior art, the locking for prevention of data access is maintained for a period <b>200</b> from the point of requesting the update of column value to the point of completing the commit. As shown in <figref idref="DRAWINGS">FIG. 2B</figref> illustrating the locking duration in the column value update process according to the present invention, the locking for prevention of data access is maintained only for the processing time of sub-transaction, that is, period <b>210</b> from the point of requesting the update of column value to the point of completing the notice about the update result of column value.</p>
<p id="p-0067" num="0066">In the case of the prior art, the lock is continuously set for the corresponding table and record until when completing the commit from the point of requesting the update of column value, thereby lowering data simultaneity. However, in the case of the present invention, even though the commit is not completed, the lock is released with the completion of update of column value, thereby improving data simultaneity owing to the decreased locking duration in comparison to the prior art.</p>
<p id="p-0068" num="0067">If there is the index for the update-requested column, the execution plan executor <b>140</b> can update the column included in the index. In more detail, if the column value of the update-requested column is updated and the index for the corresponding column exists, the execution plan executor <b>140</b> deletes a prior-version key for the corresponding column from the index, and adds a new-version key to the index.</p>
<p id="p-0069" num="0068">In one embodiment of the present invention, the execution plan executor <b>140</b> can store information about the update of column value as a log type. If receiving a rollback request from the external server or manager terminal, the updated column value is restored to the original column value. Thus, the execution plan executor <b>140</b> stores the information of updated column value such as the update time and the original column value as the log type.</p>
<p id="p-0070" num="0069">When completing the procedure for fetching the corresponding record and updating the column included in the corresponding record, the execution plan executor <b>140</b> performs the commit to reflect the updated result on the database <b>110</b>, to thereby complete the transaction for processing the received query.</p>
<p id="p-0071" num="0070">In the aforementioned embodiment of the present invention, when the update of column value for the corresponding column is completed, the execution plan executor <b>140</b> directly reflects the updated result on the database <b>110</b>. However, in the modified embodiment of the present invention, the updated column values are temporarily stored in the memory, and are reflected on the database <b>110</b> at one time when a specific condition is satisfied.</p>
<p id="p-0072" num="0071">If the click count for the specific record such as the content is increased rapidly, it may require the frequent update of column such as the click count for the corresponding content. In this case, if the updated result is reflected on the database <b>110</b> every time the update is performed, the system efficiency may be deteriorated.</p>
<p id="p-0073" num="0072">In one embodiment of the present invention, the execution plan executor <b>140</b> can determine whether or not the updated column value is reflected on the database <b>110</b> by checking whether or not the column value stored in the memory <b>160</b> is above a first reference value, or whether or not the corresponding column value is maintained for a time period longer than a second reference value from the finally-updated time point.</p>
<p id="p-0074" num="0073">For this, the database-managing system <b>100</b> includes an entry manager <b>150</b> which generates or deletes an entry comprised of the ID of record and the ID of the update-requested column, matches the generated entry with the column value corresponding to the column ID included in the entry, and stores them in the memory <b>160</b>. That is, the column value of the update-requested column is stored in the memory <b>160</b> while being matched with the entry generated in the entry manager <b>150</b>.</p>
<p id="p-0075" num="0074">In one embodiment of the present invention, the entry manager <b>150</b> generates a hash table, and stores the column value corresponding to the column ID included in the entry matched with each hash key while serving the entry comprised of the ID of the record and the ID of the update-requested column as the hash key.</p>
<p id="p-0076" num="0075">The procedure for storing the column value updated through the entry manager <b>150</b> and the memory <b>160</b> in the memory <b>160</b> by the execution plan executor <b>140</b> will be explained as follows.</p>
<p id="p-0077" num="0076">Upon receiving the update request for the column value of the specific column, the execution plan executor <b>140</b> determines whether or not there is the entry including the ID of the update-requested column in the memory <b>160</b>. If there is no entry, the execution plan executor <b>140</b> provides the request for addition of the entry to the entry manager <b>150</b>.</p>
<p id="p-0078" num="0077">If the corresponding entry exists in the memory <b>160</b>, or the entry is added by the entry manager <b>150</b>, the execution plan executor <b>140</b> determines whether or not the aforementioned condition for the column value matched with the corresponding entry is satisfied. If it is satisfied, the column value matched with the corresponding entry is reflected on the database <b>110</b> while requesting the deletion of the corresponding entry.</p>
<p id="p-0079" num="0078">If it is not satisfied, the execution plan executor <b>140</b> updates the column value matched with the entry in the memory <b>160</b>, thereby processing the update request.</p>
<p id="p-0080" num="0079">In the meantime, if the execution plan executor <b>140</b> requests the addition of entry, the entry manager <b>150</b> determines whether or not the entry can be added in the memory <b>160</b>. If it is determined that the entry can not be added in the memory <b>160</b>, any one of the entries stored in the memory <b>160</b> is deleted, and then the new entry is added thereto.</p>
<p id="p-0081" num="0080">A method for managing the database according to one embodiment of the present invention will be explained with reference to <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0082" num="0081">First, the query with the requests for fetching the record included in the specific table and updating any one of the columns included in the corresponding record is received from the external server or manager terminal in step <b>300</b>. In one embodiment of the present invention, the query may use the SQL (Structured Query Language).</p>
<p id="p-0083" num="0082">At this time, the query with the requests for fetching the specific record and updating any one of the columns included in the corresponding record indicates the query which can perform the procedures of fetching the corresponding content and updating the click count of the corresponding content at the same time, with notice that the fetch request for the content in the database is necessarily accompanied with the update request of the click count for the corresponding content when the record corresponds to the content.</p>
<p id="p-0084" num="0083">Then, the parse tree is generated by parsing the received query in S<b>310</b>. In one embodiment of the present invention, if the received query is expressed in various types, the received query is transformed into one syntax type, and then the parse tree for the transformed syntax is generated.</p>
<p id="p-0085" num="0084">After that, the meaning examination for the generated parse tree is performed in S<b>320</b>. The meaning examination for the generated parse tree relates with whether or not the table or column expressed in the parse tree exists, and whether or not the data type of the column can be compatible with the operator. In one embodiment of the present invention, if the &#x201c;INCR( )&#x201d; function is included in the received query, it is possible to check at least any one of the following three: whether or not the column corresponding to the component of corresponding function is included in the corresponding table, whether or not the left-sided item has the right-sided item as the domain in the expression when the component is the path expression; and whether or not the data type of component is the integral type.</p>
<p id="p-0086" num="0085">On checking the validation of parse tree, the component for processing the function &#x201c;INCR(counter)&#x201d; included in the received query is added to the &#x201c;INCR(counter)&#x201d; function, whereby the &#x201c;INCR(counter)&#x201d; function is transformed into the function &#x201c;INCR(board, ID(counter))&#x201d;. In this cases &#x201c;board&#x201d; indicates the ID for the specific record included in the board table, and &#x201c;ID(counter)&#x201d; indicates the ID for the counter column.</p>
<p id="p-0087" num="0086">When it is determined that the parse tree for the received query is valid, the execution plan for fetching the corresponding record and updating the column included in the record is performed based on the corresponding parse tree in S<b>330</b>. In this case, the execution plan indicates the data architecture including the method for fetching the record from the specific table, the result record list, and whether or not there is the increment operation for the update-requested column.</p>
<p id="p-0088" num="0087">According to the generated execution plan, the execution plan is executed by fetching the corresponding record from the specific table, and updating the column value of the update-requested column among the columns of the corresponding record in S<b>340</b>.</p>
<p id="p-0089" num="0088">The procedure of executing the execution plan will be explained with reference to <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0090" num="0089">First, when the execution plan is generated, the transaction for the process of the corresponding query according to the generated execution plan is generated in S<b>400</b>. During the process for the generated transaction, the corresponding record is fetched and any one of the columns included in the corresponding record is updated. The detailed explanation about the transaction will be omitted since it is shown in the aforementioned part for explaining the execution plan generator.</p>
<p id="p-0091" num="0090">In order to process the record-fetching request in the generated transaction, the corresponding record is fetched from the table in S<b>410</b>. In one embodiment of the present invention, the access to the corresponding record in the table may be performed by the sequential-scanning method or index-scanning method. At this time, the IS-lock for the corresponding table is set and the S-lock for the corresponding record is set with starting the scanning of table. Then, the set IS-lock and S-lock are released with completion of the table scanning.</p>
<p id="p-0092" num="0091">Then, the sub-transaction for updating the column value of the update-requested column is generated in S<b>420</b>. That is, according as the sub-transaction is additionally generated in the transaction, the update of the column value is performed in the sub-transaction. In order to prevent the simultaneous access of data, the IX-lock is set for the table including the corresponding record, and the X-lock is set for the corresponding record with generation of the sub-transaction.</p>
<p id="p-0093" num="0092">Thereafter, the column value of the update-requested column is updated in the sub-transaction in S<b>430</b>. In more detail, after obtaining the column value recorded in the column of the record corresponding to the physical location of the update-requested column, the increment is applied to the obtained column value, thereby generating the updated record. Then, the updated record is overlapped with the original record so that the column value of the corresponding column is updated.</p>
<p id="p-0094" num="0093">When updating the column value of the update-requested column, the information about the updated time of the column value and the original column value can be stored as the log type in the database for provision against the case there is the rollback request received from the external server or manager terminal.</p>
<p id="p-0095" num="0094">When the update of column value is completed, the sub-transaction is completed so that the set locks are released in S<b>440</b>. To reflect the update result on the database <b>110</b>, the commit is requested in S<b>450</b>. When the commit is completed, the transaction for the process of query is completed in S<b>460</b>.</p>
<p id="p-0096" num="0095">In the aforementioned embodiment of the present invention, the update result of the update-requested column is directly reflected on the database. However, in order to prevent the system efficiency from being deteriorated, the updated column values may be temporarily stored in the memory, and reflected on the database at one time when the specific condition is satisfied.</p>
<p id="p-0097" num="0096">The method of temporarily storing the update column values in the memory and reflecting the temporarily stored result on the database at one time when the specific condition is satisfied will be explained with reference to <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0098" num="0097">First, the entry is generated in S<b>500</b>, wherein the entry includes one pair comprised of the ID of record included in the specific table and the ID of column included in the corresponding record. Then, the entry and the column value corresponding to the ID of column included in the corresponding entry are stored through the use of the hash table in S<b>510</b>.</p>
<p id="p-0099" num="0098">When the update request for any one of the columns included in the specific record is received in S<b>520</b>, it is determined whether or not the entry including the ID of the corresponding column exists in the memory in S<b>530</b>.</p>
<p id="p-0100" num="0099">Accordingly, when it is determined that there is no corresponding entry, it is checked whether or not the entry can be added to the memory in S<b>540</b>. If it is determined that the entry can be added to the memory, the entry is added in S<b>542</b>. If it is determined that the entry can not be added to the memory, any one of the entries stored in the memory is deleted in S<b>544</b>, and then the corresponding entry is added in <b>542</b>.</p>
<p id="p-0101" num="0100">In the meantime, if it is determined that the corresponding entry exists in S<b>530</b>, or the corresponding entry is added in S<b>542</b>, it is determined whether or not the specific condition for the column value matched with the corresponding entry is satisfied in S<b>550</b>. In one embodiment of the present invention, the specific condition is related with whether or not the column value matched with the corresponding entry is above the first reference value, or whether or not the column value matched with the corresponding entry is maintained for the time period longer than the second reference value from the finally-updated time point.</p>
<p id="p-0102" num="0101">When the specific condition is satisfied, the corresponding entry is deleted in S<b>560</b>, the column value matched with the deleted entry is updated, and then the updated column value is directly reflected on the database in S<b>570</b>.</p>
<p id="p-0103" num="0102">If the specific condition is not satisfied, the column value matched with the corresponding entry is updated on the memory, thereby processing the update request in S<b>580</b>.</p>
<p id="p-0104" num="0103">In the aforementioned embodiment of the present invention, after determining whether or not the specific condition is satisfied, the column value is updated. However, in the modified embodiment of the present invention, the column value is firstly updated, and then it is determined whether or not the updated column value satisfies the specific condition.</p>
<p id="p-0105" num="0104">Also, in the aforementioned embodiment of the present invention, the entry for the specific record and column is generated previously. However, in the modified embodiment of the present invention, instead of previously generating the entry, the record including the corresponding column and the entry for the corresponding column are generated when the update request for the specific column is received, and the corresponding entry is stored while being matched with the column value of the corresponding column.</p>
<p id="p-0106" num="0105">The aforementioned database-managing method can be implemented in type of programs executed by various computers. In this case, the programs to execute the database-managing method are stored in computer-readable record media, for example, hard-disc, CD-ROM, DVD, ROM, RAM or flash memory.</p>
<p id="p-0107" num="0106">According to the present invention, when the specific data is selected, the procedures of selecting the corresponding data and updating the click count of the corresponding data are performed at the same time, thereby enhancing the process speed of the data and maximizing the user's convenience.</p>
<p id="p-0108" num="0107">Also, when performing the update of the specific data, the lock for the data is set only in the sub-transaction for performing the update of the specific data, so that it is possible to decrease the locking duration for the data.</p>
<p id="p-0109" num="0108">When the specific data is updated, the update result is periodically reflected on the database instead of being reflected every time the update is performed, whereby the system efficiency can be improved with the decreased data input/output count.</p>
<p id="p-0110" num="0109">Although the preferred embodiments of the present invention have been disclosed for illustrative purposes, those skilled in the art will appreciate that various modifications, additions and substitutions are possible, without departing from the scope and spirit of the invention as disclosed in the accompanying claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer-implemented database-managing method comprising:
<claim-text>receiving and analyzing, by the computer, a single statement that comprises a fetch request for a record in a database table and an update request for updating at least one column;</claim-text>
<claim-text>generating an execution plan to execute the single statement, the execution plan including a locking time for preventing access to the record while the single statement is processed, the locking time ending once the single statement is processed and before the update request is made permanent;</claim-text>
<claim-text>matching an entry comprised of a record ID and a column ID with a column value corresponding to the column ID included in the entry, and storing the entry and column value matched with each other in a memory;</claim-text>
<claim-text>executing the execution plan by fetching the record in accordance with the fetch request and updating the at least one column in accordance with the update request, the executing including,
<claim-text>updating the column value matched with the entry according to the update request,</claim-text>
<claim-text>reflecting the column value kept in the memory on the database table in response to a specific condition being satisfied, and</claim-text>
<claim-text>updating a click count of content in the corresponding column; and</claim-text>
</claim-text>
<claim-text>presenting the record in accordance with the fetch request.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The computer-implemented database-managing method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the analyzing the statement comprises:
<claim-text>receiving the statement;</claim-text>
<claim-text>parsing the received statement; and</claim-text>
<claim-text>checking validation for the parsed statement.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The computer-implemented database-managing method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the analyzing the statement further comprises generating a parse tree for the statement through the use of parsing results after parsing the statement, the validation of the generated parse tree is checked in the checking the validation for the parsed statement, and the execution plan for the valid parse tree is generated in the generating the execution plan.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The computer-implemented database-managing method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the record comprises content in a specific bulletin board.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The computer-implemented database-managing method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the executing the execution plan comprises:
<claim-text>generating a transaction to execute the execution plan;</claim-text>
<claim-text>fetching the record from the database table;</claim-text>
<claim-text>obtaining a value recorded in at least one of the columns requested for the update among the fetched record;</claim-text>
<claim-text>updating the obtained value recorded in the column; and</claim-text>
<claim-text>completing the transaction by noticing completion of the update.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The computer-implemented database-managing method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the executing the execution plan further comprises:
<claim-text>generating and executing a sub-transaction to update the information recorded in the column.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The computer-implemented database-managing method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein locks for the database table and record are set during a period of processing the sub-transaction for the update of the column.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The computer-implemented database-managing method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the fetching the record is performed by a sequential-scanning method, an index-scanning method, or both the sequential-scanning method and the index-scanning method.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The computer-implemented database-managing method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein an index for the column and the value recorded in the column are updated in response to a determination that the index for the column exists in the execution plan.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The computer-implemented database-managing method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the column value is reflected on the database table in response to a determination that the column value kept in the memory is greater than a first reference value, or a determination that the column value is maintained for a time period longer than a second reference value from a finally-updated time point in the reflecting the column value.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The computer-implemented database-managing method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the entry and column value are stored through the use of a hash table.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The computer-implemented database-managing method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein updating the column value comprises determining whether the entry for the column exists, and updating the column value matched with the entry in response to a determination that the entry for the column exists.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The computer-implemented database-managing method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:
<claim-text>adding the entry for the column in response to a determination that there is no entry for the column; and</claim-text>
<claim-text>storing the column value of the column in the memory, the column value being matched with the added entry.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The computer-implemented database-managing method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the adding the entry comprises:
<claim-text>determining whether the entry can be added to the memory; and</claim-text>
<claim-text>adding the entry to the memory in response to a determination that the entry can be added to the memory.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. One or more computer-readable media having stored thereon a computer program that, when executed by one or more processors, causes the one or more processors to perform acts comprising:
<claim-text>receiving and analyzing a single statement that comprises a fetch request for a record in a database table and an update request for updating at least one column;</claim-text>
<claim-text>generating an execution plan to execute the analyzed statement, the execution plan including a locking time for preventing access to the record while the single statement is processed, the locking time ending once the single statement is processed and before the update request is made permanent;</claim-text>
<claim-text>matching an entry comprised of a record ID and a column ID with a column value corresponding to the column ID included in the entry, and storing the entry and column value matched with each other in a memory;</claim-text>
<claim-text>executing the execution plan by fetching the record in accordance with the fetch request and updating the at least one column according to the update request, wherein executing the execution plan includes,
<claim-text>generating a transaction for updating after fetching the record;</claim-text>
<claim-text>updating a click count of content in the corresponding column;</claim-text>
<claim-text>updating the value recorded in the column;</claim-text>
<claim-text>updating the column value matched with the entry according to the update request,</claim-text>
<claim-text>reflecting the column value kept in the memory on the database table in response to a specific condition being satisfied; and</claim-text>
<claim-text>completing the transaction after updating, wherein a lock for the database table and record is set during the transaction for updating; and</claim-text>
</claim-text>
<claim-text>presenting the record in accordance with the fetch request.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A database-managing system comprising:
<claim-text>a processor; and</claim-text>
<claim-text>a memory including instructions, which when executed by the processor, cause the processor to implement:
<claim-text>a query analyzer configured to receive and analyze a single statement that comprises a fetch request for a record in a database table and an update request for updating at least one column;</claim-text>
<claim-text>an execution plan generator configured to generate an execution plan to execute the analyzed statement, the generated execution plan including a locking time for preventing access to the record while the single statement is processed, the locking time ending once the single statement is processed and before the update request is made permanent;</claim-text>
<claim-text>an entry manager configured to match an entry comprised of a record ID and a column ID with the column value corresponding to the column ID included in the entry, and configured to store the entry and column value matched with each other in a memory;</claim-text>
<claim-text>an execution plan executor configured to execute the execution plan by fetching the record in accordance with the fetch request and updating the at least one column according to the update request, and during the updating the execution plan executor is configured to
<claim-text>update the column value matched with the entry for the column in the memory,</claim-text>
<claim-text>reflect the column value kept in the memory on the database table in response to a determination that a specific condition is satisfied, and</claim-text>
<claim-text>update a click count of content in the corresponding column; and</claim-text>
</claim-text>
<claim-text>a presenter configured to present the record in accordance with the fetch request.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The database-managing system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the query analyzer comprises:
<claim-text>a query receiver configured to receive the statement;</claim-text>
<claim-text>a parser configured to parse the statement received by the query receiver; and</claim-text>
<claim-text>a validation checker configured to check whether or not the parsed statement is valid,</claim-text>
<claim-text>wherein the execution plan generator is configured to generate the execution plan for the statement determined as valid by the validation checker.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The database-managing system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the parser is configured to generate a parse tree for the statement through the use of parsing results, the validation checker is configured to check validation for the parse tree generated by the parser, and the execution plan generator is configured to generate an execution plan for the valid parse tree among the parse trees.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The database-managing system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the execution plan executor is configured to generate a transaction to execute the execution plan, configured to fetch the record from the database table in the transaction, configured to obtain a value recorded in the column among the fetched records, and configured to update the obtained value recorded in the column.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The database-managing system of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the execution plan executor is configured to generate a sub-transaction for the update of the value recorded in the column during a period of processing the transaction, and is configured to perform the update of the value recorded in the column in the sub-transaction.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The database-managing system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the execution plan executor is configured to set a lock for the database table and record during a period of processing the sub-transaction.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The database-managing system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the execution plan executor is configured to reflect the column value on the database table in response to a determination that the column value kept in the memory is larger than a first reference value, or a determination that the column value is maintained for a time period longer than a second reference value from a finally-updated time point.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The database-managing system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the entry manager is configured to store the entry and column value in the memory through the use of a hash table.</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The database-managing system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the execution plan executor is configured to determine whether the entry for the column exists, and configured to provide the entry-addition request for the column to the entry manager in response to a determination that there is no entry for the column; and the entry manager is configured to add the entry for the column corresponding to the entry-addition request.</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The database-managing system of <claim-ref idref="CLM-00024">claim 24</claim-ref>, wherein the entry manager is configured to determine whether the entry can be added to the entry in response to receiving the entry-addition request from the execution plan executor; configured to delete any one of the entries stored in the memory in response to a determination that the entry cannot be added to the memory; and configured to add the entry for the column to the memory.</claim-text>
</claim>
</claims>
</us-patent-grant>
