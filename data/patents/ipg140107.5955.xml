<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627066-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627066</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13288116</doc-number>
<date>20111103</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>110</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>29</main-group>
<subgroup>06</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>713157</main-classification>
</classification-national>
<invention-title id="d2e53">Processing a dispersed storage network access request utilizing certificate chain validation information</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4092732</doc-number>
<kind>A</kind>
<name>Ouchi</name>
<date>19780500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5454101</doc-number>
<kind>A</kind>
<name>Mackay et al.</name>
<date>19950900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5485474</doc-number>
<kind>A</kind>
<name>Rabin</name>
<date>19960100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5774643</doc-number>
<kind>A</kind>
<name>Lubbers et al.</name>
<date>19980600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>5802364</doc-number>
<kind>A</kind>
<name>Senator et al.</name>
<date>19980900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>5809285</doc-number>
<kind>A</kind>
<name>Hilland</name>
<date>19980900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>5890156</doc-number>
<kind>A</kind>
<name>Rekieta et al.</name>
<date>19990300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>5987622</doc-number>
<kind>A</kind>
<name>Lo Verso et al.</name>
<date>19991100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>5991414</doc-number>
<kind>A</kind>
<name>Garay et al.</name>
<date>19991100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6012159</doc-number>
<kind>A</kind>
<name>Fischer et al.</name>
<date>20000100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6058454</doc-number>
<kind>A</kind>
<name>Gerlach et al.</name>
<date>20000500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>6088805</doc-number>
<kind>A</kind>
<name>Davis et al.</name>
<date>20000700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 10</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>6128277</doc-number>
<kind>A</kind>
<name>Bruck et al.</name>
<date>20001000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>6175571</doc-number>
<kind>B1</kind>
<name>Haddock et al.</name>
<date>20010100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>6192472</doc-number>
<kind>B1</kind>
<name>Garay et al.</name>
<date>20010200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>6256688</doc-number>
<kind>B1</kind>
<name>Suetaka et al.</name>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>6272658</doc-number>
<kind>B1</kind>
<name>Steele et al.</name>
<date>20010800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>6301604</doc-number>
<kind>B1</kind>
<name>Nojima</name>
<date>20011000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>6356949</doc-number>
<kind>B1</kind>
<name>Katsandres et al.</name>
<date>20020300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>6366995</doc-number>
<kind>B1</kind>
<name>Vilkov et al.</name>
<date>20020400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>6374336</doc-number>
<kind>B1</kind>
<name>Peters et al.</name>
<date>20020400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>6415373</doc-number>
<kind>B1</kind>
<name>Peters et al.</name>
<date>20020700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>6418539</doc-number>
<kind>B1</kind>
<name>Walker</name>
<date>20020700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>6449688</doc-number>
<kind>B1</kind>
<name>Peters et al.</name>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>6567948</doc-number>
<kind>B2</kind>
<name>Steele et al.</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>6571282</doc-number>
<kind>B1</kind>
<name>Bowman-Amuah</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00027">
<document-id>
<country>US</country>
<doc-number>6609223</doc-number>
<kind>B1</kind>
<name>Wolfgang</name>
<date>20030800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00028">
<document-id>
<country>US</country>
<doc-number>6718361</doc-number>
<kind>B1</kind>
<name>Basani et al.</name>
<date>20040400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00029">
<document-id>
<country>US</country>
<doc-number>6760808</doc-number>
<kind>B2</kind>
<name>Peters et al.</name>
<date>20040700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00030">
<document-id>
<country>US</country>
<doc-number>6785768</doc-number>
<kind>B2</kind>
<name>Peters et al.</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00031">
<document-id>
<country>US</country>
<doc-number>6785783</doc-number>
<kind>B2</kind>
<name>Buckland</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00032">
<document-id>
<country>US</country>
<doc-number>6826711</doc-number>
<kind>B2</kind>
<name>Moulton et al.</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00033">
<document-id>
<country>US</country>
<doc-number>6879596</doc-number>
<kind>B1</kind>
<name>Dooply</name>
<date>20050400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00034">
<document-id>
<country>US</country>
<doc-number>7003688</doc-number>
<kind>B1</kind>
<name>Pittelkow et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00035">
<document-id>
<country>US</country>
<doc-number>7024451</doc-number>
<kind>B2</kind>
<name>Jorgenson</name>
<date>20060400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00036">
<document-id>
<country>US</country>
<doc-number>7024609</doc-number>
<kind>B2</kind>
<name>Wolfgang et al.</name>
<date>20060400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00037">
<document-id>
<country>US</country>
<doc-number>7080101</doc-number>
<kind>B1</kind>
<name>Watson et al.</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00038">
<document-id>
<country>US</country>
<doc-number>7103824</doc-number>
<kind>B2</kind>
<name>Halford</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00039">
<document-id>
<country>US</country>
<doc-number>7103915</doc-number>
<kind>B2</kind>
<name>Redlich et al.</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00040">
<document-id>
<country>US</country>
<doc-number>7111115</doc-number>
<kind>B2</kind>
<name>Peters et al.</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00041">
<document-id>
<country>US</country>
<doc-number>7140044</doc-number>
<kind>B2</kind>
<name>Redlich et al.</name>
<date>20061100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00042">
<document-id>
<country>US</country>
<doc-number>7146644</doc-number>
<kind>B2</kind>
<name>Redlich et al.</name>
<date>20061200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00043">
<document-id>
<country>US</country>
<doc-number>7171493</doc-number>
<kind>B2</kind>
<name>Shu et al.</name>
<date>20070100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00044">
<document-id>
<country>US</country>
<doc-number>7222133</doc-number>
<kind>B1</kind>
<name>Raipurkar et al.</name>
<date>20070500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00045">
<document-id>
<country>US</country>
<doc-number>7240236</doc-number>
<kind>B2</kind>
<name>Cutts et al.</name>
<date>20070700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00046">
<document-id>
<country>US</country>
<doc-number>7272613</doc-number>
<kind>B2</kind>
<name>Sim et al.</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00047">
<document-id>
<country>US</country>
<doc-number>2002/0062422</doc-number>
<kind>A1</kind>
<name>Butterworth et al.</name>
<date>20020500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00048">
<document-id>
<country>US</country>
<doc-number>2002/0166079</doc-number>
<kind>A1</kind>
<name>Ulrich et al.</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00049">
<document-id>
<country>US</country>
<doc-number>2003/0018927</doc-number>
<kind>A1</kind>
<name>Gadir et al.</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00050">
<document-id>
<country>US</country>
<doc-number>2003/0037261</doc-number>
<kind>A1</kind>
<name>Meffert et al.</name>
<date>20030200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00051">
<document-id>
<country>US</country>
<doc-number>2003/0065617</doc-number>
<kind>A1</kind>
<name>Watkins et al.</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00052">
<document-id>
<country>US</country>
<doc-number>2003/0084020</doc-number>
<kind>A1</kind>
<name>Shu</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00053">
<document-id>
<country>US</country>
<doc-number>2004/0024963</doc-number>
<kind>A1</kind>
<name>Talagala et al.</name>
<date>20040200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00054">
<document-id>
<country>US</country>
<doc-number>2004/0122917</doc-number>
<kind>A1</kind>
<name>Menon et al.</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00055">
<document-id>
<country>US</country>
<doc-number>2004/0215998</doc-number>
<kind>A1</kind>
<name>Buxton et al.</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00056">
<document-id>
<country>US</country>
<doc-number>2004/0228493</doc-number>
<kind>A1</kind>
<name>Ma et al.</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00057">
<document-id>
<country>US</country>
<doc-number>2005/0100022</doc-number>
<kind>A1</kind>
<name>Ramprashad</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00058">
<document-id>
<country>US</country>
<doc-number>2005/0114594</doc-number>
<kind>A1</kind>
<name>Corbett et al.</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00059">
<document-id>
<country>US</country>
<doc-number>2005/0125593</doc-number>
<kind>A1</kind>
<name>Karpoff et al.</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00060">
<document-id>
<country>US</country>
<doc-number>2005/0131993</doc-number>
<kind>A1</kind>
<name>Fatula, Jr.</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00061">
<document-id>
<country>US</country>
<doc-number>2005/0132070</doc-number>
<kind>A1</kind>
<name>Redlich et al.</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00062">
<document-id>
<country>US</country>
<doc-number>2005/0144382</doc-number>
<kind>A1</kind>
<name>Schmisseur</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00063">
<document-id>
<country>US</country>
<doc-number>2005/0229069</doc-number>
<kind>A1</kind>
<name>Hassner</name>
<date>20051000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00064">
<document-id>
<country>US</country>
<doc-number>2006/0047907</doc-number>
<kind>A1</kind>
<name>Shiga et al.</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00065">
<document-id>
<country>US</country>
<doc-number>2006/0136448</doc-number>
<kind>A1</kind>
<name>Cialini et al.</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00066">
<document-id>
<country>US</country>
<doc-number>2006/0156059</doc-number>
<kind>A1</kind>
<name>Kitamura</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00067">
<document-id>
<country>US</country>
<doc-number>2006/0224603</doc-number>
<kind>A1</kind>
<name>Correll, Jr.</name>
<date>20061000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00068">
<document-id>
<country>US</country>
<doc-number>2007/0079081</doc-number>
<kind>A1</kind>
<name>Gladwin et al.</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00069">
<document-id>
<country>US</country>
<doc-number>2007/0079082</doc-number>
<kind>A1</kind>
<name>Gladwin et al.</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00070">
<document-id>
<country>US</country>
<doc-number>2007/0079083</doc-number>
<kind>A1</kind>
<name>Gladwin et al.</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00071">
<document-id>
<country>US</country>
<doc-number>2007/0088970</doc-number>
<kind>A1</kind>
<name>Buxton et al.</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00072">
<document-id>
<country>US</country>
<doc-number>2007/0174192</doc-number>
<kind>A1</kind>
<name>Gladwin et al.</name>
<date>20070700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00073">
<document-id>
<country>US</country>
<doc-number>2007/0214285</doc-number>
<kind>A1</kind>
<name>Au et al.</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00074">
<document-id>
<country>US</country>
<doc-number>2007/0234110</doc-number>
<kind>A1</kind>
<name>Soran et al.</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00075">
<document-id>
<country>US</country>
<doc-number>2007/0283167</doc-number>
<kind>A1</kind>
<name>Venters, III et al.</name>
<date>20071200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00076">
<document-id>
<country>US</country>
<doc-number>2009/0094251</doc-number>
<kind>A1</kind>
<name>Gladwin et al.</name>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00077">
<document-id>
<country>US</country>
<doc-number>2009/0094318</doc-number>
<kind>A1</kind>
<name>Gladwin et al.</name>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00078">
<document-id>
<country>US</country>
<doc-number>2010/0023524</doc-number>
<kind>A1</kind>
<name>Gladwin et al.</name>
<date>20100100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00079">
<document-id>
<country>US</country>
<doc-number>2012/0167187</doc-number>
<kind>A1</kind>
<name>Smith et al.</name>
<date>20120600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726  7</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00080">
<othercit>Webopedia (Aug. 11, 2004) definition of &#x201c;Distributed File System&#x201d;.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00081">
<othercit>Shamir; How to Share a Secret; Communications of the ACM; vol. 22, No. 11; Nov. 1979; pp. 612-613.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00082">
<othercit>Rabin; Efficient Dispersal of Information for Security, Load Balancing, and Fault Tolerance; Journal of the Association for Computer Machinery; vol. 36, No. 2; Apr. 1989; pp. 335-348.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00083">
<othercit>Chung; An Automatic Data Segmentation Method for 3D Measured Data Points; National Taiwan University; pp. 1-8; 1998.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00084">
<othercit>Plank, T1: Erasure Codes for Storage Applications; FAST2005, 4th Usenix Conference on File Storage Technologies; Dec. 13-16, 2005; pp. 1-74.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00085">
<othercit>Wildi; Java iSCSi Initiator; Master Thesis; Department of Computer and Information Science, University of Konstanz; Feb. 2007; 60 pgs.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00086">
<othercit>Legg; Lightweight Directory Access Protocol (LDAP): Syntaxes and Matching Rules; IETF Network Working Group; RFC 4517; Jun. 2006; pp. 1-50.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00087">
<othercit>Zeilenga; Lightweight Directory Access Protocol (LDAP): Internationalized String Preparation; IETF Network Working Group; RFC 4518; Jun. 2006; pp. 1-14.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00088">
<othercit>Smith; Lightweight Directory Access Protocol (LDAP): Uniform Resource Locator; IETF Network Working Group; RFC 4516; Jun. 2006; pp. 1-15.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00089">
<othercit>Smith; Lightweight Directory Access Protocol (LDAP): String Representation of Search Filters; IETF Network Working Group; RFC 4515; Jun. 2006; pp. 1-12.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00090">
<othercit>Zeilenga; Lightweight Directory Access Protocol (LDAP): Directory Information Models; IETF Network Working Group; RFC 4512; Jun. 2006; pp. 1-49.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00091">
<othercit>Sciberras; Lightweight Directory Access Protocol (LDAP): Schema for User Applications; IETF Network Working Group; RFC 4519; Jun. 2006; pp. 1-33.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00092">
<othercit>Harrison; Lightweight Directory Access Protocol (LDAP): Authentication Methods and Security Mechanisms; IETF Network Working Group; RFC 4513; Jun. 2006; pp. 1-32.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00093">
<othercit>Zeilenga; Lightweight Directory Access Protocol (LDAP): Technical Specification Road Map; IETF Network Working Group; RFC 4510; Jun. 2006; pp. 1-8.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00094">
<othercit>Zeilenga; Lightweight Directory Access Protocol (LDAP): String Representation of Distinguished Names; IETF Network Working Group; RFC 4514; Jun. 2006; pp. 1-15.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00095">
<othercit>Sermersheim; Lightweight Directory Access Protocol (LDAP): The Protocol; IETF Network Working Group; RFC 4511; Jun. 2006; pp. 1-68.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00096">
<othercit>Satran, et al.; Internet Small Computer Systems Interface (iSCSI); IETF Network Working Group; RFC 3720; Apr. 2004; pp. 1-257.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00097">
<othercit>Xin, et al.; Evaluation of Distributed Recovery in Large-Scale Storage Systems; 13th IEEE International Symposium on High Performance Distributed Computing; Jun. 2004; pp. 172-181.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>18</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>713157</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>9</number-of-drawing-sheets>
<number-of-figures>15</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20130117560</doc-number>
<kind>A1</kind>
<date>20130509</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Resch</last-name>
<first-name>Jason K.</first-name>
<address>
<city>Chicago</city>
<state>IL</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Leggette</last-name>
<first-name>Wesley</first-name>
<address>
<city>Oak Park</city>
<state>IL</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Cilfone</last-name>
<first-name>Bart</first-name>
<address>
<city>Chicago</city>
<state>IL</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Resch</last-name>
<first-name>Jason K.</first-name>
<address>
<city>Chicago</city>
<state>IL</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Leggette</last-name>
<first-name>Wesley</first-name>
<address>
<city>Oak Park</city>
<state>IL</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Cilfone</last-name>
<first-name>Bart</first-name>
<address>
<city>Chicago</city>
<state>IL</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Garlick &#x26; Markison</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>Markison</last-name>
<first-name>Timothy W.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Cleversafe, Inc.</orgname>
<role>02</role>
<address>
<city>Chicago</city>
<state>IL</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Orgad</last-name>
<first-name>Edan</first-name>
<department>2439</department>
</primary-examiner>
<assistant-examiner>
<last-name>Wang</last-name>
<first-name>Harris</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method begins by a processing module receiving a dispersed storage network (DSN) access request that includes a requester identifier (ID), wherein the requester ID is associated with a certificate chain. When the certificate chain is valid, the method continues with the processing module accessing registry information for the DSN. The method continues with the processing module identifying one of a plurality of access control lists based on at least one of information associated with the requester ID and information associated with the certificate chain, identifying one or more entries of the one of the plurality of access control lists based on the information associated with the certificate chain to produce one or more identified entries, and generating, for the DSN access request, permissions from one or more sets of permissions associated with the one or more identified entries.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="168.91mm" wi="197.02mm" file="US08627066-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="210.06mm" wi="160.61mm" orientation="landscape" file="US08627066-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="223.52mm" wi="173.65mm" orientation="landscape" file="US08627066-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="248.41mm" wi="195.75mm" orientation="landscape" file="US08627066-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="215.90mm" wi="172.04mm" orientation="landscape" file="US08627066-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="236.39mm" wi="167.05mm" orientation="landscape" file="US08627066-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="203.79mm" wi="177.38mm" orientation="landscape" file="US08627066-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="145.12mm" wi="118.36mm" orientation="landscape" file="US08627066-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="233.93mm" wi="144.02mm" orientation="landscape" file="US08627066-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="196.68mm" wi="183.39mm" orientation="landscape" file="US08627066-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?GOVINT description="Government Interest" end="lead"?>
<heading id="h-0001" level="1">STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT</heading>
<p id="p-0002" num="0001">This invention was made with Government support under Contract No. 2009*0674524*000 awarded by the Central Intelligence Agency. The Government has certain rights in the invention.</p>
<?GOVINT description="Government Interest" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">CROSS REFERENCE TO RELATED PATENTS</heading>
<p id="p-0003" num="0002">Not applicable</p>
<heading id="h-0003" level="1">INCORPORATION-BY-REFERENCE OF MATERIAL SUBMITTED ON A COMPACT DISC</heading>
<p id="p-0004" num="0003">Not applicable</p>
<heading id="h-0004" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0005" num="0004">1. Technical Field of the Invention</p>
<p id="p-0006" num="0005">This invention relates generally to computing systems and more particularly to data storage solutions within such computing systems.</p>
<p id="p-0007" num="0006">2. Description of Related Art</p>
<p id="p-0008" num="0007">Computers are known to communicate, process, and store data. Such computers range from wireless smart phones to data centers that support millions of web searches, stock trades, or on-line purchases every day. In general, a computing system generates data and/or manipulates data from one form into another. For instance, an image sensor of the computing system generates raw picture data and, using an image compression program (e.g., JPEG, MPEG, etc.), the computing system manipulates the raw picture data into a standardized compressed image.</p>
<p id="p-0009" num="0008">With continued advances in processing speed and communication speed, computers are capable of processing real time multimedia data for applications ranging from simple voice communications to streaming high definition video. As such, general-purpose information appliances are replacing purpose-built communications devices (e.g., a telephone). For example, smart phones can support telephony communications but they are also capable of text messaging and accessing the internet to perform functions including email, web browsing, remote applications access, and media communications (e.g., telephony voice, image transfer, music files, video files, real time video streaming. etc.).</p>
<p id="p-0010" num="0009">Each type of computer is constructed and operates in accordance with one or more communication, processing, and storage standards. As a result of standardization and with advances in technology, more and more information content is being converted into digital formats. For example, more digital cameras are now being sold than film cameras, thus producing more digital pictures. As another example, web-based programming is becoming an alternative to over the air television broadcasts and/or cable broadcasts. As further examples, papers, books, video entertainment, home video, etc. are now being stored digitally, which increases the demand on the storage function of computers.</p>
<p id="p-0011" num="0010">A typical computer storage system includes one or more memory devices aligned with the needs of the various operational aspects of the computer's processing and communication functions. Generally, the immediacy of access dictates what type of memory device is used. For example, random access memory (RAM) memory can be accessed in any random order with a constant response time, thus it is typically used for cache memory and main memory. By contrast, memory device technologies that require physical movement such as magnetic disks, tapes, and optical discs, have a variable response time as the physical movement can take longer than the data transfer, thus they are typically used for secondary memory (e.g., hard drive, backup memory, etc.).</p>
<p id="p-0012" num="0011">A computer's storage system will be compliant with one or more computer storage standards that include, but are not limited to, network file system (NFS), flash file system (FFS), disk file system (DFS), small computer system interface (SCSI), internet small computer system interface (iSCSI), file transfer protocol (FTP), and web-based distributed authoring and versioning (WebDAV). These standards specify the data storage format (e.g., files, data objects, data blocks, directories, etc.) and interfacing between the computer's processing function and its storage system, which is a primary function of the computer's memory controller.</p>
<p id="p-0013" num="0012">Despite the standardization of the computer and its storage system, memory devices fail; especially commercial grade memory devices that utilize technologies incorporating physical movement (e.g., a disc drive). For example, it is fairly common for a disc drive to routinely suffer from bit level corruption and to completely fail after three years of use. One solution is to use a higher-grade disc drive, which adds significant cost to a computer.</p>
<p id="p-0014" num="0013">Another solution is to utilize multiple levels of redundant disc drives to replicate the data into two or more copies. One such redundant drive approach is called redundant array of independent discs (RAID). In a RAID device, a RAID controller adds parity data to the original data before storing it across the array. The parity data is calculated from the original data such that the failure of a disc will not result in the loss of the original data. For example, RAID 5 uses three discs to protect data from the failure of a single disc. The parity data, and associated redundancy overhead data, reduces the storage capacity of three independent discs by one third (e.g., n&#x2212;1=capacity). RAID 6 can recover from a loss of two discs and requires a minimum of four discs with a storage capacity of n&#x2212;2.</p>
<p id="p-0015" num="0014">While RAID addresses the memory device failure issue, it is not without its own failures issues that affect its effectiveness, efficiency and security. For instance, as more discs are added to the array, the probability of a disc failure increases, which increases the demand for maintenance. For example, when a disc fails, it needs to be manually replaced before another disc fails and the data stored in the RAID device is lost. To reduce the risk of data loss, data on a RAID device is typically copied on to one or more other RAID devices. While this addresses the loss of data issue, it raises a security issue since multiple copies of data are available, which increases the chances of unauthorized access. Further, as the amount of data being stored grows, the overhead of RAID devices becomes a non-trivial efficiency issue.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWING(S)</heading>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 1</figref> is a schematic block diagram of an embodiment of a computing system in accordance with the invention;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 2</figref> is a schematic block diagram of an embodiment of a computing core in accordance with the invention;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 3</figref> is a schematic block diagram of an embodiment of a distributed storage processing unit in accordance with the invention;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 4</figref> is a schematic block diagram of an embodiment of a grid module in accordance with the invention;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 5</figref> is a diagram of an example embodiment of error coded data slice creation in accordance with the invention;</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 6A</figref> is a schematic block diagram of another embodiment of a computing system in accordance with the invention;</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 6B</figref> is a diagram illustrating an example of a digital certificate acquisition sequence in accordance with the invention;</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 6C</figref> is a diagram illustrating another example of a digital certificate acquisition sequence in accordance with the invention;</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 6D</figref> is a diagram illustrating an example of realm to certificate authority relationships in accordance with the invention;</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 6E</figref> is a diagram illustrating an example of registry information in accordance with the invention;</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 7</figref> is a diagram illustrating a digital certificate structure in accordance with the invention;</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 8A</figref> is a diagram illustrating an example of a certificate chain in accordance with the invention;</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 8B</figref> is another diagram illustrating another example of a certificate chain in accordance with the invention;</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 8C</figref> is another diagram illustrating another example of a certificate chain in accordance with the invention; and</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 9</figref> is a flowchart illustrating an example of processing an access request in accordance with the invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 1</figref> is a schematic block diagram of a computing system <b>10</b> that includes one or more of a first type of user devices <b>12</b>, one or more of a second type of user devices <b>14</b>, at least one distributed storage (DS) processing unit <b>16</b>, at least one DS managing unit <b>18</b>, at least one storage integrity processing unit <b>20</b>, and a distributed storage network (DSN) memory <b>22</b> coupled via a network <b>24</b>. The network <b>24</b> may include one or more wireless and/or wire lined communication systems; one or more private intranet systems and/or public internet systems; and/or one or more local area networks (LAN) and/or wide area networks (WAN).</p>
<p id="p-0032" num="0031">The DSN memory <b>22</b> includes a plurality of distributed storage (DS) units <b>36</b> for storing data of the system. Each of the DS units <b>36</b> includes a processing module and memory and may be located at a geographically different site than the other DS units (e.g., one in Chicago, one in Milwaukee, etc.).</p>
<p id="p-0033" num="0032">Each of the user devices <b>12</b>-<b>14</b>, the DS processing unit <b>16</b>, the DS managing unit <b>18</b>, and the storage integrity processing unit <b>20</b> may be a portable computing device (e.g., a social networking device, a gaming device, a cell phone, a smart phone, a personal digital assistant, a digital music player, a digital video player, a laptop computer, a handheld computer, a video game controller, and/or any other portable device that includes a computing core) and/or a fixed computing device (e.g., a personal computer, a computer server, a cable set-top box, a satellite receiver, a television set, a printer, a fax machine, home entertainment equipment, a video game console, and/or any type of home or office computing equipment). Such a portable or fixed computing device includes a computing core <b>26</b> and one or more interfaces <b>30</b>, <b>32</b>, and/or <b>33</b>. An embodiment of the computing core <b>26</b> will be described with reference to <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="p-0034" num="0033">With respect to the interfaces, each of the interfaces <b>30</b>, <b>32</b>, and <b>33</b> includes software and/or hardware to support one or more communication links via the network <b>24</b> and/or directly. For example, interfaces <b>30</b> support a communication link (wired, wireless, direct, via a LAN, via the network <b>24</b>, etc.) between the first type of user device <b>14</b> and the DS processing unit <b>16</b>. As another example, DSN interface <b>32</b> supports a plurality of communication links via the network <b>24</b> between the DSN memory <b>22</b> and the DS processing unit <b>16</b>, the first type of user device <b>12</b>, and/or the storage integrity processing unit <b>20</b>. As yet another example, interface <b>33</b> supports a communication link between the DS managing unit <b>18</b> and any one of the other devices and/or units <b>12</b>, <b>14</b>, <b>16</b>, <b>20</b>, and/or <b>22</b> via the network <b>24</b>.</p>
<p id="p-0035" num="0034">In general and with respect to data storage, the system <b>10</b> supports three primary functions: distributed network data storage management, distributed data storage and retrieval, and data storage integrity verification. In accordance with these three primary functions, data can be distributedly stored in a plurality of physically different locations and subsequently retrieved in a reliable and secure manner regardless of failures of individual storage devices, failures of network equipment, the duration of storage, the amount of data being stored, attempts at hacking the data, etc.</p>
<p id="p-0036" num="0035">The DS managing unit <b>18</b> performs distributed network data storage management functions, which include establishing distributed data storage parameters, performing network operations, performing network administration, and/or performing network maintenance. The DS managing unit <b>18</b> establishes the distributed data storage parameters (e.g., allocation of virtual DSN memory space, distributed storage parameters, security parameters, billing information, user profile information, etc.) for one or more of the user devices <b>12</b>-<b>14</b> (e.g., established for individual devices, established for a user group of devices, established for public access by the user devices, etc.). For example, the DS managing unit <b>18</b> coordinates the creation of a vault (e.g., a virtual memory block) within the DSN memory <b>22</b> for a user device (for a group of devices, or for public access). The DS managing unit <b>18</b> also determines the distributed data storage parameters for the vault. In particular, the DS managing unit <b>18</b> determines a number of slices (e.g., the number that a data segment of a data file and/or data block is partitioned into for distributed storage) and a read threshold value (e.g., the minimum number of slices required to reconstruct the data segment).</p>
<p id="p-0037" num="0036">As another example, the DS managing module <b>18</b> creates and stores, locally or within the DSN memory <b>22</b>, user profile information. The user profile information includes one or more of authentication information, permissions, and/or the security parameters. The security parameters may include one or more of encryption/decryption scheme, one or more encryption keys, key generation scheme, and data encoding/decoding scheme.</p>
<p id="p-0038" num="0037">As yet another example, the DS managing unit <b>18</b> creates billing information for a particular user, user group, vault access, public vault access, etc. For instance, the DS managing unit <b>18</b> tracks the number of times a user accesses a private vault and/or public vaults, which can be used to generate a per-access bill. In another instance, the DS managing unit <b>18</b> tracks the amount of data stored and/or retrieved by a user device and/or a user group, which can be used to generate a per-data-amount bill.</p>
<p id="p-0039" num="0038">The DS managing unit <b>18</b> also performs network operations, network administration, and/or network maintenance. As at least part of performing the network operations and/or administration, the DS managing unit <b>18</b> monitors performance of the devices and/or units of the system <b>10</b> for potential failures, determines the devices and/or unit's activation status, determines the devices' and/or units' loading, and any other system level operation that affects the performance level of the system <b>10</b>. For example, the DS managing unit <b>18</b> receives and aggregates network management alarms, alerts, errors, status information, performance information, and messages from the devices <b>12</b>-<b>14</b> and/or the units <b>16</b>, <b>20</b>, <b>22</b>. For example, the DS managing unit <b>18</b> receives a simple network management protocol (SNMP) message regarding the status of the DS processing unit <b>16</b>.</p>
<p id="p-0040" num="0039">The DS managing unit <b>18</b> performs the network maintenance by identifying equipment within the system <b>10</b> that needs replacing, upgrading, repairing, and/or expanding. For example, the DS managing unit <b>18</b> determines that the DSN memory <b>22</b> needs more DS units <b>36</b> or that one or more of the DS units <b>36</b> needs updating.</p>
<p id="p-0041" num="0040">The second primary function (i.e., distributed data storage and retrieval) begins and ends with a user device <b>12</b>-<b>14</b>. For instance, if a second type of user device <b>14</b> has a data file <b>38</b> and/or data block <b>40</b> to store in the DSN memory <b>22</b>, it send the data file <b>38</b> and/or data block <b>40</b> to the DS processing unit <b>16</b> via its interface <b>30</b>. As will be described in greater detail with reference to <figref idref="DRAWINGS">FIG. 2</figref>, the interface <b>30</b> functions to mimic a conventional operating system (OS) file system interface (e.g., network file system (NFS), flash file system (FFS), disk file system (DFS), file transfer protocol (FTP), web-based distributed authoring and versioning (WebDAV), etc.) and/or a block memory interface (e.g., small computer system interface (SCSI), internet small computer system interface (iSCSI), etc.). In addition, the interface <b>30</b> may attach a user identification code (ID) to the data file <b>38</b> and/or data block <b>40</b>.</p>
<p id="p-0042" num="0041">The DS processing unit <b>16</b> receives the data file <b>38</b> and/or data block <b>40</b> via its interface <b>30</b> and performs a distributed storage (DS) process <b>34</b> thereon (e.g., an error coding dispersal storage function). The DS processing <b>34</b> begins by partitioning the data file <b>38</b> and/or data block <b>40</b> into one or more data segments, which is represented as Y data segments. For example, the DS processing <b>34</b> may partition the data file <b>38</b> and/or data block <b>40</b> into a fixed byte size segment (e.g., 2<sup>1 </sup>to 2<sup>n </sup>bytes, where n=&#x3e;2) or a variable byte size (e.g., change byte size from segment to segment, or from groups of segments to groups of segments, etc.).</p>
<p id="p-0043" num="0042">For each of the Y data segments, the DS processing <b>34</b> error encodes (e.g., forward error correction (FEC), information dispersal algorithm, or error correction coding) and slices (or slices then error encodes) the data segment into a plurality of error coded (EC) data slices <b>42</b>-<b>48</b>, which is represented as X slices per data segment. The number of slices (X) per segment, which corresponds to a number of pillars n, is set in accordance with the distributed data storage parameters and the error coding scheme. For example, if a Reed-Solomon (or other FEC scheme) is used in an n/k system, then a data segment is divided into n slices, where k number of slices is needed to reconstruct the original data (i.e., k is the threshold). As a few specific examples, the n/k factor may be 5/3; 6/4; 8/6; 8/5; 16/10.</p>
<p id="p-0044" num="0043">For each slice <b>42</b>-<b>48</b>, the DS processing unit <b>16</b> creates a unique slice name and appends it to the corresponding slice <b>42</b>-<b>48</b>. The slice name includes universal DSN memory addressing routing information (e.g., virtual memory addresses in the DSN memory <b>22</b>) and user-specific information (e.g., user ID, file name, data block identifier, etc.).</p>
<p id="p-0045" num="0044">The DS processing unit <b>16</b> transmits the plurality of EC slices <b>42</b>-<b>48</b> to a plurality of DS units <b>36</b> of the DSN memory <b>22</b> via the DSN interface <b>32</b> and the network <b>24</b>. The DSN interface <b>32</b> formats each of the slices for transmission via the network <b>24</b>. For example, the DSN interface <b>32</b> may utilize an internet protocol (e.g., TCP/IP, etc.) to packetize the slices <b>42</b>-<b>48</b> for transmission via the network <b>24</b>.</p>
<p id="p-0046" num="0045">The number of DS units <b>36</b> receiving the slices <b>42</b>-<b>48</b> is dependent on the distributed data storage parameters established by the DS managing unit <b>18</b>. For example, the DS managing unit <b>18</b> may indicate that each slice is to be stored in a different DS unit <b>36</b>. As another example, the DS managing unit <b>18</b> may indicate that like slice numbers of different data segments are to be stored in the same DS unit <b>36</b>. For example, the first slice of each of the data segments is to be stored in a first DS unit <b>36</b>, the second slice of each of the data segments is to be stored in a second DS unit <b>36</b>, etc. In this manner, the data is encoded and distributedly stored at physically diverse locations to improved data storage integrity and security. Further examples of encoding the data segments will be provided with reference to one or more of <figref idref="DRAWINGS">FIGS. 2-9</figref>.</p>
<p id="p-0047" num="0046">Each DS unit <b>36</b> that receives a slice <b>42</b>-<b>48</b> for storage translates the virtual DSN memory address of the slice into a local physical address for storage. Accordingly, each DS unit <b>36</b> maintains a virtual to physical memory mapping to assist in the storage and retrieval of data.</p>
<p id="p-0048" num="0047">The first type of user device <b>12</b> performs a similar function to store data in the DSN memory <b>22</b> with the exception that it includes the DS processing. As such, the device <b>12</b> encodes and slices the data file and/or data block it has to store. The device then transmits the slices <b>11</b> to the DSN memory via its DSN interface <b>32</b> and the network <b>24</b>.</p>
<p id="p-0049" num="0048">For a second type of user device <b>14</b> to retrieve a data file or data block from memory, it issues a read command via its interface <b>30</b> to the DS processing unit <b>16</b>. The DS processing unit <b>16</b> performs the DS processing <b>34</b> to identify the DS units <b>36</b> storing the slices of the data file and/or data block based on the read command. The DS processing unit <b>16</b> may also communicate with the DS managing unit <b>18</b> to verify that the user device <b>14</b> is authorized to access the requested data.</p>
<p id="p-0050" num="0049">Assuming that the user device is authorized to access the requested data, the DS processing unit <b>16</b> issues slice read commands to at least a threshold number of the DS units <b>36</b> storing the requested data (e.g., to at least 10 DS units for a 16/10 error coding scheme). Each of the DS units <b>36</b> receiving the slice read command, verifies the command, accesses its virtual to physical memory mapping, retrieves the requested slice, or slices, and transmits it to the DS processing unit <b>16</b>.</p>
<p id="p-0051" num="0050">Once the DS processing unit <b>16</b> has received a read threshold number of slices for a data segment, it performs an error decoding function and de-slicing to reconstruct the data segment. When Y number of data segments has been reconstructed, the DS processing unit <b>16</b> provides the data file <b>38</b> and/or data block <b>40</b> to the user device <b>14</b>. Note that the first type of user device <b>12</b> performs a similar process to retrieve a data file and/or data block.</p>
<p id="p-0052" num="0051">The storage integrity processing unit <b>20</b> performs the third primary function of data storage integrity verification. In general, the storage integrity processing unit <b>20</b> periodically retrieves slices <b>45</b>, and/or slice names, of a data file or data block of a user device to verify that one or more slices have not been corrupted or lost (e.g., the DS unit failed). The retrieval process mimics the read process previously described.</p>
<p id="p-0053" num="0052">If the storage integrity processing unit <b>20</b> determines that one or more slices is corrupted or lost, it rebuilds the corrupted or lost slice(s) in accordance with the error coding scheme. The storage integrity processing unit <b>20</b> stores the rebuilt slice, or slices, in the appropriate DS unit(s) <b>36</b> in a manner that mimics the write process previously described.</p>
<p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. 2</figref> is a schematic block diagram of an embodiment of a computing core <b>26</b> that includes a processing module <b>50</b>, a memory controller <b>52</b>, main memory <b>54</b>, a video graphics processing unit <b>55</b>, an input/output (IO) controller <b>56</b>, a peripheral component interconnect (PCI) interface <b>58</b>, at least one IO device interface module <b>62</b>, a read only memory (ROM) basic input output system (BIOS) <b>64</b>, and one or more memory interface modules. The memory interface module(s) includes one or more of a universal serial bus (USB) interface module <b>66</b>, a host bus adapter (HBA) interface module <b>68</b>, a network interface module <b>70</b>, a flash interface module <b>72</b>, a hard drive interface module <b>74</b>, and a DSN interface module <b>76</b>. Note the DSN interface module <b>76</b> and/or the network interface module <b>70</b> may function as the interface <b>30</b> of the user device <b>14</b> of <figref idref="DRAWINGS">FIG. 1</figref>. Further note that the IO device interface module <b>62</b> and/or the memory interface modules may be collectively or individually referred to as IO ports.</p>
<p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. 3</figref> is a schematic block diagram of an embodiment of a dispersed storage (DS) processing module <b>34</b> of user device <b>12</b> and/or of the DS processing unit <b>16</b>. The DS processing module <b>34</b> includes a gateway module <b>78</b>, an access module <b>80</b>, a grid module <b>82</b>, and a storage module <b>84</b>. The DS processing module <b>34</b> may also include an interface <b>30</b> and the DSnet interface <b>32</b> or the interfaces <b>68</b> and/or <b>70</b> may be part of user <b>12</b> or of the DS processing unit <b>14</b>. The DS processing module <b>34</b> may further include a bypass/feedback path between the storage module <b>84</b> to the gateway module <b>78</b>. Note that the modules <b>78</b>-<b>84</b> of the DS processing module <b>34</b> may be in a single unit or distributed across multiple units.</p>
<p id="p-0056" num="0055">In an example of storing data, the gateway module <b>78</b> receives an incoming data object that includes a user ID field <b>86</b>, an object name field <b>88</b>, and the data field <b>40</b> and may also receive corresponding information that includes a process identifier (e.g., an internal process/application ID), metadata, a file system directory, a block number, a transaction message, a user device identity (ID), a data object identifier, a source name, and/or user information. The gateway module <b>78</b> authenticates the user associated with the data object by verifying the user ID <b>86</b> with the managing unit <b>18</b> and/or another authenticating unit.</p>
<p id="p-0057" num="0056">When the user is authenticated, the gateway module <b>78</b> obtains user information from the management unit <b>18</b>, the user device, and/or the other authenticating unit. The user information includes a vault identifier, operational parameters, and user attributes (e.g., user data, billing information, etc.). A vault identifier identifies a vault, which is a virtual memory space that maps to a set of DS storage units <b>36</b>. For example, vault <b>1</b> (i.e., user 1's DSN memory space) includes eight DS storage units (X=8 wide) and vault <b>2</b> (i.e., user 2's DSN memory space) includes sixteen DS storage units (X=16 wide). The operational parameters may include an error coding algorithm, the width n (number of pillars X or slices per segment for this vault), a read threshold T, a write threshold, an encryption algorithm, a slicing parameter, a compression algorithm, an integrity check method, caching settings, parallelism settings, and/or other parameters that may be used to access the DSN memory layer.</p>
<p id="p-0058" num="0057">The gateway module <b>78</b> uses the user information to assign a source name <b>35</b> to the data. For instance, the gateway module <b>60</b> determines the source name <b>35</b> of the data object <b>40</b> based on the vault identifier and the data object. For example, the source name may contain a file identifier (ID), a vault generation number, a reserved field, and a vault identifier (ID). As another example, the gateway module <b>78</b> may generate the file ID based on a hash function of the data object <b>40</b>. Note that the gateway module <b>78</b> may also perform a message conversion, protocol conversion, electrical conversion, optical conversion, access control, user identification, user information retrieval, traffic monitoring, statistics generation, configuration, management, and/or source name determination.</p>
<p id="p-0059" num="0058">The access module <b>80</b> receives the data object <b>40</b> and creates a series of data segments <b>1</b> through Y <b>90</b>-<b>92</b> in accordance with a data storage protocol (e.g., file storage system, a block storage system, and/or an aggregated block storage system). The number of segments Y may be chosen or randomly assigned based on a selected segment size and the size of the data object. For example, if the number of segments is chosen to be a fixed number, then the size of the segments varies as a function of the size of the data object. For instance, if the data object is an image file of 4,194,304 eight bit bytes (e.g., 33,554,432 bits) and the number of segments Y=131,072, then each segment is 256 bits or 32 bytes. As another example, if segment sized is fixed, then the number of segments Y varies based on the size of data object. For instance, if the data object is an image file of 4,194,304 bytes and the fixed size of each segment is 4,096 bytes, the then number of segments Y=1,024. Note that each segment is associated with the same source name.</p>
<p id="p-0060" num="0059">The grid module <b>82</b> receives the data segments and may manipulate (e.g., compression, encryption, cyclic redundancy check (CRC), etc.) each of the data segments before performing an error coding function of the error coding dispersal storage function to produce a pre-manipulated data segment. After manipulating a data segment, if applicable, the grid module <b>82</b> error encodes (e.g., Reed-Solomon, Convolution encoding, Trellis encoding, etc.) the data segment or manipulated data segment into X error coded data slices <b>42</b>-<b>44</b>.</p>
<p id="p-0061" num="0060">The value X, or the number of pillars (e.g., X=16), is chosen as a parameter of the error coding dispersal storage function. Other parameters of the error coding dispersal function include a read threshold T, a write threshold W, etc. The read threshold (e.g., T=10, when X=16) corresponds to the minimum number of error-free error coded data slices required to reconstruct the data segment. In other words, the DS processing module <b>34</b> can compensate for X-T (e.g., 16-10=6) missing error coded data slices per data segment. The write threshold W corresponds to a minimum number of DS storage units that acknowledge proper storage of their respective data slices before the DS processing module indicates proper storage of the encoded data segment. Note that the write threshold is greater than or equal to the read threshold for a given number of pillars (X).</p>
<p id="p-0062" num="0061">For each data slice of a data segment, the grid module <b>82</b> generates a unique slice name <b>37</b> and attaches it thereto. The slice name <b>37</b> includes a universal routing information field and a vault specific field and may be 48 bytes (e.g., 24 bytes for each of the universal routing information field and the vault specific field). As illustrated, the universal routing information field includes a slice index, a vault ID, a vault generation, and a reserved field. The slice index is based on the pillar number and the vault ID and, as such, is unique for each pillar (e.g., slices of the same pillar for the same vault for any segment will share the same slice index). The vault specific field includes a data name, which includes a file ID and a segment number (e.g., a sequential numbering of data segments <b>1</b>-Y of a simple data object or a data block number).</p>
<p id="p-0063" num="0062">Prior to outputting the error coded data slices of a data segment, the grid module may perform post-slice manipulation on the slices. If enabled, the manipulation includes slice level compression, encryption, CRC, addressing, tagging, and/or other manipulation to improve the effectiveness of the computing system.</p>
<p id="p-0064" num="0063">When the error coded data slices of a data segment are ready to be outputted, the grid module <b>82</b> determines which of the DS storage units <b>36</b> will store the EC data slices based on a dispersed storage memory mapping associated with the user's vault and/or DS storage unit attributes. The DS storage unit attributes may include availability, self-selection, performance history, link speed, link latency, ownership, available DSN memory, domain, cost, a prioritization scheme, a centralized selection message from another source, a lookup table, data ownership, and/or any other factor to optimize the operation of the computing system. Note that the number of DS storage units <b>36</b> is equal to or greater than the number of pillars (e.g., X) so that no more than one error coded data slice of the same data segment is stored on the same DS storage unit <b>36</b>. Further note that EC data slices of the same pillar number but of different segments (e.g., EC data slice <b>1</b> of data segment <b>1</b> and EC data slice <b>1</b> of data segment <b>2</b>) may be stored on the same or different DS storage units <b>36</b>.</p>
<p id="p-0065" num="0064">The storage module <b>84</b> performs an integrity check on the outbound encoded data slices and, when successful, identifies a plurality of DS storage units based on information provided by the grid module <b>82</b>. The storage module <b>84</b> then outputs the encoded data slices <b>1</b> through X of each segment <b>1</b> through Y to the DS storage units <b>36</b>. Each of the DS storage units <b>36</b> stores its EC data slice(s) and maintains a local virtual DSN address to physical location table to convert the virtual DSN address of the EC data slice(s) into physical storage addresses.</p>
<p id="p-0066" num="0065">In an example of a read operation, the user device <b>12</b> and/or <b>14</b> sends a read request to the DS processing unit <b>14</b>, which authenticates the request. When the request is authentic, the DS processing unit <b>14</b> sends a read message to each of the DS storage units <b>36</b> storing slices of the data object being read. The slices are received via the DSnet interface <b>32</b> and processed by the storage module <b>84</b>, which performs a parity check and provides the slices to the grid module <b>82</b> when the parity check was successful. The grid module <b>82</b> decodes the slices in accordance with the error coding dispersal storage function to reconstruct the data segment. The access module <b>80</b> reconstructs the data object from the data segments and the gateway module <b>78</b> formats the data object for transmission to the user device.</p>
<p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. 4</figref> is a schematic block diagram of an embodiment of a grid module <b>82</b> that includes a control unit <b>73</b>, a pre-slice manipulator <b>75</b>, an encoder <b>77</b>, a slicer <b>79</b>, a post-slice manipulator <b>81</b>, a pre-slice de-manipulator <b>83</b>, a decoder <b>85</b>, a de-slicer <b>87</b>, and/or a post-slice de-manipulator <b>89</b>. Note that the control unit <b>73</b> may be partially or completely external to the grid module <b>82</b>. For example, the control unit <b>73</b> may be part of the computing core at a remote location, part of a user device, part of the DS managing unit <b>18</b>, or distributed amongst one or more DS storage units.</p>
<p id="p-0068" num="0067">In an example of write operation, the pre-slice manipulator <b>75</b> receives a data segment <b>90</b>-<b>92</b> and a write instruction from an authorized user device. The pre-slice manipulator <b>75</b> determines if pre-manipulation of the data segment <b>90</b>-<b>92</b> is required and, if so, what type. The pre-slice manipulator <b>75</b> may make the determination independently or based on instructions from the control unit <b>73</b>, where the determination is based on a computing system-wide predetermination, a table lookup, vault parameters associated with the user identification, the type of data, security requirements, available DSN memory, performance requirements, and/or other metadata.</p>
<p id="p-0069" num="0068">Once a positive determination is made, the pre-slice manipulator <b>75</b> manipulates the data segment <b>90</b>-<b>92</b> in accordance with the type of manipulation. For example, the type of manipulation may be compression (e.g., Lempel-Ziv-Welch, Huffman, Golomb, fractal, wavelet, etc.), signatures (e.g., Digital Signature Algorithm (DSA), Elliptic Curve DSA, Secure Hash Algorithm, etc.), watermarking, tagging, encryption (e.g., Data Encryption Standard, Advanced Encryption Standard, etc.), adding metadata (e.g., time/date stamping, user information, file type, etc.), cyclic redundancy check (e.g., CRC32), and/or other data manipulations to produce the pre-manipulated data segment.</p>
<p id="p-0070" num="0069">The encoder <b>77</b> encodes the pre-manipulated data segment <b>92</b> using a forward error correction (FEC) encoder (and/or other type of erasure coding and/or error coding) to produce an encoded data segment <b>94</b>. The encoder <b>77</b> determines which forward error correction algorithm to use based on a predetermination associated with the user's vault, a time based algorithm, user direction, DS managing unit direction, control unit direction, as a function of the data type, as a function of the data segment <b>92</b> metadata, and/or any other factor to determine algorithm type. The forward error correction algorithm may be Golay, Multidimensional parity, Reed-Solomon, Hamming, Bose Ray Chauduri Hocquenghem (BCH), Cauchy-Reed-Solomon, or any other FEC encoder. Note that the encoder <b>77</b> may use a different encoding algorithm for each data segment <b>92</b>, the same encoding algorithm for the data segments <b>92</b> of a data object, or a combination thereof.</p>
<p id="p-0071" num="0070">The encoded data segment <b>94</b> is of greater size than the data segment <b>92</b> by the overhead rate of the encoding algorithm by a factor of X/T, where X is the width or number of slices, and T is the read threshold. In this regard, the corresponding decoding process can accommodate at most X-T missing EC data slices and still recreate the data segment <b>92</b>. For example, if X=16 and T=10, then the data segment <b>92</b> will be recoverable as long as 10 or more EC data slices per segment are not corrupted.</p>
<p id="p-0072" num="0071">The slicer <b>79</b> transforms the encoded data segment <b>94</b> into EC data slices in accordance with the slicing parameter from the vault for this user and/or data segment <b>92</b>. For example, if the slicing parameter is X=16, then the slicer <b>79</b> slices each encoded data segment <b>94</b> into 16 encoded slices.</p>
<p id="p-0073" num="0072">The post-slice manipulator <b>81</b> performs, if enabled, post-manipulation on the encoded slices to produce the EC data slices. If enabled, the post-slice manipulator <b>81</b> determines the type of post-manipulation, which may be based on a computing system-wide predetermination, parameters in the vault for this user, a table lookup, the user identification, the type of data, security requirements, available DSN memory, performance requirements, control unit directed, and/or other metadata. Note that the type of post-slice manipulation may include slice level compression, signatures, encryption, CRC, addressing, watermarking, tagging, adding metadata, and/or other manipulation to improve the effectiveness of the computing system.</p>
<p id="p-0074" num="0073">In an example of a read operation, the post-slice de-manipulator <b>89</b> receives at least a read threshold number of EC data slices and performs the inverse function of the post-slice manipulator <b>81</b> to produce a plurality of encoded slices. The de-slicer <b>87</b> de-slices the encoded slices to produce an encoded data segment <b>94</b>. The decoder <b>85</b> performs the inverse function of the encoder <b>77</b> to recapture the data segment <b>90</b>-<b>92</b>. The pre-slice de-manipulator <b>83</b> performs the inverse function of the pre-slice manipulator <b>75</b> to recapture the data segment <b>90</b>-<b>92</b>.</p>
<p id="p-0075" num="0074"><figref idref="DRAWINGS">FIG. 5</figref> is a diagram of an example of slicing an encoded data segment <b>94</b> by the slicer <b>79</b>. In this example, the encoded data segment <b>94</b> includes thirty-two bits, but may include more or less bits. The slicer <b>79</b> disperses the bits of the encoded data segment <b>94</b> across the EC data slices in a pattern as shown. As such, each EC data slice does not include consecutive bits of the data segment <b>94</b> reducing the impact of consecutive bit failures on data recovery. For example, if EC data slice <b>2</b> (which includes bits <b>1</b>, <b>5</b>, <b>9</b>, <b>13</b>, <b>17</b>, <b>25</b>, and <b>29</b>) is unavailable (e.g., lost, inaccessible, or corrupted), the data segment can be reconstructed from the other EC data slices (e.g., <b>1</b>, <b>3</b> and <b>4</b> for a read threshold of <b>3</b> and a width of <b>4</b>).</p>
<p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. 6A</figref> is a schematic block diagram of another embodiment of a computing system that includes a dispersed storage (DS) unit <b>36</b>, a DS managing unit certificate authority <b>102</b>, an intermediate certificate authority (CA) <b>104</b>, a root certificate authority A, and a root certificate authority B. Alternatively, the DS unit <b>36</b> may be implemented by any other unit, device, or module of a dispersed storage network (DSN). For example, another embodiment substitutes the DS unit <b>36</b> with a user device <b>12</b>. The DS managing unit certificate authority <b>102</b> may be implemented by including a certificate authority within a DS managing unit <b>18</b>. One or more of the intermediate certificate authority <b>104</b>, the root certificate authority A, and the root certificate authority B may be implemented as part of the DS managing unit <b>18</b>. Any number of root certificate authorities, any number of intermediate certificate authorities, and any number of certificate authorities may provide digital certificates to the DSN.</p>
<p id="p-0077" num="0076">The root certificate authority A provides a self signed root certificate authority A certificate to the DSN and the root certificate authority B provides a self signed certificate authority B certificate to the DSN. The intermediate certificate authority <b>104</b> provides a certificate chain A to the DSN that includes an intermediate certificate authority certificate and a root certificate authority A certificate. The DS managing unit certificate authority <b>102</b> provides one or more of a certificate chain A&#x2032; and a certificate chain B to the DSN, wherein the certificate chain A&#x2032; includes a DS managing unit certificate authority certificate, the intermediate certificate authority certificate, and the self signed root certificate authority A certificate, and wherein the certificate chain B includes the DS managing unit certificate authority certificate and the self signed root certificate authority B certificate.</p>
<p id="p-0078" num="0077"><figref idref="DRAWINGS">FIG. 6B</figref> is a diagram illustrating an example of a digital certificate acquisition sequence between elements of a dispersed storage network (DSN) as depicted in <figref idref="DRAWINGS">FIG. 6A</figref>. The sequence begins with a dispersed storage (DS) managing unit certificate authority <b>102</b> sending registry information <b>106</b> to a DS unit <b>36</b>. The registry information <b>106</b> includes one or more of network certificates and vault information.</p>
<p id="p-0079" num="0078">Such a network certificate includes one or more realm identifiers (ID) and at least one subject name ID per realm ID. Such a realm ID may be associated with one or more of a groups of affiliated user devices, operations within a geographic region, one or more groups of DSN entities, and a DSN of a plurality of DSNs. For example, two user devices sharing a common email system domain form an affiliated group of a common realm. For instance, jresch@cleversafe and wleggette@cleversafe represent two user devices sharing a common realm of Cleversafe. The subject name ID includes a unique identifier corresponding to any one of a user device, a certificate authority, a DSN process, a DS processing unit, a DS unit, a DS managing unit, and any other unit of a DSN.</p>
<p id="p-0080" num="0079">The vault information includes an access control list (ACL) and vault parameters. The ACL includes one or more of a realm ID, a corresponding subject name ID, and corresponding permissions with respect to the DSN (e.g., read, write, delete, list, rebuild, etc.). The vault parameters includes one or more of a name, a pillar which, a codec table, an information dispersal algorithm (IDA) identifier, a decode threshold, a codec stack, and a segment size. The format of the registry information <b>106</b> is discussed in greater detail with reference to <figref idref="DRAWINGS">FIG. 6E</figref>.</p>
<p id="p-0081" num="0080">In the digital certificate acquisition sequence continued, the DS unit <b>36</b> generates a certificate signing request <b>108</b> and sends the certificate signing request <b>108</b> to the DS managing unit certificate authority <b>102</b>. The certificate signing request (CSR) <b>108</b> includes at least one of a requesting entity ID, registration information (e.g., an authentication code distributed as a result of a previous activation sequence), an email address, a geographic designation, a domain name, a public key of a public-private key pair, and a signature over the request utilizing a private key of the public-private key pair. The DS managing unit certificate authority <b>102</b> validates the certificate signing request <b>108</b>, generates a certificate chain A&#x2032;, and sends the certificate chain A&#x2032; to the DS unit <b>36</b>. The generation of the certificate chain A&#x2032; includes appending a certificate chain A to a certificate of the certificate signing request <b>108</b>, generating a signature over the certificate of the certificate signing request <b>108</b> (e.g., a cryptographic hash utilizing an industry standards such as digital signature algorithm (DSA) or Rivest, Shamir, Adleman (RSA) utilizing a private key associated with public-key infrastructure (PKI) public-private key pair of the DS managing unit certificate authority <b>102</b>), and appending the signature to the certificate chain A and certificate to produce the certificate chain A&#x2032;. The DS unit <b>36</b> subsequently may utilize the certificate chain A&#x2032; in an authentication sequence with one or more entities of the DSN. The DS unit <b>36</b> may access the one more entities of the DSN subsequent to a favorable authentication sequence.</p>
<p id="p-0082" num="0081">Prior to or subsequent to the sending of CSR <b>108</b>, the DS managing unit certificate authority <b>102</b> generates a certificate signing request <b>110</b> and sends the certificate signing request <b>110</b> to the intermediate certificate authority <b>104</b>. The intermediate certificate authority <b>104</b> generates certificate chain A by signing the CSR <b>110</b> and appending an intermediate certificate authority certificate and a root certificate authority A certificate. The intermediate certificate authority <b>104</b> sends the certificate chain A to the DS managing unit certificate authority <b>102</b>.</p>
<p id="p-0083" num="0082">Prior to or subsequent to the sending of CSR <b>108</b>, the intermediate certificate authority <b>104</b> generates a certificate signing request <b>112</b> and sends the certificate signing request <b>112</b> to the root certificate authority A. The root certificate authority A generates certificate A by signing the CSR <b>112</b> and appending the root certificate authority A certificate. The root certificate authority A sends the certificate A to the intermediate certificate authority <b>104</b>.</p>
<p id="p-0084" num="0083"><figref idref="DRAWINGS">FIG. 6C</figref> is a diagram illustrating another example of a digital certificate acquisition sequence between elements of a dispersed storage network (DSN) as depicted in <figref idref="DRAWINGS">FIG. 6A</figref>. The sequence begins with a dispersed storage (DS) managing unit certificate authority <b>102</b> sending registry information <b>106</b> to a DS unit <b>36</b>. The DS unit <b>36</b> generates a certificate signing request (CSR) <b>108</b> and sends the certificate signing request <b>108</b> to the DS managing unit certificate authority <b>102</b>. The DS managing unit certificate authority <b>102</b> validates the certificate signing request <b>108</b>, generates a certificate chain B, and sends the certificate chain B to the DS unit <b>36</b>. The generation of the certificate chain B includes appending a certificate B to a certificate of the certificate signing request <b>108</b>, generating a signature over the certificate of the certificate signing request <b>108</b>, and appending the signature to the certificate B and certificate to produce the certificate chain B. The DS unit <b>36</b> subsequently may utilize the certificate chain B in an authentication sequence with one or more entities of the DSN. The DS unit <b>36</b> may access the one more entities of the DSN subsequent to a favorable authentication sequence.</p>
<p id="p-0085" num="0084">Prior to or subsequent to the sending of CSR <b>108</b>, the DS managing unit certificate authority <b>102</b> generates a certificate signing request <b>114</b> and sends the certificate signing request <b>114</b> to a root certificate authority B. The root certificate authority B generates certificate B by signing the CSR <b>114</b> and appending a root certificate authority B certificate. The root certificate authority B sends the certificate B to the DS managing unit certificate authority <b>102</b>.</p>
<p id="p-0086" num="0085"><figref idref="DRAWINGS">FIG. 6D</figref> is a diagram illustrating an example of realm to certificate authority relationships. In a first relationship, realm <b>1</b> is associated with certificate authority A and certificate authority B. In a second relationship, realm <b>2</b> is associated with certificate authority C, certificate authority D, and certificate authority E. In such relationships, a realm may include any number of certificate authorities and a certificate authority may only be associated with one realm. A system performance improvement may be provided by associating two or more certificate authorities with one realm when a first certificate authority is phased out of service in favor of a second certificate authority. For example, the second certificate authority is considered as a trusted certificate authority when it is associated with a common realm of the first certificate authority, wherein the first certificate authority is a predetermined trusted certificate authority.</p>
<p id="p-0087" num="0086"><figref idref="DRAWINGS">FIG. 6E</figref> is a diagram illustrating an example of registry information. The registry information <b>120</b> includes network certificates <b>122</b> and vault information <b>124</b>. The network certificates <b>122</b> include a plurality of network certificates. Each network certificate of the plurality of network certificates includes a realm identifier (ID) <b>126</b> and a subject name ID <b>128</b>. For example, a network certificate <b>1</b> includes a realm ID=1 and a subject name ID=certificate authority A. As another example, a network certificate <b>2</b> includes a realm ID=1 and a subject ID=certificate authority B.</p>
<p id="p-0088" num="0087">The vault information <b>124</b> includes a plurality of vault records. Each vault record of the plurality of vault records includes an access control list (ACL) <b>130</b> and vault parameters <b>132</b>. The access control is <b>130</b> includes one or more entries, wherein each entry of the one more entries includes a realm identifier (ID) <b>132</b>, a subject name ID <b>134</b>, and a set of permissions <b>136</b> associated with the entry. The set of permissions includes one or more of allowed DSN access types (e.g., read, write, delete, list, rebuild, etc.), allowed requesting entities (e.g., user device ID=457, certificate authority B, etc.), time based access, security level access, wild card access, and realm access. For example, a first entry includes a realm ID=2, a subject name ID=certificate authority C, and a permissions set that includes read-only permissions. As another example, a second entry includes a realm ID=2, a subject name ID=certificate authority D, and a permissions set that includes read and write permissions. As yet another example, a third entry includes a realm ID=2, a subject name ID=certificate authority E, and a permissions set that includes read, write, and delete permissions.</p>
<p id="p-0089" num="0088">The vault parameters <b>132</b> includes one or more of a vault name, a pillar width, a codec table (e.g., which codecs may be utilized in producing encoded data slices), and information dispersal algorithm (IDA) ID, a decode threshold, a codec stack (e.g., indicating an order of an application of two or more codecs), and a data segment size.</p>
<p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. 7</figref> is a diagram illustrating a digital certificate <b>140</b> structure that includes a certificate field <b>142</b>, a certificate signature algorithm field <b>144</b>, and a certificate signature field <b>146</b>. Entries of the digital certificate fields may be encoded in accordance with an industry-standard such as abstract syntax notation (ASN.1). The certificate field <b>142</b> includes a version field, a serial number field, an algorithm identifier (ID) field, an issuer field, a not before a validity field, a not after validity field, a subject field, a public key algorithm field, a public key field, an issuer unique identifier field, a subject unique ID field, a realm ID field, and a certificate extensions field. The certificate signature algorithm field <b>144</b> includes a certificate signature algorithm entry that identifies a certificate signature algorithm of a plurality of algorithms utilized to produce the certificate signature field <b>146</b>. The certificate signature field <b>146</b> includes a certificate signature entry generated as a signature of the certificate field <b>142</b> (e.g., cryptographic hash of the certificate field utilizing a private key of a signer).</p>
<p id="p-0091" num="0090"><figref idref="DRAWINGS">FIG. 8A</figref> is a diagram illustrating an example of a certificate chain. The certificate chain includes a plurality of digital certificates including a user device certificate <b>150</b>, an intermediate certificate authority (CA) <b>3</b> certificate <b>152</b>, an intermediate certificate authority <b>2</b> certificate <b>154</b>, an intermediate certificate authority <b>1</b> certificate <b>156</b>, and a root certificate authority A certificate <b>158</b>. Each certificate of the plurality of certificates has an associated digital signature, wherein the digital signature is produced as a cryptographic hash over the associated certificate. The cryptographic hash utilizes a private key associated with a certificate authority that is one level closer to the root certificate authority.</p>
<p id="p-0092" num="0091">For example, the user device certificate <b>150</b> is associated with CA <b>3</b> signature <b>160</b>, wherein signature <b>160</b> is generated utilizing a private key associated with intermediate certificate authority <b>3</b>; the intermediate certificate authority <b>3</b> certificate <b>152</b> is associated with CA <b>2</b> signature <b>162</b>, wherein signature <b>162</b> is generated utilizing a private key associated with intermediate certificate authority <b>2</b>; the intermediate certificate authority <b>2</b> certificate <b>154</b> is associated with CA <b>1</b> signature <b>164</b>, wherein signature <b>164</b> is generated utilizing a private key associated with intermediate certificate authority <b>1</b>; the intermediate certificate authority <b>1</b> certificate <b>156</b> is associated with root A CA signature <b>166</b>, wherein signature <b>166</b> is generated utilizing a private key associated with root certificate authority A; and the root certificate authority A certificate <b>158</b> is associated with root A CA signature <b>168</b>, wherein signature <b>168</b> utilizes the private key associated with the root certificate authority A (e.g., self signed).</p>
<p id="p-0093" num="0092">Clients (e.g., user devices) and/or servers (e.g., dispersed storage (DS) units) may subsequently use the certificate chain to ensure trusted access and/or trusted communications. The utilization may include searching the certificate chain to identify at least one certificate authority of the plurality of certificate authorities that is trusted. For example, ensuring trust may be accomplished by matching a certificate authority of the certificate chain to a certificate chain entry in a trusted certificate authority list (e.g., of a networked certificate of registry information).</p>
<p id="p-0094" num="0093"><figref idref="DRAWINGS">FIG. 8B</figref> is another diagram illustrating another example of a certificate chain. The certificate chain includes a plurality of digital certificates including a user device certificate <b>150</b>, an intermediate certificate authority (CA) <b>1</b> certificate <b>156</b>, and a root certificate authority A certificate <b>158</b>. Each of the plurality of certificates has an associated digital signature wherein the digital signature is produced as a cryptographic hash over the associated certificate. For example, the user device certificate <b>150</b> is associated with CA <b>1</b> signature <b>164</b>, wherein signature <b>164</b> is generated utilizing a private key associated with intermediate certificate authority <b>1</b>; the intermediate certificate authority <b>1</b> certificate <b>156</b> is associated with root A CA signature <b>166</b>, wherein signature <b>166</b> is generated utilizing a private key associated with root certificate authority A; and the root certificate authority A certificate <b>158</b> is associated with root A CA signature <b>168</b>, wherein signature <b>168</b> utilizes a private key associated with the root certificate authority A. Clients and/or servers may subsequently use the certificate chain to ensure trusted access and/or trusted communications.</p>
<p id="p-0095" num="0094"><figref idref="DRAWINGS">FIG. 8C</figref> is another diagram illustrating another example of a certificate chain. The certificate chain includes a plurality of digital certificates including a user device certificate <b>150</b>, and a root certificate authority B certificate <b>170</b>. Each of the plurality of certificates has an associated digital signature wherein the digital signature is produced as a cryptographic hash over the associated certificate. For example, the user device certificate <b>150</b> is associated with root B certificate authority (CA) signature <b>172</b>, wherein signature <b>172</b> is generated utilizing a private key associated with root certificate authority B; and the root certificate authority B certificate <b>170</b> is associated with root B CA signature <b>174</b>, wherein signature <b>174</b> utilizes the private key associated with the root certificate authority B. Clients and/or servers may subsequently use the certificate chain to ensure trusted access and/or trusted communications.</p>
<p id="p-0096" num="0095"><figref idref="DRAWINGS">FIG. 9</figref> is a flowchart illustrating an example of processing an access request in accordance with the invention. The method begins with step <b>180</b> where a processing module (e.g., a dispersed storage (DS) unit) receives a dispersed storage network (DSN) access request from a requesting entity. The access request includes one or more of a certificate chain, a requester identifier (ID), wherein the requester ID is associated with the certificate chain, and an access type (ID) (e.g., read, write, delete, list, rebuild, etc.).</p>
<p id="p-0097" num="0096">The method continues at step <b>182</b> where the processing module obtains certificate chain validation information associated with the DSN access request, wherein the certificate chain validation information includes a realm identifier (ID), identity of a plurality of trusted certificate authorities (CA), and an indication of validity of an associated certificate chain. The obtaining includes at least one of retrieving, sending a query, invoking an authentication sequence, and receiving a message. For example, processing module retrieves the certificate chain validation information utilizing the requester ID based on a previous authentication sequence associated with the requesting entity.</p>
<p id="p-0098" num="0097">The method continues at step <b>184</b> where the processing module validates the certificate chain based on the certificate chain validation information. The validating is based on at least one of determining a previous authentication sequence result, extracting the indication of validity from the certificate chain validation information, sending a curry, invoking a new authentication sequence, and receiving a message. For example, the processing module validates the certificate chain when the indication of validity indicates that the certificate chain is valid.</p>
<p id="p-0099" num="0098">The method continues at step <b>186</b> where the processing module accesses registry information for the DSN when the certificate chain is valid, wherein the registry information includes a plurality of access control lists, wherein an access control list of the plurality of access control lists includes a plurality of entries, and wherein an entry of the plurality of entries includes a realm ID, a subject name ID, and a set of permissions. The permissions includes one or more of allowed DSN access types, allowed requesting entities, time based access, security level access, wild card access, and realm access. The registry information includes a plurality of network certificates, wherein a network certificate of the plurality of network certificates maintains information regarding association of a realm to a plurality of certificate authorities, and a plurality of vault records, wherein a vault record of the plurality of vault records includes the access control list and vault parameters.</p>
<p id="p-0100" num="0099">The method continues at step <b>188</b> where the processing module identifies one of the plurality of access control lists based on at least one of information associated with the requester ID and information associated with the certificate chain. The information associated with the requester ID includes one or more of the requester ID, a vault ID, an access control list ID, and request type of the DSN access request. The information associated with the certificate chain includes one or more of realm ID, and a subject name of a trusted certificate authority (CA). For example, the processing module identifies the one of the plurality of access control lists based on utilizing the requester ID as an index to retrieve a vault ID and identifying the access control list based on the vault ID. As another example, the processing module identifies the one of the plurality of access control lists based on utilizing a trusted certificate authority ID of the certificate chain. As yet another example, the processing module identifies the one of the plurality of access control lists based on utilizing a realm ID of the certificate chain and a corresponding trusted CA ID based on the registry information (e.g., linking the realm ID to a trusted CA ID of the certificate chain and the corresponding trusted CA ID).</p>
<p id="p-0101" num="0100">The method continues at step <b>190</b> where the processing module identifies one or more entries of the one of the plurality of access control lists based on the information associated with the certificate chain to produce one or more identified entries. For example, the processing module matches the realm ID of the certificate chain and the corresponding trusted CA ID to a first entry of the one of the plurality of access control lists. As another example, the processing module matches the realm ID of the certificate chain and the trusted CA ID of the certificate chain to a second entry of the one of the plurality of access control lists. As yet another example, the processing module matches the requester ID to a third entry (e.g., to a subject name ID) of the one of the plurality of access control lists.</p>
<p id="p-0102" num="0101">The method continues at step <b>192</b> where the processing module generates, for the DSN access request, permissions from one or more sets of permissions associated with the one or more identified entries. The generating permissions for the DSN access request includes aggregating a plurality of sets of permissions associated with a plurality of identified entries of the one or more identified entries or selecting one of the one or more sets permissions.</p>
<p id="p-0103" num="0102">The method continues at step <b>194</b> where the processing module determines whether the permissions allow the DSN access request. For example, the processing module determines that the permissions allow the DSN access request when the permissions includes an access type of the DSN access request. The method branches to step <b>200</b> when the processing module determines that the permissions allow the DSN access request. The method continues to step <b>196</b> when the processing module determines that the permissions do not allow the DSN access request. The method continues at step <b>196</b> where the processing module indicates that the DSN access request is not allowed when the permissions do not allow the DSN access request. The method continues at step <b>198</b> where the processing module sends a rejection message to a requesting entity associated with the requester ID. Such a rejection message may invoke an authentication sequence to generate updated certificate chain validation information. The method continues at step <b>200</b> where the processing module executes the DSN access request in accordance with the permissions when the processing module determines that the permissions allow the DSN access request.</p>
<p id="p-0104" num="0103">As may be used herein, the terms &#x201c;substantially&#x201d; and &#x201c;approximately&#x201d; provides an industry-accepted tolerance for its corresponding term and/or relativity between items. Such an industry-accepted tolerance ranges from less than one percent to fifty percent and corresponds to, but is not limited to, component values, integrated circuit process variations, temperature variations, rise and fall times, and/or thermal noise. Such relativity between items ranges from a difference of a few percent to magnitude differences. As may also be used herein, the term(s) &#x201c;operably coupled to&#x201d;, &#x201c;coupled to&#x201d;, and/or &#x201c;coupling&#x201d; includes direct coupling between items and/or indirect coupling between items via an intervening item (e.g., an item includes, but is not limited to, a component, an element, a circuit, and/or a module) where, for indirect coupling, the intervening item does not modify the information of a signal but may adjust its current level, voltage level, and/or power level. As may further be used herein, inferred coupling (i.e., where one element is coupled to another element by inference) includes direct and indirect coupling between two items in the same manner as &#x201c;coupled to&#x201d;. As may even further be used herein, the term &#x201c;operable to&#x201d; or &#x201c;operably coupled to&#x201d; indicates that an item includes one or more of power connections, input(s), output(s), etc., to perform, when activated, one or more its corresponding functions and may further include inferred coupling to one or more other items. As may still further be used herein, the term &#x201c;associated with&#x201d;, includes direct and/or indirect coupling of separate items and/or one item being embedded within another item. As may be used herein, the term &#x201c;compares favorably&#x201d;, indicates that a comparison between two or more items, signals, etc., provides a desired relationship. For example, when the desired relationship is that signal <b>1</b> has a greater magnitude than signal <b>2</b>, a favorable comparison may be achieved when the magnitude of signal <b>1</b> is greater than that of signal <b>2</b> or when the magnitude of signal <b>2</b> is less than that of signal <b>1</b>.</p>
<p id="p-0105" num="0104">As may also be used herein, the terms &#x201c;processing module&#x201d;, &#x201c;processing circuit&#x201d;, and/or &#x201c;processing unit&#x201d; may be a single processing device or a plurality of processing devices. Such a processing device may be a microprocessor, micro-controller, digital signal processor, microcomputer, central processing unit, field programmable gate array, programmable logic device, state machine, logic circuitry, analog circuitry, digital circuitry, and/or any device that manipulates signals (analog and/or digital) based on hard coding of the circuitry and/or operational instructions. The processing module, module, processing circuit, and/or processing unit may be, or further include, memory and/or an integrated memory element, which may be a single memory device, a plurality of memory devices, and/or embedded circuitry of another processing module, module, processing circuit, and/or processing unit. Such a memory device may be a read-only memory, random access memory, volatile memory, non-volatile memory, static memory, dynamic memory, flash memory, cache memory, and/or any device that stores digital information. Note that if the processing module, module, processing circuit, and/or processing unit includes more than one processing device, the processing devices may be centrally located (e.g., directly coupled together via a wired and/or wireless bus structure) or may be distributedly located (e.g., cloud computing via indirect coupling via a local area network and/or a wide area network). Further note that if the processing module, module, processing circuit, and/or processing unit implements one or more of its functions via a state machine, analog circuitry, digital circuitry, and/or logic circuitry, the memory and/or memory element storing the corresponding operational instructions may be embedded within, or external to, the circuitry comprising the state machine, analog circuitry, digital circuitry, and/or logic circuitry. Still further note that, the memory element may store, and the processing module, module, processing circuit, and/or processing unit executes, hard coded and/or operational instructions corresponding to at least some of the steps and/or functions illustrated in one or more of the Figures. Such a memory device or memory element can be included in an article of manufacture.</p>
<p id="p-0106" num="0105">The present invention has been described above with the aid of method steps illustrating the performance of specified functions and relationships thereof. The boundaries and sequence of these functional building blocks and method steps have been arbitrarily defined herein for convenience of description. Alternate boundaries and sequences can be defined so long as the specified functions and relationships are appropriately performed. Any such alternate boundaries or sequences are thus within the scope and spirit of the claimed invention. Further, the boundaries of these functional building blocks have been arbitrarily defined for convenience of description. Alternate boundaries could be defined as long as the certain significant functions are appropriately performed. Similarly, flow diagram blocks may also have been arbitrarily defined herein to illustrate certain significant functionality. To the extent used, the flow diagram block boundaries and sequence could have been defined otherwise and still perform the certain significant functionality. Such alternate definitions of both functional building blocks and flow diagram blocks and sequences are thus within the scope and spirit of the claimed invention. One of average skill in the art will also recognize that the functional building blocks, and other illustrative blocks, modules and components herein, can be implemented as illustrated or by discrete components, application specific integrated circuits, processors executing appropriate software and the like or any combination thereof.</p>
<p id="p-0107" num="0106">The present invention may have also been described, at least in part, in terms of one or more embodiments. An embodiment of the present invention is used herein to illustrate the present invention, an aspect thereof, a feature thereof, a concept thereof, and/or an example thereof. A physical embodiment of an apparatus, an article of manufacture, a machine, and/or of a process that embodies the present invention may include one or more of the aspects, features, concepts, examples, etc. described with reference to one or more of the embodiments discussed herein. Further, from figure to figure, the embodiments may incorporate the same or similarly named functions, steps, modules, etc. that may use the same or different reference numbers and, as such, the functions, steps, modules, etc. may be the same or similar functions, steps, modules, etc. or different ones.</p>
<p id="p-0108" num="0107">While the transistors in the above described figure(s) is/are shown as field effect transistors (FETs), as one of ordinary skill in the art will appreciate, the transistors may be implemented using any type of transistor structure including, but not limited to, bipolar, metal oxide semiconductor field effect transistors (MOSFET), N-well transistors, P-well transistors, enhancement mode, depletion mode, and zero voltage threshold (VT) transistors.</p>
<p id="p-0109" num="0108">Unless specifically stated to the contra, signals to, from, and/or between elements in a figure of any of the figures presented herein may be analog or digital, continuous time or discrete time, and single-ended or differential. For instance, if a signal path is shown as a single-ended path, it also represents a differential signal path. Similarly, if a signal path is shown as a differential path, it also represents a single-ended signal path. While one or more particular architectures are described herein, other architectures can likewise be implemented that use one or more data buses not expressly shown, direct connectivity between elements, and/or indirect coupling between other elements as recognized by one of average skill in the art.</p>
<p id="p-0110" num="0109">The term &#x201c;module&#x201d; is used in the description of the various embodiments of the present invention. A module includes a processing module, a functional block, hardware, and/or software stored on memory for performing one or more functions as may be described herein. Note that, if the module is implemented via hardware, the hardware may operate independently and/or in conjunction software and/or firmware. As used herein, a module may contain one or more sub-modules, each of which may be one or more modules.</p>
<p id="p-0111" num="0110">While particular combinations of various functions and features of the present invention have been expressly described herein, other combinations of these features and functions are likewise possible. The present invention is not limited by the particular examples disclosed herein and expressly incorporates these other combinations.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for execution by one or more processing devices of one or more computers of a dispersed storage network, the method comprises:
<claim-text>receiving, by the one or more processing device of one or more computers, a dispersed storage network (DSN) access request that includes a requester identifier (ID), wherein the requester ID is associated with a certificate chain;</claim-text>
<claim-text>when the certificate chain is valid, accessing registry information for the DSN, wherein the registry information includes a plurality of access control lists, wherein an access control list of the plurality of access control lists includes a plurality of entries, and</claim-text>
<claim-text>wherein an entry of the plurality of entries includes a realm ID, a subject name ID, and a set of permissions;</claim-text>
<claim-text>identifying one of the plurality of access control lists based on at least one of information associated with the requester ID and information associated with the certificate chain;</claim-text>
<claim-text>identifying one or more entries of the one of the plurality of access control lists based on the information associated with the certificate chain to produce one or more identified entries; and</claim-text>
<claim-text>generating, for the DSN access request, permissions from one or more sets of permissions associated with the one or more identified entries.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprises:
<claim-text>obtaining certificate chain validation information associated with the DSN access request, wherein the certificate chain validation information includes a realm identifier (ID), identity of a plurality of trusted certificate authorities (CA), and an indication of validity of an associated certificate chain; and</claim-text>
<claim-text>validating the certificate chain based on the certificate chain validation information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the information associated with the requester ID comprises one or more of:
<claim-text>the requester ID;</claim-text>
<claim-text>a vault ID;</claim-text>
<claim-text>an access control list ID; and</claim-text>
<claim-text>request type of the DSN access request.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the information associated with the certificate chain comprises one or more of:
<claim-text>realm ID; and</claim-text>
<claim-text>a subject name of a trusted certificate authority (CA).</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the registry information further comprises:
<claim-text>a plurality of network certificates, wherein a network certificate of the plurality of network certificates maintains information regarding association of a realm to a plurality of certificate authorities; and</claim-text>
<claim-text>a plurality of vault records, wherein a vault record of the plurality of vault records includes the access control list and vault parameters.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the generating permissions for the DSN access request comprises:
<claim-text>aggregating a plurality of sets of permissions associated with a plurality of identified entries of the one or more identified entries; or</claim-text>
<claim-text>selecting one of the one or more sets permissions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprises at least one of:
<claim-text>indicating that the DSN access request is not allowed when the permissions do not allow the DSN access request; and</claim-text>
<claim-text>sending a rejection message to a requesting entity associated with the requester ID.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprises:
<claim-text>executing the DSN access request in accordance with the permissions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the permissions comprises one or more of:
<claim-text>allowed DSN access types;</claim-text>
<claim-text>allowed requesting entities;</claim-text>
<claim-text>time based access;</claim-text>
<claim-text>security level access;</claim-text>
<claim-text>wild card access; and</claim-text>
<claim-text>realm access.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A computer comprises:
<claim-text>an interface;</claim-text>
<claim-text>a memory; and</claim-text>
<claim-text>a processing module operable to:
<claim-text>receive, via the interface, a dispersed storage network (DSN) access request that includes a requester identifier (ID), wherein the requester ID is associated with a certificate chain;</claim-text>
<claim-text>when the certificate chain is valid, access registry information for the DSN, wherein the registry information includes a plurality of access control lists, wherein an access control list of the plurality of access control lists includes a plurality of entries, and wherein an entry of the plurality of entries includes a realm ID, a subject name ID, and a set of permissions;</claim-text>
<claim-text>identify one of the plurality of access control lists based on at least one of information associated with the requester ID and information associated with the certificate chain;</claim-text>
<claim-text>identify one or more entries of the one of the plurality of access control lists based on the information associated with the certificate chain to produce one or more identified entries; and</claim-text>
<claim-text>generate, for the DSN access request, permissions from one or more sets of permissions associated with the one or more identified entries.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The computer of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the processing module further functions to:
<claim-text>obtain certificate chain validation information associated with the DSN access request, wherein the certificate chain validation information includes a realm identifier (ID), identity of a plurality of trusted certificate authorities (CA), and an indication of validity of an associated certificate chain; and</claim-text>
<claim-text>validate the certificate chain based on the certificate chain validation information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The computer of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the information associated with the requester ID includes one or more of:
<claim-text>the requester ID;</claim-text>
<claim-text>a vault ID;</claim-text>
<claim-text>an access control list ID; and</claim-text>
<claim-text>request type of the DSN access request.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The computer of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the information associated with the certificate chain includes one or more of:
<claim-text>realm ID; and</claim-text>
<claim-text>a subject name of a trusted certificate authority (CA).</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The computer of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the registry information further includes:
<claim-text>a plurality of network certificates, wherein a network certificate of the plurality of network certificates maintains information regarding association of a realm to a plurality of certificate authorities; and</claim-text>
<claim-text>a plurality of vault records, wherein a vault record of the plurality of vault records includes the access control list and vault parameters.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The computer of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the processing module functions to generate permissions for the DSN access request by:
<claim-text>aggregating a plurality of sets of permissions associated with a plurality of identified entries of the one or more identified entries; or</claim-text>
<claim-text>selecting one of the one or more sets permissions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The computer of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the processing module further functions to:
<claim-text>indicate that the DSN access request is not allowed when the permissions do not allow the DSN access request; and</claim-text>
<claim-text>send, via the interface, a rejection message to a requesting entity associated with the requester ID.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The computer of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the processing module further functions to:
<claim-text>execute the DSN access request in accordance with the permissions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The computer of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the permissions comprises one or more of:
<claim-text>allowed DSN access types;</claim-text>
<claim-text>allowed requesting entities;</claim-text>
<claim-text>time based access;</claim-text>
<claim-text>security level access;</claim-text>
<claim-text>wild card access; and</claim-text>
<claim-text>realm access.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
