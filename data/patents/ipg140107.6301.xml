<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627455-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627455</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13523485</doc-number>
<date>20120614</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20130101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>21</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>726 18</main-classification>
<further-classification>713168</further-classification>
</classification-national>
<invention-title id="d2e43">Manufacturing method of a memory device to be authenticated</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>7159244</doc-number>
<kind>B2</kind>
<name>Matsushima et al.</name>
<date>20070100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 30</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>JP</country>
<doc-number>2010-268417</doc-number>
<date>20101100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00003">
<othercit>Bajikar, Sundeep. &#x201c;Trusted platform module (TPM) based security on notebook pcs-white paper.&#x201d; Mobile Platforms Group, Intel Corporation (Jun. 20, 2002).</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00004">
<othercit>&#x201c;Media Identifier Management Technology (MIMT) Specification&#x201d;, Issued by 4C Entity, http://www.4centity.com Sep. 27, 2010, 13 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00005">
<othercit>&#x201c;Content Protection for Recordable Media (CPRM) Specification&#x201d;, SD Memory Card Book Common Part, Issued by 4C Entity, http://www.4centity.com, Dec. 15, 2010, 20 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00006">
<othercit>&#x201c;Content for Recordable Media Specification&#x201d;, SD Memory Card Book, SD-SD (Separate Delivery) Part, 4C entity, Revision 0.94, Jul. 19, 2012, 114 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00007">
<othercit>&#x201c;Content Protection for eXtended Media Specification&#x201d;, Introduction and Common Cryptographic Elements, 4C entity, Revision 0.85 Preliminary Release, Sep. 27, 2010, 32 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>2</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>713168</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>726 18</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>45</number-of-drawing-sheets>
<number-of-figures>51</number-of-figures>
</figures>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Nagai</last-name>
<first-name>Yuji</first-name>
<address>
<city>Kanagawa-ken</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Kato</last-name>
<first-name>Taku</first-name>
<address>
<city>Kanagawa-ken</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Matsushita</last-name>
<first-name>Tatsuyuki</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Nagai</last-name>
<first-name>Yuji</first-name>
<address>
<city>Kanagawa-ken</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Kato</last-name>
<first-name>Taku</first-name>
<address>
<city>Kanagawa-ken</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Matsushita</last-name>
<first-name>Tatsuyuki</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Oblon, Spivak, McClelland, Maier &#x26; Neustadt, L.L.P.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Kabushiki Kaisha Toshiba</orgname>
<role>03</role>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Zand</last-name>
<first-name>Kambiz</first-name>
<department>2434</department>
</primary-examiner>
<assistant-examiner>
<last-name>Guirguis</last-name>
<first-name>Michael</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">According to one embodiment, a manufacturing method of a device to be authenticated, wherein the device includes a first memory area which is prohibited from data-reading and data-writing after shipping from a memory vendor; a second memory area which is allowed to data-read from outside after shipping from the memory vendor; and a third memory area which is allowed to data-read and data-write from outside after sipping from the memory vendor.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="164.34mm" wi="212.94mm" file="US08627455-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="247.73mm" wi="160.61mm" orientation="landscape" file="US08627455-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="235.12mm" wi="163.41mm" orientation="landscape" file="US08627455-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="94.15mm" wi="155.02mm" file="US08627455-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="244.52mm" wi="165.10mm" orientation="landscape" file="US08627455-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="229.19mm" wi="164.42mm" orientation="landscape" file="US08627455-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="107.78mm" wi="139.95mm" file="US08627455-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="238.59mm" wi="165.44mm" orientation="landscape" file="US08627455-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="143.76mm" wi="83.99mm" file="US08627455-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="151.30mm" wi="142.24mm" file="US08627455-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="233.00mm" wi="146.73mm" orientation="landscape" file="US08627455-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="199.98mm" wi="139.95mm" orientation="landscape" file="US08627455-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="244.60mm" wi="156.29mm" orientation="landscape" file="US08627455-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="243.76mm" wi="159.77mm" orientation="landscape" file="US08627455-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="242.40mm" wi="171.87mm" orientation="landscape" file="US08627455-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="235.46mm" wi="168.99mm" file="US08627455-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="231.22mm" wi="160.61mm" file="US08627455-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="244.18mm" wi="147.66mm" orientation="landscape" file="US08627455-20140107-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="249.34mm" wi="164.08mm" orientation="landscape" file="US08627455-20140107-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="235.46mm" wi="147.66mm" orientation="landscape" file="US08627455-20140107-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="222.67mm" wi="157.90mm" orientation="landscape" file="US08627455-20140107-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="238.59mm" wi="141.65mm" orientation="landscape" file="US08627455-20140107-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00022" num="00022">
<img id="EMI-D00022" he="244.43mm" wi="122.60mm" orientation="landscape" file="US08627455-20140107-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00023" num="00023">
<img id="EMI-D00023" he="243.84mm" wi="129.12mm" orientation="landscape" file="US08627455-20140107-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00024" num="00024">
<img id="EMI-D00024" he="240.71mm" wi="122.43mm" orientation="landscape" file="US08627455-20140107-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00025" num="00025">
<img id="EMI-D00025" he="296.67mm" wi="209.89mm" orientation="landscape" file="US08627455-20140107-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00026" num="00026">
<img id="EMI-D00026" he="235.97mm" wi="152.15mm" orientation="landscape" file="US08627455-20140107-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00027" num="00027">
<img id="EMI-D00027" he="194.14mm" wi="127.00mm" file="US08627455-20140107-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00028" num="00028">
<img id="EMI-D00028" he="247.31mm" wi="100.08mm" orientation="landscape" file="US08627455-20140107-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00029" num="00029">
<img id="EMI-D00029" he="232.58mm" wi="134.70mm" file="US08627455-20140107-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00030" num="00030">
<img id="EMI-D00030" he="236.47mm" wi="157.82mm" orientation="landscape" file="US08627455-20140107-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00031" num="00031">
<img id="EMI-D00031" he="195.24mm" wi="159.85mm" file="US08627455-20140107-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00032" num="00032">
<img id="EMI-D00032" he="235.12mm" wi="151.81mm" file="US08627455-20140107-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00033" num="00033">
<img id="EMI-D00033" he="115.82mm" wi="74.51mm" file="US08627455-20140107-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00034" num="00034">
<img id="EMI-D00034" he="211.67mm" wi="138.51mm" file="US08627455-20140107-D00034.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00035" num="00035">
<img id="EMI-D00035" he="248.41mm" wi="122.77mm" orientation="landscape" file="US08627455-20140107-D00035.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00036" num="00036">
<img id="EMI-D00036" he="213.78mm" wi="89.58mm" orientation="landscape" file="US08627455-20140107-D00036.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00037" num="00037">
<img id="EMI-D00037" he="248.75mm" wi="167.56mm" orientation="landscape" file="US08627455-20140107-D00037.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00038" num="00038">
<img id="EMI-D00038" he="246.63mm" wi="152.15mm" orientation="landscape" file="US08627455-20140107-D00038.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00039" num="00039">
<img id="EMI-D00039" he="249.09mm" wi="160.95mm" orientation="landscape" file="US08627455-20140107-D00039.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00040" num="00040">
<img id="EMI-D00040" he="244.18mm" wi="163.07mm" orientation="landscape" file="US08627455-20140107-D00040.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00041" num="00041">
<img id="EMI-D00041" he="245.62mm" wi="158.50mm" orientation="landscape" file="US08627455-20140107-D00041.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00042" num="00042">
<img id="EMI-D00042" he="238.93mm" wi="135.38mm" orientation="landscape" file="US08627455-20140107-D00042.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00043" num="00043">
<img id="EMI-D00043" he="245.28mm" wi="131.91mm" orientation="landscape" file="US08627455-20140107-D00043.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00044" num="00044">
<img id="EMI-D00044" he="246.30mm" wi="155.70mm" orientation="landscape" file="US08627455-20140107-D00044.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00045" num="00045">
<img id="EMI-D00045" he="237.57mm" wi="126.92mm" orientation="landscape" file="US08627455-20140107-D00045.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD</heading>
<p id="p-0002" num="0001">Embodiments described herein relate generally to a manufacturing method.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">In general, in fields of information security, a method using mutually shared secret information and an encryptor is adopted as means for certifying one's own authenticity.</p>
<p id="p-0004" num="0003">For example, in an IC card (Smart Card), etc., which are used for electronic settlement, an ID and secret information for individualizing the IC card are stored in an IC in the card. Further, the IC card has a cipher processing function for executing authentication based on the ID and secret information.</p>
<p id="p-0005" num="0004">In another example, an authentication method called Content Protection for Recordable Media (CPRM) is specified as means for certifying authenticity of an SD (registered trademark) card in protection of copyrighted contents.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram showing a configuration example of a memory system according to a first embodiment;</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 2</figref> is a flow chart showing an authentication flow of the memory system according to the first embodiment;</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram showing a configuration example of an encrypted FKey bundle (FKB) according to the first embodiment;</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram showing a configuration example of the memory system according to the first embodiment;</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 5</figref> is a diagram illustrating a write process of secret information by a NAND manufacturer according to the first embodiment;</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 6</figref> is a flow chart showing a process in <figref idref="DRAWINGS">FIG. 5</figref>;</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 7</figref> is a diagram illustrating a write process of FKB by a card manufacturer according to the first embodiment;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 8</figref> is a flow chart showing a process in <figref idref="DRAWINGS">FIG. 7</figref>;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 9</figref> is a diagram showing an authenticatee according to a first modification;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 10</figref> is a block diagram showing a system downloading FKB according to the first modification;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 11</figref> is a flow chart showing a flow of downloading FKB according to the first modification;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 12</figref> and <figref idref="DRAWINGS">FIG. 13</figref> are block diagrams showing a configuration example of a memory system according to second and third embodiments, respectively;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 14</figref> is a flow chart showing the authentication flow of the memory system according to the third embodiment;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 15</figref> is a block diagram showing a configuration example of a memory system according to a fourth embodiment;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 16</figref> is a flow chart showing the authentication flow of the memory system according to the fourth embodiment;</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 17</figref> is a block diagram showing a configuration example of function control according to the third or fourth embodiment;</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 18</figref> is a block diagram showing an overall configuration example of a NAND chip according to a fifth embodiment;</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 19</figref> is an equivalent circuit diagram showing a configuration example of one block of the NAND chip in <figref idref="DRAWINGS">FIG. 18</figref>;</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIGS. 20A</figref>, <b>20</b>B, <b>20</b>C, and <b>20</b>D are block diagrams showing configuration examples of a cell array according to the fifth embodiment;</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 21</figref> is a diagram showing read-only data in a ROM block according to the fifth embodiment;</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIGS. 22</figref>, <b>23</b>, <b>24</b>, and <b>25</b> are block diagrams showing first, second, third, and fourth configuration examples of ECC;</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 26</figref> is a diagram showing confidential data in a confidential block according to the fifth embodiment;</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 27</figref> is a diagram showing an example of an access control pattern according to the fifth embodiment;</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 28</figref> is a block diagram showing a usage example of the access control pattern according to the fifth embodiment;</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 29</figref> is a diagram showing a test flow according to the fifth embodiment;</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 30</figref> is a diagram showing a data erasure flow according to the fifth embodiment;</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 31</figref> is a block diagram showing a configuration example of a NAND chip according to a sixth embodiment;</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 32</figref> and <figref idref="DRAWINGS">FIG. 33</figref> are diagrams showing first and second operation flows of the NAND chip according to the sixth embodiment;</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 34</figref> is a diagram showing a test flow according to the sixth embodiment;</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 35</figref> is a diagram showing an inspection flow of hidden information according to the sixth embodiment;</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIGS. 36A and 36B</figref> are timing charts showing a command mapping example according to a seventh embodiment;</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIGS. 37A and 37B</figref> are timing charts showing a command mapping example (Set/Get feature commands) according to the seventh embodiment;</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 38</figref> is a diagram showing a configuration example of a memory card according to an eighth embodiment;</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 39</figref> is a diagram showing a first application example to content protection according to the eighth embodiment;</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 40</figref> and <figref idref="DRAWINGS">FIG. 41</figref> are diagrams showing first and second application examples to the HDD according to the eighth embodiment;</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIGS. 42</figref>, <b>43</b>, and <b>44</b> are diagrams showing second, third, and fourth application examples to the content protection according to the eighth embodiment;</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 45</figref> is a block diagram showing a configuration example of a sense amplifier according to a second modification and a peripheral circuit thereof; and</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 46</figref> is an equivalent circuit diagram of the sense amplifier and a data cache in <figref idref="DRAWINGS">FIG. 45</figref>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0044" num="0043">In general, according to one embodiment,</p>
<p id="p-0045" num="0044">(1) A semiconductor memory device including:</p>
<p id="p-0046" num="0045">a cell array including at least an ordinary area accessible from the outside, a hidden area to which access request from the outside is restricted, and an identification information record area in which identification information which defines a condition for accessing the hidden area is recorded;</p>
<p id="p-0047" num="0046">an authentication circuit which performs authentication with the outside; and</p>
<p id="p-0048" num="0047">a sensing circuit which recognizes information recorded in the identification information storage area, determines the information recorded in the identification information record area when an access request from the outside selects the hidden area, validates an access to the hidden area from the outside when determined that the identification information is recorded, and invalidates an access to the hidden area from the outside when determined that the identification information is not recorded.</p>
<p id="p-0049" num="0048">(2) In the device of (1), the identification information includes bits, sub identification information items, or complementary information.</p>
<p id="p-0050" num="0049">(3) In the device of (2), the sensing circuit performs a complementary determination for each sub identification information item, and determines whether complementary determination results in the identification information are equal to or more than a predetermined number to determine whether the identification information is recorded.</p>
<p id="p-0051" num="0050">(4) In the device of any of (1) to (3), hidden information is recorded in the hidden area by the authentication circuit.</p>
<p id="p-0052" num="0051">(5) In the device of any of (1) to (4), when the access request is a request to erase information recorded in the hidden area, the sensing circuit performs the erasure of information recorded in the hidden area when determined that the identification information is recorded and does not perform the erasure of the information recorded in the hidden area when determined that the identification information is not recorded.</p>
<p id="p-0053" num="0052">(6) In the device of any of (1) to (4), when the access request is a request to write information in the hidden area, the sensing circuit performs the writing of information in the hidden area when determined that the identification information is recorded and does not perform the writing of the information in the hidden area when determined that the identification information is not recorded.</p>
<p id="p-0054" num="0053">(7) In the device of any of (1) to (4), when the access request is a request to read information recorded in the hidden area, the sensing circuit performs the reading of information recorded in the hidden area when determined that the identification information is recorded and does not perform the reading of information recorded in the hidden area when determined that the identification information is not recorded.</p>
<p id="p-0055" num="0054">(8) In the device of any of (1) to (4), when the access request is a request to erase information recorded in the ordinary area, the sensing circuit performs the erasure of information recorded in the ordinary area without determining the information recorded in the identification information record area.</p>
<p id="p-0056" num="0055">(9) In the device of any of (1) to (4), when the access request is a request to write information in the ordinary area, the sensing circuit performs the writing of information in the ordinary area without determining the information recorded in the identification information record area.</p>
<p id="p-0057" num="0056">(10) In the device of any of (1) to (4), when the access request is a request to read information recorded in the ordinary area, the sensing circuit performs the reading of information recorded in the ordinary area without determining the information recorded in the identification information record area.</p>
<p id="p-0058" num="0057">(11) In the device of any of (1) to (10), the cell array includes blocks which are minimum erasure units, at least one block is assigned to the ordinary area, at least one block is assigned to the hidden area, and the identification information record area is positioned in the block assigned to the hidden area.</p>
<p id="p-0059" num="0058">(12) In the device of (11), one block includes pages which are writing and reading units, and the identification information record area is positioned in only one page within one block.</p>
<p id="p-0060" num="0059">(13) In the device of (11), one block includes pages which are writing and reading units, and the identification information record area is positioned in pages within one block.</p>
<p id="p-0061" num="0060">(14) In the device of any of (1) to (13), the sensing circuit outputs outside a status signal indicative of invalidation of an access to the hidden area when determined that the identification information is not recorded.</p>
<p id="p-0062" num="0061">(15) The device of (5), further including a sequence control circuit which controls at least erasure, writing, and reading of the cell array, wherein the sensing circuit outputs a signal indicative of invalidation of erasure to the sequence control circuit when determined that the identification information is recorded.</p>
<p id="p-0063" num="0062">(16) The device of (6), further including a sequence control circuit which controls at least erasure, writing, and reading of the cell array, wherein the sensing circuit outputs a signal indicative of invalidation of writing to the sequence control circuit when determined that the identification information is recorded.</p>
<p id="p-0064" num="0063">(17) The device of (7), further including a sequence control circuit which controls at least erasure, writing, and reading of the cell array, wherein the sensing circuit outputs a signal indicative of invalidation of reading to the sequence control circuit when determined that the identification information is recorded.</p>
<p id="p-0065" num="0064">(18) In the device of any of (15) to (17), the sequence control circuit is commonly used between the ordinary area and hidden area.</p>
<p id="p-0066" num="0065">a function call unit configured to return an instruction to call the specific function of the semiconductor memory device, when the transmitted authentication information matches with authentication information generated by the semiconductor memory device.</p>
<p id="p-0067" num="0066">(19) A device to be authenticated comprising:</p>
<p id="p-0068" num="0067">a first memory area being used to store a first key (NKey) and secret identification information (SecretID) unique to the device, the first memory area being prohibited from being read and written from outside of the device at least after shipping;</p>
<p id="p-0069" num="0068">a second memory area being used to store encrypted secret identification information (E-SecretID) generated by encrypting the secret identification information (SecretID), the second memory area being required to be read-only from outside of the device;</p>
<p id="p-0070" num="0069">a third memory area being required to be readable and writable from outside of the device;</p>
<p id="p-0071" num="0070">a first data generator configured to generate a second key (HKey) by encrypting a host constant (HC) with the first key (NKey) in AES operation;</p>
<p id="p-0072" num="0071">a second data generator configured to generate a session key (SKey) by encrypting a random number (RN) with the second key (HKey) in AES operation;</p>
<p id="p-0073" num="0072">a one-way function processor configured to generate an authentication information (Oneway-ID) by processing the secret identification information (SecretID) with the session key (SKey) in one-way function operation; and</p>
<p id="p-0074" num="0073">a data output interface configured to output the encrypted secret identification information (E-SecretID) and the authentication information (Oneway-ID) to outside of the device.</p>
<p id="p-0075" num="0074">(20) A device to be authenticated comprising:</p>
<p id="p-0076" num="0075">a first memory area being used to store a first key (NKey) and secret identification information (SecretID) unique to the device, the first memory area being prohibited from being read and written from outside of the device at least after shipping;</p>
<p id="p-0077" num="0076">a second memory area being used to store encrypted secret identification information (E-SecretID) generated by encrypting the secret identification information (SecretID), the second memory area being required to be read-only from outside of the device;</p>
<p id="p-0078" num="0077">a third memory area being required to be readable and writable from outside of the device;</p>
<p id="p-0079" num="0078">a first data generator configured to generate a second key (HKey) by encrypting a host constant (HC) with the first key (NKey);</p>
<p id="p-0080" num="0079">a second data generator configured to generate a session key (SKey) by encrypting a random number (RN) with the second key (HKey);</p>
<p id="p-0081" num="0080">a one-way function processor configured to generate an authentication information (Oneway-ID) by processing the secret identification information (SecretID) with the session key (SKey) in one-way function operation; and</p>
<p id="p-0082" num="0081">a data output interface configured to output the encrypted secret identification information (E-SecretID) and the authentication information (Oneway-ID) to outside of the device.</p>
<p id="p-0083" num="0082">(21) A device to be authenticated comprising:</p>
<p id="p-0084" num="0083">a first memory area being used to store a first key (NKey) and secret identification information (SecretID) unique to the device;</p>
<p id="p-0085" num="0084">a second memory area being used to store encrypted secret identification information (E-SecretID) generated by encrypting the secret identification information (SecretID);</p>
<p id="p-0086" num="0085">a first data generator configured to generate a second key (HKey) by encrypting a host constant (HC) with the first key (NKey) in AES operation;</p>
<p id="p-0087" num="0086">a second data generator configured to generate a session key (SKey) by encrypting a random number (RN) with the second key (HKey) in AES operation;</p>
<p id="p-0088" num="0087">a one-way function processor configured to generate an authentication information (Oneway-ID) by processing the secret identification information (SecretID) with the session key (SKey) in one-way function operation; and</p>
<p id="p-0089" num="0088">a data output interface configured to output the encrypted secret identification information (E-SecretID) and the authentication information (Oneway-ID) to outside of the device.</p>
<p id="p-0090" num="0089">(22) A device to be authenticated comprising:</p>
<p id="p-0091" num="0090">a first memory area being used to store a first key (NKey) and unique secret identification information (SecretID), the first memory area being restricted from being read and written from outside;</p>
<p id="p-0092" num="0091">a second memory area being used to store encrypted secret identification information (E-SecretID) generated by encrypting the secret identification information (SecretID), the second memory area being allowed to be read-only from outside;</p>
<p id="p-0093" num="0092">a third memory area being readable and writable from outside;</p>
<p id="p-0094" num="0093">a first data generator configured to generate a second key (HKey) by using the first key (NKey);</p>
<p id="p-0095" num="0094">a second data generator configured to generate a session key (SKey) by using the second key (HKey); and</p>
<p id="p-0096" num="0095">a one-way function processor configured to generate an authentication information by processing the secret identification information with the session key in one-way function operation,</p>
<p id="p-0097" num="0096">wherein the encrypted secret identification information (E-SecretID) and the authentication information (Oneway-ID) are output to outside.</p>
<p id="p-0098" num="0097">(23) A device to be authenticated comprising:</p>
<p id="p-0099" num="0098">a memory area being used to store a first key (NKey), unique secret identification information (SecretID), and encrypted secret identification information (E-SecretID), the encrypted secret identification information (E-SecretID) being generated by encrypting the secret identification information (SecretID), the first key (NKey) and the secret identification information (SecretID) being prohibited from being read from outside, the encrypted secret identification information (E-SecretID) being readable from outside;</p>
<p id="p-0100" num="0099">a data generator configured to generate a session key (SKey) by using a second key (HKey), the second key (HKey) being generated based on the first key (NKey); and</p>
<p id="p-0101" num="0100">a one-way function processor configured to generate an authentication information by processing the secret identification information (SecretID) with the session key (SKey) in one-way function operation.</p>
<p id="p-0102" num="0101">(24) An authentication method comprising:</p>
<p id="p-0103" num="0102">generating a second key (HKey) by processing AES operation with the first key (NKey), the first key being stored in a memory and being prohibited from being read from outside;</p>
<p id="p-0104" num="0103">generating a session key (SKey) by processing AES operation with the second key (HKey);</p>
<p id="p-0105" num="0104">generating first authentication information (Oneway-ID) by processing secret identification information (SecretID) with the session key (SKey) in one-way function operation, the secret identification information (SecretID) being stored in a memory and being prohibited from being read from outside;</p>
<p id="p-0106" num="0105">transmitting encrypted secret identification information (E-SecretID) to an external device and receiving second authentication information (Oneway-ID) from the external device, the encrypted secret identification information (E-SecretID) being stored in a memory and readable, the second authentication information (Oneway-ID) being generated based on the encrypted secret identification information (E-SecretID); and</p>
<p id="p-0107" num="0106">determining whether the first authentication information and the second authentication information match.</p>
<p id="p-0108" num="0107">(25) A manufacturing method of a device to be authenticated, wherein the device includes a first memory area which is prohibited from data-reading and data-writing after shipping from a memory vendor; a second memory area which is allowed to data-read from outside after shipping from the memory vendor; and a third memory area which is allowed to data-read and data-write from outside after sipping from the memory vendor,</p>
<p id="p-0109" num="0108">the method comprising:</p>
<p id="p-0110" num="0109">storing, by the memory vendor, first key (NKey) and secret identification information unique to the device into the first memory area, and storing, by the memory vendor, encrypted secret identification information (E-SecretID) generated by encrypting the secret identification information (SecretID) into the second memory area; and</p>
<p id="p-0111" num="0110">storing, by a vendor different from the memory vendor, a family key block (FKB) into the third memory area, the family key block (FKB) generating information to allow to decrypt the encrypted secret identification information (E-SecretID).</p>
<p id="p-0112" num="0111">(26) A manufacturing method of a device to be authenticated, wherein the device includes a first memory area which is prohibited from data-reading and data-writing after shipping from a first manufacturing unit; a second memory area which is allowed to data-read from outside after shipping from the first manufacturing unit; and a third memory area which is allowed to data-read and data-write from outside after sipping from the first manufacturing unit,</p>
<p id="p-0113" num="0112">the method comprising:</p>
<p id="p-0114" num="0113">storing, by the memory vendor, first key (NKey) and secret identification information unique to the device into the first memory area, and storing, by the memory vendor, encrypted secret identification information (E-SecretID) generated by encrypting the secret identification information (SecretID) into the second memory area; and</p>
<p id="p-0115" num="0114">storing, by a second manufacturing unit, a family key block (FKB) into the third memory area, the family key block (FKB) generating information to allow to decrypt the encrypted secret identification information (E-SecretID).</p>
<p id="p-0116" num="0115">(27) A device comprising:</p>
<p id="p-0117" num="0116">a memory being used to store a host identification key (IDKey), a host constant (HC), and a first key (HKey), the first key (HKey) being generated based on the host constant (HC);</p>
<p id="p-0118" num="0117">a first generator configured to decrypt a family key block read from an external device with the host identification key (IDKey) to generate a family key (FKey);</p>
<p id="p-0119" num="0118">a second generator configured to decrypt encrypted secret identification information (E-SecretID) read from the external device with the family key (FKey) to generate a secret identification information (SecretID);</p>
<p id="p-0120" num="0119">a third generator configured to generate a random number (RN);</p>
<p id="p-0121" num="0120">a fourth generator configured to generate a session key (SKey) by using the first key (HKey) and the random number (RN);</p>
<p id="p-0122" num="0121">a fifth generator configured to generate a first authentication information (Oneway-ID) by processing the secret identification information (SecretID) with the session key (SKey) in one-way function operation; and</p>
<p id="p-0123" num="0122">a verification unit configured to determine whether the first authentication information (Oneway-ID) and a second authentication information (Oneway-ID) match, the second authentication information (Oneway-ID) being generated by the external device with the host constant (HC) transmitted to the external device.</p>
<p id="p-0124" num="0123">(28) A method of authenticating a device by an authenticator, wherein</p>
<p id="p-0125" num="0124">the device includes</p>
<p id="p-0126" num="0125">a first memory area storing first secret identification information (SecretID) unique to the device and a first key (NKey), the first memory area being prohibited from being read and written from outside of the device at least after shipment of the device, and</p>
<p id="p-0127" num="0126">a second memory area storing encrypted secret identification information (E-SecretID), the second memory area being required to be read-only from outside of the device, and</p>
<p id="p-0128" num="0127">the authenticator stores a host constant (HC), a host identification key (IDKey) hidden from outside of the authenticator, and a second key (HKey) hidden from outside of the authenticator,</p>
<p id="p-0129" num="0128">the method comprising:</p>
<p id="p-0130" num="0129">reading the encrypted secret identification information (E-SecretID) from the device by the authenticator;</p>
<p id="p-0131" num="0130">generating second secret identification information (SecretID) by decrypting the encrypted secret identification information (E-SecretID) by the authenticator;</p>
<p id="p-0132" num="0131">generating a random number (RN) by the authenticator;</p>
<p id="p-0133" num="0132">reading the host constant (HC) and the random number (RN) from the authenticator by the device;</p>
<p id="p-0134" num="0133">generating a third key (HKey&#x2032;) using the host constant (HC) and the first key (NKey) by the device;</p>
<p id="p-0135" num="0134">generating a first session key (SKey) using the third key (HKey&#x2032;) and the random number (RN) by the device;</p>
<p id="p-0136" num="0135">generating a second session key (SKey&#x2032;) using the second key (HKey) and the random number (RN) by the authenticator;</p>
<p id="p-0137" num="0136">generating first authentication information (Oneway-ID) by processing the first secret information (SecretID) with the first session key (SKey) in one-way function operation by the device;</p>
<p id="p-0138" num="0137">generating second authentication information (Oneway-ID&#x2032;) by processing the second secret information (SecretID) with the second session key (SKey&#x2032;) in one-way function operation by the authenticator;</p>
<p id="p-0139" num="0138">reading the first authentication information (Oneway-ID) from the device by the authenticator; and</p>
<p id="p-0140" num="0139">determining whether the first authentication information (Oneway-ID) and the second authentication information (Oneway-ID&#x2032;) match by the authenticator.</p>
<p id="p-0141" num="0140">(29) A method of authenticating a first device and a second device each other, wherein</p>
<p id="p-0142" num="0141">first secret identification information (SecretID), a first key (NKey), and encrypted secret identification information (E-SecretID) are stored in the first device, the first secret identification information (SecretID) and a first key (NKey) are prohibited from being read from outside, and the encrypted secret identification information (E-SecretID) is readable, and</p>
<p id="p-0143" num="0142">a host constant (HC), host identification key (IDKey), and a second key (HKey) are stored in the second device,</p>
<p id="p-0144" num="0143">the method comprising:</p>
<p id="p-0145" num="0144">generating second secret identification information (SecretID) by decrypting the encrypted secret identification information (E-SecretID) read from the first device by the second device;</p>
<p id="p-0146" num="0145">generating a random number (RN) by the second device;</p>
<p id="p-0147" num="0146">generating a third key (HKey&#x2032;) by using the host constant (HC) read from the first device and the first key (NKey) by the first device;</p>
<p id="p-0148" num="0147">generating a first session key (SKey) by using the third key (HKey&#x2032;) and the random number (RN) by the first device;</p>
<p id="p-0149" num="0148">generating first authentication information (Oneway-ID) by processing the first secret information (SecretID) with the first session key (SKey) in one-way function operation by the first device;</p>
<p id="p-0150" num="0149">generating a second session key (SKey&#x2032;) by using the second key (HKey) and the random number (RN) by the second device;</p>
<p id="p-0151" num="0150">generating second authentication information (Oneway-ID&#x2032;) by processing the second secret information (SecretID) with the second session key (SKey&#x2032;) in one-way function operation by the second device; and</p>
<p id="p-0152" num="0151">determining whether the first authentication information (Oneway-ID) and the second authentication information (Oneway-ID&#x2032;) match by the second device.</p>
<p id="p-0153" num="0152">(30) A device comprising:</p>
<p id="p-0154" num="0153">a memory being used to store a host identification key (IDKey), a host constant (HC), and a first key (HKey), the first key (HKey) being generated based on the host constant (HC);</p>
<p id="p-0155" num="0154">a generator configured to decrypt encrypted secret identification information (E-SecretID) read from the external device by using information generated with the host identification key (IDKey) to generate a secret identification information (SecretID);</p>
<p id="p-0156" num="0155">a third generator configured to generate a random 2number (RN);</p>
<p id="p-0157" num="0156">a fourth generator configured to generate a session key (SKey) by using the first key (HKey) and the random number (RN);</p>
<p id="p-0158" num="0157">a fifth generator configured to generate a first authentication information (Oneway-ID) by processing the secret identification information (SecretID) with the session key (SKey) in one-way function operation; and</p>
<p id="p-0159" num="0158">a verification unit configured to determine whether the first authentication information (Oneway-ID) and a second authentication information (Oneway-ID) match, the second authentication information (Oneway-ID) being generated by the external device with the host constant (HC) transmitted to the external device.</p>
<p id="p-0160" num="0159">(31) A device comprising:</p>
<p id="p-0161" num="0160">a memory being used to store a host identification key (IDKey), a host constant (HC), and a first key (HKey), the first key (HKey) being generated based on the host constant (HC);</p>
<p id="p-0162" num="0161">a first generator configured to decrypt a family key block read from an external device with the host identification key (IDKey) to generate a family key (FKey);</p>
<p id="p-0163" num="0162">a second generator configured to decrypt encrypted secret identification information (E-SecretID) read from the external device with the family key (FKey) to generate a secret identification information (SecretID);</p>
<p id="p-0164" num="0163">a third generator configured to generate a random number (RN);</p>
<p id="p-0165" num="0164">a fourth generator configured to generate a session key (SKey) by using the first key (HKey) and the random number (RN);</p>
<p id="p-0166" num="0165">a fifth generator configured to generate a first authentication information (Oneway-ID) by processing the secret identification information (SecretID) with the session key (SKey) in one-way function operation; and</p>
<p id="p-0167" num="0166">a verification unit configured to determine whether the first authentication information (Oneway-ID) and a second authentication information (Oneway-ID) match, the second authentication information (Oneway-ID) being generated by the external device with the host constant (HC) transmitted to the external device.</p>
<p id="p-0168" num="0167">wherein the first key (NKey) and the secret identification information (SecretID) issued by a key issuer and be stored in the memory by a memory manufacture, and the family key block (FKB) issued by the key issuer and be stored in the memory by a card manufacture.</p>
<p id="p-0169" num="0168">When a security system adopting a process of authentication is constructed, it is necessary to assume a case in which a device which executes the process of the authentication is attacked, and hidden information is extracted. Therefore, the method of revoking extracted hidden information becomes important.</p>
<p id="p-0170" num="0169">In the above-described CPRM or in Advanced Access Content System (AACS) that is a copyright protection technique specified for protecting content recorded in a Blu-ray Disc, Media Key Block (MKB) is used for revoking a device key that is hidden information. In another method adopting a protocol based on public key cryptosystem, a list (Revocation List) of a public key certificate, which is paired with leaked private key information is used.</p>
<p id="p-0171" num="0170">As an example, a system of playing back video content, which is recorded in an SD card, by software that is installed in a PC is taken. A CPRM process is implemented in the SD by hardware, therefore, it is very difficult to unlawfully extract hidden information. Compared to this, in many cases, it is easier to extract hidden information from the video playback software as a method of an attack. Actually, many software items for unlawfully decrypting content recorded in protected DVD or Blu-ray disk have been available. In such unlawful software, hidden information, which is extracted from an authentic software player, is utilized.</p>
<p id="p-0172" num="0171">In addition, in some cases, it is necessary to take countermeasures against card-falsifying software or a false SD card. For example, an imitative SD card in disguise is produced by using hidden information extracted from authentic software, thereby to deceitfully use an authentic software player. For instance, a false SD card is produced such that an encryption key, which was used in encryption of content, can be easily read out from the false SD card. Thereby, it becomes possible to easily decrypt the video content recorded in the false SD card, by using an authentic video recorder.</p>
<p id="p-0173" num="0172">An authenticator may be provided not only as a dedicated hardware device such as a consumer device, but also as a program (software) which is executable in a PC (personal computer) or the like, and, in some cases, the software functions as a substantial authenticator. On the other hand, an authenticatee is, for instance, recording media or the like. The authenticatee is a device to be authenticated. For example, the authenticatee includes a discrete device (for example, memory device), a module (for example, a card in which the memory device is embedded), an apparatus (for example, an apparatus with built-in modules), and a combination of any of the device, the module, and the apparatus. Even in the case where a program called &#x201c;firmware&#x201d; mediates in the operation of hardware which constitutes the recording media, an important process or information is stored in a hidden state in hardware in the cell array. Thus, in the case where software which is executed on the PC is the authenticator, there is concern that the tamper-resistance (the resistance to attacks) becomes lower, compared to the authenticatee such as recording media.</p>
<p id="p-0174" num="0173">Thus, there is concern that, by attacking an authenticator with a low tamper-resistance, secret information hidden in an authenticatee with a high tamper-resistance is also exposed, leading to a disguise as a device with a high tamper-resistance. To deal with such a situation, a method of efficiently preventing unlawful use of secret information is demanded.</p>
<p id="p-0175" num="0174">In addition, in recent years, such a demand tends to be strong even in an environment in which restrictions are also imposed on circuit scales, for example, in an environment in which hardware implementation of a public key cryptosystem process or an MKB process, which requires a relatively large circuit scale, is difficult to achieve. Therefore, a method of efficiently preventing unlawful use of secret information while controlling an increase of the circuit scale to a minimum is demanded.</p>
<p id="p-0176" num="0175">A plurality of embodiments will be described below with reference to drawings. In the description below, a memory system is taken as an example of an authenticator, an authenticatee, and an authentication method, but the embodiments are not limited to such an example. In the description below, common parts are denoted by like reference numerals throughout the drawings.</p>
<heading id="h-0005" level="1">First Embodiment</heading>
<p id="p-0177" num="0176">An authenticator, an authenticatee, and an authentication method according to a first embodiment will be described.</p>
<p id="p-0178" num="0177">&#x3c;1. Configuration Example (Memory System)&#x3e;</p>
<p id="p-0179" num="0178">A configuration example of a memory system according to the first embodiment will be described by using <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0180" num="0179">As shown in <figref idref="DRAWINGS">FIG. 1</figref>, the memory system according to the first embodiment includes a NAND flash memory <b>10</b> as an authenticatee, a host device <b>20</b> as an authenticator, and a controller <b>19</b> mediating therebetween. The host device <b>20</b> accesses the NAND flash memory <b>10</b> via the controller <b>19</b>.</p>
<p id="p-0181" num="0180">Here, a manufacturing process of a semiconductor product such as the NAND flash memory <b>10</b> will briefly be described. The manufacturing process of a semiconductor product can mainly divided into a preprocess to form a circuit on a substrate wafer and a postprocess to cut the wafer to individual pieces and then to perform wiring and packaging a piece in a resin.</p>
<p id="p-0182" num="0181">The controller <b>19</b> is configured in various ways such being configured to be included in the NAND flash memory <b>10</b> in the preprocess, configured to be included in the same package in the postprocess, though not included in the preprocess, and provided as a different chip from the NAND flash memory <b>10</b>. The description below including <figref idref="DRAWINGS">FIG. 1</figref> is provided by taking a case when the controller <b>19</b> is provided as a different chip from the NAND flash memory <b>10</b> as an example.</p>
<p id="p-0183" num="0182">If not mentioned specifically below, the controller <b>19</b> mediates between the host device <b>20</b> and the NAND flash memory <b>10</b> in many cases to exchange data and instructions therebetween. Even in such a case, the controller <b>19</b> does not change intrinsic content of the above data and instructions and thus, details may be provided below as an abbreviated description. Details of configuration examples of the NAND flash memory <b>10</b> and the controller <b>19</b> will be provided later.</p>
<p id="p-0184" num="0183">If the host device <b>20</b> is configured as dedicated hardware like a consumer device, not only a case where the device is configured by combining dedicated hardware with firmware to operate the dedicated hardware, but also a case where all functions of the device are realized by software operating in a PC can be assumed. The present embodiment can basically be applied regardless of which configuration the host device <b>20</b> adopts.</p>
<p id="p-0185" num="0184">Each component and data processing shown in <figref idref="DRAWINGS">FIG. 1</figref> will be described below. The present embodiment shows the method of reading secret identification information SecretID recorded in an authenticatee in a state hidden from third parties and also verifying that the data has been read from an authentic authenticatee and a configuration example when the method is applied to a memory system using the NAND flash memory <b>10</b>.</p>
<p id="p-0186" num="0185">1-1. NAND Flash Memory</p>
<p id="p-0187" num="0186">In the present embodiment, the NAND flash memory <b>10</b> is an authenticatee.</p>
<p id="p-0188" num="0187">As shown in <figref idref="DRAWINGS">FIG. 1</figref>, the NAND flash memory <b>10</b> according to the present embodiment includes a cell array (Cell array) <b>11</b>, a data cache (Data Cache) <b>12</b> disposed in a peripheral area of the cell array <b>11</b>, data generators (Generate) <b>13</b>, <b>14</b>, and a one-way converter (Oneway) <b>15</b>. The data generators (Generate) <b>13</b>, <b>14</b> and the one-way converter (Oneway) <b>15</b> constitute an authentication circuit <b>17</b>.</p>
<p id="p-0189" num="0188">The cell array <b>11</b> includes a read/write area (Read/Write area) <b>11</b>-<b>1</b> permitted to read and write into from outside, a hidden area (Hidden area) <b>11</b>-<b>2</b> inhibited from both reading and writing into from outside, and a ROM area (ROM area) <b>11</b>-<b>3</b> inhibited from writing into from outside.</p>
<p id="p-0190" num="0189">The read/write area (ordinary area) <b>11</b>-<b>1</b> is an area into which data can be written and from which data can be read from outside the NAND flash memory <b>10</b>. In the read/write area <b>11</b>-<b>1</b>, key management information FKBv (Family Key Block) that is an encrypted FKey bundle prepared to hide FKeyv is stored. In contrast to other data recorded in the NAND flash memory <b>10</b>, FKBv may be record when the NAND flash memory <b>10</b> is fabricated, or when the storage media for general user is fabricated by connecting the controller to the NAND flash memory <b>10</b>. Alternatively, FKBv may be downloaded from a server in accordance with a user's request after shipping. That is, a third memory area <b>11</b>-<b>1</b> is used to store a family key block FKB including data generated by encrypting the family key FKey with a host identification key IDKey, the third memory area <b>11</b>-<b>1</b> being required to be readable and writable from outside of the authenticator. Details thereof will be described below.</p>
<p id="p-0191" num="0190">The key management information FKBv is information used to decrypt hidden information FKeyv based on secret information IDKeyk held by the host device <b>20</b> and index information k of the secret information IDKeyk, or information used to decrypt hidden information FKeyv based on secret information IDKeyk held by the host device <b>20</b> and identification information of the host device <b>20</b>.</p>
<p id="p-0192" num="0191">The key management information FKBv is also information not only prepared uniquely for each of the NAND flash memories <b>10</b>, but also can be commonly attached to (can be associated with) a plurality of the NAND flash memories <b>10</b> such as the production lot unit or wafer unit of the NAND flash memories <b>10</b> in accordance with the manufacturing process. Index information v of the key management information FKBv may be identification information or version number information of the key management information FKBv.</p>
<p id="p-0193" num="0192">The hidden area <b>11</b>-<b>2</b> is an area inhibited from both reading and writing into from outside the NAND flash memory <b>10</b>. In the hidden area <b>11</b>-<b>2</b>, secret information NKeyi used by the NAND flash memory <b>10</b> for an authentication process and secret identification information SecretID of the NAND flash memory <b>10</b> are recorded. That is, a first memory area <b>11</b>-<b>2</b> is used to store a first key NKey and secret identification information SecretID unique to the authenticator, the first memory area <b>11</b>-<b>2</b> being prohibited from being read and written from outside of the authenticator at least after shipping.</p>
<p id="p-0194" num="0193">The ROM area <b>11</b>-<b>3</b> is an area inhibited from writing into from outside the NAND flash memory <b>10</b>, but is permitted to read data therefrom. In the ROM area <b>11</b>-<b>3</b>, index information v (index of FKey) to indicate hidden information FKeyv hidden by the key management information FKBv, secret identification information (SecretID) encrypted by the hidden information Fkeyv (E-SecretID), and index information i (index of NKey) to indicate the secret information NKeyi are recorded. That is, a second memory area <b>11</b>-<b>3</b> is used to store an encrypted secret identification information E-SecredID generated by encrypting the identification information SecretID with a family key FKey, the second memory area <b>11</b>-<b>3</b> being required to be read-only from outside of the authenticator.</p>
<p id="p-0195" num="0194">In the present embodiment, data is generally recorded after an error correction code being attached so that, even if an error occurs in data when the index information i or the index information v is recorded, correct identification information can be read. However, to simplify the description, error correction encoding and decoding processes are not specifically illustrated.</p>
<p id="p-0196" num="0195">Incidentally, the ROM area <b>11</b>-<b>3</b> may be, for example, an OTP (One Time Program) area into which data is permitted to write only once or an ordinary area permitted to read and write into in the manufacturing process of the NAND flash memory <b>10</b> before being converted into a read-only area by rewriting a management flag after shipment. Alternatively, a method may be used in which the specific write command for accessing to the ROM area and different to the command for accessing to the normal area is prepared, and this specific write command is not provided to the recipient of the NAND flash memory <b>10</b>. In addition, the ROM area may be handled as an ordinary area in the NAND flash memory <b>10</b>, but the controller <b>19</b> limits functions provided to the host device <b>20</b> to reading only.</p>
<p id="p-0197" num="0196">Because, as will be described below, information recorded in the ROM area <b>11</b>-<b>3</b> is associated with information recorded in the hidden area <b>11</b>-<b>2</b>, if information recorded in the ROM area <b>11</b>-<b>3</b> is tampered with, the authentication function of the NAND flash memory <b>10</b> cannot be made to work effectively. Therefore, there is no cause for security concern due to tampering and thus, the ROM area <b>11</b>-<b>3</b> may be replaced with an ordinary area in which the reading and writing data is permitted. In such a case, the ROM area <b>11</b>-<b>3</b> in <figref idref="DRAWINGS">FIG. 1</figref> may be replaced with the read/write area (ordinary area) <b>11</b>-<b>1</b>. In this connection, a portion of data recorded in the ROM area <b>11</b>-<b>3</b> may be recorded in the read/write area (ordinary area) <b>11</b>-<b>1</b>. For example, a configuration in which index information v (index of FKey) is recorded in the read/write area (ordinary area) and encrypted secret identification information (E-SecretID) and index information v (index of FKey) are recorded in the ROM area <b>11</b>-<b>3</b> is allowed. The above configuration examples of the ROM area <b>11</b>-<b>3</b> are also applicable to the ROM area <b>11</b>-<b>3</b> described herein as other embodiments or modifications below.</p>
<p id="p-0198" num="0197">E-SecretID is data obtained by encrypting SecretID attached uniquely to each of the NAND flash memories <b>10</b> by FKeyv. Alternatively, the same encrypted secret identification information may be recorded in a plurality of NAND flash memories as usage. For example, in pre-recording content distribution, the same content data is recorded in NAND flash memories in advance to sell the NAND flash memories, and the same E-SecretID is recorded in the NAND flash memories storing the content.</p>
<p id="p-0199" num="0198">The data cache <b>12</b> temporarily stores data read from the cell array <b>11</b>.</p>
<p id="p-0200" num="0199">The data generators <b>13</b>, <b>14</b> are circuits that generate output data from a plurality of pieces of input data by a preset operation.</p>
<p id="p-0201" num="0200">The data generator <b>13</b> generates secret information HKeyi,j by converting a constant HCj received from the host device <b>20</b> by using the above secret information NKeyi. The data generator <b>14</b> generates a session key SKeyi,j by converting a random number RNh received from the host device <b>20</b> by using the secret information HKeyi,j. The data generators <b>13</b>, <b>14</b> can be implemented as hardware (circuit), software, or a combination of hardware and software.</p>
<p id="p-0202" num="0201">If the data generators <b>13</b>, <b>14</b> are implemented as circuits, the same circuit as the one-way converter <b>15</b> described below, a circuit diverting the one-way converter, or an Advanced Encryption Standard (AES) encryptor can be used to make the circuit size smaller as a whole. Similarly, the same circuit can be used repeatedly for two data generators illustrated as different structural elements to make the data processing procedure easier to understand. In this example, a configuration of HKeyi,j=AES_E (NKeyi, HCj), SKeyi,j=AES_E (HKeyi,j, RNh) and the like can be adopted. That is, a first data generator <b>13</b> is configured to generate a second key HKey by encrypting a host constant HC with the first key NKey in AES operation. A second data generator <b>14</b> is configured to generate a session key SKey by encrypting a random number RN with the second key HKey in AES operation.</p>
<p id="p-0203" num="0202">The one-way converter <b>15</b> performs a one-way conversion on input data and key data input separately to output one-way converted input data. The one-way converter <b>15</b> can be implemented as hardware (circuit), software, or a combination of hardware and software.</p>
<p id="p-0204" num="0203">The one-way converter <b>15</b> converts the SecretID read from the hidden area <b>11</b>-<b>2</b> by a one-way function using the SKeyi,j generated by the data generator <b>14</b> to generate one-way conversion identification information Oneway-ID (=Oneway(SKeyi,j, SecretID)). If implemented as a circuit, the one-way converter <b>15</b> can also be used by diverting the data generator <b>14</b> or the like to make, as described above, the circuit size smaller as a whole. In this example, a configuration like Oneway-ID=AES_E(SKeyi,j, SecretID)(+)SecretID can be adopted. That is, one-way function processor <b>15</b> is configured to generate an authentication information Oneway-ID by processing the secret identification information SecretID with the session key SKey in one-way function operation.</p>
<p id="p-0205" num="0204">Though not shown, an output unit to output data to the host device <b>20</b> via the controller <b>19</b> and like are actually arranged as structural elements.</p>
<p id="p-0206" num="0205">1-2. Host Device</p>
<p id="p-0207" num="0206">In the present embodiment, the host device <b>20</b> is an authenticator.</p>
<p id="p-0208" num="0207">As shown in <figref idref="DRAWINGS">FIG. 1</figref>, the host device <b>20</b> according to the present embodiment includes a decrypter (Decrypt) <b>21</b>, an FKB processor (Process FKB) <b>22</b>, a memory (Memory) <b>23</b>, a random number generator (RNG) <b>24</b>, a selector (Select 2) <b>25</b>, a data generator (Generate) <b>26</b>, a one-way converter (Oneway) <b>27</b>, and a data verification unit (Verify) <b>28</b>. In addition, for example, an error correction processing unit and the like may be included if necessary.</p>
<p id="p-0209" num="0208">The decrypter <b>21</b> decrypts input data by using key data input separately to output decrypted input data. In the present embodiment, the decrypter <b>21</b> reads E-SecretID from the NAND flash memory <b>10</b> via the controller <b>19</b>. Then, the decrypter <b>21</b> decrypts the E-SecretID by using hidden information FKey input from the FKB processor <b>22</b> (data selector <b>22</b>-<b>1</b>) described below to output SecretID.</p>
<p id="p-0210" num="0209">The FKB processor <b>22</b> decrypts key management information FKBv read from the NAND flash memory <b>10</b> by using secret information IDKeyk and index information k of the IDKeyk hidden in the memory <b>23</b> to output generated hidden information FKey to the decrypter <b>21</b>. In the present embodiment, the FKB processor <b>22</b> includes a data selector (Select 1) <b>22</b>-<b>1</b> and a decrypter (Decrypt) <b>22</b>-<b>2</b>.</p>
<p id="p-0211" num="0210">The data selector <b>22</b>-<b>1</b> in the first stage selects data that can be decrypted by IDKeyk hidden in the memory <b>23</b> by using index information k recorded in the memory <b>23</b> from among an encrypted FKey bundle (key management information FKBv) read from the NAND flash memory <b>10</b> and outputs the selected data to the decrypter <b>22</b>-<b>2</b>.</p>
<p id="p-0212" num="0211">The decrypter <b>22</b>-<b>2</b> decrypts data selected by the data selector <b>22</b>-<b>1</b> by using the IDKeyk hidden in the memory <b>23</b> to output generated hidden information FKey to the decrypter <b>21</b>.</p>
<p id="p-0213" num="0212">The memory <b>23</b> records k, IDKeyk, set of HKeyi,j (i=1, . . . , m; j is a fixed value for HKeyi,j), and HCj and hides at least IDKeyk and set of HKeyi,j (i=1, . . . , m) from outside the host device <b>20</b>. The HCj is a constant held in the host device <b>20</b> in advance to be sent to the NAND flash memory <b>10</b> when authentication is requested (Request authentication). Details thereof will be described below.</p>
<p id="p-0214" num="0213">The random number generator <b>24</b> generates and outputs a random number RNh used for an authentication process.</p>
<p id="p-0215" num="0214">The data selector <b>25</b> in the second stage selects HKeyi,j needed for the authentication process from the set of HKeyi,j hidden by the host device <b>20</b> by using index information i read from the ROM area <b>11</b>-<b>3</b> of the NAND flash memory <b>10</b> via the data cache <b>12</b>.</p>
<p id="p-0216" num="0215">The data generator <b>26</b> is an operation unit that generates output data by performing a predetermined operation on a plurality of pieces of input data. In the present embodiment, the data generator <b>26</b> generates a session key SKeyi,j by converting RNh generated by the host device <b>20</b> by using HKeyi,j hidden by the host device <b>20</b>. As the data generator <b>26</b>, for example, the above AES encryptor may be used.</p>
<p id="p-0217" num="0216">The one-way converter <b>27</b> converts SecretID output from the decrypter <b>21</b> by a one-way function using SKeyi,j output from the data generator <b>26</b> to generate one-way conversion identification information Oneway-ID.</p>
<p id="p-0218" num="0217">The data verification unit <b>28</b> compares Oneway-ID received from the NAND flash memory <b>10</b> and Oneway-ID obtained from the one-way converter <b>27</b> in the host device <b>20</b> to see whether both Oneway-IDs match. If both values of the one-way conversion identification information Oneway-ID match (OK), the data verification unit <b>28</b> judges that SecretID obtained by the decrypter <b>21</b> is an authentic ID and delivers the obtained SecretID to subsequent processes. On the other hand, if both values thereof do not match (NG), the data verification unit <b>28</b> judges that the SecretID is an unlawful ID and outputs a message to that effect.</p>
<p id="p-0219" num="0218">In addition, as means for revoking an unlawful host device when secret information held by the host device <b>20</b>, for example, IDKeyk and HKeyi,j are leaked and the unlawful host device having the leaked information is produced by an illegal manufacturer, countermeasures such as removing information from the key management information (FKBv) with which FKey can be derived from IDKeyk held by the unlawful host device. The countermeasures will be described below in connection with the description with reference to <figref idref="DRAWINGS">FIG. 3</figref>. When taking the countermeasures, it is useful to provide association among IDKeyk, k, HKeyi,j, and HCj. This is because if there is such association, both of secret information IDKeyk and HKeyi,j held by the unlawful host device can be identified by observing HCj notified by the unlawful host device for authentication. Sharing information of all or a portion of HCj with IDKeyk, configuring information of all or a portion of HCj based on a result of an encryption process of IDKeyk, and configuring information of all or a portion of IDKeyk based on a result of an encryption process of HCj can be adopted as methods of association. Further, it is desirable to use HKeyi,j, in addition to FKey and IDKeyk to generate key management information FKBv. This will be described below in a paragraph in which a configuration example of FKB is described.</p>
<p id="p-0220" num="0219">The secret information IDKeyk and secret information HKeyi,j are recorded, for example, after being encrypted by a method specific to the manufacturer in an internal dedicated memory if the host device <b>20</b> is a dedicated hardware device like a consumer device, held in a state that can be protected from an unlawful analysis by tamper resistant software (TRS) technology if the host device <b>20</b> is a program executed in a PC or the like, or recorded in a state after measures to hide the secret information being taken by using the function of a security module if the security module is contained.</p>
<p id="p-0221" num="0220">The controller (Controller) <b>19</b> performs data transfer with the host device <b>20</b> by controlling the NAND flash memory <b>10</b>. For example, the controller <b>19</b> interprets an instruction received from the host device <b>20</b> and converts the instruction into an instruction conforming to the interface specifications of the NAND flash memory <b>10</b> before sending out the instruction to the NAND flash memory <b>10</b>. The controller <b>19</b> can adopt various interface standards such as the SD Memory standard, SDIO standard, and eMMC standard if necessary.</p>
<p id="p-0222" num="0221">The controller <b>19</b> secures a portion of the ordinary area <b>11</b>-<b>1</b> to store control data needed for the operation of the controller <b>19</b>. The controller <b>19</b> may have a function to convert a logical address received from the host device <b>20</b> into a physical address of the NAND flash memory. The controller <b>19</b> may also have a function to perform the so-called wear leveling to make exhaustion of the cell array <b>11</b> uniform. However, at least the hidden area <b>11</b>-<b>2</b> is excluded from wear leveling.</p>
<p id="p-0223" num="0222">The configuration example of the memory system is not limited to the one described above. For example, an error correction processing unit (not shown) and other structural elements may be included if necessary. Further, there may be a plurality of pieces of secret information NKeyi held by the NAND flash memory <b>10</b>. That is, if a combination of NKeyi and index information i corresponding thereto is defined as a slot, a plurality of slots is recorded in the NAND flash memory <b>10</b>. A slot number is attached to each of the slots and the host device <b>20</b> reads index information i of each slot number and selects one of the slots to perform authentication. In this case, the host device <b>20</b> notifies the NAND flash memory <b>10</b> of information corresponding to the selected slot number and the NAND flash memory <b>10</b> executes an authentication process by using information corresponding to the notified slot number. Further, a plurality of information slots may be held by defining all information held by the NAND flash memory <b>10</b> as one slot. That is, NKeyi, i, FKBv, v, SecretID, and E-SecretID are defined as one slot and a plurality of slots is recorded in the NAND flash memory <b>10</b>. A slot number is attached to each of the slots and the host device <b>20</b> reads index information i of each slot number and selects one of the slots to perform authentication. In this case, the host device <b>20</b> notifies the NAND flash memory <b>10</b> of information corresponding to the selected slot number and the NAND flash memory <b>10</b> executes an authentication process by using information corresponding to the notified slot number.</p>
<p id="p-0224" num="0223">The method by which the NAND flash memory <b>10</b> has a plurality of slots is shown above, but the method is not limited to the above one and any configuration sharing a portion of information by a plurality of slots can be adopted. For example, SecretID, E-SecretID, FKBv, and index v may be shared by a plurality of slots while other information being individually held by each slot.</p>
<p id="p-0225" num="0224">The method by which the NAND flash memory <b>10</b> has a plurality of slots and slot numbers and which slot to use for authentication is notified by the host device <b>20</b> is applicable to all other embodiments described herein below.</p>
<p id="p-0226" num="0225">&#x3c;2. Authentication Flow&#x3e;</p>
<p id="p-0227" num="0226">Next, the authentication flow of a memory system according to the first embodiment will be described along <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="h-0006" num="0000">(Step S<b>11</b>)</p>
<p id="p-0228" num="0227">When the authentication is started (Start), the host device <b>20</b> reads an encrypted FKey bundle (FKB: Family Key Block), which is key management information, and encrypted secret identification information SecretID (E-SecretID) from the NAND flash memory <b>10</b>.</p>
<p id="h-0007" num="0000">(Step S<b>12</b>)</p>
<p id="p-0229" num="0228">Subsequently, the host device <b>20</b> reads encrypted hidden information FKey that can be decrypted by the host device <b>20</b> by executing a data selection process by the data selector (Select 1) <b>22</b>-<b>1</b> from the read key management information FKB and also obtains hidden information FKey by decrypting the encrypted hidden information FKey by the decrypter <b>22</b>-<b>2</b> using hidden secret information IDKeyk. Further, the host device <b>20</b> obtains secret identification information SecretID by decrypting the E-SecretID read from the NAND flash memory <b>10</b> using the obtained FKey.</p>
<p id="h-0008" num="0000">(Step S<b>13</b>)</p>
<p id="p-0230" num="0229">Subsequently, the host device <b>20</b> requests to read index information i to the NAND flash memory <b>10</b>.</p>
<p id="h-0009" num="0000">(Step S<b>14</b>)</p>
<p id="p-0231" num="0230">Subsequently, in response to the request from the host device <b>20</b>, the NAND flash memory <b>10</b> loads the index information i from the cell array <b>11</b> and outputs the index information i to the host device <b>20</b>.</p>
<p id="h-0010" num="0000">(Step S<b>15</b>)</p>
<p id="p-0232" num="0231">Subsequently, the host device <b>20</b> generates a random number RNh needed for an authentication request. By using RNh for the authentication process, a common key that is different each time can be used with the NAND flash memory <b>10</b> for processes below.</p>
<p id="h-0011" num="0000">(Step S<b>16</b>)</p>
<p id="p-0233" num="0232">Subsequently, the host device <b>20</b> sends out a constant HCj held in advance and the RNh to the NAND flash memory <b>10</b> along with the an authentication request (Request authentication).</p>
<p id="h-0012" num="0000">(Step S<b>17</b>)</p>
<p id="p-0234" num="0233">Subsequently, the NAND flash memory <b>10</b> loads secret information NKeyi (i=1, . . . , m) and secret identification information SecretID from the hidden area <b>11</b>-<b>2</b>, which are stored in the data cache <b>12</b>.</p>
<p id="h-0013" num="0000">(Step S<b>18</b>)</p>
<p id="p-0235" num="0234">Subsequently, the NAND flash memory <b>10</b> generates secret information HKeyi,j by a data generation process of the data generator <b>13</b> using the hidden secret information NKeyi and the constant HCj received from the host device <b>20</b>.</p>
<p id="h-0014" num="0000">(Step S<b>19</b>)</p>
<p id="p-0236" num="0235">Subsequently, the NAND flash memory <b>10</b> generates a session key SKeyi,j (=Generate(HKeyi,j, RNh)) by a data generation process of the data generator <b>14</b> using the received RNh.</p>
<p id="h-0015" num="0000">(Step S<b>20</b>)</p>
<p id="p-0237" num="0236">Subsequently, the NAND flash memory <b>10</b> generates one-way conversion identification information Oneway-ID (=Oneway(SKeyi,j, SecretID)) by executing a one-way conversion process of the one-way converter <b>15</b> on the SecretID using the SKeyi,j. The generated Oneway-ID is sent out to the host device <b>20</b>. That is, data output interface is configured to output the encrypted secret identification information E-SecretID, the family key block FKB and the authentication information Oneway-ID to outside of the authenticator.</p>
<p id="h-0016" num="0000">(Step S<b>21</b>)</p>
<p id="p-0238" num="0237">In parallel with step S<b>18</b>, the host device <b>20</b> selects HKeyi,j needed for an authentication process with the NAND flash memory <b>10</b> from the set of HKeyi,j (i=1, . . . , m) hidden in advance using the received index i.</p>
<p id="h-0017" num="0000">(Step S<b>22</b>)</p>
<p id="p-0239" num="0238">Subsequently, the host device <b>20</b> generates the SKeyi,j (=Generate(HKeyi,j, RNh)) by a data generation process of the data generator <b>26</b> using the selected HKeyi,j and the generated RNh.</p>
<p id="h-0018" num="0000">(Step S<b>23</b>)</p>
<p id="p-0240" num="0239">Subsequently, the host device <b>20</b> generates Oneway-ID by executing a one-way conversion process of the one-way converter <b>27</b> on the SecretID using the generated SKeyi,j.</p>
<p id="h-0019" num="0000">(Step S<b>24</b>)</p>
<p id="p-0241" num="0240">Subsequently, the host device <b>20</b> determines whether the Oneway-ID received from the NAND flash memory <b>10</b> and the Oneway-ID generated by the host device <b>20</b> match. If both values of the Oneway-ID match (OK), the host device <b>20</b> judges that the SecretID obtained by the decrypter <b>21</b> is an authentic ID and delivers the SecretID to subsequent processes. On the other hand, if both values thereof do not match (NG), the host device <b>20</b> judges that the SecretID is an unlawful ID and outputs a message to that effect.</p>
<p id="p-0242" num="0241">With the above operation, the authentication flow according to the first embodiment is completed (End).</p>
<p id="p-0243" num="0242">If the NAND flash memory <b>10</b> has a plurality of slots as described in a configuration example of the memory system, the host device <b>20</b> needs to notify the NAND flash memory <b>10</b> of the slot number used for authentication. In such a case, the slot number may be notified in step S<b>16</b> or in a step before step S<b>16</b>.</p>
<p id="p-0244" num="0243">&#x3c;3. FKB (Family Key Block)&#x3e;</p>
<p id="p-0245" num="0244">Next, key management information FKB (Family Key Block) according to the first embodiment will be described in more detail by using <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0246" num="0245">To generate key management information FKB conforming to the NAND flash memory <b>10</b> in which secret identification information SecretID is recorded, one piece of FKeyv after another is encrypted (Encrypt) by using one IDKeyi (i=1, . . . , n) (Set of IDKeyi's) after another as secret key information prepared in advance. That is, the key management information FKB is a set of encrypted FKeyv (E-FKeyv,i)=Encrypt (IDKeyi, FKeyv) and the set of encrypted FKeyv is called an encrypted FKey bundle.</p>
<p id="p-0247" num="0246">Incidentally, the configuration of the key management information FKB is not limited to the configuration in the present embodiment. For example, in case where the specific IDKeyi is leaked, encrypted FKeyv (E-FKeyv) which can be decrypted from the leaked IDKeyi is deleted from the FKB. As a result, when the host device <b>20</b> accesses the NAND flash memory with the newly configured FKB, the host device <b>20</b> can not obtain (decrypt) correct FKeyv and SecredID. In this manner, the function to revoke the host device <b>20</b> holding the secret information IDKeyi can be provided.</p>
<p id="p-0248" num="0247">When, as described above, IDKeyk, k, HKeyi,j, and HCj are associated, HKeyi,j may also be diverted, in addition to FKey and IDKeyk, for the generation of FKBv. For example, configurations such as E-FKeyv,i=Encrypt (Encrypt(IDKeyi, FKeyv), HKeyi,j), E-FKeyv,i=Encrypt (Encrypt(HKeyi,j, FKeyv), IDKeyi), and E-FKeyv,i=Encrypt(HKeyi,j, IDKeyi(+)FKeyv) may be adopted. This has the effect of preventing, when keys are leaked from a plurality of the host devices <b>20</b>, the secret keys IDKeyi, HKeyi,j of different devices being combined. That is, by making decryption of FKey impossible unless IDKeyi and HKeyi,j are correctly combined, observing HCj reveals tied HKeyi, j and further IDKeyi can be identified so that exposed IDKeyi can be revoked.</p>
<p id="p-0249" num="0248">Further, the method of generating the key management information FKB is not limited to the method in the present embodiment. For example, the function to revoke the host device <b>20</b> can also be provided if the key management information FKB is generated by using conventional MKB (Media Key Block) technology used in CPRM or another MKB technology.</p>
<p id="p-0250" num="0249">The MKB technology efficiently shares common secret information (Media Key) (among devices not to be revoked) while realizing device revocation in a situation in which each of a plurality of devices has a mutually different piece of secret information and is also called Broadcast Encryption.</p>
<p id="p-0251" num="0250">If the MKB technology is applied, for example, a configuration example of the memory system is shown like in <figref idref="DRAWINGS">FIG. 4</figref>. The shown memory system is different from the memory system in <figref idref="DRAWINGS">FIG. 1</figref> in that the FKB processor (Process FKB) <b>22</b> is shown as a superordinate concept. Also in this case, the exposed key can be identified and revoked by associating the data of FKB decrypted based on the node number of the host device <b>20</b> that is information corresponding to K or IDKeyi and a host key group allocated to the node number with HKeyi,j and HCj.</p>
<p id="p-0252" num="0251">&#x3c;4. Writing Secret Information and FKB&#x3e;</p>
<p id="p-0253" num="0252">Next, writing secret information or key management information FKB into the NAND flash memory <b>10</b> will be described.</p>
<p id="p-0254" num="0253">4-1. When Writing Secret Information or Key Management Information FKB During Manufacture of the NAND Flash Memory</p>
<p id="p-0255" num="0254">First, a case where secret information or key management information FKB is written, for example, during manufacture of the NAND flash memory <b>10</b> will be described by using <figref idref="DRAWINGS">FIGS. 5 and 6</figref>. The description will be provided along the flow in <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0256" num="0255">A licensing administrator <b>40</b> generates data below: key management information FKBv (v=1, . . . , n), hidden information FKeyv(v=1, . . . , n), index information v (v=1, . . . , n), secret information NKeyi, and index information i. FKBv is generated by, as described above, encrypting FKeyv. In addition, v may be a plurality of values. If, for example, the licensing administrator <b>40</b> generates three values of 1, 2, and 3 as v, the licensing administrator <b>40</b> generates (FKB<b>1</b>, FKey<b>1</b>), (FKB<b>2</b>, FKey<b>2</b>), and (FKB<b>3</b>, FKey<b>3</b>) in accordance with the generated v.</p>
<p id="p-0257" num="0256">Of the generated data, the licensing administrator <b>40</b> delivers FKeyv(v=1, . . . , n), v(v=1, . . . , n), NKeyi, i to a memory vendor <b>30</b>. For the delivery the data, for example, the licensing administrator <b>40</b> uses safe means such as sending the data to the memory vendor <b>30</b> after the data being encrypted by using a public key of the memory vendor <b>30</b> obtained in advance.</p>
<p id="p-0258" num="0257">In the memory vendor <b>30</b>, there are selectors <b>32</b>, <b>33</b>, a generator <b>34</b>, and an encryption unit <b>35</b>, in addition to the NAND flash memory <b>10</b>. The memory vendor <b>30</b> further holds data <b>31</b> such as FKBv (v=1, . . . , n) delivered by the licensing administrator <b>40</b></p>
<p id="h-0020" num="0000">(Step S<b>31</b>)</p>
<p id="p-0259" num="0258">With the above configuration, the memory vendor <b>30</b> first generates SecretID by the generator (SecretID Generator) <b>34</b>.</p>
<p id="h-0021" num="0000">(Step S<b>32</b>)</p>
<p id="p-0260" num="0259">Subsequently, the memory vendor <b>30</b> that receives the data <b>31</b> selects one value from v by the selector <b>32</b>. Further, the selector <b>32</b> selects FKeyv corresponding to the selected v. The memory vendor <b>30</b> encrypts the generated SecretID to generate E-SecretID by using the selected FKeyv.</p>
<p id="h-0022" num="0000">(Step S<b>33</b>)</p>
<p id="p-0261" num="0260">Subsequently, the memory vendor <b>30</b> writes the value of v into the ROM area <b>11</b>-<b>3</b> of the NAND flash memory <b>10</b> as the index information v (index of FKey).</p>
<p id="p-0262" num="0261">The memory vendor <b>30</b> also writes the value of index information i (index of NKey) into the ROM area <b>11</b>-<b>3</b> of the NAND flash memory <b>10</b> and the value of NKeyi into the hidden area <b>11</b>-<b>2</b>.</p>
<p id="p-0263" num="0262">Further, the memory vendor <b>30</b> writes the value of SecretID into the hidden area <b>11</b>-<b>2</b> of the NAND flash memory <b>10</b> and the value of E-SecretID into the ROM area <b>11</b>-<b>3</b>.</p>
<p id="p-0264" num="0263">With the above operation, predetermined secret information and key management information FKB can be written during manufacture of the NAND flash memory <b>10</b> (End). Regarding the order of writing each of the above values, E-SecretID is a value obtained after an encryption process and can be written after the encryption process by the encryption unit <b>35</b>. Otherwise, there is no restriction on the order of writing operation and the values may be written in an order different from the order of the above example.</p>
<p id="p-0265" num="0264">Further, the memory vendor <b>30</b> delivers the NAND flash memory <b>10</b> for which the write process is completed to a card vendor.</p>
<p id="p-0266" num="0265">Thus, in the present embodiment, the NAND flash memory <b>10</b> can be assumed to be in a state in which index information v (index of FKey) or the like is already written.</p>
<p id="p-0267" num="0266">4-2. When FKB is Written by the Card Vendor</p>
<p id="p-0268" num="0267">Next, a case where a card vendor <b>50</b> writes FKB will be described by using <figref idref="DRAWINGS">FIGS. 7 and 8</figref>. The description will be provided along the flow in <figref idref="DRAWINGS">FIG. 8</figref>.</p>
<p id="p-0269" num="0268">The card vendor <b>50</b> receives the NAND flash memory <b>10</b> to which the predetermined information v and the like have been written from the memory vendor <b>30</b>.</p>
<p id="p-0270" num="0269">Then, the card vendor <b>50</b> manufactures storage media (here, Card) <b>55</b> for general users like, for example, SD cards by connecting the controller <b>19</b> that controls the NAND flash memory <b>10</b>.</p>
<p id="p-0271" num="0270">In the card vendor <b>50</b>, there is a selector <b>52</b>, in addition to the storage media (Card) <b>55</b> and data (FKBv) <b>51</b> received from the licensing administrator <b>40</b>.</p>
<p id="p-0272" num="0271">The process to write key management information FKBv by the card vendor <b>50</b> is as follows.</p>
<p id="h-0023" num="0000">(Step S<b>35</b>)</p>
<p id="p-0273" num="0272">First, the card vendor <b>50</b> receives the FKBv from the licensing administrator <b>40</b> as the data <b>51</b>. For the delivery of the data <b>51</b>, the above safe means is used.</p>
<p id="p-0274" num="0273">Then, the card vendor <b>50</b> reads the value of the index information v recorded in the ROM area <b>11</b>-<b>3</b> of the NAND flash memory <b>10</b> into the data cache <b>12</b> or the like (via the controller <b>19</b>).</p>
<p id="h-0024" num="0000">(Step S<b>36</b>)</p>
<p id="p-0275" num="0274">Subsequently, the card vendor <b>50</b> selects the FKBv corresponding to the value of the read index information v through the selector <b>52</b>.</p>
<p id="h-0025" num="0000">(Step S<b>37</b>)</p>
<p id="p-0276" num="0275">Subsequently, the card vendor <b>50</b> writes the selected FKBv into the read/write area <b>11</b>-<b>1</b> of the NAND flash memory <b>10</b> via the controller <b>19</b>.</p>
<p id="p-0277" num="0276">&#x3c;Advantageous Effects&#x3e;</p>
<p id="p-0278" num="0277">According to the authenticator, authenticatee and authentication method according to the first embodiment, at least the following advantageous effects (1) to (3) can be obtained.</p>
<p id="p-0279" num="0278">(1) Even if secret information has leaked from the host device <b>20</b>, it is possible to prevent unlawful use of secret information of the NAND flash memory <b>10</b> using the leaked information.</p>
<p id="p-0280" num="0279">The host device <b>20</b> as an authenticator may be provided, as described above, not only as a dedicated hardware device such as a consumer device, but also, for example, as a program executable in a PC or the like, and, in some cases, the software functions as a substantial host device. On the other hand, the NAND flash memory <b>10</b> as an authenticatee is recording media. Even in the case where a program called &#x201c;firmware&#x201d; mediates, an important process or information is stored in a hidden state in hardware in the cell array <b>11</b>.</p>
<p id="p-0281" num="0280">Thus, there is concern that the tamper-resistance (the resistance to attacks) of software executed in a PC becomes lower, compared to the recording media. Thus, there is concern that, by attacking the host device (authenticator) <b>20</b> with a low tamper-resistance, secret information hidden in the NAND flash memory (authenticatee) <b>10</b> with a high tamper-resistance is also exposed, leading to a disguise as a device with a high tamper-resistance.</p>
<p id="p-0282" num="0281">Thus, in the configuration according to the first embodiment and the authentication method therefor, as described above, the NAND flash memory <b>10</b> with a relatively high tamper-resistance hides first key information (NKeyi) that can generate second key information (HKeyi,j) therefrom in the cell array <b>11</b>. On the other hand, the host device <b>20</b> hides only the second key information (HKeyi,j) that cannot generate the first key information (NKeyi) therefrom in the memory <b>23</b>.</p>
<p id="p-0283" num="0282">Thus, the NAND flash memory <b>10</b> generates the second key information (HKeyi,j) hidden by the authenticator <b>20</b> by using the constant HCj received from the host device <b>20</b> and the first key information (NKeyi) hidden by the NAND flash memory <b>10</b>. The NAND flash memory <b>10</b> further generates a session key SKeyi,j using the second key information (HKeyi,j) and the random number RNh.</p>
<p id="p-0284" num="0283">The host device <b>20</b> generates a session key SKeyi,j using the second key information (HKeyi,j) selected by the index information i and the random number RNh. As a result, the NAND flash memory <b>10</b> and the host device <b>20</b> share the same session key SKeyi,j.</p>
<p id="p-0285" num="0284">Thus, in the present embodiment, the secret level of information hidden by the NAND flash memory (authenticatee) <b>10</b> and the secret level of information hidden by the host device (authenticator) <b>20</b> can be made asymmetric. In the present embodiment, for example, the secret level of information hidden by the NAND flash memory <b>10</b> with a relatively high tamper-resistance can be set higher than the secret level of information hidden by the host device <b>20</b> with a relatively low tamper-resistance.</p>
<p id="p-0286" num="0285">Thus, even if information hidden by the host device <b>20</b> has leaked, the NAND flash memory <b>10</b> cannot be &#x201c;disguised&#x201d; by using the leaked information because the secret level of information hidden by the NAND flash memory <b>10</b> with a relatively high tamper-resistance is higher. Therefore, unlawful use of secret information of the NAND flash memory <b>10</b> using the leaked information can advantageously be prevented. As a result, for example, it becomes possible to reliably determine that ID information read from the host device <b>20</b> is information that has been read from the intended authenticatee <b>10</b> and to revoke unlawful use thereof by remote parties.</p>
<p id="p-0287" num="0286">(2) Advantages for implementation</p>
<p id="p-0288" num="0287">In a configuration like the present embodiment, as described above, restrictions are also imposed on circuit scales, for example, in an environment in which hardware implementation of a public key cryptosystem process or an MKB process, which requires a relatively large circuit scale, is difficult to achieve. That is, a relatively large scale circuit is required for a public key cryptosystem process or an MKB process. On the other hand, a circuit area has been limited and hardware implementation has been difficult.</p>
<p id="p-0289" num="0288">However, according to the present embodiment, though the key information is asymmetric, there is no need to use the public key cryptosystem process requiring a relatively large circuit scale. Further, by making the secret levels of information hidden by the host device (authenticator) <b>20</b> and the NAND flash memory (authenticatee) <b>10</b> asymmetric as described above, authentication means is implemented by which with information leaked from one device alone, the other device cannot be disguised and the session key SKeyi,j is shared by the authenticator <b>20</b> and the authenticatee <b>10</b>.</p>
<p id="p-0290" num="0289">Thus, implementation can be said to be advantageous even in a severe environment in which the above restrictions are imposed. Further, as described above, the circuit scale can be further reduced by sharing the data generator and encryptor in a memory system as the same process.</p>
<p id="p-0291" num="0290">(3) The manufacturing process can advantageously be simplified and manufacturing costs can be reduced.</p>
<p id="p-0292" num="0291">The NAND flash memory <b>10</b> according to the present embodiment includes in the read/write area <b>11</b>-<b>1</b> key management information (FKBv) attached uniquely to each of the NAND flash memories <b>10</b> in accordance with uses thereof or commonly to a plurality of the NAND flash memories <b>10</b> in units of the production lot or the like. Further, the NAND flash memory <b>10</b> according to the present embodiment includes in ROM area <b>11</b>-<b>3</b> encrypted secret identification information (E-SecretID) attached uniquely to each of the NAND flash memories <b>10</b>.</p>
<p id="p-0293" num="0292">If the key management information (FKBv) is made common in units of the production lot, unique information that needs to be recorded in each of the NAND flash memories <b>10</b> can be reduced to small data in data size such as the encrypted secret identification information (E-SecretID). In other words, the data size of unique encrypted secret identification information (E-SecretID) to be written into the NAND flash memories <b>10</b> can be reduced by dividing information to be written into commonly attached key management information (FKBv) and unique encrypted secret identification information (E-SecretID) and encrypting the information in two stages.</p>
<p id="p-0294" num="0293">For example, as shown in <figref idref="DRAWINGS">FIGS. 5 and 6</figref> above, the memory vendor <b>30</b> writes unique information (E-SecretID) into each of the NAND flash memories <b>10</b> received from the licensing administrator <b>40</b> during manufacture of the NAND flash memories.</p>
<p id="p-0295" num="0294">The encrypted key management information (FKBv) commonly attached to the NAND flash memories <b>10</b> can commonly be written into the NAND flash memories <b>10</b> by the card vendor <b>50</b>. For example, as shown in <figref idref="DRAWINGS">FIGS. 7 and 8</figref> above, the card vendor <b>50</b> writes the common key management information FKBv to each of the NAND flash memories <b>10</b> received from the licensing administrator <b>40</b>. Thus, the size of unique data that must be written into each of the NAND flash memories <b>10</b> by the memory vendor <b>30</b> can be reduced.</p>
<p id="p-0296" num="0295">If information unique to the NAND flash memory <b>10</b> and whose data size is large is written during manufacture of the NAND flash memories <b>10</b>, the manufacturing process will be more complex and the manufacturing time will be longer, leading to increased costs of manufacturing. According to the configuration and method in the present embodiment, however, such a complex manufacturing process becomes unnecessary by dividing information to be written into commonly attached key management information FKBv and unique encrypted secret identification information (E-SecretID) and encrypting the information in two stages and therefore, the manufacturing process can advantageously be simplified and manufacturing costs can be reduced. Moreover, the manufacturing time can be shortened, offering advantages of being able to reduce power consumption.</p>
<p id="p-0297" num="0296">Also on the side of the host device <b>20</b>, advantages similar to those of the NAND flash memory <b>10</b> can be gained by adopting a configuration of generating E-SecretID by encrypting SecretID, which is a unique value to the NAND flash memory, by using hidden information FKey and further generating key management information FKB by encrypting FKey using IDKeyk.</p>
<p id="p-0298" num="0297">[First Modification (when FKB is Downloaded and Written Later)]</p>
<p id="p-0299" num="0298">An authenticator, an authenticatee, and an authentication method according to a first modification will be described. In the description, overlapping points with the first embodiment will be omitted.</p>
<p id="p-0300" num="0299">&#x3c;Writing FKB&#x3e;</p>
<p id="p-0301" num="0300">Writing an encrypted FKey bundle (FKB) will be described.</p>
<p id="p-0302" num="0301">The process in the first modification is a process that is not particularly needed if the encrypted FKey bundle (FKB) is written during manufacture of the NAND flash memory <b>10</b>. However, the process relates to a write process of FKB needed when the NAND flash memory <b>10</b> and the controller <b>19</b> are connected and the NAND flash memory <b>10</b> is acquired by a general user as, for example, an SD card and FKB is written later on the market when the card is used.</p>
<p id="p-0303" num="0302"><figref idref="DRAWINGS">FIG. 9</figref> shows a state in which the key management information FKB is, as described above, recorded in the unrecorded storage media (Card) <b>55</b>.</p>
<p id="p-0304" num="0303">As shown in <figref idref="DRAWINGS">FIG. 9</figref>, the NAND flash memory <b>10</b> has NKeyi and SecretID recorded in the hidden area <b>11</b>-<b>2</b>. Index information i needed to identify the NKeyi, index information v needed to identify FKB, and SecretID (E-SecretID) encrypted by FKeyv specified by the index information v are recorded in the ROM area <b>11</b>-<b>3</b>.</p>
<p id="p-0305" num="0304">The first modification is different from the first embodiment in that the FKB, which is an encrypted FKey bundle, is not recorded in the read/write area <b>11</b>-<b>1</b>.</p>
<p id="p-0306" num="0305">Next, a case where the FKB is, as described above, downloaded from a server and recorded in the unrecorded storage media <b>55</b> will be described by using <figref idref="DRAWINGS">FIG. 10</figref>.</p>
<p id="p-0307" num="0306">In this case, as shown in <figref idref="DRAWINGS">FIG. 9</figref>, the data cache <b>12</b> is arranged in the NAND flash memory <b>10</b> if necessary.</p>
<p id="p-0308" num="0307">A server <b>70</b> according to the present embodiment includes an FKB data base (Set of FKBi's (i=1, . . . , x)) <b>71</b> and a selector <b>72</b> to select FKBv based on index information v.</p>
<p id="p-0309" num="0308">The server <b>70</b> and the memory system (the NAND flash memory <b>10</b>, the controller <b>19</b>, and the host device <b>20</b>) are electrically connected for communication via an Internet <b>60</b>.</p>
<p id="p-0310" num="0309">The host device <b>20</b> includes a function to determine whether it is necessary to newly write FKB and to request FKB from the server if necessary.</p>
<p id="p-0311" num="0310">&#x3c;FKB Write Flow&#x3e;</p>
<p id="p-0312" num="0311">Next, the flow to download an encrypted FKeyID bundle (FKB) from the server <b>70</b> and to write the FKB into the NAND flash memory <b>10</b> will be described along <figref idref="DRAWINGS">FIG. 11</figref>.</p>
<p id="h-0026" num="0000">(Step S<b>41</b>)</p>
<p id="p-0313" num="0312">First, as shown in <figref idref="DRAWINGS">FIG. 11</figref>, when the host device <b>20</b> determines that it is necessary to download FKB, FKB writing is started and the host device <b>20</b> issues an FKB request to the server <b>70</b>.</p>
<p id="h-0027" num="0000">(Step S<b>42</b>)</p>
<p id="p-0314" num="0313">Subsequently, the server <b>70</b> requests index information v needed to identify FKeyv from the NAND flash memory <b>10</b>.</p>
<p id="h-0028" num="0000">(Step S<b>43</b>)</p>
<p id="p-0315" num="0314">Subsequently, the NAND flash memory <b>10</b> reads v from the ROM area <b>11</b>-<b>3</b> and sends out v to the server.</p>
<p id="h-0029" num="0000">(Step S<b>44</b>)</p>
<p id="p-0316" num="0315">Subsequently, the server <b>70</b> selects FKBv corresponding to the received v from the FKB database <b>71</b>.</p>
<p id="h-0030" num="0000">(Step S<b>45</b>)</p>
<p id="p-0317" num="0316">Subsequently, the server <b>70</b> sends out the selected FKBv to the NAND flash memory <b>10</b>.</p>
<p id="h-0031" num="0000">(Step S<b>46</b>)</p>
<p id="p-0318" num="0317">Subsequently, the NAND flash memory <b>10</b> writes the received FKBv into the read/write area <b>11</b>-<b>1</b> for recording.</p>
<p id="p-0319" num="0318">With the above operation, the download flow of the encrypted FKey bundle (FKB) according to the first modification is completed. (End).</p>
<p id="p-0320" num="0319">Other configurations and operations are substantially the same as those in the first embodiment.</p>
<p id="p-0321" num="0320">&#x3c;Advantageous Effects&#x3e;</p>
<p id="p-0322" num="0321">According to the authenticator, authenticatee and authentication method according to the first modification, at least the advantageous effects (1) to (3) similar to those in the first embodiment can be obtained.</p>
<p id="p-0323" num="0322">Further, according to the first modification, the present embodiment can be applied if necessary when FKB is written later.</p>
<heading id="h-0032" level="1">Second Embodiment</heading>
<p id="p-0324" num="0323">Next, a second embodiment will be described. In the description, overlapping points with the first embodiment will be omitted.</p>
<p id="p-0325" num="0324">In the first embodiment, after the authentication of the NAND flash memory <b>10</b> by the host device <b>20</b> is successfully completed, both share SecretID. As a process after the authentication, for example, the host device <b>20</b> encrypts content and writes the encrypted content into the NAND flash memory <b>10</b>. For this process, using the shared SecretID can be considered.</p>
<p id="p-0326" num="0325">The present embodiment intends to protect SecretID even in such a process. Thus, in the description, overlapping points with the first embodiment will be omitted.</p>
<p id="p-0327" num="0326">&#x3c;Memory System&#x3e;</p>
<p id="p-0328" num="0327">A memory system according to the second embodiment is shown as in <figref idref="DRAWINGS">FIG. 12</figref>.</p>
<p id="p-0329" num="0328">As shown in <figref idref="DRAWINGS">FIG. 12</figref>, the memory system according to the present embodiment is different from that in the first embodiment in that the system further includes a one-way converter (Oneway) <b>27</b>B, a switch unit <b>29</b>, and information (ASSV) commonly held by all host devices <b>20</b> handling target content.</p>
<p id="p-0330" num="0329">The switch unit <b>29</b> turns on a signal path to output SecretID to the one-way converter <b>27</b>B if a determination result when both values of Oneway-ID match in a data verification unit (Verify) <b>28</b> (OK) is input as a control signal.</p>
<p id="p-0331" num="0330">The one-way converter (Oneway) <b>27</b>B converts SecretID input from the switch unit <b>29</b> by a one-way function using the information (ASSV) commonly held by all host devices handling target content to generate one-way conversion identification information EMID (EMID=Oneway(SecretID, ASSV)).</p>
<p id="p-0332" num="0331">Thus, in the second embodiment, after SecretID being verified by the host device <b>20</b>, the host device <b>20</b> converts SecretID using ASSV commonly held by all intended host devices to calculate EMID. Thus, the host device <b>20</b> can execute the process of content encryption and the like by using EMID, instead of SecretID.</p>
<p id="p-0333" num="0332">Other configurations and operations are substantially the same as those in the first embodiment and thus, a detailed description thereof is omitted.</p>
<p id="p-0334" num="0333">&#x3c;Advantageous Effects&#x3e;</p>
<p id="p-0335" num="0334">According to the authenticator, authenticatee and authentication method according to the second embodiment, at least the advantageous effects (1) to (3) similar to those in the first embodiment can be obtained.</p>
<p id="p-0336" num="0335">Further, the second embodiment is different from the first embodiment in that the host device <b>20</b> further includes the information (ASSV) commonly held by the one-way converter (Oneway) <b>27</b>B, the switch unit <b>29</b>, and all host devices handling target content.</p>
<p id="p-0337" num="0336">According to the above configuration, after the secret identification information SecretID being verified by the host device <b>20</b>, the host device <b>20</b> converts the secret identification information SecretID using the information (ASSV) commonly held by all intended host devices to calculate one-way conversion identification information EMID. Thus, the host device <b>20</b> can execute the process of content encryption and the like by using the one-way conversion identification information EMID, instead of the secret identification information SecretID.</p>
<p id="p-0338" num="0337">As a result, though not shown, the one-way conversion identification information EMID can be used for content encryption in a postprocess and thus, the secret identification information SecretID can be prevented from being leaked in the postprocess, further advantageously increasing confidentiality of the secret identification information SecretID. Details thereof will be described below.</p>
<heading id="h-0033" level="1">Third Embodiment</heading>
<p id="p-0339" num="0338">Next, a third embodiment will be described. The third embodiment relates to an example in which a NAND flash memory <b>10</b> authenticates a host device <b>20</b>. The present embodiment shows a method of reading SecretID in the NAND flash memory <b>10</b> in a state hidden from third parties and also of reliably determining that the data has been read from the NAND flash memory <b>10</b> and also a method by which the NAND flash memory <b>10</b> inspects the host device <b>20</b>.</p>
<p id="p-0340" num="0339">In the description, overlapping points with the above embodiments will be omitted.</p>
<p id="p-0341" num="0340">&#x3c;Memory System&#x3e;</p>
<p id="p-0342" num="0341">A memory system according to the third embodiment will be described by using <figref idref="DRAWINGS">FIG. 13</figref>.</p>
<p id="p-0343" num="0342">As shown in <figref idref="DRAWINGS">FIG. 13</figref>, the present embodiment is different from the first embodiment in that the NAND flash memory <b>10</b> further includes a function controller <b>18</b>, a random number generator <b>24</b><i>n</i>, and a data verification unit <b>28</b><i>n</i>, and the host device <b>20</b> further includes a function call unit <b>30</b>.</p>
<p id="p-0344" num="0343">The random number generator (RNG) <b>24</b><i>n </i>generates a random number RNn used for authentication.</p>
<p id="p-0345" num="0344">The data verification unit (Verify) <b>28</b><i>n </i>compares Oneway-ID received from the host device <b>20</b> and Oneway-ID obtained from a one-way converter <b>15</b> in the NAND flash memory <b>10</b> to see whether both Oneway-IDs match. If both values match, the data verification unit <b>28</b><i>n </i>determines that the host device <b>20</b> has obtained the correct Oneway-ID (OK) and if both values do not match, the data verification unit <b>28</b><i>n </i>determines that the host device <b>20</b> has not obtained the correct Oneway-ID (NG).</p>
<p id="p-0346" num="0345">Only if the host device <b>20</b> obtains the correct Oneway-ID (OK), the function controller <b>18</b> enables a predetermined function on a memory cell array <b>11</b> so that the predetermined function of the NAND flash memory <b>10</b> is made available to the host device <b>20</b>. Further, HCj received from the host device <b>20</b> may be input to the function controller <b>18</b> so that the predetermined function is controlled in accordance with HCj. The predetermined function will separately be described below.</p>
<p id="p-0347" num="0346">The function call unit <b>30</b> executes the process of calling a predetermined function of the NAND flash memory <b>10</b> when the host device <b>20</b> receives access permission information (labeled with &#x201c;Access Permission&#x201d; in <figref idref="DRAWINGS">FIG. 13</figref>) indicating that the NAND flash memory <b>10</b> has verified the authenticity of Oneway-ID generated by the host device <b>20</b>.</p>
<p id="p-0348" num="0347">&#x3c;Authentication Flow&#x3e;</p>
<p id="p-0349" num="0348">Next, the authentication flow of a memory system according to the third embodiment will be described along <figref idref="DRAWINGS">FIG. 14</figref>.</p>
<p id="h-0034" num="0000">(Steps S<b>11</b> to S<b>14</b>)</p>
<p id="p-0350" num="0349">As shown in <figref idref="DRAWINGS">FIG. 14</figref>, the same process as in the first embodiment is executed from the authentication start (Start) to steps S<b>11</b> to S<b>14</b>.</p>
<p id="h-0035" num="0000">(Step S<b>51</b>)</p>
<p id="p-0351" num="0350">Subsequently, when index information i is received, the host device <b>20</b> sends out a random number generation request (Request RNn) to the NAND flash memory <b>10</b>.</p>
<p id="h-0036" num="0000">(Step S<b>52</b>)</p>
<p id="p-0352" num="0351">Subsequently, the NAND flash memory <b>10</b> receives the request and generates RNn by the random number generator <b>24</b><i>n</i>. The generated RNn is sent out to the host device <b>20</b>.</p>
<p id="h-0037" num="0000">(Steps S<b>21</b> to S<b>23</b>)</p>
<p id="p-0353" num="0352">Subsequently, the host device <b>20</b> executes a process similar to steps S<b>21</b> to S<b>23</b> in the first embodiment.</p>
<p id="h-0038" num="0000">(Step S<b>53</b>)</p>
<p id="p-0354" num="0353">Subsequently, the host device <b>20</b> requests for an authentication (Request authentication) to the NAND flash memory <b>10</b> and sends out HCj and Oneway-ID.</p>
<p id="h-0039" num="0000">(Steps S<b>17</b> to S<b>20</b>)</p>
<p id="p-0355" num="0354">Subsequent to a process similar to steps S<b>17</b> to S<b>19</b> described above, in step S<b>20</b>, the NAND flash memory <b>10</b> executes a one-way conversion process by the one-way converter <b>15</b> on SecretID by using the generated SKeyi,j to generate Oneway-ID (=Oneway(SKeyi,j, SecretID)).</p>
<p id="h-0040" num="0000">(Step S<b>54</b>)</p>
<p id="p-0356" num="0355">Subsequently, the NAND flash memory <b>10</b> verifies that the received Oneway-ID and generated Oneway-ID by the NAND flash memory <b>10</b> match. If both Oneway-IDs match (OK), the NAND flash memory <b>10</b> determines that the SecretID is an authentic ID and if both Oneway-IDs do not match (NG), the NAND flash memory <b>10</b> determines that the SecretID is an unlawful ID. Then, the NAND flash memory <b>10</b> returns the determination result to the host device <b>20</b> and also gives permission (Permission) of call acceptance of a predetermined function.</p>
<p id="h-0041" num="0000">(Step S<b>55</b>)</p>
<p id="p-0357" num="0356">Subsequently, if the determination result in step S<b>54</b> is a match (OK), the NAND flash memory <b>10</b> enables a predetermined function in the function controller <b>18</b> so that the predetermined function of the NAND flash memory <b>10</b> is made available to the host device <b>20</b>.</p>
<p id="h-0042" num="0000">(Step S<b>56</b>)</p>
<p id="p-0358" num="0357">Subsequently, if the host device <b>20</b> receives access permission information (Access Permission) indicating that the NAND flash memory <b>10</b> has verified authenticity of Oneway-ID generated by the host device <b>20</b>, the host device <b>20</b> returns an instruction to call the predetermined function through the function call unit <b>30</b>.</p>
<p id="h-0043" num="0000">(Step S<b>57</b>)</p>
<p id="p-0359" num="0358">Subsequently, the NAND flash memory <b>10</b> receives a function call and executes the process in the function controller <b>18</b> according to the function call instruction received from the host device <b>20</b> to return a status (Status) of the process result.</p>
<p id="p-0360" num="0359">In this case, HCj received from the host device <b>20</b> may be input to the function controller <b>18</b> so that the predetermined function is controlled in accordance with HCj. The predetermined function will separately be described below.</p>
<p id="p-0361" num="0360">&#x3c;Advantageous Effects&#x3e;</p>
<p id="p-0362" num="0361">According to the authenticator, authenticatee and authentication method according to the third embodiment, at least the advantageous effects (1) to (3) similar to those in the first embodiment can be obtained. Further, at least the following advantageous effects (4) and (5) can be obtained.</p>
<p id="p-0363" num="0362">(4) The NAND flash memory <b>10</b> can authenticate the host device <b>20</b>.</p>
<p id="p-0364" num="0363">The present embodiment is different from the first embodiment in that the NAND flash memory <b>10</b> further includes the function controller <b>18</b>, the random number generator <b>24</b><i>n</i>, and the data verification unit <b>28</b><i>n</i>, and the host device <b>20</b> further includes the function call unit <b>30</b>.</p>
<p id="p-0365" num="0364">Thus, according to the above configuration, the authentication function can be controlled in such a way that, for example, when the host device <b>20</b> accesses the NAND flash memory <b>10</b>, the NAND flash memory <b>10</b> provides a predetermined function only if the host device <b>20</b> is reliable enough.</p>
<p id="p-0366" num="0365">Thus, according to the present embodiment, recording media such as NAND flash memories that are normally authenticatees can advantageously authenticate the host device <b>20</b> the other way round.</p>
<p id="p-0367" num="0366">(5) A mechanism that further controls whether to provide a predetermined function in accordance with unique information (constant HCj) of the authenticated host device <b>20</b> can advantageously be provided. Details of the predetermined function will be described below.</p>
<heading id="h-0044" level="1">Fourth Embodiment</heading>
<heading id="h-0045" level="1">Mutual Authentication</heading>
<p id="p-0368" num="0367">Next, a fourth embodiment will be described. The fourth embodiment relates to an example in which a NAND flash memory <b>10</b> and a host device <b>20</b> mutually authenticate.</p>
<p id="p-0369" num="0368">In the description, overlapping points with the above embodiments will be omitted.</p>
<p id="p-0370" num="0369">&#x3c;Memory System&#x3e;</p>
<p id="p-0371" num="0370">A memory system according to the fourth embodiment will be described by using <figref idref="DRAWINGS">FIG. 15</figref>.</p>
<p id="p-0372" num="0371">As shown in <figref idref="DRAWINGS">FIG. 15</figref>, the present embodiment includes a configuration substantially combining a memory system according to the first embodiment and a memory system according to the third embodiment.</p>
<p id="p-0373" num="0372">More specifically, the NAND flash memory <b>10</b> and the host device <b>20</b> include random number generators <b>24</b><i>n</i>, <b>24</b><i>h</i>, generators <b>14</b>-<b>2</b>, <b>26</b>-<b>2</b>, one-way converters <b>15</b>-<b>2</b>, <b>26</b>-<b>2</b>, and data verification units <b>28</b><i>n</i>, <b>28</b><i>h</i>. Further, the present embodiment is different from the third embodiment in that the host device <b>20</b> further includes a switch unit <b>29</b>B.</p>
<p id="p-0374" num="0373">The operation of each of the configurations is the same as in the above embodiments.</p>
<p id="p-0375" num="0374">&#x3c;Authentication Flow&#x3e;</p>
<p id="p-0376" num="0375">Next, the authentication flow of a memory system according to the fourth embodiment will be described along <figref idref="DRAWINGS">FIG. 16</figref>. In principle, the authentication flow according to the present embodiment performs an authentication operation (the host device authenticates the NAND flash memory) according to the first embodiment and then performs an authentication operation (the NAND flash memory authenticates the host device) according to the third embodiment.</p>
<p id="h-0046" num="0000">(Steps S<b>11</b> to S<b>24</b>)</p>
<p id="p-0377" num="0376">As shown in <figref idref="DRAWINGS">FIG. 15</figref>, when the authentication is started (Start), first the host device <b>20</b> authenticates the NAND flash memory <b>10</b> by following steps S<b>11</b> to S<b>24</b> similar to those in the first embodiment.</p>
<p id="p-0378" num="0377">At this point, similar authentication is performed by using a random number RNh generated by the random number generator <b>24</b><i>h. </i></p>
<p id="h-0047" num="0000">(Steps S<b>51</b> to S<b>70</b>)</p>
<p id="p-0379" num="0378">Subsequently, if the determination result in step S<b>24</b> is a match (OK), the authentication of the NAND flash memory <b>10</b> is determined to be completed.</p>
<p id="p-0380" num="0379">Subsequently, the NAND flash memory <b>10</b> authenticates the host device <b>20</b> by following steps S<b>51</b> to S<b>70</b> similar to those in the third embodiment.</p>
<p id="p-0381" num="0380">At this point, similar authentication is performed by using a random number RNn generated by the random number generator <b>24</b><i>n. </i></p>
<p id="p-0382" num="0381">With the above steps, the authentication operation according to the fourth embodiment is completed (End).</p>
<p id="p-0383" num="0382">&#x3c;Configuration Example of the Function Control&#x3e;</p>
<p id="p-0384" num="0383">Next, a configuration example of the function control will be described by using <figref idref="DRAWINGS">FIG. 17</figref>.</p>
<p id="p-0385" num="0384">The function control is a control method of a predetermined function according to the third and fourth embodiments by which, when the NAND flash memory <b>10</b> is an authenticator and the host device <b>20</b> is an authenticatee, the NAND flash memory <b>10</b> authenticates the host device <b>20</b> and provides the predetermined function to the host device <b>20</b> based on the authentication result.</p>
<p id="p-0386" num="0385">The configuration of the function control shown in <figref idref="DRAWINGS">FIG. 17</figref> is included in each of the NAND flash memories <b>10</b>. The function control includes a function controller <b>18</b> included in an authentication circuit <b>17</b>, a parameter register <b>89</b>, and a sequence control circuit <b>88</b>.</p>
<p id="p-0387" num="0386">The function controller <b>18</b> contained in the authentication circuit <b>17</b> controls functions to provide the predetermined function to the host device <b>20</b> based on an authentication result or unique information (constant HCj or the like) of the host device <b>20</b> if necessary. The function controller <b>18</b> updates control parameters <b>890</b> contained in the parameter register <b>89</b> based on an authentication result or unique information of the host device <b>20</b>.</p>
<p id="p-0388" num="0387">The control parameters <b>890</b> in the parameter register <b>89</b> contain at least one piece of access permission information (#0, #1, . . . , #3). For example, the access permission information #0 contains block addresses, page addresses, read attributes, write attributes, erase attributes, and unique information, or the like. A block address shows control of the memory cell array <b>11</b> associated with the block address. A page address shows control of the memory cell array <b>11</b> associated with the page address. A read attribute shows read permission information associated with a block address, or a block address and a page address. A write attribute shows write permission information associated with a block address, or a block address and a page address. An erase attribute shows erase permission information associated with a block address, or a block address and a page address. Unique information indicates that the access permission information is a control parameter of the host device <b>20</b> having the specific information.</p>
<p id="p-0389" num="0388">Each piece of the access permission information (#0, #1, . . . , #3) does not have to contain all the above information and may contain information in accordance with the needed control level. For example, specific information may not be contained if the control based on the unique information (such as the constant HCj) of the host device <b>20</b> is not needed. Further, the page address may not be contained if the control in units of pages is not needed. Further, the block address may not be contained if the control in any block address is not needed and, for example, the control is intended for a predetermined block only or the whole NAND flash memory <b>10</b>. Similarly, regarding read attributes, write attributes, and erase attributes, only those attributes of functions that need the control may be contained.</p>
<p id="p-0390" num="0389">The sequence control circuit <b>88</b> controls an operation sequence in accordance with a command (CMD) provided by the host device <b>20</b> according to the control parameters <b>890</b>. For a data read command, for example, the sequence control circuit <b>88</b> controls, based on read attributes of the access permission information in the control parameters <b>890</b>, the operation of reading (Read) data or rejecting to read data in accordance with the provided read command. If reading is permitted in the read attributes, data can be read from a cell array <b>11</b>. In addition, the above operation example applies also to the data write operation and data erase operation.</p>
<p id="p-0391" num="0390">&#x3c;Advantageous Effects&#x3e;</p>
<p id="p-0392" num="0391">According to the authenticator, authenticatee and authentication method according to the fourth embodiment, at least the advantageous effects (1) to (5) similar to those described above can be obtained.</p>
<p id="p-0393" num="0392">According to the present embodiment, the NAND flash memory <b>10</b> and the host device <b>20</b> can mutually authenticate.</p>
<p id="p-0394" num="0393">Further, the NAND flash memory <b>10</b> according to the present embodiment realizes the function control by the configuration shown in <figref idref="DRAWINGS">FIG. 17</figref>. The sequence control circuit <b>88</b> can control an operation sequence in accordance with the provided command according to the control parameters <b>890</b>. Thus, the host device <b>20</b> authenticated by the NAND flash memory <b>10</b> can advantageously be permitted (Process function) to execute various function processes of the updated control parameters <b>890</b> based on unique information (constant HCj or the like) of the host device <b>20</b>.</p>
<p id="p-0395" num="0394">Further, the NAND flash memory <b>10</b> according to the present example can include the function control of the configuration shown in <figref idref="DRAWINGS">FIG. 17</figref> along with the third and fourth embodiments.</p>
<heading id="h-0048" level="1">Fifth Embodiment</heading>
<heading id="h-0049" level="1">Configuration Example of the NAND Flash Memory</heading>
<p id="p-0396" num="0395">Next, a fifth embodiment will be described. The fifth embodiment relates to a configuration example of a NAND flash memory <b>10</b> to which an authentication function according to the first to fourth embodiments is applied.</p>
<p id="p-0397" num="0396">In the description, overlapping points with the above embodiments will be omitted.</p>
<p id="p-0398" num="0397">&#x3c;Overall Configuration Example of the NAND Flash Memory&#x3e;</p>
<p id="p-0399" num="0398">An overall configuration example of the NAND flash memory <b>10</b> according to the fifth embodiment will be described by using <figref idref="DRAWINGS">FIG. 18</figref>.</p>
<p id="p-0400" num="0399">As shown in <figref idref="DRAWINGS">FIG. 18</figref>, the NAND flash memory <b>10</b> includes a memory cell array <b>11</b> and a peripheral circuit.</p>
<p id="p-0401" num="0400">The memory cell array <b>11</b> includes a plurality of blocks BLOCK<b>1</b> to BLOCKn. The configuration of each block, which will be described with reference to <figref idref="DRAWINGS">FIG. 19</figref>, contains a plurality of memory cell transistors MC, word lines WL, and bit lines BL. Data in the memory cell transistors MC in each block is erased by one operation. Data cannot be erased in units of memory cell transistors or pages. That is, individual blocks are the minimum erasure units.</p>
<p id="p-0402" num="0401">The peripheral circuit includes a sense amplifier <b>77</b>, an input/output control circuit <b>84</b>, and a logic control circuit <b>85</b>.</p>
<p id="p-0403" num="0402">The sense amplifier <b>77</b> reads data of a memory cell (memory cell transistor MC) in the memory cell array <b>11</b> via the bit line BL and detects the state of a memory cell in the memory cell array <b>11</b> via the bit line BL.</p>
<p id="p-0404" num="0403">A data cache <b>12</b> temporarily holds data read from the sense amplifier <b>77</b> or data to be supplied to the sense amplifier <b>77</b>.</p>
<p id="p-0405" num="0404">A column decoder <b>75</b> selects the specific bit line BL, sense amplifier or the like based on an address signal supplied via an IO terminal from outside the NAND flash memory <b>10</b>.</p>
<p id="p-0406" num="0405">A column address buffer <b>74</b> temporarily holds address signals to supply the address signals to the column decoder <b>75</b>.</p>
<p id="p-0407" num="0406">A row decoder <b>78</b> receives various voltages needed for reading, writing, or erasing data from a voltage generator <b>86</b> to apply such voltages to the specific word lines WL based on an address signal.</p>
<p id="p-0408" num="0407">A row address buffer decoder <b>79</b> temporarily holds address signals to supply the address signals to the row decoder <b>78</b>.</p>
<p id="p-0409" num="0408">The voltage generator <b>86</b> receives reference power supply voltages VSS, VCC, voltages VSSQ, VCCQ and the like to generate a voltage needed for writing, reading, or erasing data from these voltages.</p>
<p id="p-0410" num="0409">The input/output control circuit <b>84</b> receives various commands that control the operation of the NAND flash memory <b>10</b>, address signals, and write data via the IO terminal and also outputs read data. Address signals output from the input/output control circuit <b>84</b> are latched by an address register <b>82</b>. Latched address signals are supplied to the column address buffer <b>74</b> and the row address buffer decoder <b>79</b>. Commands output from the input/output control circuit <b>84</b> are latched by a command register <b>83</b>. A status register <b>81</b> holds various status values for the input/output control circuit <b>84</b>.</p>
<p id="p-0411" num="0410">The NAND flash memory <b>10</b> receives various control signals for controlling a command, address, IO terminal for data input/output, and operation from outside as an external interface (NAND I/F). Control signals include, for example, a chip enable /CE, command latch enable CLE, address latch enable ALE, read enable RE and /RE, write enable WE and /WE, write protect WP, and clocks DQS, /DQS.</p>
<p id="p-0412" num="0411">These control signals are received at corresponding terminals, and then transferred to the logic control circuit <b>85</b>. The logic control circuit <b>85</b> controls the input/output control circuit <b>84</b> based on control signals to permit or inhibit a signal on the terminal IO from reaching the address register <b>82</b>, the command register <b>83</b>, a page buffer <b>12</b> or the like as a command, address, or data via the input/output control circuit <b>84</b>. The logic control circuit <b>85</b> also receives a latched command from the command register <b>83</b>.</p>
<p id="p-0413" num="0412">Of control signals, a WE terminal supplies a data input clock, an RE terminal supplies a data output clock, a DQS terminal transmits a data input/output clock, a CLE terminal is intended for enabling that input data input as a command, an ALE terminal is intended for enabling that inputs data input as an address, and a CE terminal is intended to enable overall functions of data input/output.</p>
<p id="p-0414" num="0413">An R/B terminal indicates an internal operating state of the NAND flash memory <b>10</b>, a WP terminal transmits a write prevention signal to prevent erroneous writing, and Vcc/Vss/Vccq/Vssq terminals are used to supply power. Also in the present embodiment, a /RE terminal, /WE terminal, and /DQS terminal that transmit respective complementary signals are present for the RE terminal, WE terminal, and DQS terminal as terminals (Toggle) used when data transmission is realized by a high-speed interface.</p>
<p id="p-0415" num="0414">The logic control circuit <b>85</b> includes a sequence control circuit <b>88</b>, a parameter register <b>89</b>, and an authentication circuit <b>17</b>. The logic control circuit <b>85</b> also manages output of a ready/busy signal (R/B). More specifically, the logic control circuit <b>85</b> outputs a busy signal while the NAND flash memory <b>10</b> is busy.</p>
<p id="p-0416" num="0415">The sequence control circuit <b>88</b> receives a command from the command register <b>83</b>. The sequence control circuit <b>88</b> controls the sense amplifier <b>77</b>, the voltage generator <b>86</b> and the like so that the process (such as reading, writing, or erasing data) instructed by the command can be performed based on the received command.</p>
<p id="p-0417" num="0416">The parameter register <b>89</b> holds a variety of the control parameters <b>890</b> specifying the operation of the logic control circuit <b>85</b>. The control parameters <b>890</b> are referred to or updated by the sequence control circuit <b>88</b> and used for control of a sequence of the logic control circuit <b>85</b> or the input/output control circuit <b>84</b>.</p>
<p id="p-0418" num="0417">The authentication circuit <b>17</b> executes the process related to the authentication. For example, as described above, the authentication circuit <b>17</b> also updates data, for example, rewrites the control parameters <b>890</b> contained in the parameter register. The authentication circuit <b>17</b> receives a command requesting the authentication and performs a specific operation for the authentication by using specific data in the memory cell array <b>11</b> to output the result out of the memory <b>10</b>. In the process of executing a series of operations, the authentication circuit <b>17</b> permits the sequence control circuit <b>88</b> to read or write necessary data through updates of the control parameters <b>890</b>.</p>
<p id="p-0419" num="0418">A ready/busy circuit (RY/BY) <b>87</b> makes a notification of an R/B signal out of the NAND flash memory <b>10</b> via a switch transistor under the control of the logic control circuit <b>85</b>.</p>
<p id="p-0420" num="0419">&#x3c;Configuration Example of the Block (BLOCK)&#x3e;</p>
<p id="p-0421" num="0420">Next, a configuration example of the block (BLOCK) forming the memory cell array <b>11</b> will be described by using <figref idref="DRAWINGS">FIG. 19</figref>. BLOCK<b>1</b> in <figref idref="DRAWINGS">FIG. 18</figref> is taken as an example for the description. Data in memory cells in the block BLOCK<b>1</b> is erased, as described above, by one operation and thus, the block is the unit of data erasure.</p>
<p id="p-0422" num="0421">The block BLOCK<b>1</b> includes a plurality of memory cell units MU arranged in a word line direction (WL direction). The memory cell unit MU includes a NAND string (memory cell string) formed of eight memory cells MC<b>0</b> to MC<b>7</b> arranged in a bit line direction (BL direction) intersecting the WL direction and whose current path is connected in series, a select transistor S<b>1</b> on the source side connected to one end of the current path of the NAND string, and a select transistor S<b>2</b> on the drain side connected to the other end of the current path of the NAND string.</p>
<p id="p-0423" num="0422">In the present embodiment, the memory cell unit MU includes eight memory cells MC<b>0</b> to MC<b>7</b>, but may include two memory cells or more, for example, 56 or 32 memory cells and the number of memory cells is not limited to 8.</p>
<p id="p-0424" num="0423">The other end of the current path of the select transistor S<b>1</b> on the source side is connected to a source line SL. The other end of the current path of the select transistor S<b>2</b> on the drain side is connected to a bit line BL provided above each memory cell unit MU corresponding to the memory cell unit MU and extending in the BL direction.</p>
<p id="p-0425" num="0424">The word lines WL<b>0</b> to WL<b>7</b> extend in the WL direction to be commonly connected to control gate electrodes CG of a plurality of memory cells in the WL direction. A select gate line SGS extends in the WL direction to be commonly connected to a plurality of select transistors S<b>1</b> in the WL direction. A select gate line SGD also extends in the WL direction to be commonly connected to a plurality of select transistors S<b>2</b> in the WL direction.</p>
<p id="p-0426" num="0425">A page (labeled with &#x201c;PAGE&#x201d; in <figref idref="DRAWINGS">FIG. 19</figref>) exists for each of the word lines WL<b>0</b> to WL<b>7</b>. For example, as shown by being surrounded with a broken line in <figref idref="DRAWINGS">FIG. 19</figref>, page 7 (PAGE7) exists in the word line WL<b>7</b>. Because a data read operation or data write operation is performed for each page (PAGE), the page (PAGE) is the data read unit and the data write unit.</p>
<p id="p-0427" num="0426">&#x3c;Configuration Example of the Cell Array&#x3e;</p>
<p id="p-0428" num="0427">Next, the structure of the memory cell array <b>11</b> will be shown by using <figref idref="DRAWINGS">FIGS. 20A</figref>, <b>20</b>B, <b>20</b>C, and <b>20</b>D.</p>
<p id="p-0429" num="0428">As shown in <figref idref="DRAWINGS">FIG. 20A</figref>, the memory cell array <b>11</b> includes a plurality of blocks (BLOCK) of a normal block <b>11</b>-<b>1</b>, a hidden block <b>11</b>-<b>2</b>, a ROM block <b>11</b>-<b>3</b>, a ROM fuse block <b>11</b>-<b>4</b>, a protected block <b>11</b>-<b>5</b> and the like. Each block includes, as described above, a plurality of pages. Normally, data is read or written in units of pages and data is erased in units of blocks.</p>
<p id="p-0430" num="0429">As described above, both data writing and data reading are permitted to the normal block <b>11</b>-<b>1</b>, which is used for normal data holding. The normal block corresponds to the above read/write area <b>11</b>-<b>1</b>. The number of blocks is not specifically limited.</p>
<p id="p-0431" num="0430">As described above, the hidden block <b>11</b>-<b>2</b> and the ROM block <b>11</b>-<b>3</b> are applied to the above authentication operation. The hidden block <b>11</b>-<b>2</b> corresponds to the above hidden area <b>11</b>-<b>2</b>. The ROM block <b>11</b>-<b>3</b> corresponds to the above ROM area <b>11</b>-<b>3</b>. The number of blocks is not specifically limited in both cases.</p>
<p id="p-0432" num="0431">In the present embodiment, as shown in <figref idref="DRAWINGS">FIG. 20B</figref>, read-only data is further recorded in the memory space of the ROM block <b>11</b>-<b>3</b>.</p>
<p id="p-0433" num="0432">In the present embodiment, as shown in <figref idref="DRAWINGS">FIG. 20C</figref>, hidden data is further recorded in the memory space of the hidden block <b>11</b>-<b>2</b>.</p>
<p id="p-0434" num="0433">In the present embodiment, as shown in <figref idref="DRAWINGS">FIG. 20D</figref>, protected data used by the authentication function described below is further recorded in the memory space of the protected block <b>11</b>-<b>5</b>.</p>
<p id="p-0435" num="0434">The ROM fuse block <b>11</b>-<b>4</b> is used, for example, for holding parameters for operation control of the NAND flash memory <b>10</b>.</p>
<p id="p-0436" num="0435">&#x3c;Read-Only Data in the ROM Block&#x3e;</p>
<p id="p-0437" num="0436">Next, read-only data in the ROM block <b>11</b>-<b>3</b> will be described by using <figref idref="DRAWINGS">FIG. 21</figref>.</p>
<p id="p-0438" num="0437">As shown in <figref idref="DRAWINGS">FIG. 21</figref>, read-only data is recorded in some page in the memory space of the ROM block <b>11</b>-<b>3</b>. If read-only data is a sequence of read-only data A to Z, <figref idref="DRAWINGS">FIG. 21</figref> shows three examples of data patterns intended for error correction of data.</p>
<p id="p-0439" num="0438">As shown in first data pattern, the first data pattern is an example of repeatedly recording the same data (A, A, , , , B, B, , , ,). In this case, error corrections can be made by reading read-only data repeatedly by the host device <b>20</b> and making a majority vote determination by an error correction unit in the host device <b>20</b> or the like. Alternatively, error corrections can be made by reading read-only data repeatedly by the controller <b>19</b> and making a majority vote determination by an error correction unit in the controller <b>19</b> or the like. Alternatively, error corrections can be made by making a majority vote determination of read-only data read repeatedly by an error correction unit in the NAND flash memory <b>10</b>. For example, the number of times of repetition is desirably 16 times or more.</p>
<p id="p-0440" num="0439">As shown in a second data pattern of <figref idref="DRAWINGS">FIG. 21</figref>, the second data pattern is an example of repeatedly recording a complementary data pair formed of data (A, B, , , , ) and inverted data thereof (inversion of A, inversion of B, , , , ). In this case, error corrections can be made by reading read-only data repeatedly by the host device <b>20</b> and making a majority vote determination in consideration of complementary data pairs by an error correction unit in the host device <b>20</b> or the like. Alternatively, error corrections can be made by reading read-only data repeatedly by the controller <b>19</b> and making a majority vote determination in consideration of complementary data pairs by an error correction unit in the controller <b>19</b> or the like. Alternatively, error corrections can be made by making a majority vote determination in consideration of complementary data pairs of read-only data read repeatedly by an error correction unit in the NAND flash memory <b>10</b>.</p>
<p id="p-0441" num="0440">The reason why complementary data pairs are repeatedly recorded is due to an error mode of the NAND flash memory <b>10</b>. The NAND flash memory <b>10</b> writes data by applying a predetermined voltage to the memory cell MC to inject electrons into a floating gate FG. Data is read by using a threshold voltage that varies depending on whether electrons are present in the floating gate FG of the memory cell MC. Data is erased by applying a voltage in the opposite direction of the voltage when data is written to extract electrons from the floating gate FG into the substrate. Though the amount of voltage application and a gate applied with the voltage in reading, writing, and erasing data are different, the voltage is applied in the memory cell MC in all these cases. Typical error modes of the NAND flash memory <b>10</b> caused by this principle include read program disturb and data retention problem. Read program disturb is an error mode in which data changes due to a change of the amount of electrons in the floating gate FG after repeatedly reading the local or adjacent pages or writing data into adjacent pages. Thus, a state of the memory cell changes to a weak program state, increasing the threshold voltage in most cases. Data retention problem is an error mode in which data changes because electrons are drawn from the floating gate after a page once written being left for a long time. Thus, a state of the memory cell changes to a weak erasure state, decreasing the threshold voltage in most cases. That is, there is a general trend of increase or decrease in these defective modes and thus, errors of data are likely to occur in the same direction.</p>
<p id="p-0442" num="0441">Thus, by recording data as complementary data as shown in second data pattern of <figref idref="DRAWINGS">FIG. 21</figref>, because if data is 1 (unrecorded), inverted data thereof is 0 (recorded), both pieces of data shift in the 0 direction (increase of threshold voltage) for read program disturb and conversely in the 1 direction (decrease of threshold voltage) for data retention. Thus, whether at least an error has occurred can be determined more easily by storing complementary data. In this case, for example, the complementary data pair is desirably repeated at least eight times in the data pattern.</p>
<p id="p-0443" num="0442">As shown in third data pattern of <figref idref="DRAWINGS">FIG. 21</figref>, the third data patters is an example in which an error correcting code is further used in addition to read-only data (A, B, , , , Z). Because random errors occur in the NAND flash memory <b>10</b> in units of bits, for example, the BCH code, the LDPC code or the like capable of correcting random bit errors is desirable as the error correcting code.</p>
<p id="p-0444" num="0443">In each example of the first to third data patterns, each piece of data may be randomized. Randomize is to make data to be recorded random by a method of, for example, calculating an exclusive OR of a generated random sequence and data to be recorded to eliminate data biases. The M sequence or the like may be used as the generation method of a random sequence.</p>
<p id="p-0445" num="0444">In addition, in all examples of the first to third data patterns, each piece of data is recorded in a binary state. The binary state is a method of recording data by determining whether the threshold voltage in one memory cell belongs to a high level or a low level by setting one predetermined level as a reference and can hold information of 1 bit per memory cell. Such a recording method is generally called an SLC (Single Level Cell) recording. On the other hand, if data is recorded by determining to which level the threshold voltage in one memory cell belongs by setting a plurality of predetermined levels as a reference, information of a plurality of bits can be held by each memory cell. If, for example, four levels to which the threshold voltage belongs for recording, information of 2 bits can be held by each memory cell. Such a recording method is generally called an MLC (Multi Level Cell) recording. While the MLC recording can realize higher recording densities due to a larger recording capacity per cell, changes of recorded data with respect to shifts of the threshold voltage occur relatively more easily. Thus, it is desirable to record read-only data recorded in the ROM block <b>11</b>-<b>3</b> with a smaller number of bits per cell than normal data. In MLC of 4-level recording in which the number of bits per cell is 2, ROM data is desirably SLC-recorded. In MLC of 8-level recording in which the number of bits per cell is 4, ROM data is desirably recorded as MLC of 4-level recording in which the number of bits per cell is 2 or SLC-recorded.</p>
<p id="p-0446" num="0445">&#x3c;Configuration Example of ECC&#x3e;</p>
<p id="p-0447" num="0446">Next, a configuration example for performing the error correcting code (ECC) correction will be described.</p>
<p id="p-0448" num="0447">The first to third data structures shown in <figref idref="DRAWINGS">FIG. 21</figref> described above are different in a strict sense, but are considered to be correcting codes ECC in a broad sense that redundancy is attached to the original data. Thus, each data structure is considered to include data and a correcting code attached to the data. It is necessary for at least of the host device <b>20</b>, the controller <b>19</b>, and the NAND flash memory <b>10</b> to have the corresponding correcting function.</p>
<p id="p-0449" num="0448">A first example shown in <figref idref="DRAWINGS">FIG. 22</figref> is an example in which the host device <b>20</b> has a correcting function (ECC decode) <b>90</b>. In this case, the controller <b>19</b> and the NAND flash memory <b>10</b> do not execute a correcting process and deliver signed data (Data) to the host device <b>20</b> and the host device <b>20</b> executes the correcting process through the correcting function (ECC decode) <b>90</b> to generate predetermined data (Data).</p>
<p id="p-0450" num="0449">A second example shown in <figref idref="DRAWINGS">FIG. 23</figref> is an example in which the controller <b>19</b> has the correcting function (ECC decode) <b>90</b>. In this case, the NAND flash memory <b>10</b> does not execute the correcting process and the controller <b>19</b> executes the correcting process and delivers corrected data (Data) to the host device <b>20</b>.</p>
<p id="p-0451" num="0450">A third example shown in <figref idref="DRAWINGS">FIG. 24</figref> is an example in which the NAND flash memory <b>10</b> has the correcting function (ECC decode) <b>90</b>. In this case, the NAND flash memory <b>10</b> executes the correcting process and delivers corrected data (Data) to the host device <b>20</b> via the controller <b>19</b>.</p>
<p id="p-0452" num="0451">A fourth example shown in <figref idref="DRAWINGS">FIG. 25</figref> is an example in which both of the controller <b>19</b> and the host device <b>20</b> have correcting functions <b>90</b>-<b>1</b>, <b>90</b>-<b>2</b>. In this case, first the attached correcting code has a double structure and the controller <b>19</b> and the host device <b>20</b> each execute the correcting process of an inner code (Inner code) or outer code (Outer code).</p>
<p id="p-0453" num="0452">However, the present embodiment is not limited to the above cases and the NAND flash memory <b>10</b>, the controller <b>19</b>, and the host device <b>20</b> can each correct errors while in collaboration in accordance with the correcting function of each.</p>
<p id="p-0454" num="0453">&#x3c;Hidden Data in the Hidden Block <b>11</b>-<b>2</b>&#x3e;</p>
<p id="p-0455" num="0454">Next, an example of the holding state of hidden data in the hidden block <b>11</b>-<b>2</b> will be described by using <figref idref="DRAWINGS">FIG. 26</figref>.</p>
<p id="p-0456" num="0455">As shown in <figref idref="DRAWINGS">FIG. 26</figref>, hidden data is recorded in pages in the memory space of the hidden block <b>11</b>-<b>2</b>. If hidden data is a sequence of A to Z, <figref idref="DRAWINGS">FIG. 26</figref> shows three examples.</p>
<p id="p-0457" num="0456">In a first data pattern shown in <figref idref="DRAWINGS">FIG. 26</figref>, a plurality of pieces of hidden data (A, A, , , , B, B, , , , ) and an access control pattern B<b>1</b> are stored.</p>
<p id="p-0458" num="0457">In a second data pattern shown in <figref idref="DRAWINGS">FIG. 26</figref>, a plurality of pieces of hidden data (A, A, , , , B, B, , , , ), inverted data thereof, and an access control pattern B<b>2</b> are stored.</p>
<p id="p-0459" num="0458">In a third data pattern shown in <figref idref="DRAWINGS">FIG. 26</figref>, a plurality of pieces of hidden data (A, B, , , , Z), an error correcting code, and an access control pattern B<b>3</b> are stored.</p>
<p id="p-0460" num="0459">An objective of each example is similarly an error correction. Another objective is to control reading, writing, and erasure of the hidden block <b>11</b>-<b>2</b> or pages in the hidden block <b>11</b>-<b>2</b>. Because the area records hidden data and also holds information used only inside the NAND flash memory <b>10</b> by the authentication circuit <b>17</b>, it is necessary to inhibit all operations of reading, writing, and erasure from outside. On the other hand, in the initial stage of manufacturing the NAND flash memory <b>10</b>, the area is unrecorded and hidden data needs to be written in one of the manufacturing stages. Further, because data retention performance of the memory cell in the initial state may be insufficient as characteristics of the NAND flash memory <b>10</b>, it is necessary to cause the memory cell to perform operations of reading, writing, and erasure to inspect whether the memory cell can hold data as specified.</p>
<p id="p-0461" num="0460">Thus, reading, writing, and erasure can be performed on the area <b>11</b>-<b>2</b> in the manufacturing stage, but it is necessary to inhibit all of reading, writing, and erasure from being performed on the area in shipment after manufacturing is completed. As information to cause the state change, the access control patterns B<b>1</b>, B<b>2</b>, B<b>3</b> are recorded in the area <b>11</b>-<b>2</b>.</p>
<p id="p-0462" num="0461">The access control patterns B<b>1</b>, B<b>2</b>, B<b>3</b> may be recorded for each page or only in the first page of a block. The recording position of the access control patterns B<b>1</b>, B<b>2</b>, B<b>3</b> in a page may be a general data area or a redundant area. The redundant area is, for example, an area used by the controller or the like to attach a correcting code, an area used by the NAND flash memory <b>10</b> to record information to indicate the internal status for each page or the like.</p>
<p id="p-0463" num="0462">It is also desirable to record, like ROM data, hidden data and the access control patterns B<b>1</b>, B<b>2</b>, B<b>3</b> in binary (SLC) mode.</p>
<p id="p-0464" num="0463">Next, a configuration example of the access control pattern will be shown by using <figref idref="DRAWINGS">FIG. 27</figref>.</p>
<p id="p-0465" num="0464">First, the access control pattern is formed of a plurality of bits to prevent losses caused by an error.</p>
<p id="p-0466" num="0465">The access control pattern B<b>1</b> as the first example is provided with a plurality of control flag bits A to Z, each of which is set as a predetermined pattern. If an access request of reading, writing, erasure or the like to the area is received from the host device <b>20</b>, the NAND flash memory <b>10</b> checks the access control pattern B<b>1</b> of the area <b>11</b>-<b>2</b> against a predetermined pattern and inhibits access if the rate of matching of both is equal to a predetermined rate or more.</p>
<p id="p-0467" num="0466">The access control pattern B<b>2</b> as the second example is in accordance with a method of repeatedly recording control flags. This is effective in reducing the probability of an error of a predetermined pattern.</p>
<p id="p-0468" num="0467">The access control pattern B<b>3</b> as the third example is in accordance with a method of recording each control flag and inverted data of each control flag. As described above, this method is also effective in reducing the probability of an error.</p>
<p id="p-0469" num="0468">&#x3c;Usage Example of the Access Control Pattern&#x3e;</p>
<p id="p-0470" num="0469">Next, the method of sensing the access control pattern and how to use sensing results.</p>
<p id="p-0471" num="0470">As shown in <figref idref="DRAWINGS">FIG. 28</figref>, the access pattern read from the hidden area <b>11</b>-<b>2</b> in the memory cell array <b>11</b> is input into a pattern sensing circuit <b>91</b> in the logic control circuit <b>85</b>.</p>
<p id="p-0472" num="0471">The pattern sensing circuit <b>91</b> executes a pattern recognition process on the input access control pattern and determines whether the rate of matching is equal to a predetermined rate or more to control accessing. The rate of matching is calculated from an error probability in a memory cell array of the NAND flash memory <b>10</b> and the amount of data of access control patterns and it is desirable to set the rate of matching so that, for example, an error detection probability becomes at least 10<sup>&#x2212;3 </sup>or less. The pattern sensing circuit <b>91</b> inputs an enable signal to control data reading, data writing, and data erasure based on a detection result into the sequence control circuit <b>88</b>.</p>
<p id="p-0473" num="0472">The sequence control circuit <b>88</b> controls data reading, data writing, and data erasure according to the enable signal of the sensing result.</p>
<p id="p-0474" num="0473">&#x3c;Test Flow&#x3e;</p>
<p id="p-0475" num="0474">Next, the inspection flow of the manufacturing process of the NAND flash memory <b>10</b> using the above access control patterns (for example, B<b>1</b> to B<b>3</b>) will be described along <figref idref="DRAWINGS">FIG. 29</figref>.</p>
<p id="h-0050" num="0000">(Steps S<b>71</b>, S<b>72</b>)</p>
<p id="p-0476" num="0475">In the manufacturing process, first data that does not correspond to the access control patterns is recorded in the hidden area <b>11</b>-<b>2</b> and tested. In this stage, access to the hidden area <b>11</b>-<b>2</b> is permitted.</p>
<p id="p-0477" num="0476">However, any of the different security levels may be set to the area <b>11</b>-<b>2</b> depending on whether all access of data reading, data writing, and data erasure is permitted, data writing and data erasure are permitted or the like. If a high security level is needed for the area <b>11</b>-<b>2</b>, even if all access is inhibited by the access control patterns, erroneous access permission may be granted due to degradation of data of the access control patterns. In this case, hidden data may be read out and thus, even in the test process in step S<b>71</b>, data reading may be inhibited, that is, reading may not be permitted to the area <b>11</b>-<b>2</b> in the first place at the hard-wired level of the NAND flash memory <b>10</b>.</p>
<p id="p-0478" num="0477">Alternatively, if resistance to data degradation of the access control patterns is sufficient, for example, the access control patterns are repeatedly recorded many times or a strong error correcting code is attached, control including data reading may be performed by the access control patterns to ensure convenience of the test. In this case, the error detection probability shown above is still lower and, for example, 10<sup>&#x2212;5 </sup>or lower is desirable.</p>
<p id="h-0051" num="0000">(Step S<b>73</b>)</p>
<p id="p-0479" num="0478">Subsequently, after the predetermined test in step S<b>72</b> is completed, hidden data and the access control patterns (B<b>1</b> to B<b>3</b> and the like) are written into the hidden area <b>11</b>-<b>2</b>.</p>
<p id="h-0052" num="0000">(Step S<b>74</b>)</p>
<p id="p-0480" num="0479">Subsequently, the NAND flash memory <b>10</b> is shipped with the above data written.</p>
<p id="p-0481" num="0480">&#x3c;Flow of Data Erasure&#x3e;</p>
<p id="p-0482" num="0481">Next, the data erasure operation inside the NAND flash memory <b>10</b> will be described along <figref idref="DRAWINGS">FIG. 30</figref>.</p>
<p id="h-0053" num="0000">(Step S<b>76</b>)</p>
<p id="p-0483" num="0482">First, if an operation instruction of an erasure operation is issued by the host device <b>20</b>, the NAND flash memory <b>10</b> determines whether the selected block address in the instruction is a specific block.</p>
<p id="h-0054" num="0000">(Step S<b>77</b>)</p>
<p id="p-0484" num="0483">Subsequently, if the selected block address is not a specific block (No), the NAND flash memory <b>10</b> executes a normal erasure sequence.</p>
<p id="h-0055" num="0000">(Step S<b>78</b>)</p>
<p id="p-0485" num="0484">On the other hand, if the selected block address is a specific block (Yes), the NAND flash memory <b>10</b> reads access control information (B<b>1</b> to B<b>3</b> or the like) from the hidden area <b>11</b>-<b>2</b>.</p>
<p id="h-0056" num="0000">(Step S<b>79</b>)</p>
<p id="p-0486" num="0485">Subsequently, the NAND flash memory <b>10</b> senses patterns of the access control information (B<b>1</b> to B<b>3</b> or the like) to determine whether the rate of pattern matching is equal to a predetermined value or more.</p>
<p id="h-0057" num="0000">(Step S<b>80</b>)</p>
<p id="p-0487" num="0486">Subsequently, if the rate of pattern matching is equal to the predetermined value or less (Yes), the NAND flash memory <b>10</b> executes a normal erasure sequence.</p>
<p id="h-0058" num="0000">(Step S<b>81</b>)</p>
<p id="p-0488" num="0487">Subsequently, if the rate of pattern matching is equal to the predetermined value or more (No), the NAND flash memory <b>10</b> exits the erasure sequence to terminate the data erasure flow (End).</p>
<p id="p-0489" num="0488">In the present embodiment, data erasure is taken as an example, but the present embodiment can similarly be applied to data reading and data writing.</p>
<p id="p-0490" num="0489">&#x3c;Advantageous Effects&#x3e;</p>
<p id="p-0491" num="0490">According to the authenticator, authenticatee and authentication method according to the fifth embodiment, at least the advantageous effects (1) to (5) similar to those described above can be obtained.</p>
<p id="p-0492" num="0491">Further, reliability can advantageously be improved by applying the configuration and method in the present embodiment.</p>
<heading id="h-0059" level="1">Sixth Embodiment</heading>
<heading id="h-0060" level="1">Example of Using the Data Cache for the Authentication Process</heading>
<p id="p-0493" num="0492">A sixth embodiment relates to an example of using the data cache for the authentication process. In the description, overlapping points with the above embodiments will be omitted.</p>
<p id="p-0494" num="0493">&#x3c;Configuration Example of the Data Cache, Sense Amplifier and the Like&#x3e;</p>
<p id="p-0495" num="0494">A configuration example of a data cache, sense amplifier and the like according to the sixth embodiment will be described by using <figref idref="DRAWINGS">FIG. 31</figref>.</p>
<p id="p-0496" num="0495">As shown in <figref idref="DRAWINGS">FIG. 31</figref>, a data cache <b>12</b> of an authentication process according to the above embodiment is shown as a component. A NAND flash memory <b>10</b> includes the volatile data cache <b>12</b> temporarily storing page data read from a memory cell array <b>11</b> or temporarily storing write page data received as recording data from outside. The data cache <b>12</b> in the present embodiment is also called a page buffer, data buffer or the like and has an area of the normal page size or more. Further, the data cache frequently has an area a plurality of times the page size to make a reading or writing process of page data faster and to realize random page access.</p>
<p id="p-0497" num="0496">The data cache <b>12</b> includes a plurality of data caches A, B, C. Each data cache is connected to the sense amplifier (SA) and data line used for reading from the memory cell array <b>11</b>.</p>
<p id="p-0498" num="0497">The sense amplifier SA is electrically connected to the memory cell array <b>11</b> via a bit line (not shown).</p>
<p id="p-0499" num="0498">The latch circuits DC_A of data caches are data caches capable of directly exchanging data with data lines. With IO being connected via the data line, data in the data cache <b>12</b> can be output from the NAND flash memory <b>10</b> through DC_A and data outside the NAND flash memory <b>10</b> can be loaded into the data cache.</p>
<p id="p-0500" num="0499">Further, an operator connected to the data caches <b>12</b> to perform an operation between the data caches <b>12</b> is included. The operator corresponds to an authentication circuit <b>17</b> used for the authentication process in the above embodiments and including data generators <b>13</b>, <b>14</b> and a one-way circuit <b>15</b>.</p>
<p id="p-0501" num="0500">Further, an internal register <b>92</b> to temporarily store data is included.</p>
<p id="p-0502" num="0501">In the NAND flash memory <b>10</b>, in addition to the read command from the memory cell array <b>11</b>, a command called register read to read data read out from the memory cell array <b>11</b> into the data cache <b>12</b> is available for data reading. Specifically, the data read command includes two kinds of commands; one of the commands instructs the NAND flash memory to read data from the memory cell array to the data cache <b>12</b>; another of the commands instruct the NAND flash memory to read data from the data cache <b>12</b> to outside and is referred to as &#x201c;register read.&#x201d;</p>
<p id="p-0503" num="0502">In the authentication method, the hidden block <b>11</b>-<b>2</b> in the NAND flash memory <b>10</b> may not allow hidden information (NKey, SecretID and the like) recorded in the hidden block <b>11</b>-<b>2</b> to be read by access from outside the NAND chip <b>10</b>. On the other hand, when the NAND flash memory <b>10</b> executes an authentication process, the NAND flash memory <b>10</b> may internally read hidden information (NKey, SecretID and the like) recorded in the hidden block <b>11</b>-<b>2</b> to use the hidden information for the authentication process. That is, while it is necessary to allow hidden information (NKey, SecretID and the like) to be read from the memory cell array <b>11</b> into the data cache <b>12</b>, it is necessary to inhibit data output from the data cache <b>12</b> to the outside of the NAND flash memory <b>10</b>. This corresponds to revoking the register reading.</p>
<p id="p-0504" num="0503">Thus, the data reading operation when the hidden block <b>11</b>-<b>2</b> is accessed from outside the NAND flash memory <b>10</b> is made different from the normal reading operation. More specifically, when the hidden block <b>11</b>-<b>2</b> is accessed, data sensed from the memory cell array <b>11</b> is locked in the other data caches DC_B, DC_C than the data cache DC_A to prevent the data from being output to revoke the register read command so that the command does not work. On the other hand, if the accessed block is not the hidden block <b>11</b>-<b>2</b>, data is read as usual by using the data cache DC_A.</p>
<p id="p-0505" num="0504">Thus, according to the above configuration, the plurality of data caches DC_A to DC_C is provided and the authentication process is executed by using the data caches DC_B, DC_C that cannot be accessed by a user from outside. Thus, when hidden information (NKey, SecretID and the like) is used for the authentication process, hidden information such as key information (NKey) can advantageously be prevented from being unlawfully read from outside.</p>
<p id="p-0506" num="0505">&#x3c;First Example of NAND Internal Operation Flow in the Authentication Process&#x3e;</p>
<p id="p-0507" num="0506">Next, a flow that does not output information held in the hidden block <b>11</b>-<b>2</b> to the host device <b>20</b> directly or indirectly in the process of the authentication process will be shown along <figref idref="DRAWINGS">FIG. 32</figref>.</p>
<p id="h-0061" num="0000">(Step S<b>82</b>)</p>
<p id="p-0508" num="0507">First, it is assumed in the authentication process that data is input from outside the NAND flash memory <b>10</b> like the host device <b>20</b>. The input data is, for example, the random number RN or the host constant HCj and the data is loaded into the data cache DC_A.</p>
<p id="h-0062" num="0000">(Step S<b>83</b>)</p>
<p id="p-0509" num="0508">Subsequently, an indirect read request to access a special block like the hidden block <b>11</b>-<b>2</b> is made from the host device <b>20</b>. This corresponds to a calculation request of authentication information in the authentication.</p>
<p id="p-0510" num="0509">In response to the request, data of a confidential page read from the memory cell array <b>11</b> is read out.</p>
<p id="h-0063" num="0000">(Step S<b>84</b>)</p>
<p id="p-0511" num="0510">Subsequently, the read data of the confidential page is stored in the data cache DC_B.</p>
<p id="h-0064" num="0000">(Step S<b>85</b>)</p>
<p id="p-0512" num="0511">Subsequently, an operation of the authentication process described in the above embodiments is performed between data stored in the data cache DC_A and the data cache DC_B by using the operator (authentication circuit <b>17</b>).</p>
<p id="h-0065" num="0000">(Step S<b>86</b>)</p>
<p id="p-0513" num="0512">Subsequently, the operation result is stored in the data cache DC_C.</p>
<p id="h-0066" num="0000">(Step S<b>87</b>)</p>
<p id="p-0514" num="0513">If the confidential data remains in the data cache when the chip becomes ready by completing the sequence, there is a possibility that the confidential data may be read from outside. To prevent such a possibility, it is necessary to reset information in all the data caches DC_A to DC_C before the sequence is completed. On the other hand, the host device <b>20</b> needs to obtain the result of the operation after the data caches DC_A to DC_C being reset.</p>
<p id="p-0515" num="0514">Thus, the operation result held in the data cache DC_C is first copied to the internal register <b>92</b>.</p>
<p id="h-0067" num="0000">(Step S<b>88</b>)</p>
<p id="p-0516" num="0515">Subsequently, data in all the data caches DC_A to DC_C is reset (in that, data is deleted).</p>
<p id="h-0068" num="0000">(Step S<b>89</b>)</p>
<p id="p-0517" num="0516">Subsequently, data saved in the internal register <b>92</b> is brought back to the data cache DC_A. If the operation heretofore is completed, the NAND flash memory <b>10</b> completes the sequence to become ready. At this point, the operation result is stored in the data cache DC_A.</p>
<p id="h-0069" num="0000">(Step S<b>90</b>)</p>
<p id="p-0518" num="0517">Subsequently, the host device <b>20</b> can obtain the data stored in the data cache DC_A by the register read command.</p>
<p id="p-0519" num="0518">&#x3c;Second Example of NAND Internal Operation Flow in the Authentication Process&#x3e;</p>
<p id="p-0520" num="0519">Next, a NAND internal operation flow in an embodiment including a random number generator <b>24</b><i>n </i>inside the NAND flash memory <b>10</b> will be described along <figref idref="DRAWINGS">FIG. 33</figref>. <figref idref="DRAWINGS">FIG. 33</figref> is different from <figref idref="DRAWINGS">FIG. 32</figref> in that a random number RNn generated by the random number generator <b>24</b><i>n </i>inside the NAND flash memory <b>10</b> is used.</p>
<p id="h-0070" num="0000">(Step S<b>91</b>)</p>
<p id="p-0521" num="0520">First, in the authentication process, when a random number read request is issued to the NAND flash memory <b>10</b> from the host device <b>20</b>, the NAND flash memory <b>10</b> causes the random number generator to generate a random number and the generated random number is loaded into the data cache DC_A.</p>
<p id="h-0071" num="0000">(Step S<b>92</b>)</p>
<p id="p-0522" num="0521">Subsequently, the host device <b>20</b> reads the random number in the data cache DC_A by the register read command.</p>
<p id="h-0072" num="0000">(Step S<b>93</b>)</p>
<p id="p-0523" num="0522">Subsequently, in the authentication process, data, for example, the host constant (HCj) is input from the host device <b>20</b> into the NAND flash memory <b>10</b>. The data is loaded into the data cache DC_A.</p>
<p id="p-0524" num="0523">Further, the authentication information which is obtained by the arithmetic operation in the host device <b>20</b> is input into the NAND flash memory <b>10</b> from the host device <b>20</b>. The data is, for example, Oneway-ID and the data is loaded into the data cache DC_A.</p>
<p id="h-0073" num="0000">(Step S<b>94</b>)</p>
<p id="p-0525" num="0524">Subsequently, an indirect read request is made from the host device <b>20</b> by accessing the hidden block <b>11</b>-<b>2</b>. This corresponds to a calculation request of authentication information in the authentication.</p>
<p id="p-0526" num="0525">Then, a confidential page is read from the memory cell array <b>11</b>.</p>
<p id="h-0074" num="0000">(Step S<b>95</b>)</p>
<p id="p-0527" num="0526">Subsequently, the read result is stored in the data cache DC_B.</p>
<p id="h-0075" num="0000">(Step S<b>96</b>)</p>
<p id="p-0528" num="0527">Subsequently, an operation of the authentication process described in the above embodiments is performed between data stored in the data cache DC_A and the data cache DC_B by using the operator (authentication circuit <b>17</b>).</p>
<p id="h-0076" num="0000">(Step S<b>97</b>)</p>
<p id="p-0529" num="0528">Subsequently, the operation result is stored in the data cache DC_B.</p>
<p id="h-0077" num="0000">(Step S<b>98</b>)</p>
<p id="p-0530" num="0529">Subsequently, the operation result of the host held in the data cache DC_A is verified against the operation result of NAND held in the data cache DC_B.</p>
<p id="h-0078" num="0000">(Step S<b>99</b>)</p>
<p id="p-0531" num="0530">Subsequently, if matching of the verification result is confirmed in the verification in step S<b>98</b>, control parameters (<b>890</b>) are updated.</p>
<p id="h-0079" num="0000">(Step S<b>100</b>)</p>
<p id="p-0532" num="0531">Subsequently, the NAND flash memory <b>10</b> resets information of all the data caches DC_A to DC_C. If the operation heretofore is completed, the NAND flash memory <b>10</b> exits the sequence to become ready.</p>
<p id="h-0080" num="0000">(Step S<b>101</b>)</p>
<p id="p-0533" num="0532">Subsequently, the host device <b>20</b> obtains the verification result read out of the NAND chip <b>10</b> by using a command to confirm the verification result.</p>
<p id="p-0534" num="0533">&#x3c;Inspection Method of Hidden Information&#x3e;</p>
<p id="p-0535" num="0534">Next, the inspection method of hidden information will be described.</p>
<p id="p-0536" num="0535">Inspection Flow</p>
<p id="p-0537" num="0536">The process related to the authentication method in the process from completion of silicon chip in the factory to shipment of the NAND flash memory <b>10</b> will be shown along <figref idref="DRAWINGS">FIG. 34</figref>.</p>
<p id="p-0538" num="0537">As shown in <figref idref="DRAWINGS">FIG. 34</figref>, the process proceeds in the order of the manufacturing process, test, hidden data writing, and shipment.</p>
<p id="h-0081" num="0000">(Steps S<b>71</b>, S<b>72</b>)</p>
<p id="p-0539" num="0538">First, when the manufacturing process of silicon chip is completed, a predetermined inspection test is performed to select the conforming chip <b>10</b> from the wafer.</p>
<p id="h-0082" num="0000">(Step S<b>73</b>)</p>
<p id="p-0540" num="0539">Subsequently, after the normal test process in step S<b>72</b> is completed, the process of writing hidden data is executed and a test needs to be performed to check whether the hidden data has been written correctly.</p>
<p id="p-0541" num="0540">On the other hand, hidden data cannot be directly read from the hidden block <b>11</b>-<b>2</b>. This is because the read function could become a security hole.</p>
<p id="h-0083" num="0000">(Step S<b>74</b>)</p>
<p id="p-0542" num="0541">Subsequently, the NAND flash memory <b>10</b> with hidden data written correctly is shipped.</p>
<p id="p-0543" num="0542">Indirect read inspection flow of hidden information</p>
<p id="p-0544" num="0543">In step S<b>73</b>, hidden data cannot be directly read from the hidden block <b>11</b>-<b>2</b> from the viewpoint of possibly becoming a security hole.</p>
<p id="p-0545" num="0544">Thus, a flow of checking recorded data without providing the direct data reading function will be described along <figref idref="DRAWINGS">FIG. 35</figref>.</p>
<p id="h-0084" num="0000">(Step S<b>111</b>)</p>
<p id="p-0546" num="0545">First, hidden information (NKey and the like) is read from the hidden block <b>11</b>-<b>2</b> of the memory cell array <b>11</b>.</p>
<p id="h-0085" num="0000">(Step S<b>112</b>)</p>
<p id="p-0547" num="0546">Subsequently, the reading result of the read hidden information (NKey and the like) is stored in the data cache DC_B.</p>
<p id="h-0086" num="0000">(Step S<b>113</b>)</p>
<p id="p-0548" num="0547">Subsequently, the data cache DC_A is caused to store the same hidden information (NKey and the like) from outside the NAND flash memory <b>10</b>.</p>
<p id="h-0087" num="0000">(Step S<b>114</b>)</p>
<p id="p-0549" num="0548">Subsequently, an exclusive OR of the data in the data cache DC_A and the data in the data cache DC_B is calculated by using the operator (authentication circuit <b>17</b>).</p>
<p id="h-0088" num="0000">(Step S<b>115</b>)</p>
<p id="p-0550" num="0549">Subsequently, the result of the exclusive OR is stored in the data cache DC_C.</p>
<p id="h-0089" num="0000">(Step S<b>116</b>)</p>
<p id="p-0551" num="0550">Subsequently, data in the data cache DC_C is sensed.</p>
<p id="h-0090" num="0000">(Step S<b>117</b>)</p>
<p id="p-0552" num="0551">At this point, if the data in the data cache DC_A and the data in the data cache DC_B match (Yes), the test is passed (OK). On the other hand, if both pieces of data mismatch (No), the test fails.</p>
<p id="p-0553" num="0552">More specifically, the data cache DC_C contains the result of the exclusive OR and thus, if the data (all of the bits) in the data cache DC_C is all &#x201c;0&#x201d; (Yes), the test is passed (OK). On the other hand, if the data in the data cache DC_C is &#x201c;1&#x201d; (No), the test fails.</p>
<p id="p-0554" num="0553">First, whether the data in the data cache DC_C is all &#x201c;0&#x201d; is sensed. If all bits are &#x201c;0&#x201d; (Yes), the test is passed. Otherwise (No), the test proceeds to step S<b>118</b>.</p>
<p id="h-0091" num="0000">(Step S<b>118</b>)</p>
<p id="p-0555" num="0554">Subsequently, if all bits are not &#x201c;0&#x201d; (No), the number of &#x201c;1&#x201d; is counted. If the number of &#x201c;1&#x201d; is equal to a specified number or less (Yes), the test is passed because errors are determined to be correctable by a majority vote error correction or correcting code (OK). On the other hand, if the number of &#x201c;1&#x201d; is equal to the specified number or more (No), the test fails (NG).</p>
<p id="p-0556" num="0555">Also a method of controlling access to the hidden block <b>11</b>-<b>2</b> based on second hidden information is possible by separately holding the hard-wired second hidden information in the NAND flash memory <b>10</b> instead of the hidden information recorded in the hidden block <b>11</b>-<b>2</b> by using the method using the authentication for access control to a specific block described in the above embodiment. In this case, not only data reading, but also data writing and data erasure may be controlled by the authentication based on the second hidden information.</p>
<p id="p-0557" num="0556">&#x3c;Advantageous Effects&#x3e;</p>
<p id="p-0558" num="0557">According to the authenticator, authenticatee and authentication method according to the sixth embodiment, at least the advantageous effects (1) to (5) similar to those described above can be obtained.</p>
<p id="p-0559" num="0558">Further, in the present embodiment, when the hidden block <b>11</b>-<b>2</b> is accessed, data sensed from the memory cell array <b>11</b> is locked in the other data caches DC_B, DC_C than the data cache DC_A to prevent the data from being output to revoke the register read command so that the command does not work. On the other hand, if the accessed block is not the hidden block <b>11</b>-<b>2</b>, data is read as usual by using the data cache DC_A.</p>
<p id="p-0560" num="0559">Thus, according to the above configuration, the plurality of data caches DC_A to DC_C is provided and the authentication process is executed by using the data caches DC_B, DC_C that cannot be accessed by a user from outside. Thus, when hidden information (NKey, SecretID and the like) is used for the authentication process, hidden information such as key information (NKey) can advantageously be prevented from being unlawfully read from outside.</p>
<p id="p-0561" num="0560">In addition, as shown in steps S<b>88</b>, S<b>100</b> above, hidden information such as key information in the data caches DC_A to DC_C is all erased before returning from the busy state to the ready state. Thus, safety can be ensured.</p>
<heading id="h-0092" level="1">Seventh Embodiment</heading>
<heading id="h-0093" level="1">Example of Command Mapping</heading>
<p id="p-0562" num="0561">A seventh embodiment relates to an example of command mapping. In the description, overlapping points with the above embodiments will be omitted.</p>
<p id="p-0563" num="0562">&#x3c;Example of Command Mapping Compatible with the Read/Write Commands&#x3e;</p>
<p id="p-0564" num="0563">A NAND flash memory <b>10</b> specifies the block to be read and the page address by, for example, a command sequence of &#x201c;00h&#x201d;-&#x201c;Address&#x201d;-&#x201c;30h&#x201d; as a command for reading. The address portion shows frequently a block address, page address, or byte position in the specific page. Input data in the column address portion may be ignored or may be used for setting a byte pointer after page reading to read data positioned from the byte position corresponding to the byte pointer. After the command 30h is input, the NAND flash memory <b>10</b> is in a busy state for reading and changes to a ready state after reading is completed. After the transition to the ready state, data output (Dout) is enabled and data can be read by providing a signal RE or DQS. To change the byte position in a read page, the column address corresponding to the byte position to be read is set by using a command sequence of &#x201c;05h&#x201d;-&#x201c;Address&#x201d;-&#x201c;E0h&#x201d;.</p>
<p id="p-0565" num="0564">A command sequence of &#x201c;80h&#x201d;-&#x201c;Address&#x201d;-&#x201c;Input Data&#x201d;-&#x201c;10h&#x201d; is used for data writing (recording) to specify the block and page to be written into. The address portion shows frequently a block address, page address, or byte position in the specific page. Input data for the column address portion may be ignored or may be used for setting a byte pointer for page write data input to input write data positioned from the byte position corresponding to the byte pointer. After the command 10h is input, the NAND flash memory <b>10</b> is in a busy state for writing and changes to a ready state after writing is completed.</p>
<p id="p-0566" num="0565">The above is a command system widely used by the NAND flash memory <b>10</b>. When implementing the authentication function according to the above embodiments, providing commonality of command sequences as much as possible is preferable from the viewpoint of minimizing the packaging area of a circuit. However, the authentication function is used in fields in which security is required and thus, there is also a point of view that limiting function users is more desirable.</p>
<p id="p-0567" num="0566">Thus, <figref idref="DRAWINGS">FIGS. 36A and 36B</figref> show a command mapping example compatible with the above read and write commands of the NAND flash memory <b>10</b> in consideration of the above points of view.</p>
<p id="p-0568" num="0567">The command mapping example is different from the above general command sequence in that the input command of Security Prefix is attached prior to the command. Security Prefix configured by a single byte and by a plurality of bytes can be considered. The command Security Prefix is disclosed to only those users who need the authentication function. From the viewpoint of user management, it is desirable to configure the command Security Prefix by a plurality of bytes.</p>
<p id="p-0569" num="0568">As shown in <figref idref="DRAWINGS">FIG. 36A</figref>, like a data read command sequence, the block address and the page address to be read are specified by sequentially inputting &#x201c;command Security Prefix&#x201d;-&#x201c;command 00h&#x201d;-&#x201c;address ADD&#x201d;-&#x201c;command 30h&#x201d; into the IO terminal. The value set to Address may further be made a special value for user management or an internally ignored value.</p>
<p id="p-0570" num="0569">Subsequently, after the command 30h is input, the NAND flash memory <b>10</b> is in a busy state for reading and changes to a ready state after reading is completed. After the transition to the ready state, data output (Dout) is enabled and data such as index information i, v, unique encrypted secret identification information (E-SecretID), and commonly attached key management information (FKB) can be read by supplying a signal RE, DQS or the like.</p>
<p id="p-0571" num="0570">As shown in <figref idref="DRAWINGS">FIG. 36B</figref>, like a data write command sequence, target data is input by sequentially inputting &#x201c;command Security Prefix&#x201d;-&#x201c;command 80h&#x201d;-&#x201c;address ADD&#x201d;-&#x201c;data Din (32B)&#x201d;-&#x201c;command 10h&#x201d; into the terminal. The value set to Address may further be made a special value for user management or an internally ignored value. The present sequence has a lot in common with a write sequence, but actually data writing into a cell array is not needed and the present sequence is used for input of data needed by the NAND flash memory <b>10</b> for calculation in the authentication process. Examples of data needed for calculation in the authentication process include unique information HCl of the host device <b>20</b> and a random number.</p>
<p id="p-0572" num="0571">Subsequently, the NAND flash memory <b>10</b> is in a busy state until the calculation of the authentication process is completed and then changes to a ready state after the calculation is completed and security data in the data caches DC_A to DC_C is all cleared.</p>
<p id="p-0573" num="0572">As shown in <figref idref="DRAWINGS">FIG. 36B</figref>, after the transition to the ready state, the host device <b>20</b> can acquire the result by sequentially inputting &#x201c;command 05h&#x201d;-&#x201c;address ADD&#x201d;-&#x201c;command E0h&#x201d; into the IO terminal and specifying the column address where the calculation result of the authentication process is held. Oneway-ID can be cited as an example of the calculation result of the authentication process.</p>
<p id="p-0574" num="0573">&#x3c;Example of Command Mapping Compatible with the Set/Get Feature Commands&#x3e;</p>
<p id="p-0575" num="0574">Next, another example of the command configuration of the NAND flash memory <b>10</b> to which the present authentication function is applied will be shown by using <figref idref="DRAWINGS">FIGS. 37A and 37B</figref>.</p>
<p id="p-0576" num="0575">The NAND flash memory <b>10</b> has a command called &#x201c;Set Feature&#x201d; to enable the function of the memory <b>10</b> and a command called &#x201c;Get Feature&#x201d; to read an enabled/disabled state for the function of the memory <b>10</b>. These commands are used, for example, to enable input of /RE, /WE, and /DQS, which are complementary signals for high-speed data transfer.</p>
<p id="p-0577" num="0576">The function of &#x201c;Set Feature&#x201d; is set by inputting a command sequence of &#x201c;EEh&#x201d;-&#x201c;Address&#x201d;-&#x201c;Data input&#x201d;. The function number is set to &#x201c;Address&#x201d; and parameters of the function indicated by the function number are input into &#x201c;Data input&#x201d;. Then, a busy period to enable the function comes and with the function being enabled, a transition to a ready state occurs.</p>
<p id="p-0578" num="0577">&#x201c;Get Feature&#x201d; reads an enabled/disabled state of the function by inputting a command sequence of &#x201c;EFh&#x201d;-&#x201c;Address&#x201d;-&#x201c;Data output&#x201d;. The function number is set to &#x201c;Address&#x201d; and parameters of the function indicated by the function number are output to &#x201c;Data output&#x201d;. A busy period exists between Address and Data output to internally read set parameters.</p>
<p id="p-0579" num="0578">The present embodiment is an example of the command sequence diverting these Set Feature and Get Feature.</p>
<p id="p-0580" num="0579">As shown in <figref idref="DRAWINGS">FIG. 37A</figref>, the command sequence is like the above case, but &#x201c;Address&#x201d; to be specified is different. &#x201c;Address&#x201d; may be a single byte and a plurality of bytes. &#x201c;Address&#x201d; is disclosed to only those users who need the authentication function. From the viewpoint of user management, it is desirable to configure &#x201c;Address&#x201d; by a plurality of bytes. Examples of &#x201c;Data output&#x201d; and &#x201c;Data input&#x201d; include, like those shown in <figref idref="DRAWINGS">FIGS. 37A and 37B</figref> above, index information i, v.</p>
<p id="p-0581" num="0580">As shown in <figref idref="DRAWINGS">FIG. 37B</figref>, the command sequence of &#x201c;EEh&#x201d;-&#x201c;address ADD&#x201d;-&#x201c;data Din&#x201d; for data input induces execution of the authentication process at the same time and the NAND flash memory <b>10</b> performs a calculation of the authentication process in the busy period.</p>
<p id="p-0582" num="0581">Subsequently, after the calculation is completed and security data is cleared from the data caches, the NAND flash memory <b>10</b> changes to a ready state. After the transition to the ready state, the host device <b>20</b> can read Oneway-ID.</p>
<p id="p-0583" num="0582">&#x3c;Advantageous Effects&#x3e;</p>
<p id="p-0584" num="0583">According to the authenticator, authenticatee and authentication method according to the seventh embodiment, at least the advantageous effects (1) to (5) similar to those described above can be obtained.</p>
<p id="p-0585" num="0584">Further in the present embodiment, as shown in <figref idref="DRAWINGS">FIGS. 36A and 36B</figref>, commonality with the command sequence of the NAND flash memory <b>10</b> can be provided as much as possible. Thus, the packaging area of a circuit can be minimized while taking security into consideration, which is more effective in implementing the authentication function according to the above embodiments.</p>
<p id="p-0586" num="0585">Also as shown in <figref idref="DRAWINGS">FIGS. 37A and 37B</figref>, the command called &#x201c;Set Feature&#x201d; to enable the function of the memory <b>10</b> and the command called &#x201c;Get Feature&#x201d; to read the enabled/disabled state of the function of the memory <b>10</b> can also be made common and applied if necessary.</p>
<p id="p-0587" num="0586">Clearing all data of the data caches DC_A to DC_C in the timing before returning from the busy state to the ready state is the same as the above case.</p>
<heading id="h-0094" level="1">Eighth Embodiment</heading>
<heading id="h-0095" level="1">Application Example to a Memory Card, Content Protection, and HDD</heading>
<p id="p-0588" num="0587">An eighth embodiment relates to an application example to a memory card, content protection, and HDD. In the description, overlapping points with the above embodiments will be omitted.</p>
<p id="p-0589" num="0588">Application Example to a Memory Card</p>
<p id="p-0590" num="0589">A configuration example of a memory card including a NAND flash memory <b>10</b> to which the present authentication function is applied will be shown by using <figref idref="DRAWINGS">FIG. 38</figref>.</p>
<p id="p-0591" num="0590">As shown in <figref idref="DRAWINGS">FIG. 38</figref>, a controller <b>19</b> is embedded in a memory card <b>55</b>. The controller <b>19</b> includes a function to control the operation of the NAND flash memory <b>10</b>, a function to control the interface with a host device <b>20</b>, and the like.</p>
<p id="p-0592" num="0591">At least one of a plurality of NAND flash memory chips <b>10</b> (MCP<b>1</b>), (MCP<b>2</b>) stacked in a NAND package is included in the memory card <b>55</b>. At least one NAND flash memory chip <b>10</b> in the NAND package needs to have the authentication function and the function to be authenticated according to at least one of the above embodiments. In other words, all the NAND flash memory chips <b>10</b> in the NAND package do not have to have the authentication function and the function to be authenticated according to the above embodiment. Further, all NAND packages mounted on the memory card <b>55</b> do not have to have the authentication function and the function to be authenticated according to at least one of the above embodiments. For the clarification, the NAND flash memory <b>10</b> in the present embodiment may be referred to as a NAND package or a NAND flash memory chip.</p>
<p id="p-0593" num="0592">The controller <b>19</b> in the memory card <b>55</b> has a function to control the authentication function and the function to be authenticated according to at least one of the above embodiments via a NAND interface in the NAND package. The function of the controller <b>19</b> may be a function to control the authentication function and the function to be authenticated of one of a plurality of NAND packages or a function to control the authentication function and the function to be authenticated of each of the plurality of NAND packages. Further, the function of the controller <b>19</b> may be a function to control the authentication function and the function to be authenticated of one of the NAND flash memory chips <b>10</b> in the NAND package or a function to control the authentication function and the function to be authenticated of each of the NAND flash memory chips <b>10</b> in the NAND package.</p>
<p id="p-0594" num="0593">First Application Example to Content Protection</p>
<p id="p-0595" num="0594">A first application example to content protection of the memory card <b>55</b> including the NAND flash memory <b>10</b> to which the authentication function is applied will be shown by using <figref idref="DRAWINGS">FIG. 39</figref>. For the sake of simplicity, content described herein heretofore will not be described below.</p>
<p id="p-0596" num="0595">The controller <b>19</b> and NAND packages (MCP<b>1</b>), (MCP<b>2</b>) are embedded in the memory card <b>55</b>. The NAND packages (MCP<b>1</b>), (MCP<b>2</b>) have the authentication function and the function to be authenticated according to at least one of the above embodiments.</p>
<p id="p-0597" num="0596">The host device <b>20</b> verifies the authenticity of secret identification information SecretID of the NAND packages (MCP<b>1</b>), (MCP<b>2</b>) of the NAND flash memory <b>10</b> by the authentication process shown in at least one of the above embodiments.</p>
<p id="p-0598" num="0597">After the authenticity is verified, the host device <b>20</b> executes the calculation process of EMID by using the method described in the second embodiment based on the secret identification information SecretID.</p>
<p id="p-0599" num="0598">The NAND package (MCP<b>2</b>) generates binding data (labeled with &#x201c;Binding Data in <figref idref="DRAWINGS">FIG. 39</figref>) to associate EMID and content (labeled with &#x201c;Content&#x201d; in <figref idref="DRAWINGS">FIG. 39</figref>) when the content is written. Binding Data desirably contains data on the key to encrypt/decrypt content. Binding Data is recorded in one of the NAND packages (MCP<b>1</b>), (MCP<b>2</b>) mounted on the card <b>55</b>. The NAND package in which Binding Data is recorded may be the NAND package (MCP<b>1</b>) having secret identification information SecretID used for the authentication process or the other NAND package (MCP<b>2</b>). <figref idref="DRAWINGS">FIG. 39</figref> shows the latter example, but the arrangement of Binding Data is not limited to this example. The recording position of content may be similarly in any NAND package.</p>
<p id="p-0600" num="0599">The relationship between the content and EMID is calculated and verified, and the content is reproduced only if the relationship is verified. The EMID is obtained by the authentication process of SecretID and the binding data which associates EMID and content.</p>
<p id="p-0601" num="0600">With the above configuration, content (Content) is associated with SecretID. Thus, an effect of invalidating reproduction of content can advantageously be achieved even if content or Binding Data is unlawfully copied to another memory card that does not have the same SecretID.</p>
<p id="p-0602" num="0601">First Application Example to HDD</p>
<p id="p-0603" num="0602">A First example of a configuration of a hard disk drive (HDD) using the NAND flash memory <b>10</b> to which the present authentication function is applied will be shown by using <figref idref="DRAWINGS">FIG. 40</figref>.</p>
<p id="p-0604" num="0603">As shown in <figref idref="DRAWINGS">FIG. 40</figref>, at least one NAND package (MCP<b>1</b>) is embedded in an HDD package <b>200</b>, and at least one NAND package has the authentication function and the function to be authenticated according to at least one of the above embodiments.</p>
<p id="p-0605" num="0604">At least one HDD <b>210</b> is embedded in the HDD package <b>200</b>.</p>
<p id="p-0606" num="0605">Further, a bridge controller <b>190</b> to control the NAND package (MCP<b>1</b>), control the HDD <b>210</b>, and control the interface with the host device is embedded. The bridge controller <b>190</b> may be configured by a single integrated circuit or a plurality of integrated circuits. The function may also be realized by combining an integrated circuit and firmware.</p>
<p id="p-0607" num="0606">The authentication function and the function to be authenticated in the NAND package (MCP<b>1</b>) are provided to the HDD <b>210</b> as a host device via the bridge controller <b>190</b>.</p>
<p id="p-0608" num="0607">Second Application Example to HDD</p>
<p id="p-0609" num="0608">Another configuration example of the hard disk drive (HDD) using the NAND flash memory <b>10</b> to which the present authentication function is applied will be shown by using <figref idref="DRAWINGS">FIG. 41</figref>.</p>
<p id="p-0610" num="0609">As shown in <figref idref="DRAWINGS">FIG. 41</figref>, the HDD package <b>200</b> includes a memory card socket <b>550</b> to connect the memory card <b>55</b> described above by using <figref idref="DRAWINGS">FIG. 38</figref>.</p>
<p id="p-0611" num="0610">At least one HDD <b>210</b> is embedded in the HDD package <b>200</b>. Further, the bridge controller <b>190</b> to control the memory card <b>55</b>, control the HDD <b>210</b>, and control the interface with the host device is embedded. The bridge controller <b>190</b> may be configured by a single integrated circuit or a plurality of integrated circuits. The function may also be realized by combining an integrated circuit and firmware.</p>
<p id="p-0612" num="0611">The authentication function and the function to be authenticated in the memory card <b>55</b> are provided to the HDD <b>210</b> as a host device via the bridge controller <b>190</b>.</p>
<p id="p-0613" num="0612">Second Application Example to Content Protection</p>
<p id="p-0614" num="0613"><figref idref="DRAWINGS">FIG. 42</figref> shows an application example of the hard disk drive (HDD) using the NAND flash memory <b>10</b> to which the present authentication function is applied to content protection. The present embodiment takes the HDD configuration shown in <figref idref="DRAWINGS">FIG. 41</figref> as an example, but is also applicable to the HDD configuration shown in <figref idref="DRAWINGS">FIG. 40</figref>.</p>
<p id="p-0615" num="0614">As shown in <figref idref="DRAWINGS">FIG. 42</figref>, bridge controllers <b>190</b>A, <b>190</b>B, memory card sockets <b>550</b>A, <b>550</b>B, and HDD <b>210</b>A, <b>210</b>B are embedded in HDD packages <b>200</b>A, <b>200</b>B, respectively.</p>
<p id="p-0616" num="0615">The memory card <b>55</b> includes the authentication function and the function to be authenticated according to at least one of the above embodiments. The host device <b>20</b> verifies the authenticity of SecretID of the NAND flash memory <b>10</b> by the authentication process shown in the above embodiments. After the authenticity is verified, the host device <b>20</b> executes the calculation process of EMID by using the method shown in the second embodiment based on the secret identification information SecretID.</p>
<p id="p-0617" num="0616">Binding Data to associate EMID and content (Content) is generated when the content is written. Binding Data desirably contains data on the key to encrypt/decrypt content. Binding Data is recorded in one of the memory card <b>55</b> and the HDD <b>210</b>A, <b>210</b>B. An example in which Binding Data is recorded in the HDD <b>210</b>A, <b>210</b>B is shown, but the arrangement of Binding Data is not limited to this example. The recording position of content may be similarly in the memory card <b>55</b> or the HDD <b>210</b>A, <b>210</b>B.</p>
<p id="p-0618" num="0617">The relationship between the content and EMID is calculated and verified, and the content is reproduced only if the relationship is verified. The EMID is obtained by the authentication process of SecretID and the binding data which associates EMID and content.</p>
<p id="p-0619" num="0618">The present embodiment is an example of using the authentication function and the function to be authenticated included in the NAND flash memory <b>10</b> in the memory card <b>55</b> via the card socket <b>550</b>A, but is also applicable to a configuration in which the NAND packages are directly embedded in the HDD shown in <figref idref="DRAWINGS">FIG. 40</figref> and the HDD directly control the NAND packages. In this case, the memory card may be replaced by the NAND package.</p>
<p id="p-0620" num="0619">Further, as an application example applicable to an HDD having the card sockets <b>550</b>A, <b>550</b>B, if a plurality of similar HDD packages exists, content recorded in any HDD can be reproduced only by moving the card after content and Binding Data being copied to both HDD packages. Binding Data may be recorded in the card, instead of the HDD, or in both.</p>
<p id="p-0621" num="0620">With the present configuration, content (Content) is associated with the memory card <b>55</b> or SecretID in a NAND package and thus, an effect of invalidating reproduction of content can be achieved even if content or Binding Data is unlawfully copied to the memory card <b>55</b> that does not have the same SecretID.</p>
<p id="p-0622" num="0621">Further, in the example in which an HDD package includes a memory socket shown in <figref idref="DRAWINGS">FIG. 41</figref>, the content recorded in a plurality of HDD can be reproduced only by moving a memory card. This is advantageous in terms of portability because an HDD has a large cabinet and may be installed for stationary use compared with a memory card.</p>
<p id="p-0623" num="0622">Third Application Example to Content Protection</p>
<p id="p-0624" num="0623">A third application example of the hard disk drive (HDD) using the NAND flash memory <b>10</b> to which the present authentication function is applied will be described by using <figref idref="DRAWINGS">FIG. 43</figref>. The present embodiment is an example in which the host device <b>20</b> includes the memory card socket <b>550</b> and uses the external HDD <b>210</b>.</p>
<p id="p-0625" num="0624">As shown in <figref idref="DRAWINGS">FIG. 43</figref>, The bridge controller <b>190</b> and the HDD <b>210</b> are embedded in the HDD package <b>200</b>.</p>
<p id="p-0626" num="0625">The card control function and the authentication function included in the memory card <b>55</b> inserted into the memory card socket <b>550</b> are embedded in the host device <b>20</b>. An NAND package having the authentication function and the function to be authenticated according to at least one of the above embodiments is embedded in the memory card <b>55</b>.</p>
<p id="p-0627" num="0626">In the above configuration, the host device <b>20</b> verifies the authenticity of SecretID of the NAND flash memory <b>10</b> by the authentication process shown in at least one of the above embodiments.</p>
<p id="p-0628" num="0627">After the authenticity is verified, the host device <b>20</b> executes the calculation process of EMID by using the method according to the second embodiment based on the secret identification information SecretID.</p>
<p id="p-0629" num="0628">Binding Data to associate EMID and content (Content) is generated when the content is written. Binding Data desirably contains data on the key to encrypt/decrypt content. Binding Data is recorded in one of the memory card <b>55</b> and the HDD <b>210</b>. The latter example is shown here, but the arrangement of Binding Data is not limited to this example. The recording position of content may be similarly in the memory card <b>55</b> or the HDD <b>210</b>.</p>
<p id="p-0630" num="0629">The relationship between the content and EMID is calculated and verified, and the content is reproduced only if the relationship is verified. The EMID is obtained by the authentication process of SecretID and the binding data which associates EMID and content.</p>
<p id="p-0631" num="0630">The present embodiment is an example of using the authentication function and the function to be authenticated included in the NAND flash memory <b>10</b> in the memory card <b>55</b> via the card socket <b>550</b>, but is also applicable to a configuration in which the NAND packages are directly embedded in the host device <b>20</b> and the host device <b>20</b> directly controls the NAND packages. In this case, the memory card <b>55</b> may be replaced by the NAND package.</p>
<p id="p-0632" num="0631">Further, as an application example applicable to the host device <b>20</b> having the card socket <b>550</b>, if a plurality of the similar host devices <b>20</b> exists, content can be reproduced by any of the host devices <b>20</b> by connecting the memory card <b>55</b> and the HDD package <b>200</b> to the other host device <b>20</b>. Content and Binding Data may be recorded in the card <b>55</b>, instead of the HDD <b>210</b>, or in both.</p>
<p id="p-0633" num="0632">With the present configuration, content is associated with the memory card <b>55</b> or SecretID in a NAND package and thus, an effect of invalidating reproduction of content can be achieved even if content or Binding Data is unlawfully copied to the memory card that does not have the same SecretID. Further, the content can be reproduced by a plurality of host devices by moving the memory card <b>55</b> and the HDD <b>210</b>.</p>
<p id="p-0634" num="0633">Fourth Application Example to Content Protection</p>
<p id="p-0635" num="0634">An fourth application example of the hard disk drive (HDD) using the NAND flash memory <b>10</b> to which the present authentication function is applied will be described by using <figref idref="DRAWINGS">FIG. 44</figref>. The present embodiment is an example in which the host device <b>20</b> includes the memory card socket <b>550</b> and further uses the built-in HDD <b>210</b>.</p>
<p id="p-0636" num="0635">As shown in <figref idref="DRAWINGS">FIG. 44</figref>, the bridge controller <b>190</b> and the HDD <b>210</b> are embedded in the HDD package <b>200</b>.</p>
<p id="p-0637" num="0636">The card control function and the authentication function included in the memory card <b>55</b> inserted into the memory card socket <b>550</b> are embedded in the host device <b>20</b>. An NAND package having the authentication function and the function to be authenticated according to at least one of the above embodiments is mounted on the memory card <b>55</b>.</p>
<p id="p-0638" num="0637">In the above configuration, the host device <b>20</b> verifies the authenticity of SecretID of the NAND flash memory <b>10</b> by the authentication process shown in at least one of the above embodiments.</p>
<p id="p-0639" num="0638">After the authenticity is verified, the host device <b>20</b> executes the calculation process of EMID by using the method according to the second embodiment based on the SecretID.</p>
<p id="p-0640" num="0639">Binding Data to associate EMID and content (Content) is generated when the content is written. Binding Data desirably contains data on the key to encrypt/decrypt content. Binding Data is recorded in one of the memory card <b>55</b> and the HDD <b>210</b>. The latter example is shown here, but the arrangement of Binding Data is not limited to this example. The recording position of content is similarly in the memory card <b>55</b> or the HDD <b>210</b>.</p>
<p id="p-0641" num="0640">The relationship between the content and EMID is calculated and verified, and the content is reproduced only if the relationship is verified. The EMID is obtained by the authentication process of SecretID and the binding data which associates EMID and content.</p>
<p id="p-0642" num="0641">The present embodiment is an example of using the authentication function and the function to be authenticated included in the NAND flash memory <b>10</b> in the memory card <b>55</b> via the card socket <b>550</b>, but is also applicable to a configuration in which the NAND packages are directly embedded in the host device <b>20</b>, and the host device <b>20</b> directly controls the NAND packages. In this case, the memory card <b>55</b> may be replaced by the NAND package.</p>
<p id="p-0643" num="0642">Further, as an application example applicable to the host device <b>20</b> having the card socket <b>550</b>, if a plurality of the similar host devices <b>20</b> exists, content can be reproduced by any of the host devices <b>20</b> by connecting the memory card <b>55</b> and the HDD package <b>200</b> to the other host device <b>20</b>. Content and Binding Data may be recorded in the card <b>55</b>, instead of the HDD <b>210</b>, or in both.</p>
<p id="p-0644" num="0643">With the present configuration, content is associated with the memory card <b>55</b> or SecretID in a NAND package and thus, an effect of invalidating reproduction of content can be achieved even if content or Binding Data is unlawfully copied to the memory card that does not have the same SecretID. Further, content can be reproduced by a plurality of host devices by moving the memory card <b>55</b> and the HDD <b>210</b>.</p>
<p id="p-0645" num="0644">[Second Modification (Another Example of Using the Data Caches)]</p>
<p id="p-0646" num="0645">A second modification relates to another configuration example of using the data caches described in the sixth embodiment for the authentication process. In the description, overlapping points with the above embodiments will be omitted.</p>
<p id="p-0647" num="0646">&#x3c;Configuration Example of the Sense Amplifier and the Peripheral Circuit Thereof&#x3e;</p>
<p id="p-0648" num="0647">A configuration example of the sense amplifier and the peripheral circuit thereof is shown as in <figref idref="DRAWINGS">FIG. 45</figref>. In the second modification, as shown in <figref idref="DRAWINGS">FIG. 45</figref>, data cache <b>12</b> includes data caches (latch circuits) DC_A, DC_B, DC_C, and DC_S and only DC_A is connected to a data line via a column control circuit and is used to exchange data with units outside the chip. DC_S is a latch used to control the operation of the sense amplifier in accordance with data. DC_B, DC_C, and DC_S are connected in parallel with a bus (LBUS) between DC_A and the sense amplifier and used as data caches and it is necessary to exchange data with the outside via DC_A. The column control circuit connects DC_A associated with the column address to a data line. When a NAND flash memory is used for normal operation, the column address supplied by an address control circuit is used, but the address specified by an operator is used when an authentication sequence of the present proposal is performed. Whether to use a normal address or an address of an operator can be switched by a mode switching signal.</p>
<p id="p-0649" num="0648">&#x3c;Equivalent Circuit Example of the Sense Amplifier and Data Caches&#x3e;</p>
<p id="p-0650" num="0649"><figref idref="DRAWINGS">FIG. 46</figref> shows an equivalent circuit example of a sense amplifier <b>77</b> and data caches <b>12</b> in <figref idref="DRAWINGS">FIG. 45</figref>.</p>
<p id="p-0651" num="0650">While certain embodiments have been described, these embodiments have been presented by way of example only, and are not intended to limit the scope of the inventions. Indeed, the novel embodiments described herein may be embodied in a variety of other forms; furthermore, various omissions, substitutions and changes in the form of the embodiments described herein may be made without departing from the spirit of the inventions. The accompanying claims and their equivalents are intended to cover such forms or modifications as would fall within the scope and spirit of the inventions.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A manufacturing method of a memory device to be authenticated, comprising:
<claim-text>storing, by a first vendor, first key and secret identification information unique to the memory device into a first memory area which is prohibited from data-reading and data-writing after shipping from the first vendor, and storing, by the first vendor, encrypted secret identification information generated by encrypting the secret identification information into the second memory area which is allowed to be read from outside after shipping from the first vendor; and</claim-text>
<claim-text>storing, by a second vendor different from the first vendor, a family key block into a third memory area which is allowed to be read and written from outside after shipping from the first vendor, the family key block generating information to allow decryption of the encrypted secret identification information,</claim-text>
<claim-text>wherein the second vendor stores the family keg block into the third memory area by using a controller which mediates between the memory device and an external device, and</claim-text>
<claim-text>when the memory device is authenticated, the first key and the secret identification information are read from the first memory area without using the controller, and the encrypted secret identification information is read from the second memory area and sent to the external device using the controller.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. A manufacturing method of a memory device to be authenticated, comprising:
<claim-text>storing, by a first vendor, first key and secret identification information unique to the memory device into a first memory area which is prohibited from data-reading and data-writing after shipping from the memory vendor, and storing, by the first vendor, encrypted secret identification information generated by encrypting the secret identification information into a second memory area which can be data-read from outside after shipping from the first vendor; and</claim-text>
<claim-text>storing, by a second vendor different from the first vendor, a family key block into a third memory area which can be data-read and data-write from outside after shipping from the first vendor, the family key block generating information to allow decryption of the encrypted secret identification information,</claim-text>
<claim-text>wherein the second vendor stores the family key block into the third memory area by using a controller which mediates between the memory device and an external device, and</claim-text>
<claim-text>when the memory device is authenticated, the first key and the secret identification information are read from the first memory area without using the controller, and the encrypted secret identification information is read from the second memory area and sent to the external device by using the controller.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
