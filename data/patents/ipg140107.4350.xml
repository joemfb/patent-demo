<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625421-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625421</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13366141</doc-number>
<date>20120203</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>129</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>26</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>28</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>370230</main-classification>
<further-classification>370401</further-classification>
</classification-national>
<invention-title id="d2e53">DAD-NS triggered address resolution for DoS attack protection</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6172981</doc-number>
<kind>B1</kind>
<name>Cox et al.</name>
<date>20010100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370401</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2007/0201474</doc-number>
<kind>A1</kind>
<name>Isobe</name>
<date>20070800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370392</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2009/0024758</doc-number>
<kind>A1</kind>
<name>Levy-Abegnoli et al.</name>
<date>20090100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709237</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2010/0128729</doc-number>
<kind>A1</kind>
<name>Yazaki et al.</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370392</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2011/0153722</doc-number>
<kind>A1</kind>
<name>Choudhary et al.</name>
<date>20110600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709203</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00006">
<othercit>Kumari, W., et al., &#x201c;Operational Neighbor Discovery Problems and Enhancements, draft-gashinshky-v6nd-enhance-00,&#x201d; Network Working Group, Jun. 29, 2011, 16 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00007">
<othercit>Halpern, J &#x201c;Mitigating Neighbor Discovery Based Denial of Service Attacks draft-halpern-6man-nddos-mitigation-00,&#x201d; Network Working Group, Oct. 17, 2011, 6 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00008">
<othercit>Gashinsky, I., et al., &#x201c;Operational Neighbor Discovery Problems draft-ietf-v6ops-v6nd-problems-00,&#x201d; v6ops, Oct. 24, 2011 13 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00009">
<othercit>Narten, T., et al., Neighbor Discovery for IP version 6 (IPv6), Network Working Group, Sep. 2007, 98 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>Thomson. S., et al.,&#x201c;IPv6 Stateless Address Autoconfiguration,&#x201d; Network Working Group, Sep. 2007, 30 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00011">
<othercit>P. Nikander et al., &#x201c;IPv6 Neighbor Discovery (ND) Trust Models and Threats,&#x201d; May 2004, 23 pages, Network Working Group, Request for Comments: 3756, The Internet Society.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00012">
<othercit>Z. Shelby et al., &#x201c;Neighbor Discovery Optimization for Low Power and Lossy Networks (6LoWPAN) draft-ietf-6lowpan-nd-18,&#x201d; Oct. 24, 2011, 59 pages, 6LoWPAN Working Group, Internet-Draft, IETF Trust and the persons identified as the document authors.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>15</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>370230</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370254</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370255</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370389</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370392</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370401</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>5</number-of-drawing-sheets>
<number-of-figures>5</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20130201874</doc-number>
<kind>A1</kind>
<date>20130808</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Chen</last-name>
<first-name>Ing-Wher</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Chen</last-name>
<first-name>Ing-Wher</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Blakely Sokoloff Taylor &#x26; Zafman, LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Telefonaktiebolaget L M Ericsson (Publ)</orgname>
<role>03</role>
<address>
<city>Stockholm</city>
<country>SE</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Cho</last-name>
<first-name>Hong</first-name>
<department>2467</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A first network element that receives an appropriation message from a second network element that indicates a target address which the second network element intends to appropriate for its use. In response to the appropriation message, the first network element broadcasts a discovery message to a plurality of network elements on the network to request a link-layer address in association with the first target address. The first network element receives a discovery response from the second network element with the first target address and the link-layer address of the second network element. Then the first network element updates a neighbor cache to include a pre-cached neighbor cache entry associating the link-layer address to the first target address. This prevents one or more future neighbor cache misses associated with the first target address.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="201.51mm" wi="111.59mm" file="US08625421-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="215.90mm" wi="158.92mm" file="US08625421-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="215.90mm" wi="156.04mm" file="US08625421-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="215.90mm" wi="144.10mm" file="US08625421-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="215.90mm" wi="154.01mm" orientation="landscape" file="US08625421-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="215.90mm" wi="143.17mm" orientation="landscape" file="US08625421-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD</heading>
<p id="p-0002" num="0001">Embodiments of the invention relate to the field of computer networking; and, more specifically, to triggering address resolution in a network utilizing neighbor discovery protocols.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">In Internet Protocol Version 6 (IPv6), techniques are introduced for network elements to discover the presence of other network elements on the same link and corresponding attributes for those network elements. This protocol, known as Neighbor Discovery (ND) for IPv6 (IPv6 ND), enables a network element to discover IPv6 addresses and link layer addresses of its neighbor network elements. Furthermore, techniques introduced in conjunction with IPv6 ND allow a network element to autoconfigure an IP address on an interface and perform Duplicate Address Detection (DAD) prior to utilizing that IP address on the network. The DAD procedure ensures that the autoconfigured IP address is unique, not utilized by another interface on the network.</p>
<p id="p-0004" num="0003">As described in the Internet Engineering Task Force (IETF) standards track Request for Comments (RFC) <i>Neighbor Discovery for IP version </i>6 (<i>IPv</i>6), by T. Narten et al. (September 2007), as a network element uses IPv6 ND to discover its neighbor's attributes, a neighbor cache (NC) is filled with NC entries, keyed on the neighbor's IPv6 address, containing information such as link-layer address, reachability state, and a time to a next Neighbor Unreachability Detection event.</p>
<p id="p-0005" num="0004">As a network element generates, or retransmits, packets destined for a neighbor, the network element looks up the destination's IP address in the NC and utilizes a corresponding entry to determine the link-layer address of the destination. However, the network element may lookup an IP address that is not in the NC, which results in a NC miss. In response to a NC miss, the network element broadcasts a neighbor solicitation (NS) message to request the link-layer address of the destination. Many implementations of the IPv6 ND protocol generate an incomplete, or unresolved, NC entry for the destination while waiting for a response from the destination. The maintenance of a NC can be further explained with reference to existing operations in <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 1</figref> is a flow diagram illustrating prior art operations for handling IPv6 neighbor discovery. In <figref idref="DRAWINGS">FIG. 1</figref>, three network elements are shown as <b>101</b>, <b>103</b>, and <b>104</b>. Network elements <b>103</b> and <b>104</b> are part of a network <b>102</b> while network element <b>101</b> exists outside of network <b>102</b>. Network element <b>103</b> is a network element such as a router, or gateway, between network element <b>101</b> and network element <b>104</b>. As such, packets arriving from network element <b>101</b> that are destined for network element <b>104</b> are relayed by network element <b>103</b>.</p>
<p id="p-0007" num="0006">In <figref idref="DRAWINGS">FIG. 1</figref>, network element <b>104</b> transmits a Neighbor Solicitation message intended for duplicate address detection (a DAD-NS message) at step <b>105</b> that includes a target address (TA) which the network element <b>104</b> intends to assign to its interface with network <b>102</b>. A DAD-NS message is an NS message used to perform duplicate address detection (DAD), and such an NS messages contains a specified (non-zero) target IP address (TA) with an unspecified (zero) source IP address, without the source link-layer address option. It is a broadcast message to other nodes on the network and the specified TA indicates the IP address the network element will be assigning to its interface on that network. Unless the network element receives a neighbor advertisement (NA) message that contains the same TA, indicating another network element is using that address, then the network element may utilize the TA on its interface. In <figref idref="DRAWINGS">FIG. 1</figref>, the TA at step <b>105</b> is noted as 2001::234/128 which is common IPv6 address notation starting with 2001, ending with 234, and containing zeros between as indicated by the double colon. After transmitting the DAD-NS message, network element <b>104</b> waits a period of time to wait for an NA indicating the TA is being used by another node. This is the DAD timer period <b>110</b>. Assuming that an NA is not received for the TA, then the network element <b>104</b> assigns the address 2001::234/128 to its interface in step <b>115</b>.</p>
<p id="p-0008" num="0007">As illustrated in <figref idref="DRAWINGS">FIG. 1</figref>, prior to, during, or after the assigning of the interface address in step <b>115</b>, a packet arrives at network element <b>103</b> destined for the address 2001:234/128 in step <b>120</b>. In response to receiving the packet and determining that it needs to relay that packet to a network element (i.e., node) on its network, network element <b>103</b> checks its NC for an entry matching the address with a corresponding link-layer address. In this instance, the NC does not have this entry as it has not yet been created and thus a NC miss event occurs on address 2001::234/128 at step <b>125</b>. In response to the NC miss event, network element <b>103</b> adds an empty entry, also known as an incomplete entry or unconfirmed entry, into the NC with an IP address of 2001::234/128 in step <b>130</b> and broadcasts an NS message with a target address of 2001::234/128 in step <b>135</b>. Unlike the DAD-NS in <b>105</b>, this NS contains a target address of 2001::234/128 and a source IP address of the interface belonging to network element <b>103</b> in network <b>102</b>, and also contains a source link-layer address of the interface belonging to network element <b>103</b> if the link layer has addresses. In response to the NS message, network element <b>104</b>, assuming it has already performed step <b>115</b>, responds with an NA message indicating its target address of 2001::234/128 and its link-layer address, shown as DE:EB:AA:5F:C4:02, in step <b>140</b>. In response to receiving the NA message from step <b>140</b>, network element <b>103</b> is able to update its NC entry corresponding with the IP address 2001::234/128 to associate the received link-layer address of DE:EB:AA:5F:C4:02 in step <b>145</b>; thereby, associating the IP address and link-layer address to network element <b>104</b>. Using this newly discovered association, the network element <b>103</b> is able to route the packet received at step <b>120</b> to network element <b>104</b> using the link-layer address of DE:EB:AA:5F:C4:02 in step <b>150</b>.</p>
<p id="p-0009" num="0008">Similarly, <figref idref="DRAWINGS">FIG. 1</figref> illustrates that a second packet arrives from network element <b>101</b> at network element <b>103</b> in step <b>155</b>. This packet is destined for the IP address 2001::285/128. In response to receiving the packet and determining that it needs to relay that packet to a network element on its network, network element <b>103</b> checks its NC for an entry matching the IP address with a corresponding link-layer address. In this instance, the NC does not have this entry for address 2001::285/128 and, thus, experiences a NC miss event at step <b>160</b>. In response to the NC miss event, network element <b>103</b> adds an empty entry into the NC with an IP address of 2001::285/128 in step <b>165</b> and broadcasts an NS message with a TA of 2001::285/128 in step <b>170</b>. However, there will be no reply NA message with a TA of 2001::285/128 because there are no network elements with that IP address in network <b>102</b>.</p>
<p id="p-0010" num="0009">Thus, as noted by the Internet Draft <i>Mitigating Neighbor Discovery Based Denial of Service Attacks</i>, by J. Halpern (October 2011), there exists a potential that the NC will be filled with incomplete NC entries for many unresolved neighbors. The draft further asks whether NC misses are necessary. If NC misses can be ignored, then an off-link flooding denial of service (DoS) attack that uses NC misses to kill a router can be neutralized. For example, one technique to eliminate the need for NC misses is to, for each resolved neighbor, the IPv6 ND protocol actively monitors the reachability of that neighbor by extending the lifetime of the neighbor entry for that neighbor through periodic NS messages and retains the neighbor entry in the NC for as long as the neighbor entry's lifetime has not expired.</p>
<p id="p-0011" num="0010">Another potential issue arises when a network element rate limits the NC miss events. In this scenario, many NC miss events may occur but the network element limits the number of acknowledged NC miss events, i.e. limits the number of events to which the network element reacts. As such, the network element may receive legitimate or illegitimate traffic including IP address that are not in the NC. In such a scenario, the network element may react to very few NC miss events to the exclusion of learning the link-layer address of the legitimate traffic.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0012" num="0011">A method performed by a first network element coupled with a plurality of other network elements for pre-filling a neighbor cache in the first network element with a plurality of reachable neighbor cache entries each entry to associate an internet protocol (IP) address with a link-layer address. The first network element receives an appropriation message from a second network element of the plurality of other network element that indicates a first target address which the second network element intends to appropriate for its use. In response to the appropriation message, the first network element broadcasts a discovery message to the plurality of other network elements, wherein the discovery message indicates the first target address and is broadcast to request a link-layer address in association with the first target address. The first network element receives a discovery response from the second network element with the first target address and the link-layer address of the network element. Then the first network element updates the neighbor cache to include a pre-cached neighbor cache entry associating the link-layer address to the first target address, whereby one or more future neighbor cache misses associated with the first target address is prevented.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0013" num="0012">The invention may best be understood by referring to the following description and accompanying drawings that are used to illustrate embodiments of the invention. In the drawings:</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 1</figref> is a flow diagram illustrating prior art operations for handling neighbor discovery,</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 2</figref> is a flow diagram that illustrates exemplary operations for adding entries preemptively to a neighbor cache in response to duplicate address detection neighbor solicitation messages,</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 3</figref> illustrates a flow diagram that illustrates exemplary operations for adding entries preemptively to a neighbor cache in response to address appropriation messages,</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a block diagram of an exemplary first network element coupled with a second network element and a third network element according to embodiments of the invention, and</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 5</figref> illustrates a block diagram of an exemplary computer system according to embodiments of the invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DESCRIPTION OF EMBODIMENTS</heading>
<p id="p-0019" num="0018">In the following description, numerous specific details are set forth. However, it is understood that embodiments of the invention may be practiced without these specific details. In other instances, well-known circuits, structures and techniques have not been shown in detail in order not to obscure the understanding of this description. Those of ordinary skill in the art, with the included descriptions, will be able to implement appropriate functionality without undue experimentation.</p>
<p id="p-0020" num="0019">References in the specification to &#x201c;one embodiment,&#x201d; &#x201c;an embodiment,&#x201d; &#x201c;an example embodiment,&#x201d; etc., indicate that the embodiment described may include a particular feature, structure, or characteristic, but every embodiment may not necessarily include the particular feature, structure, or characteristic. Moreover, such phrases are not necessarily referring to the same embodiment. Further, when a particular feature, structure, or characteristic is described in connection with an embodiment, it is submitted that it is within the knowledge of one skilled in the art to effect such feature, structure, or characteristic in connection with other embodiments whether or not explicitly described.</p>
<p id="p-0021" num="0020">In the following description and claims, the terms &#x201c;coupled&#x201d; and &#x201c;connected,&#x201d; along with their derivatives, may be used. It should be understood that these terms are not intended as synonyms for each other. &#x201c;Coupled&#x201d; is used to indicate that two or more elements, which may or may not be in direct physical or electrical contact with each other, co-operate or interact with each other. &#x201c;Connected&#x201d; is used to indicate the establishment of communication between two or more elements that are coupled with each other.</p>
<p id="p-0022" num="0021">As used herein, a network element (e.g., a router, switch, bridge also referred to as a network device or network node) is a piece of networking equipment, including hardware and software, that communicatively interconnects other equipment on the network (e.g., other network elements, end stations). Some network elements are &#x201c;multiple services network elements&#x201d; that provide support for multiple networking functions (e.g., routing, bridging, switching, Layer 2 aggregation, session border control, Quality of Service, and/or subscriber management), and/or provide support for multiple application services (e.g., data, voice, and video). Subscriber end stations (e.g., servers, workstations, laptops, netbooks, palm tops, mobile phones, smartphones, multimedia phones, Voice Over Internet Protocol (VOIP) phones, user equipment, terminals, portable media players, GPS units, gaming systems, set-top boxes) access content/services provided over the Internet and/or content/services provided on virtual private networks (VPNs) overlaid on (e.g., tunneled through) the Internet. The content and/or services are typically provided by one or more end stations (e.g., server end stations) belonging to a service or content provider or end stations participating in a peer to peer service, and may include, for example, public webpages (e.g., free content, store fronts, search services), private webpages (e.g., username/password accessed webpages providing email services), and/or corporate networks over VPNs. Typically, subscriber end stations are coupled (e.g., through customer premise equipment coupled to an access network (wired or wirelessly)) to edge network elements, which are coupled (e.g., through one or more core network elements) to other edge network elements, which are coupled to other end stations (e.g., server end stations).</p>
<p id="p-0023" num="0022">Network elements are commonly separated into a control plane and a data plane (sometimes referred to as a forwarding plane or a media plane). In the case that the network element is a router (or is implementing routing functionality), the control plane typically determines how data (e.g., packets) is to be routed (e.g., the next hop for the data and the outgoing port for that data), and the data plane is in charge of forwarding that data. For example, the control plane typically includes one or more routing protocols (e.g., Border Gateway Protocol (BGP), Interior Gateway Protocol(s) (IGP) (e.g., Open Shortest Path First (OSPF), Routing Information Protocol (RIP), Intermediate System to Intermediate System (IS-IS)), Label Distribution Protocol (LDP), Resource Reservation Protocol (RSVP)) that communicate with other network elements to exchange routes and select those routes based on one or more routing metrics.</p>
<p id="p-0024" num="0023">As described above, it is desirable to provide a solution to the problem of filling the NC with incomplete entries or the problem of encountering many NC miss events for legitimate traffic, to which the network element may or may not be properly react. As such, embodiments of the invention provide mechanisms to add reachable entries to the NC to preempt NC miss events for reachable nodes coupled with the network element. In this way, the NC will contain valid entries and would not be full of only invalid entries in the case of a DoS attack based on packets addressed to unassigned or unreachable destination IP addresses. Furthermore, in the case of rate limiting NC miss events, the network element would already contain an IP address to link-layer address association for reachable nodes thus avoiding the NC miss event entirely for those entries.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 2</figref> is a flow diagram that illustrates exemplary operations for adding entries preemptively to a neighbor cache in response to duplicate address detection neighbor solicitation messages. In <figref idref="DRAWINGS">FIG. 2</figref>, three network elements are shown as <b>201</b>, <b>203</b>, and <b>204</b>. Network elements <b>203</b> and <b>204</b> are part of a network <b>202</b> while network element <b>201</b> exists outside of network <b>202</b>. Network element <b>203</b> is a network element such as a router, or gateway, between network element <b>201</b> and network element <b>204</b>. As such, packets arriving from network element <b>201</b> that are destined for network element <b>204</b> are relayed by network element <b>203</b>.</p>
<p id="p-0026" num="0025">In <figref idref="DRAWINGS">FIG. 2</figref>, network element <b>204</b> transmits a DAD-NS message at operation <b>205</b> that includes a TA of 2001::234/128 which the network element <b>204</b> intends to assign to its interface with network <b>202</b>. After transmitting the DAD-NS message, network element <b>204</b> waits a period of time for an NA indicating the TA is being used by another node, this is the DAD timer period <b>210</b>. Assuming that no NA is received for the TA, then the network element <b>204</b> assigns the address 2001::234/128 to its interface in operation <b>220</b>.</p>
<p id="p-0027" num="0026">Network element <b>203</b> receives the DAD-NS message from network element <b>204</b>. In one embodiment, the network element <b>203</b> also waits a DAD timer period <b>215</b> before proceeding. In operation <b>225</b>, the network element <b>203</b> broadcasts an NS message with a target address of 2001::234/128. This message is sent to determine the link-layer address of a network interface of a network element to the network <b>202</b> that is assigned the target IP address 2001::234/128 because the network element <b>203</b> would like to fill its NC with a reachable entry it anticipates it might need in the future based on recognizing that a node initialized an interface with that TA from the DAD-NS message.</p>
<p id="p-0028" num="0027">In response to the NS message, network element <b>204</b> transmits an NA message indicating its target address of 2001::234/128 and link-layer address, shown as DE:EB:AA:5F:C4:02, in operation <b>230</b>. In response to receiving the NA message from operation <b>230</b>, network element <b>203</b> records the received link-layer address of DE:EB:AA:5F:C4:02 in the NC to associate it with the corresponding with the IP address 2001::234/128 in operation <b>240</b>; thereby, pre-caching an association between the link-layer address and the IP address prior to any NC miss event for that IP address. In one embodiment, the recordation of the link-layer address is performed along with updating an NC entry to the reachable state. Optionally, the network element <b>203</b> may only react to DAD-NS messages that include a TA that matches prefixes that network element <b>203</b> has advertised specifically for Stateless Address Auto Configuration (SLAAC).</p>
<p id="p-0029" num="0028">As illustrated in <figref idref="DRAWINGS">FIG. 2</figref>, at some point after updating the NC in operation <b>240</b>, a packet arrives at network element <b>203</b> destined for the address 2001:234/128 in operation <b>245</b>. In response to receiving the packet and determining that it needs to relay that packet to a node on its network, network element <b>203</b> checks its NC for an entry matching the address with a corresponding link-layer address. Using the pre-cached NC entry, the network element <b>203</b> is able to route the packet received at operation <b>245</b> to network element <b>204</b> using the link-layer address of DE:EB:AA:5F:C4:02 in operation <b>250</b>.</p>
<p id="p-0030" num="0029">In one embodiment, not illustrated, the network element <b>203</b> may determine that the TA in the DAD-NS message is already assigned to an interface of another network element within the network <b>202</b>. This may occur because the network element <b>203</b> already has a reachable entry in the NC for the TA of 2001::234/128. Further, it may be that the network element <b>203</b> receives an NA message with the TA of 2001::234/128 that indicates that TA is already being used. In either case, network element would not need to react to the DAD-NS message, and may in fact not even start the DAD timer period, since the network element <b>204</b> will need to attempt a second DAD-NS message with a new TA. Though in the embodiment in which the network element <b>203</b> receives an NA message, the network element <b>203</b> may update its NC to reflect the IP address to link-layer address association included within that NA though the network element did not initiate an NS message.</p>
<p id="p-0031" num="0030">In another embodiment, network element <b>203</b> continuously monitors neighbor reachability of neighbors included in the NC to retain resolved neighbors. Thus, the network element <b>203</b> can minimize, if not eliminate, NC miss events of reachable neighbors to further neutralize off-link flooding DoS attacks.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 3</figref> illustrates a flow diagram that illustrates exemplary operations for adding entries preemptively to a neighbor cache in response to address appropriation messages. In <figref idref="DRAWINGS">FIG. 3</figref>, a first network element is operating on a network comprised of at least a second network element. At operation <b>305</b>, the first network element receives an appropriation message from the second network element indicating the second network element intends to appropriate a first TA which is included in the appropriation message for its use. For example, the appropriation message may be a DAD-NS message with reference to IPv6 ND. At operation <b>310</b>, the first network element optionally initializes a timer in response to the appropriation message. This timer is based on a time period being the expected period of time which the second network element will wait prior to assigning the first TA to its network interface. This time period is often configured such that the second network element will wait a long enough period of time to receive some conflict message should another device be utilizing the first TA. In an embodiment utilizing a timer, the first network element waits for the timer to expire prior to continuing in operation <b>315</b>. In response to the appropriation message, and optionally the expiration of the timer, the first network element broadcasts a discovery message indicating the first TA at operation <b>320</b>. The discovery message acts as mechanism for the first network element to request details of the device that is utilizing the first TA, in this case the second network element. For example, the first network element may desire the link-layer address of the second network element. With reference to the previously describe IPv6 ND protocol, this message is an NS message indicating the first TA (and the source IP address of the first network element). Sometime later, the first network element receiving a discovery response from a device on the network that is utilizing the first TA at operation <b>325</b>. This discovery response includes at least the first TA and the link-layer address of the responding network device, which in this case is the second network element. With reference to the previously describe IPv6 ND protocol, this message is an NA message indicating the first TA and the second network element's link-layer address. In response to the discovery response, the first network element updates its NC to include a pre-cached NC entry associating the link-layer address and the first TA at operation <b>330</b>. This preemptive determination the link-layer address to IP address association prevents at least one future NC miss associated with that IP address. For example, it may be that sometime after the preemptive caching of the NC entry the first network element receives a data packet from another network element that is addressed to the second network element via the first TA, which is an IP address, at operation <b>335</b>. The first network element can then utilize the pre-cached NC entry to match and obtain the link-layer address based on the first TA in operation <b>340</b>. In operation <b>345</b>, the first network element can then transmit the data packet to the second network element based on the link-layer address obtained from the pre-cached NC entry in operation <b>345</b>.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a block diagram of an exemplary first network element coupled with a second network element and a third network element according to embodiments of the invention. In <figref idref="DRAWINGS">FIG. 4</figref>, the first network element <b>400</b> and at least the second network element <b>480</b>A are enabled to utilize the discovery requests and discovery responses as previously described, such as the IPv6 ND protocol. Network element <b>400</b> comprises a set of one or more microprocessor units <b>420</b> that are coupled with a memory <b>430</b> and a neighbor cache <b>440</b>. In one embodiment, the neighbor cache (NC) <b>440</b> is specialized memory, such as a content-addressable-memory (CAM) for looking up entries by IP address. In another embodiment, the NC <b>440</b> is a set of memory locations within memory <b>430</b> that comprise the NC entries. Still further embodiments may utilize specialized data structures or storage devices to comprise the NC. The set of microprocessors <b>420</b> are further coupled with a plurality of network interfaces <b>415</b>A-<b>415</b>N that coupled the first network element <b>400</b> with the second network element <b>480</b>A and the third network element <b>480</b>Z.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 5</figref> illustrates a block diagram of an exemplary computer system according to embodiments of the invention. Those skilled in the art would recognize that other computer systems used to implement network elements may have more or less components and may be used to in embodiments of the invention.</p>
<p id="p-0035" num="0034">The computer system <b>500</b> includes a bus(es) <b>550</b> which is coupled with a processing system <b>520</b>, a power supply <b>525</b>, volatile memory <b>530</b> (e.g., double data rate random access memory (DDR-RAM), single data rate (SDR) RAM), nonvolatile memory <b>540</b> (e.g., hard drive, flash memory, Phase-Change Memory (PCM). The processing system <b>520</b> may be further coupled to a processing system cache <b>510</b>. The processing system <b>520</b> may retrieve instruction(s) from the volatile memory <b>530</b> and/or the nonvolatile memory <b>540</b>, and execute the instruction to perform operations described above. The bus(es) <b>550</b> couples the above components together and further couples a display controller <b>570</b>, one or more input/output devices <b>580</b> (e.g., a network interface card, a cursor control (e.g., a mouse, trackball, touchscreen, touchpad, etc.), a keyboard, etc.), and, optionally, one or more wireless transceivers <b>590</b> (e.g., Bluetooth, WiFi, Infrared, etc.). In one embodiment, the display controller <b>570</b> is further coupled to a display device.</p>
<p id="p-0036" num="0035">As described herein, instructions may refer to specific configurations of hardware such as application specific integrated circuits (ASICs) configured to perform certain operations or having a pre-determined functionality or software instructions stored in memory embodied in a non-transitory computer readable medium. Thus, the techniques shown in the figures can be implemented using code and data stored and executed on one or more electronic devices (e.g., an end station, a network element). Such electronic devices store and communicate (internally and/or with other electronic devices over a network) code and data using computer-readable media, such as non-transitory computer-readable storage media (e.g., magnetic disks; optical disks; random access memory; read only memory; flash memory devices; phase-change memory) and transitory computer-readable communication media (e.g., electrical, optical, acoustical or other form of propagated signals&#x2014;such as carrier waves, infrared signals, digital signals). In addition, such electronic devices typically include a set of one or more microprocessors coupled to one or more other components, such as one or more storage devices (non-transitory machine-readable storage media), user input/output devices (e.g., a keyboard, a touchscreen, and/or a display), and network connections. The coupling of the set of microprocessors and other components is typically through one or more busses and bridges (also termed as bus controllers). Thus, the storage device of a given electronic device typically stores code and/or data for execution on the set of one or more microprocessors of that electronic device. Of course, one or more parts of an embodiment of the invention may be implemented using different combinations of software, firmware, and/or hardware.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method performed by a first network element coupled with a plurality of other network elements for pre-filling a neighbor cache in the first network element with a plurality of reachable neighbor cache entries each entry to associate an internet protocol (IP) address with a link-layer address, the method comprising the steps of:
<claim-text>receiving an appropriation message from a second network element of the plurality of other network element that indicates a first target address which the second network element intends to appropriate for its use;</claim-text>
<claim-text>broadcasting, in response to the appropriation message, a discovery message to the plurality of other network elements, wherein the discovery message indicates the first target address and is broadcast to request a link-layer address in association with the first target address;</claim-text>
<claim-text>receiving a discovery response from the second network element with the first target address and the link-layer address of the second network element; and</claim-text>
<claim-text>updating the neighbor cache to include a pre-cached neighbor cache entry associating the link-layer address to the first target address, whereby one or more future neighbor cache misses associated with the first target address is prevented.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising the steps of:
<claim-text>initializing, in response to the appropriation message, a timer based on a time period that is an expected period of time the second network element will wait prior to assigning the target address to its network interface; and</claim-text>
<claim-text>waiting for the timer to expire prior to broadcasting the discovery message, whereby the expected time needed by the second network element to assign the target address to its interface will have elapsed.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising the steps of:
<claim-text>receiving a data packet addressed to the first target address;</claim-text>
<claim-text>utilizing the pre-cached neighbor cache entry to match and obtain the link-layer address based on the first target address; and</claim-text>
<claim-text>transmitting the data packet to the second network element based on the link-layer address obtained from the pre-cached neighbor cache entry.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the appropriation message is a duplicate address detection (DAD) neighbor solicitation (NS), the discovery message is an NS, and the discovery response is a neighbor advertisement (NA).</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first network element is an IP version six (IPV6) enabled routing network element.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A network element, to be coupled to a network, configured to receive packets from a plurality of other network elements of the network, process those packets, and maintain a neighbor cache for associating internet protocol (IP) addresses with their corresponding link-layer addresses, the network element comprising:
<claim-text>a plurality of network interfaces configured to receive packets from the plurality of other network elements of the network;</claim-text>
<claim-text>a set of one or more microprocessors coupled to the plurality of network interfaces; and</claim-text>
<claim-text>a memory, coupled with the set of microprocessors, storing instructions that, when executed by the set of microprocessors, cause the set of microprocessors to, process appropriation messages from the plurality of other network elements,
<claim-text>each appropriation message from an originating network element and indicating a target address the originating network element intends to appropriate for its use, the processing of each appropriation message including,</claim-text>
<claim-text>broadcasting, in response to the appropriation message, a discovery message to the plurality of other network elements of the network, wherein the discovery message indicates the target address and is broadcast to request a link-layer address used by one of the plurality of other network elements that is utilizing the target address,</claim-text>
<claim-text>receiving a discovery response indicating an association between the target address and the link-layer address used by the one of the plurality of other network elements utilizing the target address, and</claim-text>
<claim-text>updating the neighbor cache to include a pre-cached neighbor cache entry to associate the target address and the link-layer address used by the one of the plurality of other network elements utilizing the target address.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The network element of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the memory further stores instructions that, when executed by the set of microprocessors, cause the set of microprocessors to process appropriation messages further including:
<claim-text>initializing, in response to the appropriation message, a timer based on a time period that is an expected period of time the originating network element will wait prior to assigning the target address to its network interface; and</claim-text>
<claim-text>waiting for the timer to expire prior to broadcasting the discovery message, whereby the expected time needed by the originating network element to assign the target address to its interface will have elapsed.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The network element of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the memory further stores instructions that, when executed by the set of microprocessors, cause the set of microprocessors to process a plurality of incoming data packets that are addressed to a plurality of destination network elements of the plurality of other network elements including:
<claim-text>utilizing the neighbor cache to locate one or more pre-cached neighbor entries corresponding to the one or more of the plurality of destination network elements; and</claim-text>
<claim-text>transmitting one or more of the plurality of incoming data packets to those packets' corresponding destination network element based on a link-layer address obtained from a corresponding one of the one or more pre-cached neighbor entries.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The network element of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the appropriation message is a duplicate address detection (DAD) neighbor solicitation (NS), the discovery message is an NS, and the discovery response is a neighbor advertisement (NA).</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The network element of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the network element is an IP version six (IPV6) enabled routing network element.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A tangible non-transitory machine-readable storage medium comprising instructions for at least one microprocessor of a processing device, which, when executed by the microprocessor, cause the microprocessor to perform operations comprising:
<claim-text>receiving an appropriation message from a first network element that indicates a first target address which the first network element intends to appropriate for its use;</claim-text>
<claim-text>broadcasting, in response to the appropriation message, a discovery message to a plurality of network elements including the first network element, wherein the discovery message indicates the first target address and is broadcast to request a link-layer address in association with the first target address;</claim-text>
<claim-text>receiving a discovery response from the first network element with the first target address and the link-layer address of the second network element; and</claim-text>
<claim-text>updating the neighbor cache to include a pre-cached neighbor cache entry associating the link-layer address to the first target address, whereby one or more future neighbor cache misses associated with the first target address is prevented.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The tangible non-transitory machine-readable storage medium of <claim-ref idref="CLM-00011">claim 11</claim-ref> further comprising instructions to cause the microprocessor to perform operations comprising:
<claim-text>initializing, in response to the appropriation message, a timer based on a time period that is an expected period of time the first network element will wait prior to assigning the target address to its network interface; and</claim-text>
<claim-text>waiting for the timer to expire prior to broadcasting the discovery message, whereby the expected time needed by the first network element to assign the target address to its interface will have elapsed.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The tangible non-transitory machine-readable storage medium of <claim-ref idref="CLM-00011">claim 11</claim-ref> further comprising instructions to cause the microprocessor to perform operations comprising:
<claim-text>receiving a data packet addressed to the first target address;</claim-text>
<claim-text>utilizing the pre-cached neighbor cache entry to match and obtain the link-layer address based on the first target address; and</claim-text>
<claim-text>transmitting the data packet to the second network element based on the link-layer address obtained from the pre-cached neighbor cache entry.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The tangible non-transitory machine-readable storage medium of <claim-ref idref="CLM-00011">claim 11</claim-ref> wherein the appropriation message is a duplicate address detection (DAD) neighbor solicitation (NS), the discovery message is an NS, and the discovery response is a neighbor advertisement (NA).</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The tangible non-transitory machine-readable storage medium of <claim-ref idref="CLM-00011">claim 11</claim-ref> wherein the instructions are to be executed within an IP version six (IPV6) enabled routing network element.</claim-text>
</claim>
</claims>
</us-patent-grant>
