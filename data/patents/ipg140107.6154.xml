<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627278-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627278</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>11825611</doc-number>
<date>20070706</date>
</document-id>
</application-reference>
<us-application-series-code>11</us-application-series-code>
<us-term-of-grant>
<us-term-extension>1413</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>9</main-group>
<subgroup>44</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>717113</main-classification>
<further-classification>700 18</further-classification>
<further-classification>345441</further-classification>
<further-classification>382159</further-classification>
<further-classification>382185</further-classification>
<further-classification>717100</further-classification>
<further-classification>717105</further-classification>
</classification-national>
<invention-title id="d2e53">Freehand system and method for creating, editing, and manipulating block diagrams</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5742280</doc-number>
<kind>A</kind>
<name>Ohyama</name>
<date>19980400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5748769</doc-number>
<kind>A</kind>
<name>Nishimura et al.</name>
<date>19980500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5926566</doc-number>
<kind>A</kind>
<name>Wang et al.</name>
<date>19990700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2004/0090439</doc-number>
<kind>A1</kind>
<name>Dillner</name>
<date>20040500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345440</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2004/0150667</doc-number>
<kind>A1</kind>
<name>Dove et al.</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2006/0227140</doc-number>
<kind>A1</kind>
<name>Ramani et al.</name>
<date>20061000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>EP</country>
<doc-number>1083513</doc-number>
<kind>A2</kind>
<date>20010300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>WO</country>
<doc-number>WO-2005/064423</doc-number>
<kind>A2</kind>
<date>20050700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00009">
<othercit>Hong, Jason I. et al., &#x201c;Satin: A Toolkit for Informal Ink-based Applications,&#x201d; <i>CHI Letters</i>, vol. 2(2):63-72 (2000).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>Citrin, W.V. et al., &#x201c;Distributed Architectures for Pen-Based Input and Diagram Recognition,&#x201d; <i>ACM Conference on Advanced Visual Interfaces </i>'96, pp. 132-140 (1996).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00011">
<othercit>Costagliola, Gennaro et al., &#x201c;A Multi-layer Parsing Strategy for On-line Recognition of Hand-drawn Diagrams,&#x201d; <i>Proceedings of the Visual Languages and Human-Centric Computing</i>, pp. 103-110 (2006).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00012">
<othercit>Zhao, R. et al., &#x201c;An Editor for the Rapid Prototyping of EXPRESS-G Models,&#x201d; retrieved online at: http://citeseer.ist.psu.edu/cache/papers/cs/3230/http:zSzzSzwww.c-lab.dezSz&#x2dc;wolfgangzSzeug95.pdf/an-editor-for-the.pdf (1999).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00013">
<othercit>Zhao, R. et al., &#x201c;Incremental Recognition in Gesture-Based and Syntax-Directed Diagram Editors,&#x201d; <i>Proceedings of the Conference on Human Factors in Computing Systems</i>, pp. 95-100 (1993).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00014">
<othercit>European Communication for Application No. 05756532.7&#x2014;1245, dated Feb. 7, 2008.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00015">
<othercit>Kara, Levent Burak et al., &#x201c;Sim-U-Sketch: A Sketch-based Interface for Simulink,&#x201d; AVI '04 Proceedings of the Working Conference on Advanced Visual Interfaces, pp. 354-357 (2004).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00016">
<othercit>International Search Report for Application No. PCT/US2005/019528, 3 pages, dated Dec. 15, 2005.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>11</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>700 18</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345441</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382159</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382185</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>717113</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>717100</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>717105</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>16</number-of-drawing-sheets>
<number-of-figures>16</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>10863378</doc-number>
<date>20040607</date>
</document-id>
<parent-status>PENDING</parent-status>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>11825611</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20070260332</doc-number>
<kind>A1</kind>
<date>20071108</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Torgerson</last-name>
<first-name>Jay Ryan</first-name>
<address>
<city>Hopkinton</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Torgerson</last-name>
<first-name>Jay Ryan</first-name>
<address>
<city>Hopkinton</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Nelson Mullins Riley &#x26; Scarborough LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>The MathWorks, Inc.</orgname>
<role>02</role>
<address>
<city>Natick</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Gami</last-name>
<first-name>Tejal</first-name>
<department>2127</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method of integrating freehand user input into a block diagram environment is disclosed. The freehand user input is a user's approximation of a diagram component or feature of a component which is received by the block diagram environment and compared to multiple patterns stored in a storage location. The storage location holds patterns of block diagram components and block diagram component features. The freehand user input may be displayed, superimposed on a block diagram being shown to the user. Upon the freehand user input being matched to one of the patterns representing a block diagram component or feature of a component, the freehand user input is replaced on the displayed block diagram with an electronic device drawn rendering of the matched diagram feature component or feature of a component. Partial matches of the user drawn input may result in a menu of choices being presented to the user for selection.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="144.10mm" wi="192.53mm" file="US08627278-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="204.22mm" wi="180.26mm" orientation="landscape" file="US08627278-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="227.92mm" wi="172.38mm" file="US08627278-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="185.34mm" wi="177.12mm" file="US08627278-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="229.45mm" wi="166.37mm" orientation="landscape" file="US08627278-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="231.90mm" wi="165.44mm" orientation="landscape" file="US08627278-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="231.39mm" wi="169.16mm" orientation="landscape" file="US08627278-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="233.85mm" wi="168.83mm" orientation="landscape" file="US08627278-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="231.73mm" wi="169.84mm" orientation="landscape" file="US08627278-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="230.38mm" wi="164.51mm" orientation="landscape" file="US08627278-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="229.45mm" wi="166.62mm" orientation="landscape" file="US08627278-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="236.90mm" wi="164.25mm" orientation="landscape" file="US08627278-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="231.56mm" wi="163.91mm" orientation="landscape" file="US08627278-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="230.21mm" wi="169.16mm" orientation="landscape" file="US08627278-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="238.17mm" wi="164.08mm" orientation="landscape" file="US08627278-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="235.37mm" wi="164.00mm" orientation="landscape" file="US08627278-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="228.77mm" wi="168.40mm" orientation="landscape" file="US08627278-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">RELATED APPLICATION</heading>
<p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 10/863,378, filed Jun. 7, 2004, the entire content of which is incorporated by reference herein.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0003" num="0002">The illustrative embodiment of the present invention relates generally to block diagrams and more particularly to the use of freehand input data in the creation, editing and manipulation of block diagrams.</p>
<heading id="h-0003" level="1">BACKGROUND</heading>
<p id="p-0004" num="0003">Freehand user input such as input from a mouse or optical pen operated by a user of a computer system or other electronic device is accepted by many different types of applications. For example, freehand input from a mouse is accepted by Microsoft's Paint program and enables the user to construct freehand drawings on a display surface connected to a computer system or other electronic device. One type of freehand user input is Graffiti&#xae;, a text recognition system which is used in conjunction with the Palm OS&#xae; from PalmSource of Sunnyvale, Calif. in handheld PDAs (Personal Digital Assistants). The acceptance of the freehand input enables an application to interact with the user in an easy and well understood manner and enables the user to customize the displayed output of the particular application.</p>
<p id="p-0005" num="0004">Block diagram environments such as Simulink&#xae; from The MathWorks of Natick, Mass., enable a user to construct models of dynamic systems. These models include graphical references to system components which may be used to simulate the system operations. Current block diagram environment tools enable a user to drag items from pre-defined templates into a block diagram. The components being dragged into the block diagram include attributes enabling the component to be modeled in the system during the simulation of the diagram. Unfortunately, conventional block diagram environments do not allow a user to sketch in system components using freehand input. The result is a lengthy series of drag and drop operations that the user is required to perform when constructing the block diagram. Additionally, the user must also first search to find the desired component in the proper template.</p>
<heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0006" num="0005">The illustrative embodiment of the present invention provides a method of integrating freehand user input into a block diagram environment. The freehand user input is a user's approximation of a diagram component or feature of a component which is received by the block diagram environment and compared to multiple patterns stored in a storage location. The storage location holds patterns of block diagram components and block diagram component features. The freehand user input may be displayed, superimposed on a block diagram being shown to the user. Upon the freehand user input being matched to one of the stored patterns representing a block diagram component or feature of a component, the freehand user input is replaced on the displayed block diagram with an electronic device drawn rendering of the matched diagram feature component or feature of a component. The component is also added to the block diagram model data. In one implementation, the user input displayed on the block diagram and the electronic device drawn rendering of the feature or component may be simultaneously displayed pending user confirmation of the selection. Partial matches of the user drawn input may result in a menu of choices being presented to the user for selection.</p>
<p id="p-0007" num="0006">In one embodiment in an electronic device holding a block diagram environment with at least one block diagram, the electronic device also interfaced with a display surface displaying a block diagram, a method receives freehand user input entered with a pointing device into the block diagram. The method also compares the user input to at least one of multiple stored patterns of block diagram components and features of block diagram components. In the event of a match, the method adds the block diagram component or block diagram component feature to the block diagram model data and updates the displayed block diagram with a program-drawn block diagram component/feature representing the input data.</p>
<p id="p-0008" num="0007">In another embodiment, in an electronic device interfaced with a display surface, a system includes a block diagram environment with at least one block diagram displayed on the display surface. The system also includes a pointing device interfaced with the electronic device, the pointing device being used to transmit freehand user input to the block diagram displayed on the display surface. The system additionally includes a storage location holding multiple block diagram component patterns and block diagram component feature patterns to which the freehand user input is compared. Matching block diagram components and component features from the storage location are rendered on the electronic device drawn diagram in the event of a match.</p>
<p id="p-0009" num="0008">In a different embodiment in an electronic device holding a block diagram environment with at least one block diagram, the electronic device also interfaced with a display surface displaying a block diagram, a method receives freehand user input entered with a pointing device into the block diagram. The method also analyzes the user input to identify the user input as a block diagram component or block diagram component feature. In the event of an identification, the method adds the block diagram component or block diagram component feature to the block diagram model data and updates the displayed block diagram with a program-drawn block diagram component/feature representing the input data.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of an environment suitable for practicing the illustrative embodiment of the present invention;</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 2A</figref> is a flow chart of the sequence of steps followed by the illustrative embodiment of the present invention to compare freehand user input to stored diagram components and features;</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 2B</figref> is a flowchart examining the comparison and normalization process in greater detail;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 3A</figref> is a view of the illustrative embodiment of the present invention showing received freehand user input displayed in a block diagram environment;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 3B</figref> is a view of the illustrative embodiment of the present invention showing a electronic device drawn diagram component based on the freehand user input;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 4A</figref> is a view of the illustrative embodiment of the present invention showing freehand user input being appended to a previously drawn electronic device generated diagram component;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 4B</figref> is a view of the illustrative embodiment of the present invention showing a electronic device drawn replacement of the freehand user input <figref idref="DRAWINGS">FIG. 4A</figref>;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 5A</figref> is a view of the illustrative embodiment of the present invention showing an initial display of the received freehand user input appended to a feedback loop in a block diagram;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 5B</figref> shows an electronic device rendering of the partial component depicted in the freehand user input of <figref idref="DRAWINGS">FIG. 5A</figref>;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 5C</figref> is a view of the illustrative embodiment of the present invention showing a displayed menu of choices of finished components possibly completing the previously drawn component of <figref idref="DRAWINGS">FIG. 5A</figref> and <figref idref="DRAWINGS">FIG. 5B</figref>;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 5D</figref> is a view of the illustrative embodiment of the present invention showing the view of <figref idref="DRAWINGS">FIG. 5C</figref> wherein the user has selected one of the possibilities displayed in the menu by entering additional freehand input corresponding to a menu choice;</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 5E</figref> shows the final electronic device drawn rendering of the additional component of <figref idref="DRAWINGS">FIG. 5D</figref>.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 6A</figref> shows a user drawn output being added to the diagram of <figref idref="DRAWINGS">FIG. 5E</figref>;</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 6B</figref> shows a electronic device drawn replacement for the user input displayed in <figref idref="DRAWINGS">FIG. 6A</figref>;</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 7A</figref> shows freehand user input indicating a request for an additional view of the diagram being displayed; and</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 7B</figref> shows a zoomed-out viewer superimposed on a portion of the block diagram in response to the received freehand user input displayed in <figref idref="DRAWINGS">FIG. 7A</figref>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0026" num="0025">The illustrative embodiment of the present invention allows a user to construct, modify, and manipulate block diagram elements using a pointing device. A block diagram environment displaying a block diagram receives freehand user input from a pointing device such as an optical pen or a mouse. The freehand user input is entered by patterns and gestures and is not limited to displayed elements on a template as is found in conventional drag and drop systems. The entered patterns and symbols are compared to stored patterns of block diagram components and features of components and used as the basis for electronic device drawn diagram components or component features which are added to the block diagram. By allowing freehand entry of input data in such a manner, the illustrative embodiment of the present invention greatly expands and simplifies the creation and modification of block diagram features and components.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 1</figref> depicts an environment suitable for practicing the illustrative embodiment of the present invention. An electronic device <b>2</b> holds a block diagram environment <b>4</b>. The electronic device <b>2</b> may be a personal computer, workstation, laptop, server, mainframe, PDA or some other type of electronic device equipped with a processor and able to support the block diagram environment <b>4</b>. The block diagram environment <b>4</b> may be a block diagram environment such as that found in Simulink&#xae; from The MathWorks, Inc. of Natick, Mass., and Labview&#xae; from National Instruments of Austin, Tex. The block diagram environment <b>4</b> includes a least one set of block diagram model data <b>6</b> for a block diagram. The block diagram model data <b>6</b> may be a block diagram model of a system. Also included on the electronic device <b>2</b> is a storage location <b>8</b>. The storage location <b>8</b> includes a stored collection of block diagram components and block diagram component feature patterns <b>10</b>. Those skilled in the art will recognize that storage location <b>8</b> may also be located at other locations accessible to the block diagram environment <b>4</b>. For example, the storage location <b>8</b> may be located on a remote server in a distributed environment. A user <b>12</b> manipulates a pointing device <b>18</b> which is interfaced with the electronic device <b>2</b>. The pointing device <b>12</b> may be a mouse, trackball, joystick, mousepad, and light pen. A display <b>14</b> holds a rendering of block diagram <b>16</b>. Input received by the block diagram environment <b>4</b> from the user manipulating the pointing device <b>18</b> is compared to the block diagram component/feature patterns <b>10</b> which are used to render a electronic device drawn version of the user input on the display <b>14</b>.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 2A</figref> depicts the sequence of steps followed by the illustrative embodiment of the present invention to match freehand user input to stored block diagram components/features of components. The sequence begins when the user manipulates the pointing device <b>18</b> to send input to the displayed block diagram <b>16</b> via the block diagram environment <b>4</b> (step <b>30</b>). The technique used for the user input varies with the type of input device being utilized. For example, if a mouse is being used, the user may drag a cursor around the displayed block diagram <b>16</b> in the outline of the shape of the component/feature of a component that the user is attempting to add to the block diagram <b>16</b>. Similarly, if an optical pointing device is being used, the user may gesture at the diagram in the shape of the component/feature of a component. The input data is received at the electronic device <b>2</b> (step <b>32</b>) and a graphical representation of the input is displayed in the rendering of the block diagram <b>16</b> (step <b>34</b>). For example, a user may draw a shape in the displayed block diagram using a mouse connected to the electronic device <b>2</b>. The user <b>12</b> may position the mouse cursor at the appropriate spot in the display <b>14</b>. By depressing a mouse button and moving the mouse, a line is rendered in the displayed block diagram by the block diagram environment <b>4</b>. The rendering is the result of the block diagram environment <b>4</b> intercepting and handling the mouse messages generated by the depression of the button on the mouse. The handling of mouse messages is well-known to those with experience in the Windows&#xae; programming environment (e.g.: WM_RBUTTONDOWN, WM_LBUTTONDOWN). The message handler cross references the coordinates associated with the intercepted message with the coordinates of the model data being displayed on the display in order to orient the input data with the block diagram data.</p>
<p id="p-0029" num="0028">The shape of the user input as captured is then compared to stored patterns of block diagram components and features of block diagram components (step <b>36</b>). The comparison may be made when the input data ceases, for example, through a WM_LBUTTONUP message or the failure to extend a line being rendered in response to the movements of an optical pen. Alternatively, the illustrative embodiment of the present invention may attempt comparisons based on a time parameter. A determination is made for each comparison as to whether a definitive match has been determined (step <b>37</b>). The determination as to what percentage of the user input must correspond to the stored pattern to constitute a definitive match in the illustrative embodiment is an implementation choice. The illustrative embodiment of the present invention checks for points of correspondence between the user input and the stored diagram component/feature patterns <b>10</b>. For some shapes, the borders of enclosed input shapes may be compared to the stored diagram component/feature patterns <b>10</b>. For other shapes, both the borders, interior and/or exterior shapes may be checked for correspondence. The size of the input shapes may be normalized against the stored features/patterns with a percentage of deviation being allowed from the stored component/feature size. The stored diagram components/feature patterns <b>10</b> may be stored in a database including a size attribute associated with the component/feature. The comparison may only compare the entered pattern to stored components/features within the deviation range. Distances and angles of the input data are compared to the stored/components features accounting for pre-defined amount of size deviation.</p>
<p id="p-0030" num="0029">The process of determining a definitive match while normalizing for the size differential between the input data and the stored patterns is illustrated in greater detail in the flowchart of <figref idref="DRAWINGS">FIG. 2B</figref>. After receiving the freehand user input (step <b>39</b>), the illustrative embodiment of the present invention analyzes the received input to identify attributes of the input data (e.g.: length of line, direction of line, angle between lines, etc.) (step <b>41</b>). The stored components/features of components are retrieved and similarly analyzed (step <b>43</b>). Alternatively, the stored patterns may have already been analyzed in which case the attributes for the stored patterns are retrieved. The input attributes are then compared to the stored attribute patterns while normalizing for size differential (step <b>45</b>). The normalization process is necessary since in most cases the user's freehand input will not be to exactly the same scale as the stored patterns. Any matches from the comparison are identified (step <b>47</b>).</p>
<p id="p-0031" num="0030">In the event of a definitive match, an electronic device drawn component or feature of a component corresponding to the user input data is rendered in the block diagram <b>16</b> (step <b>38</b>). Alternatively, if there is not a definitive match, but rather several possibilities, the user may be presented with a menu of possible block diagram components or features of components which may correspond to component/feature the user was attempting to add to the block diagram (step <b>40</b>). Following a user selection of the appropriate component or feature (step <b>42</b>) the electronic device adds the input data to the block diagram model data and draws the component or feature of the component in the rendering of the block diagram <b>16</b> (step <b>44</b>).</p>
<p id="p-0032" num="0031">The visual effect of the matching of freehand user input to the stored patterns is depicted in <figref idref="DRAWINGS">FIGS. 3A and 3B</figref>. <figref idref="DRAWINGS">FIG. 3A</figref> depicts a view <b>50</b> of a block diagram environment in the illustrative embodiment of the present invention in which a user has entered freehand input <b>52</b> representing a triangular shape. The illustrative embodiment of the present invention matches the freehand user input to a stored pattern in the collection of patterns of block diagram components and component features. The block diagram environment <b>4</b> generates the view <b>50</b> of <figref idref="DRAWINGS">FIG. 3B</figref> showing an electronic device rendered gain block <b>54</b>.</p>
<p id="p-0033" num="0032">The illustrative embodiment of the present invention may also be used to add additional components to an already existing block diagram as depicted in <figref idref="DRAWINGS">FIGS. 4A</figref> and <figref idref="DRAWINGS">FIG. 4B</figref>. <figref idref="DRAWINGS">FIG. 4A</figref> depicts the view <b>50</b> and computer generated gain block <b>54</b> of <figref idref="DRAWINGS">FIGS. 3A and 3B</figref> to which freehand user input of a rough approximation of a feedback signal <b>56</b> has been added to the electronic device drawn components previously appearing on the display. As before, the freehand user input for the feedback signal approximation <b>56</b> is compared to the diagram component and feature patterns <b>10</b> that are stored at a location <b>8</b> accessible to the block diagram environment <b>4</b>. In <figref idref="DRAWINGS">FIG. 4B</figref> a computer rendered feedback signal <b>58</b> is then generated to replace the user drawn input <b>56</b>. Depending upon the implementation, the electronic device drawn feedback signal may be superimposed over the user freehand input signal <b>56</b> until such time as the user indicates a confirmation of the substituted element. Those skilled in the art will recognize that such confirmation may be given in a number of different manners such as by clicking on the electronic device drawn component or component feature or clicking a control button in a popup dialog box which requests verification.</p>
<p id="p-0034" num="0033">The sequence of views generated by the illustrative embodiment of the present invention to choose a component from among many components is illustrated in <figref idref="DRAWINGS">FIGS. 5A through 5E</figref>. <figref idref="DRAWINGS">FIG. 5A</figref> shows a view <b>50</b> with the electronic device generated gain block <b>54</b> and feedback signal <b>58</b> as well as additional user freehand input <b>60</b> of a circular shape near the end of the feedback signal. <figref idref="DRAWINGS">FIG. 5B</figref> shows the view <b>50</b> including the components previously discussed in <figref idref="DRAWINGS">FIG. 5A</figref> with the user input <b>60</b> replaced by an electronic device generated circle <b>62</b>. The electronic device generated circle <b>62</b> represents a partially completed block diagram component. <figref idref="DRAWINGS">FIG. 5C</figref> depicts the view <b>50</b> with the gain block <b>54</b>, feedback signal <b>58</b> and circle <b>62</b> as well as additional choices displayed on a menu <b>64</b>. The menu <b>64</b> displays a list of potential matches for the partially completed element <b>62</b>. <figref idref="DRAWINGS">FIG. 5D</figref> depicts the previous view <b>50</b> as well as an additional freehand feature <b>66</b> added by the user to the previously displayed computer rendered circle <b>62</b>. The additional freehand feature <b>66</b> matches one of the components <b>67</b> displayed in the menu <b>64</b>. <figref idref="DRAWINGS">FIG. 5E</figref> shows the electronic device generated replacement of the user drawn feature <b>66</b>. The result is a sum block <b>68</b> added on to the end of the feedback signal <b>58</b>.</p>
<p id="p-0035" num="0034">A user may also add additional components to previously stored diagrams using the illustrative embodiment of the present invention. For example, <figref idref="DRAWINGS">FIG. 6A</figref> depicts view <b>50</b> including the gain block <b>54</b>, feedback signal <b>58</b>, and sum block <b>68</b> to which the user indicates a desire to add an output port through the creation of a freehand user input. Those skilled in the art will recognize that the previously stored block diagram may be retrieved from any location accessible to the block diagram environment <b>4</b>. <figref idref="DRAWINGS">FIG. 6B</figref> shows the result after matching the freehand user input to a stored pattern, the generation of a computer rendered output port <b>72</b>.</p>
<p id="p-0036" num="0035">Those skilled in the art will recognize that alternate forms of analysis rather than an explicit comparison may also be used by the illustrative embodiment of the present invention to identify the freehand user input. For example, a neural net may be used to determine the type of block diagram component/feature the user is attempting to add via freehand user input. The neural net may attempt to analyze small pieces of user input in parallel to identify the desired component/feature the user is attempting to add to the block diagram.</p>
<p id="p-0037" num="0036">The illustrative embodiment of the present invention may also be used to call up block diagram tools through the use of freehand gestures. <figref idref="DRAWINGS">FIG. 7A</figref> depicts a view <b>80</b> of a portion of a block diagram <b>82</b>. A user sketch enclosing the lower left hand corner of the displayed view <b>80</b> creates a rough box <b>84</b>. The gesture is evaluated by comparing it to stored patterns and results in the calling of a zoomed-out viewer showing the entire block diagram or subsystem <b>86</b> (of which the main view <b>80</b> is only displaying a portion) superimposed in the lower left corner of the view as illustrated in <figref idref="DRAWINGS">FIG. 7B</figref>.</p>
<p id="p-0038" num="0037">Similar to the procedure used to call up block diagram tools, a pre-defined input may also be used to cause the deletion of a component. For example, an &#x201c;x&#x201d; written over a diagram component may be interpreted as a delete signal. Similarly, pre-defined input such as a symbol may result in the insertion of a complete block or subsystem into the block diagram.</p>
<p id="p-0039" num="0038">In one aspect of the illustrative embodiment of the present invention, a user may switch between an editing mode and an interpreted mode in the block diagram environment <b>4</b>. The editing mode allows the user to make changes to the block diagram without the pattern comparison taking place. In the interpreted mode, once the user activates the mode, pattern comparison is performed in response to the user input. This ability to toggle the interpreted mode on and off prevents unwanted components and component features from being inadvertently added to a block diagram.</p>
<p id="p-0040" num="0039">In another aspect of the illustrative embodiment of the present invention, the user may teach the block diagram environment to interpret specific freehand user input gestures. User input may be entered and the environment subsequently instructed to interpret the entered input in a certain manner and perform an associated action. For example, the user may enter a learning mode and enter freehand input. After entering the input in the learning mode, the user indicates to the block diagram environment a specific action (e.g.: perform function, add component) that is to be associated with the input. The entered pattern and its association is saved, and subsequent user entries of that pattern in interpreted mode result in the specified action being performed.</p>
<p id="p-0041" num="0040">Although the examples contained herein have been discussed with reference to a block diagram environment, it should be appreciated that the present invention may also be implemented in other design environments. For example, the method of accepting and handling freehand user input that have been discussed above may be implemented in a user interface design system where various controls are added to a user interface in response to the received freehand user input. The illustrative embodiment of the present invention may also be practiced in a software diagram environment such as that found in Stateflow&#xae; from The MathWorks, Inc. of Natick, Mass. or Unified Modeling Language (UML) environments.</p>
<p id="p-0042" num="0041">Since certain changes may be made without departing from the scope of the present invention, it is intended that all matter contained in the above description or shown in the accompanying drawings be interpreted as illustrative and not in a literal sense. Practitioners of the art will realize that the system configurations depicted and described herein are examples of multiple possible system configurations that fall within the scope of the current invention. Likewise, the sequence of steps utilized in the illustrative flowcharts are examples and not the exclusive sequence of steps possible within the scope of the present invention.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>We claim:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. In an electronic device, a method comprising:
<claim-text>receiving an indication to enter a learning mode in a block diagramming environment;</claim-text>
<claim-text>receiving, while in the learning mode, an indication of a pattern;</claim-text>
<claim-text>receiving, while in the learning mode, an indication of a block diagram tool;</claim-text>
<claim-text>associating the pattern with the block diagram tool so that a subsequent entry of the pattern, in an interpretive mode of the block diagramming environment, results in the block diagram tool being provided in the block diagramming environment;</claim-text>
<claim-text>displaying a rendering of the block diagram in the block diagramming environment;</claim-text>
<claim-text>receiving a freehand user input, the receiving:
<claim-text>performed when the block diagramming environment is in the interpretive mode, and related to the block diagram tool;</claim-text>
</claim-text>
<claim-text>comparing the freehand user input with the pattern; and</claim-text>
<claim-text>as a result of a matching comparison between the freehand user input and the pattern, providing the block diagram tool in the block diagramming environment.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the freehand user input includes gesture information.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising entering the interpretive mode based at least in part on an input to the block diagramming environment.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein comparing the freehand user input with the pattern includes normalizing the freehand user input.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein comparing the freehand user input with the pattern includes normalizing the pattern.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the tool includes a viewer.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A system comprising:
<claim-text>a processing element for:
<claim-text>receiving an indication to enter a learning mode in a block diagramming environment, receiving, while in the learning mode, an indication of a pattern, receiving, while in the learning mode, an indication of an action, the action relating to a block diagram tool, associating the pattern with the action so that a subsequent entry of the pattern, in an interpretive mode in the block diagramming environment, results in the block diagram tool being provided in the block diagramming environment, receiving a freehand user input while in the interpretive mode, comparing the freehand user input with the pattern, and providing the block diagram tool in the block diagramming environment based on a result of the comparing.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The system of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the block diagram tool includes a viewer.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The system of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein, comparing the freehand user input with the pattern includes normalizing the freehand user input.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A non-transitory medium holding computer-executable instructions, the instructions including one or more instructions for:
<claim-text>receiving an indication to enter a learning mode in a block diagramming environment;</claim-text>
<claim-text>receiving, while in the learning mode, an indication of a pattern;</claim-text>
<claim-text>receiving, while in the learning mode, an indication of a block diagram tool;</claim-text>
<claim-text>associating the pattern with the block diagram tool so that a subsequent entry of the pattern, in an interpretive mode of the block diagramming environment, results in the block diagram tool being provided in the block diagramming environment;</claim-text>
<claim-text>displaying a rendering of the block diagram in the block diagramming environment;</claim-text>
<claim-text>receiving a freehand user input, the receiving:
<claim-text>performed when the block diagramming environment is in the interpretive mode, and related to the block diagram tool;</claim-text>
</claim-text>
<claim-text>comparing the freehand user input with the pattern; and</claim-text>
<claim-text>as a result of a matching comparison between the freehand user input and the pattern, providing the block diagram tool in the block diagramming environment.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The non-transitory medium of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the block diagram tool includes a viewer.</claim-text>
</claim>
</claims>
</us-patent-grant>
