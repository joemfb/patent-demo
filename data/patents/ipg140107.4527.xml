<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625611-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625611</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12026650</doc-number>
<date>20080206</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>1226</us-term-extension>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20110101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>56</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>370401</main-classification>
<further-classification>370389</further-classification>
</classification-national>
<invention-title id="d2e55">Scalable reconfigurable router</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5898687</doc-number>
<kind>A</kind>
<name>Harriman et al.</name>
<date>19990400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6128666</doc-number>
<kind>A</kind>
<name>Muller et al.</name>
<date>20001000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6259699</doc-number>
<kind>B1</kind>
<name>Opalka et al.</name>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6333799</doc-number>
<kind>B1</kind>
<name>Bala et al.</name>
<date>20011200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6512612</doc-number>
<kind>B1</kind>
<name>Fatehi et al.</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6584109</doc-number>
<kind>B1</kind>
<name>Feuerstraeter et al.</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6625119</doc-number>
<kind>B1</kind>
<name>Schuster et al.</name>
<date>20030900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6647208</doc-number>
<kind>B1</kind>
<name>Kirby</name>
<date>20031100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6687247</doc-number>
<kind>B1</kind>
<name>Wilford et al.</name>
<date>20040200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370392</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6768738</doc-number>
<kind>B1</kind>
<name>Yazaki et al.</name>
<date>20040700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6785436</doc-number>
<kind>B2</kind>
<name>Ravikanth et al.</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>7088716</doc-number>
<kind>B2</kind>
<name>Sugai et al.</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>7200114</doc-number>
<kind>B1</kind>
<name>Tse-Au</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>7269348</doc-number>
<kind>B1</kind>
<name>Tse-Au</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>7330468</doc-number>
<kind>B1</kind>
<name>Tse-Au</name>
<date>20080200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370389</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>7626986</doc-number>
<kind>B1</kind>
<name>Tse-Au</name>
<date>20091200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>7734172</doc-number>
<kind>B2</kind>
<name>Tse-Au</name>
<date>20100600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>7801041</doc-number>
<kind>B2</kind>
<name>Tse-Au</name>
<date>20100900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>8238743</doc-number>
<kind>B2</kind>
<name>Tse-Au</name>
<date>20120800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2003/0053486</doc-number>
<kind>A1</kind>
<name>Okamori</name>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2004/0022539</doc-number>
<kind>A1</kind>
<name>Bannister et al.</name>
<date>20040200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00022">
<othercit>Weik, Martin H., &#x201c;network management&#x201d;, &#x201c;network manager&#x201d;, Fiber Optics Standard Dictionary, 3<sup>rd </sup>ed., 1997.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00023">
<othercit>White Paper; &#x201c;Using Cisco 12000 Series IP Services Engine (ISE) Architecture to Enable the High-Speed Provider Edge;&#x201d; Cisco Systems, Inc.; Posted Mon. Oct. 1 23:46:26 PDT 2001; pp. 1-9.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00024">
<othercit>Van Campenhout, J., Van Marck, H., Depreitere, J. and Dambre, J; &#x201c;Optoelectronic FPGAs&#x201d;; IEEE Journal of Selected Topics in Quantum Electronics; vol. XX, No. Y; Mar. 1999; pp. 1-11.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>370389</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370392</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370412</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370400</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370401</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370402</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370393</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370475</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370413</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370329</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709238</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709265</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>10</number-of-drawing-sheets>
<number-of-figures>11</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>10298308</doc-number>
<date>20021118</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>7330468</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>12026650</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20080123654</doc-number>
<kind>A1</kind>
<date>20080529</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Tse-Au</last-name>
<first-name>Elizabeth Suet H.</first-name>
<address>
<city>Fair Haven</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Tse-Au</last-name>
<first-name>Elizabeth Suet H.</first-name>
<address>
<city>Fair Haven</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>AT&#x26;T Intellectual Property II, L.P.</orgname>
<role>02</role>
<address>
<city>Atlanta</city>
<state>GA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Pham</last-name>
<first-name>Brenda H</first-name>
<department>2464</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A multi-path router includes an interface module (IM) having a time-sensitive logical processing path and a non-time-sensitive logical processing path and a special needs logical processing path and a filter for receiving a packet header and determining the needs of the packet header and for selecting one of: the time-sensitive logical processing path, the non-time sensitive logical processing path and the special needs logical processing path in response to the needs of the packet header. The multi-path router further includes a router special needs agent (RSNA), adapted to receive a packet header having special needs services. The multi-path router can be used in a network which includes first and second networks coupled to the multi-path router and wherein the RSNA receives information from the special needs logical processing path and provides information to the IM on a return path.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="129.96mm" wi="160.61mm" file="US08625611-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="230.46mm" wi="173.06mm" file="US08625611-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="217.00mm" wi="162.90mm" orientation="landscape" file="US08625611-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="240.54mm" wi="175.77mm" orientation="landscape" file="US08625611-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="237.41mm" wi="166.62mm" orientation="landscape" file="US08625611-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="145.29mm" wi="172.97mm" file="US08625611-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="204.55mm" wi="141.99mm" orientation="landscape" file="US08625611-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="234.61mm" wi="170.26mm" orientation="landscape" file="US08625611-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="238.25mm" wi="178.14mm" orientation="landscape" file="US08625611-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="221.15mm" wi="146.64mm" orientation="landscape" file="US08625611-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="249.85mm" wi="171.11mm" orientation="landscape" file="US08625611-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 10/298,308 filed Nov. 18, 2002 now U.S. Pat. No. 7,330,468 entitled SCALABLE, RECONFIGURABLE ROUTERS, which has been allowed. The aforementioned related patent application is herein incorporated by reference.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">GOVERNMENT RIGHTS</heading>
<p id="p-0003" num="0002">Not Applicable.</p>
<heading id="h-0003" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0004" num="0003">This invention relates generally to routers and more particularly to a scalable and bi-directionally reconfigurable router architecture.</p>
<heading id="h-0004" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0005" num="0004">As is known in the art, &#x201c;a computer network&#x201d; or more simply &#x201c;a network&#x201d; is a connection of computer systems and peripheral devices that exchange data (or more generally information) as necessary to perform the specific function of the network. To exchange information, networks operate in accordance with a set of semantic and syntactic rules referred to as a protocol. One particular type of protocol is the Transmission Control Protocol/Internet Protocol (TCP/IP). When a network operates in accordance with the TCP/IP protocol it is typically referred to as an IP network.</p>
<p id="p-0006" num="0005">As is also known, a router is a device which interconnects two computer networks. When the networks correspond to IP networks, the router interconnects two computer networks that use a single network layer (layer 3) procedure but may use different data link layer and physical layer procedures. Routers are protocol dependent because they must be able to identify an address field within a specific network layer protocol.</p>
<p id="p-0007" num="0006">As improvements in network protocols, hardware speed and features occur, it is often necessary to upgrade routers to take advantage of such improvements. Thus, router hardware (HW) upgrade or more generally, network hardware expansion to accommodate end user demand on higher speed/capacity or more advanced set of QoS features is an important process to an IP network as well as other types of networks. With respect to IP networks, network hardware expansions/upgrades must be done to maintain an internet service provider's (ISP's) ability to continue to offer state-of-the-art value-added (and sometimes bandwidth intensive) IP services.</p>
<p id="p-0008" num="0007">There are in general three types of layers in an ISP network hierarchy: &#x201c;edge,&#x201d; &#x201c;hub,&#x201d; and &#x201c;backbone.&#x201d; Since the functionality required for every layer is different, to upgrade or expand router hardware, it must be done separately for each individual network layer. That is, router functionality required of an &#x201c;edge&#x201d; layer is different from router functionality required of a &#x201c;hub&#x201d; layer, which in turn is different from the router functionality required of a &#x201c;backbone&#x201d; layer. Hence internal architectures amongst the edge, hub or backbone routers today are vastly different from one another. With this difference in functionality and internal architecture, to perform field upgrades, it is often necessary to acquire new routers for each individual layer in the network hierarchy. The new routers also often need to be lab-tested to ensure interoperability with existing hardware and software, an often time-consuming effort before field deployment can be made possible.</p>
<p id="p-0009" num="0008">Assume, for example, that it is desired to perform network hardware expansion to add capacity to a router to accommodate more end users. This translates to adding more input/output (I/O) cards to expand the router's port capacity. However, it is not possible to add more I/O cards &#x201c;on demand&#x201d; without a new switch fabric (SF) replacement if the capacity for target expansion were not already built into the router SF at its first implementation. This is because capacity of most conventional router SFs (e.g. bus or crossbar) cannot be easily expanded on demand. Hence, considering the time and manpower consumption required to implement a replacement router SF, it is often less expensive to acquire a new router rather than utilizing the router SF replacement.</p>
<p id="p-0010" num="0009">Moreover, the functionalities of &#x201c;edge&#x201d;, &#x201c;hub&#x201d; and &#x201c;backbone&#x201d; routers cannot be interchanged without also undertaking the time-consuming task of altering internal router hardware architectures required to adapt to the functionality of each router at the &#x201c;target&#x201d; network layer. Consequently, other routers in the network are typically not available as hardware resources to rapidly address upgrade or expansion needs of the different layers.</p>
<p id="p-0011" num="0010">For example, an &#x201c;edge&#x201d; router cannot become a &#x201c;hub&#x201d; or &#x201c;backbone&#x201d; router without first undertaking a number of time-consuming and manpower-intensive modifications such as reconfiguring internal hardware architecture to take off or disable all internal quality of service (QoS) control plane functionalities and associated memories and database (for example, those for traffic policies/rules and network resource administration and management). Depending upon the original router hardware architectural implementation, this may involve physical alteration of internal hardware components such as dismantling of databases (e.g., tables) mounted on a computer board and installing new lookup functions to adapt to the hardware architectures appropriate for use as a backbone, and modification of internal packet-processing data paths through the router. In particular, it may be required to disable or dismantle physical wires that lead to a policy database/lookup table that is no longer useful in a &#x201c;backbone&#x201d; environment (e.g a policy database/lookup table such as packet prioritization based on rules). Also, if the data path were originally pipelined, the pipeline would need redesign since some pipeline stages must be skipped (or taken out) due to the disabling of the above-mentioned hardware components. Furthermore, such a pipeline modification may impact and thereby induce a change in the router's clock speed.</p>
<p id="p-0012" num="0011">Furthermore, each of the above steps is labor-intensive and thus costly and time-consuming. Hence, upgrade of backbone routers using edge routers is rarely if ever done due to the labor and expense of hardware architectural alteration/re-work necessary stemming from the completely different internal hardware designs for &#x201c;edge&#x201d; and &#x201c;hub/backbone&#x201d; routers in most vendor products. Thus, when a &#x201c;backbone&#x201d; router upgrade/expansion is desired or necessary, a new router is typically purchased.</p>
<p id="p-0013" num="0012">Similarly, it is also labor-intensive to adapt a &#x201c;backbone&#x201d; or &#x201c;hub&#x201d; router today for use as an &#x201c;edge&#x201d; router as it would entail the reversal of a number of the tasks listed above. For example, the process would include reconfiguring the router internal hardware architecture by installing quality of service (QoS) control plane functionalities and associated memories/databases on policies/rules, and network resource administration and management. Also, depending upon the desired target router hardware architectural implementation, the above-mentioned reconfiguration may also involve installing added databases and rewiring to accommodate added physical wires leading to the added databases/memories on a computer board, and if the packet-processing data path was pipelined, the pipeline must be redesigned to accommodate additional stages of database fetching/reading, making the pipeline longer and thus more complex, which could result in degradation of the overall performance of a router.</p>
<p id="p-0014" num="0013">One attempt to improve network performance has been to reduce the number of layers. The Cisco 12000 Series IP Server Engine, available from Cisco Systems, Inc. of San Jose Calif., leverages the distributed architecture of the chassis with features that allow service providers to reduce both the number of layers and the number of boxes in the POP. It collapses the access/aggregation and distribution layers into a single layer with dense (channelized 2.5 Gbps), all-optical aggregation of existing transmission technologies on the customer side and 10 Gbps upstream connections within the POP. The network is less complex because there are fewer overall connections and fewer devices to manage.</p>
<p id="p-0015" num="0014">Another problem which occurs is that a capacity/speed conversion or upgrade of an ISP network having multiple layers of network hierarchy often involves putting together different vendor equipment for the different network layers, as one vendor may not supply routers with different functionalities required for use in different layers of the network. For example, one vendor may specialize only in supplying routers for use at the &#x201c;edge&#x201d; layer but not the &#x201c;backbone&#x201d; layer, and vice versa. In such situations, lengthy and expensive network interoperability testing and field (confidence) testing must be conducted for the different equipment from different vendors in the different network layers. This results in a relatively long lead-time being required in the hardware expansion/upgrade process for all network layers. This is especially true when the expansion/upgrade involves new network features/functionalities. Hence, since router hardware expansion/upgrades must often be done network-wide for all network layers to ensure interoperability after the expansion/upgrade, the problem of costly and manpower intensive router hardware upgrades is exasperated with an increase in the numbers of network layers.</p>
<p id="p-0016" num="0015">Another problem is that since IP QoS control is distributed in each individual router in conventional systems, only hop-by-hop non-optimal, instead of global, view of QoS control is possible. With QoS control in its distributed form, conventional router hardware architectures cannot scale to include whole-path data storage capacity needed for network whole-path QoS provisioning within the router itself due to router size and/or central office space constraints, among other inefficiencies. The reason being that to provision conventional routers with global knowledge for network whole-path-related QoS control would mean enormous expense since it would be necessary to equip each router with numerous built-in databases that yield such network-wide information. Examples are: policy information base, path QoS state information base, flow information base, multicast tree/state control server, multicast tree/state information base, policy control server, among others. Such provisioning is difficult to achieve within the limited space of a router chassis and with equipment footprint size restriction inside the limited space of a central office for routers.</p>
<p id="p-0017" num="0016">Moreover, frequent and time-consuming synchronization of states amongst routers (often by message exchange in the form of a network protocol) is needed to ensure network-wide data/state coherence. With the inability to scale efficiently to include whole-path data storage capacity needed for network-wide QoS provisioning, an individual router has no global view of the bandwidth resource for arbitrary routes in the network. Consequently, it is highly inefficient for a router to provision value-added overall network-wide whole-path-related services such as IP-based VPN which involve routes elsewhere in the network the bandwidth resource status of which is not known to the router unless the router spends the time to &#x201c;ask&#x201d; for it via message exchange in the form of specific protocols.</p>
<p id="p-0018" num="0017">In view of the above, it is clear that conventional router hardware architectures are not designed for cost- and manpower-efficient network hardware expansions or upgrades. In most cases in which a network hardware expansion/upgrade corresponds to a router hardware expansion/upgrade, the router hardware expansion/upgrade is synonymous with purchasing new routers. This approach results in the expenditure of large amounts of capital and manpower resources, as well as long hours of &#x201c;costly&#x201d; downtime for all parties involved (e.g. ISPs and end users).</p>
<p id="p-0019" num="0018">The conventional processes for performing a network hardware expansion or upgrade are cost-inefficient and manpower intensive. Consequently, many companies (e.g. AT&#x26;T, Corp.) spend a tremendous amount of energy and resources in the process of network hardware expansions/upgrades.</p>
<p id="p-0020" num="0019">It would, therefore, be desirable to provide a system which allows network hardware expansion or upgrades (including router hardware expansions or upgrades) to be accomplished efficiently in terms of dollar and manpower resources. It would also be desirable to provide a system and technique which allows a router to be reconfigured as an &#x201c;edge&#x201d;, a &#x201c;hub&#x201d; or a &#x201c;backbone&#x201d; router on-demand in order to induce efficient network hardware expansion or upgrades even in the face of network layering complexity (e.g. ISP network layering complexity).</p>
<heading id="h-0005" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0021" num="0020">In accordance with the present invention, a multi-path router includes a filter for receiving a packet header (either the header alone or as part of the whole packet) and determining the needs of the packet header and for selecting one of: (1) a time-sensitive path, (2) a non-time-sensitive path and (3) a special needs path in response to the needs of the packet header. The multi-path router also includes a Router Special Needs Agent (RSNA), coupled to the filter and adapted to receive the packet headers (either alone or as part of the whole packets) having special needs services.</p>
<p id="p-0022" num="0021">With this particular arrangement, a multi-path router capable of rapid bi-directional hardware reconfigurability is provided. The RSNA component primarily performs the &#x201c;edge&#x201d; layer/(Quality of Service) QoS control plane functions and administers management and control for headers of packets with special (e.g., priority/network resource) requirements. In addition to QoS control plane, the RSNA also performs some data plane functions in the processing of the packet headers. By utilizing the RSNA as part of an overall router hardware architecture, the router is quickly &#x201c;bi-directionally&#x201d; interchangeable either downward as &#x201c;edge router&#x201d;, or upward as a &#x201c;hub or &#x201c;backbone router,&#x201d; and provides an immediate hardware resource suitable for use in all layers of a network hierarchy such as an internet service provider (ISP) network hierarchy, for example. The multi-path router thus allows speedy and yet manpower and cost-efficient network hardware expansions/upgrades and network emergency fixes/responses to be performed which is not possible with conventional router hardware architectures.</p>
<p id="p-0023" num="0022">The router hardware architectures of the present invention operate as follows. Every router in the network has a connection to the RSNA (which could be either internal or external to the router) and every router has two different operating modes: (1) an &#x201c;edge mode&#x201d; and (2) a &#x201c;hub/backbone mode.&#x201d; These two modes are mutually exclusive of each other. A router becomes an &#x201c;edge&#x201d; router and serves the edge functions by activating the &#x201c;edge&#x201d; mode within the router. This corresponds to turning on active CoS/QoS provisioning between the configurable router and the RSNA such that the RSNA provides active CoS/QoS provisioning for packets entering the router and such that the router operates in an edge router mode. Likewise, a router becomes a &#x201c;hub&#x201d; or &#x201c;backbone&#x201d; router by turning on the &#x201c;hub/backbone&#x201d; mode within the router. This corresponds to turning off active CoS/QoS provisioning by the RSNA such that the router operates in a hub/backbone router mode. This mode can include passive CoS/QoS provisioning. An I/O card speed adjustment for the two different modes can be done via reprogramming of a re-programmable interface module (IM) receiver (i.e., the I/O card &#x201c;slot&#x201d;) through a craft graphical user interface (GUI).</p>
<p id="p-0024" num="0023">The multi-path router also includes an interface module (IM) (or line card) adapted to be disposed in the IM receiver. The IM includes a forwarding engine. The packet/header processing functions within the forwarding engine located in each IM (e.g. header filtering, table lookup, packet queuing and scheduling) are provided from re-programmable hardware-based chips (e.g. field programmable gate arrays (FPGAs) and/or application specific integrated circuits (ASICs)) arranged in pipeline format to achieve very high speed processing; for example, one task per CPU cycle is possible, independent of incoming traffic rate.</p>
<p id="p-0025" num="0024">Internal packet header processing functions of the RSNA are also carried out via re-programmable hardware-based components (e.g., FPGAs, ASICs) arranged in pipeline format for very high speed packet (header) processing. Exemplary functions carried out via the programmable hardware-based components are packet header filtering, packet drop queuing, and packet drop priority table lookup. Thus, including reprogrammable components in the routers enables router adaptation on-demand to the constant changes of network features including IP network features.</p>
<p id="p-0026" num="0025">The router also includes a network interconnect module (NIM), i.e., a switch fabric. Three candidate switch fabrics can be used in the router architectures described hereinbelow. One switch fabric is of the &#x201c;indirect&#x201d; interconnection network (IN) family&#x2014;the Bi-directional Multistage Interconnection Network (BMIN). Two other switch fabrics are of the &#x201c;direct&#x201d; IN k-ary n-cube family&#x2014;the 2-ary, n-cube or hypercube, and k-ary 3-cube or 3-D Torus. All three switch fabric candidates are modular and can be expanded on-demand. However, expansion of the k-ary n-cubes requires that the desired IM/processor interface capability and channel bandwidth at the maximum expanded capacity to be pre-allocated to existing IMs and channels at the first implementation. The underlying reason is to accommodate the increase in traffic volume that comes with an increase in the number of IM resources after the expansion, whereas expansion of the BMIN can be done without disturbing the existing physical capacity of the existing MIN infrastructure.</p>
<p id="p-0027" num="0026">&#x201c;Edge&#x201d; mode, &#x201c;hub/backbone&#x201d; mode, and their relationship to the RSNA are further explained below. Briefly, however, the &#x201c;hub/backbone&#x201d; mode enables the router to filter incoming packets based on packet header &#x201c;tags&#x201d; that are previously administered by the RSNA in communication with the upstream &#x201c;edge&#x201d; router from which the packet came. In addition, depending upon implementation, this mode may either enable the router's RSNA connection to be turned &#x201c;off&#x201d; altogether or to still be &#x201c;on&#x201d; and enter passive QoS/CoS provisioning for packets. An example of implementation for this latter case could be as follows. When a router turns on the &#x201c;hub/backbone&#x201d; mode, it automatically sends a message to inform the RSNA that it is now in &#x201c;hub/backbone&#x201d; mode, and starts listening to and executing commands from the RSNA. The RSNA may request, for example, that the router reserve certain bandwidth capacity for an upcoming stream of packets with certain header &#x201c;tags.&#x201d;</p>
<p id="p-0028" num="0027">When the router operates in the &#x201c;edge&#x201d; mode, this enables the router's RSNA connection to be &#x201c;on&#x201d; which allows the router to communicate with the RSNA via a request/response session. A request to the RSNA is a packet header that needs classification or priority information. A response from the RSNA is a newly updated/&#x201c;tagged&#x201d; packet header. Moreover, &#x201c;edge&#x201d; mode operation enables the router itself to filter headers of incoming packets based on a predetermined set of rules, e.g., some combination of the following 5-tuples: source/destination IP addresses, source/destination port numbers and protocol, to determine if it's one of: (1) a &#x201c;special needs&#x201d; packet, (2) a &#x201c;non-time-sensitive&#x201d; packet; and (3) a &#x201c;regular&#x201d; packet.</p>
<p id="p-0029" num="0028">The details of each of the three types of packets mentioned above as well as the processing of each will be described below in conjunction with the figures. In general overview, however, the packet headers are separated into different logical paths for processing (e.g. one logical path for &#x201c;special needs&#x201d; packets, one logical path for &#x201c;non-time-sensitive&#x201d; packets, and one logical path, that is, the &#x201c;time-sensitive&#x201d; path, for &#x201c;regular&#x201d; packets). As will be explained below, in some cases the headers are updated while on the respective different logical processing paths. Once the headers return from their respective path, they are rejoined to their respective payloads and the whole packets go through the &#x201c;time-sensitive&#x201d; logical processing path of the router which physically comprises the router's data plane. In other words, all packets eventually go through the &#x201c;time sensitive&#x201d; logical processing path of the router. One exception to this rule is for those packets destined for the Network Processor Module (NPM) of the router. The overall effect of this path separation for processing packet headers with different needs is, hardware-wise, a much simplified and speedy data plane for processing all packets passing through the router.</p>
<p id="p-0030" num="0029">The above approach using the ON/OFF capability to the RSNA provides a router with rapid bi-directional reconfigurability which can be utilized either during either a network hardware expansion/upgrade or emergency situations, by turning on the router's &#x201c;edge&#x201d; mode or &#x201c;hub/backbone&#x201d; mode according to need (e.g. according to the need of an ISP).</p>
<p id="p-0031" num="0030">During emergency situations, for &#x201c;edge&#x201d; routers to act as a temporary &#x201c;hub&#x201d; or &#x201c;backbone&#x201d; router, the process includes grouping together several &#x201c;edge&#x201d; routers to meet the throughput requirements of a &#x201c;hub&#x201d; or &#x201c;backbone&#x201d; router, turning on each router's &#x201c;hub/backbone&#x201d; mode and adjusting each router's I/O line rates via reprogramming of the IM receivers as needed.</p>
<p id="p-0032" num="0031">During emergency situations for &#x201c;hub/backbone&#x201d; routers to act as temporary &#x201c;edge&#x201d; routers, the process includes turning on the &#x201c;edge&#x201d; mode of the hub/backbone&#x201d; router, and adjusting the router's I/O line rates via reprogramming of the IM receivers as needed to provide a desired (ideally the quickest) emergency fix/response turn-around time.</p>
<p id="p-0033" num="0032">One example of a network emergency situation occurs if some &#x201c;hub&#x201d; or &#x201c;backbone&#x201d; routers unexpectedly stop operating properly or at all. In this case, the network hierarchy can be quickly reconfigured such that some &#x201c;nearby&#x201d; &#x201c;edge&#x201d; routers can temporarily take over as &#x201c;hub&#x201d; or &#x201c;backbone&#x201d; routers and continue functioning, and vice-versa for the unexpected stop of an &#x201c;edge.&#x201d;</p>
<p id="p-0034" num="0033">During a network hardware expansion/upgrade operation to increase traffic throughput for &#x201c;hub/backbone&#x201d; routers, the process to automatically become an &#x201c;edge&#x201d; router includes turning on the &#x201c;hub/backbone&#x201d; router's &#x201c;edge&#x201d; mode and adjusting via reprogramming the I/O line rates of the IM receivers as needed to provide a desired (ideally the quickest) provisioning turn-around time.</p>
<p id="p-0035" num="0034">During a network hardware expansion/upgrade operation to increase traffic throughput for &#x201c;edge&#x201d; routers to become &#x201c;hub/backbone&#x201d; routers, the process includes turning on the &#x201c;hub/backbone&#x201d; mode of the router and adjusting line rates of the IM receivers as needed and either grouping together several &#x201c;edge&#x201d; routers to meet the throughput requirements of a &#x201c;hub&#x201d; or &#x201c;backbone&#x201d; router, or if time permits, by adding more IM receivers and wiring connections to expand the router switch fabric. It should be noted that the latter is possible only if the existing router's CPU has adequate processing power to handle the target line rates.</p>
<p id="p-0036" num="0035">By providing a router which can be rapidly bi-directionally reconfigured during network hardware expansion/upgrade or emergency situations (i.e. where a &#x201c;hub&#x201d; or &#x201c;backbone router&#x201d; can quickly turn into an &#x201c;edge&#x201d; router and vice-versa) the router architecture and processes of the present invention make network hardware expansion/upgrade and emergency fix/response independent of the number of layers within the network hierarchy (e.g. an ISP network hierarchy). This characteristic is difficult, if not impossible, to achieve with conventional router hardware architectures. In other words, the systems and processes described herein enable rapid, efficient network hardware expansion/upgrades and network emergency fix/responses even in the face of network layering complexity (e.g. ISP network layering complexity). The present invention thus not only saves manpower and capital-costs, also reduces the network downtime intervals during these network events for all parties involved (e.g. ISPs and end users).</p>
<p id="p-0037" num="0036">Furthermore, if the RSNA is implemented as an independent network component physically separate from the router, the invention yields the added benefit of a flexible, scalable and cost-effective hardware architecture which provides routers with global knowledge and information on an overall network path view needed to provision services that require network-wide QoS control. The router architectures described herein thus also enables routers to cost-effectively provision internet protocol (IP) services with quality of service (QoS) controls that require overall global network path view, such as customer-specific virtual private networks (VPNs), with individually different service-level agreements. Network whole-path based QoS control is difficult to achieve with conventional router hardware architectures since the QoS control is in distributed form within each individual router. Examples of overall global information are network-wide path resource reservation, capacity and path-state, these are needed to support optimal, meaningful network whole-path-based QoS service provisioning, such as multicasting and VPN.</p>
<p id="p-0038" num="0037">The rapid bi-directional reconfigurability/interchangeability for network hardware expansion/upgrade and emergencies, and other benefits mentioned above, cannot be achieved with conventional router hardware architectures. This is especially the case with network emergencies, such as sudden router malfunctioning or death since a common current solution of such a situation relies on network protocols (e.g., OSPF) to inform all other network routers of the topology update, to avoid the troubled router(s).</p>
<p id="p-0039" num="0038">The present invention also results in lower cost to perform network hardware expansion/upgrades including router hardware expansion/upgrades. In particular, significant savings in capital cost is achievable with the novel router architectures described herein since instead of having to buy new routers for network hardware expansion/upgrade and providing spares for network emergencies as is currently done, existing network routers can be reused and expanded upon. Further, additional savings are provided since the above described architecture using the RSNA significantly reduces cost (e.g., testing), manpower and turn-around time for network hardware expansion/upgrade and network emergency situations of every layer within the network hierarchy. Thus, having a router hardware architecture which can be rapidly scaled and bi-directionally reconfigured for all layers of the network hierarchy (i.e. edge, hub or backbone) simplifies, streamlines and reduces costs associated with expansion/upgrade and emergency fix/response process.</p>
<p id="p-0040" num="0039">In one embodiment, a multi-path router hardware architecture referred to as Baseline Reconfigurable Limited Scalable (BRLS) router which adheres to the concept of hardware scalability and bi-directional hardware reconfigurability via use of an internal RSNA is described.</p>
<p id="p-0041" num="0040">The BRLS model serves as a baseline architecture from which other hardware architectures for a scalable bi-directionally reconfigurable router can be developed. Such an architecture may be used to provide, for example, a scalable bi-directionally reconfigurable Internet Protocol (IP) router. An IP router provided in accordance with the BRLS model can be applied as a matching router hardware solution for the newly emerging concept of a single-layer IP network architecture.</p>
<p id="p-0042" num="0041">The BRLS also utilizes a switch fabric that is capable of incremental expandability. The BRLS uses switch fabric hardware, and re-programmable hardware capabilities that allow adaptation &#x201c;on-demand&#x201d; to the changing needs of IP and other networks.</p>
<p id="p-0043" num="0042">It should be appreciated, however, that architectural scalability of a BRLS router is largely limited to the router's data plane only and not the QoS control plane. This is due, at least in part, to the fact that it has a non-distributed router architecture with RSNA as part of the internal components of the router. The consequence is that the QoS control plane can't scale to include network whole path data storage capacity needed for network whole path QoS provisioning, but only hop-by-hop view for QoS control is possible.</p>
<p id="p-0044" num="0043">In another embodiment, a multi-path router architecture which utilizes an external RSNA (i.e. an RSNA which is external to the router hardware itself) is referred to herein as a one-architecture-fit-all scalable reconfigurable router (OSR). The RSNA is a distinct server/database entity responsible for the CoS/QoS control plane that dynamically provides packets with resources and reservation information pertaining to an overall network view.</p>
<p id="p-0045" num="0044">Like the BRLS architecture, the OSR architecture may also be used to provide, for example, a scalable bi-directionally reconfigurable Internet Protocol (IP) router which provides a router hardware solution for the newly emerging concept of a single-layer IP network architecture.</p>
<p id="p-0046" num="0045">The OSR achieves bi-directional hardware reconfigurability by its use of the external RSNA and also utilizes a switch fabric that is capable of incremental expandability, and thus corresponds to a scalable, bi-directionally reconfigurable router. The OSR uses switch fabric hardware, and re-programmable hardware capabilities that allow adaptation &#x201c;on-demand&#x201d; to the changing needs of IP and other networks.</p>
<p id="p-0047" num="0046">It should be appreciated, however, that architectural scalability of an OSR router is not limited to the router's data plane and can extend to the QoS control plane. This is due, at least in part, to the fact that the RSNA is a physically separate entity that can serve more than one OSR router in its network domain of responsibility and has overall (network) view of network topology information. The consequence is that the QoS control plane can scale to include network whole path data storage capacity needed for network whole path QoS provisioning.</p>
<p id="p-0048" num="0047">For both the BRLS and OSR embodiments, the RSNA function is always on for a BRLS or an OSR router designated as &#x201c;edge&#x201d;, but may be off for a BRLS or an OSR router designated as either &#x201c;hub&#x201d; or &#x201c;backbone.&#x201d; Bi-directional reconfigurability immediately follows with this on/off flexibility to the RSNA, which can be used either during network hardware expansion/upgrade or emergency situations.</p>
<p id="p-0049" num="0048">The BRLS and OSR hardware architectures make use of currently available state-of-the-art technology in the market place. The BRLS and OSR architectures are each arranged in a specific way to achieve speedy bi-directional reconfigurability/interchangeability to perform different roles on-demand depending on the router's desired physical placement in the network hierarchy. The architectures also provide for efficient scalability to adjust to network capacity growth demand with flexible adaptation to changing network features. End users benefit from shortened network hardware expansion/upgrade downtime interval. ISPs and other service providers benefit from shortened network hardware expansion/upgrade downtime interval and ability to harness router technology growth as well as other network technology growth. Network hardware and router vendors/developers benefit from the ability to directly address service provider needs.</p>
<p id="p-0050" num="0049">In still another embodiment, an architecture utilizes a hybrid reprogrammable chip technology with one being electronic FPGAs or ASICs and the other optoelectronic FPGAs. The architecture also uses a sensor technology to sense incoming traffic speed and based on the sensor result, to route traffic accordingly either via the &#x201c;almost all-optical&#x201d; or the &#x201c;electrical/optical&#x201d; hardware technology path through the router. The only non-optical part in the &#x201c;almost-all-optical&#x201d; processing path is the optoelectronic devices that implement the router's data plane functions within the IMs. This architecture provides all of the benefits of the BRLS and OSR architectures as explained above, as well as the benefit of an &#x201c;almost all-optical&#x201d; incoming-traffic-speed-independent hardware path for packet processing through the router.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0006" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0051" num="0050">The foregoing features of the invention, as well as the invention itself may be more fully understood from the following detailed description of the drawings, in which:</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of a network having a reconfigurable router;</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 2</figref> is a flow diagram for internet protocol (IP) packet forwarding tasks analysis;</p>
<p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram of an architecture for a Baseline Reconfigurable Limited Scalable (BRLS) Router;</p>
<p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. 4</figref> is a functional block diagram of a Baseline Reconfigurable Limited Scalable (BRLS) Router interface module (IM) and router which uses K-ary N-cube as the switch fabric;</p>
<p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. 5</figref> is a functional block diagram of a BRLS Router Internal showing three logical packet/header processing paths;</p>
<p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. 6</figref> is an overall network view diagram of a One-Architecture-Fit-All Scalable Reconfigurable Router (OSR);</p>
<p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. 7</figref> is a block diagram of an architecture for a One-Architecture-Fit-All Scalable Reconfigurable (OSR) router;</p>
<p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. 8</figref> is a functional block diagram of an OSR router using K-ary N-cube as the switch fabric and showing three logical packet/header processing paths;</p>
<p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. 9</figref> is a functional block diagram of a Router Special Needs Agent (RSNA) having an OSR or optoelectronic one-architecture-fit-all scalable reconfigurable (OOSR) router architecture;</p>
<p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. 10</figref> is a functional block diagram of an optoelectronic one-architecture-fit-all scalable reconfigurable (OOSR) router showing a speed-sensing general-purpose interface module (IM) receiver and dual intra-IM interconnection technologies; and</p>
<p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. 11</figref> is a functional block diagram of an Optoelectronic One-architecture-fit-all Scalable Reconfigurable (OOSR) Router.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0007" level="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
<p id="p-0063" num="0062">Before describing the present invention, it should be understood that reference is sometimes made herein to operation of the present invention in connection with internet protocol (IP) networks. Such reference is intended only for clarity and clearness in explanation and description and should not be construed as limiting. It should be understood by those of ordinary skill in the art, that the concepts, apparatus and techniques described herein find application in a wide variety of networks including but not limited to IP networks. Reference is also sometimes made herein to forwarding a packet header to a particular location within a router or to a router special needs agent (RSNA) or to a certain physical or logical path. It should also be understood that in some applications it may be desirable or even necessary to forward the entire packet rather than the packet header alone. Similarly, when reference is made to forwarding or processing a payload, it should be understood that in some applications it may be desirable or even necessary to forward the entire packet rather than the payload itself. Also, in some instances certain components/elements referred to herein below are described as being either implemented as hardware-based functional units or implemented as processors (i.e. implemented via software). It should be understood by those of ordinary skill in the art that most components/elements can be implemented in either hardware or software and that a variety of factors are considered in determining whether it is preferable to implement any particular components/elements in hardware or software.</p>
<p id="p-0064" num="0063">Referring now to <figref idref="DRAWINGS">FIG. 1</figref>, a first network <b>10</b> is coupled through a multi-path router <b>12</b> to a second network <b>14</b>. The first network may correspond, for example, to a local area network (LAN) and the second network may correspond, for example, to an internet. As will be explained in further detail below in conjunction with <figref idref="DRAWINGS">FIGS. 2-11</figref>, the multi-path router <b>12</b> is &#x201c;configurable&#x201d; meaning that it has the ability to be configured (or re-configured) &#x201c;downward&#x201d; as &#x201c;edge&#x201d; or &#x201c;upward&#x201d; as &#x201c;hub/backbone&#x201d; router on demand. Additionally, after being configured as an &#x201c;edge&#x201d; or a &#x201c;hub,&#x201d; the router can be re-configured back to its original arrangement/function. This means that if the router was originally arranged as an &#x201c;edge&#x201d; router it can be configured as a &#x201c;hub&#x201d; router and then later re-configured back to an &#x201c;edge&#x201d; router again. The reverse is also true, that is, the router may first be configured as a &#x201c;hub/backbone&#x201d; and then &#x201c;configured&#x201d; (or &#x201c;re-configured&#x201d;) as an &#x201c;edge&#x201d;. The router can be repeatedly configured and re-configured between &#x201c;edge&#x201d; and &#x201c;hub/backbone&#x201d; router configurations. Thus, the router is also said to be &#x201c;bi-directionally configurable&#x201d; (or &#x201c;bi-directionally re-configurable).&#x201d; With these characteristics, the router can be versatile depending upon its physical placement within a network hierarchy. The multi-path router of the present invention can be provided using a methodology for reconfigurability and seven basic principles of hardware scalability and hardware reconfigurability as described by E. S. H. Tse-Au in &#x201c;Design and Analysis of Scalable Reconfigurable IP Routers&#x201d;, Ph.D. Dissertation, Dept. of Computer Science, Stevens Institute of Technology, Nov. 19, 2001.</p>
<p id="p-0065" num="0064">Referring now to <figref idref="DRAWINGS">FIG. 2</figref>, a flow diagram of the fundamental packet processing/forwarding functions in a router is shown. The forwarding/processing operation of a packet <b>16</b> can be fundamentally partitioned into eight steps which reflect the basic requirements for IP header processing. As shown in steps <b>18</b> and <b>20</b>, an incoming packet is received and processed for level two (L2) and level three (L3) functions.</p>
<p id="p-0066" num="0065">As part of the L3 functions, the packet header is first filtered as shown in step <b>22</b>. The filtering includes but is not limited to basic error, header length and IP option checking. Next, in step <b>24</b> a packet header classification control step is performed in which the packet is subject to admission/security control, packet prioritization, MPLS labeling, tagging, resource re-configuration control (e.g., buffer/network path resource management and reservation).</p>
<p id="p-0067" num="0066">Packet classification is then performed as shown in step <b>26</b>. In this step the packets are classified according to the function to be performed and/or queuing priority as indicated by the header destination address, priority/restriction designation. An example of functions to be performed is those packet(s) to be dropped per the header tag indication. Next, in step <b>28</b> a packet forwarding process in which a forwarding table lookup step is performed for packet header update with new destination port, TTL, etc.</p>
<p id="p-0068" num="0067">The packet is then queued in step <b>30</b> per the classification made in step <b>26</b> and designated destination port in step <b>28</b> and then, as shown in step <b>32</b>, the packet is scheduled per the classification. Next, the packet is switched to and queued at the appropriate output port as shown in steps <b>34</b>, <b>36</b>.</p>
<p id="p-0069" num="0068">The QoS control plane functions are those functions associated with step <b>24</b>. Hence, &#x201c;edge&#x201d; routers must be able to perform steps <b>16</b> and <b>22</b>-<b>34</b> (i.e. eight steps) for packet processing including step <b>24</b> for the QoS control plane functions, whereas &#x201c;hub/backbone&#x201d; routers need all but step <b>24</b> in <figref idref="DRAWINGS">FIG. 2</figref>. In particular, the QoS control plane is responsible for but not limited to the setting of policies and rules for packet classification control, admission control, and network resource administration.</p>
<p id="p-0070" num="0069">Referring now to <figref idref="DRAWINGS">FIG. 3</figref>, a portion of a Baseline Reconfigurable Limited Scalable (BRLS) router <b>40</b> includes a router special need agent (RSNA) <b>42</b>. The RSNA <b>42</b> is a hardware component that is part of the router architecture that takes on functions of not only a Quality-of-Service (QoS) control plane, but also some data plane functions. Communication between the RSNA and other portions of the router is via request/response messages <b>44</b>.</p>
<p id="p-0071" num="0070">It should be noted that the RSNA <b>42</b> is part of the router's internal functional units. Other descriptions on possible implementation of the RSNA for a BRLS router are provided below. The BRLS router includes one or more general purpose IM receivers <b>46</b> each of which includes an IM or line card <b>48</b>. Each of the line cards <b>48</b> are coupled to (or in communication with) the RSNA <b>42</b> via request/response messages <b>44</b>.</p>
<p id="p-0072" num="0071">The IM receivers <b>46</b> are also coupled to a network interconnect module (NIM) <b>50</b> and a network processing module (NPM) <b>52</b>. The NIM <b>50</b> is the router's switch fabric and the NPM <b>52</b> is the router's network processor (or CPU). The RSNA <b>42</b> acquires topology information from the NPM <b>52</b>.</p>
<p id="p-0073" num="0072">A craft GUI <b>56</b> is coupled to the NPM <b>52</b>. Through the craft GUI, new algorithms or new administrative roles/policies can be rapidly installed into the appropriate functional units to adapt to changing features.</p>
<p id="p-0074" num="0073">Requests to the RSNA <b>42</b> are in the form of headers of packets that need to have &#x201c;classification tags&#x201d; according to its specific requirements. Similarly, response from the RSNA <b>42</b> is the &#x201c;newly tagged&#x201d; updated packet header itself.</p>
<p id="p-0075" num="0074">Classification tags are assigned, for example, by matching QoS/Class-of-Service (CoS) information, e.g., the TOS&#x2014;Type of Service&#x2014;byte, or the 5-tuples: source/destination IP address, source/destination port number, and protocol, indicated in the packet header according to the RSNA's internal data structures on classification rules and policies.</p>
<p id="p-0076" num="0075">Request/response sessions to the RSNA are triggered whenever an &#x201c;edge/ingress&#x201d; router receives a packet with a header indicating special service requirements that can't be fulfilled by processing through either the router's data plane or the router's central processing unit (CPU). The responses are preferable in the form of already updated packet headers. Thus, the router itself further processes the header by performing table lookup, integrating it with its payload and then queuing the packet according to updated &#x201c;instructions&#x201d; in the header.</p>
<p id="p-0077" num="0076">Hence, in addition to administering and provisioning policy and control, the RSNA <b>42</b> actually must identify/sort out individual headers of packets according to their special requirements and &#x201c;tag&#x201d; each according to its internal policies/rules, etc. that meet the requirement. The purpose of executing these data plane functions in the QoS control plane is to reduce the data plane functionality (in the router) to a &#x201c;bare minimum&#x201d; thereby achieving the uniformity of only having generic functions in the data plane for all routers, whichever kind of router it is: &#x201c;edge&#x201d;, &#x201c;hub&#x201d; or &#x201c;backbone&#x201d;. This thus provides one important concept to hardware reconfigurability: a unified internal hardware architecture of the &#x201c;Methodology for Reconfigurability&#x201d; as that term (i.e. the term reconfigurability) is explained in the above-identified Tse-Au thesis. For example, with RSNA taking on packet header updating functions, sophisticated packet classifiers are no longer needed, but rather only simple classify function suffices in the data forwarding path within any router, where speed is of the essence.</p>
<p id="p-0078" num="0077">In one embodiment, every router in the network has a connection to the RSNA. The RSNA function/connection is always ON for a router designated as &#x201c;edge&#x201d;, but may be OFF for a router designated as either &#x201c;hub&#x201d; or &#x201c;backbone&#x201d;, depending on implementation. One example of implementation that requires this connection to be ON for a router designated as &#x201c;hub&#x201d; or &#x201c;backbone&#x201d; is in I. Khalil, T. Braun, &#x201c;Implementation of a BW Broker for Dynamic End-to-End Resource Reservation in Outsourced Virtual Private Networks&#x201d;, Proceedings, 25th Annual IEEE Conference on Local Computer Networks, LCN 2000, pp. 511-519.</p>
<p id="p-0079" num="0078">As mentioned above in conjunction with <figref idref="DRAWINGS">FIG. 1</figref>, configurability (or reconfigurability) refers to the ability of a router to be (re-)configured &#x201c;downward&#x201d; as &#x201c;edge&#x201d; or &#x201c;upward&#x201d; as &#x201c;hub/backbone&#x201d; router. &#x201c;Bi-directional configurability&#x201d; (or &#x201c;bi-directional reconfigurability&#x201d;) refers to the ability of a router which is first configured as an &#x201c;edge&#x201d; to then be configured as a &#x201c;hub/backbone&#x201d; and then again as an &#x201c;edge&#x201d;. The reverse is also true, that is, the router may first be configured as a &#x201c;hub/backbone&#x201d; and then &#x201c;configured&#x201d; (or &#x201c;re-configured&#x201d;) as an &#x201c;edge&#x201d;. This ability to be repeatedly configured in either of two directions is referred to herein as &#x201c;bi-directionality.&#x201d; This ability immediately follows with the on/off flexibility provided by the RSNA. Thus, the router can be versatile depending on its physical placement within the ISP network hierarchy.</p>
<p id="p-0080" num="0079">Referring now to <figref idref="DRAWINGS">FIG. 4</figref>, a Baseline Reconfigurable Limited Scalable (BRLS) router <b>70</b> includes an interface module (IM) receiver <b>72</b> which contains an Interface Module (IM) <b>74</b> (i.e., the router's network interface or input/output line card); one or more (centralized) Network Processing Module(s) (NPMs) <b>76</b>; a CoS/QoS preserving Network Interconnect Module (NIM) <b>78</b>; and a Router Special Needs Agent (RSNA) <b>80</b>. The IM <b>74</b> and the RSNA <b>80</b> may be similar to the IM <b>48</b> and RSNA <b>42</b> of <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0081" num="0080">It should be appreciated that a BRLS router can be bi-directionally (re-)configured as &#x201c;hub&#x201d;, &#x201c;edge&#x201d;, or &#x201c;backbone&#x201d; router as desired, for example, during network hardware expansion/upgrade or emergency situations via use of not only the RSNA but also the general-purpose IM receiver <b>72</b>. Being general-purpose, this receiver is identical in all routers and allows IMs of any functionality (be it &#x201c;edge&#x201d;, &#x201c;backbone&#x201d; or &#x201c;hub&#x201d;) to be operationally compatible when inserted into the receiver in any BRLS router.</p>
<p id="p-0082" num="0081">All internal functional components of the BRLS router such as the logic level chips within the IM, are interconnected together via a high-speed electronic connection. It should be appreciated that the particular embodiment of the BRLS router shown in <figref idref="DRAWINGS">FIG. 4</figref> does not include any optical components although in some applications, it may be desirable or even necessary to provide the BRLS router having at least some optical components.</p>
<p id="p-0083" num="0082">Likewise, the interiors of each functional component within the RSNA, e.g., logic level chips as well as all channels interconnecting the functional components, are connected together via high-speed electronic connections. It should, however, be appreciated that in some applications it may be desirable or even necessary to provide the RSNA having at least some optical components. As the IM receiver is identical in all BRLS routers, the difference in throughput between an &#x201c;edge&#x201d; and a &#x201c;hub/backbone&#x201d; router is achieved using a modular interconnection. That is, an &#x201c;edge&#x201d; router will have a smaller number of IMs/IM receivers (thereby curtailing the amount of throughput) than a &#x201c;hub/backbone&#x201d; router.</p>
<p id="p-0084" num="0083">As shown in <figref idref="DRAWINGS">FIG. 3</figref>, request/response messaging actually takes place between each individual IM <b>48</b> (of the BRLS router) and the RSNA <b>42</b>. As also shown in <figref idref="DRAWINGS">FIG. 3</figref>, there exists a craft Graphical User Interface (GUI) <b>56</b> at the router's NPM <b>52</b>.</p>
<p id="p-0085" num="0084">In E. S. H. Tse-Au, &#x201c;Design and Analysis of Scalable Reconfigurable IP Routers&#x201d;, Ph.D. Dissertation, Dept. of Computer Science, Stevens Institute of Technology, Nov. 19, 2001, three candidate switch fabrics (SFs) are found to be capable of serving a scalable bi-directionally reconfigurable IP router. These switch fabrics are: hypercube, 3D Torus Mesh, and Multistage Interconnection Networks (MINs).</p>
<p id="p-0086" num="0085">Any of the above-three candidate SFs can be used in describing the hardware architecture of the present invention and two of the three SFs: (hypercube and 3D Torus Mesh) belong to a common class of Interconnection Networks (INs) called k-ary n-cubes. It should thus be noted that a k-ary n-cube was arbitrarily selected as the SF in the component descriptions provided herein below. Those of ordinary skill in the art should appreciate of course that a k-ary n-cube, a MIN or any switch fabric having the following characteristics could be used.
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0086">Shared (vs. dedicated) packet transfer hardware paths amongst all packets, but most importantly,</li>
        <li id="ul0002-0002" num="0087">Ease of incremental (hardware) expandability/contractibility with respect to the incremental space and/or incremental capacity requirements required on demand. Incremental capacity requirement refers to the notion that only the incremental amount of network capacity (e.g. number of hardware components, associated bandwidth requirements) needed to accommodate the incremental expansion at the moment must be considered in the expansion. A router hardware architecture that fulfills this requirement is one the existing infrastructure of which before the expansion doesn't need to already have the capacity desired at the maximum expanded configuration be pre-provisioned. Whereas incremental space requirements refer to the notion that only the required physical space be just enough to accommodate the incremental capacity needed for expansion at the moment must be considered.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0087" num="0088">The BRLS router of <figref idref="DRAWINGS">FIG. 4</figref> includes an intelligent re-programmable hardware-based forwarding engine a portion <b>84</b> of which is shown in <figref idref="DRAWINGS">FIG. 4</figref>. The forwarding engine is capable of forwarding and switching via the use of re-programmable hardware-based functional units, and also has one or more (software-based) processors to perform miscellaneous, non-time-sensitive tasks such as traffic statistic compilation and accounting. It performs all physical layer/MAC layer functions, functions for receiving/transmitting/processing ATM cells of fixed size, and multiprotocol data frames of any size. The forwarding engine also has primary responsibility for the distributed processing and forwarding of all packets going through the router. Depending upon its nature, there are in general three types of packets as follows.</p>
<p id="p-0088" num="0089">A first type of packet is known as a &#x201c;regular&#x201d; packet. &#x201c;Regular packets&#x201d; are those packets with no errors/IP options, or those not requiring special services such as priority queuing, packet drop, admission policy control, etc. This type of packet requires processing only through functions within the router's data plane.</p>
<p id="p-0089" num="0090">A second type of packet is known as a &#x201c;non-time-sensitive&#x201d; packet. &#x201c;Non-time-sensitive&#x201d; packets are those packets requiring attention of the NPM (i.e. packets going to the NPM). Such packets include, but are not limited to, packets with errors (so-called &#x201c;errored packets&#x201d;), IP options, those destined to the router itself (e.g. control packets) or those having an address which could not be found in the Tables Lookup of the router.</p>
<p id="p-0090" num="0091">A third type of packet is known as a &#x201c;special needs&#x201d; packet. &#x201c;Special needs&#x201d; packets are those packets with special processing requirements such as multicasting, broadcasting, MPLS, priority classification control, policy control, etc.</p>
<p id="p-0091" num="0092">Using the above background, an overall view of packet processing through the IM is provided. As shown in <figref idref="DRAWINGS">FIG. 4</figref>, upon entry to the router IM for Open Systems Interconnection (OSI) Level 3&#x2014;Network Layer processing <b>85</b>, a packet is stripped of its header <b>86</b> and the header goes through the initial packet filtering <b>88</b> and/or Tables Lookup functions <b>90</b> while the packet payload is stored in a buffer <b>87</b>. Based on result of this initial header filtering, packet header processing is separated into three different &#x201c;logical&#x201d; processing paths: a &#x201c;time-sensitive&#x201d; path <b>92</b>; a &#x201c;non-time-sensitive&#x201d; path <b>94</b>; and an RSNA &#x201c;special needs&#x201d; paths <b>96</b>. These paths are briefly described as follows:
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0000">
    <ul id="ul0004" list-style="none">
        <li id="ul0004-0001" num="0093">(a) the &#x201c;time-sensitive&#x201d; logical processing path is the path that physically comprises all functions in the data plane. As will become apparent from the description below of the &#x201c;non-time-sensitive&#x201d; and &#x201c;RSNA&#x201d; logical processing paths, the &#x201c;time-sensitive&#x201d; logical path is used by all three types of packets mentioned above. However, a vast majority of the packets that will be using this path are &#x201c;regular&#x201d; packets, since they don't require any special processing beyond that provided by the processing functions in the router's data plane. For &#x201c;regular&#x201d; packets, upon receipt of an output port address from Tables Lookup in the &#x201c;time-sensitive&#x201d; logical processing path, headers of these &#x201c;regular&#x201d; packets join their own payload at the Header/Payload Integration Unit <b>100</b>. &#x201c;Whole&#x201d; packets then go through the rest of the data plane functions in the &#x201c;time-sensitive&#x201d; logical processing path to be journeyed through the switch fabric (after packet queuing <b>102</b> and scheduling <b>104</b>) to the intended output port.</li>
        <li id="ul0004-0002" num="0094">(b) the &#x201c;non-time-sensitive&#x201d; logical processing path is used for processing errored packets and other packets requiring the attention of the NPM as well as those packets whose destination addresses are not found in the Tables Lookup. The &#x201c;non-time sensitive&#x201d; logical processing path for the errored packets and those other packets destined to the NPM itself is different than the &#x201c;non-time sensitive&#x201d; logical processing path for packets whose destination addresses are not found in the Tables Lookup function. Considering first those packets destined to the NPM itself (e.g. control packets), after passing through the packet filtering function <b>88</b>, stripped headers on the &#x201c;non-time sensitive&#x201d; logical processing path <b>94</b> rejoin their payloads at the Header/Payload Integration Unit <b>100</b>, and from that point on the rejoined &#x201c;whole&#x201d; packets go through the rest of the data plane functions for transfer to the NPM.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0092" num="0095">Considering next those packets with headers which contain destination addresses not found in the Tables Look-up Unit, after passing through the packet filtering function and the Tables Lookup function only the packet header will be forwarded to the NPM. The NPM will be described in detail further below. Suffice it here to say that the NPM has a master table of addresses and for packet headers with destination addresses that couldn't be found in the IM's forwarding table, the NPM does address lookup, updates the header and then sends the header back to the Tables Lookup unit of the originating IM to be processed again. The packet header is sent to the NPM by &#x201c;skipping&#x201d; over the Header/Payload Integration Unit <b>100</b> via path <b>93</b>. Payloads of the headers being sent to the NPM for address update remain in the input buffer <b>87</b> awaiting return of the headers. Thus, those packet headers with destination address not found in Tables Lookup are sent through the logically &#x201c;slow&#x201d; path to the NPM for address lookup and the input buffer stores payloads of these packets until the updated header returns from the NPM to the Tables Lookup.</p>
<p id="p-0093" num="0096">Upon return from the NPM on path <b>95</b>, the updated packet headers go through Table Lookup <b>90</b> in the &#x201c;time-sensitive&#x201d; logical processing path to get output port assignments. Once the port assignments are provided, the corresponding payloads are sent to the Header/Payload Integration Unit on path <b>97</b> and the header rejoins the payload at the Header/Payload Integration Unit <b>100</b>. From that point on, rejoined &#x201c;whole&#x201d; packets go through the rest of the data plane functions in the &#x201c;time-sensitive&#x201d; logical processing path to be journeyed through the switch fabric (after packet queuing <b>102</b> and scheduling <b>104</b>) to the intended output port.
<ul id="ul0005" list-style="none">
    <li id="ul0005-0001" num="0000">
    <ul id="ul0006" list-style="none">
        <li id="ul0006-0001" num="0097">(c) The RSNA path is used for processing packets the headers of which indicate &#x201c;special needs.&#x201d; Packet headers that are processed through this path journey to the RSNA for packet header &#x201c;tag update&#x201d; via the request/response communication session. Upon return from the RSNA <b>98</b>, the updated header then goes through the rest of the data plane functions in the &#x201c;time sensitive&#x201d; logical processing path starting with Tables Lookup through it's journey across the switch fabric (after packet queuing <b>102</b> and scheduling <b>104</b>) to the intended output port.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0094" num="0098">In view of the above, it should thus be appreciated that while the packet headers are separated into different logical paths for processing (e.g. the three logical paths described above). However, once updated headers return from all three paths, they will rejoin their respective payloads and the &#x201c;whole&#x201d; packets go through the rest of the &#x201c;time-sensitive&#x201d; logical processing path. In other words, all packets (except for those destined for the NPM itself) eventually go through the &#x201c;time sensitive&#x201d; logical processing path. The overall effect of this path separation for processing headers with different needs is, hardware-wise, a much simplified and speedy data plane for processing all packets passing through the router.</p>
<p id="p-0095" num="0099">Part of the IM is a media/speed neutral general-purpose IM receiver that supports all interfaces and speeds which a BRLS router supports. One example of a general purpose IM receiver is Juniper router's IM receiver in its M20 gigabit edge/backbone routers and M40 gigabit backbone routers, respectively capable of 20 Gbps and 40 Gbps aggregated speed. The IM receiver design for these two routers are exact replica of each other such that all physical IMs supported by the two routers can be interchangeable in the two routers' chassis.</p>
<p id="p-0096" num="0100">For the IMs in the BRLS router, the IM receivers will have N: 1 sparring (i.e., there's one hot standby for every N IM receivers) and an IM will be hot swappable.</p>
<p id="p-0097" num="0101">To compliment the general-purpose IM receiver concept, IMs that are &#x201c;fully capable&#x201d; are necessary to serve the &#x201c;edge&#x201d;, &#x201c;hub&#x201d; and &#x201c;backbone&#x201d; function in an IP network. &#x201c;Fully capable&#x201d; is the ability to do at least the following: (a) adaptation to a multiplicity of connection technologies; (b) channelization to a multiplicity of speed requirements under the multiple connection technologies (e.g., GE, DSL); and (c) multiplexing/de-multiplexing.</p>
<p id="p-0098" num="0102">At this point in time, the aggregate speed of channelization for &#x201c;edge&#x201d; routers is at most OC12 but the current industrial trend is to increase the aggregate speed to OC192 while retaining the channelization capability over the OC192&#x2192;fractional T1/DS0 spectrum, and flexible adaptation to heterogeneous connection technologies. Hence, the notion of &#x201c;fully capable&#x201d; IMs will continue to improve as channelization technology under multiple connection types matures over the next few years.</p>
<p id="p-0099" num="0103">Router architectural scalability is addressed by complete functional partitioning of all functions for the packet-forwarding path within the forwarding engine. Examples are filtering, table lookup, queuing, scheduling. Each of these functions has its own dedicated data structures and memory capacity needed to perform its specific operation, is implemented as hardware-based algorithms using (re-)programmable hardware such as Field Programmable Gate Arrays (FPGAs) and re-programmable Application-Specific Integrated Circuits (ASICs), and is arranged in pipeline fashion for efficient packet/header processing. In preferred embodiments, a craft GUI interface is utilized to (re-)program as needed all of the (re-)programmable hardware-based functions to adapt to the dynamic needs of a network (e.g. an IP network) to respond to the continuous network feature changes and traffic growth demand.</p>
<p id="p-0100" num="0104">The header/payload integration unit <b>100</b> is not part of the fundamental packet-forwarding functions, but can also be implemented via hardware based algorithms. The integration unit performs two major operations: (a) integration of updated packet headers (with the new routing information) back to the corresponding packet payload; and (b) based on the new routing information, segmenting an entire packet into fixed-size units and assigning each fixed-size unit a packet identifier (for packet re-assembly purposes) in preparation for packet queuing and scheduling for transfer through the SF.</p>
<p id="p-0101" num="0105">In case of multicasting, the RSNA <b>80</b> is responsible for producing multiple packet headers needed for the different destinations in a multicast session. Whereas the header/payload integration unit is responsible for producing the corresponding number of packet payloads <b>106</b>, keeping track of and integrating each payload to its corresponding updated header when it arrives back from the RSNA. When the new routing information for the packet is obtained during integration, the header/payload integration unit then treats each packet in a multicast session as a normal packet. It segments each into fix-sized unit, assigns each unit with packet identifier based on the new routing information, and queue the fix-sized unit per this identifier for preparation to transport through the SF for the multiple destinations in the multicast session. The exact details of how the two main operations (listed above) are done or the size of the fix-sized unit, is implementation dependent.</p>
<p id="p-0102" num="0106">The output link controller <b>108</b> is responsible for scheduling the use of output links (or uplinks) to output packets from various input (down)links. To address the anticipated need for assigning packets with possibly a wide range of incoming speeds to uplinks that also differ widely in BW capacities in future IP traffic environments, a brief overview of the scheduling method used by this output link controller is provided. For the following discussion, it is assumed that each input (down) link will not carry input traffic with speed greater than (&#x3e;) the nominal bandwidth (BW) of that input link. However, input (down)links can carry input traffic with speed less than (&#x3c;) its nominal BW capacity. As a general design rule-of-thumb a downlink should always be assigned an uplink the BW capacity of which is at least equal to itself, not lower, unless: (a) the incoming packet speed from this downlink is &#x201c;detected&#x201d; to be&#x2266;the nominal BW capacity of an uplink that has a lower nominal BW capacity than that of this downlink; or (b) the incoming packet speed from this downlink is &#x201c;detected&#x201d; to be&#x3e;the nominal BW capacity of an uplink that has a lower nominal BW capacity than this downlink nominal BW capacity, and there exists a network emergency, such as when the current uplink being used is dead and no other uplink of comparable speed is available.</p>
<p id="p-0103" num="0107">Hence, to accommodate congestion or unforeseen network events, there are in general two assignment methods an output link controller can use: (a) when all uplinks have similar or higher nominal BW capacity than any one of the downlinks, assign each downlink a designated primary and secondary uplink. Then assign an output packet to its secondary uplink if its designated uplink is congested or malfunctions. This method of assignment induces the effect that all uplinks are used in parallel, so that the net achievable theoretical output is the aggregate BW capacity of all the uplinks during normal operation; and (b) when&#x2267;1 uplinks have lower nominal BW capacity than&#x2267;1 downlink(s)', assign an output packet to an uplink based on packet's incoming traffic speed or incoming link BW capacity as follows: (1) if the downlink nominal BW capacity from which the packet came is&#x2266; any of the output (up)link's nominal BW capacity, assign the packet from this downlink as in Method (a); else (&#x2203; uplink(s) the nominal BW capacity of which is &#x3c; this downlink's own), then assign an output packet to an available uplink the nominal BW capacity of which is&#x2267; the packet's &#x201c;detected&#x201d; incoming traffic speed (for this case, &#x2203; no concept of primary or secondary uplink).</p>
<p id="p-0104" num="0108">This method of assignment induces the net effect that lower speed input traffic will go to lower nominal BW capacity output (up)links, including the &#x201c;lower&#x201d; speed packets that came in through a high nominal BW capacity input (down)link; and higher speed input traffic will go to higher nominal BW capacity output (up)links during normal operation.</p>
<p id="p-0105" num="0109">It should be noted that the scenario described in method (b) above is possible in a router with downlinks that vary widely in speed limits (e.g., DS0 and OC192) and with uplinks that are of comparably large difference in speed range. In such scenarios, lower speed input traffic is assigned an output (up)link of relatively lower BW capacity and higher speed input traffic is assigned an output (up)link of relatively higher BW capacity under normal operations. Of the two, method (a) is currently the norm as the BW capacity of uplinks today is at least the same as the BW capacity of any one downlink within the same router.</p>
<p id="p-0106" num="0110">The set of output buffers <b>108</b> include packet reassembly buffers for re-assembling each segmented packet back together, re-sequencing buffers for the purposes of packet re-ordering to meet in-order delivery requirement, and smoothing buffers to meet QoS provisioning needs, before transporting packets into the output link. These output buffers temporally hold not only (reassembled) packets that are destined to the output, but also &#x201c;transit (segmented) fix-sized units&#x201d; of packets that come from some IMs and destined to other IMs. This is due to the fact that all IMs serve as intermediate IMs for some (segments of) packets in a k-ary n-cube SF. Within an intermediate IM, a routing decision must be made to select the (next channel or) next IM to route the (segmented) packet to as part of its journey to destination IM. These &#x201c;transit fix-sized units&#x201d; go through table lookup to make a routing decision as to which channel to route to in its next hop to destination IM. This type of table lookup would be based on header &#x201c;tags&#x201d; and therefore require the availability of only simple routing/classification information to perform the routing task. Upon completion of table lookup, these &#x201c;transit fix-sized units&#x201d; go through queuing and scheduling again for switching through the k-ary n-cube SF.</p>
<p id="p-0107" num="0111">The RSNA <b>80</b> is an independent functional component that is part of the internal router architecture. It is responsible for the CoS/QoS Control Plane, and some amount of data plane functions, and provides packets with resource and reservation information pertaining to hop-by-hop view of the network.</p>
<p id="p-0108" num="0112">One example of a data plane function is the production of multiple packet headers needed for the different destinations in a multicast session at the receipt of an IP packet header having a multicast requirement. As previously described, the RSNA communicates with the IMs via request/response messages. The &#x201c;request&#x201d; being a packet header that needs to be &#x201c;tagged&#x201d;; and the &#x201c;response&#x201d; being the &#x201c;newly tagged&#x201d; updated packet header itself.</p>
<p id="p-0109" num="0113">The RSNA <b>80</b> coordinates with the Network Processing Modules (NPMs) <b>76</b>, to obtain updated network topology information for use with its rules/policies. Communication with the NPM could be via file transfer format, to accommodate large topology tables that may be required at times, or could be via request-response format if small amount of information exchange is involved, or both, depending upon implementation. To induce parallelism of operation, packet headers with different QoS/CoS policy requirements are processed in different queues. Within each queue that processes headers of packets with similar requirements, all functional units, i.e., algorithms such as table lookup and scheduling per the QoS/CoS requirements indicated in the header, are (re-)programmable hardware-based and are arranged in pipeline format for efficient packet header processing. Furthermore, these internal functions are interconnected to one another via electrical channels.</p>
<p id="p-0110" num="0114">As the internal algorithms are re-programmable hardware-based, the craft GUI interface <b>82</b> through the NPM <b>76</b> is available for re-programming purposes. This interface <b>82</b> is also used to (re-)configure new policies/classification rules to the RSNA's internal data structures to accommodate the increasingly sophisticated and dynamic QoS provisioning needs over IP.</p>
<p id="p-0111" num="0115">The Network Processing Module (NPM) <b>76</b> is a control engine primarily responsible for master route table maintenance, &#x201c;external&#x201d; routing protocol operations with other routers within an IP network, &#x201c;internal&#x201d; routing protocol operations of the SF, and processing of non-time-sensitive/exception condition tasks, e.g., management and error protocol operations. Examples of &#x201c;external&#x201d; routing, error and management protocols processed by the NPM(s) are ICMP, RIP, OSPF, BGP, SNMP, ARP, RARP, etc. (The type of internal routing protocols varies with the type of SF used.) The NPM doesn't perform any packet forwarding function. As mentioned above, for packet headers with destination addresses that couldn't be found in the IM's forwarding table, NPM does address lookup, updates the header and then sends the header back to the Tables Lookup unit of the originating IM to be processed again. Moreover, the NPM provides a craft GUI for router management, maintenance and programming interface to (re-)program, i.e., (re-)configure, all hardware (either ASIC and/or FPGA)-based algorithms in each IM and in the RSNA. Examples of hardware-based algorithms are packet filtering, packet queuing based on tags, media-specific algorithms, table lookup, and configuration of new policies/rules (this last item applies for the RSNA only, not the IM). As the router NIM is all electrical, the NPM has a corresponding electrical SF channel interface.</p>
<p id="p-0112" num="0116">Other tasks that NPM performs are: (a) notification and distribution of updated network topology, multicasting, unicasting, other (hop-by-hop view) path information to RSNA; (b) packets with IP options; (c) frame relay mapping operations; (d) distribution of updated route tables for &#x201c;external&#x201d; IP network routing to the IMs; (e) distribution of updated route tables to the IMs for &#x201c;internal&#x201d; SF routing (e.g., the best routes using Wormhole routing to get from a source to a destination IM to avoid faulty conditions within the k-ary n-cube SF); and (f) distribution of (new) programs to each hardware-based algorithm within each IM and the RSNA;</p>
<p id="p-0113" num="0117">It should be noted that ARP/RARP/Frame Relay Mapping operations are not considered time-sensitive protocol operations in this proposal and thus are processed by the NPM. Packets with these needs are in the minority and the implementation of their operations and associated lookup tables at each IM (i.e., at the time-sensitive path) may delay other &#x201c;time-sensitive&#x201d; operations that must get done within the IM.</p>
<p id="p-0114" num="0118">Due to the non-time-sensitive nature of task processing by the NPM, a general-purpose CPU can be used to satisfy its processing needs. To address the need for redundancy in case of failure, there will be a second active standby NPM within the NIM infrastructure (described below).</p>
<p id="p-0115" num="0119">The network interconnected module (NIM) <b>78</b> is an interconnection infrastructure that connects amongst the intelligent IMs and Network Processing Modules (and also the RSNA in this architecture) via bi-directional electrical channels. Using K-ary n-cube as the SF, the NIM is capable of incremental hardware expandability and hence IMs can be added to scale according to traffic capacity growth. The NIM's responsibilities include: (1) transfer of (segments of) &#x201c;regular&#x201d; packets, i.e., those with no &#x201c;special needs&#x201d; and &#x201c;special needs&#x201d; packets (that are already &#x201c;tagged&#x201d; by and have returned from the RSNA) between input IM and output IM (these two types of packets can therefore be processed via the &#x201c;time-sensitive&#x201d; path); (2) transfer of packet headers with &#x201c;special needs&#x201d; to the RSNA; (3) transfer of (segments of) control packets or (segments of) packets between IMs/RSNA and the NPM(s), e.g., those that can be processed via the &#x201c;non-time-sensitive&#x201d; path, such as (updated/new) programs to (re-)program the (re-)programmable hardware-based functions within the IMs and the RSNA and updated routing information (external or internal) to the IMs; and (4) occasional transfer of packet headers (either &#x201c;regular&#x201d; or &#x201c;special needs&#x201d;) between the IMs and NPM(s) for which the destination address could not be found in the forwarding table.</p>
<p id="p-0116" num="0120">It should be appreciated that all connections between RSNA and NPM(s), and between RSNA and IMs are actually part of the NIM. However, as <figref idref="DRAWINGS">FIG. 4</figref> is a functional diagram, they are drawn away from the NIM to clearly illustrate their functional interworking relationship.</p>
<p id="p-0117" num="0121">Provided below is a description of how the BRLS router hardware architecture provides for (1)hardware scalability to grow and adjust according to the network capacity growth demand with flexible adaptation to changing IP network features; and (2) bi-directional hardware reconfigurability to perform different roles depending on router's physical placement in the ISP network hierarchy: &#x201c;edge&#x201d;, &#x201c;backbone&#x201d; or &#x201c;hub&#x201d; layer.</p>
<p id="p-0118" num="0122">In particular, an explanation is provided for the latter how this solution can be used for efficient hardware expansion and feature/speed conversion, such as during network hardware expansion/upgrade and emergency network rescue situations.</p>
<p id="p-0119" num="0123">(1) Hardware Scalability: The BRLS router described above is readily implementable with the current state-of-the-art technology. Within the BRLS framework, the ability to accommodate a feature-rich set of QoS capabilities and with increasing throughput requirement can be addressed by use of reprogrammable hardware-based functional units in the BRLS router and in the associated RSNA. The reprogrammable hardware-based functional units enable reprogramming of up-to-date entries to &#x201c;appropriate&#x201d; tables and algorithms for fast table search to provide appropriate QoS features. Scalability to meet increasing throughput demands is further provided by the partitioning and pipelining of each (re-)programmable hardware-based function used in the packet (or header) processing paths within the BRLS router and the associated RSNA. For example, with a full pipeline, one task per CPU cycle could be achieved. This arrangement allows parallelism of operation, divides and conquers, and thus enables the BRLS router and the associated RSNA the ability to process traffic efficiently at very high speed in a traffic-volume independent manner.</p>
<p id="p-0120" num="0124">As the SF to be employed by the BRLS router is capable of incremental hardware expandability (k-ary n-cube or MIN&#x2014;Multistage Interconnection Network), the BRLS router also has the HW flexibility to add I/O ports and adjust according to traffic capacity growth demands. Moreover, reprogrammability of the individual functional units within the router and within the associated RSNA provide for flexible adaptation to the constant changes in QoS/CoS provisioning needs along with exponential traffic growth within an IP network.</p>
<p id="p-0121" num="0125">Per the above description of the packet-forwarding path's setup within the BRLS router and the RSNA component, and the notion that BRLS utilizes SFs capable of incremental hardware expandability, hardware scalability to high traffic volume ensues in the data plane. However, even though the RSNA by itself can handle a large volume of traffic, the fact that it is part of the router internal architecture limits the router's QoS control plane scalability.</p>
<p id="p-0122" num="0126">As IP networks evolve to provide continuously more QoS/CoS-based service offerings that require overall network view information, a built-in RSNA function as part of the router simply will not be able to scale in terms of expansion, to the whole path data storage capacity needed to meet this demand. Only a hop-by-hop non-optimal view of network resource capability could be offered in this built-in configuration, and hence the need for global synchronization of state among routers in the network. A built-in RSNA function also increases the implementation complexity, as RSNA must be integrated/evolve with other router internal functions. For example, in the case of faster RSNA QoS/CoS table lookup algorithms, once one router upgrades to it, then all routers in the network must upgrade to it in order to be able to communicate with one another. Any policy change will also involve effort to upgrade all routers in the network.</p>
<p id="p-0123" num="0127">(2) Bi-directional Reconfigurability: Bi-directional reconfigurability is achieved with the on/off flexibility provided by every router's connection to the RSNA. This bi-directional reconfigurability can be used either during network hardware expansion/upgrade or emergency situations. During emergency situations, the bi-directional reconfigurability is used to turn &#x201c;edge&#x201d; routers into &#x201c;hub/backbone&#x201d; routers by clustering together several &#x201c;edge&#x201d; routers to meet the throughput requirements of a &#x201c;hub/backbone&#x201d; and to turn &#x201c;off&#x201d; the RSNA (as called for by the implementation) and to have &#x201c;Hub/backbone&#x201d; routers act as &#x201c;temporary&#x201d; edge routers by simply turning &#x201c;on&#x201d; the RSNA.</p>
<p id="p-0124" num="0128">During a network hardware upgrade/expansion operation to increase traffic throughput for &#x201c;Hub/backbone&#x201d; routers to automatically become new &#x201c;edge&#x201d; routers is accomplished by turning &#x201c;on&#x201d; the RSNA, providing the quickest provisioning turn-around time. &#x201c;Edge&#x201d; routers become &#x201c;hub/backbone&#x201d; routers by adding more IM receivers, IMs and channels, and by turning &#x201c;off&#x201d; the RSNA (as called for by the implementation). It should be noted that the limit on the top number of receivers is bounded by engineering choice in practice. Moreover, if k-ary n-cube is used as the SF, the above addition can be made possible only if the existing IMs and channel wires in the existing NIM infrastructure have enough capacity ready for expansion when first implemented. This means that existing IMs should have a sufficient number of interface pin outs and existing channels should have sufficient BW capacity to cope with the increased traffic volume resulting from an increased number of IM traffic sources.</p>
<p id="p-0125" num="0129">Referring now to <figref idref="DRAWINGS">FIG. 5</figref>, in which like elements of <figref idref="DRAWINGS">FIG. 4</figref> are provided having like reference designations, a Baseline Reconfigurable Limited Scalable (BRLS) router is shown. The router is similar to the BRLS router described above in conjunction with <figref idref="DRAWINGS">FIG. 4</figref> except that in this embodiment, the switch fabric used for the NIM <b>78</b> is implemented as a multistage interconnection network (MIN). As mentioned above, the MIN switch fabric is capable of serving as a scalable reconfigurable (and bi-directionally reconfigurable) router including a scalable reconfigurable IP router.</p>
<p id="p-0126" num="0130">It should be noted that when the k-ary N-cube switch fabric is used, transit traffic propagates between the NIM <b>78</b> and the output link controller and buffers <b>108</b> in each IM. When MIN switch fabric is used, however, no such path exists. Thus, one difference between the k-ary n-cube and BMIN SFs is that no transit traffic is possible through the IM, as all transit traffic visits the intermediate switching elements (SEs) only. Consequently, output buffers in the IM are not used to buffer any (segments of) transit packets in a BMIN SF.</p>
<p id="p-0127" num="0131">It should be appreciated that the functional description and architectural layout for the BRLS architecture using the k-ary n-cube SF described above in conjunction with <figref idref="DRAWINGS">FIG. 4</figref> in general applies to that for the BRLS using the bi-directional MIN (BMIN) SF shown in <figref idref="DRAWINGS">FIG. 5</figref>. Differences are explained below.</p>
<p id="p-0128" num="0132">The NIM is a bi-directional MIN consisting of the N&#xd7;N entities that are IMs, NPM(s) and RSNA, interconnected together via O(N log<sub>b </sub>N) intermediate switching elements (SEs) and O(N) bi-directional electrical channels. The SEs are implemented with (re-)programmable hardware components such as ASICs or FPGAs.</p>
<p id="p-0129" num="0133">It should be noted that the number of IMs/NPM(s) residing in each of the N&#xd7;N entities, as well as the BMIN interconnection pattern is implementation dependent. Moreover, the NIM can use more than one BMIN to provide QoS/CoS and fault-tolerance. Other functional descriptions of the NIM for a BRLS router using k-ary n-cube SF hold for the BRLS router using BMIN SF.</p>
<p id="p-0130" num="0134">The functions of packet queuing and scheduling are also needed inside the IM rather than relegating them entirely to the SEs, to exercise the principle of divide and conquer as explained in the Tse-Au thesis referenced earlier. Packet queuing and scheduling inside the IM is to accommodate the possibility of QoS/CoS provisioning needs for (some) packets, whereas packet queuing (and any scheduling) inside SEs accommodates the case of internal blocking and path sharing that are characteristic of some types of BMINs. The result of applying the divide and conquer principle greatly simplifies the implementation and packet switching process of the SEs. For example, SEs no longer need to perform initial packet QoS prioritization based on policies/rules. This lessens the delay of this potential switching bottleneck in a packet's path to destination.</p>
<p id="p-0131" num="0135">The set of output buffers within an IM includes reassembly buffers to reassemble segmented packets, and packet smoothing buffers to meet QoS provisioning/service level agreements (SLA) guarantee requirements. Moreover, it also includes packet re-sequencing buffers to accommodate scenarios in which packets can be delivered OOO due to techniques employed to overcome hot spot traffic conditions in MINs, such as during uplink access.</p>
<p id="p-0132" num="0136">Output link schedulers are needed in each IM to properly schedule packets to available output links during network congestion or emergency situations.</p>
<p id="p-0133" num="0137">Based on the above descriptions for the M, all IM architectural components remain the same as used for the case when the NIM is a direct network k-ary n-cube. Thus, the principle of hardware reconfigurability (availability of a unified internal hardware architecture) has been applied to achieve a unified internal hardware architecture for the IM, thereby resulting in a reconfigurable IM functional architecture in any level of the network hierarchy capable of interconnecting to either direct or indirect NIMs.</p>
<p id="p-0134" num="0138">Assuming self-routing property, NPM(s) need not distribute an internal SF routing table.</p>
<p id="p-0135" num="0139">It should be noted that in <figref idref="DRAWINGS">FIG. 5</figref>, all connections between the RSNA and NPM(s), and between RSNA and IMs are actually part of the NIM. As <figref idref="DRAWINGS">FIG. 5</figref> is a functional block diagram, they are drawn away from the NIM to clearly illustrate their functional interworking relationship.</p>
<p id="p-0136" num="0140">Referring now to <figref idref="DRAWINGS">FIG. 6</figref>, a network includes a plurality of user nodes <b>130</b><i>a</i>-<b>130</b>N coupled via a local area network (LAN) <b>132</b>. The LAN <b>132</b>, in turn is coupled to an &#x201c;edge&#x201d; router <b>134</b> which receives packets transmitted thereto. The &#x201c;edge&#x201d; router is coupled to a &#x201c;hub&#x201d; router <b>136</b> which is in turn coupled to a &#x201c;backbone&#x201d; router <b>138</b> which provides a path to the Internet <b>140</b>. Each of the edge, &#x201c;hub&#x201d; and &#x201c;backbone&#x201d; routers is coupled to an external router special needs agent (RSNA) <b>142</b>. Thus, there is a connection to the RSNA from each router in the network (e.g. via request/response sessions <b>144</b>-<b>148</b> with the IMs of each of the respective routers). A router architecture which utilizes an external RSNA is referred to herein as a one-architecture-fit-all scalable reconfigurable router (OSR).</p>
<p id="p-0137" num="0141">The RSNA function is always on for an OSR router designated as &#x201c;edge&#x201d;, but may be off for an OSR router designated as either &#x201c;hub&#x201d; or &#x201c;backbone.&#x201d; Bi-directional reconfigurability immediately follows with this on/off flexibility to the RSNA, which can be used either during network hardware expansion/upgrade or emergency situations.</p>
<p id="p-0138" num="0142">For example, if a &#x201c;hub&#x201d; or &#x201c;backbone&#x201d; router unexpectedly stops operating, the network hierarchy can be re-configured such that a nearby &#x201c;edge&#x201d; router can perform the functions of the &#x201c;hub&#x201d; router by turning off the RSNA connections as called for by the implementation. The converse is also true, that is, if an &#x201c;edge&#x201d; router unexpectedly stops operating, the network hierarchy can be re-configured such that a nearby &#x201c;hub&#x201d; or &#x201c;backbone&#x201d; router can perform the functions of an &#x201c;edge&#x201d; router by turning on the RSNA connections. This induces network reliability, provided that RSNA is also redundant.</p>
<p id="p-0139" num="0143">Referring now to <figref idref="DRAWINGS">FIG. 7</figref>, an OSR router <b>150</b> includes a plurality of general purpose IM receivers <b>152</b><i>a</i>-<b>152</b>N each of which includes an interface module or line card <b>153</b><i>a</i>-<b>153</b>N. The IM receivers and interface modules may be similar to the IM receivers and interface modules described above in conjunction with the BRLS router of <figref idref="DRAWINGS">FIG. 3</figref>. Differences between the OSR and BRLS routers are described below in conjunction with <figref idref="DRAWINGS">FIG. 8</figref>. The OSR router <b>150</b> also includes a network processing module (NPM) <b>154</b> coupled to the IM receivers <b>152</b><i>a</i>-<b>152</b>N through an optical network interconnect module <b>156</b>. It should be appreciated that the IM receivers <b>152</b><i>a</i>-<b>152</b>N, the network processing module <b>154</b> and network interconnect module <b>156</b> are all physically located inside the OSR router <b>150</b>.</p>
<p id="p-0140" num="0144">A router special needs agent (RSNA) <b>160</b> having an optical channel interconnect is in communication with the interface modules <b>153</b><i>a</i>-<b>153</b>N of the IM receivers, the network processing module <b>154</b> and a craft GUI <b>155</b>. It should be appreciated that the RSNA <b>160</b> is physically located outside the OSR router <b>150</b>.</p>
<p id="p-0141" num="0145">The RSNA's communication strategy with other network elements such as the OSR router <b>150</b>, is similar to that used in the BRLS architecture. For example, the RSNA communicates with the IMs of the OSR router via request/response signals. For communication with the NPMs of the OSR router (to acquire topology information), the communication could be via file transfer, depending upon the particular implementation. By decentralizing the RSNA functionality as a separate independent network element, scalability of the QoS control plane functions is enhanced and the implementation of the data plane functions in the routers are greatly simplified. The end result is a speedy/simplified forwarding path/data plane at the routers for processing all packets (including &#x201c;regular&#x201d; packets, packets requiring the attention of the NPM and &#x201c;special needs&#x201d; packets).</p>
<p id="p-0142" num="0146">Flexible bi-directional reconfigurability can be achieved during emergency situations for &#x201c;edge&#x201d; routers (to act as temporary &#x201c;hub/backbone&#x201d; routers) by clustering together several &#x201c;edge&#x201d; routers to meet the throughput requirements of a &#x201c;hub/backbone&#x201d; and to turn off RSNA (as called for by the implementation).</p>
<p id="p-0143" num="0147">Flexible bi-directional reconfigurability can be achieved during emergency situations for &#x201c;hub/backbone&#x201d; to act as &#x201c;temporary&#x201d; edge routers by simply turning &#x201c;on&#x201d; the RSNA.</p>
<p id="p-0144" num="0148">Bi-directional reconfigurability can also be achieved during a network hardware upgrade/expansion process to increase traffic throughput for &#x201c;hub/backbone&#x201d; routers to automatically become new &#x201c;edge&#x201d; routers by turning on the RSNA, providing the quickest provisioning turn-around time.</p>
<p id="p-0145" num="0149">Bi-directional reconfigurability can also be achieved during a network hardware upgrade/expansion process to increase traffic throughput for &#x201c;edge&#x201d; routers to become &#x201c;hub/backbone&#x201d; routers by adding more IM receivers, IMs and channels, and by turning off the RSNA (as called for by the implementation). It should be noted that the limit on the top number of receivers is bound by engineering choice in practice and that the above addition can be made possible only if the existing IMs and channel wires in the existing NIM infrastructure have enough capacity ready for expansion when first implemented. This means the existing IMs should have sufficient number of interface pin-outs and existing channels should have sufficient BW capacity to cope with the increased traffic volume resulting from an increased number of IM traffic sources.</p>
<p id="p-0146" num="0150">Based on the above description, the RSNA's responsibility includes not only the traditional set of QoS control and resource reservation such as path selection/BW reservation, it also includes any special packet forwarding needs that require information on overall network &#x201c;path&#x201d; view such as network-wide path resource reservation, capacity and path state, to enable meaningful services. Examples of the latter are MPLS, multicasting, VPN provisioning, and MPLS-enabled VPNs.</p>
<p id="p-0147" num="0151">Like the BRLS router, a key requirement to the success of this architecture is a general-purpose IM receiver that's identical in all routers, which enables the OSR's versatility to serve as &#x201c;edge&#x201d;, &#x201c;backbone&#x201d; or &#x201c;hub&#x201d; routers as desired. As the receiver is identical in all OSR routers, the difference in throughput between an &#x201c;edge&#x201d; and a &#x201c;hub/backbone&#x201d; router is achieved using modular interconnection. This means that an &#x201c;edge&#x201d; router will have a smaller number of IMs/IM receivers (thereby curtailing the amount of throughput) than a &#x201c;hub/backbone&#x201d; router.</p>
<p id="p-0148" num="0152">Referring now to <figref idref="DRAWINGS">FIG. 8</figref>, an OSR router <b>164</b> includes an IM receiver <b>166</b> coupled to a bi-directional K-ary N-cube network interconnect module <b>168</b> (i.e. a K-ary N-cube switch fabric is used) which in turn is coupled to one or more network processing modules <b>170</b> and other IM and forwarding engines <b>172</b>. The IM receiver <b>166</b>, network processing modules <b>170</b> and other IM and forwarding engines <b>172</b> may all be functionally similar to the IM receiver, network processing modules and other IM and forwarding engines described above in conjunction with <figref idref="DRAWINGS">FIG. 4</figref>. It should thus be appreciated that the functional description of the IM for the BRLS router described above in conjunction with <figref idref="DRAWINGS">FIG. 4</figref> applies to that for the OSR router <b>164</b>, with certain differences as will be described below.</p>
<p id="p-0149" num="0153">The IM receiver <b>166</b>, network processing modules <b>170</b> and forwarding engines <b>172</b> are each coupled to an RSNA <b>174</b> which is external to the OSR router <b>164</b>. Thus, one difference between the BRLS router and the OSR router <b>164</b> is that in the OSR router the RSNA is not part of the router's internal architecture, but is a completely separate network entity. Since the RSNA is a completely separate network entity, IMs must access it via an &#x201c;external&#x201d; communications link <b>178</b>.</p>
<p id="p-0150" num="0154">Another difference between the BRLS router and the OSR router <b>164</b> is that in the OSR router, the NIM is optical and the IM interior is electrical. Thus, there is an additional device <b>179</b> at the IM's optical channel interface to the switch fabric for signal conversion between electrical and optical (E/O) signals. In practice, vertical cavity surface-emitting lasers (VCSELs) can be used to provide a low-cost solution to such conversions for optical-electrical interconnect.</p>
<p id="p-0151" num="0155">The RSNA <b>174</b> is a distinct server/database entity responsible for the CoS/QoS Control Plane that dynamically provides packets with resource and reservation information pertaining to overall network view, rather than hop-by-hop. The basic functionalities of the RSNA are as described above in conjunction with <figref idref="DRAWINGS">FIGS. 3-7</figref>. Some details of these functions, their associated architectures and the interworking of these functions both internal to the RSNA and with other router component(s) external to the RSNA are described below and in conjunction with <figref idref="DRAWINGS">FIG. 9</figref></p>
<p id="p-0152" num="0156">Referring briefly to <figref idref="DRAWINGS">FIG. 9</figref>, an exemplary RSNA <b>180</b> illustrating the parallel pipelines for the different types of packet header classification operations includes physical interface <b>182</b> through which headers of packets (or in alternate embodiments, entire packets) enter and exit the RSNA. The physical interface couples to a packet header filter <b>184</b> which performs packet header filtering. The packet header filter communicates with a plurality of separate/independent queues <b>186</b><i>a</i>-<b>186</b><i>n </i>and tables <b>188</b><i>a</i>-<b>188</b><i>n </i>for separate types of QoS/CoS needs. The exemplary RSNA of <figref idref="DRAWINGS">FIG. 9</figref> is shown to include a multicast table, a packet drop priority table, and tables for CoS/QoS admission, access control, and security admission. Although, several exemplary queues and tables are shown in <figref idref="DRAWINGS">FIG. 9</figref>, it should be appreciated that the RSNA can include any type and number of queues and tables required for any QoS/CoS need.</p>
<p id="p-0153" num="0157">The multicast table <b>188</b><i>a </i>leads to a header reproduction functional unit <b>190</b> which in turn is coupled to an output buffer, queue and scheduler <b>192</b>. The tables <b>188</b><i>b</i>-<b>188</b><i>n </i>are coupled directly to the buffer, queue and scheduler <b>192</b>. The buffer, queue and scheduler <b>192</b> buffers, queues and performs scheduling functions for newly tagged outgoing packet headers and provides the headers to the physical interface <b>182</b>.</p>
<p id="p-0154" num="0158">Because the individual functions in the RSNA can be (re-)programmable, a craft GUI interface <b>196</b> is available for this purpose. Through the craft GUI, new algorithms (e.g., for individual server computational use) or new administrative rules/policies can be rapidly installed into the appropriate functional components to adapt to the changing IP network servicing features. In this particular example, the RSNA includes a plurality of information bases and servers generally denoted <b>194</b> which will be discussed below.</p>
<p id="p-0155" num="0159">Referring now to <figref idref="DRAWINGS">FIGS. 8 and 9</figref>, the RSNA is responsible for admission control as well as for resource reservation/management, e.g., buffer (re-)configuration, path selection/reservation for MPLS traffic engineering, multicasting and customized VPN provisioning on demand. Also, for MPLS traffic engineering, RSNA is responsible for the major MPLS control plane functions (and hence RSNA can be said to be equipped with the MPLS traffic engineering control plane) as follows: resource discovery; path selection; and path management. For multicasting, the RSNA participates in routing, flow and reservation protocols, computes shortest path multicast trees/inter-domain multicast tunnels, performs admission control, reserves/allocates network path resources, and setup and maintains multicast trees/tunnels among admitted hosts. The RSNA is also responsible for policy administration for differentiated CoS, packet drop, RSVP, security/access control, scheduling, and prioritization of flows. Hence the information bases and servers <b>194</b> must be able to aid in the enablement of such functionalities.</p>
<p id="p-0156" num="0160">RSNA architectural scalability is addressed by complete functional partitioning of basic packet header classification/processing functions: header filtering, queuing per QoS/CoS/other &#x201c;special needs&#x201d;, table lookup per QoS/CoS/other &#x201c;special needs&#x201d;, header reproduction for multicasting, buffering and scheduling. Each of these functions has its own data structures and memory capacity and is implemented by (re-)programmable hardware-based ASICs or FPGAs. Furthermore, as illustrated in <figref idref="DRAWINGS">FIG. 9</figref> the functions are arranged in series as pipelines if there exists inter-dependence among functions, or in parallel if there is no inter-dependence.</p>
<p id="p-0157" num="0161">Since communication with the routers (and more particularly with the IMs of the routers) in the RSNA's network domain of responsibility is via request/response, a request message enters the RSNA with a packet header needing a &#x201c;tag&#x201d; and a response from the RSNA with an &#x201c;updated&#x201d; packet header containing the needed &#x201c;tag.&#x201d; For the case of multicasting, the RSNA is responsible for reproducing all the headers with different destination addresses needed for a particular multicast session, this is done by the Header Repro Function <b>190</b>.</p>
<p id="p-0158" num="0162">The link state information bases and servers <b>194</b> maintained at the RSNA, include but are not limited to a topology information base, a policy information base, a flow information base, a path QoS state information base, a multicast tree/state information base and control server, an MPLS Traffic Engineering Control Plane information base, node QoS state information base, an admission control server, a QoS routing server, a policy control server and an MPLS Traffic Engineering control server (e.g., for MPLS path computation).</p>
<p id="p-0159" num="0163">Sample contents of the multicast tree/state information base includes information needed to establish multicast sessions for all routers within the RSNA's domain of responsibility, such as access control list, multicast tree/tunnel state information for the multicast groups that each router in its domain is involved in.</p>
<p id="p-0160" num="0164">All information bases contain up-to-date link/path/flow state and status information, and a variety of policy information, such that they act as information input to the individual tables that ultimately provide &#x201c;tags&#x201d; to the incoming packet headers. For example, RSNA collaborates with the NPM of each router within its domain of responsibility to obtain up-to-date topology information for path selection/setup. The servers perform path computations based on information from appropriate information bases. Results of computation are also fed to the appropriate tables.</p>
<p id="p-0161" num="0165">For the RSNA within the OSR architecture, all-optical channels are used for interconnecting all internal components such as the functional units and servers as follows. All (re-)programmable hardware-based electronic (FPGA or ASIC) chips containing functional units such as packet filtering, scheduling, etc., along with the associated tables and buffers (i.e., the queues <b>186</b><i>a</i>-<b>186</b><i>n</i>) are arranged in&#x2267; one card interconnecting to one another within each card via electronic interchip interconnect. An E/O device (e.g., a VCSEL) is used at each card/optical channel interface for interconnection to other components within the RSNA. All information bases and servers are also equipped with E/O devices at their interfaces to the optical channels for connection to other components within the RSNA. Finally, redundancy is addressed via 1+1 sparing arrangement with other RSNAs within the ISP network.</p>
<p id="p-0162" num="0166">This architecture having all-optical interconnects for the interior of both the RSNA and the OSR router, is readily implementable with the current state-of-the-art technology. Within the framework of this router architecture, network hardware expansion or upgrade&#x2014;the ability to accommodate a next more feature-rich set of QoS capabilities and with increasing throughput requirement, can be addressed by a distributed two-part network solution. It includes the upgrade of the OSR router and the RSNA with &#x201c;appropriate&#x201d; tables and algorithms for fast table search to provide appropriate QoS features. Scalability of both network entities to meet increasing throughput demands is further provided by the partitioning and pipelining of the functionality and by the (re-)programmability of each hardware-based function used in the packet (or header) processing paths within the two separate network entities. This arrangement allows parallelism of operation and thus enables the RSNA and the OSR router the ability to separately scale efficiently to very high speed.</p>
<p id="p-0163" num="0167">The decentralization of the RSNA as a separate entity allows it to serve, and therefore scales to, an arbitrarily large number of routers in its network domain of responsibility. The upper bound of this number is part of overall network planning, considering factors such as the expected volume of &#x201c;special needs&#x201d; traffic from each router within the network, the type of queuing disciplines used to provide differentiated packet header processing within the RSNA to ensure line rate packet processing at the originating routers, etc. This decentralization also enhances the scalability of the QoS control plane functions thereby enabling the capability to offer value-added services on OVERALL network path basis, keeping minimal to no QoS state information in the routers. The consequence is this architectural solution's ability to adapt to the constant changes in &#x201c;whole path&#x201d; QoS/CoS provisioning along with exponential traffic growth within an IP network into the foreseeable future.</p>
<p id="p-0164" num="0168">The functional description of a NIM for the BRLS router using k-ary n-cube SF applies to that for the OSR router using k-ary n-cube SF with two differences: (1) the RSNA is not part of the router's internal architecture for the OSR and (2) the NIM <b>168</b> is made of all optical channels (vs. electrical channels in the BRLS router). With respect to the first difference, the RSNA is a completely separate entity and therefore the NIM doesn't need to be responsible for internal transfer of: (a) packet headers with &#x201c;special needs&#x201d; to the RSNA; and (b) (segments of) packets between the NPM and the RSNA such as updated/new programs to (re-)program the (re-)programmable hardware-based functions within the RSNA.</p>
<p id="p-0165" num="0169">Likewise, the functional description of an NPM for the BRLS router using k-ary n-cube SF applies to that for the OSR router <b>164</b> with one difference being that the NPM will have optical channel interfaces; and for that interface, a device capable of converting optical signals to electrical signals and vise versa (i.e., E/O device will be used at that interface).</p>
<p id="p-0166" num="0170">Referring again to <figref idref="DRAWINGS">FIG. 8</figref>, craft GUI <b>176</b> external to both the router <b>164</b> and RSNA <b>174</b> is provided to (re-)program/(re-)configure all hardware-based algorithms in the IMs <b>167</b> of the router through the NPM. As RSNA <b>174</b> is a separate network entity, it has its own separate craft GUI <b>196</b> (<figref idref="DRAWINGS">FIG. 9</figref>) not from the NPM for (re-)configuration of its internal hardware-based algorithms. The NPM <b>170</b> still communicates with the RSNA <b>174</b> for network topology updates via a separate interface to the topology information base <b>194</b><i>a </i>(<figref idref="DRAWINGS">FIG. 9</figref>).</p>
<p id="p-0167" num="0171">Referring now to <figref idref="DRAWINGS">FIG. 10</figref>, an RSNA <b>220</b> having an optical channel interconnect <b>222</b> is coupled to an Optoelectronic One-Architecture-Fit-All Scalable Reconfigurable (OOSR) router <b>224</b>. A packet <b>226</b> enters the router <b>224</b> and is detected by a speed sensor <b>228</b> within an IM receiver of the OOSR router <b>224</b>. The IM <b>229</b> includes first and second paths <b>230</b>, <b>232</b>. The first path <b>230</b> corresponds to an &#x201c;almost all-optical&#x201d; path (also sometimes referred to herein simply as the &#x201c;optical path&#x201d;) and may be provided, for example, from one or more re-programmable optoelectronic hardware devices <b>231</b> (e.g. FPGAs, ASICs, etc . . . ). As will become apparent in subsequent explanations, the only non-optical components in this path are the opto-electronic hardware devices. Each of the devices <b>231</b> are coupled via an optical interconnect <b>234</b>. The second path <b>232</b> corresponds to an all electrical path and may be provided, for example, from one or more re-programmable electronic hardware devices <b>236</b>. Each of the devices <b>236</b> are coupled via an electronic interconnect <b>238</b>. At the end of the second path is an electrical-to-optical (E/O) converter <b>240</b>. Both the first and second paths lead to an optical channel NIM <b>242</b> that in turn also connects to other OOSR IMs with dual hardware technology paths as described above.</p>
<p id="p-0168" num="0172">In operation, the speed sensor <b>228</b> detects the relative speed of the M connection. If the detected speed is below a certain &#x201c;watermark&#x201d; (e.g., at or below OC 12), the IM receiver directs the packets to the optical channel NIM <b>242</b> via the second <b>232</b> path within the IM <b>229</b> and the E/O converter <b>240</b>. If, on the other hand, the incoming packet speed is above the &#x201c;watermark&#x201d;, the IM receiver directs the packets to the optical channel NIM <b>242</b> via the first <b>230</b> path within the IM <b>229</b>.</p>
<p id="p-0169" num="0173">Since the almost all-optical path <b>230</b> is faster than the electrical path <b>232</b>, the routing speed through the IM is different depending upon the path. Thus, based on sensor result, the IM receiver &#x201c;adjusts&#x201d; the routing speed of the packet within the receiver by sending the packet through either path <b>230</b> or <b>232</b> within the IM <b>229</b> according to packet incoming speed.</p>
<p id="p-0170" num="0174">It should be noted that regardless of the path <b>230</b>, <b>232</b> on which the packet is routed through the IM, packets in each path <b>230</b>, <b>232</b> will still have the three logical processing paths (i.e. time-sensitive, non-time-sensitive or RSNA as described above) available for processing the packet depending upon packet processing requirements as indicated by information in the header.</p>
<p id="p-0171" num="0175">It should be understood that although the RSNA is here shown as an external RSNA, there may be some embodiments in which it would be desirable to provide the RSNA as an internal RSNA while still maintaining the optical and electrical paths within the IM.</p>
<p id="p-0172" num="0176">Referring now to <figref idref="DRAWINGS">FIG. 11</figref>, an Optoelectronic One-Architecture-Fit-All Scalable Reconfigurable (OOSR) Router Architecture using K-ary N-cube switch fabric includes a set of IM receivers <b>202</b>, each containing a separate IM <b>201</b> with a forwarding engine. The IMs <b>201</b> have primary responsibility for the processing of &#x201c;regular&#x201d; packets. It should be appreciated that <figref idref="DRAWINGS">FIG. 11</figref> shows an overall view of the OOSR router (without the RSNA) using k-ary n-cube SF and two IM receivers <b>202</b>.</p>
<p id="p-0173" num="0177">The IM receiver <b>202</b> includes a speed sensor <b>203</b> to be described further below. The OOSR router also includes centralized Network Processing Module(s) (NPMs) responsible for the processing of non-time-sensitive/exception condition tasks, e.g., routing maintenance, management, error protocol operations and a QoS preserving optical Network Interconnect Module (NIM) <b>208</b>, comprising of the IMs and the NPMs interconnected together as nodes in a k-ary n-cube via bi-directional optical links. The NIM is provided having an appropriate architecture and/or arbitration, scheduling or routing algorithms, for preservation of QoS. It should be appreciated that in the case where the NIM is provided as a BMIN, the BMIN can be provided from optical channels and optoelectric hardware-based switching elements.</p>
<p id="p-0174" num="0178">The OOSR architecture is similar to the OSR <b>164</b> of <figref idref="DRAWINGS">FIG. 8</figref> in that networks (including but not limited to IP networks) using OOSR routers also rely on the use of general-purpose IM receivers and has an RSNA as the additional (separate) network entity for processing the QoS Control Plane and some data plane functions for &#x201c;special needs&#x201d; packet headers. The RSNA dynamically provides resource and reservation information pertaining to overall network view, rather than in a hop-by-hop manner. An &#x201c;edge&#x201d; router's RSNA connection must always be on and a &#x201c;hub/backbone&#x201d; router's RSNA connection may be off. One difference between the OOSR router and the OSR router <b>164</b>, however, lies in the chip and interchip interconnection technology. In particular, the OOSR utilizes an optoelectronic chip with optical interchip interconnect in both the RSNA and the IM as further explained below.</p>
<p id="p-0175" num="0179">Similar to the RSNA for the OSR architecture, the internal (packet header processing) functions of the RSNA in the OOSR architecture are independent hardware-based functions. Each of these functions has its own dedicated data structure and storage capacity needed to perform its dedicated operation and is implemented using (re-)programmable hardware components such as FPGAs. However, instead of electrical interconnection amongst the logic level (FPGA) chips, these chips are optically interconnected to one another in pipeline fashion where functional inter-dependence exists i.e., optical (interchip) interconnect within the RSNA (see <figref idref="DRAWINGS">FIG. 10</figref>). The RSNA continues to provide a scalable separate QoS/CoS control plane server and information base along with some data plane functionalities.</p>
<p id="p-0176" num="0180">As FPGAs are electrical components, optoelectronic FPGAs are used to interface with the optical interchip interconnect, rather than the electronic FPGA chips. Hence, packet headers processing are done using optical interconnect amongst the optoelectronic FPGA chips as it traverses through the RSNA.</p>
<p id="p-0177" num="0181">On the other hand, the IM (as explained about the two paths <b>230</b> and <b>232</b> in conjunction with <figref idref="DRAWINGS">FIG. 10</figref> above) is implemented with two types of chip technologies and two types of interchip interconnect technologies. The chip technologies are respectively, optoelectronic FPGA and pure electronic FPGA; whilst the interchip interconnect technologies are respectively all-optical and all-electrical. Hence the IM interior is composed of two distinct parts. An optical part with optoelectronic (FPGA) chips optically interconnected to one another and an all-electrical part with regular electronic (FPGA) chips electrically interconnected to one another. Consequently, the IM's <b>201</b> include optical to electrical O-E conversion <b>205</b> at entry to the IM and electrical to optical converters (E/O) <b>206</b> at exit from the IM (into the optical SF <b>208</b>). Thus, the IM utilizes dual hardware technologies (optical and electrical). The purpose of these dual (chip and interchip-interconnect) hardware technologies will become apparent from the description below. Similar to the OSR using k-ary n-cube SF, the interconnection technology of the NIM <b>208</b> remains all-optical as alluded to above.</p>
<p id="p-0178" num="0182">It should be appreciate that even though the E-O and O-E conversions are drawn as part of the IM receiver in <figref idref="DRAWINGS">FIG. 11</figref> (and not as part of the IM), in some embodiments it may be desirable or necessary to implement a system either way. That is, the E-O and O-E conversions can be implemented as either part of the IM or as part of the IM receiver.</p>
<p id="p-0179" num="0183">The IM receiver <b>202</b> includes the speed sensor <b>203</b> that can detect the relative speed of the IM connection. In one embodiment, for purposes of efficient network hardware expansion/upgrade, (i.e. an upgrade which can be accomplished via re-programming a chip) the speed sensor is implemented as a speed sensing algorithm in a programmable hardware-based component. It should be appreciated, that the hardware-based sensor algorithm applies only to the IM receiver within the router and not the RSNA in this OOSR architecture, which will always route traffic using the optical interconnect and hence no need for speed sensing. This is due to the fact that incoming traffic to the RSNA will always occur at high speed, as an RSNA serves&#x3e;1 router within its network domain of responsibility for a network using the OOSR router architecture.</p>
<p id="p-0180" num="0184">Based upon sensor result, the IM receiver <b>202</b> will perform a &#x201c;routing speed adjustment&#x201d; (i.e. the receiver can &#x201c;speed up&#x201d; or &#x201c;slow down&#x201d;). It will cause the packets to be routed via electronic inter (FPGA) chip interconnect through the IM using the optical-to-electrical (O-E) conversion <b>205</b> at the link interface if the detected speed is below a certain &#x201c;watermark&#x201d; (e.g., at or below OC 12), i.e., an electrical interchip interconnect through the IM <b>201</b> will be provided.</p>
<p id="p-0181" num="0185">If, on the other hand, the detected incoming packet speed is above the &#x201c;watermark&#x201d;, the IM receiver <b>202</b> will cause incoming packets to be routed via optical interchip interconnect <b>210</b> through the IM. It should be noted that whichever (physical) hardware path the packet is routed through, packets in each hardware path will still have the three logical processing paths time-sensitive, non-time-sensitive or RSNA as described above to process through depending upon the packet processing requirement as indicated by information in the header.</p>
<p id="p-0182" num="0186">With the aid of these speed-sensing general-purpose IM receivers <b>202</b> to perform routing speed adjustment through the IM according to incoming packet speed and a separate RSNA function with optical interchip interconnect, the interior architecture is uniform across all OOSR routers, regardless of its placement in the network hierarchy. Hence, the property of &#x201c;bi-directional reconfigurability&#x201d; is retained and is usable either during emergency situations or network hardware expansion/upgrade.</p>
<p id="p-0183" num="0187">It should be noted that all functional descriptions for the OSR router <b>164</b> (<figref idref="DRAWINGS">FIG. 8</figref>) with respect to IMs, NIM, NPM and RSNA apply to the OOSR router. Two differences are that for the optical interconnect part of the IM in the OOSR router, no E/O device is needed at the optical SF interface within the IM (however, as in OSR, E/O device such as VCSELs is needed for the electrical part of the IM to interface to the optical channel interconnect). Similarly, since the packet header processing functions in the OOSR RSNA <b>220</b> (<figref idref="DRAWINGS">FIG. 10</figref>) are also implemented using optoelectronic (FPGA) chips with optical interchip interconnect <b>222</b> (<figref idref="DRAWINGS">FIG. 10</figref>), no E/O devices are needed for these functions to interface to the all-optical interconnection channels within the RSNA.</p>
<p id="p-0184" num="0188">Use of the intelligent IMs provides the OOSR router having a distributed forwarding functionality. Also the OOSR router architecture provides segregation of time-sensitive from non-time-sensitive tasks amongst RSNA, IM and Network Processing Module.</p>
<p id="p-0185" num="0189">An OOSR router architecture serves dual purposes. First, it provides a tool for router reconfigurability. A router serving at the &#x201c;edge&#x201d; will likely experience lower traffic rate (e.g., currently&#x2266;OC48) than that experienced in a &#x201c;hub&#x201d; or &#x201c;backbone&#x201d; router. Hence a router placed in the &#x201c;edge&#x201d; layer makes use of the electrical interconnect through the IMs; whereas if that same router is placed in the &#x201c;hub&#x201d; or &#x201c;backbone&#x201d; layer, would make use of the optical interconnect through the IM. Second, it serves as &#x201c;transition&#x201d; architecture to usher in technological evolution from electronic devices, with its ultimate limitation in electronic processing speed, to optical devices.</p>
<p id="p-0186" num="0190">The OOSR is appropriate in applications in which there exists a customer base at the &#x201c;edge&#x201d; of an ISP network with aggregate speed sufficiently low such that the service provisioning for these customers could still be economically accommodated by electronic routing through the router IM. Moreover, the additional intra-IM optical interconnect capability not only allows efficient transition to optical technology, but operating with the intra-IM electronic interconnect counterpart also allows an OOSR router to scale up to much higher magnitude in throughput than electronic intra-IM interconnect alone. The latter advantage is again due to the notion that there exists two different paths each with a different hardware technology through the OOSR router, making it possible for the router to process traffic with input speed of very low to very high magnitude. One &#x201c;lower&#x201d; speed hardware path composes of electronic chips and electrical interchip interconnect through the IM, and optical channel interconnect amongst the IMs through the router. The other &#x201c;higher&#x201d; speed hardware path composes of optoelectronic chips with optical interchip interconnect through the IM, and optical channel interconnect amongst the IMs through the router.</p>
<p id="p-0187" num="0191">Finally, a potential advantage of the OOSR architecture, is that the problem of preserving constant packet delivery delay variation (such as prevention of jitteriness in voice packets) through the SF could be overcome, with optical interchip interconnect within the IM.</p>
<p id="p-0188" num="0192">All references cited herein are hereby incorporated herein by reference in their entirety.</p>
<p id="p-0189" num="0193">Having described preferred embodiments of the invention, it will now become apparent to one of ordinary skill in the art that other embodiments incorporating their concepts may be used. It is felt therefore that these embodiments should not be limited to disclosed embodiments, but rather should be limited only by the spirit and scope of the appended claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A router agent, comprising:
<claim-text>an interface for receiving and transmitting at least one of: a packet or a packet header into and out of the router agent;</claim-text>
<claim-text>a plurality of router agent queues;</claim-text>
<claim-text>a router agent packet header filter coupled to each of the plurality of router agent queues, wherein in response to the router agent packet header filter receiving the packet or the packet header, the router agent packet header filter forwards the packet header to one of the plurality of router agent queues based upon a need indicated by the packet header; and</claim-text>
<claim-text>a communication means for establishing a communication session with a router, wherein the router agent is external to the router.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The router agent of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising one or more tables, wherein at least one table of the one or more tables is coupled to at least one of the plurality of router agent queues.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The router agent of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein at least one of the one or more tables comprises: a multicast table, a packet drop priority table, a multi protocol label switching route table, a priority queue table, a class of service/quality of service admission table, an access control table, or a security admission table.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The router agent of <claim-ref idref="CLM-00003">claim 3</claim-ref>, further comprising:
<claim-text>a header reproduction functional unit, coupled to the multicast table.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The router agent of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the router agent is configured to operate in an active mode providing active class of service/quality of service provisioning for packets entering the router.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The router agent of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the router agent is configured to operate in a passive mode providing passive class of service/quality of service provisioning for packets entering the router.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The router agent of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising:
<claim-text>an output buffer coupled to the one or more tables;</claim-text>
<claim-text>an output queue coupled to the output buffer; and</claim-text>
<claim-text>a scheduler coupled to the output buffer and the output queue, the scheduler for scheduling functions for outgoing packet headers.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The router agent of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the output buffer, the output queue and the scheduler are coupled to transmit a scheduled packet header to the interface for transmission out of the router agent.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The router agent of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising:
<claim-text>a plurality of information bases.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The router agent of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein at least one of the plurality of information bases comprises: a topology information base, a policy information base, a flow information base, a path quality of service state information base, a multicast tree/state information base, a multi protocol label switching traffic engineering control plane information base, or a node quality of service state information base.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The router agent of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:
<claim-text>a plurality of servers.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The router agent of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein at least one of the plurality of servers comprises: a multicast tree/state information server, an admission control server, a quality of service routing server, a policy control server, or a multi protocol label switching traffic engineering control server.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The router agent of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said router agent comprises a router special needs agent.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. A method of operating a router agent, comprising:
<claim-text>receiving and transmitting at an interface at least one of: a packet or a packet header into and out of the router agent;</claim-text>
<claim-text>receiving the packet or the packet header at a router agent packet header filter that is coupled to each of a plurality of router agent queues, wherein in response to the router agent packet header filter receiving the packet or the packet header, the router agent packet header filter forwards the packet header to one of the plurality of router agent queues based upon a need indicated by the packet header; and</claim-text>
<claim-text>establishing a communication session between the router agent and a router, wherein the router agent is external to the router.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, further comprising:
<claim-text>providing one or more tables, wherein at least one table of the one or more tables is coupled to at least one queue of the plurality of router agent queues.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein at least one of the one or more tables comprises at least one of: a multicast table, a packet drop priority table, a multi protocol label switching route table, a priority queue table, a class of service/quality of service admission table, an access control table, or a security admission table.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the router agent is placed in an active mode providing active class of service/quality of service provisioning for packets entering the router.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the router agent is placed in a passive mode providing passive class of service/quality of service provisioning for packets entering the router.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:
<claim-text>providing a plurality of information bases.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The method of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein at least one of the plurality of information bases comprises: a topology information base, a policy information base, a flow information base, a path quality of service state information base, a multicast tree/state information base, a multi protocol label switching information base, or a node quality of service state information base.</claim-text>
</claim>
</claims>
</us-patent-grant>
