<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627098-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627098</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13721080</doc-number>
<date>20121220</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>TW</country>
<doc-number>101121700 A</doc-number>
<date>20120618</date>
</priority-claim>
</priority-claims>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20130101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>21</main-group>
<subgroup>64</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>713187</main-classification>
<further-classification>713  2</further-classification>
<further-classification>726  2</further-classification>
<further-classification>714 381</further-classification>
</classification-national>
<invention-title id="d2e61">Electronic device and method for verifying firmware of the electronic device</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>2010/0306357</doc-number>
<kind>A1</kind>
<name>Chen</name>
<date>20101200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709223</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2011/0179407</doc-number>
<kind>A1</kind>
<name>Minegishi</name>
<date>20110700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717170</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2012/0278653</doc-number>
<kind>A1</kind>
<name>Cheng et al.</name>
<date>20121100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 13</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2013/0007428</doc-number>
<kind>A1</kind>
<name>Khosrowpour et al.</name>
<date>20130100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2013/0080754</doc-number>
<kind>A1</kind>
<name>Ganesh et al.</name>
<date>20130300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713  2</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2013/0185564</doc-number>
<kind>A1</kind>
<name>Jaber et al.</name>
<date>20130700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713176</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00007">
<othercit>Wang et al., &#x201c;Firmware-assisted Memory Acquisition and Analysis tools for Digial Forensics&#x201d;, 2011, IEEE, pp. 1-5.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00008">
<othercit>Ming-tao et al., &#x201c;Design of Automated Test System of Blade Server,&#x201d; 2012 Editorial Office of Automation and Instrementation, vol. 27, No. 4; pp. 43-46.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00009">
<othercit>Lin et al., &#x201c;Using TPM to Improve Boot Security at BIOS layer,&#x201d; 2012, IEEE, pp. 376-377.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>Padmaraj et al. &#x201c;Targeted Random Test Generation of Power-Aware Multicore Designs&#x201d;, Jun. 2012, ACM, vol. 17 Issue 3, 1-19.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
</us-references-cited>
<number-of-claims>12</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>713187</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>3</number-of-drawing-sheets>
<number-of-figures>3</number-of-figures>
</figures>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only" applicant-authority-category="assignee">
<addressbook>
<orgname>Hon Rai Precision Industry Co., Ltd.</orgname>
<address>
<city>New Taipei</city>
<country>TW</country>
</address>
</addressbook>
<residence>
<country>TW</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Huang</last-name>
<first-name>Yu-Chen</first-name>
<address>
<city>New Taipei</city>
<country>TW</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Altis Law Group, Inc.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Hon Hai Precision Industry Co., Ltd.</orgname>
<role>03</role>
<address>
<city>New Taipei</city>
<country>TW</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Pham</last-name>
<first-name>Luu</first-name>
<department>2437</department>
</primary-examiner>
<assistant-examiner>
<last-name>Brown</last-name>
<first-name>Demaris</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">In a method for verifying firmware of an electronic device, the electronic device includes a baseboard management controller (BMC) for storing a BMC firmware, and a basic input-output system (BIOS) for storing a BIOS firmware. The method writes a first verification code into the BMC firmware, and writes a second verification code into the BIOS firmware. The method writes the BMC firmware into the BMC, and writes the BIOS firmware into the BIOS. The method further triggers the electronic device to power off if the first verification code of the BMC firmware is not identical to the second verification code of the BIOS firmware, and boots an operating system of the electronic device if the first verification code of the BMC firmware is identical to the second verification code of the BIOS firmware.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="234.02mm" wi="177.55mm" file="US08627098-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="174.07mm" wi="183.22mm" file="US08627098-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="217.17mm" wi="124.38mm" file="US08627098-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="252.90mm" wi="187.03mm" file="US08627098-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">1. Technical Field</p>
<p id="p-0003" num="0002">Embodiments of the present disclosure relate to electronic devices and methods for protecting data of the electronic device, and more particularly to an electronic device and a method for verifying firmware of the electronic device.</p>
<p id="p-0004" num="0003">2. Description of Related Art</p>
<p id="p-0005" num="0004">An electronic device usually uses an anti-virus software to protect against computer viruses only after booting an operating system of the electronic device. However, before the operating system of the electronic device is booted, a vicious user or a hacker may run a non-authorized baseboard management controller (BMC) firmware or a non-authorized basic input-output system (BIOS) firmware on the electronic device, which may make data of the electronic device to be exposed to a high level of risk.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0002" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of one embodiment of an electronic device including a firmware verification system.</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram of one embodiment of function modules of the firmware verification system in <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 3</figref> is a flowchart of one embodiment of a method for verifying firmware of an electronic device.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0003" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0009" num="0008">In general, the word &#x201c;module&#x201d;, as used herein, refers to logic embodied in hardware or firmware, or to a collection of software instructions, written in a programming language, such as, Java, C, or assembly. One or more software instructions in the modules may be embedded in firmware, such as in an EPROM. The modules described herein may be implemented as either software and/or hardware modules and may be stored in any type of non-transitory computer-readable storage medium or other storage device. Some examples of the non-transitory computer-readable storage medium include CDs, DVDs, BLU-RAY, flash memory, and hard disk drives.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of one embodiment of an electronic device <b>1</b> including a firmware verification system <b>10</b>. In the embodiment, the electronic device <b>1</b> further includes, but is not limited, a storage device <b>12</b>, at least one processor <b>14</b>, a baseboard management controller (BMC) <b>16</b>, a basic input-output system (BIOS) <b>18</b>, and an alarm generator <b>20</b>. <figref idref="DRAWINGS">FIG. 1</figref> is only one example of the electronic device <b>1</b>, other examples may include more or fewer components than those shown in the embodiment, or have a different configuration of the various components.</p>
<p id="p-0011" num="0010">The storage device <b>12</b> may include any type(s) of non-transitory computer-readable storage medium, such as a hard disk drive, a compact disc, a digital video disc, or a tape drive. In the embodiment, the storage device <b>12</b> stores computerized codes of the firmware verification system <b>10</b>.</p>
<p id="p-0012" num="0011">The at least one processor <b>14</b> may include a processor unit, a microprocessor, an application-specific integrated circuit, and a field programmable gate array, for example.</p>
<p id="p-0013" num="0012">The BMC <b>16</b> stores a BMC firmware including a first verification code, and the BIOS <b>18</b> stores a BIOS firmware including a second verification code. In the embodiment, the first verification code may be a binary code of a version number of the BMC <b>16</b>, for example, the version number of the BMC firmware is &#x201c;1&#x201d; that can be converted into a binary code of &#x201c;0001&#x201d;. The second verification code may be predefined the same as the first verification code for verifying firmware of the electronic device <b>1</b>.</p>
<p id="p-0014" num="0013">The alarm generator <b>20</b> generates an alarm message when the first verification code of the BMC firmware is identical to the second verification code of the BIOS firmware. In the embodiment, the alarm message may be au audio message or a message to prompt the user that the electronic device <b>1</b> may be attacked by a vicious user or a hacker.</p>
<p id="p-0015" num="0014">In one embodiment, the firmware verification system <b>10</b> includes a plurality of function modules (see <figref idref="DRAWINGS">FIG. 2</figref> below), which include computerized codes or instructions that can be stored in the storage device <b>12</b> and executed by the at least one processor <b>14</b> to provide a method for verifying a firmware of the electronic device <b>1</b>.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram of one embodiment of the firmware verifying system <b>10</b> included in the electronic device <b>1</b>. In one embodiment, the firmware verifying system <b>10</b> may include a first writing module <b>100</b>, a second writing module <b>102</b>, a first verification module <b>104</b>, a triggering module <b>106</b>, a second verification module <b>108</b>, and a halt module <b>110</b>. The modules may comprise computerized codes in the form of one or more programs that are stored in the storage device <b>12</b> and executed by the at least one processor <b>14</b> to provide functions for implementing the modules. The functions of the function modules <b>100</b>-<b>110</b> are illustrated in <figref idref="DRAWINGS">FIG. 3</figref> and described below.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 3</figref> illustrates a flowchart of one embodiment of a method for verifying firmware of the electronic device <b>1</b>. Depending on the embodiment, additional steps may be added, others removed, and the ordering of the steps may be changed.</p>
<p id="p-0018" num="0017">In step S<b>10</b>, the first writing module <b>100</b> writes a first verification code into a BMC firmware, and writes a second verification code into a BIOS firmware. In the embodiment, the verification code may be a binary code of a version number of the BMC <b>16</b>, for example, the version number of the BMC firmware is &#x201c;1&#x201d; which is converted to a binary code of &#x201c;0001&#x201d;. The second verification code may be predefined the same as the first verification code when the second verification code is written into the BIOS firmware.</p>
<p id="p-0019" num="0018">In step S<b>11</b>, the second writing module <b>102</b> writes the BMC firmware into the BMC <b>16</b>, and writes the BIOS firmware into the BIOS <b>18</b> of the electronic device <b>1</b>.</p>
<p id="p-0020" num="0019">In step S<b>12</b>, the first verification module <b>104</b> verifies whether the first verification code of the BMC firmware is identical to the second verification code of the BIOS firmware when the electronic device <b>1</b> starts a power-on self-test. In the embodiment, the first verification module <b>104</b> determines that the BMC firmware or the BIOS firmware may have been substituted by a non-authorized BMC firmware or a non-authorized BIOS firmware if the first verification code is not identical to the second verification code. The first verification module <b>104</b> determines that the BMC firmware or the BIOS firmware is not substituted by the non-authorized BMC firmware or the non-authorized BIOS firmware if the first verification code is identical to the second verification code.</p>
<p id="p-0021" num="0020">In step S<b>13</b>, the triggering module <b>106</b> triggers the electronic device <b>1</b> to power off if the first verification code of the BMC firmware is not identical to the second verification code of the BIOS firmware.</p>
<p id="p-0022" num="0021">In step S<b>14</b>, the triggering module <b>106</b> boots an operating system (e.g., a WINDOWS OS) of the electronic device <b>1</b> if the first verification code of the BMC firmware is identical to the second verification code of the BIOS firmware.</p>
<p id="p-0023" num="0022">In step S<b>15</b>, the triggering module <b>106</b> triggers a system management interrupt (SMI) at a time interval after the operating system of the electronic device <b>1</b> is booted. In the embodiment, the time interval may be predefined as a time period according to user requirements, such as 30 minutes.</p>
<p id="p-0024" num="0023">In step S<b>16</b>, the second verification module <b>108</b> verifies whether the first verification code of the BMC firmware is identical to the second verification code of the BIOS firmware when the SMI of the electronic device <b>1</b> is triggered. The step S<b>16</b> is to protect the electronic device <b>1</b> against hackers who may run the non-authorized BMC firmware or the non-authorized BIOS firmware on the electronic device <b>1</b> after the booting of the operating system of the electronic device <b>1</b>.</p>
<p id="p-0025" num="0024">In step S<b>17</b>, the halt module <b>110</b> halts all input and output ports of the electronic device <b>1</b> to protect data of the electronic device <b>1</b> and triggers the alarm generator <b>20</b> to generate an alarm message, if the verification code of the BMC firmware is not identical to the second verification code of the BIOS firmware. In the embodiment, the alarm message may be au audio message or a message for prompting the user that the electronic device <b>1</b> may be attacked by a vicious user or a hacker.</p>
<p id="p-0026" num="0025">As described above, from the step S<b>10</b> to the step S<b>17</b>, the data of the electronic device <b>1</b> can be protected against a non-authorized BMC firmware or a non-authorized BIOS firmware by verifying the BMC firmware stored in the BMC <b>16</b> and the BIOS firmware stored in the BIOS <b>18</b> of the electronic device <b>1</b>.</p>
<p id="p-0027" num="0026">Although certain embodiments of the present disclosure have been specifically described, the present disclosure is not to be construed as being limited thereto. Various changes or modifications may be made to the present disclosure without departing from the scope and spirit of the present disclosure.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An electronic device, comprising:
<claim-text>a baseboard management controller (BMC) storing BMC firmware;</claim-text>
<claim-text>a basic input-output system (BIOS) storing BIOS firmware;</claim-text>
<claim-text>a storage device, and at least one processor; and</claim-text>
<claim-text>one or more modules that are stored in the storage device and executed by the at least one processor, the one or more modules comprising:</claim-text>
<claim-text>a first writing module that writes a first verification code into the BMC firmware, and writes a second verification code into the BIOS firmware;</claim-text>
<claim-text>a second writing module that writes the BMC firmware into the BMC, and writes the BIOS firmware into the BIOS;</claim-text>
<claim-text>a first verification module verifies whether the first verification code of the BMC firmware is identical to the second verification code of the BIOS firmware when the electronic device starts a power-on self-test;</claim-text>
<claim-text>a triggering module that triggers the electronic device to power off if the first verification code of the BMC firmware is not identical to the second verification code of the BIOS firmware, and boots an operating system of the electronic device if the first verification code of the BMC firmware is identical to the second BIOS code of the BIOS firmware;</claim-text>
<claim-text>wherein a second verification module that verifies whether the first verification code of the BMC firmware is identical to the second verification code of the BIOS firmware when the SMI of the electronic device is triggered; and</claim-text>
<claim-text>wherein a halt module that halts all input and output ports of the electronic device to protect data of the electronic device and triggers an alarm generator of the electronic device to generate an alarm message, if the first verification code of the BMC firmware is not identical to the second verification code of the BIOS firmware.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The electronic device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the triggering module further triggers a system management interrupt (SMI) at a time interval after the operating system of the electronic device is booted.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The electronic device according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first verification code is a binary code of a version number of the BMC firmware.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The electronic device according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the second verification code is predefined the same as the first verification code when the second verification code is written into the BIOS firmware.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. A method for verifying firmware of an electronic device, the method comprising:
<claim-text>writing a first verification code into a baseboard management controller (BMC) firmware, and writing a second verification code into a basic input-output system (BIOS) firmware;</claim-text>
<claim-text>writing the BMC firmware into a BMC of the electronic device, and writing the BIOS firmware into a BIOS of the electronic device;</claim-text>
<claim-text>verifying whether the first verification code of the BMC firmware is identical to the second verification code of the BIOS firmware when the electronic device starts a power-on self-test;</claim-text>
<claim-text>triggering the electronic device to power off if the first verification code of the BMC firmware is not identical to the second verification code of the BIOS firmware;</claim-text>
<claim-text>booting an operating system of the electronic device if the first verification code of the BMC firmware is identical to the second BIOS code of the BIOS firmware;</claim-text>
<claim-text>wherein verifying whether the first verification code of the BMC firmware is identical to the second verification code of the BIOS firmware when the SMI of the electronic device is triggered; and</claim-text>
<claim-text>wherein halting all input and output ports of the electronic device to protect data of the electronic device and triggering an alarm generator of the electronic device to generate an alarm message, if the first verification code of the BMC firmware is not identical to the second verification code of the BIOS firmware.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising:
<claim-text>triggering a system management interrupt (SMI) at a time interval after the operating system of the electronic device is booted.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the first verification code is a binary code of a version number of the BMC firmware.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the second verification code is predefined the same as the first verification code when the second verification code is written into the BIOS firmware.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A non-transitory computer-readable storage medium having stored thereon instructions, when executed by a processor of an electronic device, causes the processor to perform a method for verifying firmware of the electronic device, the method comprising:
<claim-text>writing a first verification code into a baseboard management controller (BMC) firmware, and writing a second verification code into a basic input-output system (BIOS) firmware;</claim-text>
<claim-text>writing the BMC firmware into a BMC of the electronic device, and writing the BIOS firmware into a BIOS of the electronic device;</claim-text>
<claim-text>verifying whether the first verification code of the BMC firmware is identical to the second verification code of the BIOS firmware when the electronic device starts a power-on self-test;</claim-text>
<claim-text>triggering the electronic device to power off if the first verification code of the BMC firmware is not identical to the second verification code of the BIOS firmware;</claim-text>
<claim-text>booting an operating system of the electronic device if the first verification code of the BMC firmware is identical to the second BIOS code of the BIOS firmware;</claim-text>
<claim-text>wherein verifying whether the first verification code of the BMC firmware is identical to the second verification code of the BIOS firmware when the SMI of the electronic device is triggered; and</claim-text>
<claim-text>wherein halting all input and output ports of the electronic device to protect data of the electronic device and triggering an alarm generator of the electronic device to generate an alarm message, if the first verification code of the BMC firmware is not identical to the second verification code of the BIOS firmware.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The storage medium according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the method further comprises:
<claim-text>triggering a system management interrupt (SMI) at a time interval after the operating system of the electronic device is booted.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The storage medium according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the first verification code is a binary code of a version number of the BMC firmware.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The storage medium according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the second verification code is predefined the same as the first verification code when the second verification code is written into the BIOS firmware. </claim-text>
</claim>
</claims>
</us-patent-grant>
