<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627184-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627184</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12415930</doc-number>
<date>20090331</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>1093</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>11</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>714776</main-classification>
<further-classification>714775</further-classification>
<further-classification>714746</further-classification>
</classification-national>
<invention-title id="d2e53">Systems and methods for protecting a multi-part broadcast control message</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>2006/0136728</doc-number>
<kind>A1</kind>
<name>Gentry et al.</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2008/0016424</doc-number>
<kind>A1</kind>
<name>Chen</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714752</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2009/0015370</doc-number>
<kind>A1</kind>
<name>Rowse</name>
<date>20090100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>340  52</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>JP</country>
<doc-number>H07131454</doc-number>
<kind>A</kind>
<date>19950500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>JP</country>
<doc-number>2007503134</doc-number>
<kind>A</kind>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>JP</country>
<doc-number>2008523766</doc-number>
<kind>A</kind>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00007">
<othercit>Amna Abdul Wahid, et al., &#x201c;An Optimal Message Authentication Scheme for Lossy Channels&#x201d;, Jan. 1, 2006, Emerging Technologies, 2006. ICET '06. International Conference 0 N, IEEE, PI, pp. 443-448, XP031065404, ISBN: 978-1-4244-0502-2.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00008">
<othercit>Atallah M, et al., &#x201c;A Tree-Based Forward Digest Protocol to Verify Data Integrity in Distributed Media Streaming&#x201d;, Jul. 1, 2005, IEEE Transactions on Knowledge and Data Engineering, IEEE Service Center, Los Alamitos, CA, US, pp. 1010-1014, XP011132792, ISSN: 1041-4347.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00009">
<othercit>International Search Report and Written Opinion&#x2014;PCT/US2010/029346, International Search Authority&#x2014;European Patent Office&#x2014;Jan. 25, 2011.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>Tieyan Li, et al., &#x201c;Adaptive Stream Authentication for Wireless Multimedia Communications&#x201d;, Mar. 1, 2007, IEEE Wireless Communications and Networking Conference, 2007, WCNC 2007, Mar. 11-15, 2007, Hong Kong, IEEE Operations Center, Piscataway, NJ, pp. 2613-2618, XP031097624, ISBN: 978-1-4244-0658-6.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00011">
<othercit>Pannetrat A. and Molva, R., &#x201c;Efficient Multicast Packet Authentication&#x201d;&#x2014;Instut Eurecom, pp. 1-12, 2003.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00012">
<othercit>Taiwan Search Report&#x2014;TW099109970&#x2014;TIPO&#x2014;Feb. 4, 2013.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00013">
<othercit>Tanaka, T., et al., &#x201c;Study on Practical Message Authentication Mechanism for Digital Streaming Services&#x201d;, IEICE Technical Report (ISEC 2001 19-52): Japan, the Institute of Electronics, Information and Communication Engineers, Jul. 18, 2001, vol. 101, No. 214, pp. 15-22.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00014">
<othercit>Zhou, Y., et al., &#x201c;Multimedia Broadcast Authentication Based on Batch Signature [Advances in Mobile Multimedia]&#x201d;, IEEE Communications Magazine, Aug. 2007, vol. 45, Issue 8, pp. 72-77.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00015">
<othercit>Shintani, Y., et al., &#x201c;The proposal and evaluation of stream authentication using Merkle Hash Tree and IDA&#x201d; IPSJ SIG Technical Reports, Japan: Information Processign Society of Japan, Jul. 14, 2006, vol. 106, No. 176. pp. 137-144.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00016">
<othercit>Shintani, Y., et al., &#x201c;Stream authentication system using Merkle Hash Tree and IDA&#x201d;, 68th Information Processing Society of Japan Conference (2006) Proceedings of National Conference (3) Japan, The Information Processing Society of Japan, Mar. 7, 2006, 4E-4. 3-329-3-330.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>43</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>714776</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714752</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>18</number-of-drawing-sheets>
<number-of-figures>18</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20100251067</doc-number>
<kind>A1</kind>
<date>20100930</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Hughes</last-name>
<first-name>Patrick J.</first-name>
<address>
<city>Dana Point</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Thomas</last-name>
<first-name>Panagiotis</first-name>
<address>
<city>Carlsbad</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Kim</last-name>
<first-name>Yong Jin</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Hughes</last-name>
<first-name>Patrick J.</first-name>
<address>
<city>Dana Point</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Thomas</last-name>
<first-name>Panagiotis</first-name>
<address>
<city>Carlsbad</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Kim</last-name>
<first-name>Yong Jin</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Kim</last-name>
<first-name>Won Tae</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>QUALCOMM Incorporated</orgname>
<role>02</role>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Butler</last-name>
<first-name>Sarai</first-name>
<department>2114</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method and/or apparatus are provided for protecting control information during broadcasts in a system where primary and second mobile broadcast control messages (PMBCM and SMBCM) are utilized. In order to protect the SMBCM, a first hash information instance is computed based on hashes for each a plurality of control data blocks for the SMBCM. The first hash information instance is appended to the PMBCM. Error-correcting code words are generated for the plurality of hashes for the plurality of control data blocks for the SMBCM. These error-correcting code words are appended to the control data blocks of the SMBCM. A receiver uses the first hash instance information in the PMBCM to determine if any control data blocks of the SMBCM are corrupt. If so, the error-correcting code words may be used to reconstruct the corrupted hash(es) for the control data block(s) in order to authenticate the remaining control data blocks.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="174.67mm" wi="218.86mm" file="US08627184-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="220.73mm" wi="173.65mm" orientation="landscape" file="US08627184-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="212.51mm" wi="176.19mm" orientation="landscape" file="US08627184-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="225.04mm" wi="160.70mm" file="US08627184-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="210.65mm" wi="168.40mm" orientation="landscape" file="US08627184-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="214.71mm" wi="169.76mm" orientation="landscape" file="US08627184-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="196.09mm" wi="170.18mm" orientation="landscape" file="US08627184-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="210.31mm" wi="156.38mm" file="US08627184-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="128.69mm" wi="155.11mm" file="US08627184-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="107.19mm" wi="154.69mm" file="US08627184-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="193.04mm" wi="161.12mm" orientation="landscape" file="US08627184-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="186.61mm" wi="161.54mm" file="US08627184-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="109.56mm" wi="159.85mm" file="US08627184-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="162.81mm" wi="165.44mm" file="US08627184-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="224.20mm" wi="178.39mm" orientation="landscape" file="US08627184-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="205.91mm" wi="173.23mm" file="US08627184-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="216.41mm" wi="174.50mm" orientation="landscape" file="US08627184-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="209.13mm" wi="168.40mm" file="US08627184-20140107-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="204.39mm" wi="164.17mm" file="US08627184-20140107-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">1. Field</p>
<p id="p-0003" num="0002">Various features pertain to broadcast control channels. At least one aspect pertains to methods for protecting a multiple message broadcast control channel.</p>
<p id="p-0004" num="0003">2. Background</p>
<p id="p-0005" num="0004">In a wireless multicast or broadcast delivery system, content and control information are transmitted from a single network server to several recipients over a lossy transmission environment, i.e., a wireless multicast channel. The control information typically includes two types of messages, a single primary message and one or more secondary messages. The primary message contains information that is processed by every recipient. It contains global information about the transmission network and includes identification information about the secondary messages, i.e. secondary messages identifiers. Therefore, the primary message is typically processed by the recipients before any of the secondary messages can be processed.</p>
<p id="p-0006" num="0005">Secondary message includes data blocks, that is, a number M data blocks, which contain information that only a subset of the N recipients actually process. For example, the secondary messages may be addressed to a subset of all the recipients while the data blocks may be targeted for one or more recipients within the subset. The secondary messages may also be processed by every recipient or by only some of the recipients. The data blocks may also be processed by all or only some of the recipients.</p>
<p id="p-0007" num="0006">It is possible for the recipients to receive erroneous information from these messages. Noise from the transmission media may alter the contents of the primary and/or secondary messages. Also, interference, such as intentional interference by malicious parties attempting to interfere with the communications may alter the primary and/or secondary messages. In most communication systems, the underlying communication infrastructure applies error-correcting codes to a whole message that can correct many, but not all, transmission errors. However, the error-correcting codes are able to detect the uncorrectable errors. In this case, the data blocks with uncorrectable errors are treated as erasures, and the corresponding data is ignored by the recipients.</p>
<p id="p-0008" num="0007">While corrupted, erroneous or tampered data blocks (e.g., containing video, audio, etc.) may cause some information to be presented incorrectly or incomplete, its malicious effects are relatively limited. However, if blocks containing control messages are modified or tampered in transit (e.g., by a malicious entity), these control messages can potentially change or modify the operation of the receiver device (e.g., change codes, channels, security levels, etc.) thereby compromising its operation and/or security. In such scenarios, it is the goal of an attacker to cause the recipients to process these modified control messages, thereby changing the receiver's state of operation to a malicious state. Consequently, a method is needed to efficiently protect a multi-part broadcast control messages during transmission and/or be able to ascertain whether a control message has or has not been modified.</p>
<heading id="h-0002" level="1">SUMMARY</heading>
<p id="p-0009" num="0008">A method and/or apparatus are provided for protecting control information during broadcasts in a system where primary and second mobile broadcast control messages (PMBCM and SMBCM) are utilized.</p>
<p id="p-0010" num="0009">According to one feature, a method for generating a secondary broadcast control message is provided that may be implemented, for example, on a transmitter, encoder, processor, and/or may be stored in a computer-readable medium. A secondary broadcast control message is generated that includes a plurality of control data blocks and error correcting code words. Information for the secondary broadcast control message may be included in a primary broadcast control message. A first hash information instance may be computed for the secondary broadcast control message based on a plurality of hashes for the plurality of control data blocks of the secondary broadcast control message. The first hash information instance may be included in the primary broadcast control message. The primary broadcast control message and the secondary broadcast control message may then be transmitted or broadcasted.</p>
<p id="p-0011" num="0010">In one example, computing the first hash information instance for the secondary broadcast control message based on a plurality of hashes for the plurality of control data blocks of the secondary broadcast control message may include (a) computing a first hash from a first control data block of the secondary broadcast control message, (b) computing a second hash from a second control data block of the secondary broadcast control message; and/or (c) computing the first hash information instance from the first hash and the second hash. A first error correcting code word may be computed based on the first hash and one or more additional hashes for the control data blocks of the secondary broadcast control message. A second error correcting code word may be computed based on the second hash and one or more additional hashes for the control data blocks of the secondary broadcast control message. The first error correcting code word and the second error correcting code word may be included in the secondary broadcast control message. The first error correcting code word may be included as part of the first control data block and the second error correcting code word may be included as pan of the second the control data block. In one example, the first error correcting code word may also be based at least partially on the second hash.</p>
<p id="p-0012" num="0011">According to another feature, a method for processing a secondary broadcast control message is provided that may be implemented, for example, on a receiver, decoder, processor, and/or may be stored in a computer-readable medium. A primary broadcast control message may be obtained. A secondary broadcast control message associated with the primary broadcast control message may also be obtained. For instance, the primary broadcast control message and secondary broadcast control message may be wirelessly received as part of one or more broadcasts. A first hash information instance for the secondary broadcast control message in the primary broadcast control message may be identified. A second hash information instance may be computed based on a plurality of control data blocks of the secondary broadcast control message, where the secondary broadcast control message includes error correcting code words that facilitate computing a correct version of the second hash information even if one or more of the control data blocks have been compromised. In one example, each control data block may have an appended error correcting code word based on one or more computed hashes for the plurality of control data blocks. The first hash information instance may then be compared to the second hash information instance to determine whether the secondary broadcast control message has been compromised. A digital signature of the primary broadcast control message may also be verified, where the digital signature covers the primary broadcast control message and the first hash information instance.</p>
<p id="p-0013" num="0012">A determination may then be made that a first control data block has been compromised. As a result, a first hash of the first control data block may be reconstructed from the error correcting code words. The second hash information may then be computed based on the first hash and one or more additional hashes for the plurality of control data blocks.</p>
<p id="p-0014" num="0013">According to one aspect, a determination may be made that a first control data block of the secondary broadcast control message has been compromised based on an error correcting code calculation. As a result, a code word may be identified corresponding to a second control data block of the secondary broadcast control message. A first hash may then be computed for the first control data block of the secondary broadcast control message based at least in part on an error correcting code word corresponding to the second control data block of the secondary broadcast control message. A second hash may be computed from the second control data block of the secondary broadcast control message. The second hash information instance may then be computed from the first hash and the second hash. Computing the second hash information instance may include: (a) computing a first hash from a first control data block of the secondary broadcast control message; (b) computing a second hash from a second control data block of the secondary broadcast control message; and/or (c) computing the second hash information instance from the first hash and the second hash.</p>
<p id="p-0015" num="0014">According to another aspect, if the comparison of the first hash information instance to the second hash information instance indicates that the secondary broadcast control message has been compromised additional steps may be performed. A third hash may be computed from a first code word corresponding to the first control data block. A fourth hash may be computed from a second code word corresponding to the second control data block. The second hash information instance may be recomputed from the third hash and the fourth hash. The first hash information instance may then be compared to the recomputed second hash information instance to determine whether the secondary broadcast control message has been compromised. The recomputed second hash information instance may then be compared to the first hash information instance to determine if they match. If a match is determined, (a) the one or more compromised control data blocks of the secondary broadcast control message may be identified and/or discarded, and/or (b) one or more of the remaining control data blocks may be utilized. If no match is determined, the secondary broadcast control message may be discarded.</p>
<p id="p-0016" num="0015">According to yet another aspect, if the comparison of the first hash information instance to the second hash information instance indicates that the secondary broadcast control message has been compromised, additional steps may be performed. A first code word may be obtained corresponding to the first control data block and including information for a hash of the second control data block. A third hash may be computed for the second control data block based on information from the first code word. The second hash information may be recomputed instance from the first hash and the third hash. The recomputed second hash information instance may then be compared to the first hash information instance to determine if they match. If a match is determined, (a) the second control data block identified and/or discarded, and (b) one or more of the remaining control data blocks may be utilized. If no match is determined, (a) a second code word may be obtained that corresponds to the second control data block and includes information for a hash of the first control data block, (b) a fourth hash may be computed based on information from the second code word, and/or (c) the second hash information instance may be recomputed from the second hash and the fourth hash.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0017" num="0016">The features, nature, and advantages of the present aspects may become more apparent from the detailed description set forth below when taken in conjunction with the drawings in which like reference characters identify correspondingly throughout.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram showing an example mobile broadcast system in which a primary mobile broadcast control message (PMBCM) is protected by a digital signature.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram of a system for efficiently protecting a mobile broadcast control message (MBCM) that is divided between a PMBCM (PMBCM) and a SMBCM.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram illustrating certain data blocks of a secondary being dedicated for specific mobile wireless receivers.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram illustrating a reception of an efficiently protected broadcast control message.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 5</figref> is a block diagram illustrating a reception of an efficiently protected broadcast control message in which at least one data block was received incorrectly.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 6</figref> is a block diagram illustrating an example of a broadcast transmitter <b>600</b> capable of efficiently protecting a multi-part broadcast control message.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 7</figref> is a flow diagram illustrating a method operational on a transmitter or encoder device for encoding a secondary broadcast control message.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 8</figref> is a flow diagram illustrating a method operational on a transmitter or encoder device that may be performed in conjunction with the method illustrated in <figref idref="DRAWINGS">FIG. 7</figref>.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 9</figref> is a flow diagram illustrating a method that may be used in conjunction with the method described with respect to <figref idref="DRAWINGS">FIGS. 7 and 8</figref>.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 10</figref> is a block diagram of a receiver or decoder device capable of receiving and processing an efficiently protected multi-part broadcast control message.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 11</figref> is a flow diagram illustrating a method operational at a receiver or decoder device for receiving a secondary broadcast control message.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 12</figref> is a flow diagram illustrating a method that can be carried out in conjunction with the method illustrated with respect to <figref idref="DRAWINGS">FIG. 11</figref>.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 13</figref> is a flow diagram illustrating a method that may be carried out in conjunction with the method illustrated with respect to <figref idref="DRAWINGS">FIG. 11</figref>.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 14</figref> is a block diagram illustrating a receiver capable of assuring that error correcting code words have been received correctly in cases where there are no unrecoverable data blocks.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 15</figref> is a flow diagram illustrating a method that may be carried out in conjunction with the method illustrated with respect to <figref idref="DRAWINGS">FIG. 12</figref> and by the receiver system illustrated with respect to <figref idref="DRAWINGS">FIG. 14</figref>.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 16</figref> is a block diagram illustrating a receiver capable of verifying a received secondary broadcast control message by using error correcting code words.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 17</figref> (comprising <figref idref="DRAWINGS">FIGS. 17A and 17B</figref>) is a flow diagram illustrating a method that may be carried out in conjunction with the method illustrated with respect to <figref idref="DRAWINGS">FIG. 12</figref> and by the receiver system illustrated with respect to <figref idref="DRAWINGS">FIG. 16</figref>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0035" num="0034">In the following description, specific details are given to provide a thorough understanding of the embodiments. However, it will be understood by one of ordinary skill in the art that the embodiments may be practiced without these specific detail. For example, circuits may be shown in block diagrams in order not to obscure the embodiments in unnecessary detail. In other instances, well-known circuits, structures and techniques may be shown in detail in order not to obscure the embodiments.</p>
<p id="h-0005" num="0000">Overview</p>
<p id="p-0036" num="0035">In multicast or broadcast distribution systems, control information, such as service guides, end-user license agreements, etc., need to be distributed to recipients correctly. An attacker can modify this control information, having an undesirable effect to the overall system. Usually, this risk can be addressed by computing a cryptographic authentication code over all of the control information. However, transmission errors caused by the noisy nature of the transmission medium may cause failed authentication verification. The amount of transmission errors can be reduced with the use of error correcting codes, such as Reed-Solomon codes, but not eliminated. While a message (including data and control information) may be protected by an error correcting code over the whole message, this does not distinguish between errors to data versus errors to control messages. Note that when errors to data (e.g., video, audio, etc.) occur, such data may often be ignored or reconstructed without significant deleterious effects. However, when errors are present to control information (e.g., control messages that can modify the operation or a receiver), these errors may be more difficult to reconstruct and can affect the performance of a system if retransmissions are needed.</p>
<p id="p-0037" num="0036">A scheme is provided herein which combines erasure codes, digital signatures, and cryptographic hashes to enable control information to be verified in the presence of transmission errors. By using erasure codes, hash values of lost blocks of a control message can be regenerated. The regenerated hash values are then used to verify the remaining information in a strong cryptographic manner.</p>
<p id="p-0038" num="0037">In one example, a private/public cryptographic key pair is generated by a security server. The private key is securely stored at the server, while the public key is distributed to all recipients that are to receive a multicast transmission (e.g., including a primary and second message). In addition to the private/public key pair, the server and the recipients may also generate an erasure code generator matrix, such as a Reed-Solomon Erasure Code Generator Matrix R. When the server is creating a primary message and a secondary message (comprising a plurality of data blocks) for transmission or broadcasting to the recipients, it generates a hash hx for each data block within the secondary message. These hash values hx may be combined to form a hash vector H, which the transposed vector is H<sup>T</sup>=[h<b>1</b> h<b>2</b> . . . hM] for x=1 . . . M. Using these hash values, a plurality of erasure codes C, which the transposed vector is C<sup>T</sup>=[c<b>1</b> c<b>2</b> . . . cM] for x=1 . . . M, can be generated such that C=RH. Then, a hash of the hash vector H is computed and stored as part of the primary message by the server. This is done for each of the secondary messages. Then, the server computes the digital signature of the primary message using the private key and sends it with the primary message. Finally, the erasure codes C are appended to the corresponding data block in every secondary message, which is sent to the recipients. An erasure code transforms a message of n blocks into a message with more than n blocks, such that the original message can be recovered from a subset of those blocks. The fraction of the blocks required to reconstruct is called the rate, denoted r. Erasure codes are used as part of forward error correction.</p>
<p id="p-0039" num="0038">In the primary message, all of the information, including the hash information, is secured by the digital signature. Upon receiving the primary message, the recipients verify its digital signature. If the signature verification fails (e.g., either by modification by an attacker or noise on the transmission channel), the primary message is discarded. If the signature verification is successful, the recipients process the primary message; this includes identification and hash information for the secondary messages. Then, the recipients acquire the secondary messages using the information from the primary message. If the secondary message is received without any transmission errors, then the hash of each data block is computed and combined to form a hash vector. Then, the hash of the hash vector is locally computed and compared to the received hash from the primary message. If the hash from the primary message matches the computed hash, then the secondary message is received correctly and can be processed. If the hash from the primary message does not match the computed hash, then the secondary message is assumed to have been modified and is discarded. If the secondary message is received with transmission errors that corrupted K data blocks (where K&#x3c;M/2), then the hash of each of the M-K error-free data blocks is computed. Then, K erasure code words are taken from any of the M-K data blocks. The K erasure code words are combined with the M-K computed hash values and input into an erasure code decoder, which regenerates the missing K hash values. The regenerated K hashes are combined with the computed M-K hashes to form a local version of the hash vector. Then, the hash of the locally-computed hash vector is computed and compared to the received hash from the primary message. If the received hash from the primary message matches the locally-computed hash, then the M-K data blocks from the secondary message are received correctly and can be processed. If the received hash from the primary message does not match the locally-computed hash, then the secondary message is assumed to have been modified and is discarded.</p>
<p id="h-0006" num="0000">Example Network Environment</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram showing an example mobile broadcast system <b>100</b> in which a primary mobile broadcast control message (PMBCM) is protected by a digital signature. A secondary mobile broadcast control message (SMBCM) is also protected by the digital signature because hash information of the SMBCM is protected by the digital signature in the PMBCM.</p>
<p id="p-0041" num="0040">In one example, broadcast message transmissions <b>130</b> may include content <b>132</b> (e.g., video, data, etc.), control information <b>134</b>), and a message error correcting code (ECC) <b>136</b> over the whole message <b>130</b>. The control information <b>130</b> may include a PMBCM <b>138</b> and one or more SMBCMs <b>140</b> and <b>142</b> associated with the PMBCM <b>138</b>.</p>
<p id="p-0042" num="0041">A network operations center <b>102</b> collects broadcast signals and prepares them for broadcast over a mobile broadcast network. For example, the mobile broadcast network may be a Media Forward Link Only (MediaFLO) network, which is standardized by the FLO Forum. Other example broadcast networks are Digital Video Broadcasting-Handheld (DVB-H), published as European Telecommunications Standards Institute (ETSI) standard EN <b>302</b> <b>304</b>, Digital Multimedia Broadcasting (DMB) in Korea, and Integrated Services Digital Broadcasting (ISDB), by the Association of Radio Industries and Businesses in Japan. The systems and methods described herein are not limited to the above example mobile broadcast systems, but could be applied to other broadcast systems as well.</p>
<p id="p-0043" num="0042">The network operations center <b>102</b> may receive content (e.g., video and/or data) and process it for distribution to a transmitter site <b>104</b>. Content may be received by satellite signal at an antenna <b>106</b>. Alternatively, content may be received from the internet or other network (not shown). A receiver/decoder <b>108</b> demodulates and decodes the received content. A transcoder <b>110</b> (e.g., transmission coder) codes the content for mobile broadcasting. A transmit multiplexer <b>112</b> may multiplex the content (e.g., video and/or data) with control information to generate a multiplexed stream of control information <b>113</b> for transmission. The network operations center <b>102</b> then transmits the multiplexed stream <b>115</b> to the transmitter site <b>104</b>.</p>
<p id="p-0044" num="0043">The transmitter site <b>104</b> may include a receiver/decoder <b>114</b> which receives and decodes the multiplexed broadcast signals from the network operations center <b>102</b>. Signals may be transmitted to the transmitter site <b>104</b> by satellite, or by other high speed data transmission network, such as, for example, a fiber optic network (not shown). The transmitter/encoder <b>116</b> encodes and transmits mobile broadcast signals to one or more mobile wireless devices <b>118</b>, <b>120</b> and <b>122</b>. Prior to transmission, the transmitter/encoder <b>116</b> may generate an error correcting code for the whole transmission, which can be used by a recipient to determine if the transmission is corrupt and potentially regenerate the corrupted portions.</p>
<p id="p-0045" num="0044">In one example, content and control information may be transmitted (e.g., as part of message <b>130</b>) from a network server, e.g., network operations center <b>102</b> to N recipients (shown as wireless devices <b>118</b>, <b>120</b> and <b>122</b>) over a lossy transmission environment, i.e., a wireless multicast channel. Control information <b>134</b> may include at least two types of messages: a PMBCM and one or more SMBCMs.</p>
<p id="p-0046" num="0045">Note that, unless the multiplexed stream <b>115</b> (e.g., content and/or control information) is protected, there is a risk that an attacker A <b>117</b> may intercept the stream <b>115</b> and replace the control information therein with its own control information, and retransmit it to the transmitter site <b>104</b> (thereby attempting to modify the operation of recipient wireless devices). An attacker B <b>119</b> may also intercept messages broadcasted from the transmitter site <b>104</b> in order to replace control information therein.</p>
<p id="p-0047" num="0046">The error correcting code <b>136</b> generated by the transmitter/encoder <b>116</b> may be used to detect transmission errors by the recipient devices <b>118</b>, <b>120</b> and <b>122</b>. However, an attacker <b>110</b> may intercept the transmission <b>130</b>, insert or replace control messages in the transmission, generate its own error correcting code, and retransmit the message such that no error is detected by the devices <b>118</b>, <b>120</b> and <b>122</b>. Consequently, this conventional use of error correcting codes over the whole transmission or message <b>130</b> is inadequate to protect against attackers that replace control information.</p>
<p id="p-0048" num="0047">According to one feature, an additional level of error correcting codes are used to specifically protect control information against corruption or replacement during transmission.</p>
<p id="h-0007" num="0000">Related Message Protection Approaches</p>
<p id="p-0049" num="0048">Various approaches may be used to protect a primary message and/or secondary message from attackers.</p>
<p id="p-0050" num="0049">A first approach provides a digital signature over the primary message and a separate digital signature over the secondary message, using a private key at the server. The recipients use a public key to verify the digital signatures. In this approach, an error in any of the M data blocks of the secondary message causes all of the M data blocks to be discarded, since there is no way to determine which of the M data blocks has the error or was attacked.</p>
<p id="p-0051" num="0050">A second approach computes a keyed-hash over each secondary message using a shared secret key between the server and the network devices. In addition to the shortcomings of the first approach, this approach also has a problem with non-repudiation since there is no way to determine the actual sender of the secondary messages. Non-repudiation means being certain of who sent the message, so that a sender cannot claim not to be the sender of a message, or repudiate the message.</p>
<p id="p-0052" num="0051">A third approach computes a digital signature over the primary message and a digital signature over each of the M data blocks in a secondary message. While this third approach addresses the issues associated with the first and second approaches, the size of the digital signature may be prohibitively large in relation to the size of the data block. Moreover, the processing requirement to verify the M digital signatures for each block is also burdensome on the recipients.</p>
<p id="p-0053" num="0052">A fourth approach generates a hash tree over the second message and stores the root hash in the primary message. A digital signature is computed over the primary message. This approach addresses the processing issue with the third approach. However, each data block must contain enough hash information to guarantee that each data block can be verified independently of the others. For small numbers of data blocks M, the amount of additional hash information is manageable but can quickly grow as the data blocks M increases.</p>
<p id="h-0008" num="0000">Example Method for Protecting Multi-Part Control Message</p>
<p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram of a system for efficiently protecting a mobile broadcast control message (MBCM) that is divided between a PMBCM and a SMBCM. In one example, this process may be implemented at a transmitter of a MBCM. As used herein, an MBCM may be part of a larger broadcast or transmission (such as <b>130</b> in <figref idref="DRAWINGS">FIG. 1</figref>) that is protected by a high level ECC <b>136</b> (<figref idref="DRAWINGS">FIG. 1</figref>). A PMBCM <b>202</b> may include a primary message payload <b>204</b>, hash information <b>206</b> of at least a part of a SMBCM and a digital signature <b>208</b>. The primary message payload <b>204</b> may include global information about the transmission network, and identification information <b>248</b> about at least one SMBCM <b>210</b>, i.e. secondary messages identifiers. The PMBCM <b>202</b> is typically processed by the recipients before any of the secondary messages are processed. The SMBCM <b>210</b> may include one or more control data blocks.</p>
<p id="p-0055" num="0054">It may be more important for the control data blocks to be protected than typical data carrying data blocks. Data carrying blocks may be video data which, if corrupted or received with errors, would only temporarily or minimally affect a user's experience (e.g., temporary degradation of a video display, or temporary loss of signal). However, the video signal typically returns to normal after a short time. However, control data blocks may affect the operation of the receiving device (e.g., which channels are viewed in a mobile video system, security codes, content restrictions or control. If the control data blocks are received in error, the functioning of the mobile video device may be impaired. For example, the wrong channels may be displayed, or no channels at all. Accordingly, it may be more important to protect the control data blocks.</p>
<p id="p-0056" num="0055">One example of the SMBCM <b>210</b> is shown. Each SMBCM <b>210</b> includes M control data blocks <b>212</b>, <b>214</b>, <b>216</b>, <b>218</b>, <b>220</b>, <b>222</b>, <b>224</b> and <b>226</b>, which contain information that only a subset of the N recipients may actually process. For example, the SMBCMs may be addressed to a subset of all the recipients while the control data blocks may be targeted for one or more recipients within the subset. A secondary message identification <b>248</b> may include information identifying which SMBCMs are needed by or targeted to which receivers. For example, the secondary message identification <b>248</b> may include a mapping of a service or channel to an SMBCM ID. In that case, receivers would identify the service or channel selected and read the mapping from the selected service or channel to the mapped SMBCM ID. Accordingly, the receiver would know which SMBCMs to read.</p>
<p id="p-0057" num="0056">For example, <figref idref="DRAWINGS">FIG. 3</figref> is a block diagram illustrating certain control data blocks of a secondary message being dedicated for specific mobile wireless receivers. The SMBCM <b>302</b> may include a plurality of control data blocks, control data block <b>1</b> (DB<b>1</b>) <b>304</b>, control data block <b>2</b> (DB<b>2</b>) <b>306</b> to control data block M-1 (DB M-1) <b>308</b> and control data block M (DB M) <b>310</b>. In the example of <figref idref="DRAWINGS">FIG. 3</figref>, there are N receivers (R). The control data block DB <b>1</b> <b>304</b> is intended for, and will be processed by, Receiver <b>1</b> (R<b>1</b>) <b>312</b>, Receiver <b>4</b> (R<b>4</b>) <b>315</b>, Receiver N-6 (R(N-6)) <b>314</b> and Receiver R(N-5) (R(N-5)) <b>316</b>, as indicated by solid line <b>318</b>. Similarly, control data block DB <b>2</b> <b>306</b> is intended for receivers R(<b>2</b>) <b>320</b>, R(<b>3</b>) <b>322</b> and R(<b>5</b>) <b>324</b>, as shown by large dashed line <b>326</b>. Similarly, control data block DB M-1 <b>308</b> is intended for receivers R(<b>6</b>) <b>328</b>, R(N-3) <b>330</b> and R(N) <b>332</b>, as shown by small dashed line <b>334</b>. Finally, control data block DB M <b>310</b> is intended for receivers R(<b>7</b>) <b>336</b>, R(<b>8</b>) <b>338</b>, R(N-7) <b>340</b>, and R(N-4) <b>342</b> as shown by dot-dashed line <b>344</b>.</p>
<p id="p-0058" num="0057">Referring again to <figref idref="DRAWINGS">FIG. 2</figref>, a private/public cryptographic key pair may be generated by the network (e.g., network operations center <b>102</b>). The private key is securely stored at the network, while the public key is distributed to all of the recipients (e.g., receivers) that will receive the multicast transmission. Additionally, the network and the recipients may also generate an erasure code generator matrix, such as, for example, a Reed-Solomon erasure code generator matrix R. The systems and methods herein are described with respect to private/public key cryptography and Reed-Solomon erasure codes, as examples. Other cryptography and erasure codes could be used.</p>
<p id="p-0059" num="0058">The network <b>102</b> (e.g., network operations center) or transmitter site <b>104</b> may generate a hash (h(<b>1</b>) <b>228</b>, h(<b>2</b>) <b>230</b>, h(<b>3</b>) <b>232</b>, h(<b>4</b>) <b>234</b>, h(M-3) <b>236</b>, h(M-2) <b>238</b>, h(M-1) <b>240</b> and h(M) <b>242</b>) for each data block (<b>212</b>, <b>214</b>, <b>216</b>, <b>218</b>, <b>220</b>, <b>222</b>, <b>224</b> and <b>226</b>) within the SMBCM <b>210</b>. For instance, hash h<b>1</b> <b>228</b> is generated based on a data portion <b>243</b> of the control data block DB<b>1</b> <b>212</b>. These hash values, h<b>1</b>, h<b>2</b> . . . h(M) are combined to form a vector H (e.g., h<b>1</b> . . . h(M)), such that the transposed vector H is represented as:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>H</i><sup>T</sup><i>=[h</i>1 <i>h</i>2 <i>. . . hM]</i><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
An erasure code generator <b>246</b> may generate erasure codes (e.g., vector C) from the hash values (e.g., vector H) and code generator matrix R by performing the following matrix computation:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>C=R&#xd7;H, </i><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
such that the transposed vector C is represented as:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>C</i><sup>T</sup><i>=[c</i>1 <i>c</i>2 <i>. . . cM]. </i><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
Therefore, each erasure code word produced by the generator <b>246</b> is a combination of hashes for a plurality of control data blocks. The erasure code words in the transposed vector C are appended to the corresponding control data block in every SMBCM. One example element of the transposed vector C is shown for control data block DB<b>1</b> <b>212</b> where erasure code word <b>244</b> is appended to the control data portion <b>243</b> of the control data block DB<b>1</b> <b>212</b>. In this example, the erasure code word <b>244</b> is based on a plurality of the hashes (h<b>1</b> . . . h(M)) associated with a plurality of control data blocks. Similarly, the other elements of the erasure code words in C corresponding to each control data block DB are appended to each control data block DB. Note that each erasure code associated with a particular control data block may be based on one or more hashes for other data blocks. Therefore, if one of those other control data blocks is corrupted (at a receiver), its hash can be reconstructed based on the erasure code associated with other control data blocks.
</p>
<p id="p-0060" num="0059">In addition to the hashes of each control data block, a hash information <b>206</b> is also computed of the hash vector (e.g., the combination of hashes for all blocks). In other words, hash information <b>206</b> is a hash of hashes. The hash <b>206</b> of the hash vector is computed and stored in the PMBCM by the server <b>102</b> or transmitter <b>104</b>. By computing a hash information <b>206</b> of hashes of the control data blocks, each of the control data blocks can be protected without including a separate hash for each control data block in the SMBCM. One hash <b>206</b> (which is a hash of hashes) can be used as a hash for all of the control data blocks. This is done for each of the SMBCMs. The server or transmitter computes the digital signature <b>208</b> of the PMBCM using the private key and sends it with the PMBCM.</p>
<p id="p-0061" num="0060">In the PMBCM, all of the information, including the hash information <b>206</b>, is secured by the digital signature <b>208</b>. Upon receiving the PMBCM, the recipients verify its digital signature <b>208</b>. If the signature verification fails (either by modification by an attacker or noise on the transmission channel), the PMBCM is discarded.</p>
<p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram illustrating reception of an efficiently protected broadcast control message. This diagram illustrates how a receiver may perform operations to verify the accuracy of information in a broadcast control message (e.g., primary and/or secondary messages). For instance, a digital signature <b>405</b> over the whole primary message <b>402</b> may be used to verify the message's accuracy. Note that the digital signature <b>405</b> may be a signature, at least in part, of hash information <b>404</b>, because hash information <b>404</b> may be included in the primary message <b>402</b>. Hash information <b>404</b> is a hash of hashes of SMBCM control data blocks, as described further below. If the signature verification succeeds, the recipients process the PMBCM <b>402</b>. The PMBCM <b>402</b> includes a secondary message identification <b>403</b> and hash information <b>404</b> for one ore more SMBCMs. The recipients acquire an SMBCM <b>406</b> using the information <b>403</b> from the PMBCM <b>402</b>. If the SMBCM is received without any transmission errors, then each hash (<b>408</b>, <b>410</b>, <b>412</b>, <b>414</b>, <b>416</b>, <b>418</b>, <b>420</b> and <b>422</b>) of each control data block is computed by hash engine <b>426</b> and combined to form a hash vector such that the transposed hash vector is H<sup>T</sup>=[h<b>1</b> h<b>2</b> . . . h(M)]. A hash engine <b>426</b> is shown as hash engines <b>426</b><i>a </i>and <b>426</b><i>b</i>. The hash engines <b>426</b><i>a </i>and <b>426</b><i>b </i>may be the same hash engine, and are only shown separately to illustrate the different aspects of the hash engine <b>426</b>.</p>
<p id="p-0063" num="0062">A hash instance <b>424</b> of the hash vector is computed by the hash engine <b>426</b><i>b</i>. In other words, hash instance <b>424</b> is a hash of hashes of the received SMBCM control data blocks. Hash instance <b>424</b> is compared to the received hash <b>404</b> from the PMBCM <b>402</b> (e.g., another hash instance). If the hash instance <b>404</b> from the PMBCM <b>402</b> matches the computed hash instance <b>424</b>, then the SMBCM <b>406</b> is assumed to have been received correctly and can be processed. If the hash <b>404</b> from the PMBCM <b>402</b> does not match the computed hash <b>424</b>, then the SMBCM <b>406</b> is assumed to have been modified and may be discarded.</p>
<p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. 5</figref> is a block diagram illustrating reception of an efficiently protected broadcast control message in which at least one control data block was received incorrectly. A PMBCM <b>501</b> is received at a receiver. The PMBCM <b>501</b> may be processed as illustrated in <figref idref="DRAWINGS">FIG. 4</figref>. If the SMBCM <b>502</b> is received with errors, erasure code words from the control data blocks received correctly may be used to compute the correct hash for the data block received with error(s). If there are K corrupted control data blocks (i.e., blocks received with errors), then there are M-K error-free control data blocks. For example, control data block DB<b>3</b> <b>504</b> may be received corrupted, as shown in <figref idref="DRAWINGS">FIG. 5</figref> by the &#x201c;X&#x201d; on control data block DB<b>3</b> <b>504</b>. The K erasure code words may be taken from any of the M-K control data blocks correctly received. In the example of <figref idref="DRAWINGS">FIG. 5</figref>, K=1. The K erasure code words are combined with the M-K computed hash values and input into the erasure code decoder <b>506</b>. In the example, one erasure code word CW <b>1</b> <b>530</b> serves as input to a forward error correction (FEC) decoder <b>506</b> because one control data block (i.e., DB<b>3</b> <b>504</b>) was received corrupted. Hash values <b>510</b>, <b>512</b>, <b>514</b>, <b>516</b>, <b>518</b>, <b>520</b>, <b>522</b> for the control data blocks are used together with the code word CW <b>1</b> <b>530</b> to generate the missing hash value for the corrupted control data block DB <b>3</b> <b>504</b>. The FEC <b>506</b> may utilized the code words (e.g., erasure code words) to regenerate the missing K hash values, for example, one hash value, Hash <b>3</b> <b>508</b> corresponding to the corrupted control data block DB<b>3</b> <b>504</b>. The regenerated K hashes <b>508</b> are combined with the computed M-K hashes <b>510</b>, <b>512</b>, <b>514</b>, <b>516</b>, <b>518</b>, <b>520</b>, <b>522</b> to form a hash vector <b>524</b>. The hash of the hash vector <b>524</b> is computed by a hash engine <b>525</b> as a hash instance <b>526</b> and compared to the received hash instance <b>528</b> from the PMBCM <b>501</b>. If the hash <b>528</b> from the PMBCM matches the computed hash <b>526</b>, then the M-K control data blocks from the SMBCM <b>502</b> are assumed to have been received correctly and can be processed. If the hash <b>528</b> from the PMBCM <b>501</b> does not match the computed hash <b>526</b>, then the SMBCM <b>502</b> is assumed to have been modified and is discarded. Consequently, any modification to a transmission that results in an invalid change to the control information (e.g., SMBC blocks) can be detected.</p>
<p id="p-0065" num="0064">Note that alternative methodologies to those illustrated in <figref idref="DRAWINGS">FIGS. 4 and 5</figref> may be possible. For instance, <figref idref="DRAWINGS">FIGS. 14 and 16</figref> illustrate two alternative examples for protecting broadcast control messages.</p>
<p id="h-0009" num="0000">Example Transmitter/Encoder Device and Operation thereof</p>
<p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. 6</figref> is a block diagram illustrating an example of a broadcast transmitter <b>600</b> capable of efficiently protecting a multi-part broadcast control message. The broadcast transmitter <b>600</b> may be, for example, the transmitter site <b>104</b> shown with respect to <figref idref="DRAWINGS">FIG. 1</figref>. The transmitter <b>600</b> may include a receiver <b>602</b> for receiving signals prepared for wireless broadcasting to mobile receivers. The receiver <b>602</b> may be, for example, the receiver <b>114</b> shown with respect to <figref idref="DRAWINGS">FIG. 1</figref>. For example, the receiver <b>602</b> may receive signals (e.g., control messages) from the network operations center <b>102</b> shown with respect to <figref idref="DRAWINGS">FIG. 1</figref>. The receiver <b>602</b> may be connected to a processor <b>604</b>. The processor <b>604</b> may be included, at least in part, in the transmitter/encoder <b>116</b> shown with respect to <figref idref="DRAWINGS">FIG. 1</figref>. The processor <b>604</b> may include a primary broadcast control message generator <b>609</b>, a secondary broadcast control message generator <b>611</b>, cryptographic engine <b>606</b> and a FEC encoder <b>608</b>. The cryptographic engine <b>606</b> may include a hash engine <b>612</b> for hashing a control message, such as the control data blocks <b>212</b>-<b>226</b> of the SMBCM <b>210</b> shown with respect to <figref idref="DRAWINGS">FIGS. 2-5</figref>. A digital signer <b>614</b> may create a digital signature, such as the digital signature <b>208</b> shown with respect to <figref idref="DRAWINGS">FIG. 2</figref>. The FEC encoder <b>608</b> may be adapted to generate an erasure code (e.g., error correcting code words) for the control message, such as erasure code <b>244</b> for control data block <b>212</b> and the other erasure code words appended to each of the control data blocks shown with respect to <figref idref="DRAWINGS">FIG. 2</figref>. Alternatively, various features or functions of the processor <b>604</b> may be included in the transcoder <b>110</b>, multiplexer <b>112</b> or other module shown with respect to <figref idref="DRAWINGS">FIG. 1</figref>. In other words, various modules or functions of the processor <b>604</b> may be in the network operations center <b>102</b> or may be in the transmitter site <b>104</b> of <figref idref="DRAWINGS">FIG. 1</figref>. For example, digital signer <b>614</b> may be at the network operations center <b>102</b> while the FEC encoder <b>608</b> may be in the transmitter/encoder <b>116</b> at the transmitter site <b>104</b>.</p>
<p id="p-0067" num="0066">A modulator/RF front end <b>618</b> may be connected to the processor <b>604</b>. The modulator/transmitter <b>618</b> modulates and/or transmits the primary and secondary control messages, along with other signals, such as digital video data and transmits the signals on antenna <b>620</b>. A storage device <b>616</b> may also be connected to the processor <b>604</b> for storing the control messages and/or data.</p>
<p id="p-0068" num="0067">One or more components of the broadcast transmitter <b>600</b> may be adapted to protect a multi-part broadcast control message. For instance, the primary broadcast control message generator <b>609</b> may be adapted to generate a primary broadcast control message while the second broadcast control message <b>611</b> may be adapted to generate a second broadcast control message. A hash may be computed over the secondary message SMBCM and appended to the primary message PMBCM. In one example, the hash over the SMBCM may be based on a plurality hashes for control data blocks of the SMBCM. Error correcting codes for the plurality of hashes may be generated and included as part of the SMBCM so that the control data blocks can be verified even if one or more of the control data blocks is corrupted during transmission. A digital signature may be computed over the PMBCM. This approach addresses the processing issue with the third approach noted above. However, each control data block of an SMBCM must contain enough hash information to guarantee that each control data block can be verified independently of the others. For small numbers of M control data blocks, the amount of additional hash information is manageable but can quickly grow as M increases.</p>
<p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. 7</figref> is a flow diagram illustrating a method operational on a transmitter or encoder device for generating a secondary broadcast control message. The method may be performed by transmitter/encoder <b>116</b> or Tx Multiplexer <b>112</b> shown with respect to <figref idref="DRAWINGS">FIG. 1</figref>. Error correcting codes may be computed for a secondary broadcast control message <b>702</b>. For instance, an error correcting code for the secondary broadcast control message may be computed based on or more hashes for control data blocks of the secondary broadcast control message. The secondary broadcast control message may be generated that includes a plurality of control data blocks and error correcting code words <b>704</b>. The computed error correcting code words may be appended to the control data blocks of the secondary broadcast control message. <figref idref="DRAWINGS">FIG. 2</figref> illustrates one example of how a secondary broadcast control message <b>210</b> including control data blocks <b>212</b>-<b>226</b> having error correcting code words <b>244</b>.</p>
<p id="p-0070" num="0069">Information for the secondary broadcast control message may be included in a primary broadcast control message <b>706</b>. For example, information identifying the secondary control message may be included in the primary broadcast control message. A first hash information instance for the secondary broadcast control message may be computed based on a plurality of hashes of control data blocks of the secondary broadcast control message <b>708</b>. The first hash information instance may be included in the primary broadcast control message <b>710</b>. Optionally, the primary broadcast control message may be encoded with a digital signature of the primary broadcast control message including the first hash information instance <b>712</b>. The primary and/or secondary broadcast control message(s) may then be transmitted <b>714</b>.</p>
<p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. 8</figref> is a flow diagram illustrating a method operational on a transmitter or encoder device that may be performed in conjunction with the method illustrated in <figref idref="DRAWINGS">FIG. 7</figref>. The method of <figref idref="DRAWINGS">FIG. 8</figref> provides an example of the step <b>708</b> (<figref idref="DRAWINGS">FIG. 7</figref>) of computing the first hash information instance for the secondary broadcast control message. A first hash is computed from a first control data block of the secondary broadcast control message <b>802</b>. A second hash may be computed from a second control data block of the secondary broadcast control message <b>804</b>. Similarly, additional hashes may be computed for each additional control data block of the secondary broadcast control message <b>806</b>. A hash information instance is computed from the first hash and the second hash (and possibly the additional hashes of the additional control data blocks) <b>808</b>. This hash information instance may be the first hash information instance of step <b>708</b> of <figref idref="DRAWINGS">FIG. 7</figref> and/or the hash <b>206</b> of <figref idref="DRAWINGS">FIG. 2</figref>. This process may be repeated for each secondary message such that a hash information instance for each secondary message is included in the primary message.</p>
<p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. 9</figref> is a flow diagram illustrating a method that may be used in conjunction with the method described with respect to <figref idref="DRAWINGS">FIGS. 7 and 8</figref>. For instance, the steps of <figref idref="DRAWINGS">FIG. 9</figref> may be performed as part of steps <b>702</b> and/or <b>704</b> of <figref idref="DRAWINGS">FIG. 7</figref>. A first error correcting code word is computed based on a first hash and (possibly) one or more additional hashes <b>902</b>. Such first hash may be a hash of a first control data block of the secondary broadcast control message while the one or more additional hashes may be hashes for other control data blocks of the secondary broadcast control message. Similarly, a second error correcting code word may be computed based on a second hash and (possibly) one or more additional hashes <b>904</b>. Such second hash may be a hash of a second control data block of the secondary broadcast control message while the one or more additional hashes may be hashes for other control data blocks of the secondary broadcast control message. The first error correcting code word and the second error correcting code word may be included in the secondary broadcast control message <b>906</b>. For example, the first error correcting code word may be appended to the first control data block and the second error correcting code word may be appended to the second control data block.</p>
<p id="p-0073" num="0072">As illustrated in <figref idref="DRAWINGS">FIGS. 2</figref>, <b>7</b>, <b>8</b>, and <b>9</b>, the integrity of a secondary broadcast control message may be secured by generating a hash from the hashes of control data blocks of the secondary broadcast control message. This hash is appended to an associated primary broadcast control message. Additionally, error correcting code words may be generated for each of the hashes of the control data blocks, thereby facilitating reconstruction of hashes for a potentially compromised control data block.</p>
<p id="p-0074" num="0073">According to one feature for securing the integrity of a secondary message (or control data block therein), the digital signature is not distributed across each SMBCM but is localized to the PMBCM. For instance, the digital signature <b>208</b> in <figref idref="DRAWINGS">FIG. 2</figref> is only for the PMBCM <b>202</b> and is not appended with the SMBCM <b>210</b>. This saves significant processing time and power, and also consumes less communication bandwidth.</p>
<p id="p-0075" num="0074">According to another feature for securing the integrity of a secondary message (or control data block therein), a single-level erasure code is generated where only the error correcting code words of the hash array are appended to the SMBCMs. For instance, as illustrated in <figref idref="DRAWINGS">FIG. 2</figref>, an erasure code <b>244</b> is generated based on the hash array (hashes <b>228</b>-<b>242</b>) and is appended to the control data portion <b>243</b> of the first control data block DB<b>1</b> <b>212</b>. This approach avoids the use of a second level of erasure codes (e.g., based on the digital signature <b>208</b> and/or hashes <b>228</b>-<b>242</b>) thereby reducing processing power and time in addition to avoiding usage of more bandwidth consumption.</p>
<p id="h-0010" num="0000">Example Receiver/Decoder Device and Operation thereof</p>
<p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. 10</figref> is a block diagram of a receiver or decoder device capable of receiving and processing an efficiently protected multi-part broadcast control message. The receiver <b>1000</b> may receive a primary message (PMBCM) and a secondary message (SMBCM) at antenna <b>1002</b>. A demodulator/RF Front End Receiver <b>1004</b> receives and/or demodulates the received signals, including the PMBCM and SMBCMs. The demodulated messages are received by processor <b>1006</b>. A processor <b>1006</b> may include a primary broadcast control message verifier <b>1009</b>, a secondary broadcast control message verifier <b>1011</b>, a cryptographic engine <b>1008</b> and a FEC decoder <b>1010</b>. The cryptographic engine <b>1008</b> may be adapted to perform hashing of control data blocks at a hash engine <b>1012</b> and digital signature verification at a digital signature verifier <b>1014</b> as described above with respect to <figref idref="DRAWINGS">FIGS. 1-5</figref>. The hash engine <b>1012</b> may be separate from the cryptographic engine <b>1008</b>. Also, if convenient, the cryptographic engine <b>1008</b> and FEC decoder <b>1010</b> may be on separate processors, instead of on a single processor <b>1006</b>.</p>
<p id="p-0077" num="0076">As described above with respect to <figref idref="DRAWINGS">FIGS. 4 and 5</figref>, a PMBCM may be decoded and the digital signature is verified. If the digital signature is incorrect, the PMBCM is discarded. If the digital signature is correct, the PMBCM is interpreted. The SMBCM ID is identified, and the SMBCM is acquired and decoded. The SMBCM hashes are computed by the hash engine <b>1012</b>, as described with respect to <figref idref="DRAWINGS">FIGS. 4</figref>, <b>5</b>, <b>14</b> and <b>15</b>. If a control data block is received corrupted, then the processor <b>1006</b> passes K code words and M-K hashes to FEC decoder <b>1010</b>. The FEC decoder <b>1010</b> may generate the missing hashes K, such as, for example, the hash h<b>3</b> <b>508</b> shown with respect to <figref idref="DRAWINGS">FIG. 5</figref>. A hash instance <b>526</b> of the hashes for control data blocks of a SMBCM is computed by the hash engine <b>1012</b>. The processor <b>1006</b> compares hash instance <b>526</b> to a received hash instance <b>528</b>. Processor <b>1006</b> is connected to storage <b>1016</b> for storing messages and data for use with receiver <b>1000</b>.</p>
<p id="p-0078" num="0077">The receiver <b>1000</b> may be capable of displaying mobile video signals. For example, the receiver <b>1000</b> may be a MediaFLO-compatible device or other mobile video device. Accordingly, the receiver <b>1000</b> may include a user interface <b>1018</b>. The user interface <b>1018</b> may include a visual display <b>1020</b> and speaker (not shown) for playing video/audio received. The user interface <b>1018</b> may also include a keypad <b>1022</b> for receiving user input such as video channel selection, entering security information, such as a personal identification number (PIN), or other input information. The receiver <b>1000</b> may also include various other devices and modules not shown. For example, receiver <b>1000</b> may include a wireless wide area network transceiver for communicating on a wireless network, such as, for example, a CDMA cellular network or a GSM network.</p>
<p id="p-0079" num="0078"><figref idref="DRAWINGS">FIG. 11</figref> is a flow diagram illustrating a method operational at a receiver or decoder device for receiving a secondary broadcast control message. For example, the method may be performed by the receiver <b>1000</b> of <figref idref="DRAWINGS">FIG. 10</figref>. A primary broadcast control message is obtained <b>1102</b>. That is, the primary broadcast control message may be received (e.g., by listening on a particular channel) or may be read from a memory or buffer at the receiver. A digital signature of the primary broadcast control message may be verified. For example, the digital signature may be verified by a digital signature verifier <b>1014</b> (<figref idref="DRAWINGS">FIG. 10</figref>). A secondary broadcast control message may be obtained using the secondary broadcast control message information from the primary broadcast control message <b>1104</b>. In some instances, secondary broadcast control message information for the secondary broadcast control message may be identified in, or obtained from, the primary broadcast control message. A first hash information instance for the secondary broadcast control message is identified in the primary broadcast control message <b>1106</b>. The secondary broadcast control message may then be decoded. A second hash information instance (for the secondary broadcast control message) may be computed based on a plurality of control data blocks of the secondary broadcast control message, where the secondary broadcast control message includes error correcting code words that facilitate computing a correct version of the second hash information even if one or more of the control data blocks have been compromised <b>1108</b>. The first hash information instance is compared to the second hash information instance to determine whether the secondary broadcast control message has been compromised <b>1110</b>.</p>
<p id="p-0080" num="0079"><figref idref="DRAWINGS">FIG. 12</figref> is a flow diagram illustrating a method that can be carried out in conjunction with the method illustrated with respect to <figref idref="DRAWINGS">FIG. 11</figref>. The method of <figref idref="DRAWINGS">FIG. 12</figref> may illustrate one example of the step <b>1108</b> (<figref idref="DRAWINGS">FIG. 11</figref>) for computing the second hash information instance for the secondary broadcast control message. A first hash from a first control data block of a received secondary broadcast control message is computed <b>1202</b>. A second hash from a second control data block of the received secondary broadcast control message is also computed <b>1204</b>. Finally, a hash information instance is computed from the first hash and the second hash <b>1206</b>.</p>
<p id="p-0081" num="0080"><figref idref="DRAWINGS">FIG. 13</figref> is a flow diagram illustrating a method that may be carried out in conjunction with the method illustrated with respect to <figref idref="DRAWINGS">FIG. 11</figref>. For instance, the method of <figref idref="DRAWINGS">FIG. 13</figref> may be performed if a corrupted secondary message (or control data block therein) is detected by higher level error correction coding (e.g. using message error correcting code <b>136</b> of <figref idref="DRAWINGS">FIG. 1</figref>). Based on error correction coding it may be determined that a first control data block of the secondary broadcast control message was compromised <b>1302</b>. The determination may be made, for example, by FEC decoder <b>1010</b>, shown with respect to <figref idref="DRAWINGS">FIG. 10</figref>. The compromised control data block may be, for example, DB(<b>3</b>) <b>504</b>, shown with respect to <figref idref="DRAWINGS">FIG. 5</figref>. The receiver may then reconstruct a first hash of the first control data block from the error correcting code words. For instance, an error correcting code word corresponding to a second control data block of the secondary broadcast control message is identified <b>1304</b>. The code word may be CW <b>1</b> <b>530</b>, shown with respect to <figref idref="DRAWINGS">FIG. 5</figref>. As described above with respect to <figref idref="DRAWINGS">FIG. 5</figref>, code word CW <b>1</b> <b>530</b> may be erasure code <b>244</b>. Specifically, the identified error correcting code word corresponds to a control data block that was received uncompromised. A first hash for the first control data block of the secondary broadcast control message is computed based at least in part on the code word corresponding to the second block of the secondary broadcast control message <b>1306</b>. A second hash is computed from the second control data block of the secondary broadcast control message <b>1308</b>. The hashes may be computed by the hash engine <b>1012</b> shown with respect to <figref idref="DRAWINGS">FIG. 10</figref>. The second hash information instance is computed <b>1310</b> from the first hash and the second hash. The hash information instance may be computed by the hash engine <b>1012</b> shown with respect to <figref idref="DRAWINGS">FIG. 10</figref>).</p>
<heading id="h-0011" level="1">First Alternative Example of Protecting Broadcast Control Message</heading>
<p id="p-0082" num="0081"><figref idref="DRAWINGS">FIG. 14</figref> is a block diagram illustrating a receiver capable of verifying a received secondary broadcast control message by using error correcting code words. This may be an alternative way of protecting and decoding a broadcast control message, and may be a variation of the methodology illustrated in <figref idref="DRAWINGS">FIGS. 4 and 5</figref>. In this example, a secondary broadcast control message <b>1400</b> may include a plurality of control data blocks <b>1440</b>, <b>1442</b>, <b>1444</b>, <b>1446</b>, <b>1448</b>, <b>1450</b>, <b>1452</b> and <b>1454</b>. The plurality of control data blocks <b>1440</b>, <b>1442</b>, <b>1444</b>, <b>1446</b>, <b>1448</b>, <b>1450</b>, <b>1452</b> and <b>1454</b> may have a corresponding set of code words CW <b>1</b> to M <b>1402</b>. Using the fact that C=RH, the equation H=R<sup>&#x2212;1</sup>C can be formed.</p>
<p id="p-0083" num="0082">At the transmitter/encoder, a hash instance is generated from hashes for each control data block of the SMBCM <b>1400</b>. That hash instance may be appended to the associated PMBCM. Additionally, for each hash of a control data block, an error correcting code word may be generated and appended or associated with its corresponding control data block. These error correcting code words are shown as CW <b>1</b> to M <b>1402</b> corresponding to the control data blocks for the SMBCM <b>1400</b>. The error correcting code words may be transmitted as part of the SMBCM <b>1400</b>.</p>
<p id="p-0084" num="0083">At the receiver/decoder, the integrity of the received SMBCM may be verified using the hash instance from the PMBCM. In one example, the receiver/decoder may compute hashes for the received control data blocks of the SMBCM <b>1400</b> via a first hash engine <b>1425</b> and/or a second hash engine <b>1427</b>. The first hash engine <b>1425</b> may compute the hashes <b>408</b>-<b>422</b> for each control data block <b>1440</b>-<b>1454</b> while the second hash engine <b>1427</b> may compute a Hash Instance A from the computed hashes <b>408</b>-<b>422</b>. In some implementations, the Hash Instance A may be compared <b>1431</b> to a received first hash information from the PMBCM (not shown) associated with the SMBCM <b>1400</b>. If that comparison <b>1431</b> fails, then a subsequent operation may be performed by using error-correcting code words CW <b>1</b> to M <b>1402</b> to attempt to obtain the correct hashes.</p>
<p id="p-0085" num="0084">Using the error-correcting code words CW <b>1</b> to M <b>1402</b> corresponding to the control data blocks <b>1440</b>-<b>1454</b> for the SMBCM <b>1400</b>, a forward error correction (FEC) decoder <b>1406</b> can compute the hash array H <b>1408</b>, <b>1410</b>, <b>1412</b>, <b>1414</b>, <b>1416</b>, <b>1418</b>, <b>1420</b> and <b>1422</b>. That is, the FEC decoder <b>1406</b> can recompute the hashes <b>1408</b>-<b>1422</b> for the SMBCM <b>1400</b> using the error correcting code words <b>1402</b>. A third hash engine <b>1429</b> then computes a Hash Instance B based on the hashes of the hash array <b>1408</b>-<b>1422</b>. The hash information instance <b>1426</b> can be computed from the hash array H <b>1408</b>-<b>1422</b>.</p>
<p id="p-0086" num="0085">In one instance, the Hash Instance B may be used as hash information instance <b>1426</b> which is compared <b>1431</b> to a received first hash information from the PMBCM (not shown) associated with the SMBCM <b>1400</b>. This verifies that the error-correcting code words were received correctly. To verify the authenticity of each control data block <b>1440</b>-<b>1454</b> in the SMBCM <b>1400</b>, each received hashes <b>408</b>-<b>422</b> may be compared to its corresponding recomputed hash <b>1408</b>-<b>1422</b>. If a hash <b>408</b>-<b>422</b> does not match its corresponding recomputed hash <b>1408</b>-<b>1422</b>, then the corresponding control data block <b>1440</b>-<b>1454</b> is ignored or rejected. On the other hand, if a hash <b>408</b>-<b>422</b> matches its corresponding recomputed hash <b>1408</b>-<b>1422</b>, then the corresponding control data block <b>1440</b>-<b>1454</b> is accepted or utilized.</p>
<p id="p-0087" num="0086">In yet other implementations, the Hash Instance A may be compared <b>1460</b> with the Hash Instance B to determine if the control data blocks have been compromised or corrupted. This comparison <b>1460</b> may take place either before or after comparing <b>1431</b> the hash instance <b>1426</b> with the received first hash instance from the PMBCM.</p>
<p id="p-0088" num="0087"><figref idref="DRAWINGS">FIG. 15</figref> is a flow diagram illustrating a method that may be carried out in conjunction with the method illustrated with respect to <figref idref="DRAWINGS">FIG. 12</figref> and by the system illustrated with respect to <figref idref="DRAWINGS">FIG. 14</figref>. In some examples, this method may be optionally implemented after it has been determined that a received first hash information instance does not match a calculated second hash information instance (Hash Instance A in <figref idref="DRAWINGS">FIG. 14</figref>) for a secondary broadcast control message <b>1502</b>. In other examples, this method may be implemented before and/or concurrent with any determination as to the accuracy of the received control data blocks or their hashes. A third hash, for example, H(<b>1</b>) <b>1408</b>, H(<b>2</b>) <b>1410</b>, H(<b>3</b>) <b>1412</b> or H(<b>4</b>) <b>1414</b>, is computed from a first code word for example, code word CW(M-3), corresponding to the first control data block, for example, DB(M-3), of the secondary broadcast control message <b>1504</b>. A fourth hash is computed from a second code word, for example, CW(M-2), corresponding to the second control data block, for example, DB(M-2), of the secondary broadcast control message <b>1506</b>. The second hash information instance may then be recomputed from the third hash and the fourth hash <b>1508</b>. A comparison is then made to determine whether the first hash information instance and recomputed second hash information instance match <b>1510</b>. If there is no match, it can be concluded that the secondary broadcast message has been compromised <b>1512</b> and the secondary broadcast control message may be discarded <b>1514</b>. Otherwise, if there is a match, the compromised control data block(s) may be identified and/or discarded. This identification of compromised control data blocks may be performed by comparing hashes computed from one or more error correcting code words for each control data block to hashes computed for said control data block. One or more of the remaining control data block(s), those data blocks that are not compromised, can be utilized <b>1518</b>.</p>
<heading id="h-0012" level="1">Second Alternative Example of Protecting Broadcast Control Message</heading>
<p id="p-0089" num="0088"><figref idref="DRAWINGS">FIG. 16</figref> is a block diagram illustrating a receiver capable of verifying a received secondary broadcast control message by using error correcting code words. This block diagram may illustrate another alternative way of protecting and decoding a secondary broadcast control message. This example is a variation of the methodology illustrated in <figref idref="DRAWINGS">FIGS. 4 and 5</figref>. In the example illustrated in <figref idref="DRAWINGS">FIG. 16</figref>, a first hash engine <b>1623</b> uses the received control data blocks DB(M-3) <b>1602</b>, DB(M-2) <b>1604</b>, DB(M-1) <b>1606</b> and DB(M) <b>1608</b> to compute corresponding hash values H(M-3) <b>1616</b>, H(M-2) <b>1618</b>, H(M-1) <b>1620</b> and H(M) <b>1622</b>. If one or more other control data blocks <b>1601</b>, <b>1603</b>, <b>1605</b>, and/or <b>1607</b> are received with errors, error-correcting code words (e.g., code word <b>1624</b>) for the control data blocks <b>1602</b>, <b>1604</b>, <b>1606</b>, and/or <b>1608</b> can be used by FEC decoder <b>1627</b> to compute the one or more hash values <b>1608</b>, <b>1610</b>, <b>1612</b>, and/or <b>1614</b> for the other control data blocks <b>1601</b>, <b>1603</b>, <b>16</b>(<b>05</b>, and/or <b>1607</b>. That is, in this example, the error-correcting code words (e.g., code word <b>1624</b>) for the control data blocks <b>1602</b>, <b>1604</b>, <b>1606</b>, and/or <b>1608</b> may include information to reconstruct the hashes for one or more other control data blocks <b>1601</b>, <b>1603</b>, <b>1605</b>, and/or <b>1607</b> that may have been received with errors. In <figref idref="DRAWINGS">FIG. 16</figref>, only the error-correcting code word CW(M-3) <b>1624</b> for control data block <b>1602</b> is shown for illustration purposes. However, other code words CW(M-2), CW(M-1) and CW(M) are contemplated and may also be used by FEC decoder <b>1627</b> to compute the hash values <b>1608</b>, <b>1610</b>, <b>1612</b>, and/or <b>1614</b> for the other control data blocks <b>16011</b>, <b>1603</b>, <b>1605</b>, and/or <b>1607</b>.</p>
<p id="p-0090" num="0089">A second hash engine <b>1625</b> may then compute a hash information instance <b>1626</b> based on the hash values <b>1608</b>, <b>1610</b>, <b>1612</b>, <b>1614</b>, <b>1616</b>, <b>1618</b>, <b>1620</b> and <b>1622</b>. A comparator <b>1629</b> may then compare hash information instance <b>1626</b> to the first hash information <b>528</b> from the PMBCM to authenticate the control data blocks of the SMBCM <b>160</b>).</p>
<p id="p-0091" num="0090">If the comparison <b>1629</b> fails, a process of elimination can be used to determine which control data block has been modified or has errors. Specifically, if the comparison fails, it can be assumed that at least one of the control data blocks DB(M-3) <b>1602</b>, DB(M-2) <b>1604</b>, DB(M-1) <b>1606</b> and DB(M) <b>1608</b> was received with one or more errors. One of these control data blocks may be selected randomly, or sequentially, or by any other method, and excluded from the calculation of the hash values <b>1608</b>, <b>1610</b>, <b>1612</b> and <b>1614</b>. Thus, for example, the control data block DB(M-3) <b>1602</b> could be selected to not be used by FEC decoder <b>506</b> to compute hash values <b>1608</b>, <b>1610</b>, <b>1612</b> and <b>1614</b>. The hash information instance <b>1626</b> is computed from the hash values computed without using DB(M-3) and just relying on DB(M-2), DB(M-1) and DB(M) as input to FEC decoder <b>1627</b>. If a match is successful then it is determined that DB(M-3) <b>1602</b> was the control data block received in error. Control data block DB(M-3) <b>1602</b> can be discarded and the other control data blocks can be used. Note that, if discarded, the hash <b>1616</b> for DB(M-3) <b>1602</b> may be recomputed based on other error-correcting code words from other control data blocks. Alternatively, if the comparison is not successful, then another control data block DB(M-2) <b>1604</b> can be selected for exclusion in reconstructing hashes. Similar calculations to those above can be performed using only DB(M-3) <b>1602</b>, DB(M-1) <b>1606</b> and DB(M) <b>1608</b>. If a match is successful, then it is determined that DB(M-2) <b>1604</b> was received in error and the other control data blocks can be used. In this way, all data blocks can be checked and any one control data block received in error can be identified, so that it can be discarded while the other control data blocks can be used.</p>
<p id="p-0092" num="0091">Similarly, if two control data blocks are received in error, two control data blocks would be selected and excluded from the computation of hashes <b>1608</b>, <b>1610</b>, <b>1612</b> and <b>1614</b>. There are more combinations of two control data blocks than combinations of just one control data block, assuming there are more than three control data blocks. Accordingly, as long as there are more than three control data blocks, more computations would be needed to identify two control data blocks received in error than for just one received in error, but it is still possible. Even higher numbers of control data blocks than two can be identified by similar processes of elimination of all the combination until the control data blocks received in error are identified.</p>
<p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. 17</figref> (comprising <figref idref="DRAWINGS">FIGS. 17A and 17B</figref>) is a flow diagram illustrating a method that may be carried out in conjunction with the method illustrated with respect to <figref idref="DRAWINGS">FIG. 12</figref>. This method may be based on the alternative methodology illustrated in <figref idref="DRAWINGS">FIG. 16</figref>. In some examples, this method may be optionally implemented after it has been determined that a received first hash information instance does not match a calculated second hash information instance for a secondary broadcast control message <b>1702</b>. In other examples, this method may be implemented before and/or concurrent with any determination as to the accuracy of the received control data blocks or their hashes.</p>
<p id="p-0094" num="0093">A first (error-correcting) code word is obtained corresponding to the first control data block and including information for a hash of the second control data block <b>1704</b>. A third hash is computed for the second control data block based on information from the first code word <b>1706</b>. Note that the first code word includes information for one or more hashes of other control data blocks of the secondary broadcast control message. The second hash information instance may be computed or recomputed from the first hash and the third hash <b>1708</b>.</p>
<p id="p-0095" num="0094">A comparison may then be made to determine whether the first hash information instance and second hash information instance match <b>1710</b>. If there is a match, the compromised control data block may be identified and/or discarded <b>1712</b>. In this example, it may be assumed that the second control data block has been corrupted and may be discarded. This identification of compromised control data blocks may be performed by comparing hashes computed from one or more error correcting code words for each control data block to hashes computed for said control data block. One or more of the remaining control data block(s), those data blocks that are not compromised, can be utilized <b>1714</b>.</p>
<p id="p-0096" num="0095">If there is no match, the process is repeated with a different error-correcting code word. For example, a second code word may be obtained corresponding to the second control data block and including information for a hash of the first control data block <b>1716</b>. A fourth hash may be computed based on information from the second code word <b>1718</b>. The second hash information instance may be recomputed from the second hash and the fourth hash <b>1720</b>.</p>
<p id="p-0097" num="0096">A comparison may then be made to determine whether the first hash information instance and second hash information instance match <b>1722</b>. If there is a match, the compromised control data block may be identified and/or discarded <b>1724</b>. In this example, it may be assumed that the first control data block has been corrupted and may be discarded. This identification of compromised control data blocks may be performed by comparing hashes computed from one or more error correcting code words for each control data block to hashes computed for said control data block. One or more of the remaining control data block(s), those data blocks that are not compromised, can be utilized <b>1726</b>. Otherwise, if there is no match, different code words are tried to compute new hashes <b>1728</b> and the second hash information instance is recomputed using the new hashes <b>1730</b>. This process may be repeated multiple times to identify the compromised control data blocks and verify or authenticate the remaining control data blocks.</p>
<p id="p-0098" num="0097">It should be recognized that, generally, most of the processing described in this disclosure may be implemented in a similar fashion. Any of the circuit(s) or circuit sections may be implemented alone or in combination as part of an integrated circuit with one or more processors. The one or more of the circuits may be implemented on an integrated circuit, an Advanced RISC Machine (ARM) processor, a digital signal processor (DSP), a general purpose processor, etc.</p>
<p id="p-0099" num="0098">Also, it is noted that the embodiments may be described as a process that is depicted as a flowchart, a flow diagram, a structure diagram, or a block diagram. Although a flowchart may describe the operations as a sequential process, many of the operations can be performed in parallel or concurrently. In addition, the order or the operations may be re-arranged. A process is terminated when its operations are completed. A process may correspond to a method, a function, a procedure, a subroutine, a subprogram, etc. When a process corresponds to a function, its termination corresponds to a return of the function to the calling function or the main function.</p>
<p id="p-0100" num="0099">As used in this application, the terms &#x201c;component,&#x201d; &#x201c;module,&#x201d; &#x201c;system,&#x201d; and the like are intended to refer to a computer-related entity, either hardware, firmware, a combination of hardware and software, software, or software in execution. For example, a component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and/or a computer. By way of illustration, both an application running on a computing device and the computing device can be a component. One or more components can reside within a process and/or thread of execution and a component may be localized on one computer and/or distributed between two or more computers. In addition, these components can execute from various computer readable media having various data strictures stored thereon. The components may communicate by way of local and/or remote processes such as in accordance with a signal having one or more data packets (e.g., data from one component interacting with another component in a local system, distributed system, and/or across a network such as the Internet with other systems by way or the signal).</p>
<p id="p-0101" num="0100">Moreover, a storage medium may represent one or more devices for storing data, including read-only memory (ROM), random access memory (RAM), magnetic disk storage mediums, optical storage mediums, flash memory devices and/or other machine readable mediums for storing information. The term &#x201c;machine readable medium&#x201d; includes, but is not limited to portable or fixed storage devices, optical storage devices, wireless channels and various other mediums capable of storing, containing or carrying instruction(s) and/or data.</p>
<p id="p-0102" num="0101">Furthermore, embodiments may be implemented by hardware, software, firmware, middleware, microcode, or any combination thereof. When implemented in software, firmware, middleware or microcode, the program code or code segments to perform the necessary tasks may be stored in a machine-readable medium such as a storage medium or other storage(s). A processor may perform the necessary tasks. A code segment may represent a procedure, a function, a subprogram, a program, a routine, a subroutine, a module, a software package, a class, or any combination of instructions, data structures, or program statements. A code segment may be coupled to another code segment or a hardware circuit by passing and/or receiving information, data, arguments, parameters, or memory contents. Information, arguments, parameters, data, etc. may be passed, forwarded, or transmitted via any suitable means including memory sharing, message passing, token passing, network transmission, etc.</p>
<p id="p-0103" num="0102">One or more of the components, steps, and/or functions illustrated in the FIGs. may be rearranged and/or combined into a single component, step, or function or embodied in several components, steps, or functions without affecting the operation of the pseudo-random number generation. Additional elements, components, steps, and/or functions may also be added without departing from the invention. The apparatus, devices, and/or components illustrated in the FIGs may be configured to perform one or more of the methods, features, or steps described in the FIGs. The novel algorithms described herein may be efficiently implemented in software and/or embedded hardware.</p>
<p id="p-0104" num="0103">Those of skill in the art would further appreciate that the various illustrative logical blocks, modules, circuits, and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware, computer software, or combinations of both. To clearly illustrate this interchangeability of hardware and software, various illustrative components, blocks, modules, circuits, and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system.</p>
<p id="p-0105" num="0104">The various features of the invention described herein can be implemented in different systems without departing from the invention. For example, some implementations of the invention may be performed with a moving or static communication device (e.g., access terminal) and a plurality of mobile or static base stations (e.g., access points).</p>
<p id="p-0106" num="0105">It should be noted that the foregoing embodiments are merely examples and are not to be construed as limiting the invention. The description of the embodiments is intended to be illustrative, and not to limit the scope of the claims. As such, the present teachings can be readily applied to other types of apparatuses and many alternatives, modifications, and variations will be apparent to those skilled in the art.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for generating a secondary broadcast control message, the method comprising:
<claim-text>generating a secondary broadcast control message that includes a plurality of control data blocks and error correcting code words;</claim-text>
<claim-text>including information for the secondary broadcast control message in a primary broadcast control message;</claim-text>
<claim-text>computing a first hash information instance for the secondary broadcast control message based on a plurality of hashes for the plurality of control data blocks of the secondary broadcast control message; and</claim-text>
<claim-text>including the first hash information instance in the primary broadcast control message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein computing the first hash information instance for the secondary broadcast control message based on a plurality of hashes for the plurality of control data blocks of the secondary broadcast control message comprises:
<claim-text>computing a first hash from a first control data block of the secondary broadcast control message;</claim-text>
<claim-text>computing a second hash from a second control data block of the secondary broadcast control message; and</claim-text>
<claim-text>computing the first hash information instance from the first hash and the second hash.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising:
<claim-text>computing a first error correcting code word based on the first hash and one or more additional hashes for the control data blocks of the secondary broadcast control message;</claim-text>
<claim-text>computing a second error correcting code word based on the second hash and one or more additional hashes for the control data blocks of the secondary broadcast control message; and</claim-text>
<claim-text>including the first error correcting code word and the second error correcting code word in the secondary broadcast control message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the first error correcting code word is included as part of the first control data block and the second error correcting code word is included as part of the second the control data block.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the first error correcting code word is also based at least partially on the second hash.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>transmitting the primary broadcast control message; and</claim-text>
<claim-text>transmitting the secondary broadcast control message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A communication device comprising:
<claim-text>a secondary broadcast control message generator adapted to generate a secondary broadcast control message that includes a plurality of control data blocks and error correcting code words;</claim-text>
<claim-text>a primary broadcast control message generator adapted include information for the secondary broadcast control message in a primary broadcast control message; and</claim-text>
<claim-text>a hash engine adapted to compute a first hash information instance for the secondary broadcast control message based on a plurality of hashes for the plurality of control data blocks of the secondary broadcast control message;</claim-text>
<claim-text>wherein the primary broadcast control message generator is further adapted to include the first hash information instance in the primary broadcast control message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The communication device of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the hash engine is further adapted to
<claim-text>compute a first hash from a first control data block of the secondary broadcast control message;</claim-text>
<claim-text>compute a second hash from a second control data block of the secondary broadcast control message; and</claim-text>
<claim-text>compute the first hash information instance from the first hash and the second hash.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The communication device of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:
<claim-text>a forward error code encoder adapted to</claim-text>
<claim-text>compute a first error correcting code word based on the first hash and one or more additional hashes for the control data blocks of the secondary broadcast control message; and</claim-text>
<claim-text>compute a second error correcting code word based on the second hash and one or more additional hashes for the control data blocks of the secondary broadcast control message;</claim-text>
<claim-text>wherein the secondary broadcast control message generator is further adapted to include the first error correcting code word and the second error correcting code word in the secondary broadcast control message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The communication device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the first error correcting code word is included as part of the first control data block and the second error correcting code word is included as part of the second the control data block.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The communication device of <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising:
<claim-text>a transmitting module adapted to</claim-text>
<claim-text>transmit the primary broadcast control message; and</claim-text>
<claim-text>transmit the secondary broadcast control message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A communication device comprising:
<claim-text>means for generating a secondary broadcast control message that includes a plurality of control data blocks and error correcting code words;</claim-text>
<claim-text>means for including information for the secondary broadcast control message in a primary broadcast control message;</claim-text>
<claim-text>means for computing a first hash information instance for the secondary broadcast control message based on a plurality of hashes for the plurality of control data blocks of the secondary broadcast control message; and</claim-text>
<claim-text>means for including the first hash information instance in the primary broadcast control message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The communication device of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the means for computing the first hash information instance for the secondary broadcast control message based on a plurality of hashes for the plurality of control data blocks of the secondary broadcast control message comprises:
<claim-text>means for computing a first hash from a first control data block of the secondary broadcast control message;</claim-text>
<claim-text>means for computing a second hash from a second control data block of the secondary broadcast control message; and</claim-text>
<claim-text>means for computing the first hash information instance from the first hash and the second hash.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The communication device of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising:
<claim-text>means for computing a first error correcting code word based on the first hash and one or more additional hashes for the control data blocks of the secondary broadcast control message;</claim-text>
<claim-text>means for computing a second error correcting code word based on the second hash and one or more additional hashes for the control data blocks of the secondary broadcast control message; and</claim-text>
<claim-text>means for including the first error correcting code word and the second error correcting code word in the secondary broadcast control message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The communication device of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:
<claim-text>means for transmitting the primary broadcast control message; and</claim-text>
<claim-text>means for transmitting the secondary broadcast control message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A non-transitory computer-readable storage medium comprising instructions for generating a secondary broadcast control message, which when executed by a processor causes the processor to: generate a secondary broadcast control message that includes a plurality of control data blocks and error correcting code words; include information for the secondary broadcast control message in a primary broadcast control message; compute a first hash information instance for the secondary broadcast control message based on a plurality of hashes for the plurality of control data blocks of the secondary broadcast control message; and include the first hash information instance in the primary broadcast control message.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The computer-readable storage medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein computing the first hash information instance for the secondary broadcast control message based on a plurality of hashes for the plurality of control data blocks of the secondary broadcast control message further includes instructions for causing the processor to:
<claim-text>compute a first hash from a first control data block of the secondary broadcast control message;</claim-text>
<claim-text>compute a second hash from a second control data block of the secondary broadcast control message; and</claim-text>
<claim-text>compute the first hash information instance from the first hash and the second hash.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The computer-readable storage medium of <claim-ref idref="CLM-00017">claim 17</claim-ref>, the instructions further comprising the processor to:
<claim-text>compute a first error correcting code word based on the first hash and one or more additional hashes for the control data blocks of the secondary broadcast control message;</claim-text>
<claim-text>compute a second error correcting code word based on the second hash and one or more additional hashes for the control data blocks of the secondary broadcast control message; and</claim-text>
<claim-text>include the first error correcting code word and the second error correcting code word in the secondary broadcast control message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. A processor comprising a processing circuit adapted to:
<claim-text>generate a secondary broadcast control message that includes a plurality of control data blocks and error correcting code words;</claim-text>
<claim-text>include information for the secondary broadcast control message in a primary broadcast control message;</claim-text>
<claim-text>compute a first hash information instance for the secondary broadcast control message based on a plurality of hashes for the plurality of control data blocks of the secondary broadcast control message; and</claim-text>
<claim-text>include the first hash information instance in the primary broadcast control message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. A method for processing a secondary broadcast control message, comprising:
<claim-text>obtaining a primary broadcast control message;</claim-text>
<claim-text>obtaining a secondary broadcast control message associated with the primary broadcast control message;</claim-text>
<claim-text>identifying a first hash information instance for the secondary broadcast control message in the primary broadcast control message;</claim-text>
<claim-text>computing a second hash information instance based on a plurality of control data blocks of the secondary broadcast control message, where the secondary broadcast control message includes error correcting code words that facilitate computing a correct version of the second hash information even if one or more of the control data blocks have been compromised; and</claim-text>
<claim-text>comparing the first hash information instance to the second hash information instance to determine whether the secondary broadcast control message has been compromised.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The method of <claim-ref idref="CLM-00020">claim 20</claim-ref>, further comprising:
<claim-text>determining that a first control data block has been compromised;</claim-text>
<claim-text>reconstructing a first hash of the first control data block from the error correcting code words; and</claim-text>
<claim-text>computing the second hash information based on the first hash and one or more additional hashes for the plurality of control data blocks.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The method of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein each control data block has an appended error correcting code word based on one or more computed hashes for the plurality of control data blocks.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The method of <claim-ref idref="CLM-00020">claim 20</claim-ref>, further comprising:
<claim-text>verifying a digital signature of the primary broadcast control message, wherein the digital signature covers the primary broadcast control message and the first hash information instance.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The method of <claim-ref idref="CLM-00020">claim 20</claim-ref>, further comprising:
<claim-text>determining that a first control data block of the secondary broadcast control message was compromised based on an error correcting code calculation;</claim-text>
<claim-text>identifying a code word corresponding to a second control data block of the secondary broadcast control message;</claim-text>
<claim-text>computing a first hash for the first control data block of the secondary broadcast control message based at least in part on an error correcting code word corresponding to the second control data block of the secondary broadcast control message;</claim-text>
<claim-text>computing a second hash from the second control data block of the secondary broadcast control message; and</claim-text>
<claim-text>computing the second hash information instance from the first hash and the second hash.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The method of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein computing the second hash information instance comprises:
<claim-text>computing a first hash from a first control data block of the secondary broadcast control message;</claim-text>
<claim-text>computing a second hash from a second control data block of the secondary broadcast control message; and</claim-text>
<claim-text>computing the second hash information instance from the first hash and the second hash.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The method of <claim-ref idref="CLM-00025">claim 25</claim-ref>, wherein if the comparison of the first hash information instance to the second hash information instance indicates that the secondary broadcast control message has been compromised, further comprising:
<claim-text>computing a third hash from a first code word corresponding to the first control data block;</claim-text>
<claim-text>computing a fourth hash from a second code word corresponding to the second control data block;</claim-text>
<claim-text>recomputing the second hash information instance from the third hash and the fourth hash; and</claim-text>
<claim-text>comparing the first hash information instance to the recomputed second hash information instance to determine whether the secondary broadcast control message has been compromised.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The method of <claim-ref idref="CLM-00026">claim 26</claim-ref>, further comprising:
<claim-text>comparing the recomputed second hash information instance to the first hash information instance to determine if they match;</claim-text>
<claim-text>if a match is determined,</claim-text>
<claim-text>identifying and discarding one or more compromised control data blocks of the secondary broadcast control message, and</claim-text>
<claim-text>utilizing one or more of the remaining control data blocks; and</claim-text>
<claim-text>if no match is determined, discarding the secondary broadcast control message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. The method of <claim-ref idref="CLM-00025">claim 25</claim-ref>, wherein if the comparison of the first hash information instance to the second hash information instance indicates that the secondary broadcast control message has been compromised, further comprising:
<claim-text>obtaining a first code word corresponding to the first control data block and including information for a hash of the second control data block;</claim-text>
<claim-text>computing a third hash for the second control data block based on information from the first code word; and</claim-text>
<claim-text>recomputing the second hash information instance from the first hash and the third hash.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. The method of <claim-ref idref="CLM-00028">claim 28</claim-ref>, further comprising:
<claim-text>comparing the recomputed second hash information instance to the first hash information instance to determine if they match;</claim-text>
<claim-text>if a match is determined,</claim-text>
<claim-text>identifying and discarding the second control data block, and</claim-text>
<claim-text>utilizing one or more of the remaining control data blocks; and</claim-text>
<claim-text>if no match is determined,</claim-text>
<claim-text>obtaining a second code word corresponding to the second control data block and including information for a hash of the first control data block;</claim-text>
<claim-text>computing a fourth hash based on information from the second code word; and</claim-text>
<claim-text>recomputing the second hash information instance from the second hash and the fourth hash.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00030" num="00030">
<claim-text>30. A mobile device comprising:
<claim-text>a receiver for obtaining a primary broadcast control message and a secondary broadcast control message associated with the primary broadcast control message;</claim-text>
<claim-text>a primary broadcast control message verifier adapted to identify a first hash information instance for the secondary broadcast control message in the primary broadcast control message;</claim-text>
<claim-text>a hash engine adapted to compute a second hash information instance using error correcting code words obtained from the secondary broadcast control message if it is determined that at least one control data block of the obtained secondary broadcast control message has been compromised; and</claim-text>
<claim-text>a secondary broadcast control message verifier adapted to compare the first hash information instance to the second hash information instance to determine whether the secondary broadcast control message has been compromised.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00031" num="00031">
<claim-text>31. The mobile device of <claim-ref idref="CLM-00030">claim 30</claim-ref>, wherein the hash engine is further configured to:
<claim-text>compute a first hash from a first control data block of the secondary broadcast control message;</claim-text>
<claim-text>compute a second hash from a second control data block of the secondary broadcast control message; and</claim-text>
<claim-text>compute the second hash information instance from the first hash and the second hash.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00032" num="00032">
<claim-text>32. The mobile device of <claim-ref idref="CLM-00030">claim 30</claim-ref>, wherein the primary broadcast control message verifier determines that a first control data block of the secondary broadcast control message was compromised based on an error correcting code calculation, and further comprising:
<claim-text>a forward error correcting decoder adapted to identify an error correcting code word corresponding to a second control data block of the secondary broadcast control message;</claim-text>
<claim-text>wherein the hash engine is adapted to</claim-text>
<claim-text>compute a first hash for the first control data block of the secondary broadcast control message based at least in part on the error correcting code word corresponding to the second control data block of the secondary broadcast control message;</claim-text>
<claim-text>compute a second hash from the second control data block of the secondary broadcast control message; and</claim-text>
<claim-text>compute the second hash information instance from the first hash and the second hash.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00033" num="00033">
<claim-text>33. A mobile device, comprising:
<claim-text>means for obtaining a primary broadcast control message;</claim-text>
<claim-text>means for obtaining a secondary broadcast control message associated with the primary broadcast control message;</claim-text>
<claim-text>means for identifying a first hash information instance for the secondary broadcast control message in the primary broadcast control message;</claim-text>
<claim-text>means for computing a second hash information instance using error correcting code words obtained from the secondary broadcast control message if it is determined that at least one control data block of the obtained secondary broadcast control message has been compromised; and</claim-text>
<claim-text>means for comparing the first hash information instance to the second hash information instance to determine whether the secondary broadcast control message has been compromised.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00034" num="00034">
<claim-text>34. The mobile device of <claim-ref idref="CLM-00033">claim 33</claim-ref>, further comprising:
<claim-text>means for determining that a first control data block has been compromised;</claim-text>
<claim-text>means for reconstructing a first hash of the first control data block from the error correcting code words; and</claim-text>
<claim-text>means for computing the second hash information based on the first hash and one or more additional hashes for the plurality of control data blocks.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00035" num="00035">
<claim-text>35. The mobile device of <claim-ref idref="CLM-00033">claim 33</claim-ref>, further comprising:
<claim-text>means for determining that a first control data block of the secondary broadcast control message was compromised based on an error correcting code calculation;</claim-text>
<claim-text>means for identifying an error correcting code word corresponding to a second control data block of the secondary broadcast control message;</claim-text>
<claim-text>means for computing a first hash for the first control data block of the secondary broadcast control message based at least in part on an error correcting code word corresponding to the second control data block of the secondary broadcast control message;</claim-text>
<claim-text>means for computing a second hash from the second control data block of the secondary broadcast control message; and</claim-text>
<claim-text>means for computing the second hash information instance from the first hash and the second hash.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00036" num="00036">
<claim-text>36. The mobile device of <claim-ref idref="CLM-00033">claim 33</claim-ref>, wherein computing the second hash information instance comprises:
<claim-text>means for computing a first hash from a first control data block of the secondary broadcast control message;</claim-text>
<claim-text>means for computing a second hash from a second control data block of the secondary broadcast control message; and</claim-text>
<claim-text>means for computing the second hash information instance from the first hash and the second hash.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00037" num="00037">
<claim-text>37. The mobile device of <claim-ref idref="CLM-00036">claim 36</claim-ref>, further comprising:
<claim-text>means for computing a third hash from a first error correcting code word corresponding to the first control data block of the secondary broadcast control message and a second error correcting code word corresponding to the second control data blocks of the secondary broadcast control message, wherein the first control data block and the second control data block are control data blocks and a third control data block corresponding to the third hash is a control data carrying block; and</claim-text>
<claim-text>wherein the computing the second hash information instance from the first hash and the second hash further comprises computing the second hash information instance from the third hash.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00038" num="00038">
<claim-text>38. The mobile device of <claim-ref idref="CLM-00037">claim 37</claim-ref>, further comprising:
<claim-text>means for computing a third hash from a first error correcting code word corresponding to the first control data block if the secondary broadcast control message has been compromised;</claim-text>
<claim-text>means for computing a fourth hash from a second error correcting code word corresponding to the second control data block if the secondary broadcast control message has been compromised;</claim-text>
<claim-text>means for recomputing the second hash information instance from the third hash and the fourth hash; and</claim-text>
<claim-text>means for comparing the first hash information instance to the recomputed second hash information instance to determine whether the secondary broadcast control message has been compromised.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00039" num="00039">
<claim-text>39. The mobile device of <claim-ref idref="CLM-00036">claim 36</claim-ref>, further comprising:
<claim-text>means for obtaining a first error correcting code word corresponding to the first control data block and including information for a hash of the second control data block;</claim-text>
<claim-text>means for computing a third hash for the second control data block based on information from the first error correcting code word if the comparison of the first hash information instance to the second hash information instance indicates that the secondary broadcast control message has been compromised; and</claim-text>
<claim-text>means for recomputing the second hash information instance from the first hash and the third hash.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00040" num="00040">
<claim-text>40. A non-transitory computer-readable storage medium comprising instructions for receiving a secondary broadcast control message, which when executed by a processor causes the processor to: obtain a primary broadcast control message; obtain a secondary broadcast control message associated with the primary broadcast control message; identify a first hash information instance for the secondary broadcast control message in the primary broadcast control message; compute a second hash information instance based on a plurality of control data blocks of the secondary broadcast control message, where the secondary broadcast control message includes error correcting code words that facilitate computing a correct version of the second hash information even if one or more of the control data blocks have been compromised; and compare the first hash information instance to the second hash information instance to determine whether the secondary broadcast control message has been compromised.</claim-text>
</claim>
<claim id="CLM-00041" num="00041">
<claim-text>41. The computer-readable storage medium of <claim-ref idref="CLM-00040">claim 40</claim-ref>, further comprising instructions that cause the processor to:
<claim-text>determine that a first control data block has been compromised;</claim-text>
<claim-text>reconstruct a first hash of the first control data block from the error correcting code words; and</claim-text>
<claim-text>compute the second hash information based on the first hash and one or more additional hashes for the plurality of control data blocks.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00042" num="00042">
<claim-text>42. The computer-readable storage medium of <claim-ref idref="CLM-00040">claim 40</claim-ref>, the instructions further causing the processor to:
<claim-text>determine that a first control data block of the secondary broadcast control message was compromised based on an error correcting code calculation;</claim-text>
<claim-text>identify an error correcting code word corresponding to a second control data block of the secondary broadcast control message;</claim-text>
<claim-text>compute a first hash for the first control data block of the secondary broadcast control message based at least in part on an error correcting code word corresponding to the second control data block of the secondary broadcast control message;</claim-text>
<claim-text>compute a second hash from the second control data block of the secondary broadcast control message; and</claim-text>
<claim-text>compute the second hash information instance from the first hash and the second hash.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00043" num="00043">
<claim-text>43. A processor comprising a processing circuit adapted to:
<claim-text>obtain a primary broadcast control message;</claim-text>
<claim-text>obtain a secondary broadcast control message associated with the primary broadcast control message;</claim-text>
<claim-text>identify a first hash information instance for the secondary broadcast control message in the primary broadcast control message;</claim-text>
<claim-text>compute a second hash information instance based on a plurality of control data blocks of the secondary broadcast control message, where the secondary broadcast control message includes error correcting code words that facilitate computing a correct version of the second hash information even if one or more of the control data blocks have been compromised; and</claim-text>
<claim-text>compare the first hash information instance to the second hash information instance to determine whether the secondary broadcast control message has been compromised. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
