<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627141-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627141</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13026340</doc-number>
<date>20110214</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>381</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>11</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>714 15</main-classification>
</classification-national>
<invention-title id="d2e53">System and method for auto-failover and version matching of bootloader in an access controller</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>7024581</doc-number>
<kind>B1</kind>
<name>Wang et al.</name>
<date>20060400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714  2</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7292535</doc-number>
<kind>B2</kind>
<name>Folkes et al.</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370238</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7594135</doc-number>
<kind>B2</kind>
<name>Gonzalez et al.</name>
<date>20090900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714  61</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7962777</doc-number>
<kind>B2</kind>
<name>Gonzalez et al.</name>
<date>20110600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714  51</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2003/0012114</doc-number>
<kind>A1</kind>
<name>Larvoire et al.</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>369100</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2006/0236150</doc-number>
<kind>A1</kind>
<name>Lintz et al.</name>
<date>20061000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714  6</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2007/0180206</doc-number>
<kind>A1</kind>
<name>Craft et al.</name>
<date>20070800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711162</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2009/0254776</doc-number>
<kind>A1</kind>
<name>Gonzalez et al.</name>
<date>20091000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714  6</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2011/0093956</doc-number>
<kind>A1</kind>
<name>Laarakkers et al.</name>
<date>20110400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 25</main-classification></classification-national>
</us-citation>
</us-references-cited>
<number-of-claims>21</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>714  411</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714  412</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714  43</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714  44</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714  613</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714  63</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714  631</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714  632</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714 13- 16</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714 20</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714 30</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714 381</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>2</number-of-drawing-sheets>
<number-of-figures>2</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120210165</doc-number>
<kind>A1</kind>
<date>20120816</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Lambert</last-name>
<first-name>Timothy M.</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Brelsford</last-name>
<first-name>Brian L.</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Jreij</last-name>
<first-name>Elie</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Butcher</last-name>
<first-name>Wade</first-name>
<address>
<city>Cedar Park</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Lambert</last-name>
<first-name>Timothy M.</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Brelsford</last-name>
<first-name>Brian L.</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Jreij</last-name>
<first-name>Elie</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Butcher</last-name>
<first-name>Wade</first-name>
<address>
<city>Cedar Park</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Baker Botts L.L.P.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Dell Products L.P.</orgname>
<role>02</role>
<address>
<city>Round Rock</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Iqbal</last-name>
<first-name>Nadeem</first-name>
<department>2114</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">In accordance with embodiments of the present disclosure, an information handling system may include a processor and an access controller communicatively coupled to the processor. The access controller may include a memory having a bootloader portion including a first memory address and a second memory address a second processor communicatively coupled to the memory. The second processor may be configured to: (i) attempt to execute the a first copy of a bootloader stored at the first memory address; (ii) in the event of a failure to execute the first copy of the bootloader, copy a second copy of the bootloader stored at the second memory address to the first memory address; and (iii) subsequent to copying the second copy to the first memory address, attempt to execute the second copy of the bootloader stored at the first memory address.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="169.50mm" wi="247.57mm" file="US08627141-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="247.57mm" wi="171.37mm" orientation="landscape" file="US08627141-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="260.69mm" wi="177.04mm" file="US08627141-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">TECHNICAL FIELD</heading>
<p id="p-0002" num="0001">The present disclosure relates in general to information handling systems, and more particularly to auto-failover and version matching of a bootloader in an access controller.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">As the value and use of information continues to increase, individuals and businesses seek additional ways to process and store information. One option available to users is information handling systems. An information handling system generally processes, compiles, stores, and/or communicates information or data for business, personal, or other purposes thereby allowing users to take advantage of the value of the information. Because technology and information handling needs and requirements vary between different users or applications, information handling systems may also vary regarding what information is handled, how the information is handled, how much information is processed, stored, or communicated, and how quickly and efficiently the information may be processed, stored, or communicated. The variations in information handling systems allow for information handling systems to be general or configured for a specific user or specific use such as financial transaction processing, airline reservations, enterprise data storage, or global communications. In addition, information handling systems may include a variety of hardware and software components that may be configured to process, store, and communicate information and may include one or more computer systems, data storage systems, and networking systems.</p>
<p id="p-0004" num="0003">The use of access controllers in information handling systems has increased in recent years. Broadly speaking, an access controller may be thought of any device, system, or apparatus configured to permit an administrator or other person to remotely monitor and/or remotely manage an information handling system, oftentimes via an &#x201c;out-of-band&#x201d; management communications channel physically isolated from the &#x201c;in band&#x201d; communication channel used for non-management communications. An access controller may include or be an integral part of a baseboard management controller, a Dell Remote Access Controller (DRAC) or an Integrated Dell Remote Access Controller (iDRAC).</p>
<p id="p-0005" num="0004">Thus, an access controller may in essence be a special-purpose information handling system embedded in a larger general-purpose information handling system. As such, an access controller may also be configured to execute an operating system to facilitate its remote management functionality. Like many information handling systems, an access controller may include a specialized program of executable instructions known as a bootloader configured to initialize hardware for use with an operating system and load the operating system for execution.</p>
<p id="p-0006" num="0005">From time to time, events may occur that cause corruption of bootloader or operating system code in an access controller, thus negatively affecting usability of an access controller. In some cases, a corruption may render an access controller completely unusable for its intended purpose of remote management, thus leading to poor user experience.</p>
<p id="p-0007" num="0006">In addition, bootloaders and operating systems are becoming increasingly interdependent (e.g., bootloaders and operating systems may pass numerous variables and parameters to each other), thus meaning that it has become increasingly important that an operating system residing on an access controller remain in sync with a compatible version of an associated bootloader stored on the access controller. Also, in some cases, it is critical that when updated, a bootloader only be replaced with the same or newer version of the bootloader.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0008" num="0007">In accordance with the teachings of the present disclosure, the disadvantages and problems associated with failure of a bootloader and/or an operating system in an access controller have been reduced or eliminated.</p>
<p id="p-0009" num="0008">In accordance with embodiments of the present disclosure, an information handling system may include a processor and an access controller communicatively coupled to the processor. The access controller may include a memory having a bootloader portion including a first memory address and a second memory address a second processor communicatively coupled to the memory. The second processor may be configured to: (i) attempt to execute the a first copy of a bootloader stored at the first memory address; (ii) in the event of a failure to execute the first copy of the bootloader, copy a second copy of the bootloader stored at the second memory address to the first memory address; and (iii) subsequent to copying the second copy to the first memory address, attempt to execute the second copy of the bootloader stored at the first memory address.</p>
<p id="p-0010" num="0009">In accordance with additional embodiments of the present disclosure, an access controller may include a memory having a bootloader portion including a first memory address and a second memory address and a processor communicatively coupled to the memory. The processor may be configured to: (i) attempt to execute the a first copy of a bootloader stored at the first memory address; (ii) in the event of a failure to execute the first copy of the bootloader, copy a second copy of the bootloader stored at the second memory address to the first memory address; and (iii) subsequent to copying the second copy to the first memory address, attempt to execute the second copy of the bootloader stored at the first memory address.</p>
<p id="p-0011" num="0010">In accordance with a further embodiment of the present disclosure, a method may be provided. The method may include attempting to execute the a first copy of a bootloader stored at the first memory address. The method may further include in the event of a failure to execute the first copy of the bootloader, copying a second copy of the bootloader stored at the second memory address to the first memory address. The method may also include subsequent to copying the second copy to the first memory address, attempting to execute the second copy of the bootloader stored at the first memory address.</p>
<p id="p-0012" num="0011">Other technical advantages will be apparent to those of ordinary skill in the art in view of the following specification, claims, and drawings.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0013" num="0012">A more complete understanding of the present embodiments and advantages thereof may be acquired by referring to the following description taken in conjunction with the accompanying drawings, in which like reference numbers indicate like features, and wherein:</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 1</figref> illustrates a block diagram of an example system including an information handling system having an access controller, in accordance with certain embodiments of the present disclosure; and</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 2</figref> illustrates a flow chart of an example method for auto-failover and version matching, in accordance with certain embodiments of the present disclosure.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0016" num="0015">Preferred embodiments and their advantages are best understood by reference to <figref idref="DRAWINGS">FIGS. 1 and 2</figref>, wherein like numbers are used to indicate like and corresponding parts.</p>
<p id="p-0017" num="0016">For the purposes of this disclosure, an information handling system may include any instrumentality or aggregate of instrumentalities operable to compute, classify, process, transmit, receive, retrieve, originate, switch, store, display, manifest, detect, record, reproduce, handle, or utilize any form of information, intelligence, or data for business, scientific, control, entertainment, or other purposes. For example, an information handling system may be a personal computer, a PDA, a consumer electronic device, a network storage device, or any other suitable device and may vary in size, shape, performance, functionality, and price. The information handling system may include memory, one or more processing resources such as a central processing unit (CPU) or hardware or software control logic. Additional components or the information handling system may include one or more storage devices, one or more communications ports for communicating with external devices as well as various input and output (I/O) devices, such as a keyboard, a mouse, and a video display. The information handling system may also include one or more buses operable to transmit communication between the various hardware components.</p>
<p id="p-0018" num="0017">For the purposes of this disclosure, computer-readable media may include any instrumentality or aggregation of instrumentalities that may retain data and/or instructions for a period of time. Computer-readable media may include, without limitation, storage media such as a direct access storage device (e.g., a hard disk drive or floppy disk), a sequential access storage device (e.g., a tape disk drive), compact disk, CD-ROM, DVD, random access memory (RAM), read-only memory (ROM), electrically erasable programmable read-only memory (EEPROM), and/or flash memory; as well as communications media such wires, optical fibers, microwaves, radio waves, and other electromagnetic and/or optical carriers; and/or any combination of the foregoing.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 1</figref> illustrates a block diagram of an example system <b>100</b> including an information handling system <b>102</b> having an access controller <b>112</b>, in accordance with certain embodiments of the present disclosure. As depicted in <figref idref="DRAWINGS">FIG. 1</figref>, system <b>100</b> may include an information handling system <b>102</b> and a network <b>120</b>.</p>
<p id="p-0020" num="0019">Information handling system <b>102</b> may generally be operable to receive data from and/or communicate data to one or more other information handling systems via network <b>120</b>. In certain embodiments, information handling system <b>102</b> may be a server. In another embodiment, information handling system <b>102</b> may be a personal computer (e.g., a desktop computer or a portable computer). As depicted in <figref idref="DRAWINGS">FIG. 1</figref>, information handling system <b>102</b> may include a processor <b>103</b>, a memory <b>104</b> communicatively coupled to processor <b>103</b>, storage media <b>106</b> communicatively coupled to processor <b>103</b>, a network interface <b>108</b> communicatively coupled to processor <b>103</b>, and an access controller <b>112</b> coupled to processor <b>103</b>.</p>
<p id="p-0021" num="0020">Processor <b>103</b> may include any system, device, or apparatus configured to interpret and/or execute program instructions and/or process data, and may include, without limitation a microprocessor, microcontroller, digital signal processor (DSP), application specific integrated circuit (ASIC), or any other digital or analog circuitry configured to interpret and/or execute program instructions and/or process data. In some embodiments, processor <b>103</b> may interpret and/or execute program instructions and/or process data stored in memory <b>104</b>, storage media <b>106</b> and/or another component of information handling system <b>102</b>.</p>
<p id="p-0022" num="0021">Memory <b>104</b> may be communicatively coupled to processor <b>103</b> and may include any system, device, or apparatus configured to retain program instructions and/or data for a period of time (e.g., computer-readable media). Memory <b>104</b> may include random access memory (RAM), electrically erasable programmable read-only memory (EEPROM), a PCMCIA card, flash memory, magnetic storage, opto-magnetic storage, or any suitable selection and/or array of volatile or non-volatile memory that retains data after power to information handling system <b>102</b> is turned off.</p>
<p id="p-0023" num="0022">Storage media <b>106</b> may include computer-readable media (e.g., hard disk drive, floppy disk drive, CD-ROM, and/or other type of rotating storage media, flash memory, EEPROM, and/or other type of solid state storage media) and may be generally operable to store data and/or programs (e.g., one or more operating systems and/or one or more application programs).</p>
<p id="p-0024" num="0023">Network interface <b>108</b> may include any suitable system, apparatus, or device operable to serve as an interface between information handling system <b>102</b> and network <b>120</b>. Network interface <b>108</b> may enable information handling system <b>102</b> to communicate over network <b>120</b> using any suitable transmission protocol and/or standard, including without limitation all transmission protocols and/or standards enumerated below with respect to the discussion of network <b>120</b>. In certain embodiments, network interface <b>108</b> may be configured with hardware, software, and/or firmware to allow its associated information handling system <b>102</b> to remotely boot from a computer-readable medium remote from information handling system <b>102</b> (e.g., a computer-readable medium coupled to network interface <b>108</b> via network <b>120</b>).</p>
<p id="p-0025" num="0024">Access controller <b>112</b> may be any system, device, or apparatus configured to permit an administrator or other person to remotely monitor and/or remotely manage information handling system <b>102</b> (e.g., via an information handling system remotely connected to information handling system <b>102</b> via network <b>120</b>) regardless of whether information handling system <b>102</b> is powered on and/or has an operating system installed thereon. In certain embodiments, access controller <b>112</b> may allow for &#x201c;out-of-band&#x201d; control of information handling system <b>102</b>, such that communications to and from access controller <b>112</b> are communicated via a management channel physically isolated from an &#x201c;in band&#x201d; communication channel with network interface <b>108</b>. Thus, for example, if a failure occurs in information handling system <b>102</b> that prevents an administrator from remotely accessing information handling system <b>102</b> via network interface <b>108</b> (e.g., operating system failure, power failure, etc.), the administrator may still be able to monitor and/or manage the information handling system <b>102</b> (e.g., to diagnose problems that may have caused failure) via access controller <b>112</b>. In the same or alternative embodiments, access controller <b>112</b> may allow an administrator to remotely manage one or parameters associated with operation of information handling system <b>102</b> (e.g., power usage, processor allocation, memory allocation, security privileges, etc.). In certain embodiments, access controller <b>112</b> may include or may be an integral part of a baseband management controller (BMC), Dell Remote Access Controller (DRAC) or an Integrated Dell Remote Access Controller (iDRAC).</p>
<p id="p-0026" num="0025">As depicted in <figref idref="DRAWINGS">FIG. 1</figref>, access controller <b>112</b> may include a processor <b>113</b>, a memory <b>114</b> communicatively coupled to processor <b>113</b>, and a network interface <b>118</b> communicatively coupled to processor <b>113</b>.</p>
<p id="p-0027" num="0026">Processor <b>113</b> may include any system, device, or apparatus configured to interpret and/or execute program instructions and/or process data, and may include, without limitation a microprocessor, microcontroller, digital signal processor (DSP), application specific integrated circuit (ASIC), or any other digital or analog circuitry configured to interpret and/or execute program instructions and/or process data. In some embodiments, processor <b>113</b> may interpret and/or execute program instructions and/or process data stored in memory <b>114</b> and/or another component of information handling system <b>102</b>. In some embodiments, processor <b>113</b> may be similar to processor <b>103</b>. In other embodiments, processor <b>113</b> may be configured specifically for operation with access controller <b>112</b>.</p>
<p id="p-0028" num="0027">Memory <b>114</b> may be communicatively coupled to processor <b>113</b> and may include any system, device, or apparatus configured to retain program instructions and/or data for a period of time (e.g., computer-readable media). Memory <b>114</b> may include random access memory (RAM), electrically erasable programmable read-only memory (EEPROM), a PCMCIA card, flash memory, magnetic storage, opto-magnetic storage, or any suitable selection and/or array of volatile or non-volatile memory that retains data after power to information handling system <b>102</b> is turned off. In certain embodiments, memory <b>114</b> may store firmware that includes executable instructions to govern operation of access controller <b>112</b>.</p>
<p id="p-0029" num="0028">As depicted in <figref idref="DRAWINGS">FIG. 1</figref>, memory <b>114</b> may include bootloader portion <b>122</b> and operating system portion <b>124</b>. Bootloader portion <b>122</b> may include a copy of a bootloader <b>126</b> at an address <b>128</b><i>a </i>of bootloader portion <b>122</b> and a redundant copy of bootloader <b>126</b> at an address <b>128</b><i>b </i>of bootloader portion <b>122</b>. Bootloader <b>126</b> may be a sequence of instructions configured to, when executed by processor <b>113</b>, boot an operating system <b>130</b> or <b>131</b> and/or initialize components of access controller <b>112</b> and/or information handling system <b>102</b> for interoperability with operating system <b>130</b> or <b>131</b>. In normal operating conditions, the version of both copies of bootloader <b>126</b> stored in bootloader portion <b>122</b> of memory may be the &#x201c;N version&#x201d; of bootloader <b>126</b> corresponding to (e.g., compatible with) the intended, active version (e.g., the &#x201c;N version&#x201d;) of operating system <b>130</b> (e.g., as indicated by a variable set in a Master Boot Record (MBR) of access controller <b>112</b>).</p>
<p id="p-0030" num="0029">Operating system portion <b>124</b> of memory <b>114</b> may include a copy of the intended version (e.g., the &#x201c;N version&#x201d;) of operating system <b>130</b> at an address <b>132</b>b and a copy of a version of the operating system <b>131</b> previous to the intended version (e.g., the &#x201c;N-1 version&#x201d;). Each operating system version <b>130</b>, <b>131</b> may have a partition including a bootloader version corresponding to the version of the operating system <b>130</b>, <b>131</b>. For example, N version of operating system <b>130</b> may include a partition having N version of bootloader <b>126</b> and N-1 version of operating system <b>131</b> may include a partition having N-1 version of bootloader <b>127</b>.</p>
<p id="p-0031" num="0030">Bootloader portion <b>122</b> and operating system <b>124</b> may comprise different physical locations of memory <b>114</b> and/or may comprise different types of memory. For example, in some embodiments, bootloader portion <b>122</b> may comprise Serial Peripheral Interface (SPI) memory while operating system portion <b>124</b> may comprise Flash memory.</p>
<p id="p-0032" num="0031">Network interface <b>118</b> may include any suitable system, apparatus, or device operable to serve as an interface between access controller <b>112</b> and network <b>120</b>. Network interface <b>118</b> may enable access controller <b>102</b> to communicate over network <b>120</b> using any suitable transmission protocol and/or standard, including without limitation all transmission protocols and/or standards enumerated below with respect to the discussion of network <b>120</b>.</p>
<p id="p-0033" num="0032">Network <b>120</b> may be a network and/or fabric configured to communicatively couple information handling system <b>102</b>, access controller <b>112</b>, provisioning server <b>122</b>, other information handling systems, and/or other networked components to each other. Network <b>120</b> may include a communication infrastructure, which provides physical connections, and a management layer, which organizes the physical connections of information handling system <b>102</b> and access controller <b>112</b>. In the same or alternative embodiments, network <b>120</b> may allow block I/O services and/or file access services to network-attached computer-readable media.</p>
<p id="p-0034" num="0033">Network <b>120</b> may be implemented as, or may be a part of, a storage area network (SAN), personal area network (PAN), local area network (LAN), a metropolitan area network (MAN), a wide area network (WAN), a wireless local area network (WLAN), a virtual private network (VPN), an intranet, the Internet or any other appropriate architecture or system that facilitates the communication of signals, data and/or messages (generally referred to as data). Network <b>120</b> may transmit data using any storage and/or communication protocol, including without limitation, Fibre Channel, Frame Relay, Asynchronous Transfer Mode (ATM), Internet Protocol (IP), other packet-based protocol, small computer system interface (SCSI), Internet SCSI (iSCSI), Serial Attached SCSI (SAS) or any other transport that operates with the SCSI protocol, advanced technology attachment (ATA), serial ATA (SATA), advanced technology attachment packet interface (ATAPI), serial storage architecture (SSA), integrated drive electronics (IDE), and/or any combination thereof. Network <b>120</b> and its various components may be implemented using hardware, software, or any combination thereof.</p>
<p id="p-0035" num="0034">Operation of various components of system <b>100</b> may be illustrated by <figref idref="DRAWINGS">FIG. 2</figref>. <figref idref="DRAWINGS">FIG. 2</figref> illustrates a flow chart of an example method <b>200</b> for auto-failover and version matching, in accordance with certain embodiments of the present disclosure. According to one embodiment, method <b>200</b> may begin at step <b>202</b>. As noted above, teachings of the present disclosure may be implemented in a variety of configurations of system <b>100</b>. As such, the preferred initialization point for method <b>200</b> and the order of the steps <b>202</b>-<b>228</b> comprising method <b>200</b> may depend on the implementation chosen.</p>
<p id="p-0036" num="0035">At step <b>202</b>, processor <b>113</b> may attempt to execute the first copy of bootloader <b>126</b> stored at address <b>128</b><i>a </i>of bootloader portion <b>122</b> of memory <b>124</b>. For example, upon powering on and/or restart of access controller <b>112</b>, processor <b>113</b> may execute microcode embedded on or otherwise accessible to processor <b>113</b> that causes processor <b>113</b> to attempt to execute from address <b>128</b><i>a</i>.</p>
<p id="p-0037" num="0036">At step <b>204</b>, processor <b>113</b> may determine whether execution of the first copy of bootloader <b>126</b> was successful. For example, processor <b>113</b> may execute microcode embedded on or otherwise accessible to processor <b>113</b> that implements a watchdog timer. Bootloader <b>126</b> may include an instruction that may indicate successful execution of bootloader <b>126</b> by terminating the watchdog timer or setting a variable. Should the watchdog timer expire before indication of successful completion, such expiration may indicate that bootloader <b>126</b> did not execute properly (e.g., due to corruption or other reason). If execution of bootloader <b>126</b> is successful, method <b>200</b> may proceed to step <b>214</b>. Otherwise, method <b>200</b> may proceed to step <b>206</b>.</p>
<p id="p-0038" num="0037">At step <b>206</b>, processor <b>113</b> may copy the second copy of bootloader <b>126</b> stored at address <b>128</b><i>b </i>to address <b>128</b><i>a</i>. Such copying of the second copy of bootloader <b>126</b> to address <b>128</b><i>a </i>may repair a corrupted or otherwise failed first copy stored in address <b>128</b><i>a. </i></p>
<p id="p-0039" num="0038">At step <b>208</b>, processor <b>113</b> may again attempt to execute the copy of the bootloader <b>126</b> stored at address <b>128</b><i>a</i>, which may now include the version of bootloader copied from address <b>128</b><i>b. </i></p>
<p id="p-0040" num="0039">At step <b>209</b>, processor <b>113</b> may again determine whether execution of the copy of bootloader <b>126</b> stored at address <b>128</b><i>a </i>is successful. Such determination may again be based on a watchdog timer identical or similar to that of step <b>204</b>. If execution of bootloader <b>126</b> is successful, method <b>200</b> may proceed to step <b>214</b>. Otherwise, method <b>200</b> may proceed to step <b>210</b>.</p>
<p id="p-0041" num="0040">At step <b>210</b>, in response to a failure to execute both copies of bootloader <b>126</b>, processor <b>113</b> may indicate an error condition (e.g., by setting an appropriate variable or flag, communicating a message to an administrator console or management program, etc.) indicating another unsuccessful execution of the bootloader from address <b>128</b><i>a</i>. Such second unsuccessful execution may indicate that physical memory hardware including address <b>128</b><i>a </i>has experienced a failure, or may indicate corruption of both copies of bootloader <b>126</b>.</p>
<p id="p-0042" num="0041">Accordingly, at step <b>211</b>, processor <b>113</b> may attempt to execute the copy of the bootloader <b>126</b> stored at address <b>128</b><i>b. </i></p>
<p id="p-0043" num="0042">At step <b>212</b>, processor <b>113</b> may determine whether execution of the copy of bootloader <b>126</b> stored at address <b>128</b><i>b </i>is successful. Such determination may again be based on a watchdog timer identical or similar to that of steps <b>204</b> and <b>209</b>. If execution of bootloader <b>126</b> is successful, method <b>200</b> may proceed to step <b>214</b>. Otherwise, method <b>200</b> may proceed to step <b>213</b>.</p>
<p id="p-0044" num="0043">At step <b>213</b>, in response to a failure to execute both copies of bootloader <b>126</b>, processor <b>113</b> may indicate an error condition (e.g., by setting an appropriate variable or flag, communicating a message to an administrator console or management program, etc.) indicating unsuccessful execution of the bootloader from address <b>128</b><i>b</i>. Such unsuccessful execution may indicate that physical memory hardware including addresses <b>128</b><i>a </i>and <b>128</b><i>b </i>has experienced a failure, or may indicate corruption of both copies of bootloader <b>126</b>.</p>
<p id="p-0045" num="0044">At step <b>214</b>, in response to a successful boot of bootloader <b>126</b>, bootloader <b>126</b> may compare its version to the version of the bootloader <b>126</b>, <b>127</b> embedded in the then-active operating system version <b>130</b>, <b>131</b>.</p>
<p id="p-0046" num="0045">At step <b>216</b>, based on the comparison, bootloader <b>126</b> may determine if it is compatible with the then-active operating system version <b>130</b>, <b>131</b>. For example, in some embodiments, bootloader <b>126</b> may determine that it is compatible if its version is the same as that of the version of bootloader <b>126</b>, <b>127</b> embedded in the then-active operating system version <b>130</b>, <b>131</b>. In other embodiments, bootloader <b>126</b> may determine that it is compatiable if its version is the same or newer as that of the version of bootloader <b>126</b>, <b>127</b> embedded in the then-active operating system version <b>130</b>, <b>131</b>. If bootloader <b>126</b> is compatible with the then-active operating system version <b>130</b>, <b>131</b>, method <b>200</b> may proceed to step <b>220</b>. Otherwise, method <b>200</b> may proceed to step <b>218</b>.</p>
<p id="p-0047" num="0046">At step <b>218</b>, in response to a determination that bootloader <b>126</b> is not compatible with the then-active operating system version <b>130</b>, <b>131</b>, bootloader <b>126</b> may copy the version of bootloader embedded in then then-active operating system version to addresses <b>128</b><i>a </i>and <b>128</b><i>b </i>of bootloader portion <b>122</b>. After completion of step <b>218</b>, method <b>200</b> may proceed again to step <b>202</b>.</p>
<p id="p-0048" num="0047">At step <b>220</b>, in response to successful execution of bootloader <b>126</b>, bootloader <b>126</b>, executing on processor <b>113</b>, may attempt to boot an intended, active version of operating system <b>130</b>. For example, bootloader <b>126</b> may attempt to boot an operating system version based on information stored in a master boot record (MBR) or other variable of memory <b>114</b>.</p>
<p id="p-0049" num="0048">At step <b>222</b>, bootloader <b>126</b> may determine if booting of the active version of operating system <b>130</b> is successful. In some embodiments, the determination of whether the active operating system successfully boots may be governed by a watchdog timer (e.g., implemented as part of bootloader <b>126</b>) or other suitable mechanism). In these and other embodiments, bootloader <b>126</b> may attempt to boot the active version of the operating system a particular number of times (e.g., three) before determining the attempt to be unsuccessful. If the active version of operating system <b>130</b> successfully boots, access controller <b>112</b> may operate in its normal state, and method <b>200</b> may end. Otherwise, method <b>200</b> may proceed to step <b>224</b>.</p>
<p id="p-0050" num="0049">At step <b>224</b>, in response to an unsuccessful attempt to boot the active version of operating system <b>130</b>, bootloader <b>126</b> may set the alternate version of operating system <b>131</b> as the active operating system (e.g., by modifying the master boot record or other suitable mechanism), and then attempt to boot the alternative version <b>131</b>.</p>
<p id="p-0051" num="0050">At step <b>226</b>, bootloader <b>126</b> may determine if booting of the alternate version (now active version) of operating system <b>131</b> is successful. In some embodiments, the determination of whether the alternate operating system successfully boots may be governed by a watchdog timer (e.g., implemented as part of bootloader <b>126</b>) or other suitable mechanism). In these and other embodiments, bootloader <b>126</b> may attempt to boot the alternate version of the operating system a particular number of times (e.g., three) before determining the attempt to be unsuccessful. If the alternate version of operating system <b>131</b> successfully boots, access controller <b>112</b> may operate with operating system <b>131</b> as its operating system, method <b>200</b> may end. Otherwise, method <b>200</b> may proceed to step <b>228</b>.</p>
<p id="p-0052" num="0051">At step <b>228</b>, in response to a failure to execute the intended version <b>130</b> and alternate version <b>131</b> of the operating system, bootloader <b>126</b>, executing on processor <b>113</b>, may indicate an error condition (e.g., by setting an appropriate variable or flag, communicating a message to an administrator console or management program, etc.). After completion of step <b>228</b>, method <b>200</b> may end.</p>
<p id="p-0053" num="0052">Although <figref idref="DRAWINGS">FIG. 2</figref> discloses a particular number of steps to be taken with respect to method <b>200</b>, method <b>200</b> may be executed with greater or lesser steps than those depicted in <figref idref="DRAWINGS">FIG. 2</figref>. In addition, although <figref idref="DRAWINGS">FIG. 2</figref> discloses a certain order of steps to be taken with respect to method <b>200</b>, the steps comprising method <b>200</b> may be completed in any suitable order. For example, in some embodiments, step <b>208</b> may be performed before, after, or substantially contemporaneous to step <b>210</b>.</p>
<p id="p-0054" num="0053">Method <b>200</b> may be implemented using system <b>100</b> or any other system operable to implement method <b>200</b>. In certain embodiments, method <b>200</b> may be implemented partially or fully in software and/or firmware embodied in computer-readable media.</p>
<p id="p-0055" num="0054">Using the methods and systems disclosed herein, problems associated with corruption of bootloaders and operating systems in an access controller, and matching versions of bootloaders and operating systems in an access controller may be reduced or elimination. For example, the methods and systems described provide for redundancy and auto-failover for a bootloader stored on memory of an access controller, thus reducing or eliminating problems associated with bootloader corruption. In addition, the method and systems disclosed ensure version compatibility of a bootloader with the an operating system version the bootloader is to boot.</p>
<p id="p-0056" num="0055">Although the present disclosure has been described in detail, it should be understood that various changes, substitutions, and alterations can be made hereto without departing from the spirit and the scope of the disclosure as defined by the appended claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An information handling system comprising:
<claim-text>a processor;</claim-text>
<claim-text>an access controller communicatively coupled to the processor, the access controller comprising:
<claim-text>a memory having a bootloader portion, the memory including a first memory address and a second memory address; and</claim-text>
<claim-text>a second processor communicatively coupled to the memory and configured to:
<claim-text>attempt to execute the a first copy of a bootloader stored at the first memory address;</claim-text>
<claim-text>when the first copy of the bootloader fails to execute, copy a second copy of the bootloader stored at the second memory address to the first memory address;</claim-text>
<claim-text>subsequent to copying the second copy to the first memory address, attempt to execute the second copy of the bootloader stored at the first memory address; and</claim-text>
<claim-text>when the bootloader is executed by the second processor, the bootloader is configured to:
<claim-text>compare version information of the bootloader to version information of a version of the bootloader embedded in an active version of the operating system stored in the memory; and</claim-text>
<claim-text>based on the comparing, determine if the executing version of the bootloader is compatible with the active version of the operating system.</claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. An information handling system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, the bootloader configured to, when successfully executed by the second processor, attempt to boot an active version of an operating system.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. An information handling system according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, the bootloader further configured to, when the active version of the operating system fails to execute:
<claim-text>set an alternate version of the operating system as the active version of the operating system; and</claim-text>
<claim-text>attempt to boot the alternate version of the operating system as the active version of the operating system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. An information handling system according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, the active version of the operating system stored in an operating system portion of the memory different from the bootloader portion.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. An information handling system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, the bootloader further configured to, when the bootloader is not compatible with the active version of the operating system:
<claim-text>copy the version of the bootloader embedded in the active version of the operating system to the first address and the second address; and</claim-text>
<claim-text>execute the version of the bootloader copied to the first address.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. An information handling system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining whether the bootloader is compatible with the active version of the operating system comprises at least one of:
<claim-text>determining whether the bootloader is of an identical version to the version of the bootloader embedded in the active version of the operating system as stored in memory; and</claim-text>
<claim-text>determining whether the bootloader is of a newer version than the version of the bootloader embedded in the active version of the operating system as stored in memory.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. An information handling system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, the second processor further configured to, when the second copy of the bootloader stored at the first memory address fails to execute, attempt to execute the second copy of the bootloader stored at the second memory address.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. An access controller comprising:
<claim-text>a memory having a bootloader portion, the memory including a first memory address and a second memory address; and</claim-text>
<claim-text>a processor communicatively coupled to the memory and configured to:
<claim-text>attempt to execute the a first copy of a bootloader stored at the first memory address;</claim-text>
<claim-text>when the first copy of the bootloader fails to execute, copy a second copy of the bootloader stored at the second memory address to the first memory address; and</claim-text>
<claim-text>subsequent to copying the second copy to the first memory address, attempt to execute the second copy of the bootloader stored at the first memory address; and</claim-text>
<claim-text>when the bootloader is executed by the processor, the bootloader is configured to:
<claim-text>compare version information of the bootloader to version information of a version of the bootloader embedded in an active version of the operating system stored in the memory; and</claim-text>
<claim-text>based on the comparing, determine if the executing version of the bootloader is compatible with the active version of the operating system.</claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. An access controller according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, the bootloader configured to, when successfully executed by the processor, attempt to boot an active version of an operating system.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. An access controller according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, the bootloader further configured to, when the active version of the operating system fails to execute:
<claim-text>set an alternate version of the operating system as the active version of the operating system; and</claim-text>
<claim-text>attempt to boot the alternate version of the operating system as the active version of the operating system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. An access controller according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, the active version of the operating system stored in an operating system portion of the memory.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. An access controller according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, the bootloader further configured to, when the bootloader is not compatible with the active version of the operating system:
<claim-text>copy the version of the bootloader embedded in the active version of the operating system to the first address and the second address; and</claim-text>
<claim-text>execute the version of the bootloader copied to the first address.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. An access controller according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein determining whether the bootloader is compatible with the active version of the operating system comprises at least one of:
<claim-text>determining whether the bootloader is of an identical version to the version of the bootloader embedded in the active version of the operating system as stored in memory; and</claim-text>
<claim-text>determining whether the bootloader is of a newer version than the version of the bootloader embedded in the active version of the operating system as stored in memory.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. An access controller according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, the processor further configured to, when the second copy of the bootloader stored at the first memory address fails to execute, attempt to execute the second copy of the bootloader stored at the second memory address.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A method comprising:
<claim-text>attempting to execute the a first copy of a bootloader stored at a first memory address of a memory included in an access controller;</claim-text>
<claim-text>when the first copy of the bootloader fails to execute, copying a second copy of the bootloader stored at a second memory address of the memory to the first memory address;</claim-text>
<claim-text>subsequent to copying the second copy to the first memory address, attempting to execute the second copy of the bootloader stored at the first memory address; and</claim-text>
<claim-text>when the bootloader is executed by a processor included in the access controller, the bootloader is configured to:
<claim-text>compare version information of the bootloader to version information of a version of the bootloader embedded in an active version of the operating system stored in the memory; and</claim-text>
<claim-text>based on the comparing, determine if the executing version of the bootloader is compatible with the active version of the operating system.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A method according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising attempting, by the bootloader when successfully executed by the processor, to boot an active version of an operating system.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. A method according to <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising, when the active version of the operating system fails to execute:
<claim-text>setting an alternate version of the operating system as the active version of the operating system; and</claim-text>
<claim-text>attempting to boot the alternate version of the operating system as the active version of the operating system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. A method controller according to <claim-ref idref="CLM-00016">claim 16</claim-ref>, the active version of the operating system stored in an operating system portion of the memory.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. A method according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising, when the bootloader is not compatible with the active version of the operating system:
<claim-text>copying the version of the bootloader embedded in the active version of the operating system to the first address and the second address; and</claim-text>
<claim-text>executing the version of the bootloader copied to the first address.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. A method according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein determining whether the bootloader is compatible with the active version of the operating system comprises at least one of:
<claim-text>determining whether the bootloader is of an identical version to the version of the bootloader embedded in the active version of the operating system as stored in memory; and</claim-text>
<claim-text>determining whether the bootloader is of a newer version than the version of the bootloader embedded in the active version of the operating system as stored in memory.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. An method according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising, when the second copy of the bootloader stored at the first memory address fails to execute, attempting to execute the second copy of the bootloader stored at the second memory address. </claim-text>
</claim>
</claims>
</us-patent-grant>
