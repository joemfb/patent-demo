<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627034-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627034</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13143565</doc-number>
<date>20110615</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>242</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>12</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>711165</main-classification>
<further-classification>711  2</further-classification>
<further-classification>711110</further-classification>
<further-classification>711173</further-classification>
</classification-national>
<invention-title id="d2e53">Storage control apparatus and storage control method</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>2005/0015657</doc-number>
<kind>A1</kind>
<name>Sugiura et al.</name>
<date>20050100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714  6</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2006/0174076</doc-number>
<kind>A1</kind>
<name>Takeda et al.</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2008/0101605</doc-number>
<kind>A1</kind>
<name>Kitamura et al.</name>
<date>20080500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>380239</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2008/0201527</doc-number>
<kind>A1</kind>
<name>Suzuki et al.</name>
<date>20080800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2009/0094426</doc-number>
<kind>A1</kind>
<name>Ikeda et al.</name>
<date>20090400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2009/0125680</doc-number>
<kind>A1</kind>
<name>Ninose et al.</name>
<date>20090500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2010/0205390</doc-number>
<kind>A1</kind>
<name>Arakawa</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>EP</country>
<doc-number>1 455 265</doc-number>
<kind>A2</kind>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>EP</country>
<doc-number>2 219 106</doc-number>
<kind>A2</kind>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>JP</country>
<doc-number>2006-65629</doc-number>
<kind>A</kind>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>14</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>711  2</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711110</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711165</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711173</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>26</number-of-drawing-sheets>
<number-of-figures>34</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120324163</doc-number>
<kind>A1</kind>
<date>20121220</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Sato</last-name>
<first-name>Takamasa</first-name>
<address>
<city>Odawara</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Okumoto</last-name>
<first-name>Katsuhiro</first-name>
<address>
<city>Odawara</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Sato</last-name>
<first-name>Takamasa</first-name>
<address>
<city>Odawara</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Okumoto</last-name>
<first-name>Katsuhiro</first-name>
<address>
<city>Odawara</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Mattingly &#x26; Malur, PC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Hitachi, Ltd.</orgname>
<role>03</role>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Bragdon</last-name>
<first-name>Reginald</first-name>
<department>2189</department>
</primary-examiner>
<assistant-examiner>
<last-name>Bansal</last-name>
<first-name>Gurtej</first-name>
</assistant-examiner>
</examiners>
<pct-or-regional-filing-data>
<document-id>
<country>WO</country>
<doc-number>PCT/JP2011/003420</doc-number>
<kind>00</kind>
<date>20110615</date>
</document-id>
<us-371c124-date>
<date>20110707</date>
</us-371c124-date>
</pct-or-regional-filing-data>
<pct-or-regional-publishing-data>
<document-id>
<country>WO</country>
<doc-number>WO2012/172602</doc-number>
<kind>A </kind>
<date>20121220</date>
</document-id>
</pct-or-regional-publishing-data>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">In one of the storage control apparatuses in the remote copy system which performs asynchronous remote copy between the storage control apparatuses, virtual logical volumes complying with Thin Provisioning are adopted as journal volumes to which journals are written. The controller in the one of the storage control apparatuses assigns a smaller actual area based on the storage apparatus than in case of assignment to the entire area of the journal volume, and adds a journal to the assigned actual area. If a new journal cannot be added, the controller performs wraparound, that is, overwrites the oldest journal in the assigned actual area by the new journal.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="176.11mm" wi="253.41mm" file="US08627034-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="259.84mm" wi="190.08mm" orientation="landscape" file="US08627034-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="198.63mm" wi="159.34mm" file="US08627034-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="271.27mm" wi="197.53mm" file="US08627034-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="101.52mm" wi="198.20mm" file="US08627034-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="143.09mm" wi="172.72mm" file="US08627034-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="208.45mm" wi="189.40mm" file="US08627034-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="228.77mm" wi="179.92mm" file="US08627034-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="180.42mm" wi="190.92mm" orientation="landscape" file="US08627034-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="148.42mm" wi="189.40mm" orientation="landscape" file="US08627034-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="154.01mm" wi="112.95mm" orientation="landscape" file="US08627034-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="108.88mm" wi="119.46mm" orientation="landscape" file="US08627034-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="156.29mm" wi="192.11mm" orientation="landscape" file="US08627034-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="129.62mm" wi="186.94mm" orientation="landscape" file="US08627034-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="245.11mm" wi="149.18mm" orientation="landscape" file="US08627034-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="250.95mm" wi="148.00mm" orientation="landscape" file="US08627034-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="117.69mm" wi="186.01mm" orientation="landscape" file="US08627034-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="189.23mm" wi="189.15mm" orientation="landscape" file="US08627034-20140107-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="228.01mm" wi="106.93mm" file="US08627034-20140107-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="252.73mm" wi="190.92mm" file="US08627034-20140107-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="216.07mm" wi="127.59mm" file="US08627034-20140107-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="233.60mm" wi="168.74mm" file="US08627034-20140107-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00022" num="00022">
<img id="EMI-D00022" he="186.69mm" wi="163.75mm" file="US08627034-20140107-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00023" num="00023">
<img id="EMI-D00023" he="236.14mm" wi="180.68mm" file="US08627034-20140107-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00024" num="00024">
<img id="EMI-D00024" he="225.98mm" wi="188.04mm" file="US08627034-20140107-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00025" num="00025">
<img id="EMI-D00025" he="256.46mm" wi="170.52mm" file="US08627034-20140107-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00026" num="00026">
<img id="EMI-D00026" he="187.37mm" wi="129.88mm" file="US08627034-20140107-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">TECHNICAL FIELD</heading>
<p id="p-0002" num="0001">The present invention relates to asynchronous remote copy by utilizing journals.</p>
<heading id="h-0002" level="1">BACKGROUND ART</heading>
<p id="p-0003" num="0002">Remote copy which is copying data between first and second storage apparatuses is known. As remote copy, for example, synchronous remote copy and asynchronous remote copy exist. If the first storage apparatus receives a write request from a host and if synchronous remote copy is adopted, a write completion response is transmitted to the host apparatus after data complying with the write request is transferred from the first storage apparatus to the second storage apparatus. Meanwhile, if asynchronous remote copy is adopted, the write completion response is transmitted to the host apparatus even if the data complying with the write request is not transferred from the first storage apparatus to the second storage apparatus.</p>
<p id="p-0004" num="0003">In a remote copy system to which asynchronous remote copy is adopted (hereinafter referred to as an asynchronous remote copy system), for example, the first storage apparatus comprises a first JVOL (a logical volume in which a journal (hereinafter referred to as a JNL) is stored) as well as a first DVOL (a logical volume in which data is stored). Similarly, the second storage apparatus comprises a second JVOL as well as a second DVOL. If receiving a write request, the first storage apparatus stores data complying with the write request in the first DVOL and, at the same time, stores a JNL including the data in the first JVOL.</p>
<p id="p-0005" num="0004">The first storage apparatus transfers the JNL in the first JVOL to the second storage apparatus, and the second storage apparatus writes the JNL from the first storage apparatus to the second JVOL. Subsequently, the second storage apparatus writes the data which the JNL in the second JVOL comprises to the second DVOL. By this method, the data written to the first DVOL is considered to have been copied to the second DVOL. As asynchronous remote copy, for example, the technology disclosed in the Patent Literature 1 is known.</p>
<heading id="h-0003" level="1">CITATION LIST</heading>
<heading id="h-0004" level="1">Patent Literature</heading>
<p id="h-0005" num="0000">PTL 1</p>
<p id="p-0006" num="0000">
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0005">Japanese Patent Application Laid-Open (Kokai) No. 2006-65629</li>
</ul>
</p>
<heading id="h-0006" level="1">SUMMARY OF INVENTION</heading>
<heading id="h-0007" level="1">Technical Problem</heading>
<p id="p-0007" num="0006">A virtual logical volume (hereinafter referred to as a VVOL) complying with Thin Provisioning (also referred to as Dynamic Provisioning) is known. By Thin Provisioning, a VVOL comprising a plurality of virtual pages and a pool comprising a plurality of actual pages are comprised. If data is written to the VVOL, the actual pages are assigned to the virtual pages of the data write destination from the pool, and the data is written to the assigned actual pages.</p>
<p id="p-0008" num="0007">The technology of adopting VVOLs as the first and the second DVOLs is known. However, the technology of adopting VVOLs as the first and the second JVOLs is unknown. If VVOLs are (a VVOL is) adopted as the first and/or the second JVOL(s), the following problems occur.</p>
<p id="p-0009" num="0008">Generally, by asynchronous remote copy, a plurality of JNLs are added first to the head area of the JVOL. Subsequently, if a new JNL is written after the JNLs are written to the last area of the JVOL (after the JNLs are written to all the areas in the JVOL), the oldest JNL in the JVOL is overwritten by the new JNL (wraparound). However, if the JNLs are written to the last area of the JVOL, the actual pages are considered to have been assigned to all the virtual pages in the JVOL.</p>
<p id="p-0010" num="0009">The capacity of a JVOL is generally larger than [the capacity of] a DVOL, and is determined, for example, based on one or a plurality of perspectives (whose concrete examples are a write frequency which is the frequency of receiving write requests specifying the JVOL (the unit is IOPS (Input output Per Second) for example) and a length of time in which [the system] can resist the disconnection of the remote line). Therefore, if the actual pages are assigned to all the areas in the JVOL, the number of actual pages to be used is likely to be considerable. For this reason, a large number of actual pages are required. Furthermore, if the actual pages in the pool are assigned to the DVOL as well as to the JVOL, the number of actual pages to be assigned to the DVOL might not be enough, and an even larger number of actual pages become necessary for solving this problem.</p>
<p id="p-0011" num="0010">Therefore, the purpose of the present invention is to be able to inhibit the amount of actual pages to be used even if a VVOL is adopted as a JVOL.</p>
<heading id="h-0008" level="1">Solution to Problem</heading>
<p id="p-0012" num="0011">A VVOL (a virtual logical volume complying with Thin Provisioning) is adopted as a JVOL. The VVOL is configured of a plurality of virtual areas and, at the same time, the size of a JNL is smaller than the size of a virtual area. A first storage control apparatus (either one storage control apparatus of the storage control apparatuses as the copy source and the copy destination) is supposed to add JNLs to the JVOL. If writing a JNL to the JVOL, the first storage control apparatus writes the JNL to an actual area assigned from the pool configured of a plurality of actual areas to the virtual area. The number of actual areas to be assigned to the JVOL is N. N is an integer which is 1 or larger and, at the same time, smaller than the number of actual areas to be assigned to all the areas in the JVOL (typically the number of virtual areas configuring the JVOL). If unable to newly add journals to N units of actual areas assigned to the JVOL, the first storage control apparatus performs wraparound (overwriting the old journals in the N units of already assigned actual areas with the write target journals). The JVOL may be either of a primary JVOL and a secondary JVOL which are explained later.</p>
<p id="p-0013" num="0012">Although the number of actual areas to be assigned to the JVOL is N, actual areas may also be assigned to all of the N in advance, and actual areas may also be dynamically assigned to all of the N. Furthermore, it may also be permitted to assign the actual areas to a part of the N in advance and dynamically assign the actual areas to the other parts.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0009" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 1</figref> shows the overview of the processing of an asynchronous type remote copy system including the storage control apparatus related to an embodiment of the present invention.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 2</figref> shows a configuration example of a primary storage apparatus <b>20</b>A.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 3A</figref> shows an example of management tables and a program stored in the memory of the primary storage apparatus <b>20</b>A. <figref idref="DRAWINGS">FIG. 3B</figref> shows an example of management tables and a program stored in the memory of the secondary storage apparatus <b>20</b>B.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 4</figref> shows the relationship between the capacity of the slot of a CM <b>35</b>A and the actual pages assigned to a primary JVOL <b>22</b>A.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 5</figref> shows the relationship between the capacity of each of the pages and the capacity of each of the JNLs.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 6</figref> shows the overview of the processing of a controller <b>30</b>A.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 7A</figref> shows a configuration example of a primary virtual page bitmap <b>70</b>A. <figref idref="DRAWINGS">FIG. 7B</figref> shows a configuration example of a JNLG usage condition management table <b>700</b>A.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 8A</figref> shows a configuration example of a primary VOL management table <b>341</b>A. <figref idref="DRAWINGS">FIG. 8B</figref> shows a configuration example of a secondary VOL management table <b>341</b>B.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 9A</figref> shows a configuration example of a primary JNLG management table <b>342</b>A. <figref idref="DRAWINGS">FIG. 9B</figref> shows a configuration example of a secondary JNLG management table <b>342</b>B.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 10</figref> shows a configuration example of JNLG pair management tables <b>343</b>A, <b>343</b>B.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 11</figref> shows a configuration example of VOL pair management tables <b>344</b>A, <b>344</b>B.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 12A</figref> shows a configuration example of a primary VVOL management table <b>345</b>A. <figref idref="DRAWINGS">FIG. 12B</figref> shows a configuration example of a secondary VOL management table <b>345</b>B.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 13A</figref> shows a configuration example of a primary virtual page assignment management table <b>346</b>A. <figref idref="DRAWINGS">FIG. 13B</figref> shows a configuration example of a secondary virtual page assignment management table <b>346</b>B.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 14</figref> shows a configuration example of a primary JNL status management table <b>347</b>A.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 15</figref> shows a configuration example of a secondary JNL status management table <b>347</b>B.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 16A</figref> shows a configuration example of a primary virtual page status management table <b>348</b>A. <figref idref="DRAWINGS">FIG. 16B</figref> shows a configuration example of a secondary virtual page status management table <b>348</b>B.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 17A</figref> shows a configuration example of a primary pool management table <b>349</b>A. <figref idref="DRAWINGS">FIG. 17B</figref> shows a configuration example of a secondary pool management table <b>349</b>B.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 18</figref> shows an example of the flow of the processing for creating a pair of JNLGs.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 19</figref> shows an example of the flow of the processing for copying a JNL from a primary JVOL <b>22</b>A to a secondary JVOL <b>22</b>B.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 20</figref> shows an example of the flow of the processing for restoring data to a secondary DVOL <b>21</b>B.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 21</figref> shows an example of the flow of the processing for performing automatic definition of a JNLG.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 22</figref> shows an example of the details of S<b>243</b> in <figref idref="DRAWINGS">FIG. 21</figref>.</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 23</figref> shows an example of the details of S<b>246</b> in <figref idref="DRAWINGS">FIG. 21</figref>.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 24</figref> shows an example of the flow of the processing incase where the usage rate of the JVOL exceeds a threshold.</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 25</figref> shows an example of the flow of the processing for writing JNLs to the primary JVOL <b>22</b>A.</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 26</figref> shows an example of the flow of the processing related to switching the unit of transferring JNLs.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0010" level="1">DESCRIPTION OF EMBODIMENTS</heading>
<p id="p-0040" num="0039">Hereinafter, an embodiment of the present invention is explained.</p>
<p id="p-0041" num="0040">It should be noted that the storage control apparatuses complying with the present invention may be a storage apparatus comprising a plurality of storage devices, a controller which the storage apparatus comprises, or may also be an intelligent switch device connected to the storage apparatus. The storage control apparatus related to an embodiment of the present invention is a storage apparatus. A plurality of actual pages configuring a pool are storage areas based on a plurality of storage devices which the storage apparatus comprises. A part of the actual pages among a plurality of actual pages configuring the pool may be the storage areas based on the storage resources in a storage apparatus outside the storage apparatus.</p>
<p id="p-0042" num="0041">Furthermore, in the explanation below, each type of information might be explained by the expression of an &#x201c;xxx table,&#x201d; but may also be expressed in other types of data configuration than tables. For indicating independence from the data configuration, the &#x201c;xxx table&#x201d; can be referred to as &#x201c;xxx information.&#x201d;</p>
<p id="p-0043" num="0042">Furthermore, although an ID (identifier) is used as identification information for identifying a component in the explanation below, a name, a number, and others may also be used as identification information.</p>
<p id="p-0044" num="0043">Furthermore, in the explanation below, the processing might be explained by a &#x201c;program&#x201d; as a subject, but the subject of the processing may also be a processor because the program performs the specified processing by being performed by the processor included in a management server, a rack manager, and others (e.g. a CPU (Central Processing Unit)) while appropriately using a storage resource (e.g. a memory) and/or a communication interface device (e.g. a communication port). The processing explained by the program as a subject may also be referred to as the processing performed by a storage apparatus or a controller. Furthermore, the processor may also include a hardware circuit which performs part of or the entire processing instead of or in addition to a microprocessor such as a CPU. The computer program may also be installed in the storage apparatus from a program source. The program source may also be, for example, a program distribution server or a computer-readable storage media.</p>
<p id="p-0045" num="0044">Furthermore, the management computer may also be configured of one or more computers. For example, if the management computer displays information or if the management computer transmits information for display to a remote computer, one computer is a management computer. Furthermore, for example, if a function which is equivalent to [the function of] the management computer is realized by a plurality of computers, the relevant plurality of computers (which may include a computer for display if the display is performed by the computer for display) are the management computer. An SVP (Service Processor) is the management computer in the present embodiment.</p>
<p id="p-0046" num="0045">Furthermore, in the explanation below, the copy source storage apparatus in remote copy might be referred to as a &#x201c;primary storage apparatus&#x201d; and the copy destination storage apparatus in the remote copy might be referred to as a &#x201c;secondary storage apparatus&#x201d;. Furthermore, the components which the primary storage apparatus comprises might be referred to by appropriately adding &#x201c;primary&#x201d; to the names of the same, and the components which the secondary storage apparatus comprises might be referred to by appropriately adding &#x201c;secondary&#x201d; to the names of the same.</p>
<p id="p-0047" num="0046">Furthermore, in the explanation below, a virtual volume which is a virtual logical volume complying with Thin Provisioning (also referred to as Dynamic Provisioning) might be referred to as a &#x201c;VVOL&#x201d;.</p>
<p id="p-0048" num="0047">Furthermore, in the explanation below, only a common sign of a reference sign is supposed to be used if the same type of components is explained without distinction while a reference sign (a combination of a common sign and an individual sign) is used if the same type of components is explained distinctively. Furthermore, in the explanation below, identification information added to the components might be used instead of reference signs.</p>
<p id="p-0049" num="0048">Furthermore, in the explanation below, the number might be expressed by a sign &#x201c;#&#x201d;.</p>
<p id="p-0050" num="0049">Furthermore, in the explanation below, a journal volume is referred to as a &#x201c;JVOL&#x201d; and a data volume is referred to as a &#x201c;DVOL&#x201d;. To a DVOL, for example, data from a host computer (hereinafter referred to as a &#x201c;host&#x201d;) is written. To a JVOL, a journal (hereinafter referred to as a &#x201c;JNL&#x201d;) including management information related to data written to the DVOL and this data is written. In the management information, for example, information indicating the storage destination of the data which the JNL including the management information and an update number (hereinafter also referred to as a &#x201c;sequential number&#x201d; or an &#x201c;SEQ #&#x201d;) which is a number updated each time data is written to the DVOL are included. That an update number is small indicates that the data included in the JNL is written to the DVOL at an early stage. Furthermore, that an update number is large indicates that the data included in the JNL is written to the DVOL at a late stage. Specifically speaking, by referring to this update number, the order in which the data included in each of the JNLs is written to the DVOL can be ascertained.</p>
<p id="p-0051" num="0050">Furthermore, in the explanation below, a JVOL of the first storage apparatus might be referred to as a &#x201c;primary JVOL&#x201d; and a JVOL of the second storage apparatus might be referred to as a &#x201c;secondary JVOL&#x201d;. However, both the primary JVOL and the secondary JVOL are not necessarily required in asynchronous remote copy. For example, the present invention can be realized even if either of the primary JVOL and the secondary JVOL is absent.</p>
<p id="p-0052" num="0051">Furthermore, in the explanation below, a pool in the first storage apparatus is referred to as a &#x201c;primary pool&#x201d; and a pool in the second storage apparatus is referred to as a &#x201c;secondary pool&#x201d;.</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 1</figref> shows the overview of the processing of an asynchronous type remote copy system including the storage control apparatus related to an embodiment of the present invention.</p>
<p id="p-0054" num="0053">This asynchronous type remote copy system comprises a primary storage apparatus <b>20</b>A and a secondary storage apparatus <b>20</b>B. A host computer (hereinafter also abbreviated to a &#x201c;host&#x201d;) <b>10</b> and the secondary storage apparatus <b>20</b>B are connected to the primary storage apparatus <b>20</b>A.</p>
<p id="p-0055" num="0054">The primary storage apparatus <b>20</b>A comprises a primary DVOL <b>21</b>A, a primary JVOL <b>22</b>A, a primary pool <b>23</b>A, and a cache memory (hereinafter also referred to as a &#x201c;CM&#x201d;) <b>35</b>A.</p>
<p id="p-0056" num="0055">The primary JVOL <b>22</b>A is a virtual volume (hereinafter referred to as a primary VVOL) which is a virtual logical volume complying with Thin Provisioning (also referred to as Dynamic Provisioning). The primary JVOL <b>22</b>A is configured of a plurality of virtual areas (hereinafter referred to as virtual pages) <b>221</b>A. The size of each of the JNLs <b>222</b>A is smaller than the size of each of the virtual pages <b>221</b>A.</p>
<p id="p-0057" num="0056">The primary DVOL <b>21</b>A is a logical volume to which data is written from the host <b>10</b>. It should be noted that the primary DVOL <b>21</b>A is also a VVOL complying with Thin Provisioning as the primary JVOL <b>22</b>A in the example shown in the figure. The same primary pool <b>23</b>A is associated with the primary VDVOL <b>21</b>A and the primary JVOL <b>22</b>A, and therefore actual pages are supposed to be assigned from the same primary pool <b>23</b>A.</p>
<p id="p-0058" num="0057">The primary pool <b>23</b>A is configured of a plurality of actual areas (hereinafter referred to as actual pages) based on a storage device which is not shown in the figure (e.g. an HDD (Hard Disk Drive)). The actual pages of the primary pool <b>23</b>A are dynamically assigned to the primary JVOL <b>22</b>A (the virtual page <b>221</b>A) and the primary DVOL <b>21</b>A.</p>
<p id="p-0059" num="0058">The CM <b>35</b>A is managed by being divided into a plurality of cache areas (hereinafter also referred to as slots). To the slots in the CM <b>35</b>A, data read from and written to a logical volume (hereinafter referred to as a VOL), for example, data read from and written to the primary DVOL <b>21</b>A, and a JNL read from and written to the primary JVOL <b>22</b>A are written for once.</p>
<p id="p-0060" num="0059">The secondary storage apparatus <b>20</b>B comprises a secondary DVOL <b>21</b>B, a secondary JVOL <b>22</b>B, a secondary pool <b>23</b>B, and a CM <b>35</b>B. The explanation of each of the components in the secondary storage apparatus <b>20</b>B is practically the same as the primary storage apparatus <b>20</b>A, and therefore the explanation is omitted. It should be noted that, in the explanation below, the virtual pages configuring the primary JVOL might be referred to as primary virtual pages and the virtual pages configuring the secondary JVOL might be referred to as secondary virtual pages, and that these might be simply referred to as virtual pages if both of the above are not specifically distinguished. Furthermore, a VVOL of the secondary storage apparatus might be referred to as a secondary VVOL.</p>
<p id="p-0061" num="0060">Next, the flow of write target data (hereinafter also referred to as &#x201c;write data&#x201d;) transmitted from the host <b>10</b> is explained. The number of actual pages to be assigned to the primary JVOL <b>22</b>A is made smaller than the total number of virtual pages configuring the JVOL <b>22</b>A in the present embodiment. In the example shown in the figure, the number of actual pages assigned to the primary JVOL <b>22</b>A is 1 only, but the number of actual pages to be assigned to the primary JVOL <b>22</b>A is not limited to this.</p>
<p id="p-0062" num="0061">It should be noted that a thin black arrow indicates the detailed flow of the data and a thick white arrow indicates the rough flow of the data in the figure.</p>
<p id="p-0063" num="0062">The write data transmitted from the host <b>10</b> is written to the CM <b>35</b>A for once, and subsequently written to the primary DVOL <b>21</b>A (S<b>1</b>).</p>
<p id="p-0064" num="0063">The JNL <b>222</b>A including the write data written to the primary DVOL <b>21</b>A and the management information comprising the SEQ # corresponding to the order in which the write data is written is written to the CM <b>35</b>A and subsequently written to the primary JVOL <b>22</b>A. This JNL <b>222</b>A is written to a part of the virtual page <b>221</b>A (S<b>2</b>). As explained above, the size of a JNL <b>222</b>A is smaller than the size of a virtual page <b>221</b>A, and therefore a plurality of JNLs <b>222</b>A can be written to a primary virtual page <b>221</b>A.</p>
<p id="p-0065" num="0064">The JNL <b>222</b>A written to the primary JVOL <b>22</b>A is transmitted from the primary storage apparatus <b>20</b>A to the secondary storage apparatus <b>20</b>B, written to the CM <b>35</b>B, and subsequently written to the secondary JVOL <b>22</b>B (S<b>3</b>). It should be noted that, according to the example shown in the figure, the number of actual pages assigned to the secondary JVOL <b>22</b>B is 1 only as the number of actual pages assigned to the primary JVOL <b>22</b>A. However, the number of actual pages assigned to the secondary JVOL <b>22</b>A is not limited to this.</p>
<p id="p-0066" num="0065">A plurality of non-reflected JNLs in the secondary JVOL <b>22</b>B are sequentially reflected in the secondary DVOL <b>21</b>B in ascending order of updating (in ascending order of SEQ #'s). Specifically speaking, the JNLs are read from the secondary JVOL <b>22</b>B to the CM <b>35</b>B, and the write data in the JNLs is written to the secondary DVOL <b>21</b>B (S<b>4</b>). By this method, it is considered that remote copy of the write data written to the primary DVOL <b>21</b>A to the secondary DVOL <b>21</b>B is performed.</p>
<p id="p-0067" num="0066">If write data complying with a write request specifying the primary DVOL <b>21</b>A is newly transmitted from the host <b>10</b>, the above-mentioned processing from S<b>1</b> to S<b>4</b> is also performed for the write data. In such case, if a large free area which is equal to or larger than the size of the JNL <b>222</b>A exists in the assigned actual page, the controller in the primary storage apparatus <b>20</b>A writes the JNL <b>222</b>A to the free area. However, if no free area equal to or larger than the size of the JNL <b>222</b>A exists in the assigned actual page, wraparound is performed, that is, the area where the oldest JNL for which the copy is completed in the actual page (the JNL which is already transferred to the secondary storage apparatus <b>20</b>B and also reflected in the secondary storage apparatus <b>20</b>B and whose SEQ # is the smallest in the primary JVOL <b>22</b>A) is written is overwritten by a new JNL.</p>
<p id="p-0068" num="0067">[The processing is] explained more concretely with reference to <figref idref="DRAWINGS">FIG. 1</figref>. In the example shown in the figure, 24 JNLs from SEQ #<b>1</b> to #<b>24</b> are written to the actual page which is assigned to the primary virtual page <b>221</b>A, and the actual page does not comprise a free area to which new JNLs (SEQ #<b>25</b> and subsequent JNLs) can be added. In the example shown in the figure, data &#x201c;A&#x201d; is included in the JNL SEQ #<b>1</b>, data &#x201c;C&#x201d; is included in the JNL SEQ #<b>2</b>, and data &#x201c;D&#x201d; is included in the JNL SEQ #<b>24</b>. Of the JNLs written to the actual page, the JNL SEQ #<b>1</b> is the oldest, and the JNL SEQ #<b>24</b> is the newest.</p>
<p id="p-0069" num="0068">If a new JNL SEQ #<b>25</b> is to be newly written to the primary JVOL <b>22</b>A, no free area in which the new JNL can be stored exists in the assigned actual page, and therefore the primary storage apparatus <b>20</b>A overwrites the area to which the JNL of the smallest SEQ #(the JNL SEQ #<b>1</b>) is written by the new JNL (the JNL SEQ #<b>25</b>).</p>
<p id="p-0070" num="0069">As explained above, in the present embodiment, if no area where a new JNL can be stored in the smaller number of assigned actual pages (one actual page in the example shown in the figure) than the number of virtual pages <b>221</b>A configuring the primary JVOL <b>22</b>A exists (if no free area larger than the size of a JNL exists), wraparound is performed, that is, the area where the oldest JNL for which the copy is completed is stored is overwritten by the new JNL. Specifically speaking, in the present embodiment, the number of actual pages to be assigned from the primary pool <b>23</b>A to the primary JVOL <b>22</b>A can be made smaller than the number of virtual pages <b>222</b>A configuring the primary JVOL <b>22</b>A. Therefore, even if the VVOL is adopted as a primary JVOL <b>22</b>A, the number of actual pages used by the primary pool <b>23</b>A can be inhibited.</p>
<p id="p-0071" num="0070">It should be noted that the actual page assigned from the primary pool <b>23</b>A to the primary JVOL <b>22</b>A is only one in the example shown in the figure. This can contribute to the prevention of the I/O (Input/Output) performance deterioration of the primary storage apparatus <b>20</b>A.</p>
<p id="p-0072" num="0071">Specifically speaking, for writing a JNL to the primary JVOL <b>22</b>A, the JNL is written to the CM <b>35</b>A for once, that is, specifically speaking, the primary storage apparatus <b>20</b>A secures a cache area whose write destination is the JNL (e.g. a free cache area or a clean cache area which stores the data stored in the VOL only) from the CM <b>35</b>A and writes the JNL to the secured cache area. Therefore, the primary storage apparatus <b>20</b>A might have to secure a cache area each time [the primary storage apparatus <b>20</b>A] is supposed write a JNL to the primary JVOL <b>22</b>A.</p>
<p id="p-0073" num="0072">However, in the example shown in the figure, since the actual page assigned to the primary JVOL <b>22</b>A is 1 only, no specific problem occurs even if a cache area for the actual page is secured in the CM <b>35</b>A in advance because the storage area of sufficient capacity still remains in the CM <b>35</b>A. Subsequently, if a cache area is secured for the one actual page in advance, it becomes unnecessary to secure a cache area each time a JNL is written to the primary JVOL <b>22</b>A. Therefore, the prevention of the I/O (Input/Output) performance deterioration of the primary storage apparatus <b>20</b>A can be expected.</p>
<p id="p-0074" num="0073">It should be noted that the size of a cache area which is secured for the primary JVOL <b>22</b>A in the CM <b>35</b>A in advance is not limited to the size of an actual page. A cache area for the amount of the total capacity of K units of actual pages (K is larger than one and smaller than the number of virtual pages configuring the primary JVOL <b>22</b>A) may also be secured in the CM <b>35</b>A in advance in accordance with the capacity of the CM <b>35</b>A. In this case, the maximum number of actual pages assigned to the primary JVOL <b>22</b>A may be K.</p>
<p id="p-0075" num="0074">Furthermore, a cache area for the primary JVOL <b>22</b>A may not have to be secured in the CM <b>35</b>A in advance. However, once securing a cache area for an actual page assigned to the primary JVOL <b>22</b>A, the controller <b>30</b>A may also keep the cache area secured without releasing the same. By this method, it becomes unnecessary thereafter to secure a cache area when writing a JNL to the actual page.</p>
<p id="p-0076" num="0075">Furthermore, from the perspective of preventing the I/O performance deterioration of the primary storage apparatus <b>20</b>A, N units of actual pages may also be assigned to the primary JVOL <b>22</b>A in advance. N is an integer which is 1 or larger and smaller than M which is the number of actual pages assigned to all the areas of the primary JVOL <b>22</b>A (M is an integer with the condition of N&#x3c;M). M is the same value as the number of virtual pages.</p>
<p id="p-0077" num="0076">What is explained above about the primary storage apparatus <b>20</b>A can also be applied to the secondary storage apparatus <b>20</b>B. Specifically speaking, the number of actual pages assigned to the secondary JVOL <b>22</b>B can be made smaller than the number of virtual pages configuring the secondary JVOL <b>22</b>B (e.g. the number of actual pages assigned to the secondary JVOL <b>22</b>B can be made 1 only), and wraparound is performed for the assigned actual pages. Generally, for writing a JNL to the secondary JVOL <b>22</b>B, a cache area for writing the JNL is also secured in the secondary storage apparatus <b>20</b>B from the CM<b>35</b>B, but a cache area for the number of actual pages assigned to the secondary JVOL <b>22</b>B may also be secured in advance in this embodiment.</p>
<p id="p-0078" num="0077">Furthermore, it may also be permitted that a cache area is secured in advance from the CM(s) <b>35</b>A (and/or <b>35</b>B) only for a part of the maximum number of actual pages assigned to the JVOL(s) <b>22</b>A (and/or <b>22</b>B), and that [the cache area] for the others is secured when writing a JNL to the secondary JVOL(s) <b>22</b>A (and/or <b>22</b>B).</p>
<p id="p-0079" num="0078">Furthermore, each time receiving a JNL from the primary storage apparatus <b>20</b>A and writing the JNL to the CM <b>35</b>B (or the secondary JVOL <b>22</b>B), the secondary storage apparatus <b>20</b>B (e.g. the controller in the secondary storage apparatus <b>20</b>B) may return a response indicating that the JNL is already transferred (e.g. a response including the SEQ # which the received JNL comprises) to the primary storage apparatus <b>20</b>A. If receiving such response, the primary storage apparatus <b>20</b>A can manage the status of the JNL (the JNL in the primary JVOL <b>22</b>A) corresponding to the response as transferred. However, even if being transferred to the secondary storage apparatus <b>20</b>B, the JNL in the primary JVOL <b>22</b>A should preferably remain in the primary JVOL <b>22</b>A until being reflected in the secondary DVOL <b>21</b>B. This is because, if a failure occurs in the secondary storage apparatus <b>20</b>B and if the primary storage apparatus <b>20</b>A is required by the SVP <b>50</b>, the secondary storage apparatus <b>20</b>B, and others to retransmit the JNL which is not reflected in the secondary DVOL <b>21</b>B to the secondary storage apparatus <b>20</b>B, the JNL cannot be retransmitted if the JNL which is not reflected in the secondary DVOL <b>21</b>B does not remain in the primary JVOL <b>22</b>B.</p>
<p id="p-0080" num="0079">Furthermore, each time reflecting a JNL in the secondary JVOL <b>22</b>B (each time writing the write data in the JNL to the secondary DVOL <b>21</b>B), the secondary storage apparatus <b>20</b>B may return a response indicating that the JNL is already reflected (e.g. a response including the SEQ # which the JNL comprises) to the primary storage apparatus <b>20</b>A. If receiving such response, the primary storage apparatus <b>20</b>A can manage the status of the JNL (the JNL in the primary JVOL <b>22</b>A) corresponding to the response as copied. The JNL including the write data written to the secondary JVOL <b>22</b>B may be deleted from both the secondary JVOL <b>22</b>B and the primary JVOL <b>22</b>A.</p>
<p id="p-0081" num="0080">Furthermore, that the maximum number of actual pages assigned to the JVOL (VVOL) is smaller than the number of virtual pages configuring the JVOL (VVOL) may also be ensured in only either the primary storage apparatus <b>20</b>A or the secondary storage apparatus <b>20</b>B.</p>
<p id="p-0082" num="0081">Hereinafter, the present embodiment is explained in detail. At this step, the items related to the primary storage apparatus <b>20</b>A are explained in detail and, since most of the above is common to the secondary storage apparatus <b>20</b>A, the explanation of the secondary storage apparatus <b>20</b>A is appropriately omitted.</p>
<p id="p-0083" num="0082"><figref idref="DRAWINGS">FIG. 2</figref> shows a configuration example of the primary storage apparatus <b>20</b>A.</p>
<p id="p-0084" num="0083">The primary storage apparatus <b>20</b>A comprises a controller <b>30</b>A and a plurality of storage devices <b>40</b>A. A storage device <b>40</b>A is an HDD (Hard Disk Drive) for example. A RAID (Redundant Array of Independent (or Inexpensive) Disks) group is configured of a plurality of storage devices <b>40</b>A, and an actual VOL (hereinafter also referred to as an &#x201c;actual VOL&#x201d;) <b>41</b>A is created based on each of the RAID groups. The actual VOL <b>41</b> may be a component of the pool without being provided to the host <b>10</b> or may also be a DVOL provided to the host <b>10</b>. In the former case, the actual VOL <b>41</b> may be divided into a plurality of actual pages. It should be noted that a physical storage device such as a tape or a flash memory may also be adopted as a storage device <b>40</b>A instead of an HDD.</p>
<p id="p-0085" num="0084">The controller <b>30</b>A comprises a plurality of frontend interface devices (hereinafter also referred to as FE-IFs) <b>31</b>A, an NIC (Network Interface Card) <b>32</b>A, a CPU (Central Processing Unit) <b>33</b>A, a memory <b>34</b>A, the CM <b>35</b>A, and a backend interface device (hereinafter also referred to as a BE-IF) <b>36</b>A. Although the processing performed by the controller <b>30</b>A may be performed by the CPU <b>33</b>A performing one or more computer programs, part of the processing at least may also be performed by the hardware circuit.</p>
<p id="p-0086" num="0085">The host <b>10</b> and the secondary storage apparatus <b>20</b>B are connected to a plurality of FE-IFs <b>31</b>A. The controller <b>30</b>A (CPU <b>33</b>A) communicates with the host <b>10</b> and the secondary storage apparatus <b>20</b>B via the FE-IFs <b>31</b>A.</p>
<p id="p-0087" num="0086">The SVP (SerVice Processor) <b>50</b> is connected to the NIC <b>32</b>A. The SVP<b>50</b> is an example of the management computer.</p>
<p id="p-0088" num="0087">The CPU <b>33</b>A controls the processing of the controller <b>30</b>A. Various types of information and programs required for the controller <b>30</b>A to control the primary storage apparatus <b>20</b>A are stored in the memory <b>34</b>A. The CPU <b>33</b>A realizes various functions by performing the various programs based on the various types of information stored in the memory <b>34</b>A.</p>
<p id="p-0089" num="0088">The CM <b>35</b>A stores the data written to the storage device <b>40</b>A and the data read from the storage device <b>40</b>A. The CM <b>35</b>A may also be integrated with the memory <b>34</b>A.</p>
<p id="p-0090" num="0089">The storage device <b>40</b>A is connected to the BE-IF <b>36</b>A. The controller <b>30</b>A (CPU <b>33</b>A) writes the data to the storage device <b>40</b>A which is the base of the write destination VOL (e.g. the actual pages assigned to the primary DVOL <b>21</b>A or the primary JVOL <b>22</b>A) via the BE-IF <b>36</b>A.</p>
<p id="p-0091" num="0090">The configuration of the primary storage apparatus <b>20</b>A is explained above. It should be noted that the controller <b>30</b>A may also comprise other types of configurations, not limited to the configuration shown in <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="p-0092" num="0091">It should be noted that the configuration of the secondary storage apparatus <b>20</b>B is practically the same as the configuration of the primary storage apparatus <b>20</b>A, and therefore the explanation of the secondary storage apparatus <b>20</b>B is omitted.</p>
<p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. 3A</figref> shows an example of management tables and a program stored in the memory <b>34</b>A of the primary storage apparatus <b>20</b>A.</p>
<p id="p-0094" num="0093">A primary VOL management table <b>341</b>A, a primary journal group (hereinafter also referred to as a &#x201c;primary JNLG&#x201d;) management table <b>342</b>A, a JNLG pair management table <b>343</b>A, a VVOL pair management table <b>344</b>A, a primary VVOL management table <b>345</b>A, a primary virtual page assignment management table <b>346</b>A, a primary JNL status management table <b>347</b>A, a primary virtual page status management table <b>348</b>A, a primary pool assignment management table <b>349</b>A, and a control program <b>350</b>A are stored in the memory <b>34</b>A.</p>
<p id="p-0095" num="0094">The primary VOL management table <b>341</b>A is a table for managing all the VOLs that the primary storage apparatus <b>20</b>A comprises. The VOLs are either VVOLs or actual VOLs.</p>
<p id="p-0096" num="0095">The primary JNLG management table <b>342</b>A is a table for managing the primary JNLG in the primary storage apparatus <b>20</b>A. The JNLG indicates a set of volumes configured of one or more logical VOLs for storing data and logical VOLs for storing JNLs.</p>
<p id="p-0097" num="0096">The JNLG pair management table <b>343</b>A is a table for managing the status of a pair of a primary JNLG and a JNLG in the secondary storage apparatus <b>20</b>B (hereinafter also referred to as a secondary JNLG).</p>
<p id="p-0098" num="0097">The VVOL pair management table <b>344</b>A is a table for managing the status of a pair of a primary VVOL and a secondary VVOL.</p>
<p id="p-0099" num="0098">The primary VVOL management table <b>345</b>A is a table for managing the primary VVOLs.</p>
<p id="p-0100" num="0099">The primary virtual page assignment management table <b>346</b>A is a table for managing which actual page is assigned to the primary virtual page from the primary pool.</p>
<p id="p-0101" num="0100">The primary JNL status management table <b>347</b>A is a table for managing the status of the JNL (primary JNL) processed in the primary storage apparatus <b>20</b>A.</p>
<p id="p-0102" num="0101">The primary virtual page status management table <b>348</b>A is a table for managing the status of the primary virtual page.</p>
<p id="p-0103" num="0102">The primary pool assignment management table <b>349</b>A is a table for managing which primary JVOL the primary pool is assigned to.</p>
<p id="p-0104" num="0103">The control program <b>350</b>A is a computer program for the CPU <b>33</b>A to control the primary storage apparatus <b>20</b>A.</p>
<p id="p-0105" num="0104"><figref idref="DRAWINGS">FIG. 3B</figref> shows an example of management tables and a program stored in the memory <b>34</b>B of the secondary storage apparatus <b>20</b>B.</p>
<p id="p-0106" num="0105">A secondary VOL management table <b>341</b>B, a secondary JNLG management table <b>342</b>B, a JNLG pair management table <b>343</b>B, a VVOL pair management table <b>344</b>B, a secondary VVOL management table <b>345</b>B, a secondary virtual page assignment management table <b>346</b>B, a secondary JNL status management table <b>347</b>B, a secondary virtual page status management table <b>348</b>B, a secondary pool assignment management table <b>349</b>B, and a control program <b>350</b>B are stored in the memory <b>34</b>B.</p>
<p id="p-0107" num="0106">These management tables are practically the same as the management tables stored in the memory <b>34</b>A of the primary storage [apparatus] <b>20</b>A, and therefore the explanation is omitted.</p>
<p id="p-0108" num="0107"><figref idref="DRAWINGS">FIG. 4</figref> shows the relationship between the capacity of the slot of the CM <b>35</b>A and the actual pages assigned to the primary JVOL <b>22</b>A.</p>
<p id="p-0109" num="0108">The CM <b>35</b> is configured of a plurality of slots (cache areas) <b>351</b>A. The capacity of a virtual page <b>221</b>A (an actual page) is equal to the capacity of a specified number of (e.g. 168) slots <b>351</b>A. As explained in <figref idref="DRAWINGS">FIG. 1</figref>, the data read from and written to the VOL (e.g. the primary DVOL <b>21</b>A and the primary JVOL <b>22</b>A) is written to the CM <b>35</b>A for once. The pool <b>23</b>A is configured of a plurality of actual VOLs, each of which is divided into a plurality of actual pages, which are assigned to the virtual pages.</p>
<p id="p-0110" num="0109">In the present embodiment, a specified number of slots in the CM <b>35</b>A (the slots for the same amount (<b>168</b>) as the capacity of a page in the example of <figref idref="DRAWINGS">FIG. 1</figref>) <b>351</b>A are secured for the primary JVOL <b>22</b>A in advance. For example, if the slots for the amount of K units of virtual pages <b>221</b>A (K is larger than 1 and is smaller than the number of virtual pages configuring the primary JVOL <b>22</b>A) are secured in the CM <b>35</b>A in advance, (168&#xd7;K) units of slots are secured in advance.</p>
<p id="p-0111" num="0110">As explained above, if the slots for the amount of the specified number of virtual pages in the CM <b>35</b>A are secured in advance, the operation of securing the slots in the CM <b>35</b>A when writing the JNL to the primary JVOL <b>22</b>A is omitted. Therefore, the prevention of the performance deterioration of the primary storage apparatus <b>20</b>A can be expected. Furthermore, as shown in <figref idref="DRAWINGS">FIG. 1</figref>, if the number of actual pages assigned to the primary JVOL <b>22</b>A is 1 (abstractly, for the amount of the number of pages equal to or smaller than the specified ratio of the capacity of the primary JVOL <b>22</b>A), the number of slots secured in advance (the cache capacity) can be saved.</p>
<p id="p-0112" num="0111">It should be noted that the relationship between the slot capacity of the CM <b>35</b>B and the pages assigned to the secondary JVOL <b>22</b>B in the secondary storage apparatus <b>20</b>B is practically the same as the relationship between the slot capacity of the CM <b>35</b>A and the pages assigned to the primary JVOL <b>22</b>A, and therefore the explanation is omitted.</p>
<p id="p-0113" num="0112"><figref idref="DRAWINGS">FIG. 5</figref> shows the relationship between the capacity of each of the pages and the capacity of each of the JNLs. The primary storage apparatus <b>20</b>A is also explained as an example at this step.</p>
<p id="p-0114" num="0113">As explained in <figref idref="DRAWINGS">FIG. 4</figref>, the capacity of a virtual page <b>221</b>A is equal to the capacity of 168 slots. The capacity of a virtual page <b>221</b>A is 2 MB for example. The capacity of a JNL <b>222</b>A is 2 KB for example.</p>
<p id="p-0115" num="0114">The controller <b>30</b>A writes the JNL <b>222</b>A first to the head of the primary virtual page <b>221</b>A. At this step, even though a free area exists in the actual page assigned to the virtual page <b>221</b>A, the capacity of the free area might be smaller than the size of the JNL <b>222</b>A. In this case, for using as much the free area as possible, writing a part of the JNLs <b>222</b>A (the JNL SEQ #<b>100</b> in the example shown in the figure) to the actual page and writing the rest of the JNLs <b>222</b>A to the other actual pages can be considered.</p>
<p id="p-0116" num="0115">However, in the present embodiment, instead of writing one JNL <b>222</b>A across the two actual pages as explained above, the controller <b>30</b>A assigns a free actual page to the other virtual pages than the virtual page which is the assignment destination of the actual page with the small free area from the pool <b>23</b>A. At this step, if the number of assigned actual pages reaches a specific number (the number smaller than the number of virtual pages configuring the primary JVOL), the controller <b>30</b>A overwrites the area where the oldest [JNL] for which the copy is completed is stored in one or more actual pages assigned to the primary JVOL <b>22</b>A by a new write target JNL (wraparound).</p>
<p id="p-0117" num="0116">By the above-mentioned processing, the JNL <b>222</b>A can be prevented from being written across a plurality of actual pages.</p>
<p id="p-0118" num="0117"><figref idref="DRAWINGS">FIG. 6</figref> shows the overview of the processing of the controller <b>30</b>A. It should be noted that the number of actual pages assigned to the primary JVOL <b>22</b>A is a variable value instead of a fixed value in the explanation of <figref idref="DRAWINGS">FIG. 6</figref>. Specifically speaking, <figref idref="DRAWINGS">FIG. 6</figref> shows an example of the fact that the number of actual pages assigned to the primary JVOL <b>22</b>A is not fixed (however, the number of actual pages assigned to the primary JVOL <b>22</b>A is smaller than the number of virtual pages configuring the primary JVOL <b>22</b>A as the above-mentioned explanation).</p>
<p id="p-0119" num="0118">For example, the JNL <b>222</b>A is copied in units of virtual pages by the controller <b>30</b>A. Specifically speaking, copy is performed for each of the JNL groups (all the JNLs stored in the virtual page) stored in a virtual page (to be more exact, the actual page assigned to the virtual page) from the primary storage apparatus <b>20</b>A to the secondary storage apparatus <b>20</b>B. Although the JNL is transmitted from the primary storage apparatus <b>20</b>A to the secondary storage apparatus <b>20</b>B in response to a read command transmitted from the secondary storage apparatus <b>20</b>B to the primary storage apparatus <b>20</b>A, instead of the above, [the JNL] may also be transmitted with the write command from the primary storage apparatus <b>20</b>A to the secondary storage apparatus <b>20</b>B.</p>
<p id="p-0120" num="0119">The controller <b>30</b>A manages the status of each of the virtual pages <b>221</b>A in the primary JVOL <b>22</b>A.</p>
<p id="p-0121" num="0120">The status of the virtual page <b>221</b>A to which no actual page is assigned is &#x201c;unassigned&#x201d;.</p>
<p id="p-0122" num="0121">If writing a JNL to an &#x201c;unassigned&#x201d; virtual page <b>221</b>A for the first time, the controller <b>30</b>A assigns an actual page to the virtual page <b>221</b>A, writes the JNL to the assigned actual page, and changes the status of the virtual page <b>221</b>A to &#x201c;not copied&#x201d;.</p>
<p id="p-0123" num="0122">If [the controller <b>30</b>A] transferred at least one JNL from the &#x201c;not copied&#x201d; virtual page to the secondary storage apparatus <b>20</b>B, the controller <b>30</b>A changes the status of the virtual page from &#x201c;not copied&#x201d; to &#x201c;copying&#x201d;. &#x201c;Copying&#x201d; indicates that, although at least one JNL started to be transferred from the virtual page to the secondary storage apparatus <b>20</b>B, all of the specified number (e.g. the maximum number of JNLs which can be written to the actual page) of JNLs written to the virtual page are not reflected in the secondary DVOL <b>21</b>B yet, in other words, that the JNLs stored in the actual page assigned to the virtual page cannot be erased yet. Therefore, the virtual page <b>221</b>A in &#x201c;copying&#x201d; is relevant to any of the conditions, for example, from (A) to (C) below,</p>
<p id="h-0011" num="0000">(A) the condition where none of the JNLs are transferred from the virtual page to the secondary JVOL <b>22</b>B,</p>
<p id="h-0012" num="0000">(B) the condition where at least one of the JNLs was transferred from the virtual page to the secondary JVOL <b>22</b>B but none of the above is reflected in the secondary DVOL <b>21</b>B, and</p>
<p id="h-0013" num="0000">(C) the condition where at least one of the JNLs was transferred from the virtual page to the secondary JVOL <b>22</b>B and reflected in the secondary DVOL <b>21</b>B, but all of the JNLs in the virtual page are not reflected in the secondary DVOL <b>21</b>B yet.</p>
<p id="h-0014" num="0000">It should be noted that the status of &#x201c;copying&#x201d; may also be divided into a plurality of more detailed statuses to be able to ascertain which of the above-mentioned conditions from (A) to (C) is relevant.</p>
<p id="p-0124" num="0123">A JNL <b>222</b>A is added to the actual page assigned to the virtual page <b>221</b>A. If the free capacity of the actual page becomes smaller than the size of the JNL <b>222</b>A, the controller <b>30</b>A newly assigns a free actual page <b>231</b>A to a virtual page next to the virtual page to which the actual page is assigned, and writes the JNL <b>222</b>A to the newly assigned actual page <b>231</b>A. The status of the virtual page to which the actual page is newly assigned is changed to the status &#x201c;copying&#x201d; as shown in the figure if any JNLs are transferred from the virtual page.</p>
<p id="p-0125" num="0124">As explained above, if a certain period of time (a first period of time shown in the figure) elapses, the JNLs written to the primary JVOL <b>22</b>A increase and the actual pages assigned to the primary JVOL <b>22</b>A increase and, at the same time, the virtual pages in the status &#x201c;copying&#x201d; increase.</p>
<p id="p-0126" num="0125">Subsequently, in due time (if further a second period of time shown in the figure elapses), the status of the virtual page whose status was changed to &#x201c;copying&#x201d; first is changed to &#x201c;copied&#x201d;. &#x201c;Copied&#x201d; indicates that all the JNLs in the virtual page are reflected in the secondary DVOL <b>21</b>B, in other words, all the JNLs in the virtual page may be erased.</p>
<p id="p-0127" num="0126">When or after there are H units (e.g. H=1) of &#x201c;copied&#x201d; virtual pages, the controller <b>30</b>A stops the new assignment of actual pages to the primary JVOL <b>22</b>A. Specifically speaking, if a new JNL <b>222</b>A is written to the primary JVOL <b>22</b>A at the point of time and thereafter, the controller <b>30</b>A does not assign a new free actual page to the other virtual pages even if the capacity of the free area in the actual page which is recently assigned to the primary JVOL <b>22</b>A is smaller than the JNL. The controller <b>30</b>A writes the write target JNL <b>222</b>A to the area where the oldest JNL in the actual page assigned to the &#x201c;copied&#x201d; virtual page <b>221</b>A is stored. In the example shown in the figure, 5 which is the number of actual pages <b>231</b>A assigned to the primary JVOL <b>22</b>A is smaller than the number of virtual pages <b>221</b>A configuring the primary JVOL <b>22</b>A.</p>
<p id="p-0128" num="0127">It should be noted that the above-mentioned H which is the number of &#x201c;copied&#x201d; virtual pages may also be an integer larger than 1 if the number is smaller than the number of virtual pages <b>221</b>A configuring the primary JVOL <b>22</b>A.</p>
<p id="p-0129" num="0128">Furthermore, the controller <b>20</b>A may also transfer JNLs to the secondary storage apparatus <b>20</b>B in units of JNLs instead of transferring JNLs to the secondary storage apparatus <b>20</b>B in units of virtual pages. For example, if the communication load with the secondary storage apparatus <b>20</b>B is smaller than a specified load (e.g. if the bands of the primary storage apparatus <b>20</b>A and of the secondary storage apparatus <b>20</b>B are vacant by a specified value or larger, if the usage rate of the CPU <b>33</b>A is smaller than a specified value, and in other cases), and if the JNLs are transferred to the secondary storage apparatus <b>20</b>B in units of virtual pages and the communication load is equal to or larger than the specified load (e.g. the transfer of JNLs is delayed) the controller <b>20</b>A may also terminate the transfer of the JNLs to the secondary storage apparatus <b>20</b>B in units of virtual pages and transfer the JNLs to the secondary storage apparatus <b>20</b>B in units of JNLs. If the communication load is equal to or larger than the specified load, more JNLs can be expected to be transferred in the same length of time by the transfer in units of JNLs, and therefore the status &#x201c;copied&#x201d; can be expected to be acquired sooner as the status of the copy source virtual page, and eventually the number of actual pages assigned to the primary JVOL <b>22</b>A can be expected to be reduced.</p>
<p id="p-0130" num="0129">It should be noted that the controller <b>20</b>A may manage the status of each of the JNLs since starting the JNL transfer in units of JNLs until returning [the transfer] to the JNL transfer in units of virtual pages (or while performing the JNL transfer in units of virtual pages also). For example, if a JNL is transferred to the secondary storage apparatus <b>20</b> but not reflected in the secondary DVOL <b>21</b>B, the controller <b>20</b>A may manage the status of the JNL as &#x201c;copying&#x201d;, and may manage the status of the JNL as &#x201c;copied&#x201d; if the JNL is reflected in the secondary DVOL <b>21</b>B. When or after there are J units of &#x201c;copied&#x201d; JNLs, the controller <b>30</b>A may stop the new assignment of actual pages to the primary JVOL <b>22</b>A. The value of J is 1 or larger for example, and equal to or smaller than (H&#xd7;T) at the same time (T is the number of JNLs stored in a virtual page).</p>
<p id="p-0131" num="0130">Furthermore, the controller of the secondary storage apparatus <b>20</b>B may also monitor the communication load and, based on the result, switch in which of units JNLs should be transferred, virtual pages or JNLs. For example, the secondary storage apparatus <b>20</b>B may transmit a first type of read command for reading JNLs in units of virtual pages to the primary storage apparatus <b>20</b>A, and may transmit a second type of read command for reading JNLs in units of JNLs to the primary storage apparatus <b>20</b>A after detecting that the communication load becomes equal to or larger than the specified load.</p>
<p id="p-0132" num="0131"><figref idref="DRAWINGS">FIG. 7A</figref> shows a configuration example of the primary virtual page bitmap <b>70</b>A.</p>
<p id="p-0133" num="0132">The primary virtual page bitmap <b>70</b>A is stored in the memory <b>34</b>A. By referring to the primary virtual page bitmap <b>70</b>A, the CPU <b>33</b>A can ascertain which JNL of which JNLG (journal group) is copied to (reflected in) the secondary DVOL <b>22</b>B.</p>
<p id="p-0134" num="0133">The primary virtual page bitmap <b>70</b>A comprises a plurality of bits <b>72</b> per JNLG #<b>71</b>A. Each of the bits corresponds to the SEQ # of a JNL. If an SEQ # n (n is any of the integers which is 0 and larger) is copied, the n-th bit is on (e.g. 1). As for a JNLG of JNLG #<b>1</b>, after transferring a JNL of SEQ # n, if receiving a notification indicating that the JNL is reflected in the secondary DVOL <b>21</b>B from the secondary storage apparatus <b>20</b>B, the CPU <b>33</b>A sets the bit corresponding to the JNLG #<b>1</b> and the SEQ # n to on.</p>
<p id="p-0135" num="0134">It should be noted that a JNLG is a set of one or more DVOLs and one or more JVOLs. As JNLGs, primary JNLGs and secondary JNLGs exist. A primary JNLG is a set of one or more primary DVOLs and one or more primary JVOLs. A secondary JNLG is a set of one or more secondary DVOLs and one or more secondary JVOLs.</p>
<p id="p-0136" num="0135"><figref idref="DRAWINGS">FIG. 7B</figref> shows a configuration example of the JNLG usage condition management table <b>700</b>A.</p>
<p id="p-0137" num="0136">The JNLG usage condition management table <b>700</b>A is stored in the memory <b>34</b>A. The JNLG usage condition management table <b>700</b>A stores each JNLG by associating a JNLG #<b>701</b>A, a usage rate <b>702</b>A, a total number of pages <b>703</b>A, and a number of pages in use <b>704</b>A.</p>
<p id="p-0138" num="0137">The JNLG #<b>701</b>A is a number for identifying the JNLG.</p>
<p id="p-0139" num="0138">The usage rate <b>702</b>A is information indicating the rate of the capacity of all the JNLs to the total capacity of the JNLG.</p>
<p id="p-0140" num="0139">The total number of pages <b>703</b>A is information indicating the number of all the pages that the JNLG comprises.</p>
<p id="p-0141" num="0140">The number of pages in use <b>704</b>A is information indicating the number of pages in which the JNLs are stored among all the pages that the JNLG comprises. The usage rate <b>702</b>A is ascertained based on the total number of pages <b>703</b>A and the number of pages in use <b>704</b>A.</p>
<p id="p-0142" num="0141">It should be noted that, although the secondary virtual page bitmap and the JNLG usage condition management table may also be stored in the memory <b>34</b>B of the secondary storage apparatus <b>20</b>B, those are practically the same as the primary virtual page bitmap <b>70</b>A and the JNLG usage condition management table <b>700</b>A of the primary storage apparatus <b>21</b>A respectively, and therefore the explanation is omitted.</p>
<p id="p-0143" num="0142"><figref idref="DRAWINGS">FIG. 8A</figref> shows a configuration example of the primary VOL management table <b>341</b>A.</p>
<p id="p-0144" num="0143">The primary VOL management table <b>341</b>A stores each VOL of the primary storage apparatus <b>20</b>A by associating a VOL #<b>81</b>A, a usage condition <b>82</b>A, a JNLG #<b>83</b>A, a VOL attribute <b>84</b>A, an emulation type <b>85</b>A, and a capacity <b>86</b>A.</p>
<p id="p-0145" num="0144">The VOL #<b>81</b>A is a number for identifying the VOL which the primary storage apparatus <b>20</b>A comprises.</p>
<p id="p-0146" num="0145">The usage condition <b>82</b>A is information indicating whether the VOL is being used or not. In the example shown in the figure, &#x201c;in use&#x201d; is shown if the VOL is being used and &#x201c;unused&#x201d; is shown if the VOL is not being used, but the notation is not limited to this.</p>
<p id="p-0147" num="0146">The JNLG #<b>83</b>A is an identification number of a JNLG to which the VOL belongs.</p>
<p id="p-0148" num="0147">The VOL attribute <b>84</b>A is information indicating the usage of the VOL. For example, the VOL attribute <b>84</b>A is &#x201c;Data&#x201d; if the VOL is a DVOL, [the attribute is] &#x201c;JNL&#x201d; if the VOL is a JVOL, and &#x201c;Pool VOL&#x201d; is shown if the VOL is a pool VOL (the VOL to be the component of the pool). It should be noted that no pool VOL is included in the JNLGs.</p>
<p id="p-0149" num="0148">The emulation type <b>85</b>A is information indicating the emulation type of the VOL (the format type of data allocation in the VOL). As explained later, VOLs (JVOLs, DVOLs) of the same emulation type may be paired.</p>
<p id="p-0150" num="0149">The capacity <b>86</b>A is information indicating the capacity of the VOL. Although the unit of the capacity is &#x201c;GB&#x201d; (gigabyte) in the example shown in the figure, the unit is not limited to this.</p>
<p id="p-0151" num="0150"><figref idref="DRAWINGS">FIG. 8B</figref> shows a configuration example of the secondary VOL management table <b>341</b>B.</p>
<p id="p-0152" num="0151">The secondary VOL management table <b>341</b>B stores each VOL of the secondary storage apparatus <b>20</b>B by associating a VOL #<b>81</b>B, a usage condition <b>82</b>B, a JNLG #<b>83</b>B, a VOL attribute <b>84</b>B, an emulation type <b>85</b>B, and a capacity <b>86</b>B. It should be noted that the secondary VOL management table <b>341</b>B is nearly the same in the configuration as the primary VOL management table <b>341</b>A, and therefore the explanation is omitted.</p>
<p id="p-0153" num="0152"><figref idref="DRAWINGS">FIG. 9A</figref> shows a configuration example of the primary JNLG management table <b>342</b>A.</p>
<p id="p-0154" num="0153">The primary JNLG management table <b>342</b>A stores each VOL belonging to the primary JNLG by associating a primary JNLG #<b>91</b>A, a VOL #<b>92</b>A, and a VOL attribute <b>93</b>A.</p>
<p id="p-0155" num="0154">The primary JNLG#<b>91</b>A is an identification number of the primary JNLG to which the VOL belongs. The VOL #<b>92</b>A is an identification number of the VOL. The VOL attribute <b>93</b>A is information indicating the attribute of the VOL (whether a DVOL or a JVOL).</p>
<p id="p-0156" num="0155">By referring to the primary JNLG management table <b>342</b>A, the CPU <b>33</b>A can determine which VOL belonging to which primary JNLG is what type of VOL (whether a JVOL or a DVOL).</p>
<p id="p-0157" num="0156"><figref idref="DRAWINGS">FIG. 9B</figref> shows a configuration example of the secondary JNLG management table <b>342</b>B.</p>
<p id="p-0158" num="0157">The secondary JNLG management table <b>342</b>B stores each VOL belonging to the secondary JNLG by associating a JNLG #<b>91</b>B, a VOL #<b>92</b>B, and a VOL attribute <b>93</b>B. Since the secondary JNLG management table <b>342</b>B is practically the same in the configuration as the primary JNLG management table <b>342</b>A, the explanation is omitted.</p>
<p id="p-0159" num="0158"><figref idref="DRAWINGS">FIG. 10</figref> shows a configuration example of the JNLG pair management table <b>343</b>A.</p>
<p id="p-0160" num="0159">The JNLG pair management table <b>343</b>A comprises a primary JNLG #<b>101</b>, a secondary JNLG #<b>102</b>, and a status <b>103</b> for each JNLG pair.</p>
<p id="p-0161" num="0160">The primary JNLG #<b>101</b> is an identification number of a primary JNLG in a JNLG pair, and the secondary JNLG #<b>102</b> is an identification number of a secondary JNLG in the JNLG pair.</p>
<p id="p-0162" num="0161">The status <b>103</b> is information indicating the status of the JNLG pair. &#x201c;PAIR&#x201d; indicates that the primary JNLG and the secondary JNLG are consistent with each other about the data (the primary DVOL and the secondary DVOL are consistent). &#x201c;SIMP&#x201d; indicates that the primary JNLG and the secondary JNLG are not paired yet. &#x201c;COPY&#x201d; indicates that the primary JNLG and the secondary JNLG are paired a pair but that the data is not consistent.</p>
<p id="p-0163" num="0162">By referring to the JNLG pair management table <b>343</b>A, the CPU <b>33</b>A can determine which primary JNLG and which secondary JNLG are paired and the status of the JNLG pair.</p>
<p id="p-0164" num="0163"><figref idref="DRAWINGS">FIG. 11</figref> shows a configuration example of the VOL pair management table <b>344</b>A.</p>
<p id="p-0165" num="0164">The VOL pair management tables <b>344</b>A, <b>344</b>B store each VOL pair by associating a primary VOL #<b>111</b> with a secondary VOL #<b>112</b>. The primary VOL #<b>111</b> is an identification number of a primary VOL in the VOL pair, and the secondary VOL #<b>112</b> is an identification number of a secondary VOL in the VOL pair.</p>
<p id="p-0166" num="0165">By referring to the VVOL pair management table <b>344</b>A, the CPU <b>33</b>A can determine which primary VOL and which secondary VOL are paired.</p>
<p id="p-0167" num="0166">Since the VVOL pair management table <b>344</b>B (refer to <figref idref="DRAWINGS">FIG. 3B</figref>) is practically the same in the configuration as the VVOL pair management table <b>344</b>A, the explanation is omitted.</p>
<p id="p-0168" num="0167"><figref idref="DRAWINGS">FIG. 12A</figref> shows a configuration example of the primary VVOL management table <b>345</b>A.</p>
<p id="p-0169" num="0168">The primary VVOL management table <b>345</b>A stores each primary VVOL by associating a primary VVOL #<b>121</b>A, a Pool #<b>122</b>A, and a capacity <b>123</b>A.</p>
<p id="p-0170" num="0169">The primary VVOL #<b>121</b>A is an identification number of the primary VVOL (a primary DVOL or a primary JVOL). The Pool #<b>122</b>A is an identification number of a pool with which the primary VVOL is associated (the pool to be the assignment source of the actual pages to the primary VVOL). The capacity <b>123</b>A indicates the capacity of the primary VVOL.</p>
<p id="p-0171" num="0170"><figref idref="DRAWINGS">FIG. 12B</figref> shows a configuration example of the secondary VVOL management table <b>345</b>B.</p>
<p id="p-0172" num="0171">The secondary VVOL management table <b>345</b>B stores each secondary VVOL by associating a secondary VVOL #<b>121</b>B, a Pool #<b>122</b>B, and a capacity <b>123</b>B. Since the secondary VVOL management table <b>345</b>B is practically the same in the configuration as the primary VVOL management table <b>345</b>A, the explanation is omitted.</p>
<p id="p-0173" num="0172"><figref idref="DRAWINGS">FIG. 13A</figref> shows a configuration example of the primary virtual page assignment management table <b>346</b>A.</p>
<p id="p-0174" num="0173">The primary virtual page assignment management table <b>346</b>A exists in each primary VVOL. The primary virtual page assignment management table <b>346</b>A stores each primary virtual page by associating a virtual page #<b>131</b>A and an actual page #<b>132</b>A. The virtual page #<b>131</b>A is an identification number of the virtual page and the actual page #<b>132</b>A is an identification number of an actual page assigned to the virtual page. If no actual page is assigned to the virtual page, the actual page #<b>132</b>A corresponding to the virtual page is a value indicating that no actual page is assigned.</p>
<p id="p-0175" num="0174">By referring to the primary virtual page assignment management table <b>346</b>A and the above-mentioned primary VVOL management table <b>345</b>A, the CPU <b>33</b>A can determine whether an actual page is assigned to a primary virtual page or not and from which pool which actual page is assigned to the primary virtual page.</p>
<p id="p-0176" num="0175"><figref idref="DRAWINGS">FIG. 13B</figref> shows an example of the secondary virtual page assignment management table <b>346</b>B.</p>
<p id="p-0177" num="0176">The secondary virtual page assignment management table <b>346</b>B exists in each secondary VVOL. The secondary virtual page assignment management table <b>346</b>B stores each secondary virtual page by associating a virtual page #<b>131</b>B and an actual page #<b>132</b>B. Since the secondary virtual page assignment management table <b>346</b>B is practically the same in the configuration as the primary VOL management table <b>345</b>A, the explanation is omitted.</p>
<p id="p-0178" num="0177"><figref idref="DRAWINGS">FIG. 14</figref> shows a configuration example of the primary JNL status management table <b>347</b>A.</p>
<p id="p-0179" num="0178">The primary JNL status management table <b>347</b>A exists in each primary JVOL. The primary JNL status management table <b>347</b>A stores each JNL in the primary JVOL by associating a primary virtual page #<b>141</b>A, a status <b>142</b>A, a page starting address <b>143</b>A, a page ending address <b>144</b>A, a JNL starting address <b>145</b>A, a JNL ending address <b>146</b>A, and an SEQ #<b>147</b>A.</p>
<p id="p-0180" num="0179">The primary virtual page #<b>141</b>A is a number for identifying a primary virtual page in which the JNL is stored.</p>
<p id="p-0181" num="0180">The status <b>142</b>A indicates the status of the JNL. For example, the status <b>142</b>A is as shown below.</p>
<p id="h-0015" num="0000">(*) &#x201c;Copied&#x201d; indicates that the data included in the JNL is copied to the secondary DVOL <b>21</b>B (i.e. that the JNL is reflected in the secondary DVOL <b>21</b>B).</p>
<p id="h-0016" num="0000">(*) &#x201c;Copying&#x201d; indicates that the JNL is transferred to the secondary storage apparatus <b>20</b>B but that the JNL is not reflected in the secondary DVOL yet.</p>
<p id="h-0017" num="0000">(*) &#x201c;Readable&#x201d; indicates that the JNL in the primary JVOL can be transferred to the secondary JVOL.</p>
<p id="h-0018" num="0000">(*) &#x201c;Not copied&#x201d; indicates that the JNL in the primary JVOL is not transferred to the secondary JVOL yet.</p>
<p id="h-0019" num="0000">(*) &#x201c;Unassigned&#x201d; indicates that no actual page is assigned to the primary virtual page.</p>
<p id="p-0182" num="0181">The page starting address <b>143</b>A is information indicating the starting address of the virtual page. The page ending address <b>144</b>A is information indicating the ending address of each of the virtual pages.</p>
<p id="p-0183" num="0182">The JNL starting address <b>145</b>A is information indicating from which area of the virtual page the JNL is written. The JNL ending address <b>146</b>A is information indicating to which area of the virtual page the JNL is written. By referring to the JNL starting address <b>145</b>A and the JNL ending address <b>146</b>A, the location of the JNL in the virtual page can be ascertained.</p>
<p id="p-0184" num="0183">The SEQ #<b>147</b>A indicates the SEQ # included in the JNL.</p>
<p id="p-0185" num="0184">By referring to the primary JNL status management table <b>347</b>A, the CPU <b>33</b>A can determine the status of each of the JNLs.</p>
<p id="p-0186" num="0185"><figref idref="DRAWINGS">FIG. 15</figref> shows a configuration example of the secondary JNL status management table <b>347</b>B.</p>
<p id="p-0187" num="0186">The secondary JNL status management table <b>347</b>B exists in each secondary JVOL. The secondary JNL status management table <b>347</b>B stores each JNL in the secondary JVOL by associating a secondary virtual page #<b>141</b>B, a status <b>142</b>B, a page starting address <b>143</b>B, a page ending address <b>144</b>B, a JNL starting address <b>145</b>B, a JNL ending address <b>146</b>B, and an SEQ #<b>147</b>B.</p>
<p id="p-0188" num="0187">Since the secondary JNL status management table <b>347</b>B is practically the same in the configuration as the primary JNL status management table <b>347</b>A, the detailed explanation is omitted.</p>
<p id="p-0189" num="0188"><figref idref="DRAWINGS">FIG. 16A</figref> shows a configuration example of the primary virtual page status management table <b>348</b>A.</p>
<p id="p-0190" num="0189">The primary virtual page status management table <b>348</b>A exists in each primary JVOL <b>22</b>A. The primary virtual page status management table <b>348</b>A stores each primary virtual page by associating a primary virtual page #<b>161</b>A and a status <b>162</b>A.</p>
<p id="p-0191" num="0190">The primary virtual page #<b>161</b>A is a number for identifying a virtual page. The status <b>162</b>A is information indicating the status of the virtual page. The status <b>162</b>A is as shown below for example.</p>
<p id="h-0020" num="0000">(*) &#x201c;Copied&#x201d; indicates that all the JNLs in the virtual page <b>221</b>A are reflected in the secondary DVOL <b>21</b>B.</p>
<p id="p-0192" num="0191">(*) &#x201c;Copying&#x201d; indicates that at least one of the JNLs in the virtual page <b>221</b>A is transferred to the secondary storage apparatus <b>20</b>B and, at the same time, that at least one of the JNLs in the virtual page <b>221</b>A is not reflected in the secondary DVOL <b>21</b>B yet.
<br/>
(*) &#x201c;Readable&#x201d; indicates that all the JNLs in the virtual page <b>221</b>A can be transferred to the secondary JVOL <b>22</b>B.
</p>
<p id="p-0193" num="0192">By referring to the primary virtual page status management table <b>348</b>A, the CPU <b>33</b>A can determine the status of each of the primary virtual pages <b>221</b>A.</p>
<p id="p-0194" num="0193">It should be noted that the status of the virtual page may depend on the statuses of the JNLs in the virtual page. For example, if the status of all the JNLs in a virtual page is &#x201c;copied&#x201d;, the status of the virtual page may also be &#x201c;copied&#x201d;. Meanwhile, for example, if the status of at least one of the JNLs in a virtual page is &#x201c;copying&#x201d;, the status of the virtual page may also be &#x201c;copying&#x201d;.</p>
<p id="p-0195" num="0194"><figref idref="DRAWINGS">FIG. 16B</figref> shows a configuration example of the secondary virtual page status management table <b>348</b>B.</p>
<p id="p-0196" num="0195">The secondary virtual page status management table <b>348</b>B exists in each secondary JVOL <b>22</b>B. The secondary virtual page status management table <b>348</b>B stores each secondary virtual page by associating a secondary virtual page #<b>161</b>B and a status <b>162</b>B. Since the secondary virtual page status management table <b>348</b>B is practically the same in the configuration as the primary virtual page status management table <b>348</b>A, the explanation is omitted.</p>
<p id="p-0197" num="0196"><figref idref="DRAWINGS">FIG. 17A</figref> shows a configuration example of the primary pool management table <b>349</b>A.</p>
<p id="p-0198" num="0197">The primary pool management table <b>349</b>A exists in each primary pool. The primary pool management table <b>349</b>A stores each primary actual page by associating a Pool #<b>171</b>A, an actual page #<b>172</b>A, a virtual page #<b>173</b>A, and a primary VVOL #<b>174</b>A.</p>
<p id="p-0199" num="0198">The Pool #<b>171</b>A is a number for identifying a primary pool comprising the actual page. The actual page #<b>172</b>A is a number for identifying the actual page. The virtual page #<b>173</b>A is a number for identifying the virtual page to which the actual page is assigned. The primary VVOL #<b>174</b>A is a number for identifying a primary VVOL including the virtual page to which the actual page is assigned. It should be noted that the virtual page #<b>173</b>A and the primary VVOL #<b>174</b>A corresponding to a free actual page may be a value indicating that the actual page is a free actual page (an actual page which can be assigned).</p>
<p id="p-0200" num="0199">By referring to the primary pool management table <b>349</b>A, the CPU <b>33</b>A can determine which actual page is a free actual page (an actual page which can be assigned) and which actual page is assigned to which virtual page of which VVOL.</p>
<p id="p-0201" num="0200"><figref idref="DRAWINGS">FIG. 17B</figref> shows the secondary pool management table <b>349</b>B.</p>
<p id="p-0202" num="0201">The secondary pool management table <b>349</b>B exists in each secondary pool. The secondary pool management table <b>349</b>B stores each secondary actual page by associating a secondary Pool #<b>171</b>B, an actual page #<b>172</b>B, a secondary virtual page #<b>173</b>B, and a secondary VVOL #<b>174</b>B. Since the secondary pool management table <b>349</b>B is practically the same in the configuration as the primary pool management table <b>349</b>A, the explanation is omitted.</p>
<p id="p-0203" num="0202">Hereinafter, the processing performed in the present embodiment is explained.</p>
<p id="p-0204" num="0203"><figref idref="DRAWINGS">FIG. 18</figref> shows an example of the flow of the processing for creating a pair of JNLGs.</p>
<p id="p-0205" num="0204">The controller <b>30</b>A in the primary storage apparatus <b>20</b>A refers to the primary VOL management table <b>341</b>A in <figref idref="DRAWINGS">FIG. 8A</figref> and assigns a free VOL in the &#x201c;unused&#x201d; status to the primary pool <b>23</b>A (S<b>181</b>). The controller <b>30</b>A sets the status of the VOL assigned to the free pool to &#x201c;in use&#x201d;.</p>
<p id="p-0206" num="0205">The controller <b>30</b>A creates a primary VVOL (S<b>182</b>). The primary VVOL is a primary DVOL <b>21</b>A or a primary JVOL <b>22</b>A.</p>
<p id="p-0207" num="0206">The controller <b>30</b>A associates the primary pool <b>23</b>A with the primary VVOL (S<b>183</b>). This processing is performed by the controller <b>30</b>A setting each of the VOL attributes <b>84</b>A of the primary VOL management table <b>341</b>A in <figref idref="DRAWINGS">FIG. 8A</figref> to &#x201c;Data&#x201d; or &#x201c;JNL&#x201d;.</p>
<p id="p-0208" num="0207">The controller <b>30</b>A registers the primary VVOL as a primary JNLG (S<b>184</b>). This processing is performed by the controller <b>30</b>A associating the VOL identified by the VOL #<b>92</b>A of the primary JNLG management table <b>342</b>A with any of the JNLGs identified by the primary JNLG<b>91</b>A. By this processing, each of the VVOLs registered as VVOLs in the management table <b>311</b>A in <figref idref="DRAWINGS">FIG. 8A</figref> is supposed to belong to any of the JNLGs.</p>
<p id="p-0209" num="0208">The controller <b>30</b>A creates a pair of JNLGs (S<b>185</b>). This processing is performed by the controller <b>30</b>A associating the JNLG identified by the primary JNLG #<b>101</b> in the JNLG pair management table <b>343</b>A with any of the JNLGs identified by the secondary JNLG #<b>102</b>.</p>
<p id="p-0210" num="0209">By this processing, a pair of a primary DVOL <b>21</b>A and a secondary DVOL <b>21</b>B and a pair of a primary JVOL <b>22</b>A and a secondary JVOL <b>22</b>B are created (refer to <figref idref="DRAWINGS">FIG. 11</figref>).</p>
<p id="p-0211" num="0210">Subsequently, the controller <b>30</b>A accepts an I/O command from the host <b>10</b>, and performs the read or write processing for the primary DVOL in accordance with the I/O command (S<b>186</b>). Although the same pool is assigned to the primary DVOL <b>21</b>A and the primary JVOL <b>22</b>A at this step, different pools may also be assigned to both VOLs.</p>
<p id="p-0212" num="0211">It should be noted that the controller <b>30</b>B in the secondary storage apparatus <b>20</b>B can also perform practically the same processing (the processing shown in <figref idref="DRAWINGS">FIG. 18</figref>) as the controller <b>30</b>A.</p>
<p id="p-0213" num="0212"><figref idref="DRAWINGS">FIG. 19</figref> shows an example of the flow of the processing for copying a JNL from a primary JVOL <b>22</b>A to a secondary JVOL <b>22</b>B. The JNLs are transferred in units of JNLs in this processing.</p>
<p id="p-0214" num="0213">The controller <b>30</b>B refers to the primary JNL status management table <b>347</b>A and checks whether a primary virtual page <b>221</b>A which is set to &#x201c;readable&#x201d; exists or not, starting with the head page (in ascending order of primary virtual page #<b>141</b>A) (S<b>211</b>).</p>
<p id="p-0215" num="0214">If no primary virtual page which is set to &#x201c;readable&#x201d; exists (S<b>211</b>: No), the controller <b>30</b>B checks the next primary virtual page <b>221</b>A (S<b>219</b>).</p>
<p id="p-0216" num="0215">If a primary virtual page <b>221</b>A which is set to &#x201c;readable&#x201d; exists (S<b>211</b>: Yes), the controller <b>30</b>B sets the status of the secondary virtual page <b>221</b>B as the copy destination to &#x201c;copying&#x201d; (S<b>212</b>). By this processing, it becomes possible to copy the JNLs from the primary virtual page <b>221</b>A to the secondary virtual page <b>221</b>B which is set to the status &#x201c;copying&#x201d;.</p>
<p id="p-0217" num="0216">The controller <b>30</b>B acquires the information indicating the primary virtual page bitmap (refer to <figref idref="DRAWINGS">FIG. 7A</figref>) of the primary virtual page as the copy target from the primary storage apparatus <b>20</b>A (S<b>213</b>).</p>
<p id="p-0218" num="0217">Next, the controller <b>30</b>B transmits a read command for reading a JNL which is in the primary virtual page <b>221</b>A in the status &#x201c;readable&#x201d; checked at S<b>211</b> and whose bit is &#x201c;1&#x201d; (ON) to the controller <b>30</b>A (S<b>214</b>).</p>
<p id="p-0219" num="0218">The controller <b>30</b>B updates the JNL starting address <b>145</b>B, the JNL ending address <b>146</b>B, and the SEQ #<b>147</b>B of each of the JNLs in the secondary virtual page status management table <b>347</b>B (S<b>215</b>).</p>
<p id="p-0220" num="0219">The controller <b>30</b>B updates the bit in the primary virtual page bitmap <b>70</b>A (refer to <figref idref="DRAWINGS">FIG. 7A</figref>) corresponding to the updated JNL to &#x201c;0&#x201d; (OFF) (S<b>216</b>). The JNL which is set to &#x201c;0&#x201d; indicates that the JNL is copied to the secondary JVOL <b>22</b>B. The controller <b>30</b>B performs this processing for all the JNLs in the virtual page <b>221</b>A as the copy target.</p>
<p id="p-0221" num="0220">The controller <b>30</b>B refers to the information indicating the primary virtual page bitmap <b>70</b>A and checks whether all the JNLs in the primary virtual page as the copy target are all set to &#x201c;0&#x201d; or not (S<b>217</b>). By this processing, the controller <b>30</b>B can determine whether the primary virtual page is completely copied to the secondary JVOL.</p>
<p id="p-0222" num="0221">If the entire primary virtual page bitmap <b>70</b>A is set to &#x201c;0&#x201d; (S<b>217</b>: Yes), the controller <b>30</b>B sets the status related to the secondary virtual page <b>221</b>B as the copy destination to &#x201c;restorable&#x201d; (S<b>218</b>). This processing is performed by the controller <b>30</b>B updating the status <b>142</b>B of the secondary virtual page status management table <b>347</b>B from &#x201c;copying&#x201d; to &#x201c;restorable&#x201d;.</p>
<p id="p-0223" num="0222">The controller <b>30</b>B refers to the next primary virtual page <b>221</b>A (S<b>219</b>). Subsequently, it is checked by the controller <b>30</b>A at S<b>221</b> whether the status of the next primary virtual page <b>221</b>A is &#x201c;readable&#x201d; or not.</p>
<p id="p-0224" num="0223">Meanwhile, if the entire primary virtual page bitmap <b>70</b>A is not set to &#x201c;0&#x201d; (S<b>217</b>: No), the controller <b>30</b>B performs the processing at S<b>214</b> and subsequent steps until the entire primary virtual page bitmap becomes &#x201c;0&#x201d; (until all the JNLs are copied).</p>
<p id="p-0225" num="0224">By the above-mentioned processing, the JNLs are copied from the primary JVOL <b>22</b>A to the secondary JVOL <b>22</b>B.</p>
<p id="p-0226" num="0225"><figref idref="DRAWINGS">FIG. 20</figref> shows an example of the flow of the processing for restoring data to the secondary DVOL <b>21</b>B.</p>
<p id="p-0227" num="0226">The controller <b>30</b>B refers to the secondary virtual page status management table <b>347</b>B and checks whether the referred page is a secondary virtual page <b>221</b>B in the status &#x201c;restorable&#x201d; or not (S<b>231</b>).</p>
<p id="p-0228" num="0227">If the page is not a secondary virtual page in the status &#x201c;restorable&#x201d; (S<b>231</b>: No), the controller <b>30</b>B checks whether the next secondary virtual page <b>221</b>B is a &#x201c;restorable&#x201d; page or not (S<b>231</b>).</p>
<p id="p-0229" num="0228">If [the page is] a &#x201c;restorable&#x201d; secondary virtual page <b>221</b>B (S<b>231</b>: Yes), the controller <b>30</b>B performs the processing for writing the data in the JNLs in this secondary virtual page <b>221</b>B to the secondary DVOL <b>21</b>B (S<b>232</b>). This processing may be performed in units of virtual pages and may also be performed in units of JNLs.</p>
<p id="p-0230" num="0229">If all the JNLs in this secondary virtual page have been restored, the controller <b>30</b>B sets the status of this secondary virtual page to &#x201c;copied&#x201d; (S<b>233</b>). This processing is performed by the controller <b>30</b>B setting the status <b>142</b>B of the secondary virtual page management table <b>347</b>B to &#x201c;copied&#x201d;.</p>
<p id="p-0231" num="0230">The controller <b>30</b>B transmits [a notification] that the status <b>142</b>B of this secondary virtual page <b>221</b>B is set to &#x201c;copied&#x201d; to the controller <b>30</b>A in the primary storage apparatus (S<b>234</b>).</p>
<p id="p-0232" num="0231"><figref idref="DRAWINGS">FIG. 21</figref> shows a flow of the processing for performing automatic definition of a JNLG.</p>
<p id="p-0233" num="0232">The SVP <b>50</b> checks whether the mode which defines the JNLG is set to &#x201c;ON&#x201d; by the user or not on the maintenance screen (e.g. a GUI (Graphical User Interface) screen) displayed by the SVP <b>50</b> (S<b>241</b>).</p>
<p id="p-0234" num="0233">If the mode is not set to &#x201c;ON&#x201d; (S<b>241</b>: No), a primary JNLG and a secondary JNLG are paired by the SVP <b>50</b> in accordance with the normal processing (S<b>247</b>).</p>
<p id="p-0235" num="0234">If the mode is set to &#x201c;ON&#x201d; (S<b>241</b>: Yes), the SVP <b>50</b> receives, for example, the input of a URL (Uniform Resource Locator) from the user via the GUI screen, and creates a pair of a primary JNLG and a secondary JNLG (S<b>242</b>).</p>
<p id="p-0236" num="0235">The controller <b>30</b>A refers to the primary VOL management table <b>341</b>A in accordance with the instruction from the SVP <b>50</b> and includes the VOL in the status &#x201c;unused&#x201d; in the primary pool (S<b>243</b>).</p>
<p id="p-0237" num="0236">The controller <b>30</b>A creates a primary VVOL in accordance with the instruction from the SVP <b>50</b> (S<b>244</b>).</p>
<p id="p-0238" num="0237">The controller <b>30</b>A associates the primary pool with the created primary VVOL (S<b>245</b>). This is performed by updating the primary VVOL management table <b>345</b>A (the primary VVOL #<b>121</b>A, the Pool #<b>122</b>A, and the capacity <b>123</b>A).</p>
<p id="p-0239" num="0238">The controller <b>30</b>A includes the primary VVOL in the primary JNLG (S<b>246</b>). This processing is performed by the controller <b>30</b>A updating the primary JNLG management table <b>342</b>A (the primary JNLG #<b>91</b>A, the VOL #<b>92</b>A, and the VOL attribute <b>93</b>A).</p>
<p id="p-0240" num="0239">The pair of the primary JNLG and the secondary JNLG is created by the above-mentioned processing, and consequently, a pool is assigned to the VVOL in the primary JNLG and the VVOL in the secondary JNLG, and the JNLGs are defined.</p>
<p id="p-0241" num="0240">It should be noted that the controller <b>30</b>B can perform practically the same processing (the processing shown in <figref idref="DRAWINGS">FIG. 21</figref>) as the controller <b>30</b>A.</p>
<p id="p-0242" num="0241"><figref idref="DRAWINGS">FIG. 22</figref> shows an example of the details of S<b>243</b> in <figref idref="DRAWINGS">FIG. 21</figref>.</p>
<p id="p-0243" num="0242">The controller <b>30</b>A (<b>30</b>B) refers to the VOL management table <b>341</b>A (<b>341</b>B) and checks whether the VOL is in the status &#x201c;unused&#x201d; or not (S<b>251</b>).</p>
<p id="p-0244" num="0243">If the VOL is not in the status &#x201c;unused&#x201d; (S<b>251</b>: No), the controller <b>30</b>A (<b>30</b>B) checks the next VOL (S<b>254</b>).</p>
<p id="p-0245" num="0244">If the VOL is in the status &#x201c;unused&#x201d; (S<b>251</b>: Yes), the controller <b>30</b>A (<b>30</b>B) checks the emulation type of the VOL (S<b>252</b>).</p>
<p id="p-0246" num="0245">If this VOL is not the same in the emulation type as any of the VOLs configuring the pool (S<b>252</b>: No), the controller <b>30</b>A (<b>30</b>B) checks the next VOL (S<b>254</b>).</p>
<p id="p-0247" num="0246">If this VOL is the same in the emulation type as a VOL configuring the pool (S<b>252</b>: Yes), the controller <b>30</b>A (<b>30</b>B) adds the VOL to the pool (S<b>253</b>).</p>
<p id="p-0248" num="0247"><figref idref="DRAWINGS">FIG. 23</figref> shows an example of the details of the processing at S<b>246</b> in <figref idref="DRAWINGS">FIG. 21</figref>.</p>
<p id="p-0249" num="0248">The controller <b>30</b>A checks whether this primary JNLG is unassigned or not, starting with the JNLG #<b>0</b> (S<b>261</b>). This processing is performed by the controller <b>30</b>A checking whether the VOL #<b>92</b>A is associated with the primary JNLG #<b>91</b>A in the primary JNLG management table <b>342</b>A or not.</p>
<p id="p-0250" num="0249">If the primary JNLG is not unassigned (S<b>261</b>: No), the controller <b>30</b>A checks whether the next primary JNLG (the JNGL # which can be acquired by adding 1 to the current JNLG #) is unassigned or not (S<b>263</b>).</p>
<p id="p-0251" num="0250">If this primary JNLG is unassigned (S<b>261</b>: Yes), the controller <b>30</b>A registers the primary VVOL in this primary JNLG (S<b>262</b>). This processing is performed by the controller <b>30</b>A updating the primary JNLG management table <b>342</b>A.</p>
<p id="p-0252" num="0251">Next, the controller <b>30</b>B checks whether this secondary JNLG is unassigned or not, starting with the JNLG #<b>0</b> (S<b>264</b>). If this secondary JNLG is not unassigned (S<b>264</b>: No), the controller <b>30</b>B checks whether the next secondary JNLG is unassigned or not (S<b>266</b>). This processing is performed by the controller <b>30</b>B checking whether the VOL #<b>92</b>AB is associated with the primary JNLG #<b>91</b>B in the primary JNLG management table <b>342</b>B or not.</p>
<p id="p-0253" num="0252">If the secondary JNLG is unassigned (S<b>264</b>: Yes), the controller <b>303</b> registers the secondary VVOL in this secondary JNLG (S<b>265</b>). This processing is performed by the controller <b>30</b>B updating the secondary JNLG management table <b>324</b>B.</p>
<p id="p-0254" num="0253">By the above-mentioned processing, the VVOL (DVOL, JVOL) to which the actual page is assigned from the pool is supposed to belong to any of the JNLGs.</p>
<p id="p-0255" num="0254"><figref idref="DRAWINGS">FIG. 24</figref> shows a flow of the processing in case where the usage rate of the JVOL exceeds a threshold.</p>
<p id="p-0256" num="0255">Since this processing is practically the same in the primary storage apparatus <b>20</b>A and in the secondary storage apparatus <b>20</b>B, only the processing of the primary storage apparatus <b>20</b>A is explained. Furthermore, the JNLG usage rates in the explanation below are a first threshold and a second threshold which is larger than the first threshold, and the first threshold is 90% and the second threshold is 80%, but these [thresholds] are not limited to this example. Furthermore, it may also be permitted that only one threshold exists instead of separate thresholds such as the first threshold and the second threshold.</p>
<p id="p-0257" num="0256">The controller <b>30</b>A checks whether the JNLG usage rate is 80% or larger or not (S<b>271</b>).</p>
<p id="p-0258" num="0257">If the JNLG usage rate is less than 80% (S<b>271</b>: No), the controller <b>30</b>A terminates the processing.</p>
<p id="p-0259" num="0258">Meanwhile, if the JNLG usage rate is 80% or larger (S<b>271</b>: Yes), the controller <b>30</b>A checks whether an actual page which can be newly assigned (an actual page which can be added) to a VVOL in the JNLG exists or not (S<b>272</b>). This processing is performed by the controller <b>30</b>A referring to the primary JNL status management table <b>347</b>A and checking an actual page whose status <b>142</b>A is &#x201c;unassigned&#x201d; exists or not.</p>
<p id="p-0260" num="0259">If an actual page which can be added exists (S<b>272</b>: Yes), the controller <b>30</b>A assigns the actual page to the JNLG, and updates the status <b>142</b>A of the virtual page which is the assignment destination of the actual page to &#x201c;not copied&#x201d; (S<b>272</b>).</p>
<p id="p-0261" num="0260">If no actual page which can be added exists (S<b>272</b>: No), the controller <b>30</b>A checks whether a VOL which can be added exists or not (S<b>274</b>). If a VOL which can be added exists (S<b>274</b>: Yes), the controller <b>30</b>A adds the VOL to the JNLG by the processing in <figref idref="DRAWINGS">FIG. 22</figref> (S<b>275</b>).</p>
<p id="p-0262" num="0261">If no VOL which can be added exists (S<b>274</b>: No), the controller <b>30</b>A checks whether the JNLG usage rate is 90% or larger or not (S<b>276</b>).</p>
<p id="p-0263" num="0262">If the JNLG usage rate is not 90% or larger (S<b>276</b>: No), the controller <b>30</b>A terminates the processing.</p>
<p id="p-0264" num="0263">If the JNLG usage rate is 90% or larger (S<b>276</b>: Yes), the controller <b>30</b>A performs S<b>272</b> again. It should be noted that the controller <b>30</b>A may also perform the error processing (e.g. the processing for notifying the error to the SVP <b>50</b>) and terminate [the processing] instead of performing S<b>272</b> again.</p>
<p id="p-0265" num="0264"><figref idref="DRAWINGS">FIG. 25</figref> shows an example of the flow of the processing for writing JNLs to the primary JVOL <b>22</b>A.</p>
<p id="p-0266" num="0265">Since the flow of the processing for writing JNLs to the secondary JVOL <b>22</b>B is practically the same as the flow of the processing for writing JNLs to the primary JVOL <b>22</b>A, the explanation is omitted.</p>
<p id="p-0267" num="0266">The controller <b>30</b>A checks whether an actual page is already assigned to the write destination virtual page of a JNL or not (S<b>281</b>).</p>
<p id="p-0268" num="0267">If an actual page is already assigned (S<b>281</b>: Yes), the controller <b>30</b>A checks whether a free area which is equal to or larger than the size of a JNL exists in the actual page or not (S<b>282</b>).</p>
<p id="p-0269" num="0268">If a free area which is equal to or larger than the size of a JNL exists in the actual page (S<b>282</b>: Yes), the controller <b>30</b>A adds a JNL to the actual page (S<b>291</b>).</p>
<p id="p-0270" num="0269">If a free area which is equal to or larger than the size of the JNL in the actual page (S<b>282</b>: Yes), the controller <b>30</b>A checks whether to newly assign an actual page to the JVOL or not (S<b>283</b>). The result of this check is any of the items below, for example.</p>
<p id="h-0021" num="0000">(A) In case the maximum number of actual pages assigned to the JVOL is a fixed value.</p>
<p id="h-0022" num="0000">(a1) No is acquired at S<b>283</b> if the specified number of actual pages are already assigned to the JVOL.</p>
<p id="h-0023" num="0000">(a2) Yes is acquired at S<b>283</b> if the specified number of actual pages are not assigned to the JVOL yet.</p>
<p id="h-0024" num="0000">(B) In case where the maximum number of actual pages assigned to the JVOL is a variable value (however, the maximum number is smaller than the number of virtual pages configuring the JVOL).</p>
<p id="h-0025" num="0000">(b1) No is acquired at S<b>283</b> if the number of virtual pages (or JNLs) whose status is set to &#x201c;copied&#x201d; reaches a specified number (e.g. 1).</p>
<p id="h-0026" num="0000">(b2) Yes is acquired at S<b>283</b> if the number of virtual pages (or JNLs) whose status is set to &#x201c;copied&#x201d; does not reach a specified number (e.g. 1).</p>
<p id="p-0271" num="0270">In case of the above-mentioned (B), the total number (the maximum number) of actual pages assigned to the JVOL varies depending on at what point of time the number of virtual pages (or JNLs) whose status is set to &#x201c;copied&#x201d; reaches the specified number (e.g. 1).</p>
<p id="p-0272" num="0271">In case of Yes at S<b>283</b>, the controller <b>30</b>A assigns the actual pages to the write destination virtual page and writes the JNLs to the assigned actual pages (S<b>293</b>).</p>
<p id="p-0273" num="0272">In case of No at S<b>283</b>, the controller <b>30</b>A performs wraparound, that is, overwrites the area of the oldest copied JNL in the one or more actual pages assigned to the JVOL by a new JNL (S<b>292</b>).</p>
<p id="p-0274" num="0273">Meanwhile, if no actual page is assigned (S<b>281</b>: No), the controller <b>30</b>A performs the same type of check as S<b>283</b> (S<b>287</b>).</p>
<p id="p-0275" num="0274">In case of Yes at S<b>287</b>, the controller <b>30</b>A performs S<b>293</b>.</p>
<p id="p-0276" num="0275">In case of No at S<b>283</b>, the controller <b>30</b>A performs S<b>292</b>.</p>
<p id="p-0277" num="0276"><figref idref="DRAWINGS">FIG. 26</figref> shows a flow of the processing related to switching the unit of transferring JNLs.</p>
<p id="p-0278" num="0277">The controller <b>30</b>B (<b>30</b>A) basically transfers JNL in units of virtual pages (S<b>301</b>). If all the JNLs in the primary virtual page <b>221</b>A are copied to the secondary DVOL <b>21</b>B, the controller <b>30</b>B (<b>30</b>A) updates the status of the virtual page to &#x201c;copied&#x201d;. Furthermore, each time a JNL in the primary virtual page <b>221</b>A is copied to the secondary DVOL <b>21</b>B, the controller <b>30</b>A (<b>30</b>B) may update the status of the JNL to &#x201c;copied&#x201d;. Furthermore, in the mode (period) in which the JNLs are transferred in units of virtual pages, the controller <b>30</b>A (<b>30</b>B) may not have to update the status of each of the JNLs.</p>
<p id="p-0279" num="0278">The controller <b>30</b>B (<b>30</b>A) checks regularly or irregularly whether the communication load reaches a specified value or not, for example, whether the JNL transfer in units of virtual pages <b>221</b>A is delayed or not (S<b>302</b>). At this point, that &#x201c;the transfer is delayed&#x201d; indicates that, for example, a specified number or more of virtual pages (or JNLs) whose status is &#x201c;copying&#x201d; exist in the storage apparatus <b>20</b>A (<b>20</b>B).</p>
<p id="p-0280" num="0279">If the communication load is smaller than the specified value (S<b>302</b>: No), the controller <b>30</b>B (<b>30</b>A) continues the mode of transferring JNLs in units of virtual pages (S<b>301</b>).</p>
<p id="p-0281" num="0280">Meanwhile, if the communication load is equal to or larger than the specified value (S<b>302</b>: Yes), the controller <b>30</b>B (<b>30</b>A) switches the mode from transferring JNLs in units of virtual pages to transferring JNLs in units of JNLs (S<b>303</b>). For example, the controller <b>30</b>B may transmit a read command for reading JNLs in units of virtual pages in the controller <b>30</b>B to the primary storage apparatus <b>20</b>A, and may transmit a read command for reading JNLs in units of JNLs in the mode of transferring JNLs in units of JNLs to the primary storage apparatus <b>20</b>A. The controller <b>30</b>A may transmit the JNLs in units of virtual pages to the secondary storage apparatus <b>20</b>B, and may transmit the JNLs in units of JNLs to the secondary storage apparatus <b>20</b>A in the mode of transferring the JNLs in units of JNLs</p>
<p id="p-0282" num="0281">It should be noted that the controller <b>30</b>B (<b>30</b>A) may also update the status of each of the JNLs since such switching is performed. Furthermore, if the transfer mode is switched to the mode of transferring JNLs in units of JNLs, the controller <b>30</b>B (<b>30</b>A) may also terminate the update of the status of each of the virtual pages.</p>
<p id="p-0283" num="0282">The controller <b>30</b>B (<b>30</b>A) checks regularly or irregularly whether the communication load being equal to or larger than the specified value is solved or not, for example, whether the delay in transfer is solved or not (S<b>304</b>). Specifically speaking, for example, the controller <b>30</b>B (<b>30</b>A) checks whether the virtual pages (or the JNLs) whose status is &#x201c;copying&#x201d; are fewer than a specified number or not.</p>
<p id="p-0284" num="0283">If the communication load being equal to or larger than the specified value is not solved (S<b>304</b>: No), the JNL transfer in units of JNLs is continued between the controllers <b>30</b>B (<b>30</b>A) (S<b>303</b>).</p>
<p id="p-0285" num="0284">If the communication load being equal to or larger than the specified value is solved (S<b>304</b>: Yes), the controller <b>30</b>B (<b>30</b>A) switches the transfer mode from the mode of transferring JNLs in units of JNLs to the mode of transferring JNLs in units of virtual pages (S<b>301</b>).</p>
<p id="p-0286" num="0285">If the communication load is equal to or larger than the specified value, the status &#x201c;copied&#x201d; can be expected to be acquired sooner for the virtual page or the JNL by switching the transfer mode as explained above. Therefore, the new assignment of actual pages to the JVOL can be stopped sooner, and eventually the consumption of actual pages can be expected to be inhibited.</p>
<p id="p-0287" num="0286">Although an embodiment of the present invention is explained as above, the present invention is not limited to the above.</p>
<p id="p-0288" num="0287">For example, the DVOL <b>21</b> may also be an actual VOL which is a VOL based on a RAID group instead of a VVOL, and may also be a virtual VOL (a virtual VOL complying with the storage virtualization technology) based on an external storage apparatus.</p>
<p id="p-0289" num="0288">For example, for at least one of the virtual page or the JNL, the first copied [status] and the second copied [status] may also exist as the status &#x201c;copied&#x201d;. The first copied is the status in case a JNL is stored in the secondary JVOL, and the second copied is the status in case the JNL is reflected in the secondary DVOL. If the new assignment of actual pages to the JVOL is stopped when a specified number of &#x201c;first copied&#x201d; virtual pages or JNLs are acquired, the consumption of actual pages can be expected to be further inhibited. Meanwhile, if the new assignment of actual pages to the JVOL is stopped when a specified number of &#x201c;second copied&#x201d; virtual pages or JNLs are acquired, the consumption of actual pages can be expected to be inhibited while retaining the JNLs as the guarantee for a longer period.</p>
<heading id="h-0027" level="1">REFERENCE SIGN LIST</heading>
<p id="p-0290" num="0000">
<ul id="ul0002" list-style="none">
    <li id="ul0002-0001" num="0289"><b>10</b>: Host computer, <b>20</b>A: Primary storage apparatus, <b>20</b>B: Secondary storage apparatus</li>
</ul>
</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A storage control apparatus, which is a first storage control apparatus, of one of a copy-source storage control apparatus and a copy-destination storage control apparatus in a remote copy system for carrying out asynchronous remote copying in which a journal including user data, which is data written to a primary logical volume, is sent from the copy-source storage control apparatus to the copy-destination storage control apparatus, and the journal is reflected in a secondary logical volume by writing the user data included in the journal to the secondary logical volume,
<claim-text>the storage control apparatus comprising:</claim-text>
<claim-text>a first interface coupled to a storage device;</claim-text>
<claim-text>a second interface coupled to a second storage control apparatus, which is the other one of the copy-source apparatus and the copy-destination storage control apparatus; and</claim-text>
<claim-text>a controller coupled to the first and second interfaces, wherein</claim-text>
<claim-text>the controller configures a virtual volume, which is a virtual logical volume complying with thin provisioning, is employed as a journal volume into which one or more journals are written, and the virtual volume is formed of multiple virtual areas, and, a size of each of the journals is smaller than a size of each of the virtual areas,</claim-text>
<claim-text>the controller adds a journal to the journal volume,</claim-text>
<claim-text>the controller, when writing the journal to the journal volume, adds the journal to an actual area, which has been assigned to one of the virtual areas from a pool formed of multiple actual areas based on the storage device, wherein the number of actual areas assigned to a journal volume is N, and N is an integer of equal to or larger than 1 and is smaller than the number of actual areas to be assigned to the entire journal volume, and</claim-text>
<claim-text>the controller, in a case where a new journal cannot be added to the N actual areas assigned to the journal volume and where there is an old journal, which has been copied to the assigned N actual areas, performs a wraparound for overwriting the old journal with the new journal, and</claim-text>
<claim-text>the controller newly assigns one of the actual areas to the journal volume, and adds a journal to the newly assigned actual area,</claim-text>
<claim-text>the controller is further configured to:</claim-text>
<claim-text>(A) in a case where at least one journal has been transferred from one of the virtual areas, make a status of the one of the virtual areas a first status, and</claim-text>
<claim-text>(B) in a case where all journals of one of the virtual areas have either been stored by the second storage control apparatus or are reflected in the secondary logical volume, makes the status of the one of the virtual areas a second status, and</claim-text>
<claim-text>the controller, subsequent to a first point of time at which the status of X virtual areas have transitioned to the second status, stops newly assigning an actual area to the journal volume, where X is an integer of equal to or larger than 1 and N is the number of actual areas assigned to the journal volume at the first point of time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. A storage control apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein N is 1.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. A storage control apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the controller, in a case where a write-destination actual area has a free area meanwhile a size of the free area is smaller than the size of a single journal, writes the journal to an actual area other than the free area.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. A storage control apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein X is 1.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. A storage control apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the controller, for one of the journals in the journal volume:
<claim-text>(a) makes, in a case where the one of the journals is not reflected in the secondary logical volume, the status of the one of the journals a first status; and</claim-text>
<claim-text>(b) makes, in a case where the one of the journals has either been stored by the copy-destination storage control apparatus or is reflected in the secondary logical volume, makes the status of the one of the journals a second status,</claim-text>
<claim-text>the controller, subsequent to a point of time at which the number of second status journals has become J, stops newly assigning an actual area to the journal volume where J is an integer of equal to or larger than 1 and the N is the number of assigned actual areas in the journal volume at the point of time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A storage control apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>the controller:</claim-text>
<claim-text>(A) makes, in a case where at least one journal of one of the virtual areas is not reflected in the secondary logical volume, the status of the one of the virtual areas a first status; and</claim-text>
<claim-text>(B) makes, in a case where all journals of one of the virtual areas have either been stored by the copy-destination storage control apparatus or are reflected in the secondary logical volume, the status of the one of the virtual areas a second status,</claim-text>
<claim-text>the controller, subsequent to a point of time at which the status of X units of virtual areas has transitioned to the second status, stops newly assigning an actual area to the journal volume where X is an integer of equal to or larger than 1 and the N is the number of actual areas assigned to the journal volume at the point of time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A storage control apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the controller transfers journals in units of virtual areas, and in a case where a load of communication with the second storage control apparatus has become equal to or larger than a prescribed load, transfers journals in units of journals rather than in units of virtual areas.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A storage control apparatus according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the controller, subsequent to starting to transfer journals in units of journals, for each untransferred journal in the journal volume:
<claim-text>(a) makes, in a case where one of the journals has been transferred to the second storage control apparatus, the status of the one of the journals a first status; and</claim-text>
<claim-text>(b) makes, in a case where one of the journals has either been stored by the second storage control apparatus or is reflected in the secondary logical volume, the status of the one of the journals a second status,</claim-text>
<claim-text>the controller, subsequent to a second point of time at which a number of second status journals has become J, stops assigning an actual area to the journal volume, where J is an integer of equal to or larger than 1 and the N is the number of assigned actual areas in the journal volume at the second point of time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A storage control apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>the controller comprises a cache memory, and the controller secures a cache area from the cache memory, and temporarily stores data to be input/output to/from the logical volume in this secured cache area, and</claim-text>
<claim-text>the controller keeps a cache area, which has been secured with respect to one or more actual areas of the N units of actual areas, secured.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A storage control apparatus according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the cache area is kept secured with respect to all of the N units of actual areas.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A storage control apparatus according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the cache area is secured beforehand with respect to one or more actual areas of the N units of actual areas.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A storage control apparatus according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the N units of actual areas are assigned to the journal volume beforehand.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A storage control method for a first storage control apparatus, which is one of a copy-source storage control apparatus and a copy-destination storage control apparatus in a remote copy system for carrying out asynchronous remote copying in which a journal including user data, which is data written to a primary logical volume, is sent from the copy-source storage control apparatus to the copy-destination storage control apparatus, and the user data included in the journal is written to a secondary logical volume, the storage control method including:
<claim-text>configuring a virtual volume, which is a virtual logical volume complying with thin provisioning, employed as a journal volume in which one or more journals are written, and the virtual volume is formed of multiple virtual areas, and a size of each of the journals is smaller than a size of each of the virtual areas,</claim-text>
<claim-text>when adding a journal to the journal volume, adding, by the first storage control apparatus, the journal to an actual area, which has been assigned to one of the virtual areas from a pool formed of multiple actual areas based on a storage device, where the number of actual areas assigned to a journal volume is N, and N is an integer equal to or larger than 1 and is smaller than the number of actual areas to be assigned to the entire journal volume, and</claim-text>
<claim-text>in a case where a new journal cannot be added to the N actual areas assigned to the journal volume, performing a wraparound for overwriting an old journal in the assigned actual areas with the new journal, and</claim-text>
<claim-text>newly assigning an actual area to the journal volume, and adding a journal to the newly assigned actual area,</claim-text>
<claim-text>the storage control method further comprising:</claim-text>
<claim-text>(A) in a case where at least one journal has been transferred from one of the virtual areas, making a status of the one of the virtual areas a first status, and</claim-text>
<claim-text>(B) in a case where all journals of one of the virtual areas have either been stored by the second storage control apparatus or are reflected in the secondary logical volume, making the status of the one of the virtual areas a second status, and</claim-text>
<claim-text>subsequent to a first point of time at which the status of X virtual areas has transitioned to the second status, stopping newly assigning an actual area to the journal volume, where X is an integer of equal to or larger than 1 and N is the number of actual areas assigned to the journal volume at the first point of time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. A remote copy system, which carries out asynchronous remote copying in which a journal including user data, which is data written to a primary logical volume, is sent from a copy-source storage control apparatus to a copy-destination storage control apparatus, and the user data included in the journal is written to a secondary logical volume, comprising:
<claim-text>a virtual volume, which is a virtual logical volume complying with thin provisioning, employed as a journal volume in which one or more journals are written, and the virtual volume is formed of multiple virtual areas, and a size of each of the journals is smaller than a size of each of the virtual areas,</claim-text>
<claim-text>a first storage control apparatus, which is one of a copy-source storage control apparatus and a copy-destination storage control apparatus, adds a journal to the journal volume, and when writing the journal to the journal volume, writes the journal to an actual area, which has been assigned to one of the virtual areas from a pool formed of multiple actual areas based on a storage device, where a number of actual areas assigned to the journal volume is N, and N is an integer of equal to or larger than 1 and is smaller than the number of actual areas to be assigned to the entire journal volume, and</claim-text>
<claim-text>the first storage control apparatus, in a case where a new journal cannot be added to the N actual areas assigned to the journal volume, performs a wraparound for overwriting an old journal in the assigned N actual areas with the new journal, and</claim-text>
<claim-text>the first storage control apparatus newly assigns an actual area to the journal volume, and adds a journal to the newly assigned actual area,</claim-text>
<claim-text>the first storage control apparatus is further configured to:</claim-text>
<claim-text>(A) in a case where at least one journal has been transferred from one of the virtual areas, make a status of the one of the virtual areas a first status, and</claim-text>
<claim-text>(B) in a case where all journals of one of the virtual areas have either been stored by the second storage control apparatus or are reflected in the secondary logical volume, make the status of the one of the virtual areas a second status, and</claim-text>
<claim-text>the controller, subsequent to a first point of time at which the status of X virtual areas has transitioned to the second status, stops newly assigning an actual area to the journal volume where X is an integer of equal to or larger than 1 and N is the number of actual areas assigned to the journal volume at the first point of time. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
