<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627294-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627294</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10713338</doc-number>
<date>20031114</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>3173</us-term-extension>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>9</main-group>
<subgroup>44</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>717130</main-classification>
<further-classification>717127</further-classification>
<further-classification>717131</further-classification>
</classification-national>
<invention-title id="d2e55">Method and apparatus for synchronization in a multiplexed arbitrary-action tracing framework</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5677997</doc-number>
<kind>A</kind>
<name>Talatik</name>
<date>19971000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>706 45</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5758061</doc-number>
<kind>A</kind>
<name>Plum</name>
<date>19980500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 35</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6083281</doc-number>
<kind>A</kind>
<name>Diec et al.</name>
<date>20000700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717128</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6163793</doc-number>
<kind>A</kind>
<name>Gerber et al.</name>
<date>20001200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>718103</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6351844</doc-number>
<kind>B1</kind>
<name>Bala</name>
<date>20020200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717128</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6848046</doc-number>
<kind>B2</kind>
<name>Zimmer</name>
<date>20050100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713100</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6957421</doc-number>
<kind>B2</kind>
<name>Hundt et al.</name>
<date>20051000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717130</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>7039919</doc-number>
<kind>B1</kind>
<name>Hunt</name>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>719316</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>7058928</doc-number>
<kind>B2</kind>
<name>Wygodny et al.</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717128</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>7107579</doc-number>
<kind>B2</kind>
<name>Tsai et al.</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717127</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>7131115</doc-number>
<kind>B2</kind>
<name>Hundt et al.</name>
<date>20061000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717130</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>7178131</doc-number>
<kind>B2</kind>
<name>Mitchell et al.</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717124</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>7207035</doc-number>
<kind>B2</kind>
<name>Kobrosly et al.</name>
<date>20070400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717128</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2002/0010911</doc-number>
<kind>A1</kind>
<name>Cheng et al.</name>
<date>20020100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717  4</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2002/0104074</doc-number>
<kind>A1</kind>
<name>Hundt et al.</name>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717129</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2002/0198886</doc-number>
<kind>A1</kind>
<name>Ramakrishnan</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707100</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2002/0199172</doc-number>
<kind>A1</kind>
<name>Bunnell</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717128</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2003/0084375</doc-number>
<kind>A1</kind>
<name>Moore et al.</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 34</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2003/0212988</doc-number>
<kind>A1</kind>
<name>Tsai et al.</name>
<date>20031100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717130</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2004/0205720</doc-number>
<kind>A1</kind>
<name>Hundt</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717124</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2006/0242627</doc-number>
<kind>A1</kind>
<name>Wygodny et al.</name>
<date>20061000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717128</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>2008/0263044</doc-number>
<kind>A1</kind>
<name>Cantrill</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  8</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00023">
<othercit>Tamches, Ariel and Miller, Barton P. Fine-Grained Dynamic Instrumentation of Commodity Operating System Kernels. [Online] http://www.usenix.org/publications/library/proceedings/osdi99/full<sub>&#x2014;</sub>papers/tamches/tamches.pdf, Published Feb. 1999.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00024">
<othercit>Murayama, John. Performance Profiling Using TNF. [Online] http://developers.sun.com/solaris/articies/tnf.html, Jul. 2001.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00025">
<othercit>Lorch, Jacob R. and Smith, Alan J. The VTrace Tool: Building a System Tracer for Windows NT and Windows 2000. [Online] http://msdn.microsoft.com/msdnmag/issues/1000/VTrace/default.aspx, Oct. 2000.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00026">
<othercit>Chapter 10. The Generalized Trace Facility (GTF). [Online] http://publib.boulder.ibm.com/cgi-bin/bookmgr/BOOKS/IEA2V100/CCONTENTS, Jan. 2001.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00027">
<othercit>Mirgorodskii, Alex. The Path to Portable Kernel Instrumentation: The Kerninst API. http://www.dyninst.org/mtg2003/slides/KerninstAPI.pdf, Apr. 2003.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00028">
<othercit>Richard Moore, et al. IBM Dynamic Probes http://www-124.ibm.com/developerworks/opensource/linux/projects/dprobes/README, 2000.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00029">
<othercit>K. Yaghmour et al.; &#x201c;Measuring and Characterizing System Behavior Using Kernel-Level Event Logging&#x201d;; Proceeding of the 2000 USENEX Annual Technical Conference; Jun. 18-23, 2000, San Diego, California, USA.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>15</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>7</number-of-figures>
</figures>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Cantrill</last-name>
<first-name>Bryan M.</first-name>
<address>
<city>San Francisco</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Cantrill</last-name>
<first-name>Bryan M.</first-name>
<address>
<city>San Francisco</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Osha Liang LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Oracle America, Inc.</orgname>
<role>02</role>
<address>
<city>Redwood Shores</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Dam</last-name>
<first-name>Tuan Q.</first-name>
<department>2192</department>
</primary-examiner>
<assistant-examiner>
<last-name>Wei</last-name>
<first-name>Zheng</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method for processing a probe including triggering the probe in an instrumented program, querying a global array to determine an execution control block associated with the probe, and executing the execution control block to obtain data.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="146.22mm" wi="239.35mm" file="US08627294-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="272.54mm" wi="218.02mm" file="US08627294-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="257.47mm" wi="185.84mm" file="US08627294-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="239.27mm" wi="166.79mm" orientation="landscape" file="US08627294-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="252.22mm" wi="191.18mm" file="US08627294-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="259.93mm" wi="205.82mm" file="US08627294-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="251.63mm" wi="170.94mm" orientation="landscape" file="US08627294-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">Analyzing the dynamic behavior and performance of a complex software system is difficult. Typically, analysis of a software system is achieved by gathering data at each system call and post-processing the data. The following is a brief description of conventional tracing frameworks used to analyze software.</p>
<p id="p-0003" num="0002">The conventional tracing frameworks were typically composed of various independent software modules. The primary source of information accessed by the conventional tracing frameworks is the kernel. The conventional tracing frameworks typically include a trace facility, a trace module, a daemon, and an offline data analysis and processing component. The trace facility gathers information from various components of the kernel and forwards events to the trace module. The trace module subsequently logs the events in its buffer. Periodically, the trace daemon reads the events from the trace module buffer and commits the recorded events into a user-provided file.</p>
<p id="p-0004" num="0003">Some conventional tracing frameworks, in addition to the aforementioned functionality, included functionality to allow a single point within the source (e.g., a single point with the kernel) to be access by multiple consumers (i.e., multiple processes accessing the conventional tracing framework and requesting data for one or more points within the source). Accordingly, tracing frameworks that include this functionality allow multiple consumers to access the same point in the source.</p>
<p id="p-0005" num="0004">In the event that a given consumer terminates tracing at a given point within the source or altogether, the tracing framework frees the data structures associated with the consumer. Conventional tracing frameworks have implemented various mechanisms to ensure that when data structures associated with one consumer are freed by the tracing framework, that the action by the tracing framework does not impact the tracing being conduction by other consumers.</p>
<p id="p-0006" num="0005">Three typical mechanisms that have been implemented by conventional tracing frameworks to ensure that when data structures associated with one consumer are freed there is no impact on the other consumers: (1) allowing one consumer to trace at a time; (2) allowing multiple consumers to trace any point within the source, but disabling tracing for a brief of time for all consumers when a single consumer wishes to cease tracing, and (3) constraining the context in which probes may fire to not include the elements of the system required for synchronization.</p>
<heading id="h-0002" level="1">SUMMARY</heading>
<p id="p-0007" num="0006">In general, in one aspect, the invention relates to a method for processing a probe, comprising triggering the probe in an instrumented program, querying a global array to determine an execution control block associated with the probe, and executing the execution control block to obtain data.</p>
<p id="p-0008" num="0007">In general, in one aspect, the invention relates to a method for removing an execution control block associated with a consumer from a linked list executing in a system, wherein the linked list has a first pointer pointing to the execution control block and the execution control block has a next pointer, comprising updating the linked list such that the first pointer is updated to point to same location as the execution control block next pointer, issuing an empty cross-call and awaiting an acknowledgement from each processor in the system, and freeing memory associated with the execution control block when the acknowledgement from each processor has been received.</p>
<p id="p-0009" num="0008">In general, in one aspect, the invention relates to a system for tracing an instrumented program, comprising the instrumented program comprising a first probe wherein the first probe is identified using a first probe identifier, and a first execution control block associated with the first probe comprising a first action to be performed when the first probe is triggered in the instrumented program.</p>
<p id="p-0010" num="0009">Other aspects of the invention will be apparent from the following description and the appended claims.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 1</figref> shows a flow diagram detailing the collection of data in accordance with one embodiment of the invention.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 2</figref> shows a buffer layout in accordance with one embodiment of the invention.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 3</figref> shows an enabled probe identification (&#x201c;EPID&#x201d;)-Metadata table layout in accordance with one embodiment of the invention.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 4</figref> shows a detailed view of a tracing framework in accordance with one embodiment of the invention.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 5</figref> shows a flowchart in accordance with one embodiment of the invention.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 6</figref> shows a flowchart in accordance with one embodiment of the invention.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 7</figref> shows a flow diagram in accordance with one embodiment of the invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0018" num="0017">Specific embodiments of the invention will now be described in detail with reference to the accompanying figures. Like elements in the various figures are denoted by like reference numerals for consistency.</p>
<p id="p-0019" num="0018">In the following detailed description of embodiments of the invention, numerous specific details are set forth in order to provide a more thorough understanding of the invention. However, it will be apparent to one of ordinary skill in the art that the invention may be practiced without these specific details. In other instances, well-known features have not been described in detail to avoid obscuring the invention.</p>
<p id="p-0020" num="0019">The invention relates to a method and apparatus for multiplexing a probe using a tracing framework that supports one or more consumers. Further, the invention relates to method and apparatus for synchronizing a multiplexed probe.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 1</figref> shows a flow diagram detailing the collection of data in accordance with one embodiment of the invention. Specifically, <figref idref="DRAWINGS">FIG. 1</figref> provides an overview of the process for collecting data for the buffer (<b>116</b>). Initially, source code (<b>100</b>) is written/obtained/generated that defines a tracing function (i.e., a request to obtain certain data). More specifically, the tracing function defines which probes (<b>112</b>, <b>114</b>) to enable within the instrumented program (<b>115</b>), and what actions that the tracing framework (<b>106</b>) is to perform when the probes (<b>112</b>, <b>114</b>) are triggered (i.e., when a program thread executing the instrumented program (<b>115</b>) encounters a probe (<b>112</b>, <b>114</b>)). In one or more embodiments of the invention, a tracing function may define one or more actions that the tracing framework (<b>106</b>) is to perform when a probe (<b>112</b>, <b>114</b>) is encountered. Each action defined by the tracing function is identified by an EPID.</p>
<p id="p-0022" num="0021">The source code (<b>100</b>) is typically associated with a consumer (<b>101</b>). Note that a consumer (<b>101</b>) may define one or more tracing functions. The consumer is a virtual client that sends requests, in the form of tracing functions, to the tracing framework (<b>106</b>) to obtain information about the instrumented program (<b>115</b>). Further, the consumer (<b>101</b>) also retrieves the requested information, which is stored by the tracing framework (<b>106</b>) in the associated buffers (<b>116</b>). EPIDs may be defined on a per-consumer basis or on a per-system basis.</p>
<p id="p-0023" num="0022">If the EPIDs are defined on a per-consumer basis, the EPIDs are only required to uniquely identify an action with respect to other actions defined by the consumer (<b>101</b>). Accordingly, in this embodiment, the data obtained from the probes (<b>112</b>, <b>114</b>) is typically stored in a per-consumer buffer. If the tracing framework (<b>106</b>) is implemented on a multiprocessor system, then the data obtained from the probes (<b>112</b>, <b>114</b>) is typically stored in a per-consumer per-CPU buffer. Alternatively, if the EPIDs are defined on a per-system basis, the tracing framework (<b>106</b>) typically includes functionality to uniquely define each action for each consumer such that each action, regardless of the consumer (<b>101</b>) with which it is associated, may be uniquely identified within the system.</p>
<p id="p-0024" num="0023">In one embodiment of the invention, the EPID is an integer. Alternatively, the EPID may be represented using any alphanumeric string that is sufficient to identify the corresponding action on a per-consumer or a per-system basis.</p>
<p id="p-0025" num="0024">Returning to <figref idref="DRAWINGS">FIG. 1</figref>, the source code (<b>100</b>) is subsequently forwarded, via the consumer (<b>101</b>) to a compiler (not shown), where the source code (<b>100</b>) is compiled to generate executable object code (<b>102</b>). The object code (<b>102</b>) is then communicated to a tracing framework (<b>106</b>). The tracing framework (<b>106</b>) includes functionality to execute the object code (<b>102</b>). Specifically, the tracing framework (<b>106</b>) interprets the object code (<b>102</b>) and directs the probe providers (<b>110</b>) to activate certain probes (<b>112</b>, <b>114</b>) within the instrumented program (<b>115</b>). In addition, the tracing framework (<b>106</b>) may include functionality to associate each action, identified by an EPID, with a probe (<b>112</b>, <b>114</b>).</p>
<p id="p-0026" num="0025">In addition, the tracing framework (<b>106</b>) may include functionality to generate and populate an EPID-Metadata table (<b>117</b>) or a corresponding data structure that includes metadata defining the data layout of the data associated with a given EPID. The metadata information may be extracted from the source code (<b>100</b>), the object code (<b>102</b>), or obtained from a combination of data structures within the tracing framework (<b>106</b>). Further, the EPID-Metadata table (<b>117</b>) may be defined statically, or alternatively, the EPID-Metadata may be determine dynamically as required/requested by the tracing framework (<b>106</b>) or the consumer (<b>101</b>). Refer to <figref idref="DRAWINGS">FIG. 3</figref> below for additional details regarding the EPID-Metadata table (<b>117</b>).</p>
<p id="p-0027" num="0026">Continuing with the discussion of <figref idref="DRAWINGS">FIG. 1</figref>, the probes (<b>112</b>, <b>114</b>) gather the specified information from the instrumented program (<b>115</b>), as defined by the object code (<b>102</b>) derived from the actions defined within the source code (<b>100</b>), and forward the information (directly or indirectly) to a corresponding buffer (<b>116</b>). The buffer (<b>116</b>), or a related process analyzes the information and stores the information as a data set. An embodiment of the data set is described below with respect to <figref idref="DRAWINGS">FIG. 2</figref>. In one or more embodiments of the invention, the information gathered from the instrumented program includes the raw data as well as additional ancillary data that is used by the tracing framework to manage the data prior to storing it in a buffer.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 2</figref> shows a buffer layout in accordance with one embodiment of the invention. As mentioned above, the data obtained from the probes (<b>112</b>, <b>114</b>) is associated with an EPID and subsequently stored in the buffer (<b>116</b>). In one embodiment of the invention, the data and associated EPID are stored as a data set (<b>200</b>). The data set (<b>200</b>) includes an EPID (<b>202</b>) component followed by a data (<b>204</b>) component. In one or more embodiments of the invention, the data sets (<b>200</b>) are added to the buffer (<b>116</b>) at a free data pointer (<b>206</b>). Those skilled in the art will appreciate that the data (<b>204</b>) may be of any individual data type or an aggregate data type. Further, the data (<b>204</b>) may be individual pieces of data, or two or more pieces of data concatenated together. The exact composition of the data (<b>204</b>), as well as the layout of the data, is defined by the metadata associated with the EPID (<b>202</b>).</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 3</figref> shows an EPID-Metadata table layout in accordance with one embodiment of the invention. The EPID-Metadata table (<b>117</b>) includes a list of EPIDs (<b>300</b>) and associated metadata (<b>302</b>) defining the data layout of the data (<b>204</b>) associated with the EPID (<b>202</b>) in the buffer (<b>116</b>). The metadata (<b>302</b>) may include but is not limited to the enabled probe function, the enabled probe name, the enable probe module, the data size, the data layout, the data type, etc.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 4</figref> shows a detailed view of a tracing framework in accordance with one embodiment of the invention. The tracing framework (<b>106</b>) includes a global array (<b>400</b>) of pointers (<b>402</b>, <b>404</b>, <b>406</b>) indexed by probe identifiers (&#x201c;PIDs&#x201d;) (PID 0, PID 1, PID N). As noted above, the instrumented program (<b>115</b>) may include one or more probes (<b>112</b>, <b>114</b>), and each probe (<b>112</b>, <b>114</b>) may perform one or more actions, when triggered, as defined by the consumer (<b>101</b>). Each probe (<b>112</b>, <b>114</b>) is identified using a PID (<b>402</b>, <b>404</b>, <b>406</b>).</p>
<p id="p-0031" num="0030">Each pointer (<b>402</b>, <b>404</b>, <b>406</b>) in the global array (<b>400</b>) is associated with a pointer (<b>408</b>) to a probe provider that enabled the probe (<b>112</b>, <b>114</b>). In addition, the pointer (<b>408</b>) is also associated with a pointer (<b>410</b>) to an execution control block (&#x201c;ECB&#x201d;) data structure (<b>412</b>). In one or more embodiments of the invention, the ECB data structure (<b>412</b>) is a linked list. Each element in the linked list corresponds to an ECB (<b>414</b>, <b>416</b>, <b>418</b>).</p>
<p id="p-0032" num="0031">Conceptually, each ECB (<b>414</b>, <b>416</b>, <b>418</b>) corresponds to an action requested by a particular consumer (<b>101</b>) for a particular probe (<b>11</b>,<b>2</b>, <b>114</b>). In one embodiment of the invention, each ECB (<b>414</b>, <b>416</b>, <b>418</b>) includes an EPID (<b>420</b>, <b>422</b>, <b>424</b>) uniquely identifying the ECB (<b>414</b>, <b>416</b>, <b>418</b>). Further, each ECB (<b>414</b>, <b>416</b>, <b>418</b>) includes a predicate (<b>426</b>, <b>428</b>, <b>430</b>) specifying criteria that is to be met prior to executing the associated action (<b>432</b>, <b>434</b>, <b>436</b>). In addition, each ECB also includes a consumer state (<b>444</b>, <b>446</b>, <b>448</b>) component that provides information about the consumer (<b>101</b>) that is associated with the particular ECB (<b>414</b>, <b>416</b>, <b>418</b>). If the ECB (<b>412</b>) data structure is implemented using a linked list data structure, then each ECB (<b>414</b>, <b>416</b>, <b>418</b>) also includes a pointer (<b>438</b>, <b>440</b>) to the next ECB (<b>414</b>, <b>416</b>, <b>418</b>) or a pointer (<b>442</b>) to NULL.</p>
<p id="p-0033" num="0032">Those skilled in the art will appreciate an ECB may be defined to include more components than those described above or to include a subset of the components described above. Further, the information associated within each ECB may reside with each ECB, or alternatively, the information associated with each ECB may be stored in a location remote to the ECB with the each ECB having a pointer (or pointers) to the information associated with the ECB.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 5</figref> shows a flowchart in accordance with one embodiment of the invention. Specifically, <figref idref="DRAWINGS">FIG. 5</figref> shows a flowchart detailing the operation of the tracing framework and the ECBs in accordance with one embodiment of the invention. Initially, the CPU upon which the probe (<b>112</b>, <b>114</b>) is triggered (i.e., the probe (<b>112</b>,<b>114</b>) is encountered during the execution of the instrumented program (<b>115</b>)) disables interrupts (Step <b>500</b>). The PID associated with the probe (<b>112</b>, <b>114</b>) is used as an index into the global array to obtain a pointer (<b>402</b>, <b>404</b>, <b>406</b>) to the associated probe data structures (i.e., the pointer (<b>408</b>) to the probe provider and the pointer (<b>410</b>) to the ECB data structures (<b>412</b>)) (Step <b>502</b>). Using the information obtained for Step <b>502</b>, a current ECB pointer (not shown) is set to the first ECB (<b>414</b>, <b>416</b>, <b>418</b>) in the ECB data structure (<b>412</b>) (Step <b>504</b>). In one embodiment of the invention, the current ECB pointer is a data structure maintained by the tracing framework which points to the ECB that the tracing framework is currently executing.</p>
<p id="p-0035" num="0034">If the value of the current ECB pointer is null (Step <b>506</b>) (i.e., there is no ECB (<b>414</b>, <b>416</b>, <b>418</b>) associated with the particular probe (<b>112</b>, <b>114</b>)), then the interrupts are re-enabled (Step <b>508</b>) and the instrumented program (<b>115</b>) continues executing. If the current ECB pointer is not NULL (Step <b>506</b>) (i.e., one or more ECBs (<b>414</b>, <b>416</b>, <b>418</b>) are defined for the particular probe (<b>112</b>, <b>114</b>)), then the predicate (<b>426</b>, <b>428</b>, <b>430</b>) and the action (<b>432</b>, <b>440</b>, <b>436</b>) are performed, as specified by the ECB (<b>414</b>, <b>416</b>, <b>418</b>) (Step <b>510</b>). Once the ECB (<b>414</b>, <b>416</b>, <b>418</b>) has finished executing, the current ECB pointer is set to the ECB's pointer (<b>438</b>, <b>440</b>, <b>442</b>) to the next ECB (<b>414</b>, <b>416</b>, <b>418</b>) (Step <b>512</b>). Steps <b>506</b>-<b>512</b> are repeated until the current ECB pointer equals NULL (i.e., the tracing framework (<b>106</b>) has executed all the ECBs (<b>414</b>, <b>416</b>, <b>418</b>) associated the particular probe (<b>112</b>, <b>114</b>)).</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 6</figref> shows a flowchart in accordance with one embodiment of the invention. More specifically, <figref idref="DRAWINGS">FIG. 6</figref> shows a flowchart detailing a method for removing ECBs associated with a consumer that has ceased tracing in accordance with one embodiment of the invention. Initially, a global lock is acquired (Step <b>600</b>). The pointer (<b>402</b>) located in the first element of the global array (<b>400</b>) is subsequently obtained (Step <b>602</b>) and used to determine the location of the associated probe data structures (e.g., the pointer (<b>408</b>) to the probe provider and the pointer (<b>408</b>) to the ECB data structure (<b>412</b>)) (Step <b>604</b>). The current ECB pointer is then set to the first ECB in the ECB data structure (<b>412</b>) (Step <b>608</b>). If the current ECB pointer is NULL (Step <b>610</b>), then the tracing framework (<b>106</b>) determines if the current element in the global array is the last element in the global array (<b>400</b>) (Step <b>612</b>). If there are no remaining elements in the global array (<b>400</b>), then the global lock is released (Step <b>614</b>). However, if there are additional unprocessed elements remaining in the global array (<b>400</b>), the global array (<b>410</b>) is incremented to the next element (Step <b>616</b>) and proceeds to Step <b>610</b>.</p>
<p id="p-0037" num="0036">If the current ECB pointer is not NULL (Step <b>610</b>), then the ECB at the current ECB pointer is analyzed to determine if the ECB is associated with the consumer who is ceasing tracing (Step <b>618</b>). In one or more embodiments of the invention, the aforementioned analysis is preformed using information from the consumer state (<b>444</b>, <b>446</b>, <b>448</b>) component of the ECB (<b>414</b>, <b>416</b>, <b>418</b>). If the ECB is associated with the consumer (<b>101</b>) who is ceasing tracing (Step <b>618</b>), then the pointer (<b>410</b>) to the ECB data structure (<b>412</b>) is set to the ECB's pointer (<b>438</b>, <b>440</b>, <b>442</b>) to the next ECB or the ECB's pointer (<b>438</b>, <b>440</b>, <b>442</b>) to the next ECB is set to the next ECB's pointer to the next ECB (Step <b>620</b>). Note, pointer (<b>410</b>) to the ECB data structure (<b>412</b>) is set to the ECB's pointer (<b>438</b>, <b>440</b>, <b>442</b>) to the next ECB when the ECB to be removed is the first ECB in the ECB data structure (<b>412</b>). Further, the ECB's pointer (<b>438</b>, <b>440</b>, <b>442</b>) to the next ECB is set to the next ECB's pointer to the next ECB when the ECB to be removed is not the first ECB in the ECB data structure (<b>412</b>).</p>
<p id="p-0038" num="0037">Continuing with the description of <figref idref="DRAWINGS">FIG. 6</figref>, once the pointers have been updated per Step <b>620</b>, the memory operations are all forced to reach global visibility (Step <b>622</b>). Thus, once a memory operation has been forced to global visibility, each CPU sees the same value for the same memory address (i.e., each CPU sees the updated values for the pointers performed in Step <b>620</b>).</p>
<p id="p-0039" num="0038">A synchronous empty cross-call is then issued to all CPUs in the system (Step <b>624</b>). Conceptually, the empty cross-call &#x201c;pings&#x201d; each of the CPUs within the system and waits for a response. Because of the manner in which the actions associated with a probe are executed when a probe is triggered, namely disabling and enabling interrupts, the empty-cross call provides an efficient means to determine if a given CPU is executing in an ECB or is executing the instrumented program outside an ECB. Thus, when the empty-cross call is issued, all CPUs executing outside the instrumented program outside the ECB will acknowledge the &#x201c;ping.&#x201d; However, those executing in an ECB will not acknowledge the &#x201c;ping&#x201d; until all ECBs associated with the triggered probe have completed executing. At that time, the CPU previously executing the ECBs will acknowledge the &#x201c;ping.&#x201d; In this manner, the tracing framework can ensure that once a &#x201c;ping&#x201d; has been received by each CPU within the system that no CPU is executing in the ECB that is to be removed.</p>
<p id="p-0040" num="0039">Continuing with the discussion of <figref idref="DRAWINGS">FIG. 6</figref>, the tracing framework then proceeds to free the memory associated with ECB that is to be removed (Step <b>626</b>). The current ECB pointer is then set to the next ECB in the data structure (Step <b>628</b>). Steps <b>610</b>-<b>628</b> are then repeated until all ECBs associated with the consumer that has ceased tracing are removed.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 7</figref> shows a flow diagram in accordance with one embodiment of the invention. More specifically, <figref idref="DRAWINGS">FIG. 7</figref> shows an example of an implementation of an embodiment of the invention. In this example, a global array (<b>700</b>) includes three pointers (<b>702</b>, <b>704</b>, <b>706</b>) indexed by PID 0, PID 1, and PID 2, respectively. The pointer (<b>702</b>) associated with PID 0 and the pointer associated with PID 2 (<b>706</b>) are not associated any ECBs. However, the pointer (<b>704</b>) associated with PID 1 is associated with three ECBs (<b>708</b>, <b>710</b>, <b>712</b>). Note that other data structures associated with the ECBs and the tracing framework have been omitted from <figref idref="DRAWINGS">FIG. 7</figref> to not obscure the discussion of the example. Each ECB (<b>708</b>, <b>710</b>, <b>712</b>) is identified by an EPID (<b>714</b>, <b>716</b>, <b>718</b>) and includes a predicate (not shown) and an action (not shown). Each ECB also includes a consumer state (<b>726</b>, <b>728</b>, <b>730</b>) component. In addition, each ECB (<b>714</b>, <b>716</b>, <b>718</b>) includes a pointer (<b>720</b>, <b>722</b>) to the next ECB (<b>714</b>, <b>716</b>, <b>718</b>) or a pointer (<b>724</b>) to NULL.</p>
<p id="p-0042" num="0041">In this particular example, ECB 2 (<b>710</b>) is to be removed. Thus, in accordance with the embodiment shown in <figref idref="DRAWINGS">FIG. 6</figref>, the pointer (<b>720</b>) from ECB 1 (<b>708</b>) to ECB 2 (<b>710</b>) is replaced with a pointer (<b>732</b>) from ECB 1 (<b>708</b>) to ECB 3 (<b>712</b>). After the memory operations (i.e., the updated value of the pointer (<b>720</b>) from ECB 1 (<b>708</b>) to ECB 3 (<b>712</b>)) are forced to global visibility, then an empty cross-call is issued. Once the empty cross-call is acknowledged by each CPU in the system, the memory associated with ECB 2 (<b>710</b>) and the associated data structures (e.g., pointer (<b>722</b>) to next ECB) is freed.</p>
<p id="p-0043" num="0042">Those skilled in the art will appreciate that while embodiments of the invention have been described with respect to a linked list, any data structure may be used to represent the various components of the invention. Further, the various components of the invention may be located on a single machine or distributed across two or more machines.</p>
<p id="p-0044" num="0043">The invention provides an efficient means to multiplex a probe in an instrumented program. Further, the invention provides a means for synchronizing a multiplexed probe. In addition, the invention provides a means for allowing multiple consumers to enable multiple probes, where each probe is enabled by more than one consumer. Further, the invention provides a means for removing a consumer, and the associated data structures on the different probes without requiring synchronization primitives and dispatching operations.</p>
<p id="p-0045" num="0044">While the invention has been described with respect to a limited number of embodiments, those skilled in the art, having benefit of this disclosure, will appreciate that other embodiments can be devised which do not depart from the scope of the invention as disclosed herein. Accordingly, the scope of the invention should be limited only by the attached claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for processing a probe, comprising:
<claim-text>triggering the probe in an instrumented program;</claim-text>
<claim-text>querying a global array to determine an execution control block associated with the probe; and</claim-text>
<claim-text>executing the execution control block to obtain data,</claim-text>
<claim-text>wherein the execution control block is an element in a linked list which comprises:
<claim-text>a predicate defining a criterion for executing the execution control block;</claim-text>
<claim-text>a consumer state component defining information associated with a tracing consumer; and</claim-text>
<claim-text>an action defining the data to be obtained from the instrumented program at the probe.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. A method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>associating the probe with a probe identifier.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the probe identifier is used to query the global array.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. A method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising:
<claim-text>associating the execution control block with the probe identifier.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the execution control block further comprises:
<claim-text>a pointer to a next execution control block.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>disabling an interrupt prior to executing the execution control block; and</claim-text>
<claim-text>enabling the interrupt when executing the execution control block is completed.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A method for removing an execution control block associated with a tracing consumer from a linked list executing in a system, wherein the linked list has a first pointer pointing to the execution control block and the execution control block has a next pointer, comprising:
<claim-text>updating the linked list such that the first pointer is updated to point to same location as the execution control block's next pointer, wherein the execution control block comprises:
<claim-text>a predicate defining a criterion for executing the execution control block,</claim-text>
<claim-text>a consumer state component defining information associated with a tracing consumer, and</claim-text>
<claim-text>an action defining the data to be obtained from the instrumented program at the probe;</claim-text>
</claim-text>
<claim-text>issuing an empty cross-call and awaiting an acknowledgement from each processor in the system; and</claim-text>
<claim-text>freeing memory associated with the execution control block when the acknowledgement from each processor has been received.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising:
<claim-text>forcing a memory operation associated with updating the linked list to global visibility prior to issuing the empty cross-call.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising:
<claim-text>searching for the execution control block to remove using the consumer state component.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A system for tracing an instrumented program, comprising:
<claim-text>a processor; and</claim-text>
<claim-text>a memory configured by the processor to store:
<claim-text>the instrumented program comprising a first probe, wherein the first probe is identified using a first probe identifier, and</claim-text>
<claim-text>a first execution control block associated with the first probe comprising a first action to be performed when the first probe is triggered in the instrumented program,</claim-text>
</claim-text>
<claim-text>wherein the first execution control block is an element in a linked list which comprises:
<claim-text>a predicate defining a criterion for executing the execution control block,</claim-text>
<claim-text>a consumer state component defining information associated with a tracing consumer, and</claim-text>
<claim-text>an action defining the data to be obtained from the instrumented program at the probe.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the memory is further configured by the processor to store:
<claim-text>a tracing consumer defining the action.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the memory is further configured by the processor to store:
<claim-text>a second execution control block associated with the first probe comprising a second action to be performed when the first probe is triggered in the instrumented program.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the memory is further configured by the processor to store:
<claim-text>a second probe, wherein the second probe is identified using a second probe identifier; and</claim-text>
<claim-text>a third execution control block associated with the second probe comprising a third action to be performed when the second probe is triggered in the instrumented program.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the memory is further configured by the processor to store:
<claim-text>a global array of pointers indexed using the first probe identifier and the second probe identifier.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the first execution control block further comprises:
<claim-text>a pointer to a next execution control block.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
