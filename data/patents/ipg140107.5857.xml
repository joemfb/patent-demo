<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626966-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626966</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13428842</doc-number>
<date>20120323</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>3</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>13</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>1</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>1</main-group>
<subgroup>04</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>16</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20110101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>56</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classifications-cpc>
<main-cpc>
<classification-cpc>
<cpc-version-indicator><date>20130101</date></cpc-version-indicator>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>47</main-group>
<subgroup>10</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
<scheme-origination-code>C</scheme-origination-code>
</classification-cpc>
</main-cpc>
</classifications-cpc>
<classification-national>
<country>US</country>
<main-classification>710 29</main-classification>
<further-classification>710 33</further-classification>
<further-classification>710 36</further-classification>
<further-classification>713500</further-classification>
<further-classification>713600</further-classification>
<further-classification>709227</further-classification>
<further-classification>709238</further-classification>
<further-classification>709248</further-classification>
</classification-national>
<invention-title id="d2e43">Embedded clock recovery</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>7088398</doc-number>
<kind>B1</kind>
<name>Wolf et al.</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>EP</country>
<doc-number>0596652</doc-number>
<kind>A1</kind>
<date>19940500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>EP</country>
<doc-number>1473700</doc-number>
<kind>A2</kind>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>EP</country>
<doc-number>1102171</doc-number>
<kind>A2</kind>
<date>20110500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>GB</country>
<doc-number>2377866</doc-number>
<kind>A</kind>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00006">
<othercit>Combined international Search Report and Written Opinion, International Appln. No. PCT/IB2010/000811, International Filing Date, Apr. 12, 2010, mailed Aug. 11, 2010, 12 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>18</number-of-claims>
<us-exemplary-claim>7</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>6</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>12758234</doc-number>
<date>20100412</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>8161204</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13428842</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>61169133</doc-number>
<date>20090414</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120236755</doc-number>
<kind>A1</kind>
<date>20120920</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Chorney</last-name>
<first-name>Nicholas J.</first-name>
<address>
<city>Toronto</city>
<country>CA</country>
</address>
</addressbook>
<residence>
<country>CA</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Carter</last-name>
<first-name>Collis Q.</first-name>
<address>
<city>Richmond Hill</city>
<country>CA</country>
</address>
</addressbook>
<residence>
<country>CA</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Chorney</last-name>
<first-name>Nicholas J.</first-name>
<address>
<city>Toronto</city>
<country>CA</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Carter</last-name>
<first-name>Collis Q.</first-name>
<address>
<city>Richmond Hill</city>
<country>CA</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Sterne, Kessler, Goldstein &#x26; Fox P.L.L.C.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>ATI Technologies ULC</orgname>
<role>03</role>
<address>
<city>Markham, Ontario</city>
<country>CA</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Chen</last-name>
<first-name>Alan</first-name>
<department>2129</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Systems and methods and computer program products are disclosed to determine the source data rate even in cases where the sink device is not directly coupled to the source device. A method includes, forming a logical channel from a source device to a sink device where the logical channel is configured to carry the source data stream and one or more rate parameters. The rate parameters relate a data rate of the source data stream to a data rate of the logical channel. Another method includes, detecting a logical channel in a received data stream where the logical channel includes the source data stream, recovering one or more rate parameters from the received data stream, determining a data rate of the logical channel, and determining the data rate of the source data stream based on the data rate of the logical channel and the one or more rate parameters.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="157.99mm" wi="197.10mm" file="US08626966-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="205.57mm" wi="160.44mm" orientation="landscape" file="US08626966-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="206.25mm" wi="161.46mm" orientation="landscape" file="US08626966-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="225.72mm" wi="166.03mm" orientation="landscape" file="US08626966-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="229.02mm" wi="158.83mm" orientation="landscape" file="US08626966-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="213.53mm" wi="162.48mm" orientation="landscape" file="US08626966-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="212.85mm" wi="163.75mm" orientation="landscape" file="US08626966-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">The present application is a continuation of U.S. patent application Ser. No. 12/758,234, filed Apr. 12, 2010, which claims the benefit of U.S. Provisional Application No. 61/169,133, filed Apr. 14, 2009, U.S. patent application Ser. No. 12/758,234 and U.S. Provisional Application No. 61/169,133 are both incorporated by reference herein in their entireties.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">1. Field of the Invention</p>
<p id="p-0004" num="0003">The present invention relates generally to synchronizing a source device and a sink device.</p>
<p id="p-0005" num="0004">2. Background Art</p>
<p id="p-0006" num="0005">Clock synchronization between a transmitter and a receiver is an important aspect of data communications. Often, clock synchronization refers to the clock frequency used to transmit data over a physical link connecting a transmitter and receiver. However, in some data communications applications, the receiver is required to determine a clock frequency that is not the clock frequency of the physical link. For example, a receiver such as a television display may be required to determine the clock frequency at which a data source such as a DVD decoder outputs a stream of data. Data streams where the receiver requires the clock rate at which the original data is sourced to the transmitter are called isochronous data streams.</p>
<p id="p-0007" num="0006">Known methods exist for the transmission of isochronous data streams. One conventional method requires the source device to transmit one or more parameters to the sink device that relates the source data rate to the link data rate. However, depending on the link data rate when the link data rates at the source and sink differ can lead to incompatibilities. Another conventional method utilizes a buffer at the sink device where the depth of the buffer is used by the sink to determine a clock rate. However, relying on a buffer introduces variable delays and expensive buffer requirements. Yet another conventional method requires any intermediate device to regenerate the rate parameters transmitted by the source device based on the data rates of its incoming and outgoing link rates. However, requiring intermediate devices to regenerate the rate parameters adds complexity and costs to such devices.</p>
<p id="p-0008" num="0007">What are needed, therefore, are improved methods and systems to enable a sink device to recover the clock rate of a source data stream. More particularly, what are needed are improved methods for synchronizing a source device and a sink device during the transmission of an isochronous data stream.</p>
<heading id="h-0003" level="1">BRIEF SUMMARY OF THE INVENTION</heading>
<p id="p-0009" num="0008">Apparatus and methods for synchronizing a source and sink device are disclosed, where a sink device can efficiently determine the source data rate even in cases where the sink device is not directly coupled to the source device. A method for transmitting a source data stream from a source device to a sink device includes, forming a logical channel from a source device to a sink device. The logical channel is configured to carry the source data stream, and one or more rate parameters. The rate parameters relate a data rate of the source data stream to a data rate of the logical channel.</p>
<p id="p-0010" num="0009">A method for a sink device to recover a source data rate includes, detecting a logical channel in a received data stream where the logical channel includes the source data stream, recovering one or more rate parameters from the received data stream, determining a data rate of the logical channel, and determining the data rate of the source data stream based on the data rate of the logical channel and the one or more rate parameters.</p>
<p id="p-0011" num="0010">A data transmission system that enables a sink device to determine the source data rate includes a source device and a sink device directly or indirectly coupled to the source device. The source device is configured to form a logical channel from the source device to the sink device, the logical channel being configured to carry (i) the source data stream, and (ii) one or more rate parameters, and transmit the logical channel over a transmission link. The rate parameters relate a data rate of the source data stream to a data rate of the logical channel. The sink device is configured to detect the logical channel in a received data stream, to recover the one or more rate parameters from the received data stream, to determine the data rate of the logical channel, and to determine the data rate of the source data stream based on the data rate of the logical channel and the one or more rate parameters.</p>
<p id="p-0012" num="0011">Further embodiments, features, and advantages of the present invention, as well as the structure and operation of the various embodiments of the present invention, are described in detail below with reference to the accompanying drawings.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS/FIGURES</heading>
<p id="p-0013" num="0012">The accompanying drawings, which are incorporated in and constitute part of the specification, illustrate embodiments of the invention and, together with the general description given above and the detailed description of the embodiment given below, serve to explain the principles of the present invention. In the drawings:</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 1</figref> shows a system including a source device and a sink device, according to an embodiment of the present invention.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 2</figref> shows a system including a source device, an intermediate device, and multiple sink devices, according to an embodiment of the present invention.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 3</figref> is a source device, according to an embodiment of the present invention.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 4</figref> is a sink device, according to an embodiment of the present invention.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart showing steps in a process implemented in the source device according to an embodiment of the present invention.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 6</figref> is a flowchart showing steps in a process implemented in the sink device according to an embodiment of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF TIE INVENTION</heading>
<p id="p-0020" num="0019">Embodiment of the present invention can enable the efficient recovery of a source clock rate in sink devices. While the present invention is described herein with illustrative embodiments for particular applications, it should be understood that the invention is not limited thereto. Those skilled in the art with access to the teachings provided herein will recognize additional modifications, applications, and embodiments within the scope thereof and additional fields in which the invention would be of significant utility.</p>
<p id="p-0021" num="0020">Embodiments of the present invention can be used in any computer system, computing device, entertainment system, media system, game systems, or any system where a one or more transmission links couple a source device and a sink device. The present invention is particularly useful where the system comprises isochronous data streams.</p>
<p id="p-0022" num="0021">Isochronous data streams require that the receiver sink device) is able to determine the clock frequency at which the transmitted data was generated. Uncompressed audio and video data streams are examples of isochronous data streams. For example, a flat panel television display receiving an uncompressed audio and video stream from a DVD player would require the rate at which the DVD player streamed the data, in order to properly render the received data streams in the display.</p>
<p id="p-0023" num="0022">Industry standards such as DisplayPort, High Definition Multimedia Interface (HDMI), Digital Visual Interface (DVI), and the like, specify interfaces for connecting a source device to one or more sink devices. DisplayPort, for example, specifies a method for enabling a sink device to recover the clock frequency applied to the source data. In DisplayPort 1.1, the source device calculates an M parameter and an N parameter that relate the source data rate and the link rate, and the calculated M and N parameters are transmitted to the sink device. The sink device retrieves the M and N parameters sent by the source device, and by determining the incoming link rate, the sink device is able to determine the source data rate used at the source device. Although, the method specified in DisplayPort 1.1 may be adequate where the source is directly coupled to the sink device, it fails when the data stream traverses multiple links before arriving at the sink device. For example, when the source data stream traverses multiple links, the link rate at the source may not be the same as the link rate at the sink. The present invention enables a sink device to determine the source data rate regardless of whether it is directly or indirectly coupled to the source device. The present invention accelerates and simplifies the recovery of the source rate by providing a pair of embedded parameters. According to an embodiment, a robustly detectable data channel is provided with a well regulated rate to transmit a reference rate from source to sink. In addition, a stable and accurate measurement of the rate of the data embedded in the data channel relative to the data channel is transmitted.</p>
<p id="p-0024" num="0023">The present invention, in general, eliminates the need to parse the embedded data in the received data stream. Parsing the embedded data can lead to various impairments. For example, video data has blank intervals where there is no data transmission, so the sink must determine how to reconstruct the rate by only looking at the active intervals. It may not be possible, for example, to track video data rate changes in the vertical blanking region. Also, audio data embedded in a video stream is generally bursty (due, for example, to its transmission being periodically blocked by active video data) and arrives at the sink at a relatively low rate, making rate tracking difficult and causing relatively long lock times. This can lead to long turn-on delays and/or distorted playback as the sink tries to lock to the audio data rate. It can also potentially lead to signal distortion if the sink's rate recovery logic tracks the bursts of audio data.</p>
<p id="p-0025" num="0024">Conventional approaches also include having intermediate devices update the M and N parameters according to input and output interface link rates and having the intermediate device compute some scaling factor between the incoming link rate and the outgoing link rate. However, having intermediate devices perform such functions increases the complexity and cost of such devices. Another approach includes having the stream sink device buffer audio and/or video data into a buffer such as a first-in-first-out (FIFO) buffer. The stream sink device then monitors the buffer level and uses the buffer level to increase and/or decrease the recovered clock rate. When the buffer level increases, the clock rate is increased such that the buffer drain rate increases. When the buffer level decreases, the clock rate is decreased such that the buffer level increases. This approach leads to problems, such as, audio phase misalignment between monitors, audio signal distortion due to the increase/decrease of audio clocks, slow (e.g., in seconds) signal lock times for the audio/video clock, and relatively costly buffer requirements.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 1</figref> is system according to an embodiment of the present invention. System <b>100</b> includes a source device <b>101</b>, a sink device <b>102</b>, a main link <b>110</b>, and an auxiliary link <b>112</b>. Source device <b>101</b> can be, for example, an audio and/or video streaming device such as a DVD decoder, CD player, digital camera, or MP3 player. Source device <b>101</b> can also be a computer or other computing device that generates isochronous data. Source device <b>101</b> includes the functionality to generate and/or receive a stream of source data, and to transmit the source data to a sink device either directly or via one or more intermediate devices (branch devices). Source device <b>101</b> can also include functionality to process the source data before transmission if necessary. <figref idref="DRAWINGS">FIG. 3</figref> illustrates more details of a source device, according to an embodiment of the present invention.</p>
<p id="p-0027" num="0026">Sink device <b>102</b> can be, for example, a television display, a computer display, or an audio speaker system. Sink device <b>102</b> can also be an intermediate device, such as an audio or video receiver, that can perform various processing functions on the audio and/or video streams before such streams are sent to a rendering device such as a display or speaker system. Herein, sink device <b>102</b> represents a device that requires the source data stream and associated source data rate for reasons such as rendering the source data stream and/or further processing of the source data stream. Sink device <b>102</b> includes functionality to receive a source data stream from source device <b>101</b>, and to recover the clock rate of the source data (i.e., source data rate). <figref idref="DRAWINGS">FIG. 4</figref> illustrates more details of a sink device, according to an embodiment of the present invention.</p>
<p id="p-0028" num="0027">The main link <b>110</b> couples source device <b>101</b> and sink device <b>102</b>. Main link <b>110</b> is a transmission link over which data and control information can flow between source device <b>101</b> and sink device <b>102</b>. Main link <b>110</b> can include one or more physical transmission media, such as, wired or wireless connections between source device <b>101</b> and sink device <b>102</b>. A transmitter in source device <b>101</b> and a receiver in sink device <b>102</b> can coordinate transmission over main link <b>110</b> such that the multiple physical links comprising main link <b>110</b> are transparent to data transmission. For example, data being transmitted may be distributed over the several physical links at the symbol level, e.g., an equal number of bits from each symbol can be transmitted over each of the available physical links.</p>
<p id="p-0029" num="0028">Data is preferably transmitted over main link <b>110</b> in a packet-based format. A packet encapsulates some amount of data and has a format known to both source device <b>101</b> and sink device <b>102</b>. For example, a packet can include a header portion and a data portion. The header portion includes control information such as type of data in the data portion, identity of the source device, identity of the sink device, and the like.</p>
<p id="p-0030" num="0029">Some embodiments of the present invention can include an auxiliary link <b>112</b> between source device <b>101</b> and sink device <b>102</b>. Auxiliary link <b>112</b> can be used, for example, for the bi-directional transfer of control information between source device <b>101</b> and sink device <b>102</b>. In one embodiment, auxiliary link <b>112</b> can be used by sink device <b>102</b> to communicate its data receiving capability, such as the maximum receiving rate, to source device <b>101</b> so that source device <b>101</b> can configure its transmitter to not exceed the specified rate. In some embodiments, secondary data and control information can also be transmitted through main link <b>110</b>, instead of through a separate auxiliary link <b>112</b>.</p>
<p id="p-0031" num="0030">The virtual channel <b>120</b> is a logical channel carrying a data stream over main link <b>110</b>. Virtual channel <b>120</b> is logically overlaid on main link <b>110</b>, and can utilize one or more of the separate physical links of main link <b>110</b>. One or more virtual channels (sometimes also called &#x201c;logical channel&#x201d;), such as <b>120</b>, may be initiated over main link <b>110</b>. Data belonging to a virtual channel can be identified based on one or more identifiers included in the header portion of each packet carrying data in that virtual channel. For example, the header portion may include a channel-identifier that uniquely identifies a virtual channel.</p>
<p id="p-0032" num="0031">In embodiments of the present invention, virtual channel <b>120</b> can be used to carry an isochronous data stream from source device <b>101</b> to sink device <b>102</b>. For example, one virtual channel can be used for carrying the video data stream from a DVD player, and another virtual channel can carry the associated audio stream. Alternatively, the same virtual channel can carry both the audio and the video. Virtual channels, such as <b>120</b>, allow the total bandwidth of main link <b>110</b> to be utilized for multiple simultaneously occurring data streams including isochronous data streams.</p>
<p id="p-0033" num="0032">In an embodiment of the present invention, source device <b>101</b>, sink device <b>102</b>, main link <b>110</b>, auxiliary link <b>112</b>, and virtual channel <b>120</b> operate according to a known standard such as DisplayPort, or one of its variants. DisplayPort, for example, specifies that main link <b>110</b> is unidirectional from source device <b>101</b> to sink device <b>102</b>, and that main link <b>110</b> can comprise of 1, 2 or 4 physical links. Auxiliary link <b>112</b>, according to the DisplayPort specification, is used for the bidirectional exchange of secondary information including information such as maximum link rate and maximum channel rate that can be handled by sink device <b>102</b>. In other embodiments, system <b>100</b> may have main link <b>110</b> operating according to another known standard such as High Definition Multimedia Interface (HDMI), Digital Visual Interface (DVI), Video Graphics Array (VGA) or its variants, and Low Voltage Differential Signaling (LVDS), or a similar custom data transmission standard.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 2</figref> shows another system <b>200</b>, according to an embodiment of the present invention. System <b>200</b> includes a source device <b>201</b>, multiple sink devices <b>202</b> and <b>203</b>, and a branch device <b>204</b>. Source device <b>201</b>, and sink devices <b>202</b> and <b>203</b>, can be as described above with respect to <figref idref="DRAWINGS">FIG. 1</figref>. Branch device <b>204</b> is an intermediate device that takes as input an incoming data stream, and outputs the data stream to one or more sink devices. An example of a system corresponding to system <b>200</b> is a multichannel audio speaker system where a audio receiver branch device takes an input audio stream from a source device (e.g., DVD player) and distributes the audio and video to separate sink devices (e.g., separate speakers for each audio channel, and a television display for video). Another example can be a video splitter system that allows the video output from a single source device (e.g., computer) to be distributed to multiple sink devices (e.g., display devices).</p>
<p id="p-0035" num="0034">System <b>200</b> can also comply with the DisplayPort standard, or one or more of its variants. Accordingly, main links <b>210</b>, <b>211</b>, and <b>212</b> can be unidirectional links used for the transport of isochronous data streams. Each isochronous data stream can, for example, be transmitted within a virtual channel. For example, an isochronous data stream such as a video stream that is generated in source device <b>201</b> can be transmitted from source device <b>201</b> to branch device <b>204</b> in virtual channel <b>220</b>. Branch device <b>204</b>, then distributes the video stream to sink devices <b>202</b> and <b>203</b> that can be display monitors. The video stream from branch device <b>204</b> to each of the sink devices is transmitted in a virtual channel. The link rates of main links <b>210</b>, <b>211</b>, and <b>212</b> can differ from each other.</p>
<p id="p-0036" num="0035">Corresponding to systems <b>100</b>, <b>200</b>, and the like, a description of the present invention requires several clock frequencies to be distinguished. A &#x201c;symbol&#x201d; as used herein can refer to &#x201c;data symbols&#x201d; or &#x201c;control symbols.&#x201d; Data symbols are data to be transmitted that are encoded according to a protocol known to the source device and the sink device. Data symbols can include active data such as video data to be displayed as well as blanking interval data. Control symbols are a set of symbols used for framing data symbols and encoded according to a protocol known to the source device and the sink device.</p>
<p id="p-0037" num="0036">The link rate refers to the rate or frequency at which symbols are transmitted on a physical link, such as main links <b>210</b>, <b>211</b>, and <b>212</b>. Each main link <b>210</b>, <b>211</b>, and <b>212</b>, may each have a different link rate. Related to the link rate is the link symbol clock or LS_CLK that establishes timing across the respective link.</p>
<p id="p-0038" num="0037">The source data rate is the rate or frequency at which the source outputs the data stream. For example, the video source data rate from a DVD decoder is the rate at which video data is output from the decoder. The audio source data rate from a DVD decoder is the rate at which audio data is output from the decoder. Thus, the source data rate includes active data such as the actual video data as well as blanking intervals. Recovery of the source data rate of a data stream is a key aspect of the present invention.</p>
<p id="p-0039" num="0038">The virtual channel data rate is the rate or frequency at which data including source data is input to an interface transmitter device. It is also the rate at which an interface receiving device inputs a received data stream to a sink device to be rendered. Expressed differently, the virtual channel data rate is the rate at which data for the virtual channel is input to a transmitter. Therefore, the virtual channel data rate is higher than the corresponding source data rate and lower than link rate.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 3</figref> shows a source device <b>201</b> according to an embodiment of the present invention. Source device <b>201</b> includes a controller <b>301</b>, a memory <b>302</b>, a persistent storage <b>303</b>, a communication framework <b>304</b>, a data source <b>310</b>, a link module <b>320</b>, a transmit interface <b>330</b>, a clock source <b>340</b>, a channelizer <b>322</b>, and a reference rate module <b>324</b>. Controller <b>301</b> may be any one or more processor including a central processor unit (CPU) or graphics processor unit (GPU). Controller <b>301</b> controls the operation of devices in source device <b>201</b>. For example, controller <b>301</b> can execute the logic instructions implementing one or more of, link module <b>320</b>, transmit interface <b>330</b>, clock source <b>340</b>, channelizer <b>322</b> and reference rate module <b>324</b>. The logic instructions of link module <b>320</b>, transmit interface <b>330</b>, clock source <b>340</b>, channelizer <b>322</b> and reference rate module <b>324</b> can be implemented in software, hardware, or a combination thereof.</p>
<p id="p-0041" num="0040">Memory <b>302</b> includes one or more memory devices, for example, dynamic random access memory (DRAM) devices. Memory <b>302</b> is used to store logic for portions modules including link module <b>320</b>, transmit interface <b>330</b>, clock source <b>340</b>, channelizer <b>322</b> and reference rate module <b>324</b>, as needed for execution. Memory <b>302</b> can also be used to buffer incoming stream data from data source <b>310</b> to transmit interface <b>330</b>.</p>
<p id="p-0042" num="0041">Persistent storage <b>303</b> can include one or more persistent storage devices such as magnetic disk, optical disk, flash memory, and the like. Persistent storage <b>303</b> can store the logic of link module <b>320</b>, transmit interface <b>330</b>, clock source <b>340</b>, channelizer <b>322</b> and reference rate module <b>324</b>, as needed. For example, in one embodiment, persistent storage <b>303</b> stores all portions of link module <b>320</b>, transmit interface <b>330</b>, clock source <b>340</b>, channelizer <b>322</b> and reference rate module <b>324</b> that are implemented in software in executable form to be loaded into memory <b>302</b> upon startup of source device <b>201</b>.</p>
<p id="p-0043" num="0042">Communication bus <b>304</b> couples components of source device <b>201</b>, such as two or more of <b>301</b>, <b>302</b>, <b>303</b>, <b>310</b>, <b>320</b>, <b>322</b>, <b>324</b>, <b>320</b>, <b>330</b>, and <b>340</b>. Communication bus <b>304</b> may include a Peripheral Component Interface (PCI) bus or one of its variants, Universal Serial Bus (USB), Firewire, Ethernet, or a like device.</p>
<p id="p-0044" num="0043">Data source <b>310</b> can be any device that produces a source data stream. For example, a video or music playback device (e.g., the playback device or decoder of a DVD, CD, MP3, digital camera, and the like) can be included in data source <b>310</b>. In one embodiment, data source <b>310</b> can be a DVD playback device that decodes and uncompresses video data stored on the DVD before the data is sent to transmit interface <b>330</b>. For example, the DVD video data may be stored using Motion Picture Experts Group version 2 (MPEG2) video compression standard. Data source <b>310</b> would uncompress the MPEG2 video in accordance with the MPEG2 standard, and inject the uncompressed video data into link module <b>320</b> to be transmitted to sink device <b>202</b> to be rendered on a display. Although not described here, a person of skill in the art would understand that data source <b>310</b> can include components such as, but not limited to, a frame buffer, decoder, and a timing controller, that can be used in generating the source data stream to be input into link module <b>320</b>.</p>
<p id="p-0045" num="0044">Link module <b>320</b> includes the functionality to provide services such as packing and/or stuffing packets and/or frames according to transmission requirements. Link module <b>320</b> can also provide the functionality to multiplex secondary data (such as control information, and or other information to be displayed with the video stream) and perform encryption.</p>
<p id="p-0046" num="0045">Channelizer <b>322</b> can be implemented as part of the link module <b>320</b> or as a separate module. Channelizer <b>322</b> includes the functionality to receive the source data stream from data source <b>310</b> and to initiate one or more virtual channels to transmit that source data as one or more source data streams to a sink device. For example, receiving a DVD video and audio stream from data source <b>310</b>, channelizer <b>322</b> can initiate one or more virtual channels for the video and audio streams. The initiation of a channel can include creating an identifier for the channel, and passing the appropriate identifier with the corresponding stream data to the link layer. In some embodiments of the present invention, initiation of a virtual channel involves the exchange of messages with corresponding sink devices and branch devices. An exchange of messages prior to setting up a virtual channel, for example, enables the configuration of the virtual channel with a dynamically determined channel rate.</p>
<p id="p-0047" num="0046">For example, the channel rate of the virtual channel can be set at a rate that each device in the path of the data flow can support. In an embodiment, the channel rate is determined to be at a value that is greater than the peak rate of the corresponding source data stream and that maps to the physical transmission characteristics of the underlying transmission media. It is also preferable that the channel rate is set at a level supportable by substantially all intermediate devices along the path of the data flow. Channelizer <b>322</b> or link module <b>320</b> can, preferably, stuff in-active data in the virtual channel data stream so that the channel rate is maintained at the set level.</p>
<p id="p-0048" num="0047">Reference rate module <b>324</b> includes the functionality to determine one or more reference parameters that convey timing relationships that can be transmitted to the sink device. In one embodiment, reference rate module <b>324</b> determines a first parameter and a second parameter to be transmitted to sink device <b>202</b>. The first parameter and second parameters are determined to express the relationship (source data rate)/(channel rate). In one embodiment, the second parameter can be a predetermined number of cycles of the corresponding virtual channel clock. The first parameter, then, can be the number of cycles of the source data stream clock that occur within the virtual channel clock interval defined by the second parameter. One or more phase lock loops or the like can be used to lock on to a clock, for example, from clock source <b>340</b>.</p>
<p id="p-0049" num="0048">Clock source <b>340</b> can include one or more clock sources that are used for generating the source data stream clock, the virtual channel clock, and the link clock. Embodiments of the present invention may use a separate clock from clock source <b>340</b> for each of the source data stream clock, the virtual channel clock, and the link clock, a single clock for all, or a combination. For example, if the same clock is used for source data stream clock and the virtual channel clock, the first and second parameters would not change in value during the transmission of the source data stream. If different clock sources are used, for example, the second parameter can stay constant while the first parameter can fluctuate because it is defined relative to the second parameter. The clock sources used in clock source <b>340</b> may include any known clock generating device such as one or more crystal or silicon oscillators.</p>
<p id="p-0050" num="0049">Transmit interface <b>330</b> includes the functionality to receive the outgoing data stream from, for example, link module <b>320</b> and to send it out over a transmission link, such as link <b>210</b>, to a sink device such as <b>202</b> or to a branch device such as <b>204</b>. Transmit interface <b>330</b> also includes the functionality to transmit data, as appropriate, over a main link and an auxiliary link in systems where both types of links exist. In one embodiment, transmit interface <b>330</b> includes functionality specified in the physical layer, such as, the physical transmission and error correction of the transmitted data. The transmission of the data occurs according to the link clock. In an embodiment, transmit interface <b>330</b> can include a differential transmitter. For example, in one embodiment, transmit interface <b>330</b> includes functions necessary to transmit video data frames and control information over main link <b>210</b> using the low-voltage differential signaling interface standard (LVDS).</p>
<p id="p-0051" num="0050">A person of skill in the art would understand that source device <b>201</b> can comprise components or modules in addition to those shown, or different combinations thereof. It should also be noted that the functionality of data source <b>310</b>, link module <b>320</b>, transmit interface <b>330</b>, channelizer <b>322</b>, reference rate module <b>324</b>, and clock source <b>340</b>, can be implemented in software, firmware, hardware, or a combination thereof. In one embodiment, for example, the functionality of data source <b>310</b>, link module <b>320</b>, transmit interface <b>330</b>, channelizer <b>322</b>, reference rate module <b>324</b>, and clock source <b>340</b> is specified in a hardware description language such as Verilog, RTL, netlists, to enable ultimately configuring a manufacturing process through the generation of maskworks/photomasks to generate a hardware device embodying aspects of the invention described herein.</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 4</figref> shows a sink device <b>202</b>, according to an embodiment of the present invention. Sink device <b>202</b> includes a controller <b>401</b>, a memory <b>402</b>, a persistent storage <b>403</b>, a communication framework <b>404</b>, a data sink <b>430</b>, link module <b>420</b>, receive interface <b>410</b>, clock source <b>440</b>, channel processor <b>422</b>, and rate deriver <b>424</b>. Controller <b>401</b> may be any one or more processor including a central processor unit (CPU) or graphics processor unit (GPU). Controller <b>401</b> controls the operation of devices in sink device <b>202</b>. For example, controller <b>401</b> can execute the logic instructions implementing one or more of, link module <b>420</b>, receive interface <b>410</b>, clock source <b>440</b>, channel processor <b>422</b> and rate deriver <b>424</b>. The logic instructions of link module <b>420</b>, receive interface <b>410</b>, clock source <b>440</b>, channel processor <b>422</b> and rate deriver <b>424</b> can be implemented in software, hardware, or a combination thereof.</p>
<p id="p-0053" num="0052">Memory <b>402</b> includes one or more memory devices, for example, dynamic random access memory (DRAM) devices. Memory <b>402</b> is used to store logic for portions modules including link module <b>420</b>, receive interface <b>430</b>, clock source <b>440</b>, channel processor <b>422</b> and rate deriver <b>424</b>, as needed for execution. Memory <b>402</b> can also be used to buffer incoming stream data from receive interface <b>410</b> to data sink <b>430</b>.</p>
<p id="p-0054" num="0053">Persistent storage <b>403</b> can include one or more persistent storage devices such as magnetic disk, optical disk, flash memory, and the like. Persistent storage <b>403</b> can store the logic of link module <b>420</b>, receive interface <b>430</b>, clock source <b>440</b>, channel processor <b>422</b> and rate deriver <b>424</b>, as needed. For example, in one embodiment, persistent storage <b>403</b> stores all portions of link module <b>420</b>, receive interface <b>430</b>, clock source <b>440</b>, channel processor <b>422</b> and rate deriver <b>424</b> that are implemented in software in executable form to be loaded into memory <b>402</b> upon startup of sink device <b>202</b>.</p>
<p id="p-0055" num="0054">Communication bus <b>404</b> couples components of sink device <b>202</b>, such as two or more of <b>401</b>, <b>402</b>, <b>403</b>, <b>410</b>, <b>420</b>, <b>422</b>, <b>424</b>, <b>420</b>, <b>430</b>, and <b>440</b>. Communication bus <b>404</b> may include a Peripheral Component Interface (PCI) bus or one of its variants, USB, Firewire, Ethernet, or a like device.</p>
<p id="p-0056" num="0055">The receive interface <b>410</b> includes the functionality to receive the incoming data stream from a link, such as main link <b>211</b>, from a source device or a branch device. The received data can then be sent to the link module <b>420</b>. Receive interface <b>410</b> also includes the functionality to receive data, as appropriate, over a main link and an auxiliary link in systems where both types of links exist. In one embodiment, receive interface <b>410</b> includes functionality specified in the physical layer, such as, the physical transmission and error correction of the transmitted data. In an embodiment, receive interface <b>410</b> can include a differential receiver. For example, in one embodiment, receive interface <b>410</b> includes functions for receiving video data frames and control information over main link <b>211</b> using the low-voltage differential signaling interface standard (LVDS).</p>
<p id="p-0057" num="0056">Link module <b>420</b> includes the functionality to provide services such as unpacking and/or destuffing packets and/or frames according to how the packets were transmitted from the source device or a branch device. Link module <b>420</b> can also provide the functionality to demultiplex secondary data (such as control information, and or other information to be displayed with a video stream) and perform decryption of the incoming stream as necessary.</p>
<p id="p-0058" num="0057">Data sink <b>430</b> can be any device that can receive an incoming data stream and process and/or render it. For example, data sink <b>430</b> can be a video and/or audio rendering device such as a television display, or an audio rendering device such as a speaker system. In some embodiments, data sink <b>430</b> may be an interface to which an external rendering device is connected to. In one embodiment, data sink <b>430</b> can be a display device that receives uncompressed video data and related timing information. Although not described here, a person of skill in the art would understand that data sink <b>430</b> can include components such as, but not limited to, a frame buffer, decoder, and a display timing recovery module.</p>
<p id="p-0059" num="0058">Channel processor <b>422</b> can be implemented as part of the link module <b>420</b> or as a separate module. Channel processor <b>422</b> includes the functionality to receive the source data stream from link module <b>420</b> and to detect one or more virtual channels that includes source data as one or more source data streams. For example, receiving a DVD video and audio stream from link module <b>420</b>, channel processor <b>422</b> can determine one or more virtual channels for the video and audio streams. The determination can be based on detecting a unique identifier defining a virtual channel. Channel processor <b>422</b> can also include functionality to receive and respond to messages from a source device in setting up a virtual channel. Channel processor <b>422</b> and/or link module <b>420</b> also includes the functionality to identify and discard such fill data (such as data included by branch devices to equalize the transmit rate of the virtual channel to a pre-specified channel rate).</p>
<p id="p-0060" num="0059">Rate deriver <b>424</b> includes the functionality to detect one or more reference rate parameters transmitted from source device <b>201</b>, and to determine the source data rate based on those parameters, the link rate, and the channel rate. The rate parameters define the timing relationship between the source data rate and the channel rate. The one or more rate parameters transmitted from source device <b>201</b> can be recovered from, for example, header information of packets in the incoming packet stream. The link rate and the channel rate can be locally determined. One or more phase lock loops, oscillators, and/or the like can be used to lock on to received detected clocks such as, the link clock, the virtual channel clock, and/or the source data stream clock.</p>
<p id="p-0061" num="0060">Clock source <b>440</b> can include one or more clock sources and/or clock circuitry that are used for locking on to one or more of the data stream clock, the virtual channel clock, and the link clock. Embodiments of the present invention may use a separate clock from clock source <b>440</b> for each one of the source data stream clock, the virtual channel clock, and the link clock, a single clock for all, or a combination. The clock sources used in clock source <b>440</b> may include any known clock generating device such as one or more crystal or silicon oscillators, or clock locking circuitry such as phase lock loop circuits.</p>
<p id="p-0062" num="0061">A person of skill in the art would understand that sink device <b>202</b> can comprise components or modules in addition to those shown, or different combinations thereof. It should also be noted that the functionality of a data sink <b>430</b>, link module <b>420</b>, receive interface <b>410</b>, clock source <b>440</b>, channel processor <b>422</b>, and rate deriver <b>424</b>, can be implemented in software, firmware, hardware, or a combination thereof. In one embodiment, for example, the functionality of a data sink <b>430</b>, link module <b>420</b>, receive interface <b>410</b>, clock source <b>440</b>, channel processor <b>422</b>, and rate deriver <b>424</b> is specified in a hardware description language such as Verilog, RTL, netlists, to enable ultimately configuring a manufacturing process through the generation of maskworks/photomasks to generate a hardware device embodying aspects of the invention described herein.</p>
<p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. 5</figref> illustrates a process <b>500</b> by which a source device, such as source device <b>201</b>, can transmit information needed for a sink device, such as sink device <b>202</b>, to regenerate the source data rate. In step <b>510</b>, the source device receives and/or generates a source data stream. For example, the source device can be a data source such as a DVD playback device generating a video and/or audio stream. The video and/or audio stream generated by the data source is referred to as the source data stream. The data source generates the source data stream at a rate determined by several factors including the encoding of the video and audio data (such as, MPEG2). A clock source or a clock locking circuit, for example, from clock source <b>340</b>, can be used for generating a clock or to lock on to the clock generated from the source data stream. The clock frequency that determines the data rate of the source data stream is referred to as the source data stream clock or source data stream rate.</p>
<p id="p-0064" num="0063">In step <b>520</b>, the source data stream is mapped to one or more virtual channels. As described above, a virtual channel is a logical stream imposed on the physical transmission link. Typically, there is a one-to-one mapping between a virtual channel and a source data stream. However, in some cases, one source data stream can be mapped to multiple virtual channels. For ease of description, and without loss of generality, the following description of process <b>500</b> largely assumes a one-to-one mapping between the source data stream and a virtual channel. For example, a source data stream with video and multi-channel audio may be mapped to multiple virtual channels. Upon receiving the first data of the source data stream, a channelizer and/or a link module determines that a new virtual channel is required. The channelizer can generate a channel identifier that would be in the header portion of every packet carrying data from the source data stream. In some embodiments, the source device, for example, using the channelizer and/or the link, module, can notify the sink device and/or corresponding branch device of the initiation of the new virtual channel.</p>
<p id="p-0065" num="0064">In step <b>530</b>, a channel rate is determined for the virtual channel. The channel rate or the virtual channel clock rate is the rate at which the virtual channel is populated with the source data and other secondary data. For example, the channel rate can account for the rates at which source data and secondary data is packed into packets, headers are constructed, data is encoded into symbols, and any control symbols being added to the packets. It should be noted, however, that embodiments of the present invention can have other aspects included and/or have some of the described aspects excluded from the channel rate. Each embodiment can have a consistent method of determining the channel rate between a source device and the corresponding one or more sink devices.</p>
<p id="p-0066" num="0065">In step <b>540</b>, the source data stream is channelized. For example, channelizer <b>322</b> and/or link module <b>320</b> can packetize data from the source data stream. In some embodiments of the present invention, secondary data may be multiplexed into the virtual channel. Channelizing includes packing data stream data and any secondary data into packets of fixed or variable sizes, forming the header portions of each packet, encoding the data stream data and secondary data according to an encoding scheme, and adding control symbols required for the rendering of the source data stream in a rendering device. For example, a video source data stream may need to be packed with inactive data so that the virtual channel data can be transmitted at the predetermined channel data rate.</p>
<p id="p-0067" num="0066">In step <b>550</b>, the link rate is determined. For example, the link rate is the rate at which link module <b>320</b> transmits packets through transmit interface <b>330</b>. Typically, each source device, branch device, and sink device has one or more link rates at which it can operate. The term &#x201c;link rate&#x201d; as used in the description of process <b>500</b>, refers to the clock rate at which the outgoing link, such as main link <b>210</b>, operates. It should be noted that link bandwidth refers to the aggregate of the capacity of all physical links that comprise main link <b>210</b>. The link rate is typically determined by a preconfigured clock, for example, from clock source <b>340</b>.</p>
<p id="p-0068" num="0067">In step <b>560</b> rate parameters to be communicated to the sink device are determined. In embodiments of the present invention, a first rate parameters (M) and a second rate parameter (N) are determined. According to the present invention, parameters M and N are intended to convey the relationship between the source data stream clock and the virtual channel clock. In an embodiment, N is configured to have a value corresponding to a predetermined number of cycles of the virtual channel clock, and M is measured as the number of cycles of the source data stream clock that occurs during the interval defined by N. Other embodiments may include methods of computing an M and an N differently while still conveying the relationship between the source data rate and the channel rate. M and N parameters are determined separately for each virtual channel. M and N parameters can also be separately determined for different types of data, such as, audio and video. For example, even within a single virtual stream, video and audio may require rendering at different rates.</p>
<p id="p-0069" num="0068">According to one embodiment, after the N parameter is determined, for example, through configuration, (1) may be used to determine M:</p>
<p id="p-0070" num="0069">
<maths id="MATH-US-00001" num="00001">
<math overflow="scroll">
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <mi>M</mi>
        <mo>=</mo>
        <mrow>
          <mrow>
            <mo>(</mo>
            <mfrac>
              <msub>
                <mi>F</mi>
                <mrow>
                  <mrow>
                    <mi>source</mi>
                    <mo>&#x2062;</mo>
                    <mi>_</mi>
                    <mo>&#x2062;</mo>
                    <mi>data</mi>
                  </mrow>
                  <mo>&#x2062;</mo>
                  <mrow>
                    <mi>_</mi>
                    <mo>&#x2062;</mo>
                    <mi>rate</mi>
                  </mrow>
                </mrow>
              </msub>
              <msub>
                <mi>F</mi>
                <mrow>
                  <mrow>
                    <mi>virtual</mi>
                    <mo>&#x2062;</mo>
                    <mi>_</mi>
                    <mo>&#x2062;</mo>
                    <mi>channel</mi>
                  </mrow>
                  <mo>&#x2062;</mo>
                  <mrow>
                    <mi>_</mi>
                    <mo>&#x2062;</mo>
                    <mi>rate</mi>
                  </mrow>
                </mrow>
              </msub>
            </mfrac>
            <mo>)</mo>
          </mrow>
          <mo>&#xd7;</mo>
          <mi>N</mi>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>1</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
</maths>
</p>
<p id="p-0071" num="0070">where N is the duration corresponding to a configured number of cycles of the virtual channel clock, F<sub>source</sub><sub><sub2>&#x2014;</sub2></sub><sub>data</sub><sub><sub2>&#x2014;</sub2></sub><sub>rate </sub>is the frequency of a source data stream, F<sub>virtual</sub><sub><sub2>&#x2014;</sub2></sub><sub>channel</sub><sub><sub2>&#x2014;</sub2></sub><sub>rate </sub>is the frequency of the virtual channel clock, and M is the M parameter for the source data stream. The F<sub>source</sub><sub><sub2>&#x2014;</sub2></sub><sub>data</sub><sub><sub2>&#x2014;</sub2></sub><sub>rate </sub>and F<sub>virtual</sub><sub><sub2>&#x2014;</sub2></sub><sub>channel</sub><sub><sub2>&#x2014;</sub2></sub><sub>rate </sub>can be determined as described with respect to steps <b>510</b> and <b>530</b>, respectively.</p>
<p id="p-0072" num="0071">In step <b>570</b>, the determined M and N parameters are transmitted to the sink device. For example, if only one pair of M and N parameters were determined for the virtual channel, then that pair of values are transmitted. If multiple pairs of M and N values were determined for the virtual channel, such as separate pairs for video and audio, then substantially all those pairs may be transmitted. The M and N values to be transmitted can be encoded into the packet stream from source device to sink device. In one embodiment, the M and N values are encoded in a header field of a packet carrying data from the source data stream, according to a predetermined format. In another embodiment, M and N values may be communicated through special packets of a predetermined format.</p>
<p id="p-0073" num="0072">In embodiments of the present invention, process <b>500</b> (steps <b>510</b>-<b>570</b>) can be repeated at regular intervals, to update the M and N parameters being communicated to the sink device. In the interval between repetitions of process <b>500</b>, the last computed M and N values can be transmitted at intervals during the existence of the virtual channel.</p>
<p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. 6</figref> illustrates a process <b>600</b> that derives a source data stream rate, according to an embodiment of the present invention. Process <b>600</b> is described here as being executed in a sink device, such as sink device <b>202</b>. However, as noted above, process <b>600</b> can be executed in other devices including intermediate or branch devices if there is a need to recover the source data stream rate.</p>
<p id="p-0075" num="0074">In step <b>610</b>, data from a data stream is received. For example, receive interface <b>410</b> of sink device <b>202</b> can receive a data stream from source device <b>201</b> directly or through one or more intermediate devices <b>204</b>. A receive interface can receive the data stream over an incoming link, such as main link <b>211</b>, performs any physical layer functions such as error correction, and passes the recovered frames to another module, such as link module <b>420</b>.</p>
<p id="p-0076" num="0075">In step <b>620</b>, a module, such as link module <b>420</b> and/or channel processor <b>422</b>, detects a virtual channel in the incoming data stream. For example, link module <b>420</b> can process incoming frames to recover packets, and to detect and remove stuffing packets and symbols. Channel processor <b>422</b> can, for example, process packets having the same channel identifier in the header fields as from the same virtual channel.</p>
<p id="p-0077" num="0076">In step <b>630</b>, rate parameters transmitted from the source device are recovered. For example, the first and second rate parameters (M and N) can be encoded in the header portion of one or more incoming packets. In another embodiment, the M and N parameters can be recovered from separate packets transmitted from the source device. As described with respect to process <b>500</b>, one or more pairs of M and N parameters can be used for recovering the corresponding source data stream clocks.</p>
<p id="p-0078" num="0077">In step <b>640</b>, the link rate is determined. The link rate of the sink device can defer from the link rate of the source device, such as in system <b>200</b> where a branch device <b>204</b> is in between source device <b>201</b> and sink device <b>202</b>. The link rate of the sink device can be determined by the sink device by locking on to the received clock. For example, sink device <b>202</b> can detect its link rate (i.e., the rate at which main link <b>211</b> operates) by locking on to the received clock in the incoming data stream. In an embodiment, a clock source and/or a locking circuit such as a phase lock loop can be used to detect and synchronize to the dock based on which data is received over the link.</p>
<p id="p-0079" num="0078">In step <b>650</b>, the channel rate of the virtual channel is determined. For example, channel processor <b>422</b> and/or link module <b>420</b> can determine the rate at which virtual channel data is received. Prior to determining the channel rate, link module <b>420</b> and/or channel processor <b>422</b> strips away any fill data, for example, inserted by intermediate devices to maintain the transmission of the virtual channel at the predetermined channel rate. For example, source device and/or intermediate devices can insert stuffing packets and fill data to adjust the outgoing channel rate. The determination of the channel rate can be based on locking on to the clock generated by the incoming virtual channel data. In one embodiment, a link clock is used as the reference with which the channel rate is determined by locking on to the clock generated by the incoming virtual channel data.</p>
<p id="p-0080" num="0079">In step <b>660</b>, the source data stream clock, or the source data rate is determined. For example, rate deriver <b>424</b> can receive the M and N parameter values recovered by channel processor <b>422</b>, the link clock determined by link module <b>420</b> and the virtual channel data rate determined by channel processor <b>422</b> and link module <b>420</b>. The received parameters and the determined dock rates can be used to derive the source data rate, in one embodiment the source data rate can be determined using the following calculation:</p>
<p id="p-0081" num="0080">
<maths id="MATH-US-00002" num="00002">
<math overflow="scroll">
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <msub>
          <mi>F</mi>
          <mrow>
            <mrow>
              <mi>source</mi>
              <mo>&#x2062;</mo>
              <mi>_</mi>
              <mo>&#x2062;</mo>
              <mi>data</mi>
            </mrow>
            <mo>&#x2062;</mo>
            <mrow>
              <mi>_</mi>
              <mo>&#x2062;</mo>
              <mi>rate</mi>
            </mrow>
          </mrow>
        </msub>
        <mo>=</mo>
        <mrow>
          <mrow>
            <mo>(</mo>
            <mfrac>
              <mi>M</mi>
              <mi>N</mi>
            </mfrac>
            <mo>)</mo>
          </mrow>
          <mo>&#xd7;</mo>
          <msub>
            <mi>F</mi>
            <mrow>
              <mi>ls</mi>
              <mo>&#x2062;</mo>
              <mi>_</mi>
              <mo>&#x2062;</mo>
              <mi>clk</mi>
            </mrow>
          </msub>
          <mo>&#xd7;</mo>
          <mrow>
            <mo>(</mo>
            <mfrac>
              <msub>
                <mi>F</mi>
                <mrow>
                  <mrow>
                    <mi>virtual</mi>
                    <mo>&#x2062;</mo>
                    <mi>_</mi>
                    <mo>&#x2062;</mo>
                    <mi>chanel</mi>
                  </mrow>
                  <mo>&#x2062;</mo>
                  <mrow>
                    <mi>_</mi>
                    <mo>&#x2062;</mo>
                    <mi>rate</mi>
                  </mrow>
                </mrow>
              </msub>
              <msub>
                <mi>F</mi>
                <mrow>
                  <mi>ls</mi>
                  <mo>&#x2062;</mo>
                  <mi>_</mi>
                  <mo>&#x2062;</mo>
                  <mi>clk</mi>
                </mrow>
              </msub>
            </mfrac>
            <mo>)</mo>
          </mrow>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>2</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
</maths>
</p>
<p id="p-0082" num="0081">where N is the durations corresponding to a predetermined number of cycles of the virtual channel clock, and M is the number of cycles of the source data clock within the interval defined by N. N and M are received parameters from the source device. F<sub>virtual</sub><sub><sub2>&#x2014;</sub2></sub><sub>channel</sub><sub><sub2>&#x2014;</sub2></sub><sub>rate </sub>is the channel rate, which is determined at the sink device. F<sub>ls</sub><sub><sub2>&#x2014;</sub2></sub><sub>clk </sub>is the link rate, which is also determined at the sink device as described with respect to step <b>640</b> above. The F<sub>source</sub><sub><sub2>&#x2014;</sub2></sub><sub>data</sub><sub><sub2>&#x2014;</sub2></sub><sub>rate </sub>can be determined using (2) above. It should be noted in (2) that, any reference clock can be used in place of the link rate (link clock). Also, in some embodiments, such as embodiments in which the channel rate can be independently determined, the source data rate can be determined using only M, N, and the channel rate.</p>
<p id="p-0083" num="0082">Process <b>600</b> can be repeated periodically to recompute the relevant source data stream clock rates. It should also be noted that embodiments of the present invention can implement process <b>600</b> or a similar process to determine relevant source data clock rates using one or more rate parameters received from a source device. The rate parameters received from the source device relate the virtual channel clock rate and the source data clock rate.</p>
<p id="p-0084" num="0083">As described above, the present invention allows a sink device to determine the source data rate of an isochronous data stream, regardless of whether the sink device is directly or indirectly coupled to the source device. By initiating a virtual channel for a source data stream, and then communicating the sink device one or more parameters that relate the channel rate to the source data rate, a source device enables the sink device to recreate the relevant source clocks even when the source device and sink device have different link clocks.</p>
<p id="p-0085" num="0084">Advantages of the present invention compared to conventional approaches include reduced cost and reduced complexity in branch devices and sink devices, short lock durations, increased signal to noise ratio, and the possibility of audio phase alignment between rendering devices. Branch devices are simplified because they are not required to recompute the M and N parameters before passing them on. Sink devices are simplified because no burden is imposed on the sink device other than to determine the virtual channel clock and to compute the required source rates. Also the signal to noise ratio of the received signal is higher because the present invention allows more accurate recovery of the source data rate. Further, phase alignment between rendering devices is made possible because the present invention eliminates variable delay components from the processing path.</p>
<p id="p-0086" num="0085">The Summary and Abstract sections may set forth one or more but not all exemplary embodiments of the present invention as contemplated by the inventor(s), and thus, are not intended to limit the present invention and the appended claims in any way.</p>
<p id="p-0087" num="0086">The present invention has been described above with the aid of functional building blocks illustrating the implementation of specified functions and relationships thereof. The boundaries of these functional building blocks have been arbitrarily defined herein for the convenience of the description. Alternate boundaries can be defined so long as the specified functions and relationships thereof are appropriately performed.</p>
<p id="p-0088" num="0087">The foregoing description of the specific embodiments will so fully reveal the general nature of the invention that others can, by applying knowledge within the skill of the art, readily modify and/or adapt for various applications such specific embodiments, without undue experimentation, without departing from the general concept of the present invention. Therefore, such adaptations and modifications are intended to be within the meaning and range of equivalents of the disclosed embodiments, based on the teaching and guidance presented herein. It is to be understood that the phraseology or terminology herein is for the purpose of description and not of limitation, such that the terminology or phraseology of the present specification is to be interpreted by the skilled artisan in light of the teachings and guidance.</p>
<p id="p-0089" num="0088">The breadth and scope of the present invention should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-math idrefs="MATH-US-00001" nb-file="US08626966-20140107-M00001.NB">
<img id="EMI-M00001" he="7.03mm" wi="76.20mm" file="US08626966-20140107-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00002" nb-file="US08626966-20140107-M00002.NB">
<img id="EMI-M00002" he="7.03mm" wi="76.20mm" file="US08626966-20140107-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for transmitting a source data stream, comprising:
<claim-text>transmitting a stream of packets including a source data stream and two or more rate parameters, wherein the two or more rate parameters relate a data rate of the source data stream to a data rate of the transmitted stream of packets.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>determining the data rate of the stream of packets based on a data rate excluding fill data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>determining a first rate parameter corresponding to a number of cycles of a stream of packets, data rate clock relating to a data rate of the stream of packets; and</claim-text>
<claim-text>determining a second rate parameter corresponding to a number of cycles of a source data stream clock within a first interval, wherein the first interval is determined based on the first rate parameter and the stream of packets, data rate clock, and wherein the source data stream clock relates to the data rate of the source data stream,</claim-text>
<claim-text>wherein the two or more rate parameters include at least the first rate parameter and the second rate parameter.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>the two or more rate parameters are included in one or more packets in the steam of packets.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>receiving the source data stream; and</claim-text>
<claim-text>determining the data rate of the source data stream based on the received source data stream.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>generating the source data stream; and</claim-text>
<claim-text>determining the data rate of the source data stream based on the generated source data stream.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A method, comprising:
<claim-text>receiving a stream of packets;</claim-text>
<claim-text>recovering a source data stream and two or more rate parameters from the received stream of packets;</claim-text>
<claim-text>determining a data rate of the received stream of packets; and</claim-text>
<claim-text>determining a data rate of the source data stream based on the data rate of the received stream of packets and the two or more rate parameters.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising:
<claim-text>determining the data rate of the source data stream is further based on a link rate of an input interface on which the stream of packets is received.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the recovering a source data stream and rate parameters comprises:
<claim-text>detecting a first rate parameter in the received stream of packets; and</claim-text>
<claim-text>detecting a second rate parameter in the received stream of packets,</claim-text>
<claim-text>wherein the first rate parameter and the second rate parameter relate the data rate of the source data stream to the data rate of the stream of packets.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein determining a data rate of the stream of packets comprises:
<claim-text>determining the data rate of the stream of packets based on a data rate excluding fill data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein determining the data rate of the source data stream comprises:
<claim-text>multiplying the data rate of the stream of packets by a ratio of the second rate parameter and the first rate parameter.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the two or more rate parameters are included in one or more packets in the stream of packets.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A device, configured to:
<claim-text>transmit a stream of packets including a source data stream and two or more rate parameters, wherein the two or more rate parameters relate a data rate of the source data stream to a data rate of the transmitted stream of packets.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The device of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further configured to:
<claim-text>determine a first rate parameter corresponding to a number of cycles of a stream of packets, data rate clock relating to a data rate of the stream of packets; and</claim-text>
<claim-text>determine a second rate parameter corresponding to a number of cycles of a source data stream clock within a first interval, wherein the first interval is determined based on the first rate parameter and the stream of packets, data rate clock, and wherein the source data stream clock relates to the data rate of the source data stream,</claim-text>
<claim-text>wherein the two or more rate parameters include at least the first rate parameter and the second rate parameter.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A device, configured to:
<claim-text>receive a stream of packets;</claim-text>
<claim-text>recover a source data stream and two or more rate parameters from the received stream of packets;</claim-text>
<claim-text>determine a data rate of the received stream of packets; and</claim-text>
<claim-text>determine a data rate of the source data stream based on the data rate of the received stream of packets and the two or more rate parameters.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The device of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further configured to:
<claim-text>determine the data rate of the source data stream based further on a link rate of an input interface over which the stream of packets is received.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The device of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further configured to:
<claim-text>detect a first rate parameter in the received stream of packets; and</claim-text>
<claim-text>detect a second rate parameter in the received stream of packets,</claim-text>
<claim-text>wherein the first rate parameter and the second rate parameter relate the data rate of the source data stream to the data rate of the stream of packets.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The device of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further configured to:
<claim-text>multiply the data rate of the stream of packets by a ratio of the second rate parameter and the first rate parameter. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
