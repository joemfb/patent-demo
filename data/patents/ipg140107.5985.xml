<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627105-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627105</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13097205</doc-number>
<date>20110429</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>224</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20130101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>21</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>713189</main-classification>
<further-classification>713193</further-classification>
<further-classification>380 33</further-classification>
<further-classification>380 37</further-classification>
</classification-national>
<invention-title id="d2e53">Method and apparatus for securing programming data of a programmable device</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4609986</doc-number>
<kind>A</kind>
<name>Hartmann et al.</name>
<date>19860900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>4617479</doc-number>
<kind>A</kind>
<name>Hartmann et al.</name>
<date>19861000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>4677318</doc-number>
<kind>A</kind>
<name>Veenstra</name>
<date>19870600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>4713792</doc-number>
<kind>A</kind>
<name>Hartmann et al.</name>
<date>19871200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>4774421</doc-number>
<kind>A</kind>
<name>Hartmann et al.</name>
<date>19880900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>4871930</doc-number>
<kind>A</kind>
<name>Wong et al.</name>
<date>19891000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>4899067</doc-number>
<kind>A</kind>
<name>So et al.</name>
<date>19900200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>4912342</doc-number>
<kind>A</kind>
<name>Wong et al.</name>
<date>19900300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>5033084</doc-number>
<kind>A</kind>
<name>Beecher</name>
<date>19910700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>5081675</doc-number>
<kind>A</kind>
<name>Kittirutsunetorn</name>
<date>19920100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>5121006</doc-number>
<kind>A</kind>
<name>Pedersen</name>
<date>19920600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>5220214</doc-number>
<kind>A</kind>
<name>Pedersen</name>
<date>19930600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>5260610</doc-number>
<kind>A</kind>
<name>Pedersen et al.</name>
<date>19931100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>5260611</doc-number>
<kind>A</kind>
<name>Cliff et al.</name>
<date>19931100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>5350954</doc-number>
<kind>A</kind>
<name>Patel</name>
<date>19940900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>5371422</doc-number>
<kind>A</kind>
<name>Patel et al.</name>
<date>19941200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>5388157</doc-number>
<kind>A</kind>
<name>Austin</name>
<date>19950200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>5450022</doc-number>
<kind>A</kind>
<name>New</name>
<date>19950900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>5479512</doc-number>
<kind>A</kind>
<name>Weiss</name>
<date>19951200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>5513262</doc-number>
<kind>A</kind>
<name>Van Rumpt et al.</name>
<date>19960400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>5548228</doc-number>
<kind>A</kind>
<name>Madurawe</name>
<date>19960800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>5563592</doc-number>
<kind>A</kind>
<name>Cliff et al.</name>
<date>19961000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>5581198</doc-number>
<kind>A</kind>
<name>Trimberger</name>
<date>19961200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>5636281</doc-number>
<kind>A</kind>
<name>Antonini</name>
<date>19970600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>5768372</doc-number>
<kind>A</kind>
<name>Sung et al.</name>
<date>19980600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>5915017</doc-number>
<kind>A</kind>
<name>Sung et al.</name>
<date>19990600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00027">
<document-id>
<country>US</country>
<doc-number>6172520</doc-number>
<kind>B1</kind>
<name>Lawman et al.</name>
<date>20010100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00028">
<document-id>
<country>US</country>
<doc-number>6931543</doc-number>
<kind>B1</kind>
<name>Pang et al.</name>
<date>20050800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713193</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00029">
<document-id>
<country>US</country>
<doc-number>7058177</doc-number>
<kind>B1</kind>
<name>Trimberger et al.</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00030">
<document-id>
<country>US</country>
<doc-number>7162644</doc-number>
<kind>B1</kind>
<name>Trimberger</name>
<date>20070100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713189</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00031">
<document-id>
<country>US</country>
<doc-number>7550324</doc-number>
<kind>B1</kind>
<name>Walstrum et al.</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>438132</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00032">
<document-id>
<country>US</country>
<doc-number>7675313</doc-number>
<kind>B1</kind>
<name>Tang et al.</name>
<date>20100300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>326  8</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00033">
<document-id>
<country>US</country>
<doc-number>2001/0015919</doc-number>
<kind>A1</kind>
<name>Kean</name>
<date>20010800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>365200</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00034">
<document-id>
<country>US</country>
<doc-number>2001/0032318</doc-number>
<kind>A1</kind>
<name>Yip et al.</name>
<date>20011000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00035">
<document-id>
<country>US</country>
<doc-number>2006/0209584</doc-number>
<kind>A1</kind>
<name>Devadas et al.</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>365 52</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00036">
<document-id>
<country>US</country>
<doc-number>2007/0074045</doc-number>
<kind>A1</kind>
<name>Van Essen et al.</name>
<date>20070300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00037">
<othercit>Minnick, R.C., &#x201c;A Survey of Microcellular Research,&#x201d; <i>Journal of the Association for Computing Machinery</i>, vol. 14, No. 2, pp. 203-241 (Apr. 1967).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00038">
<othercit>Wahlstrom, S.E., &#x201c;Programmable logic arrays&#x2014;cheaper by the millions,&#x201d; <i>Electronics</i>, pp. 90-95 (Dec. 11, 1967).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00039">
<othercit>Mukhopadhyay, A., <i>Recent Developments in Switching Theory</i>, Academic Press, New York, Chapters VI and IX, pp. 229-254 and 369-422 (1971).</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>31</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>713189</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713193</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>380 33</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>380 37</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>3</number-of-drawing-sheets>
<number-of-figures>3</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120278632</doc-number>
<kind>A1</kind>
<date>20121101</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Reese</last-name>
<first-name>Dirk A.</first-name>
<address>
<city>Campbell</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Joyce</last-name>
<first-name>JuJu</first-name>
<address>
<city>Sunnyvale</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Reese</last-name>
<first-name>Dirk A.</first-name>
<address>
<city>Campbell</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Joyce</last-name>
<first-name>JuJu</first-name>
<address>
<city>Sunnyvale</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Ropes &#x26; Gray LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>Ingerman</last-name>
<first-name>Jeffrey H.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Altera Corporation</orgname>
<role>02</role>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Darrow</last-name>
<first-name>Justin T</first-name>
<department>2438</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Configuration data for a programmable integrated circuit device is at least partially encrypted according to at least one encryption scheme. A plurality of key stores store a plurality of decryption keys for the at least one encryption scheme. Control circuitry identifies a required key from the at least partially encrypted configuration data and generates a key selection signal. Key selection circuitry responsive to the key selection signal reads the plurality of key stores and provides the required key to the control circuitry. The control circuitry may include decryption circuitry that decrypts the at least partially encrypted configuration data using the required key. In some embodiments, different portions of the configuration data, which may represent separate partial reconfigurations of the device, require different decryption keys. Keys may be generated from combinations of the contents of the key stores.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="100.84mm" wi="188.38mm" file="US08627105-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="220.13mm" wi="203.96mm" file="US08627105-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="201.93mm" wi="123.87mm" orientation="landscape" file="US08627105-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="248.75mm" wi="176.95mm" file="US08627105-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0002" num="0001">This invention relates to a method and an apparatus for securing the programming data of a programmable device&#x2014;e.g., a field-programmable gate array (FPGA) or other programmable logic device (PLD)&#x2014;against copying, and to a programmable device so secured.</p>
<p id="p-0003" num="0002">Programmable devices are well known. In one class of known PLDs, each device has a large number of logic gates, and a user programs the device to assume a particular configuration of those logic gates, frequently using a software tool provided by the manufacturer of the device, with the software tool being executed on a computer having an adapter into which the device is inserted. Early generations of such devices typically used some form of programmable read-only memory (&#x201c;PROM&#x201d;) technology to store the configuration data produced by the software tool. In those early devices, the software tool caused the computer to &#x201c;burn&#x201d; the pattern into the PROM storage by fusing fusible links. In later generations, the PROM technology may have been erasable programmable read-only memory (&#x201c;EPROM&#x201d;) technology, which was not burned, and could be erased (for reprogramming) by exposure to ultraviolet light. Still later generations may have used electrically erasable programmable read-only memory (&#x201c;EEPROM&#x201d; or &#x201c;E<sup>2</sup>PROM&#x201d;) technology.</p>
<p id="p-0004" num="0003">All of those technologies were relatively secure. In the case of a user who chose to use a programmable logic device rather than incur the effort and expense of a developing a custom chip, if a competitor of that user were to try to reverse engineer the programmed programmable logic device, the competitor would essentially have to slice the device layer by layer to discern its programming. While such an effort might be technically feasible, for the types of users being discussed, who by definition are not chip manufacturers, the likelihood that a competitor could or would undertake the effort was small.</p>
<p id="p-0005" num="0004">Later, programmable logic devices that store their configuration data in static random access memory (&#x201c;SRAM&#x201d;) storage became available and remain prevalent. Such devices have the advantage of being smaller and faster than the devices based on EPROM technology.</p>
<p id="p-0006" num="0005">However, SRAM storage is volatile; it does not retain its contents when power is lost. Therefore, programmable logic devices based on SRAM technology are used with nonvolatile storage, to retain the configuration programming data during times that the device is switched off or otherwise not provided with power. Such nonvolatile storage may be provided, for example, in the form of Flash memory, although any form of nonvolatile storage may be used, and it may be either on, or separate from, the device.</p>
<p id="p-0007" num="0006">Whatever type of nonvolatile storage is used, an SRAM programmable logic device having nonvolatile storage of its configuration data is less secure against reverse engineering by a competitor of its user. That is because a competitor can monitor the data flowing out of the nonvolatile storage on power-up, and thereby determine the programming configuration of the programmable logic device. Indeed, the competitor need not even analyze the data stream, but need only record it and store it in its own devices.</p>
<p id="p-0008" num="0007">Commonly-assigned U.S. Pat. Nos. 5,768,372 and 5,915,017, each of which is hereby incorporated by reference herein in its respective entirety, describe the encryption of the configuration data stored in the nonvolatile storage and its decryption upon loading into the programmable device, including provision of an indicator to signal to the decryption circuit which of several possible encryption/decryption schemes was used to encrypt the configuration data and therefore should be used to decrypt the configuration data.</p>
<p id="p-0009" num="0008">Subsequently, the programmable device market has become more sophisticated. Previously a device manufacturer would sell blank programmable devices to an original customer who typically would program them and sell each device as part of an end-user product. Thus, the manufacturer's original customer typically was the only party providing configuration data and therefore the only party needing to protect configuration data. More recently, vendor-provided proprietary configuration data for various commonly-used functions (frequently referred to as &#x201c;intellectual property cores&#x201d;) have been sold either by device manufacturers or third parties, freeing the original customer from having to program those functions on its own. If a party provides such proprietary configuration data, it may want to protect those data from being read, but the original customer needs to be free to add additional proprietary configuration data from another vendor (which also will want to protect its proprietary configuration data), as well as its own configuration data, and then to protect the final configuration including its own configuration data and any vendor-provided configuration data.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0010" num="0009">The present invention relates to circuitry and methods for separately protecting different portions of configuration data of a programmable device using different encryptions (including the option of no encryption) and keys, as well as providing different keys and combinations of keys.</p>
<p id="p-0011" num="0010">Therefore, in accordance with embodiments of the present invention, there is provided a programmable integrated circuit device having an input for configuration data for the programmable integrated circuit device. The configuration data is at least partially encrypted according to at least one encryption scheme. A plurality of key stores store a plurality of decryption keys for the at least one encryption scheme. Control circuitry identifies a required key from the at least partially encrypted configuration data and generates a key selection signal. Key selection circuitry responsive to the key selection signal reads the plurality of key stores and provides the required key to the control circuitry. The control circuitry may include decryption circuitry that decrypts the at least partially encrypted configuration data using the required key.</p>
<p id="p-0012" num="0011">In accordance with additional embodiments of the present invention, the configuration data include a plurality of partial configuration data portions. Respective ones of the plurality of partial configuration data portions are encrypted and require respective decryption keys. The control circuitry identifies respective required keys from the configuration data and generates respective key selection signals. The key selection circuitry reads the plurality of key stores responsive to the respective key selection signal and provides those respective required keys to the control circuitry.</p>
<p id="p-0013" num="0012">Methods of configuring and operating such programmable integrated circuit devices are also provided.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0014" num="0013">Further features of the invention, its nature and various advantages will be apparent upon consideration of the following detailed description, taken in conjunction with the accompanying drawings, in which like reference characters refer to like parts throughout, and in which:</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of a programmable device in which the present invention may be implemented;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram of key selection circuitry according to an implementation of the present invention; and</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 3</figref> is a simplified block diagram of an illustrative system employing a programmable logic device incorporating the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 1</figref> shows a block diagram of a programmable logic device <b>100</b> as an example of a programmable device in which the present invention may be implemented. Programmable logic device <b>100</b> preferably includes nonvolatile storage <b>112</b> which stores the programming data, and an SRAM-based programmable logic core <b>111</b>, having a programming circuit <b>113</b>. SRAM-based programmable logic core <b>111</b> could be an FPGA, where nonvolatile storage <b>112</b> is on a separate die, which may be in a common package with core <b>111</b> or completely separate (and connected only by wires or traces). Alternatively, device <b>100</b> could be a type of PLD in which nonvolatile storage <b>112</b> and core <b>111</b> are on the same die.</p>
<p id="p-0019" num="0018">If the configuration data were not encrypted, then when power would first be applied to programmable logic device <b>100</b>, configuration data stored in nonvolatile storage <b>112</b> would be output over connection <b>130</b> to programmable logic core <b>111</b>. The data preferably would be clocked serially into shift register chain <b>120</b>. Preferably, when shift register chain <b>120</b> is filled, the data in shift register chain <b>120</b> would be transferred over connections <b>121</b> to buffer <b>122</b>, whence they are transferred to &#x201c;columns&#x201d; <b>123</b> of SRAM programming registers which configure the logic structure of programmable logic core <b>111</b>. As data in buffer <b>122</b> are being transferred to columns <b>123</b>, configuration data preferably would continue to be clocked into shift register chain <b>120</b> from nonvolatile storage <b>112</b> (until storage <b>112</b> is empty). By the time shift register chain <b>120</b> is full again, buffer <b>122</b> preferably would be ready to receive data again, preferably allowing an uninterrupted flow of data out of nonvolatile storage <b>112</b> into shift register chain <b>120</b>.</p>
<p id="p-0020" num="0019">However, because encryption of the configuration data may be used to prevent unauthorized interception of the configuration data on connection <b>130</b>, programming circuit <b>113</b> includes a control and decryption block <b>114</b> to select the appropriate key or keys and decrypt the configuration data, as described below.</p>
<p id="p-0021" num="0020">As discussed above, it is desirable to allow different portions of the configuration data to be encrypted separately. For example programming circuit <b>113</b> may allow partial reconfiguration of device <b>100</b>. Thus, in one scenario, an initial configuration may be stored in the nonvolatile configuration storage by the device manufacturer, including certain proprietary configuration data. The purchaser of that device <b>100</b> from the device manufacturer could then use the partial reconfiguration feature to add its own proprietary configuration data without destroying or overwriting the device manufacturer's configuration data. Device <b>100</b> could then be sold to a further purchaser which could then use the partial reconfiguration feature to add the final programming, without destroying or overwriting the device manufacturer's configuration data or the first purchaser's configuration data, and device <b>100</b> could then be incorporated into an end-user product. As an alternative, the device manufacturer could provide its configuration data to the first purchaser on a separate medium and the first purchaser can provide both the manufacturer's configuration data and its own configuration data to the further purchaser on a separate medium. The further purchaser could then input those data from the separate medium into the programming software along with its own programming instructions to create the final configuration. As discussed below, each portion, or partial configuration, can remain separately encrypted.</p>
<p id="p-0022" num="0021">In another scenario, a first company wants to buy a PLD from a first vendor and some intellectual property core or cores from a second vendor. Either the first vendor or the second vendor sells the devices to the first company. Either way, the devices are sold with a preset nonvolatile key, which may be a &#x201c;fuse key,&#x201d; set by blowing selected fuses in a fuse array. Regardless of who set the preset key, the second vendor sells the first company a configuration image encrypted with the preset key. The first company does not know the preset key, so the second vendor's configuration image is secure. The first company then generates its own configuration image, as well as a volatile key which it uses to generate an encrypted version of its own configuration image.</p>
<p id="p-0023" num="0022">The first company then incorporates the device in a final product to be sold to end users, after configuring the device with the second vendor's encrypted configuration image, and then performing a partial reconfiguration to add in the first company's own encrypted configuration image. Both configurations may reside in an on- or off-chip memory device, as described above. Both the first company's proprietary configuration and the second vendor's proprietary configuration remain secure for each of those two companies and from the end users.</p>
<p id="p-0024" num="0023">These sequences of events are only examples and more or fewer intermediate purchasers and reconfigurations may be possible. In any event, in these examples, some or all of the entities providing configuration data may want to protect those configuration data by encryption. To that end, the partial reconfiguration feature may be designed to allow different partial reconfigurations, including the initial configuration itself (which may be a full or partial configuration in accordance with copending, commonly-assigned Gao et al. U.S. patent application Ser. No. 13/085,679, filed Apr. 13, 2011, which is hereby incorporated by reference herein in its entirety), to be either encrypted or unencrypted. A series of control bits corresponding to each partial reconfiguration (including the initial configuration) identifies whether a particular partial reconfiguration is encrypted or not. Thus, in an example where there are two reconfigurations&#x2014;the initial configuration and one partial reconfiguration&#x2014;there may be two control bits as follows (where &#x201c;POF&#x201d; stands for the &#x201c;programmer object file&#x201d; containing the configuration bitstream):</p>
<p id="p-0025" num="0024">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="63pt" align="center"/>
<colspec colname="2" colwidth="56pt" align="left"/>
<colspec colname="3" colwidth="98pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit Sequence</entry>
<entry>Initial POF</entry>
<entry>Partial Reconfiguration POF</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>00</entry>
<entry>Unencrypted</entry>
<entry>Unencrypted</entry>
</row>
<row>
<entry>11</entry>
<entry>Encrypted</entry>
<entry>Encrypted</entry>
</row>
<row>
<entry>01</entry>
<entry>Unencrypted</entry>
<entry>Encrypted</entry>
</row>
<row>
<entry>10</entry>
<entry>Encrypted</entry>
<entry>Unencrypted</entry>
</row>
<row>
<entry>0X</entry>
<entry>Unencrypted</entry>
<entry>User control</entry>
</row>
<row>
<entry>1X</entry>
<entry>Encrypted</entry>
<entry>User control</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
If there are more partial reconfigurations, then there would be a correspondingly greater number of control bits. In cases listed above as being under &#x201c;user control,&#x201d; the indication of whether the partial reconfiguration POF is encrypted or not could come from an external signal applied to a device pin, or from the user logic on device <b>100</b>.
</p>
<p id="p-0026" num="0025">In addition, as described in above-incorporated U.S. Pat. Nos. 5,768,372 and 5,915,017, more than one encryption scheme could be used for the different partial reconfigurations. If so, additional control bits would be provided to indicate which encryption scheme is used for each portion.</p>
<p id="p-0027" num="0026">Regardless of the number of configurations/reconfigurations and encryption schemes, according to other embodiments of the present invention, a plurality of keys may be provided and used individually or combined. For example, a device <b>100</b> according to embodiments of the invention may have three keys&#x2014;a nonvolatile key, a volatile key, and user-inputted key (also volatile) loaded through the programming port (e.g., JTAG port) of device <b>100</b>.</p>
<p id="p-0028" num="0027">The nonvolatile key could be a fuse key&#x2014;i.e., it could be set by blowing selected fuses in a fuse array&#x2014;or could be stored in another nonvolatile storage medium. The volatile key may be stored in volatile memory, which preferably has battery back-up.</p>
<p id="p-0029" num="0028">Whatever the format of the nonvolatile key, it would be particularly well-suited for use by the device manufacturer to protect the manufacturer's own proprietary portion of the configuration data. That would be particularly true of a fuse key implementation. Similarly, the volatile key could be used by the first purchaser, while the loadable key could be used by the second purchaser who, in the three-configuration example above, provides the final configuration for an end-user product (the end-user does not provide any configuration).</p>
<p id="p-0030" num="0029">Key selection could be facilitated in one implementation by providing a key selection circuit <b>115</b> under control of control and decryption block <b>114</b>, as shown in <figref idref="DRAWINGS">FIG. 1</figref> and in more detail in <figref idref="DRAWINGS">FIG. 2</figref>. As seen in <figref idref="DRAWINGS">FIG. 2</figref>, control and decryption block <b>114</b> has access to nonvolatile key storage <b>201</b>, volatile key storage <b>202</b> (which may include battery back-up <b>212</b>), and loadable key storage <b>203</b>. Alternatively, control and decryption block <b>114</b> may be connected directly to the JTAG or similar port <b>213</b> for capture of the loadable key. Control and decryption block <b>114</b>, which would &#x201c;know,&#x201d; based on control bits in the configuration/reconfiguration being loaded which key was required, would generate a key selection signal <b>204</b> which would instruct key selection circuit <b>115</b> to select the appropriate one of the three keys <b>201</b>, <b>202</b>, <b>203</b> to allow decryption of the configuration/reconfiguration being loaded. Those control bits would be expected to be clear data; otherwise, they could not be read until the decryption had occurred.</p>
<p id="p-0031" num="0030">In the implementation just described, where the individual keys are associated with separate configurations/reconfigurations, key selection circuit <b>115</b> could be a simple n:1 multiplexer (in the specific example given, n=3). However, there could be other implementations in which the various keys <b>201</b>, <b>202</b>, <b>203</b> are combined&#x2014;in the same or different ways&#x2014;for loading various ones of the configuration data portions. In such an implementation, key selection circuit <b>115</b> would include the appropriate logic to implement the various combinations that may be called for by signal <b>204</b>. A simple implementation would call for concatenating two or more of the keys <b>201</b>, <b>202</b>, <b>203</b> in a specified order. Another relatively simple implementation would call for combining two or more of the keys <b>201</b>, <b>202</b>, <b>203</b> by a simple logical operation&#x2014;e.g., an exclusive-OR operation.</p>
<p id="p-0032" num="0031">It should be noted that while implementations have been described that include three keys, any number of keys could be provided and could be used individually or combined in different ways, as described.</p>
<p id="p-0033" num="0032">A PLD <b>90</b> programmed according to any embodiment of the present invention may be used in many kinds of electronic devices. One possible use is in a data processing system <b>900</b> shown in <figref idref="DRAWINGS">FIG. 3</figref>. Data processing system <b>900</b> may include one or more of the following components: a processor <b>901</b>; memory <b>902</b>; I/O circuitry <b>903</b>; and peripheral devices <b>904</b>. These components are coupled together by a system bus <b>905</b> and are populated on a circuit board <b>906</b> which is contained in an end-user system <b>907</b>.</p>
<p id="p-0034" num="0033">System <b>900</b> can be used in a wide variety of applications, such as computer networking, data networking, instrumentation, video processing, digital signal processing, or any other application where the advantage of using programmable or reprogrammable logic is desirable. PLD <b>90</b> can be used to perform a variety of different logic functions. For example, PLD <b>90</b> can be configured as a processor or controller that works in cooperation with processor <b>901</b>. PLD <b>90</b> may also be used as an arbiter for arbitrating access to a shared resources in system <b>900</b>. In yet another example, PLD <b>90</b> can be configured as an interface between processor <b>901</b> and one of the other components in system <b>900</b>. It should be noted that system <b>900</b> is only exemplary, and that the true scope and spirit of the invention should be indicated by the following claims.</p>
<p id="p-0035" num="0034">Various technologies can be used to implement PLDs <b>90</b> as described above and incorporating this invention.</p>
<p id="p-0036" num="0035">It will be understood that the foregoing is only illustrative of the principles of the invention, and that various modifications can be made by those skilled in the art without departing from the scope and spirit of the invention. For example, the various elements of this invention can be provided on a PLD in any desired number and/or arrangement. One skilled in the art will appreciate that the present invention can be practiced by other than the described embodiments, which are presented for purposes of illustration and not of limitation, and the present invention is limited only by the claims that follow.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A programmable integrated circuit device comprising:
<claim-text>an input for configuration data for said programmable integrated circuit device, wherein said programmable integrated circuit device is partially reconfigurable by writing an original portion of configuration data into said input and subsequently writing an additional portion of configuration data into said input, said original portion of configuration data being at least partially encrypted according to a first encryption scheme, and said additional portion of configuration data being at least partially encrypted according to a second encryption scheme;</claim-text>
<claim-text>a plurality of key stores that store a plurality of respective keys for at least said first and second encryption schemes;</claim-text>
<claim-text>control circuitry operable to identify required keys from said at least partially encrypted original portion of configuration data and said at least partially encrypted additional portion of configuration data, and operable to generate respective key selection signals; and</claim-text>
<claim-text>key selection circuitry responsive to said respective key selection signals, and operable to read said plurality of key stores and to provide said required keys to said control circuitry; wherein:</claim-text>
<claim-text>said control circuitry includes decryption circuitry operable to decrypt said at least partially encrypted original configuration data and said at least partially encrypted additional portion of configuration data using respective ones of said required keys.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The programmable integrated circuit device of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said key selection circuitry is operable to select said required keys from respective ones of said plurality of key stores.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The programmable integrated circuit device of <claim-ref idref="CLM-00002">claim 2</claim-ref> wherein said key selection circuitry comprises a multiplexer having, as inputs, outputs of said plurality of key stores, a respective output for each of said required keys.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The programmable integrated circuit device of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said key selection circuitry is operable to read at least two of said stored keys from said plurality of key stores and is operable to generate at least one of said required keys from at least two of said stored keys.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The programmable integrated circuit device of <claim-ref idref="CLM-00004">claim 4</claim-ref> wherein:
<claim-text>said key selection circuitry comprises an exclusive-OR gate; and</claim-text>
<claim-text>said key selection circuitry is operable to generate said at least one of said required keys by inputting said at least two of said stored keys into said exclusive-OR gate to perform an exclusive-OR function on said at least two of said stored keys.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The programmable integrated circuit device of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising:
<claim-text>configuration data storage operable to store said configuration data and operable to provide said configuration data to said input; wherein:</claim-text>
<claim-text>said configuration data storage is operable to store said respective ones of said original portion of configuration data and said at least one said additional portion of configuration data in their respective encrypted forms.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The programmable integrated circuit device of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said plurality of keys comprise:
<claim-text>a nonvolatile key;</claim-text>
<claim-text>a volatile key; and</claim-text>
<claim-text>a loadable key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The programmable integrated circuit device of <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein said nonvolatile key is a fuse key.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The programmable integrated circuit device of <claim-ref idref="CLM-00007">claim 7</claim-ref> further comprising battery back-up for said volatile key.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The programmable integrated circuit device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>said programmable integrated circuit device comprises a programmable logic core; and</claim-text>
<claim-text>said control circuitry is operable to provide decrypted configuration data via said input to said programmable logic core.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The programmable integrated circuit device of <claim-ref idref="CLM-00010">claim 10</claim-ref> further comprising configuration data storage operable to store said configuration data and operable to provide said configuration data to said input.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The programmable integrated circuit device of <claim-ref idref="CLM-00011">claim 11</claim-ref> wherein said configuration data storage and said programmable logic core are formed on a single die.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The programmable integrated circuit device of <claim-ref idref="CLM-00011">claim 11</claim-ref> wherein said configuration storage and said programmable logic core are formed on separate dice.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The programmable integrated circuit device of <claim-ref idref="CLM-00013">claim 13</claim-ref> wherein said configuration storage and said programmable logic core are mounted in a single package.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The programmable integrated circuit device of <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein said programmable logic core is a field-programmable gate array.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A programmable integrated circuit device comprising:
<claim-text>control circuitry;</claim-text>
<claim-text>a plurality of key stores operable to store a plurality of keys;</claim-text>
<claim-text>key selection circuitry; and</claim-text>
<claim-text>an input for configuration data for said programmable integrated circuit device, said configuration data including a plurality of partial configuration data portions; wherein:</claim-text>
<claim-text>each one of said partial configuration data portions after an initial one of said partial configuration data portion is input as a reconfiguration of a previous partial configuration;</claim-text>
<claim-text>respective ones of said plurality of partial configuration data portions are encrypted and require respective keys;</claim-text>
<claim-text>said control circuitry is operable to identify respective required keys from control data in said configuration data and is operable to generate respective key selection signals; and</claim-text>
<claim-text>said key selection circuitry is operable to read said plurality of key stores responsive to said respective key selection signal and is operable to provide said respective required keys to said control circuitry.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The programmable integrated circuit device of <claim-ref idref="CLM-00016">claim 16</claim-ref> wherein said plurality of keys comprise:
<claim-text>a nonvolatile key;</claim-text>
<claim-text>a volatile key; and</claim-text>
<claim-text>a loadable key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The programmable integrated circuit device of <claim-ref idref="CLM-00017">claim 17</claim-ref> wherein said nonvolatile key is a fuse key.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The programmable integrated circuit device of <claim-ref idref="CLM-00018">claim 18</claim-ref> further comprising battery back-up for said volatile key.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The programmable integrated circuit device of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein:
<claim-text>said programmable integrated circuit device comprises a programmable logic core; and</claim-text>
<claim-text>said control circuitry is operable to provide decrypted configuration data via said input to said programmable logic core.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The programmable integrated circuit device of <claim-ref idref="CLM-00020">claim 20</claim-ref> further comprising configuration data storage operable to store said configuration data and operable to provide said configuration data to said input.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The programmable integrated circuit device of <claim-ref idref="CLM-00021">claim 21</claim-ref> wherein said configuration data storage and said programmable logic core are formed on a single die.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The programmable integrated circuit device of <claim-ref idref="CLM-00021">claim 21</claim-ref> wherein said configuration data storage and said programmable logic core are formed on separate dice.</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The programmable integrated circuit device of <claim-ref idref="CLM-00023">claim 23</claim-ref> wherein said configuration storage and said programmable logic core are mounted in a single package.</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The programmable integrated circuit device of <claim-ref idref="CLM-00020">claim 20</claim-ref> wherein said programmable logic core is a field-programmable gate array.</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. A method of configuring a programmable integrated circuit device comprising:
<claim-text>storing an original portion of partial configuration data for said programmable integrated circuit device, and an additional portion of partial configuration data for reconfiguring said programmable integrated circuit device as configured by said original portion of partial configuration data, in nonvolatile storage, said original portion of partial configuration data being at least partially encrypted according to a first encryption scheme, and said additional portion of configuration data being at least partially encrypted according to a second encryption scheme; and</claim-text>
<claim-text>storing a plurality of respective keys for at least said first and second encryption schemes in respective ones of a plurality of key stores on said programmable integrated circuit device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The method of <claim-ref idref="CLM-00026">claim 26</claim-ref> wherein said at least one key comprises one of:
<claim-text>a nonvolatile key;</claim-text>
<claim-text>a volatile key; and</claim-text>
<claim-text>a loadable key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. The method of <claim-ref idref="CLM-00027">claim 27</claim-ref> wherein:
<claim-text>said at least one key is a nonvolatile key; and</claim-text>
<claim-text>said nonvolatile key is a fuse key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. A method of operating a programmable integrated circuit device in which configuration data of said integrated circuit device is encrypted, said method comprising:
<claim-text>reading control data associated with said configuration data; and</claim-text>
<claim-text>based on said control data, selecting a key to decrypt said configuration data; wherein said key is selected from one of:</claim-text>
<claim-text>(a) a nonvolatile key;</claim-text>
<claim-text>(b) a volatile key;</claim-text>
<claim-text>(c) a loadable key; and</claim-text>
<claim-text>(d) a combination generated from at least two of said nonvolatile key, said volatile key and said loadable key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00030" num="00030">
<claim-text>30. The method of <claim-ref idref="CLM-00029">claim 29</claim-ref> wherein:
<claim-text>portions of said configuration data are separately encrypted;</claim-text>
<claim-text>said reading comprises reading control data associated with each of said portions; and</claim-text>
<claim-text>said selecting comprises selecting a separate key to decrypt said configuration data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00031" num="00031">
<claim-text>31. The method of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein each said separate key is separately selected from one of:
<claim-text>(a) said nonvolatile key;</claim-text>
<claim-text>(b) said volatile key;</claim-text>
<claim-text>(c) said loadable key; and</claim-text>
<claim-text>(d) a separate combination separately generated from at least two of said nonvolatile key, said volatile key and said loadable key. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
