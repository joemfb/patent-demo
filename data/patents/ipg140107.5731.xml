<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626835-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626835</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12909822</doc-number>
<date>20101021</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>505</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>16</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>709204</main-classification>
<further-classification>709223</further-classification>
<further-classification>709225</further-classification>
</classification-national>
<invention-title id="d2e53">Social identity clustering</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>2004/0267686</doc-number>
<kind>A1</kind>
<name>Chayes et al.</name>
<date>20041200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2005/0171955</doc-number>
<kind>A1</kind>
<name>Hull et al.</name>
<date>20050800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2006/0274062</doc-number>
<kind>A1</kind>
<name>Zhang et al.</name>
<date>20061200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345420</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2007/0112761</doc-number>
<kind>A1</kind>
<name>Xu et al.</name>
<date>20070500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  5</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2008/0040475</doc-number>
<kind>A1</kind>
<name>Bosworth et al.</name>
<date>20080200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2009/0319436</doc-number>
<kind>A1</kind>
<name>Andra et al.</name>
<date>20091200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2010/0017431</doc-number>
<kind>A1</kind>
<name>Schmidt et al.</name>
<date>20100100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707102</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2011/0137932</doc-number>
<kind>A1</kind>
<name>Wable</name>
<date>20110600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2011/0196855</doc-number>
<kind>A1</kind>
<name>Wable et al.</name>
<date>20110800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2012/0001919</doc-number>
<kind>A1</kind>
<name>Lumer</name>
<date>20120100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>345440</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00011">
<othercit>Page et al., &#x201c;The PageRank Citation Ranking: Bringing Order to the Web&#x201d;. Technical Report, Stanford InfoLab, 1999.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>19</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>709204</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709223</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709225</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707  1</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707  6</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707102</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345420</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>345440</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>4</number-of-drawing-sheets>
<number-of-figures>6</number-of-figures>
</figures>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Gyongyi</last-name>
<first-name>Zoltan I.</first-name>
<address>
<city>Menlo Park</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Heymans</last-name>
<first-name>Maureen</first-name>
<address>
<city>San Francisco</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Lopyrev</last-name>
<first-name>Mikhail</first-name>
<address>
<city>San Francisco</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Roehrig</last-name>
<first-name>Hein</first-name>
<address>
<city>San Francisco</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Gyongyi</last-name>
<first-name>Zoltan I.</first-name>
<address>
<city>Menlo Park</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Heymans</last-name>
<first-name>Maureen</first-name>
<address>
<city>San Francisco</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Lopyrev</last-name>
<first-name>Mikhail</first-name>
<address>
<city>San Francisco</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Roehrig</last-name>
<first-name>Hein</first-name>
<address>
<city>San Francisco</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Fish &#x26; Richardson P.C.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Google Inc.</orgname>
<role>02</role>
<address>
<city>Mountain View</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Chan</last-name>
<first-name>Wing F</first-name>
<department>2441</department>
</primary-examiner>
<assistant-examiner>
<last-name>Thieu</last-name>
<first-name>Benjamin M.</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Methods, systems, and apparatus, including computer programs encoded on computer storage media, for social identity clustering. In one aspect, a method includes receiving a connection graph representing public social data, where the nodes represent social identities and each edge is either a &#x201c;me&#x201d; edge between identities claimed to belong to the same person or a &#x201c;friend&#x201d; edge between identities claimed to belong to different identities. The method further includes converting the graph to a cluster graph in which each node initially corresponds to a single node of the connection graph. The method further includes updating the cluster graph by iteratively merging cluster nodes based on an analysis of the weight of the &#x201c;me&#x201d; edges connecting them, and then replacing the merged cluster nodes within the graph with a new cluster node containing the merged cluster nodes, where the edges of the new cluster node are the aggregated edges of the merged cluster nodes.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="234.70mm" wi="151.21mm" file="US08626835-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="254.34mm" wi="183.39mm" file="US08626835-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="255.95mm" wi="159.09mm" file="US08626835-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="262.47mm" wi="160.95mm" file="US08626835-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="260.10mm" wi="191.26mm" file="US08626835-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">This specification relates to processing public social connection information.</p>
<p id="p-0003" num="0002">With the proliferation of online social sites (web sites with social features), a typical user may maintain several user accounts across multiple social sites. Knowledge of a user's set of social identities (different identities used by the user on different social sites) is useful for improving the performance of applications that process and present information to users. Typically, an online social service determines additional identities of a user from information the user has provided explicitly, but a user may not provide a full list of all the user's alternate identities to any particular social service.</p>
<p id="p-0004" num="0003">Many social web sites allow users to list their additional accounts and various social connections publicly, and the social web sites also annotate the users' public information with such user data using markup such as XHTML Friends Network (XFN) or Friend of a Friend Project (FOAF) markup. Such annotation makes it possible for social information to be collected from different social web sites by a web crawler. Since a large amount of such user data is publicly available, and public information is largely unverified, it is difficult to identify all of the social accounts belonging to one user from collected public social account information.</p>
<heading id="h-0002" level="1">SUMMARY</heading>
<p id="p-0005" num="0004">This specification describes technologies relating to identification of social identities of an individual based on an analysis of collected public social information.</p>
<p id="p-0006" num="0005">In general, one aspect of the subject matter described in this specification can be embodied in methods that include the actions of receiving a connection graph representing public social data that include identity data and social link data, where the connection graph is composed of nodes and directed edges connecting the nodes, where each node represents an identity extracted from the public social data and each edge represents a social link extracted from the public social data, and where each edge is either a &#x201c;me&#x201d; edge if the edge represents a &#x201c;me&#x201d; social link between identities asserted by the link author to belong to the same user, or a &#x201c;friend&#x201d; edge if the edge represents a &#x201c;friend&#x201d; social link between identities asserted by the link author to belong to different users; converting the connection graph to a cluster graph where a cluster initially corresponds to a single node of the connection graph and each edge of the cluster graph initially corresponds to a single edge of the connection graph; and clustering identities by iteratively grouping cluster nodes based on the weighting of &#x201c;me&#x201d; edges connecting the cluster nodes.</p>
<p id="p-0007" num="0006">In embodiments, iteratively grouping cluster nodes includes the actions of identifying all outgoing &#x201c;me&#x201d; edges from a first cluster and all &#x201c;me&#x201d; edges to a second cluster, where each &#x201c;me&#x201d; edge has a respective weight; and, in response to determining that the weights of all &#x201c;me&#x201d; edges from the first cluster to the second cluster are more than a threshold fraction of the weights of all outgoing &#x201c;me&#x201d; edges from the first cluster, merging the first cluster and the second cluster to form a new cluster, and replacing the first and second cluster in the cluster graph with the new cluster, where the edges of the new cluster are aggregations of the edges of the former first cluster and the edges of the former second cluster, and where the new cluster represents the identities of the former first cluster and the identities of the former second cluster.</p>
<p id="p-0008" num="0007">The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 1A</figref> is an illustration of an example scenario of the multiple public social web sites on which users maintain accounts.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 1B</figref> is a graph of the discovered social data from the example scenario.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 2</figref> is a flow diagram of an example method for performing identity clustering.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 3</figref> is a flow diagram of an example method for deciding which &#x201c;me&#x201d; edges to activate.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 4</figref> is a flow diagram of an example method for grouping nodes within a connection graph into a cluster node.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 5</figref> is a drawing of an example scenario for generating a cluster node and updating a connection graph.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 1A</figref> illustrates an example scenario of the multiple public social web sites on which two web users, Katherine <b>105</b> and Anne <b>115</b>, maintain accounts. Katherine <b>105</b> has two social accounts: &#x201c;kat82&#x201d; <b>135</b><i>a </i>on twitter.com <b>120</b> and &#x201c;katherine.b&#x201d; <b>135</b><i>b </i>on friendfeed.com <b>130</b>. Anne <b>115</b> has a photo account &#x201c;annie.photo&#x201d; <b>145</b> on Picasa <b>140</b>. Katherine <b>105</b> decides to update her FriendFeed account profile. She provides her &#x201c;kat82&#x201d; <b>135</b><i>a </i>Twitter account as an alternate identity and adds Anne's &#x201c;annie.photo&#x201d; <b>145</b> Picasa account to her friends list <b>132</b>. FriendFeed annotates profile pages with XFN markup with this user data, which allows web crawlers and search engines to extract Katherine's social account data from Katherine's FriendFeed profile page if she makes the page public.</p>
<p id="p-0016" num="0015">Types of users' social data that may be discovered from markup on social web pages include user pages (<b>120</b> <b>130</b> and <b>140</b>) as well as social connections (links) (<b>125</b>, <b>155</b>) between the pages. Discovered social data may be expressed as a directed graph (connection graph) in which the user identities represented by the user pages are the nodes and the social links between pages are the edges.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 1B</figref> depicts a connection graph <b>160</b> of Katherine's and Anne's public social data. The identities represented by nodes A, B, and C are as follows and can be named by uniform resource locators (URLs) of the form shown:
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0017">(A) http://twitter.com/kat82</li>
        <li id="ul0002-0002" num="0018">(B) http://friendfeed.com/Katherine</li>
        <li id="ul0002-0003" num="0019">(C) http://picasaweb.google.com/annie.photo.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0018" num="0020">The links <b>125</b> and <b>155</b> are the edges (B, me, A) <b>165</b> and (B, friend, C) <b>175</b>. The edge (B, me, A) <b>165</b> is marked as a &#x201c;me&#x201d; edge&#x2014;it is denoted &#x201c;(A, me, B)&#x201d;&#x2014;and the edge (B, friend, C) <b>175</b> is marked as a &#x201c;friend&#x201d; edge based on the collected social data. A &#x201c;me&#x201d; link connects pages asserted to belong to the same user, while a &#x201c;friend&#x201d; link connects pages asserted to belong to different users.</p>
<p id="p-0019" num="0021">An identity on a social site may be prepared by a multitude of web pages, each page having a different URL. The social site marks the pages as belonging to one social identity. A social site can assign a canonical name to a social identity (e.g., the URL of a main page or user profile page). A social connection graph <b>160</b> may be used to identify the social identities belonging to one individual. Identity clustering can be used to facilitate harnessing the social content associated with a person in order to improve web content processing applications such as presentation of relevant search results in response to a search query, grouping and presenting the online activity associated with a person, and discovering and recommending possible connections.</p>
<p id="p-0020" num="0022"><figref idref="DRAWINGS">FIG. 2</figref> is a flow diagram of an example method <b>200</b> for performing identity clustering on a social connection graph that is derived from collected, publicly available, user social data. For convenience, the method <b>200</b> will be described with respect to a system that includes one or more computing devices and performs the method <b>200</b>.</p>
<p id="p-0021" num="0023">The system receives <b>205</b> a connection graph representing social connection data that has been collected from users' public information (e.g., user information collected from social sites and public web pages). The system cleans <b>210</b> the graph in order to identify and remove erroneous nodes and edges. Since social sites do not necessarily check if an alternate identity is really controlled by the claimant, one type of error that may be detected is that a web page will claim a non-existent relationship with another web page.</p>
<p id="p-0022" num="0024">One indicator that an actual &#x201c;me&#x201d; relationship exists between two identities is the presence of bidirectional (or reciprocal) &#x201c;me&#x201d; edges between the nodes representing the identities within a connection graph. Turning to the example of <figref idref="DRAWINGS">FIG. 1A</figref>, Katherine <b>105</b> may also decide to list her FriendFeed profile page <b>130</b> as her homepage on Twitter <b>120</b>. Since Twitter, like FriendFeed, automatically annotates pages with XFN, another connection (A, me, B) would be extracted by a web crawler and result in a bidirectional &#x201c;me&#x201d; connection between nodes A and B on the connection graph. Because some users may not be permitted to declare all of their alternate identities (e.g., a social site may only allow for a single homepage link on the user profile page), the presence of a bidirectional &#x201c;me&#x201d; edge between nodes can be used as an indicator to verify a user's alternate identities that are represented by a connection graph.</p>
<p id="p-0023" num="0025">Another type of error that may be detected is edges erroneously marked as &#x201c;me&#x201d; links due to mistakes in how users or social site operators annotate social content. For example, assume that, due to a programming error, every single new article page on a news website is annotated with a &#x201c;me&#x201d; link to the site's main page. This would result in a connection graph showing hundreds of alternate identities for the identity of the news website, and that should signal an error since it can be safely assumed that a single user is unlikely to have that many alternate identities. The news website is not a social website in its nature, nor do these links represent true social &#x201c;me&#x201d; relationships, but the connection graph would represent them as such because of the incorrect annotations.</p>
<p id="p-0024" num="0026">In some implementations, erroneous nodes and edges are detected either by manual inspection or by automatic detection processes that are triggered by anomalous conditions, or by a combination of both methods. In the above example, the thousands of incoming &#x201c;me&#x201d; links would be recognized as an anomalous link structure. Being associated with an anomalous link structure would flag a node such as the news website as possibly being an erroneous node. Detected erroneous nodes may be added to one or more exclusion lists, and the cleaning <b>210</b> may include checking the graph nodes against the exclusion lists and removing any nodes that should be disregarded.</p>
<p id="p-0025" num="0027">In some implementations, cleaning <b>210</b> further may include checking the number of incoming and outgoing &#x201c;me&#x201d; edges of every node in the graph remaining after removal of erroneous nodes, and removing (along with their incident edges) nodes with an in-degree or an out-degree that is above a predetermined threshold. For example, assume nodes A, B, and C respectively have 90, 17, 11 incoming edges and 45, 28, 6 outgoing edges. Assume that an in-degree threshold TI is 30, and an out-degree threshold TO is 20. A and its edges will be removed because its in-degree and out-degree exceed both thresholds; B and its edges will be removed because its out-degree exceeds TO, and C will not be removed from the graph by operation of this test.</p>
<p id="p-0026" num="0028">The system performs identity clustering by iteratively merging (i.e., clustering) nodes that are connected by &#x201c;me&#x201d; edges. Initially, a node-level connection graph is converted <b>215</b> to a cluster-level graph by assigning an ID (e.g., a numerical ID) to each node. After conversion, each node initially is viewed as a cluster of one, and a cluster node may grow in size as more and more evidence is found of identities that belong to the same user.</p>
<p id="p-0027" num="0029">Conversion <b>215</b> to a cluster-level graph also includes assignment of initial weights to the &#x201c;me&#x201d; edges within the graph. A weight assigned to an edge corresponds to a confidence measure of the validity of the edge (e.g., how reputable the social web site operator is recognized to be, how likely it is that the link may have been added in error by a user, how likely it is that the link is outdated) and of the similarity of the user account characteristics (e.g., whether the user names of two connected accounts have partial or fully matching components, and whether two connected accounts have matching pieces of account profile and/or biographical information).</p>
<p id="p-0028" num="0030">In some implementations, the initial weight of an edge is set within a [0.0, 1.0] range, and is a product of two factors: R, a value representing a degree of confidence in the reputability of the social site that provided the corresponding user data; and S, a value representing a degree of textual similarity between user names of the identities associated with the incident nodes. In some implementations, the R value may be retrieved from a list that contains confidence values for social web sites. The S value either may be set to one of a small number of values (e.g., set to 1.0 if names match and set to 0.5 if there is no match) or, alternatively, may be calculated as a function of a measure of similarity (e.g., edit distance).</p>
<p id="p-0029" num="0031">The system examines the weighting of the &#x201c;me&#x201d; edges within a graph to decide <b>220</b> if edges within the graph can be activated. Initially, all &#x201c;me&#x201d; edges are inactive. <figref idref="DRAWINGS">FIG. 3</figref> is a flow diagram of an example method <b>300</b> for deciding which &#x201c;me&#x201d; edges to activate. The relative weights of a cluster's incoming and outgoing &#x201c;me&#x201d; edges are examined <b>305</b>, and if a predetermined portion of the weights are associated with edges that connect that cluster to a single neighboring cluster, the edges are activated <b>310</b>. For example, if more than 90% of the total outgoing &#x201c;me&#x201d; edge weight of cluster #<b>1</b> is over one or more edges connecting it to cluster #<b>2</b>, all of the outgoing edges from #<b>1</b> to #<b>2</b> are activated. Edges remain inactive <b>320</b> if their relative weights do not satisfy the decision criteria.</p>
<p id="p-0030" num="0032">If activated edges are present <b>225</b>, the nodes connected by the activated edges are merged into a cluster node <b>230</b>.</p>
<p id="p-0031" num="0033"><figref idref="DRAWINGS">FIG. 4</figref> is a flow diagram of an example method <b>400</b> for grouping nodes within a connection graph into a cluster node. <figref idref="DRAWINGS">FIG. 5</figref> is an illustration of an example scenario for grouping nodes to form a cluster node and updating a cluster graph. Method <b>400</b> will be discussed in reference to the scenario illustrated in <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0032" num="0034">In <figref idref="DRAWINGS">FIG. 5</figref>, the directed graph <b>500</b> contains four &#x201c;me&#x201d; edges (<b>502</b> and <b>504</b><i>a</i>-<i>c</i>). Of those &#x201c;me&#x201d; edges, three (<b>504</b><i>a</i>-<i>c</i>) are activated: (#<b>1</b>, #<b>2</b>), (#<b>2</b>, #<b>6</b>), and (#<b>6</b>, #<b>7</b>). Edge (#<b>6</b>, #<b>9</b>) <b>502</b> was not activated because its associated weight was not greater than the predetermined threshold value.</p>
<p id="p-0033" num="0035">In method <b>400</b>, an undirected graph <b>510</b> of activated edges and incident nodes is generated <b>405</b> from the connection graph. A set of connected (<b>514</b> <i>a</i>-<i>c</i>) nodes within the undirected graph <b>510</b> is identified <b>410</b> as a cluster. In the example scenario, connected nodes #<b>1</b>, #<b>2</b>, #<b>6</b>, and #<b>7</b> are grouped into a cluster. A cluster node <b>520</b> is created and assigned <b>415</b> a new node ID (<b>522</b>). In some implementations, nodes are given numerical IDs and a convention for assigning a new cluster ID is to assign the cluster node the smallest numerical ID of the nodes within the cluster. In the scenario, the nodes have numerical IDs and the cluster node <b>520</b> is assigned the ID of #<b>1</b>, the smallest numerical ID of the nodes within the cluster.</p>
<p id="p-0034" num="0036">The system updates <b>235</b> the connection graph by replacing the grouped smaller nodes with the cluster node. The edges of the cluster node become the aggregated edges of the nodes within the cluster. Each aggregated edge will be assigned a weight that is the sum of the weights of the edges it aggregates. In the updated graph <b>530</b> in the scenario, cluster node #<b>1</b> has replaced nodes #<b>1</b>, #<b>2</b>, #<b>6</b>, and #<b>7</b>, and there now is a &#x201c;me&#x201d; edge from the cluster to node #<b>9</b> replacing the (#<b>6</b>, #<b>9</b>) &#x201c;me&#x201d; edge in graph <b>500</b>.</p>
<p id="p-0035" num="0037">The system examines the weighting of the &#x201c;me&#x201d; edges in the updated graph <b>530</b> to decide <b>220</b> if there are any edges to activate. Thus, cluster nodes containing groups of related nodes may grow in size based on the presence of activated edges (which represent strong &#x201c;me&#x201d; connections) discovered within the graph. The clustering of nodes within a graph is completed when no more edges can be activated <b>225</b>.</p>
<p id="p-0036" num="0038">The system maintains node-to-cluster and cluster-to-node mappings, and updates these mappings as smaller nodes are grouped into larger cluster nodes. A node-to-cluster mapping associates a node with the cluster to which it belongs. A cluster-to-node mapping associates a cluster with the nodes it contains. Optionally, these mappings can provide the final output <b>240</b> of the process after clustering is complete. In some implementations, the node-to-cluster mappings and cluster-to-node mappings may be expressed as separate lists.</p>
<p id="p-0037" num="0039">Identity clustering may be implemented within a distributed environment. One example distributed implementation technique is MapReduce. The term MapReduce describes both a programming model and an implementation of the model for processing and generating large data sets. Using MapReduce, programmers specify a map function that processes input (key, value) pairs to generate a set of intermediate (key, value) pairs, and a reduce function that merges all intermediate values associated with the same intermediate key. Programs written in this functional style can automatically be parallelized and executed on a large cluster of commodity computers. The runtime system or framework can be implemented to partition the input data, schedule the program's execution across a set of machines, handle machine failures, and manage the required inter machine communication.</p>
<p id="p-0038" num="0040">Typically, several map tasks operate independently on different processors (e.g., on different computing devices) and on different portions of input data. Similarly, several reduce tasks operate independently on a portion of the intermediate data. The portions of the intermediate data are partitioned according to the intermediate keys so that the same reducer operates on all values for a given intermediate key.</p>
<p id="p-0039" num="0041">An implementation of method <b>200</b> as a set of MapReduce programs is below. Each bullet point represents a separate program; there are one or more programs for each action of method <b>200</b>.</p>
<p id="p-0040" num="0042">Clean the Input Social Graph <b>210</b>:
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0000">
    <ul id="ul0004" list-style="none">
        <li id="ul0004-0001" num="0043">Retrieve the social graph of nodes and connecting &#x201c;me&#x201d; edges (represented as node adjacency lists) from a source data store.</li>
        <li id="ul0004-0002" num="0044">From the graph, remove edges with at least one incident node that appears on the exclusion list.</li>
        <li id="ul0004-0003" num="0045">From the graph, remove isolated nodes (without incoming or outgoing edges) and nodes with an in- or out-degree above a respective in- or out-threshold.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0041" num="0046">Assign Initial Cluster IDs to Nodes, Convert the Node-Level Graph to the Initial Cluster-Level Graph <b>215</b>:
<ul id="ul0005" list-style="none">
    <li id="ul0005-0001" num="0000">
    <ul id="ul0006" list-style="none">
        <li id="ul0006-0001" num="0047">Using the graph, generate a list NC of initial node-to-cluster mappings.</li>
        <li id="ul0006-0002" num="0048">Using the initial node-to-cluster mappings, generate initial (trivial) cluster-to-node mappings (with each cluster consisting of one node only) (list CN).</li>
        <li id="ul0006-0003" num="0049">Using the graph and the node-to-cluster mappings, generate a new graph G with nodes replaced by cluster IDs.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0042" num="0050">Decide if any Edges can be Activated in the Cluster-Level Graph <b>220</b>:
<ul id="ul0007" list-style="none">
    <li id="ul0007-0001" num="0000">
    <ul id="ul0008" list-style="none">
        <li id="ul0008-0001" num="0051">Using the graph G, generate a list AE of active edges by checking the in- and out-weights of cluster edges, and identifying and activating edges above weight thresholds.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0043" num="0052">Compute the Connected Components of the Undirected Graph of Activated Edges <b>230</b>:
<ul id="ul0009" list-style="none">
    <li id="ul0009-0001" num="0000">
    <ul id="ul0010" list-style="none">
        <li id="ul0010-0001" num="0053">Using the list AE of active edges, generate undirected graph U for connected component computation.</li>
        <li id="ul0010-0002" num="0054">Using the undirected graph U, output each cluster's current ID to all its neighbors. Then compute each cluster's new ID as the minimum of its current cluster ID and the received cluster IDs; and generate a list CU of current cluster ID to new cluster ID mappings.</li>
        <li id="ul0010-0003" num="0055">In the event that some new cluster ID differs from current one: Update NC by replacing current cluster IDs with new ones.</li>
        <li id="ul0010-0004" num="0056">In the event that some new cluster ID differs from current one: Using the current-to-new cluster ID mappings CU, update the undirected graph U by collapsing (smaller) old clusters into (larger) new ones. Go back to repeatedly executing the previous two MapReduce steps using the updated graph.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0044" num="0057">Collapse the Cluster-Level Graph to Correspond to the New Clusters <b>235</b>:
<ul id="ul0011" list-style="none">
    <li id="ul0011-0001" num="0000">
    <ul id="ul0012" list-style="none">
        <li id="ul0012-0001" num="0058">Using NC, update CN.</li>
        <li id="ul0012-0002" num="0059">Using NC, start updating G by replacing old clusters IDs by new ones.</li>
        <li id="ul0012-0003" num="0060">Finish updating G by merging separate adjacency lists, for old clusters that were collapsed, into a single one, for the corresponding new cluster.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0045" num="0061">Produce Final Output of Node-to-Cluster and Cluster-to-Nodes Mapping <b>240</b>:
<ul id="ul0013" list-style="none">
    <li id="ul0013-0001" num="0000">
    <ul id="ul0014" list-style="none">
        <li id="ul0014-0001" num="0062">Write NC to the destination data store.</li>
        <li id="ul0014-0002" num="0063">Write CN to the destination data store.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0046" num="0064">Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus. Alternatively or in addition, the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. A computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Moreover, while a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal. The computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).</p>
<p id="p-0047" num="0065">The operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.</p>
<p id="p-0048" num="0066">The term &#x201c;data processing apparatus&#x201d; encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations, of the foregoing The apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.</p>
<p id="p-0049" num="0067">A computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.</p>
<p id="p-0050" num="0068">The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).</p>
<p id="p-0051" num="0069">Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such devices. Moreover, a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.</p>
<p id="p-0052" num="0070">To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. In addition, a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a web browser on a user's client device in response to requests received from the web browser.</p>
<p id="p-0053" num="0071">Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (&#x201c;LAN&#x201d;) and a wide area network (&#x201c;WAN&#x201d;), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).</p>
<p id="p-0054" num="0072">The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) can be received from the client device at the server.</p>
<p id="p-0055" num="0073">While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any inventions or of what may be claimed, but rather as descriptions of features specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.</p>
<p id="p-0056" num="0074">Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.</p>
<p id="p-0057" num="0075">Thus, particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In certain implementations, multitasking and parallel processing may be advantageous.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer-implemented method executed using one or more processors, the method comprising:
<claim-text>receiving, by the one or more processors, a connection graph representing public social data comprising identity data and social link data, wherein the connection graph comprises nodes and directed edges, each edge connecting a pair of nodes, wherein each node represents an identity extracted from the public social data and each edge represents a social link extracted from the public social data from one identity to another different identity, wherein each node represents a distinct identity, and wherein each edge is a &#x201c;me&#x201d; edge if the edge represents a &#x201c;me&#x201d; social link between identities claimed by a link author as belonging to the same person or real-life entity, and a &#x201c;friend&#x201d; edge represents a &#x201c;friend&#x201d; social link between identities claimed by a link author as belonging to different persons or entities;</claim-text>
<claim-text>converting, at the one or more processors, the connection graph to a cluster graph, the cluster graph comprising clusters and cluster edges, each edge connecting a pair of clusters, each cluster corresponding to one or more nodes of the connection graph, and each edge of the cluster graph corresponding to one or more edges of the connection graph, wherein each cluster of the cluster graph initially corresponds to a single node of the connection graph and each edge of the cluster graph initially corresponds to a single edge of the connection graph; and</claim-text>
<claim-text>clustering, at the one or more processors, identities by iteratively performing the following actions (i) and (ii) until no pair of clusters exists in the cluster graph that satisfies the threshold fraction condition of action (ii):
<claim-text>(i) identifying all outgoing &#x201c;me&#x201d; edges from a first cluster and all &#x201c;me&#x201d; edges to a second cluster, wherein each &#x201c;me&#x201d; edge has a respective weight; and</claim-text>
<claim-text>(ii) determining that the weights of all &#x201c;me&#x201d; edges from the first cluster to the second cluster are more than a threshold fraction of the weights of all outgoing &#x201c;me&#x201d; edges from the first cluster and as a consequence merging the first cluster and the second cluster to form a new cluster replacing the first and second clusters, wherein the edges of the new cluster node are aggregations of the edges of the former first cluster and the edges of the former second cluster, and wherein the new cluster represents the identities of the former first cluster and the identities of the former second cluster.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising assigning weights to &#x201c;me&#x201d; edges, wherein a weight assigned to a &#x201c;me&#x201d; edge from a first node to a second node is determined from a reputation value assigned to the first node and a measure of textual similarity between a user name associated with the identity represented by the first node and a user name associated with the identity represented by the second node.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the measure of textual similarity is one of two or more predetermined values.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the measure of textual similarity is computed by applying a comparison function.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref> wherein the comparison function is an edit distance function.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the &#x201c;me&#x201d; edges connecting the first cluster and the second cluster are replaced with a single replacement &#x201c;me&#x201d; edge, and the replacement &#x201c;me&#x201d; edge weight is a sum of the weights of the replaced &#x201c;me&#x201d; edges.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>cleaning the connection graph by removing erroneous nodes and edges before converting the connection graph to the cluster graph.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein cleaning the connection graph comprises:
<claim-text>removing a node from the connection graph because the node is on an exclusion list from the connection graph.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein cleaning the connection graph further comprises:
<claim-text>removing a node and the &#x201c;me&#x201d; edges of the node from the connection graph because a total number of incoming &#x201c;me&#x201d; edges to the node exceeds an in-degree threshold value or a total number of outgoing &#x201c;me&#x201d; edges from the node exceeds an out-degree threshold value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A non-transitory computer storage medium encoded with a computer program, the program comprising instructions that when executed by one or more computers cause the one or more computers to perform operations comprising:
<claim-text>receiving a connection graph representing public social data comprising identity data and social link data, wherein the connection graph comprises nodes and directed edges, each edge connecting a pair of nodes, wherein each node represents an identity extracted from the public social data and each edge represents a social link extracted from the public social data from one identity to another different identity, wherein each node represents a distinct identity, and wherein each edge is a &#x201c;me&#x201d; edge if the edge represents a &#x201c;me&#x201d; social link between identities claimed by a link author as belonging to the same person or real-life entity, and a &#x201c;friend&#x201d; edge represents a &#x201c;friend&#x201d; social link between identities claimed by a link author as belonging to different persons or entities;</claim-text>
<claim-text>converting the connection graph to a cluster graph, the cluster graph comprising clusters and cluster edges, each edge connecting a pair of clusters, each cluster corresponding to one or more nodes of the connection graph, and each edge of the cluster graph corresponding to one or more edges of the connection graph, wherein each cluster of the cluster graph initially corresponds to a single node of the connection graph and each edge of the cluster graph initially corresponds to a single edge of the connection graph; and</claim-text>
<claim-text>clustering identities by iteratively performing the following actions (i) and (ii) until no pair of clusters exists in the cluster graph that satisfies the threshold fraction condition of action (ii):
<claim-text>(i) identifying all outgoing &#x201c;me&#x201d; edges from a first cluster and all &#x201c;me&#x201d; edges to a second cluster, wherein each &#x201c;me&#x201d; edge has a respective weight; and</claim-text>
<claim-text>(ii) determining that the weights of all &#x201c;me&#x201d; edges from the first cluster to the second cluster are more than a threshold fraction of the weights of all outgoing &#x201c;me&#x201d; edges from the first cluster and as a consequence merging the first cluster and the second cluster to form a new cluster replacing the first and second clusters, wherein the edges of the new cluster node are aggregations of the edges of the former first cluster and the edges of the former second cluster, and wherein the new cluster represents the identities of the former first cluster and the edges of the former second cluster.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A system comprising:
<claim-text>one or more computers and one or more storage devices storing instructions that when executed by the one or more computers cause the one or more computers to perform operations comprising:
<claim-text>receiving a connection graph representing public social data comprising identity data and social link data, wherein the connection graph comprises nodes and directed edges, each edge connecting a pair of nodes, wherein each node represents an identity extracted from the public social data and each edge represents a social link extracted from the public social data from one identity to another different identity, wherein each node represents a distinct identity, and wherein each edge is a &#x201c;me&#x201d; edge if the edge represents a &#x201c;me&#x201d; social link between identities claimed by a link author as belonging to the same person or real-life entity, and a &#x201c;friend&#x201d; edge represents a &#x201c;friend&#x201d; social link between identities claimed by a link author as belonging to different persons or entities;</claim-text>
<claim-text>converting the connection graph to a cluster graph, the cluster graph comprising clusters and cluster edges, each edge connecting a pair of clusters, each cluster corresponding to one or more nodes of the connection graph, and each edge of the cluster graph corresponding to one or more edges of the connection graph, wherein each cluster of the cluster graph initially corresponds to a single node of the connection graph and each edge of the cluster graph initially corresponds to a single edge of the connection graph; and</claim-text>
<claim-text>clustering identities by iteratively performing the following actions (i) and (ii) until no pair of clusters exists in the cluster graph that satisfies the threshold fraction condition of action (ii):
<claim-text>(i) identifying all outgoing &#x201c;me&#x201d; edges from a first cluster and all &#x201c;me&#x201d; edges to a second cluster, wherein each &#x201c;me&#x201d; edge has a respective weight; and</claim-text>
<claim-text>(ii) determining that the weights of all &#x201c;me&#x201d; edges from the first cluster to the second cluster are more than a threshold fraction of the weights of all outgoing &#x201c;me&#x201d; edges from the first cluster and as a consequence merging the first cluster and the second cluster to form a new cluster replacing the first and second clusters, wherein the edges of the new cluster node are aggregations of the edges of the former first cluster and the edges of the former second cluster, and wherein the new cluster represents the identities of the former first cluster and the edges of the former second cluster.</claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the operations further comprise assigning weights to &#x201c;me&#x201d; edges, wherein a weight assigned to a &#x201c;me&#x201d; edge from a first node to a second node is determined from a reputation value assigned to the first node and a measure of textual similarity between a user name associated with the identity represented by the first node and a user name associated with the identity represented by the second node.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the measure of textual similarity is one of two or more predetermined values.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the measure of textual similarity is computed by applying a comparison function.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the comparison function is an edit distance function.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the &#x201c;me&#x201d; edges connecting the first cluster and the second cluster are replaced with a single replacement &#x201c;me&#x201d; edge, and the replacement &#x201c;me&#x201d; edge weight is a sum of the weights of the replaced &#x201c;me&#x201d; edges.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the operations further comprise:
<claim-text>cleaning the connection graph by removing erroneous nodes and edges before converting the connection graph to the cluster graph.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein cleaning the connection graph comprises:
<claim-text>removing a node from the connection graph because the node is on an exclusion list from the connection graph.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein cleaning the connection graph further comprises:
<claim-text>removing a node and the &#x201c;me&#x201d; edges of the node from the connection graph because a total number of incoming &#x201c;me&#x201d; edges to the node exceeds an in-degree threshold value or a total number of outgoing &#x201c;me&#x201d; edges from the node exceeds an out-degree threshold value. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
