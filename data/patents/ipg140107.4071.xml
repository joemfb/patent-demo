<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625140-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625140</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13207243</doc-number>
<date>20110810</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2010-203953</doc-number>
<date>20100913</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>251</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>3</main-group>
<subgroup>12</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>N</subclass>
<main-group>1</main-group>
<subgroup>46</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>358  115</main-classification>
<further-classification>358505</further-classification>
</classification-national>
<invention-title id="d2e71">Device that performs multiple image formation processes based on commands sent from a host computer</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5036476</doc-number>
<kind>A</kind>
<name>Yamaguchi et al.</name>
<date>19910700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5726769</doc-number>
<kind>A</kind>
<name>Imai et al.</name>
<date>19980300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5930004</doc-number>
<kind>A</kind>
<name>Imai et al.</name>
<date>19990700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6333794</doc-number>
<kind>B2</kind>
<name>Imai et al.</name>
<date>20011200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6711626</doc-number>
<kind>B1</kind>
<name>Okada</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710  5</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7395121</doc-number>
<kind>B2</kind>
<name>Aoki</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2008/0018957</doc-number>
<kind>A1</kind>
<name>Suzuki</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358474</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>JP</country>
<doc-number>06-091654</doc-number>
<kind>A</kind>
<date>19940400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>JP</country>
<doc-number>06-253107</doc-number>
<kind>A</kind>
<date>19940900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>JP</country>
<doc-number>08-123639</doc-number>
<kind>A</kind>
<date>19960500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>JP</country>
<doc-number>08-137639</doc-number>
<kind>A</kind>
<date>19960500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>JP</country>
<doc-number>2002-165047</doc-number>
<kind>A</kind>
<date>20020600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>JP</country>
<doc-number>2006-211561</doc-number>
<kind>A</kind>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>8</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>358  113</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>358  115</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>358  116</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>358505</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>710  6</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>8</number-of-drawing-sheets>
<number-of-figures>8</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120062921</doc-number>
<kind>A1</kind>
<date>20120315</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Nakamaki</last-name>
<first-name>Motohiro</first-name>
<address>
<city>Nagano-ken</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Nakamaki</last-name>
<first-name>Motohiro</first-name>
<address>
<city>Nagano-ken</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Seiko Epson Corporation</orgname>
<role>03</role>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Rust</last-name>
<first-name>Eric A</first-name>
<department>2674</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A hybrid device that can perform plural operations can switch quickly between operating modes. The hybrid device can perform plural processes on a processed medium based on commands sent from a host computer <b>200</b>. If a scan command instructing a optical reader <b>110</b>, which is another process unit, to scan the processed medium is received while executing a print command for a printing process on the medium, the control unit <b>70</b> sets the scan command to a command execution standby state, finishes executing the print command, and after the print command is completed executes the scan command queued in the command execution standby state.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="179.49mm" wi="179.75mm" file="US08625140-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="244.09mm" wi="183.22mm" file="US08625140-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="222.42mm" wi="183.56mm" orientation="landscape" file="US08625140-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="214.04mm" wi="174.75mm" orientation="landscape" file="US08625140-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="246.21mm" wi="168.15mm" file="US08625140-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="266.19mm" wi="175.85mm" file="US08625140-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="258.15mm" wi="170.60mm" file="US08625140-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="239.95mm" wi="151.64mm" file="US08625140-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="257.81mm" wi="170.94mm" file="US08625140-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading>
<p id="p-0002" num="0001">This application claims priority under 35 U.S.C. &#xa7;119 to Japanese Patent Application No. 2010-203953, filed on Sep. 13, 2010, the entire disclosure of which is expressly incorporated by reference herein.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">1. Technical Field</p>
<p id="p-0004" num="0003">The present invention relates to a hybrid device that performs multiple processes based on commands sent from a host computer, to a control method for the hybrid device, and to a recording medium.</p>
<p id="p-0005" num="0004">2. Related Art</p>
<p id="p-0006" num="0005">Electronic devices also known as hybrid devices that can perform multiple operations on a processed medium, including optically reading the processed medium and printing on the processed medium, are known from the literature. These hybrid devices include devices that operate according to commands sent from a personal computer or other host computer. See, for example, Japanese Unexamined Patent Appl. Pub. JP-A-H06-253107.</p>
<p id="p-0007" num="0006">The commands that are used with a hybrid device that has plural process units and performs plural operations as described above normally uses a different command group (command system) for process units that perform different functions, and switching operation between different process units involves changing the command system. However, operation can be changed only at specific times when changing the command system is possible, such as after a sequence of plural commands related to a single operation sent from the host computer have all been executed. Frequently switching operation between plural process units is therefore difficult. When plural operations are performed consecutively, for example, an opportunity (timing) for changing command systems may not come soon, and it may take some time before the operating mode can be changed.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0008" num="0007">A hybrid device according to the invention that can perform the operations of plural process units can quickly change operations.</p>
<p id="p-0009" num="0008">A first aspect of the invention is a hybrid device that can connect to a host computer, including: at least a first process unit and a second process unit; a storage unit that stores a first command group used with the first process unit and a second command group used with the second process unit; and a command execution control unit that performs a process on a processed medium based on a command of the first command group received from the host computer, and performs a process on the processed medium based on a command of the second command group received from the host computer, wherein if the command execution control unit receives a separate process command of the second command group controlling applying a separate process of the second process unit to the processed medium before or while executing a specific process command of the first command group that specifies applying a specific process of the first process unit to the processed medium, the command execution control unit executes or continues a specific process command of the first command group after setting the separate process command of the second command group to the command execution standby state, and after completing the specific process of the first command group executes the separate process command of the second command group queued in the command execution standby state.</p>
<p id="p-0010" num="0009">With this aspect of the invention, a hybrid device that has plural process units including at least a first process unit and a second process unit and can perform plural processes on the same processed medium has different command groups for controlling the different process units. If a command that belongs to a different command group for a different process is received before or while performing a specific process based on commands for one of the command groups, the hybrid device interprets the already received commands and checks and prepares the other process unit (second process unit) for operation, sets the process based on the received command to a command execution standby state and then performs the specific process by the first process unit, and after this specific process is completed, executes the command queued in the command execution standby state. As a result, when plural processes are performed on a single processed medium by plural process units controlled by different command groups, operation can switch quickly from the one process to another process controlled by a different command group, the delay required for process switching can be shortened, and throughput can be improved.</p>
<p id="p-0011" num="0010">Preferably in another aspect of the invention, the hybrid device also has a first reception unit for the first command group and a second reception unit for the second command group that store commands received from the host computer. The command execution control unit references the second reception unit before or while executing a specific process command stored in the first reception unit, and if a command is stored in the second reception unit, sets said command as the separate process command queued in the command execution standby state.</p>
<p id="p-0012" num="0011">This aspect of the invention has a plurality of reception units (receive buffers) for the plural different command groups of the different process units, and by referencing the receive buffer for another command group before or while executing a specific process command stored in the receive buffer for one command group, a command received for another process executed by another process unit can be set to a command execution standby state before or while executing a specific process of the one process unit, and executed next. Commands for a different process unit can therefore be easily referenced by switching to a different receive buffer, and processes and command groups can be changed quickly.</p>
<p id="p-0013" num="0012">Further preferably in another aspect of the invention, the first command group and second command group are different.</p>
<p id="p-0014" num="0013">If the commands associated with each process unit are commands that demarcate information contained in the commands with specific rules, command groups (command systems) for different process units can be easily differentiated. The receive buffer can also be switched according to the command group.</p>
<p id="p-0015" num="0014">Further preferably in another aspect of the invention, the storage unit stores a specific configuration condition; and the command execution control unit references the second reception unit when the specific configuration condition is satisfied before or while executing the specific process command, and does not reference the second reception unit when the specific configuration condition is not satisfied.</p>
<p id="p-0016" num="0015">When a command in one command group meets a specific condition, such as a specific process ends, the receive buffer for another command group can be referenced and commands for a different process queued in a command execution standby state. The operating process can therefore be changed quickly according to specific conditions.</p>
<p id="p-0017" num="0016">Yet further preferably in another aspect of the invention, when the specific configuration condition is not satisfied before or while executing the specific process command, the command execution control unit executes a command from the first reception unit where the specified process command was stored after completing execution of the specific process command.</p>
<p id="p-0018" num="0017">When the specific condition is not satisfied in this aspect of the invention, executing processes in the same command group can continue without frequently changing the process.</p>
<p id="p-0019" num="0018">In a hybrid device according to another aspect of the invention, the first process unit is a printing unit; the second process unit is a reading unit; and the command execution control unit performs a printing process of the print unit on the processed medium based on a command of the first command group received from the host computer, and performs a reading process of the reading unit on the processed medium based on a command of the second command group received from the host computer.</p>
<p id="p-0020" num="0019">This aspect of the invention enables quickly and freely switching between printing and scanning operations that use different command groups to process the same processed medium.</p>
<p id="p-0021" num="0020">Another aspect of the invention is a control method for a hybrid device that has at least a first process unit and a second process unit and can connect to a host computer, wherein: if a separate process command of the second command group controlling applying a separate process of the second process unit to the processed medium is received before or while executing a specific process command of the first command group that specifies applying a specific process of the first process unit to the processed medium, the specific process command of the first command group executes or continues after setting the separate process command of the second command group is set to the command execution standby state, and the separate process command of the second command group queued in the command execution standby state executes after the specific process of the first command group ends.</p>
<p id="p-0022" num="0021">By executing the control method according to this aspect of the invention, a hybrid device that has at least a first process unit and a second process unit and can perform plural processes on the same processed medium has different command groups for controlling the different process units. If a command that belongs to a different command group for a different process is received before or while performing a specific process based on commands for one of the command groups, the hybrid device interprets the already received commands and checks and prepares the other process unit (second process unit) for operation, sets the process based on the received command to a command execution standby state and then performs the specific process by the first process unit, and after this specific process is completed, executes the command queued in the command execution standby state. As a result, when plural processes are performed on a single processed medium by plural process units controlled by different command groups, operation can switch quickly from the one process to another process controlled by a different command group, the delay required for process switching can be shortened, and throughput can be improved.</p>
<p id="p-0023" num="0022">Another aspect of the invention is a storage medium that stores a program that can be executed by a control unit that controls at least a first process unit and a second process unit of a hybrid device that can connect to a host computer, whereby: if a separate process command of the second command group controlling applying a separate process of the second process unit to the processed medium is received before or while executing a specific process command of the first command group that specifies applying a specific process of the first process unit to the processed medium, the specific process command of the first command group executes or continues after setting the separate process command of the second command group is set to the command execution standby state, and the separate process command of the second command group queued in the command execution standby state executes after the specific process of the first command group ends.</p>
<p id="p-0024" num="0023">As a result of the control unit executing the program according to this aspect of the invention, a hybrid device that has at least a first process unit and a second process unit and can perform plural processes on the same processed medium has different command groups for controlling the different process units. If before or while performing a specific process based on commands for one of the command groups a command that belongs to a different command group for a different process is received, the hybrid device interprets the already received commands and checks and prepares the other process unit (second process unit) for operation, sets the process based on the received command to a command execution standby state and then performs the specific process by the first process unit, and after this specific process is completed, executes the command queued in the command execution standby state. As a result, when plural processes are performed on a single processed medium by plural process units controlled by different command groups, operation can switch quickly from the one process to another process controlled by a different command group, the delay required for process switching can be shortened, and throughput can be improved.</p>
<heading id="h-0004" level="1">Effect of the Invention</heading>
<p id="p-0025" num="0024">When plural processes are applied to a single processed medium, the invention enables quickly changing from one process to another process, shortens the delay accompanying process changes, and improves throughput.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 1</figref> is an external oblique view of a hybrid device according to a preferred embodiment of the invention.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 2</figref> is an oblique view of the main assembly of the hybrid device.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 3</figref> is a side section view of the main assembly.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram of the control system of the hybrid device.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 5</figref> is a block diagram showing the functional configuration of the host computer and hybrid device.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 6</figref> is a flowchart showing an example of hybrid device operation.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 7</figref> is a flowchart of command execution by the hybrid device.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 8</figref> is a flowchart of command execution by the hybrid device.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DESCRIPTION OF EMBODIMENTS</heading>
<p id="p-0034" num="0033">A preferred embodiment of the present invention is described below with reference to the accompanying figures.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 1</figref> is a front oblique view showing the appearance of a hybrid device according to a preferred embodiment of the invention. <figref idref="DRAWINGS">FIG. 2</figref> is an external oblique view of the main assembly <b>11</b>. <figref idref="DRAWINGS">FIG. 3</figref> is a side section view of the hybrid device <b>10</b> in <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0036" num="0035">The hybrid device <b>10</b> shown in <figref idref="DRAWINGS">FIG. 1</figref> has a printer function for printing on the recording medium S (processed medium) by a serial impact dot matrix (SIDM) recording head <b>18</b> ((see <figref idref="DRAWINGS">FIG. 3</figref>); an MICR (magnetic ink character recognition) function for reading characters recorded with magnetic ink on the recording medium S; an MSR (magnetic stripe reader) function for reading and writing information recorded on a magnetic stripe disposed to the recording medium S; and a scanner function for optically scanning both sides of the recording medium S by an optical reader <b>110</b> (see <figref idref="DRAWINGS">FIG. 3</figref>).</p>
<p id="p-0037" num="0036">The hybrid device <b>10</b> can perform a printing operation using the printer function, a magnetic ink character reading operation using the MICR function, magnetic stripe read/write operations using the MICR function, and a scanner operation using the scanner function on the recording medium S, and can continuously perform these plural processes (operations) on a single recording medium S.</p>
<p id="p-0038" num="0037">Cut-sheet media that is precut to a certain length, and continuous media having numerous sheets connected in a continuous web, are examples of recording media S that can be used in the hybrid device <b>10</b>. Cut-sheet media include, for example, single slips and multipart forms, passbooks, postcards, and letters. Continuous media include continuous multipart form paper and perforated fanfold paper. In this embodiment of the invention checks and promissory notes (collectively referred to herein as simply checks) issued on a bank account, for example, and passbooks issued by a bank or other financial institution, are used as the recording medium S.</p>
<p id="p-0039" num="0038">Checks are slips on which MICR (magnetic ink character recognition) information containing the user's account number and a serial check number, for example, are printed in a MICR area MA on the front of the check. A passbook is a bound booklet of plural blank pages that can be printed on when the passbook is open. A magnetic stripe is typically rendered on the outside surface of one of the passbook covers.</p>
<p id="p-0040" num="0039">Note that of the four sides of a rectangular recording medium S, the edge on the side that is inserted to the hybrid device <b>10</b> is referred to herein as the leading edge or end, and the edge on the opposite end as the leading end is referred to as the trailing edge or end.</p>
<p id="p-0041" num="0040">As shown in <figref idref="DRAWINGS">FIG. 1</figref>, the hybrid device <b>10</b> has a top cover <b>12</b>, a top case <b>13</b>, and a bottom case <b>14</b> as outside case members, and a manual insertion opening <b>15</b> in the front of the top case <b>13</b> and bottom case <b>14</b> where the recording medium S is inserted and discharged. A paper exit <b>20</b> from which the recording medium S may be discharged is also formed at the back of the top case <b>13</b> and bottom case <b>14</b>. Whether the recording medium S processed by the hybrid device <b>10</b> is discharged from the manual insertion opening <b>15</b> or the paper exit <b>20</b> is controlled by a command sent to the hybrid device <b>10</b> from the host computer <b>200</b> described below.</p>
<p id="p-0042" num="0041">The side where the manual insertion opening <b>15</b> is rendered, that is, the left side as seen in <figref idref="DRAWINGS">FIG. 3</figref>, is referred to herein as the front, and the side where the paper exit <b>20</b> is rendered, that is, the right side in <figref idref="DRAWINGS">FIG. 3</figref>, is referred as the rear or back.</p>
<p id="p-0043" num="0042">As shown in <figref idref="DRAWINGS">FIG. 2</figref>, the hybrid device <b>10</b> has a main assembly <b>11</b> that is covered by the foregoing case members. The main assembly <b>11</b> includes a bottom chassis part <b>11</b>A and a top chassis part (not shown in the figure) that is supported by pins <b>11</b>C at the back of the bottom chassis part <b>11</b>A. The top chassis part can pivot by operating a lever (not shown in the figure) disposed on the left side of the top chassis part, and the inside of the main assembly <b>11</b> is exposed when the top chassis part pivots open.</p>
<p id="p-0044" num="0043">As shown in <figref idref="DRAWINGS">FIG. 2</figref> and <figref idref="DRAWINGS">FIG. 3</figref>, the main assembly <b>11</b> includes a base frame <b>16</b> and a right side frame <b>17</b>A and left side frame <b>17</b>B pair attached to the sides of the base frame <b>16</b>. The side frames (not shown in the figure) of the top case chassis part are disposed on the outside of the side frames <b>17</b>A and <b>17</b>B with a carriage guide shaft <b>31</b> spanning therebetween and a flat front media guide <b>24</b> and rear media guide <b>25</b> affixed between the side frames <b>17</b>A and <b>17</b>B. A flat platen <b>21</b> is disposed between the front media guide <b>24</b> and rear media guide <b>25</b>, and the recording head <b>18</b> is disposed above the platen <b>21</b> facing the platen <b>21</b>.</p>
<p id="p-0045" num="0044">The recording head <b>18</b> is mounted on a carriage <b>19</b> that is fit freely slidably on the carriage guide shaft <b>31</b>. The carriage <b>19</b> is driven through an intervening timing belt (not shown in the figure) by the forward or reverse rotation of a carriage drive motor <b>56</b> (<figref idref="DRAWINGS">FIG. 4</figref>) that drives the carriage <b>19</b>, and the carriage <b>19</b> thus moves reciprocally guided by the carriage guide shaft <b>31</b>. The carriage <b>19</b> scans bidirectionally between the side frames of the top chassis part in the direction indicated by arrow X in <figref idref="DRAWINGS">FIG. 1</figref>, that is, in the main scanning direction aligned with the axial direction of the carriage guide shaft <b>31</b> and the long side of the platen <b>21</b>. Note that the direction perpendicular to the main scanning direction X of the carriage <b>19</b>, that is, the direction indicated by arrow Yin <figref idref="DRAWINGS">FIG. 1</figref>, is the secondary scanning direction.</p>
<p id="p-0046" num="0045">While the recording head <b>18</b> carried on the carriage <b>19</b> travels in the main scanning direction with the carriage <b>19</b>, recording wires are pushed out from the wire face (not shown in the figure) on the distal end of the recording head <b>18</b> opposite the platen <b>21</b> to strike the ink ribbon and transfer ink from the ink ribbon to the recording medium S conveyed between the platen <b>21</b> and the recording head <b>18</b>, and record an image, which may include text, on the recording medium S. The ink ribbon is stored folded inside a ribbon cartridge (not shown in the figure) that is mounted on the main frame or the carriage <b>19</b>, and is delivered to the recording head <b>18</b> while the carriage <b>19</b> scans the recording medium. As shown in <figref idref="DRAWINGS">FIG. 3</figref>, a media width sensor <b>55</b> is disposed behind the recording head <b>18</b> at a position above the platen <b>21</b>. The media width sensor <b>55</b> is mounted on the carriage <b>19</b> and travels with the carriage <b>19</b> over the platen <b>21</b>, and is used to determine the positions of the side edges of the recording medium S and the width of the recording medium S.</p>
<p id="p-0047" num="0046">As shown in <figref idref="DRAWINGS">FIG. 2</figref> and <figref idref="DRAWINGS">FIG. 3</figref>, the platen <b>21</b> is flat and extends in the scanning direction of the carriage <b>19</b>, and is flexibly supported and urged toward the recording head <b>18</b> by an urging spring <b>180</b>. The urging spring <b>180</b> is a compression spring, and the striking force of the recording wires during the recording operation of the recording head <b>18</b> is assisted by the urging force of the urging spring <b>180</b>. When the thickness of the recording medium S varies while the recording medium S is conveyed, or when recording media S of different thicknesses are conveyed to the main assembly <b>11</b>, the platen <b>21</b> is pushed by the distal end of the recording head <b>18</b> in resistance to the urging force of the urging spring <b>180</b> and moves away from the recording head <b>18</b>. As a result, the gap between the distal end of the recording head <b>18</b> and the recording surface of the recording medium S is held constant regardless of the thickness of the recording medium.</p>
<p id="p-0048" num="0047">As shown in <figref idref="DRAWINGS">FIG. 3</figref>, the printer assembly <b>11</b> includes a media conveyance mechanism <b>100</b> that conveys the recording medium S, an alignment mechanism <b>28</b> that contacts the leading end of the recording medium S conveyed by the media conveyance mechanism <b>100</b> and aligns the recording medium S, a magnetic data reading unit <b>29</b> having a magnetic head <b>34</b> that reads the MICR information printed on a check or reads or writes magnetic information in the magnetic stripe on a passbook, and a media pressure unit <b>30</b> that pushes down on the recording medium S to prevent the recording medium S from lifting up during magnetic information processing, including when the magnetic head <b>34</b> of the magnetic data reading unit <b>29</b> reads the MICR information.</p>
<p id="p-0049" num="0048">As shown in <figref idref="DRAWINGS">FIG. 2</figref> and <figref idref="DRAWINGS">FIG. 3</figref>, the media conveyance mechanism <b>100</b> includes the platen <b>21</b>, a first drive roller <b>22</b>A, a first follower roller <b>22</b>B, a second drive roller <b>23</b>A, a second follower roller <b>23</b>B, a third drive roller <b>124</b>A, a third follower roller <b>124</b>B, the front media guide <b>24</b>, the rear media guide <b>25</b>, a media conveyance motor <b>26</b>, and a drive wheel train <b>27</b>. The media conveyance mechanism <b>100</b> renders a conveyance path P through which the recording medium S is conveyed over the front media guide <b>24</b> and rear media guide <b>25</b>. The tops of the front media guide <b>24</b> and rear media guide <b>25</b> are conveyance surface PA of the conveyance path P.</p>
<p id="p-0050" num="0049">In this embodiment of the invention the first drive roller <b>22</b>A and first follower roller <b>22</b>B are disposed on the front side of the printer assembly <b>11</b> relative to the platen <b>21</b> and recording head <b>18</b>, and the second drive roller <b>23</b>A and second follower roller <b>23</b>B pair, and third drive roller <b>124</b>A and third follower roller <b>124</b>B pair, are disposed sequentially on the rear side of the printer assembly <b>11</b> relative to the platen <b>21</b> and recording head <b>18</b>.</p>
<p id="p-0051" num="0050">The first drive roller <b>22</b>A and first follower roller <b>22</b>B are disposed as a roller pair one above the other, the second drive roller <b>23</b>A and second follower roller <b>23</b>B are disposed as a roller pair one above the other, and the third drive roller <b>124</b>A and third follower roller <b>124</b>B are disposed as a roller pair one above the other.</p>
<p id="p-0052" num="0051">The first drive roller <b>22</b>A, second drive roller <b>23</b>A, and third drive roller <b>124</b>A are drive rollers that are driven rotationally by the media conveyance motor <b>26</b> and drive wheel train <b>27</b>. The first follower roller <b>22</b>B, second follower roller <b>23</b>B, and third follower roller <b>124</b>B are follower rollers that are urged by springs <b>42</b>A, <b>42</b>B, and <b>42</b>C with specific pressure to the first drive roller <b>22</b>A, second drive roller <b>23</b>A, and third drive roller <b>124</b>A side, respectively. As a result, the first drive roller <b>22</b>A and first follower roller <b>22</b>B are rotationally driven in mutually opposite directions, the second drive roller <b>23</b>A and second follower roller <b>23</b>B are rotationally driven in mutually opposite directions, and the third drive roller <b>124</b>A and third follower roller <b>124</b>B are rotationally driven in mutually opposite directions.</p>
<p id="p-0053" num="0052">The drive wheel train <b>27</b> is disposed on the outside of the right side frame <b>17</b>A as shown in <figref idref="DRAWINGS">FIG. 2</figref>. The drive wheel train <b>27</b> has a motor pinion <b>51</b> that is affixed to rotate in unison with the drive shaft of the media conveyance motor <b>26</b>, which can rotate in forward and reverse directions. Drive power from the motor pinion <b>51</b> is transferred through a speed reducing gear <b>52</b> to a second drive gear <b>53</b>B affixed to the second roller shaft <b>33</b> of the second drive roller <b>23</b>A, and is transferred from this second drive gear <b>53</b>B through an intermediate gear <b>54</b> to a first drive gear <b>53</b>A affixed to the first roller shaft <b>32</b> of the first drive roller <b>22</b>A.</p>
<p id="p-0054" num="0053">Torque from the second roller shaft <b>33</b> of the second drive roller <b>23</b>A is transferred to the third roller shaft <b>134</b> of the third drive roller <b>124</b>A by a drive belt (not shown in the figure), for example. As a result, the first drive roller <b>22</b>A, second drive roller <b>23</b>A, and third drive roller <b>124</b>A shown in <figref idref="DRAWINGS">FIG. 3</figref> rotate in the same direction and can convey the recording medium S in the printer assembly <b>11</b>. More specifically, when the media conveyance motor <b>26</b> rotates forward, the first drive roller <b>22</b>A, second drive roller <b>23</b>A, and third drive roller <b>124</b>A shown in <figref idref="DRAWINGS">FIG. 3</figref> convey the recording medium S in the secondary scanning direction Y inside the printer assembly <b>11</b> as denoted by arrow A in the figure, and convey the recording medium S in the direction in which it is discharged from the printer assembly <b>11</b> as indicated by arrow B in the figure when the media conveyance motor <b>26</b> turns in reverse.</p>
<p id="p-0055" num="0054">The alignment mechanism <b>28</b> aligns the recording medium S before the recording head <b>18</b> prints on the recording medium S and before the optical reader <b>110</b> scans the recording medium S. The alignment mechanism <b>28</b> includes plural alignment plates <b>38</b> and an alignment plate motor (see <figref idref="DRAWINGS">FIG. 4</figref>) that drives the alignment plates <b>38</b>. The alignment plates <b>38</b> are arrayed in the main scanning direction between the first drive roller <b>22</b>A and first follower roller <b>22</b>B and the recording head <b>18</b> and platen <b>21</b>, and can protrude into the conveyance path P. The alignment mechanism <b>28</b> aligns the orientation of the recording medium S by causing the leading end of the recording medium S to contact the alignment plates <b>38</b>.</p>
<p id="p-0056" num="0055">As shown in <figref idref="DRAWINGS">FIG. 2</figref>, the printer assembly <b>11</b> has a plurality of alignment sensors <b>39</b> that detect the presence of the recording medium S driven in contact with the alignment plates <b>38</b>. The alignment sensors <b>39</b> are disposed to the conveyance path P arrayed in the main scanning direction near the upstream side of the alignment plates <b>38</b>, and are transmissive sensors including a light-emitting unit (such as an LED) and a photodetection unit (such as a phototransistor) disposed with the conveyance path P therebetween. Whether the skew of the recording medium S to the conveyance direction after alignment by the alignment mechanism <b>28</b> is within the allowable range can be determined from the number and positions of the plural alignment sensors <b>39</b> that detect the leading end of the recording medium S.</p>
<p id="p-0057" num="0056">The hybrid device <b>10</b> has a control circuit board (not shown in the figure) located behind and below the main assembly <b>11</b>, for example, as a control unit that controls hybrid device IO operations, including driving the media conveyance motor <b>26</b>, carriage <b>19</b> scanning, the recording operation of the recording wires of the recording head <b>18</b>, and the reading (scanning) operation of the optical reader <b>110</b>.</p>
<p id="p-0058" num="0057">The printer assembly <b>11</b> also has a plurality of media edge sensors <b>47</b> that detect insertion of a recording medium S to the conveyance path P in front of the first drive roller <b>22</b>A. The media edge sensors <b>47</b> are reflective sensors having a light-emitting unit that emits light toward the conveyance path P and a photodetection unit that detects the reflection of the emitted light, and detect the recording medium S inserted from the manual insertion opening <b>15</b>. Note that the media edge sensors <b>47</b> may alternatively be transmissive sensors having a light-emitting unit and a photodetection unit disposed with the conveyance path P therebetween. This configuration determines that a recording medium S was inserted to the conveyance path P when the photodetection units of all insertion detection sensors <b>47</b> sense light and then detection of light by any one of the insertion detection sensors <b>47</b> is blocked.</p>
<p id="p-0059" num="0058">As shown in <figref idref="DRAWINGS">FIG. 3</figref>, the main assembly <b>11</b> has an optical reader <b>110</b> that reads text, symbols and images presented on the surface of the recording medium S. The optical reader <b>110</b> includes a first scanner module <b>111</b> that reads information printed or otherwise presented on the top surface of the recording medium S, and a second scanner module <b>112</b> disposed opposite the first scanner module <b>111</b> that similarly reads information printed or otherwise presented on the bottom surface of the recording medium S. The recording medium S is normally inserted from the manual insertion opening <b>15</b> so that the side on which the MICR information is printed is on the bottom.</p>
<p id="p-0060" num="0059">The first scanner module <b>111</b> and second scanner module <b>112</b> are optical image sensors that are disposed between the second drive roller <b>23</b>A and third drive roller <b>124</b>A and continuously read information from the recording medium S conveyed through the conveyance path P.</p>
<p id="p-0061" num="0060">The first scanner module <b>111</b> and second scanner module <b>112</b> may be contact image sensors (CIS), for example, and respectively have a flat glass plate <b>140</b>, <b>150</b> that contacts the recording medium S, and a support frame <b>141</b>, <b>151</b> that supports the glass plate <b>140</b>, <b>150</b>. An emitter (not shown in the figure) that illuminates the reading area of the recording medium S with light output from an LED or other light source, a plurality of photosensors (not shown in the figure) arrayed in a single row in the main scanning direction (X axis), and an output unit (not shown in the figure) that outputs the signals from the photosensors to the control circuit unit described above, are housed inside the support frames <b>141</b>, <b>151</b>. The first scanner module <b>111</b> and second scanner module <b>112</b> are not limited to CIS scanners, however, and CCD (charge coupled device) scanners may be used instead.</p>
<p id="p-0062" num="0061">As shown in <figref idref="DRAWINGS">FIG. 2</figref>, the second scanner module <b>112</b> has a support frame <b>151</b> and glass plate <b>150</b> extending lengthwise across the width of the hybrid device <b>10</b> parallel to the platen <b>21</b>. The support frame <b>151</b> is disposed so that the top surface of the glass plate <b>150</b> is exposed to the conveyance path P through a window formed in the rear media guide <b>25</b>. The first scanner module <b>111</b> is disposed above the second scanner module <b>112</b> as shown in <figref idref="DRAWINGS">FIG. 3</figref> so that the bottom surface of the glass plate <b>140</b> is opposite the top of glass plate <b>150</b>, and likewise extends in the main scanning direction with substantially the same length as the second scanner module <b>112</b>.</p>
<p id="p-0063" num="0062">An urging member <b>113</b> is disposed above the first scanner module <b>111</b>, and the first scanner module <b>111</b> is urged toward the recording medium S on the rear media guide <b>25</b> by the urging member <b>113</b>. The urging member <b>113</b> pushes the first scanner module <b>111</b> to the second scanner module <b>112</b> with substantially uniform pressure across the width. A coil spring, flat spring, or elastomer cushion, for example, can be used as the urging member <b>113</b>. A gap that accommodates recording media of a specific thickness is rendered between the surfaces of the glass plates <b>140</b>, <b>150</b>. When scanning a recording medium S, the first scanner module <b>111</b> is pushed up by the conveyed recording medium S and the urging member <b>113</b> contracts, allowing the recording medium S to pass between the glass plates <b>140</b>, <b>150</b>. More specifically, the scanning quality of the optical reader <b>110</b> is improved by the first scanner module <b>111</b> that is urged by the urging member <b>113</b> pushing the recording medium S to the second scanner module <b>112</b> side so that the recording medium S reliably contacts the surfaces of the glass plates <b>140</b>, <b>150</b>.</p>
<p id="p-0064" num="0063">The photosensors (not shown in the figure) of the first scanner module <b>111</b> and second scanner module <b>112</b> are arrayed in a row in the main scanning direction of the hybrid device <b>10</b>, and scan lines extending in the main scanning direction. The photosensors of the first scanner module <b>111</b> and second scanner module <b>112</b> are disposed across a wider range in the main scanning direction than the printing range of the recording head <b>18</b>, and can scan a wider range than any recording medium that can be printed on by the hybrid device <b>10</b>. The optical reader <b>110</b> can therefore read the entire surface of any recording medium S that can be used in the hybrid device <b>10</b>.</p>
<p id="p-0065" num="0064">The first scanner module <b>111</b> and second scanner module <b>112</b> are disposed on opposite sides of the conveyance path P as shown in <figref idref="DRAWINGS">FIG. 3</figref>, but the photosensor line in the first scanner module <b>111</b> and the photosensor line in the second scanner module <b>112</b> are offset approximately 5 mm from each other in the conveyance direction of the recording medium S. This configuration eliminates the effect of light from one light source on the other photosensor and results in higher scanning quality.</p>
<p id="p-0066" num="0065">The first scanner module <b>111</b> and second scanner module <b>112</b> each have R, G, and B light sources, and can scan in both monochrome (binary, 16 level, 256 level gray scale) and color modes. The scanning resolution of the first scanner module <b>111</b> and second scanner module <b>112</b> can be set to one of three levels, 200 dpi (dots/inch), 300 dpi, and 600 dpi. The number of scan lines in the conveyance direction of the recording medium S (the secondary scanning direction Y) is set according to the scanning resolution in the main scanning direction, and the conveyance speed of the recording medium S during scanning is adjusted according such parameters as the scanning resolution and how fast the photosensor output signals can be processed.</p>
<p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram showing the control configuration of the hybrid device <b>10</b>.</p>
<p id="p-0068" num="0067">The parts shown in <figref idref="DRAWINGS">FIG. 4</figref> can be rendered by the cooperation of hardware components disposed to the control circuit board (not shown in the figure) and software.</p>
<p id="p-0069" num="0068">The hybrid device <b>10</b> includes a CPU <b>40</b> that controls the hybrid device <b>10</b> based on a control program, RAM <b>41</b> that temporarily stores data and a control program read from flash memory <b>42</b> (storage unit) by the CPU <b>40</b>, flash memory <b>42</b> that stores the control program executed by the CPU <b>40</b> and processed data, a serial interface <b>43</b> and USB interface <b>44</b> that convert the data format when communicating information with the host computer <b>200</b> that controls the hybrid device <b>10</b>, a gate array <b>45</b> connected to various sensors, a motor driver <b>46</b> that drives motors, a head driver <b>48</b> that drives heads, and a bus <b>49</b> to which these various parts are connected. Each command system (command group) and the commands that belong to each command system are stored in flash memory <b>42</b>.</p>
<p id="p-0070" num="0069">RAM <b>41</b> functions as buffer memory, such as a receive buffer <b>66</b>, <b>67</b> (<figref idref="DRAWINGS">FIG. 5</figref>) that temporarily stores commands sent from the host computer <b>200</b>, and an image buffer that temporarily stores image data captured by the optical reader <b>110</b>.</p>
<p id="p-0071" num="0070">The alignment sensors <b>39</b>, media edge sensors <b>47</b>, media width sensor <b>55</b>, first scanner module <b>111</b> and second scanner module <b>112</b> are connected to the gate array <b>45</b>. The gate array <b>45</b> quantizes the analog voltages input from the alignment sensors <b>39</b>, media edge sensors <b>47</b>, and media width sensor <b>55</b>, and outputs the resulting digital data to the CPU <b>40</b>. The first scanner module <b>111</b> and second scanner module <b>112</b> optically read the surface of the recording medium S using a CIS, supply the detection voltages from each pixel of the CIS to the gate array <b>45</b>, and the gate array <b>45</b> quantizes the analog voltages supplied from the first scanner module <b>111</b> and second scanner module <b>112</b> and outputs the resulting digital data to the CPU <b>40</b>.</p>
<p id="p-0072" num="0071">The magnetic head <b>34</b> is also connected to the gate array <b>45</b>. The gate array <b>45</b> outputs a read/write drive current to the magnetic head <b>34</b>, detects the analog detection voltage of the magnetic head <b>34</b> when reading magnetic data, and outputs the voltage as digital data to the CPU <b>40</b>.</p>
<p id="p-0073" num="0072">The motor driver <b>46</b> is connected to the media conveyance motor <b>26</b>, carriage drive motor <b>56</b>, magnetic head drive motor <b>57</b>, and alignment motor <b>58</b>, supplies drive current and drive pulses to the motors, and thus causes the motors to operate. Note also that an alignment motor <b>58</b> (<figref idref="DRAWINGS">FIG. 4</figref>) for operating the alignment plate <b>38</b> (<figref idref="DRAWINGS">FIG. 3</figref>) may also be connected to the motor driver <b>46</b>.</p>
<p id="p-0074" num="0073">The head driver <b>48</b> is connected to the recording head <b>18</b>, and supplies drive current to the recording head <b>18</b> to drive the recording wires to print.</p>
<p id="p-0075" num="0074">The CPU <b>40</b> acquires detection signals from the sensors and drives the motors to convey the recording medium S by the gate array <b>45</b>, motor driver <b>46</b>, and head driver <b>48</b> based on a control program stored in flash memory <b>42</b>, and drives the heads to record on the recording medium S.</p>
<p id="p-0076" num="0075">The CPU <b>40</b> also conveys the recording medium S by the media conveyance mechanism <b>100</b>, and reads the surface of the recording medium S by the gate array <b>45</b> and first scanner module <b>111</b> and second scanner module <b>112</b>. While scanning, the CPU <b>40</b> temporarily stores the data input from the gate array <b>45</b> sequentially to a buffer (not shown in the figure) rendered in RAM <b>41</b>. The CPU <b>40</b> also reads and outputs the image data stored in the buffer (not shown in the figure) to the host computer <b>200</b> through the serial interface <b>43</b> and USB interface <b>44</b>.</p>
<p id="p-0077" num="0076">The printing function, MICR function, MSR function, and optical scanner function described above are rendered by the control system of the hybrid device <b>10</b> shown in <figref idref="DRAWINGS">FIG. 4</figref> controlling driving the parts of the main assembly <b>11</b> of the hybrid device <b>10</b> to operate according to the commands sent from the host computer <b>200</b> as a result of the CPU <b>40</b> executing a control program stored in flash memory <b>42</b>.</p>
<p id="p-0078" num="0077"><figref idref="DRAWINGS">FIG. 5</figref> is a block diagram showing the functional configuration of the hybrid device <b>10</b> and host computer <b>200</b>.</p>
<p id="p-0079" num="0078">The host computer <b>200</b> renders the functional units shown in <figref idref="DRAWINGS">FIG. 5</figref> as a result of the CPU <b>40</b> executing programs. More specifically, the host computer <b>200</b> has an application program <b>201</b>; various device drivers that render the application program <b>201</b> with a scanner driver <b>211</b>, MICR driver <b>213</b>, MSR driver <b>215</b>, and printer driver <b>217</b> that provide function modules for controlling the hybrid device <b>10</b>; and a port handler <b>221</b> that assigns the input/output (I/O) ports of the host computer <b>200</b> to the different device drivers. The host computer <b>200</b> exchanges data and control signals with the hybrid device <b>10</b> through the USB port <b>231</b>, serial port <b>233</b>, and parallel port <b>235</b>.</p>
<p id="p-0080" num="0079">The port handler <b>221</b> is achieved as a software construction rendered as a function of the operating system run by the CPU (not shown in the figure) of the host computer <b>200</b>.</p>
<p id="p-0081" num="0080">The USB port <b>231</b> is rendered by a connector and USB host controller conforming to the USB standard disposed on a hardware circuit board of the host computer <b>200</b>, and corresponding logical I/O ports of the operating system.</p>
<p id="p-0082" num="0081">The serial port <b>233</b> is rendered by an RS-232C connector and controller conforming to the RS-232C standard disposed on a hardware circuit board, and corresponding logical I/O ports of the operating system.</p>
<p id="p-0083" num="0082">The parallel port <b>235</b> is rendered by a connector and parallel port controller conforming to the IEEE 1284 standard disposed on a hardware circuit board, and corresponding logical I/O ports of the operating system.</p>
<p id="p-0084" num="0083">The application program <b>201</b> is, for example, an application program for processing forms in financial institutions, and includes functions for printing forms, processing checks, and processing passbooks. When these functions are used, the application program <b>201</b> outputs requests to the device drivers of the scanner driver <b>211</b>, MICR driver <b>213</b>, MSR driver <b>215</b>, and printer driver <b>217</b>, and processes data that is input in response to these requests. The hybrid device <b>10</b> executes actions including printing on passbooks, printing on checks, reading MICR text from checks, reading magnetic stripes on passbooks, and scanning passbooks and both sides of checks.</p>
<p id="p-0085" num="0084">The devices drivers of the scanner driver <b>211</b>, MICR driver <b>213</b>, MSR driver <b>215</b>, and printer driver <b>217</b> manage hybrid device IO operation by generating and outputting commands for executing the requests output from the application program <b>201</b> to the port handler <b>221</b>, and acquiring data sent from the hybrid device <b>10</b> in response to the commands.</p>
<p id="p-0086" num="0085">The hybrid device <b>10</b> accordingly has a receive buffer <b>66</b> for temporarily storing commands and data sent from the host computer <b>200</b> through the serial interface <b>43</b>, and a receive buffer <b>67</b> for temporarily storing commands and data sent from the host computer <b>200</b> through the USB interface <b>44</b>.</p>
<p id="p-0087" num="0086">The hybrid device <b>10</b> can be connected to the host computer <b>200</b> through either or both the serial interface <b>43</b> and USB interface <b>44</b>, and in this embodiment of the invention both the serial interface <b>43</b> and USB interface <b>44</b> are connected to the host computer <b>200</b>.</p>
<p id="p-0088" num="0087">The hybrid device <b>10</b> also has a control unit <b>70</b> (execution control unit) that executes commands stored in the receive buffers <b>66</b>, <b>67</b>. This control unit <b>70</b> is rendered by the CPU <b>40</b> (<figref idref="DRAWINGS">FIG. 4</figref>) running a control program.</p>
<p id="p-0089" num="0088">The control unit <b>70</b> can switch the operating mode between a printer control mode <b>71</b>, scanner control mode <b>75</b>, MICR control mode <b>72</b>, and MSR control mode <b>73</b>.</p>
<p id="p-0090" num="0089">The printer control mode <b>71</b> is an operating mode (command system) for executing printing functions. In the printer control mode <b>71</b>, text and images are formed on the recording medium S as a result of the gate array <b>45</b>, motor driver <b>46</b>, and head driver <b>48</b> shown in <figref idref="DRAWINGS">FIG. 4</figref> driving the media conveyance motor <b>26</b>, carriage drive motor <b>56</b>, alignment motor <b>58</b>, and recording head <b>18</b> based on the detected values output by the alignment sensors <b>39</b>, media edge sensors <b>47</b>, and media width sensor <b>55</b>. Content is printed line by line in the printer control mode <b>71</b>, and the recording medium S is appropriately conveyed by the media conveyance mechanism <b>100</b> to move to the printing start position, advance the medium between lines, and discharge the medium after printing is completed. The parts related to these printing functions embody a printing unit as a process unit.</p>
<p id="p-0091" num="0090">The scanner control mode <b>75</b> is an operating mode for optically reading the recording medium S by the optical reader <b>110</b>. The scanner control mode <b>75</b> controls the gate array <b>45</b> and motor driver <b>46</b>, drives the media conveyance motor <b>26</b> and conveys the recording medium S as required based on the output detection signals from the media edge sensors <b>47</b> and media width sensor <b>55</b>, and captures the data output by the first scanner module <b>111</b> and second scanner module <b>112</b>. The optical reader <b>110</b> rendering this scanner function embodies a reading unit as a process unit.</p>
<p id="p-0092" num="0091">The MICR control mode <b>72</b> is the operating mode for reading magnetic ink characters recorded on the recording medium S. The MICR control mode <b>72</b> controls the gate array <b>45</b>, motor driver <b>46</b>, and head driver <b>48</b>, drives the media conveyance motor <b>26</b>, magnetic head drive motor <b>57</b>, and magnetic head <b>34</b> based on the output detection signals from the media edge sensors <b>47</b> and media width sensor <b>55</b>, and acquires and interprets the output detection values from the magnetic head <b>34</b>.</p>
<p id="p-0093" num="0092">The MSR control mode <b>73</b> is an operating mode for reading and writing information recorded in the magnetic stripe of the recording medium S. The MSR control mode <b>73</b> controls the gate array <b>45</b>, motor driver <b>46</b>, and head driver <b>48</b>, drives the media conveyance motor <b>26</b>, magnetic head drive motor <b>57</b>, and magnetic head <b>34</b>, and conveys the recording medium S as needed based on the output detection signals from the media edge sensors <b>47</b> and media width sensor <b>55</b> to acquire the output values from the magnetic head <b>34</b> and read the magnetic stripe or write information to the magnetic stripe.</p>
<p id="p-0094" num="0093">The hybrid device <b>10</b> can be used as a replacement for a printer that only has printing functions, or a conventional printer that also has a printing function, MSR function, and MICR function. More specifically, the hybrid device <b>10</b> can operate under the control of the MICR driver <b>213</b>, MSR driver <b>215</b>, and printer driver <b>217</b> of a host computer <b>200</b> that are written for a conventional printer. The command system L for the printer control mode <b>71</b> is a command system for controlling operation of the printing function in a printer according to the related art. The command system M for the MICR control mode <b>72</b> is a command system for controlling operation of the MICR function in a printer according to the related art, and the command system N for the MSR control mode <b>73</b> is a command system for controlling operation of the MSR function in a printer according to the related art. As a result, when the printer already connected to the host computer <b>200</b> is disconnected and replaced with the hybrid device <b>10</b>, the host computer <b>200</b> can continue controlling the printer function, MICR function, and MSR function of the hybrid device <b>10</b> in the same way as the printer that was previously connected by using the existing MICR driver <b>213</b>, MSR driver <b>215</b>, and printer driver <b>217</b>. These command systems and the commands used in each command system are stored in flash memory <b>42</b>.</p>
<p id="p-0095" num="0094">In this embodiment of the invention, the MICR driver <b>213</b>, MSR driver <b>215</b>, and printer driver <b>217</b> are driver programs that are compatible with older printers that have a serial interface or a parallel interface, and are not compatible with the USB interface. As a result, the MICR driver <b>213</b>, MSR driver <b>215</b>, and printer driver <b>217</b> output commands and data from the serial port <b>233</b> or parallel port <b>235</b>. Commands and data for the printing function, MICR function, and MSR function are input from the host computer <b>200</b> to the serial interface <b>43</b> and stored in receive buffer <b>66</b>.</p>
<p id="p-0096" num="0095">The scanner driver <b>211</b> of the host computer <b>200</b> in this embodiment of the invention is compatible with the USB interface, however, and communicates commands and data with the hybrid device <b>10</b> through the USB port <b>231</b>. Because the optical reader <b>110</b> is capable of high resolution color scanning as described above, the size of the captured image files can be extremely large. The scanner driver <b>211</b> therefore uses the USB port <b>231</b> because sending the scanned image data over a serial interface or parallel interface is not practical. Commands and data for the scanner function are therefore input to the USB interface <b>44</b> of the hybrid device <b>10</b>, and are stored in the receive buffer <b>67</b> disposed for the USB interface <b>44</b>.</p>
<p id="p-0097" num="0096">The plural functions that can be executed by the hybrid device <b>10</b> are therefore divided into printing, MICR, and MSR functions that use the serial interface <b>43</b>, and a scanner function that uses the USB interface <b>44</b>. In other words, an interface is assigned to each process unit with a different function (operation), and the receive buffers <b>66</b>, <b>67</b> are assigned to the interfaces according to the combination of processes. As a result, the control unit <b>70</b> references receive buffer <b>66</b> when executing commands for the print unit, and reads the receive buffer <b>67</b> when executing commands for the optical reader <b>110</b>.</p>
<p id="p-0098" num="0097">In addition, when the same interface is used, the control unit <b>70</b> reads the commands from a receive port not shown of the hybrid device <b>10</b>, and allocates commands to the receive buffers <b>66</b>, <b>67</b> based on the command system. Commands for the print function command system, for example, start with an ESC code, commands for the scanner function start with a GS code, and commands can thus be differentiated by the start code. The CPU <b>40</b> can differentiate these start codes, ESC and GS, and appropriately allocate commands to the receive buffers <b>66</b>, <b>67</b> in RAM <b>41</b>.</p>
<p id="p-0099" num="0098">The hybrid device <b>10</b> stores the commands received from the host computer <b>200</b> in the order received to the receive buffers <b>66</b>, <b>67</b>, and the control unit <b>70</b> reads and executes commands that have not been executed and are stored in the receive buffers <b>66</b>, <b>67</b>. The control unit <b>70</b> usually executes the entire command sequence including the read command, pauses operation when there are no un-executed commands left in the receive buffer from which the commands were read, and then references the receive buffers <b>66</b>, <b>67</b> and reads the next command to be executed. The hybrid device <b>10</b> can both print to and scan a single recording medium S, and can switch between functions to execute a continuous sequence of operations, but an unnecessary delay (wait time) occurs when the operation is paused while changing functions. The hybrid device <b>10</b> according to this embodiment of the invention is therefore configured to quickly switch between and execute a plurality of functions according to the received commands when commands for a plurality of functions are received from the host computer <b>200</b>.</p>
<p id="p-0100" num="0099"><figref idref="DRAWINGS">FIG. 6</figref> is a flow chart showing an example of the operation of the hybrid device <b>10</b>.</p>
<p id="p-0101" num="0100">The operation described by example in <figref idref="DRAWINGS">FIG. 6</figref> is the operation performed when a passbook is inserted from the manual insertion opening <b>15</b> as the recording medium S to print on the passbook, optically read (scan) the printed portion, and then discharge the passbook.</p>
<p id="p-0102" num="0101">When the control unit <b>70</b> detects based on output from the media edge sensors <b>47</b> that a passbook was inserted to the manual insertion opening <b>15</b> (step S<b>11</b>), it executes an alignment operation that controls the motor driver <b>46</b> to operate the alignment motor <b>58</b> and advance the alignment plate <b>38</b> into the conveyance path P while operating the media conveyance motor <b>26</b> to align the orientation of the passbook (step S<b>12</b>). The control unit <b>70</b> acquires the output values of the alignment sensors <b>39</b> from the gate array <b>45</b>, and ends the alignment operation by operating the alignment motor <b>58</b> and retracting the alignment plate <b>38</b> after determining that the check is properly aligned.</p>
<p id="p-0103" num="0102">The control unit <b>70</b> then references the commands sent from the host computer <b>200</b> and stored in the receive buffer <b>66</b>, reads the command specifying the printing start position (step S<b>13</b>), changes the operating mode to the printer control mode <b>71</b>, and conveys the passbook to the printing start position according to the command. More specifically, the control unit <b>70</b> controls the motor driver <b>46</b> and drives the media conveyance motor <b>26</b> to convey the passbook to the printing start position (step S<b>14</b>). Next, when a print command and conveyance command are received from the host computer <b>200</b> and stored in the receive buffer <b>66</b> (step S<b>15</b>), the control unit <b>70</b> reads and executes the print command and paper feed command from the receive buffer <b>66</b>. The control unit <b>70</b> drives the media conveyance motor <b>26</b> and carriage drive motor <b>56</b>, controls the head driver <b>48</b> and prints by the recording head <b>18</b>, and advances the passbook one line each time printing one line ends (step S<b>16</b>). When this printing sequence ends, the control unit <b>70</b> drives the media conveyance motor <b>26</b> and conveys the passbook to the stop printing position (step S<b>17</b>).</p>
<p id="p-0104" num="0103">When a scan command is then sent (step S<b>18</b>) and a scanning range command specifying the area to be scanned is sent (step S<b>19</b>) from the host computer <b>200</b> and stored in the receive buffer <b>67</b>, the control unit <b>70</b> reads the scan command stored in the receive buffer <b>67</b> and changes the operating mode to the scanner control mode <b>75</b>. More specifically, the control unit <b>70</b> controls the motor driver <b>46</b> and operates the media conveyance motor <b>26</b> to convey the passbook to the start scanning position (step S<b>20</b>). The control unit <b>70</b> then operates the media conveyance motor <b>26</b>, gets the output data of the first scanner module <b>111</b> and second scanner module <b>112</b> from the gate array <b>45</b>, and scans (step S<b>21</b>). The control unit <b>70</b> then interprets the acquired output data of the first scanner module <b>111</b> and second scanner module <b>112</b>, and scans both scanning surfaces of the passbook (step S<b>22</b>). When the discharge command is sent from the host computer <b>200</b> after finishing scanning the area specified by the scanning range command (step S<b>23</b>), the control unit <b>70</b> receives and executes the discharge command, drives the media conveyance motor <b>26</b> and discharges the passbook from the manual insertion opening <b>15</b> or the paper exit <b>20</b> (step S<b>24</b>), then returns the standby mode to wait for insertion of the next recording medium S (step S<b>25</b>), and ends this process.</p>
<p id="p-0105" num="0104">The control unit <b>70</b> thus executes commands in an operating mode appropriate to the commands sent from the host computer <b>200</b>, thereby renders a printer function, scanner function, MICR function, and MSR function, and processes a single recording medium S (a passbook in this example) by changing between a plurality of functions.</p>
<p id="p-0106" num="0105">To quickly switch between and execute multiple functions as described above, the hybrid device <b>10</b> executes commands in one receive buffer <b>66</b> while reading the other receive buffer <b>67</b>, and if there is a command that has not been executed in the receive buffer <b>67</b>, reads this unexecuted command first and enters an execution standby state. Asa result, after executing one command the hybrid device <b>10</b> can quickly execute the next command waiting to be executed, and can quickly change the operating mode when the operating mode for the command to be executed differs from the current operating mode. This method of executing commands from one buffer while watching another buffer to determine the next command to be read is used only when specific conditions are set and those conditions are satisfied. This control method is described below.</p>
<p id="p-0107" num="0106"><figref idref="DRAWINGS">FIG. 7</figref> and <figref idref="DRAWINGS">FIG. 8</figref> are flow charts describing command execution by the hybrid device <b>10</b>. <figref idref="DRAWINGS">FIG. 7</figref> describes operation when referencing another receive buffer while executing a command is not enabled, and <figref idref="DRAWINGS">FIG. 8</figref> describes operation when this setting is enabled.</p>
<p id="p-0108" num="0107">When operation starts (step S<b>31</b>), the control unit <b>70</b> reads the unexecuted commands (that is, commands that have been received and stored but not executed) stored in the receive buffers <b>66</b>, <b>67</b> in the order received from the host computer <b>200</b> (step S<b>32</b>). Because the control unit <b>70</b> cannot read receive buffer <b>66</b> and receive buffer <b>67</b> simultaneously, the receive buffer storing the command that was received first is read first.</p>
<p id="p-0109" num="0108">The control unit <b>70</b> determines if there is an unexecuted command in the referenced receive buffer (step S<b>33</b>). If there is an unexecuted command (step S<b>33</b> returns Yes), the control unit <b>70</b> interprets the command (step S<b>34</b>), changes to the operating mode corresponding to the command, and executes the command (step S<b>35</b>). When executing the command is completed, the control unit <b>70</b> determines if all unexecuted commands in the receive buffer currently being referenced have been executed (step S<b>36</b>). More specifically, after reading and executing one command from either receive buffer <b>66</b>, <b>67</b>, the control unit <b>70</b> continues executing unexecuted commands from the same receive buffer. If there is still an unexecuted command in the receive buffer being referenced (step S<b>36</b> returns No), the control unit <b>70</b> returns to step S<b>34</b> and interprets the next command. If all unexecuted commands in the receive buffer being referenced have been executed (step S<b>36</b> returns Yes), the control unit <b>70</b> returns to step S<b>32</b>, changes the referenced receive buffer, and looks for the next unexecuted command.</p>
<p id="p-0110" num="0109">If an unexecuted command is not found in either receive buffer <b>66</b>, <b>67</b> (step S<b>33</b> returns No), the control unit <b>70</b> goes to the standby mode until a command is received from the host computer <b>200</b> (step S<b>37</b>), and ends this operation.</p>
<p id="p-0111" num="0110">During normal operation, the control unit <b>70</b> thus executes unexecuted commands in the receive buffers <b>66</b>, <b>67</b> in the order received, and after reading and executing one command from one receive buffer, continues executing unexecuted commands from the same receive buffer.</p>
<p id="p-0112" num="0111"><figref idref="DRAWINGS">FIG. 8</figref> describes an example of operation when there is a function that, when enabled by a command from the host computer <b>200</b>, can read and execute commands in another receive buffer before all unexecuted commands in one receive buffer have been executed.</p>
<p id="p-0113" num="0112">In the operation shown in <figref idref="DRAWINGS">FIG. 8</figref>, the control unit <b>70</b> starts operating in the scanner control mode <b>75</b>. When a command for a function other than the scanner function is executed, the operating mode changes and operation returns to the scanner control mode <b>75</b> mode after executing the other command. As a result, the operation of referencing receive buffers <b>66</b>, <b>67</b> is performed as part of the scanner control mode <b>75</b> function. As described above, the printer control mode <b>71</b>, MICR control mode <b>72</b>, and MSR control mode <b>73</b> must function in the same way as an older printer, and adding new commands to the command system is difficult. However, because the scanner driver <b>211</b> and scanner control mode <b>75</b> do not require compatibility with an older printer, commands for functions not previously available can be added to the scanner command system K. Asa result, a function for setting the conditions for changing the receive buffer that is referenced can be realized by a new command added to command system K.</p>
<p id="p-0114" num="0113">In the operation shown in <figref idref="DRAWINGS">FIG. 8</figref> the control unit <b>70</b> starts operating in the scanner control mode <b>75</b>, and sets the buffer switching conditions (configuration conditions) for changing the receive buffer being read to another receive buffer according to a dedicated command sent from the host computer <b>200</b> to the USB interface <b>44</b> in flash memory <b>42</b> (step S<b>41</b>). The buffer switching conditions can be a specific command or a combination of specific commands, for example. The receive buffer that is referenced is changed when this specific command or a combination of specific commands is received.</p>
<p id="p-0115" num="0114">The control unit <b>70</b> starts the operation processing the recording medium S in the scanner control mode <b>75</b> (step S<b>42</b>), and sequentially references the unexecuted commands stored in receive buffers <b>66</b>, <b>67</b> in the order they were received from the host computer <b>200</b> (step S<b>43</b>). The control unit <b>70</b> determines if there are unexecuted commands in the referenced receive buffer (step S<b>44</b>). If there are no unexecuted commands in either of the receive buffers <b>66</b>, <b>67</b> (step S<b>44</b> returns No), the control unit <b>70</b> goes to a standby mode until a command is received from the host computer <b>200</b> (step S<b>45</b>), and ends this operation. Whether a recording medium S is at the recording head <b>18</b> when entering the standby mode is detected from a sensor, and if a recording medium S is not detected, a warning is issued by a warning unit to prompt loading the recording medium S, and the carriage drive motor is energized or other mechanical preparation step performed so that operation can start immediately.</p>
<p id="p-0116" num="0115">If there is an unexecuted command in either of the receive buffers <b>66</b>, <b>67</b> (step S<b>44</b> returns Yes), the control unit <b>70</b> reads and interprets the command (step S<b>46</b>). This interpretation is done as a function of the scanner control mode <b>75</b>. The control unit <b>70</b> then determines if the single interpreted command, or a plurality of commands received consecutively or together, meets the condition set in step S<b>41</b> (step S<b>47</b>). If the command or combination of commands does not meet the condition for changing operating modes (step S<b>47</b> returns No), the control unit <b>70</b> changes to the operating mode for executing the interpreted command, and executes the command (step S<b>48</b>). When executing the command is completed, the control unit <b>70</b> changes the operating mode to the scanner control mode <b>75</b>, and determines if all unexecuted commands in the receive buffer being referenced have been executed (step S<b>49</b>). If an unexecuted command is left in the receive buffer (step S<b>49</b> returns No), the control unit <b>70</b> reads the next unexecuted command (step S<b>50</b>), and returns to step S<b>46</b> and executes the command. If all unexecuted commands in the receive buffer being read have been executed (step S<b>49</b> returns Yes), the control unit <b>70</b> returns to step S<b>43</b>.</p>
<p id="p-0117" num="0116">If the command or combination of commands meets the condition for changing operating modes (step S<b>47</b> returns Yes), the control unit <b>70</b> references a buffer other than the receive buffer from which the interpreted command was read (step S<b>51</b>), and determines if there is an unexecuted command (step S<b>52</b>). If there is an unexecuted command in this receive buffer (step S<b>52</b> returns Yes), the control unit <b>70</b> reads the command, identifies the operating mode corresponding to the command, and goes to the identified operating mode and enters the command execution standby state (step S<b>53</b>).</p>
<p id="p-0118" num="0117">The command execution standby state is a state in which commands can be executed immediately. In this step S<b>53</b>, the control unit <b>70</b> temporarily changes the operating mode and reads the command, for example, waits until just before a signal is output in this operating mode to the operating unit of the hybrid device <b>10</b> (that is, the gate array <b>45</b>, motor driver <b>46</b>, head driver <b>48</b>, and parts connected thereto), and then returns the operating mode to the scanner control mode <b>75</b>. In another example of the command execution standby state, the scanner control mode <b>75</b> could simply temporarily store the next command to execute and the operating mode corresponding to that command.</p>
<p id="p-0119" num="0118">The control unit <b>70</b> then switches to the operating mode corresponding to the command interpreted in step S<b>46</b>, and executes the command (step S<b>54</b>). If an unexecuted command is not found in a different receive buffer than the command interpreted in step S<b>46</b> (step S<b>52</b> returns No), control goes to step S<b>54</b> and the command is executed.</p>
<p id="p-0120" num="0119">When command execution is completed, the control unit <b>70</b> changes the operating mode to the scanner control mode <b>75</b>, determines if a command is waiting in the command execution standby state (step S<b>55</b>), and goes to step S<b>49</b> if there is no command queued in the command execution standby state (step S<b>55</b> returns No). If there is a command queued in the command execution standby state (step S<b>55</b> returns Yes), the control unit <b>70</b> changes the operating mode corresponding to the command waiting in the command execution standby state, and executes that command (step S<b>56</b>). The control unit <b>70</b> then changes the operating mode to the scanner control mode <b>75</b>, and determines if all unexecuted commands in the receive buffer being read, that is, all unexecuted commands in the same receive buffer as the command queued in the command execution standby state, have been executed (step S<b>57</b>). If an unexecuted command remains in the receive buffer (step S<b>57</b> returns No), control goes to step S<b>50</b>, the next unexecuted command is read, and control returns to step S<b>46</b> and the command is interpreted. If all unexecuted commands in the receive buffer being referenced have been executed (step S<b>57</b> returns No), control goes to step S<b>43</b>.</p>
<p id="p-0121" num="0120">As described above, a hybrid device <b>10</b> according to the preferred embodiment of the invention described above has a plurality of process units, and can perform plural different types of processes with a recording medium S based on commands sent from the host computer <b>200</b>. If while executing a specific process command for a particular process performed by one process unit the control unit <b>70</b> receives another process command for a different process performed by another process unit, the control unit <b>70</b> sets this other process command to the command execution standby state and executes the specific process command, and after executing this specific process command, executes the other process command that is waiting in the command execution standby state. For example, if a scan command for the optical reader <b>110</b> to scan the recording medium S being printed is received while executing a print command for a printing process by the print unit, the control unit <b>70</b> sets the scan command to a command execution standby state, executes the print command, and after executing the print command executes the scan command that is queued in the command execution standby state. Because operation can switch quickly from one operating mode to another operating mode when plural operations are performed on a single recording medium S, the waiting time involved with switching operation is shortened and throughput can be improved.</p>
<p id="p-0122" num="0121">The hybrid device <b>10</b> also has a plurality of receive buffers <b>66</b>, <b>67</b> that store commands received from the host computer <b>200</b>, the receive buffers <b>66</b>, <b>67</b> correspond to commands associated with the optical reader <b>110</b> and print unit, which are exemplary process units, and while executing commands for processes associated with one process unit the control unit <b>70</b> monitors the receive buffer associated with the other process unit. For example, while executing print commands by the print unit, the control unit <b>70</b> reads the receive buffer <b>67</b> that stores commands for the scanner function, and when an execution command is stored in the receive buffer <b>67</b>, sets that execution command to a command execution standby state. Therefore, commands associated with different operations can be referenced by changing the receive buffer, whether or not there are any unexecuted commands can be quickly determined, and operation can be quickly changed.</p>
<p id="p-0123" num="0122">The command system for one process unit and the command system for another process unit are different. For example, the command system L used with the print unit associated with print functions is different from the command system used for scanner functions. By thus grouping the commands used for each process unit into command systems that differentiate information contained in the commands by specific rules, command systems (command groups) that differ by process unit can be differentiated, and commands received from the host computer <b>200</b> can be distributed to receive buffers reserved for specific process units.</p>
<p id="p-0124" num="0123">When a command for a specific process satisfies predetermined conditions, the control unit <b>70</b> reads the receive buffer associated with another process unit, and when the command to be executed does not satisfy the condition, continues executing commands in the same receive buffer storing the command specifying the specific process. For example, a command for the scanner control mode <b>75</b> is set to be performed by the control unit <b>70</b> conditionally on a particular combination of print commands and conveyance commands. When commands satisfying this condition, that is, a print command and a paper feed command, are sent together from the host computer <b>200</b>, the control unit <b>70</b> reads the receive buffer <b>67</b> when executing the print command and conveyance command, queues a scan command in the command execution standby state if a scan command is received, and executes the print command and paper feed command. If a command other than a command that satisfies these conditions is read and executed from the receive buffer <b>66</b>, the commands stored in the receive buffer <b>66</b> are executed until there are no unexecuted commands left in the receive buffer <b>66</b>. As a result, operation can be changed quickly only when necessary, and the same type of operation can be executed continuously without frequently changing the operating mode.</p>
<p id="p-0125" num="0124">A preferred embodiment of the invention is described above, but the invention is not limited thereto. For example, the foregoing embodiment describes a configuration having a receive buffer <b>66</b> for the printer control mode <b>71</b>, MICR control mode <b>72</b>, and MSR control mode <b>73</b> of the control unit <b>70</b>, and a receive buffer <b>67</b> for the scanner control mode <b>75</b>, but the invention is not so limited. For example, the number of receive buffers can be determined as needed, and receive buffers could be provided individually for the printer control mode <b>71</b>, MICR control mode <b>72</b>, MSR control mode <b>73</b>, and scanner control mode <b>75</b>. The different receive buffers can also be embodied by dividing a single physical memory device into plural logical constructions. Yet further, the hybrid device <b>10</b> could have a 10/100 Base-T Ethernet (R) LAN interface, or a wireless communication interface, instead of or in addition to the serial interface <b>43</b> and USB interface <b>44</b>. When particular functions correspond to particular interfaces in this configuration, a receive buffer can be provided for each interface. In addition, the hybrid device <b>10</b> is not limited to printing, MICR, MSR, and scanner functions, and other types of functions can obviously be implemented.</p>
<p id="p-0126" num="0125">The circuits disposed to the control circuit board (not shown in the figure) installed in the hybrid device <b>10</b> according to the above embodiment of the invention render the functions shown in the function block diagrams in <figref idref="DRAWINGS">FIG. 4</figref> and <figref idref="DRAWINGS">FIG. 5</figref>, but a device externally connected to the hybrid device <b>10</b> could function as part or all of the function units shown in <figref idref="DRAWINGS">FIG. 4</figref>, and control the hybrid device <b>10</b>.</p>
<p id="p-0127" num="0126">In addition, the function blocks shown in <figref idref="DRAWINGS">FIG. 4</figref> and <figref idref="DRAWINGS">FIG. 5</figref> are achieved by cooperation between hardware and software, but the specifics of the hardware and software configurations can be determined as desired, and other detailed aspects of the configuration can be changed as desired.</p>
<p id="p-0128" num="0127">The foregoing embodiment describes a hybrid device <b>10</b> having a SIDM recording head <b>18</b>, magnetic head <b>34</b>, and optical reader <b>110</b>, but the invention is not so limited and can obviously be adapted to other configurations having an optical reading unit equivalent to the optical reader <b>110</b> disposed to an inkjet printer, thermal printer, or laser printer, for example. The invention is also not limited to stand-alone devices, and the invention can obviously be adapted to devices that are incorporated into another device such as an ATM (automated teller machine) or cash dispenser.</p>
<p id="p-0129" num="0128">A program that implements the steps shown in <figref idref="DRAWINGS">FIG. 6</figref> to <figref idref="DRAWINGS">FIG. 8</figref> may be stored in a storage medium in the hybrid device <b>10</b> or a storage medium externally connected to the hybrid device <b>10</b>, and can be read therefrom and executed by the control unit <b>70</b>.</p>
<p id="p-0130" num="0129">Although the present invention has been described in connection with the preferred embodiments thereof with reference to the accompanying drawings, it is to be noted that various changes and modifications will be apparent to those skilled in the art. Such changes and modifications are to be understood as included within the scope of the present invention as defined by the appended claims, unless they depart therefrom.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A hybrid device that can connect to a host computer, comprising:
<claim-text>at least a first process unit and a second process unit;</claim-text>
<claim-text>a storage unit that stores a first command group used with the first process unit and a second command group used with the second process unit;</claim-text>
<claim-text>a first reception unit for the first command and a second reception unit for the second command group that store commands received from the host computer: and</claim-text>
<claim-text>a command execution control unit that performs a process on a processed medium based on a command of the first command group received from the host computer, and performs a process on the processed medium based on a command of the second command group received from the host computer;</claim-text>
<claim-text>wherein:
<claim-text>if the command execution control unit receives a separate process command of the second command group controlling applying a separate process of the second process unit to the processed medium before or while executing a specific process command of the first command group that specifies applying a specific process of the first process unit to the processed medium, the command execution control unit executes or continues the specific process command of the first command group after setting the separate process command of the second command group to the command execution standby state, and after completing the specific process of the first command group executes the separate process command of the second command group queued in the command execution standby state;</claim-text>
<claim-text>the command execution control unit references the second reception unit before or while executing a specific process command stored in the first reception unit, and if a command is stored in the second reception unit, sets said command as the separate process command queued in the command execution standby state;</claim-text>
<claim-text>the storage unit stores a specific configuration condition, and the command execution control unit references the second reception unit when the specific configuration condition is satisfied before or while executing the specific process command, and does not reference the second reception unit when the specific configuration condition is not satisfied; and</claim-text>
<claim-text>when the specific configuration condition is not satisfied before or while executing the specific process command, the command execution control unit executes a command from the first reception unit where the specified process command was stored after completing execution of the specific process command.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The hybrid device described in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the first command group and second command group are different.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The hybrid device described in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the first process unit is a printing unit;</claim-text>
<claim-text>the second process unit is a reading unit; and</claim-text>
<claim-text>the command execution control unit performs a printing process of the print unit on the processed medium based on a command of the first command group received from the host computer, and
<claim-text>performs a reading process of the reading unit on the processed medium based on a command of the second command group received from the host computer.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. A control method for a hybrid device that has at least a first process unit and a second process unit and can connect to a host computer, wherein:
<claim-text>if a separate process command of a second command group controlling applying a separate process of the second process unit to a processed medium is received before or while executing a specific process command of a first command group that specifies applying a specific process of the first process unit to the processed medium,</claim-text>
<claim-text>the specific process command of the first command group executes or continues after setting the separate process command of the second command group to a command execution standby state, and</claim-text>
<claim-text>the separate process command of the second command group queued in the command execution standby state executes after the specific process command of the first command group ends;</claim-text>
<claim-text>wherein:
<claim-text>the hybrid device also has a first reception unit for the first command group and a second reception unit for the second command group that store commands received from the host computer;</claim-text>
<claim-text>the control method includes steps of referencing the second reception unit before or while executing a specific process command stored in the first reception unit, and if a command is stored in the second reception unit, settings said command as the separate process command queued in the command execution standby state: and</claim-text>
<claim-text>when a specific configuration condition is not satisfied before or while executing the specific process command, a command from the first reception unit where the specified process command was stored is executed after execution of the specific process command is completed.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The control method for a hybrid device according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein:
<claim-text>the first command group and second command group are different.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The control method for a hybrid device according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein:
<claim-text>the second reception unit is referenced when the specific configuration condition is satisfied before or while executing the specific process command, and</claim-text>
<claim-text>the second reception unit is not referenced when the specific configuration condition is not satisfied.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The control method for a hybrid device according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein:
<claim-text>the first process unit is a printing unit;</claim-text>
<claim-text>the second process unit is a reading unit;</claim-text>
<claim-text>a printing process of the print unit is performed on the processed medium based on a command of the first command group received from the host computer, and</claim-text>
<claim-text>a reading process of the reading unit is performed on the processed medium based on a command of the second command group received from the host computer.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A non-transitory storage medium that stores a program that can be executed by a control unit that controls at least a first process unit and a second process unit of a hybrid device that can connect to a host computer, wherein:
<claim-text>if a separate process command of a second command group controlling applying a separate process of the second process unit to a processed medium is received before or while executing a specific process command of a first command group that specifies applying a specific process of the first process unit to the processed medium,</claim-text>
<claim-text>the specific process command of the first command group executes or continues after setting the separate process command of the second command group to the a command execution standby state, and</claim-text>
<claim-text>the separate process command of the second command group queued in the command execution standby state executes after the specific process of the first command group ends;</claim-text>
<claim-text>wherein:
<claim-text>the hybrid device also has a first reception unit for the first command group and a second reception unit for the second command group that store commands received from the host computer:</claim-text>
<claim-text>the program includes steps of referencing the second reception unit before or while executing a specific process command stored in the first reception unit, and if a command is stored in the second reception unit, setting said command as the separate process command queued in the command execution standby state; and</claim-text>
<claim-text>when a specific configuration condition is not satisfied before or while executing the specific process command, a command from the first reception unit where the specified process command was stored is executed after execution of the specific process command is completed.</claim-text>
</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
