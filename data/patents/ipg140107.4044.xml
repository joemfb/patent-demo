<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625113-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625113</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12889927</doc-number>
<date>20100924</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>623</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>K</subclass>
<main-group>15</main-group>
<subgroup>02</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>K</subclass>
<main-group>15</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>K</subclass>
<main-group>1</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>3</main-group>
<subgroup>12</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>358  111</main-classification>
<further-classification>358  115</further-classification>
<further-classification>358  117</further-classification>
<further-classification>358  12</further-classification>
<further-classification>358  19</further-classification>
<further-classification>358  11</further-classification>
</classification-national>
<invention-title id="d2e53">System and method for distributed optical character recognition processing</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6914697</doc-number>
<kind>B2</kind>
<name>Hamura et al.</name>
<date>20050700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  117</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7386511</doc-number>
<kind>B2</kind>
<name>Buchanan et al.</name>
<date>20080600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705 45</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7580151</doc-number>
<kind>B2</kind>
<name>Kurose et al.</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  19</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2004/0179230</doc-number>
<kind>A1</kind>
<name>Kitada et al.</name>
<date>20040900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  115</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2005/0046878</doc-number>
<kind>A1</kind>
<name>Kido</name>
<date>20050300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  12</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2005/0105127</doc-number>
<kind>A1</kind>
<name>Miwa et al.</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  115</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2006/0187484</doc-number>
<kind>A1</kind>
<name>Noda</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  115</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2006/0209343</doc-number>
<kind>A1</kind>
<name>Wanda et al.</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  115</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2008/0184236</doc-number>
<kind>A1</kind>
<name>Yamauchi et al.</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>718100</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2010/0328684</doc-number>
<kind>A1</kind>
<name>Cain</name>
<date>20101200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  12</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2012/0120438</doc-number>
<kind>A1</kind>
<name>Sato</name>
<date>20120500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  115</main-classification></classification-national>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>12</number-of-drawing-sheets>
<number-of-figures>13</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120075648</doc-number>
<kind>A1</kind>
<date>20120329</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Keys</last-name>
<first-name>Gregory C.</first-name>
<address>
<city>Warwick</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Jennings</last-name>
<first-name>Andrew G.</first-name>
<address>
<city>Boonton</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Kitada</last-name>
<first-name>Hiroshi</first-name>
<address>
<city>Tuckahoe</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Keys</last-name>
<first-name>Gregory C.</first-name>
<address>
<city>Warwick</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Jennings</last-name>
<first-name>Andrew G.</first-name>
<address>
<city>Boonton</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Kitada</last-name>
<first-name>Hiroshi</first-name>
<address>
<city>Tuckahoe</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Oblon, Spivak, McClelland, Maier &#x26; Neustadt, L.L.P.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Ricoh Company Ltd</orgname>
<role>03</role>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
<assignee>
<addressbook>
<orgname>Ricoh Americas Corporation</orgname>
<role>02</role>
<address>
<city>West Caldwell</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Singh</last-name>
<first-name>Satwant</first-name>
<department>2673</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method and apparatus for processing a plurality of images. The method includes receiving or generating by an information processing apparatus the plurality of images. The plurality of images are stored in a memory, and separated into a plurality of image units. Sequence identifiers are assigned to the plurality of image units, and a first subset of the plurality of image units is processed by the information processing apparatus. The method further includes dividing the unprocessed plurality of image units into at least one second subset of the plurality of image units, and sending each of the at least one second subset of the plurality of image units to a different information processing apparatus for processing.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="120.82mm" wi="194.23mm" file="US08625113-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="194.90mm" wi="129.46mm" orientation="landscape" file="US08625113-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="166.20mm" wi="174.33mm" orientation="landscape" file="US08625113-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="217.09mm" wi="169.84mm" file="US08625113-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="160.10mm" wi="159.34mm" file="US08625113-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="213.87mm" wi="165.10mm" orientation="landscape" file="US08625113-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="211.50mm" wi="160.87mm" file="US08625113-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="152.40mm" wi="175.68mm" file="US08625113-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="182.12mm" wi="143.85mm" file="US08625113-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="152.40mm" wi="132.67mm" file="US08625113-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="215.98mm" wi="144.86mm" file="US08625113-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="158.24mm" wi="129.03mm" orientation="landscape" file="US08625113-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="214.71mm" wi="118.53mm" file="US08625113-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0002" num="0001">1. Field of the Invention</p>
<p id="p-0003" num="0002">The present invention relates generally to distributed processing of images. The present invention is more particularly related to a system and method for distributing multipage optical character recognition processing among Multi-Functional Peripherals (MFPs) in a self-organizing computing cluster.</p>
<p id="p-0004" num="0003">2. Description of the Related Art</p>
<p id="p-0005" num="0004">MFPs are peripheral devices that perform multiple document-centric functions, typically scanning, copying, printing, and faxing. MFPs usually have networking capabilities and businesses typically have tens or hundreds of MFP hosts on the same network.</p>
<p id="p-0006" num="0005">An MFP is commonly used to perform Optical Character Recognition (OCR) on documents that are scanned into it or transmitted to it. A general overview of OCR is discussed in Sami Lais, <i>QuickStudy: Optical Character Recognition</i>, ComputerWorld, on the world wide web at computerworld.com/s/article/73023/Optical_Character_Recognition, which is incorporated herein by reference. OCR generally refers to the capability of a computer software to translate images containing words into a format that a person can use, for example, edit, retrieve, search, index, and/or store. To OCR refers to the act of the computer converting an image into the format that the person can use, such as electronically translating images into machine-readable text.</p>
<p id="p-0007" num="0006">These images might be hand-written or printed text, or other machine-readable representations of data such as a barcode. OCR processing is typically resource-intensive on the MFP, so users who attempt OCR on a large multipaged document must often wait tens of seconds or minutes for the job to complete. This wait time often blocks the MFP from use by others as well.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0008" num="0007">The present invention takes advantage of networked MFPs to greatly reduce the time it takes to complete a multipage OCR job. The present invention creates a way to distribute subsets of an OCR task (or job) among MFPs and then recombine the processed results on the MFP originating the job. It does this by creating a self-organizing computing cluster with a tree-structured topology, in which MFPs on the same tree level parallel process OCR subsets.</p>
<p id="p-0009" num="0008">Accordingly, the time to process a multipage OCR job is reduced significantly. This reduction is a result of parallel processing among MFPs on the same level as the tree structure that results in this system. The tree-structured computer cluster that establishes parallel processing and its significant time gains to complete an OCR job is self-organizing and requires no human intervention or design.</p>
<p id="p-0010" num="0009">According to an embodiment of the present invention, a method is provided for using an information processing apparatus to process a plurality of images. The method includes receiving or generating by an information processing apparatus the plurality of images. The plurality of images are stored in a memory, and separated into a plurality of image units. Sequence identifiers are assigned to the plurality of image units, and a first subset of the plurality of image units is processed by the information processing apparatus. The method further includes dividing the unprocessed plurality of image units into at least one second subset of the plurality of image units, and sending each of the at least one second subset of the plurality of image units to a different information processing apparatus for processing.</p>
<p id="p-0011" num="0010">Further, according to another embodiment of the present invention, there is provided a method of using an information processing apparatus to process a plurality of images. The method includes receiving a plurality of image units corresponding to the plurality of images from another information processing apparatus. The plurality of image units are stored in a memory. The information processing apparatus processes a first subset of the plurality of image units, and divides the unprocessed plurality of image units into at least one second subset of the plurality of image units. Each of the at least one second subset of the plurality of image units is sent to a different information processing apparatus for processing. Further, the processed first subset of the plurality of image units is sent to a designated information processing apparatus.</p>
<p id="p-0012" num="0011">According to another embodiment of the invention, there is provided an information processing apparatus. The information processing apparatus includes a memory configured to store a plurality of images. The first plurality of images are received or generated by the information processing apparatus. The information processing apparatus also includes at least one processor that is configured to separate the plurality of images into a first plurality of image units, to assign sequence identifiers to the first plurality of image units, to receive a second plurality of image units, to process a first subset of one of the first and second plurality of image units, and to divide the one of the unprocessed first and second plurality of image units into at least one second subset of the one of the first and second plurality of image units. Further, the information processing apparatus includes a sending unit configured to send each of the at least one second subset of the one of the first and second plurality of image units to a different information processing apparatus for processing.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0013" num="0012">A more complete appreciation of the invention and many of the attendant advantages thereof will be readily obtained as the same becomes better understood by reference to the following detailed description when considered in connection with the accompanying drawings, wherein:</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an exemplary distributed OCR system including MFPs, a server, and client devices;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 2</figref> illustrates main components of the MFPs in one embodiment of the distributed OCR system;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 3</figref> illustrates general steps of processing a distributed OCR job in one embodiment of the present invention;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 4</figref> illustrates hardware components of one embodiment of the client device and the server;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 5A</figref> illustrates hardware components of an exemplary MFP;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 5B</figref> illustrates electronic components of the MFP illustrated in <figref idref="DRAWINGS">FIG. 5A</figref>;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 5C</figref> illustrates details of the multi-port communication interface illustrated in <figref idref="DRAWINGS">FIG. 5B</figref>;</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIGS. 6A and 6B</figref> illustrate a flow diagram of a distributed OCR process performed at a Root MFP according to one embodiment;</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 7</figref> illustrates a flow diagram of one embodiment of a distributed OCR process performed at one or more subordinate MFPs;</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 8</figref> illustrates a flow diagram of a divide and distribute process performed by one or more MFPs for a distributed OCR job;</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 9</figref> illustrates an embodiment of an OCR Job Message; and</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 10</figref> illustrates an exemplary OCR Result Message that is sent from a Subordinate MFP to a Root MFP.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
<p id="p-0026" num="0025">Referring now to the drawings, wherein like reference numerals designate identical or corresponding parts throughout the several views, <figref idref="DRAWINGS">FIG. 1</figref> shows an exemplary distributed OCR processing system including a server <b>14</b>, client devices <b>16</b><i>a </i>and <b>16</b><i>b </i>(e.g., a portable computer, desktop computer, etc.), and MFPs <b>20</b><i>a</i>-<b>20</b><i>d </i>connected over a network <b>12</b>, such as a Local Area Network (LAN), Wide Area Network (WAN), or Wireless Local Area Network (WLAN).</p>
<p id="p-0027" num="0026">It is noted, however, that the server <b>14</b>, client devices <b>16</b><i>a </i>and <b>16</b><i>b</i>, and MFPs <b>20</b><i>a</i>-<b>20</b><i>d </i>need not be connected to each other over the same network and may, for example, be connected to each other by any one or a combination of different communication paths (e.g., the Internet, a LAN, or a mobile network). Further, the number and types of devices connected to the network <b>12</b> are not limited to the devices illustrated in <figref idref="DRAWINGS">FIG. 1</figref>. For example, other image capture or storage devices such as a mobile phone, scanner, still and/or video camera, etc., may be connected to the network <b>12</b> to provide image data for OCR processing.</p>
<p id="p-0028" num="0027">The MFPs <b>20</b><i>a</i>-<b>20</b><i>d </i>are exemplary devices on which an embodiment of the distributed OCR processing may be performed. A distributed OCR job originates at one of the MFPs <b>20</b><i>a</i>-<b>20</b><i>d</i>. Each of the remaining MFPs <b>20</b><i>a</i>-<b>20</b><i>d</i>, participating in processing the distributed OCR job, processes a subset of the image data associated with the OCR job. In one embodiment, the image data corresponds to one or a plurality of images scanned by the MFP from which the distributed OCR job originates. In one embodiment, the OCR job may refer to the output of a device acting in collaboration with a user and a user's input, and is a collection of metadata and scanned documents. In another embodiment, the image data may be submitted by, or retrieved from, the server <b>14</b>, the client devices <b>16</b><i>a </i>and <b>16</b><i>b</i>, another MFP, or another image capture or storage device. Alternatively, the image data may be e-mailed or otherwise uploaded to the MFP from which the distributed OCR job originates.</p>
<p id="p-0029" num="0028">As illustrated in <figref idref="DRAWINGS">FIG. 2</figref>, one embodiment of the distributed OCR processing system requires communication among a plurality of MFPs (e.g., MFPs <b>20</b><i>a</i>-<b>20</b><i>d</i>), each with at least all the identical components illustrated in <figref idref="DRAWINGS">FIG. 2</figref> and further discussed below. Among the plurality of MFPs involved in a distributed OCR job, a single MFP takes the role of either a Root MFP or a Subordinate MFP.</p>
<p id="p-0030" num="0029">An MFP (e.g., MFP <b>20</b><i>a</i>) from which an OCR job originates takes the role of the Root MFP. The OCR job may be generated by the Root MFP based on information inputted by a user via a user input device, such as the operation panel <b>174</b> illustrated in <figref idref="DRAWINGS">FIG. 5B</figref>, of the Root MFP. For example, the user may scan a document by placing the document on the platen glass of the Root MFP and issue a scan command using the operation panel <b>174</b>, and selecting a OCR processing function using the operation panel, which causes the Root MFP to automatically create a distributed OCR job for the scanned document. In another embodiment, the scanning and creation of the distributed OCR job may be performed in response to the user selecting a single command (e.g., a distributed OCR processing request).</p>
<p id="p-0031" num="0030">Further, in other embodiments, the user may retrieve a previously scanned document stored in the Root MFP or load a previously scanned document into the Root MFP, by identifying a location of the previously scanned document, to be processed as a distributed OCR job. For example, the user may cause the Root MFP to retrieve image data from a remote device connected to the Root MFP over the network <b>12</b> or a portable storage device that has been physically connected to the Root MFP. Alternatively, the OCR job or an OCR job creation request, including the image data or a location of the image data, may be transmitted to the Root MFP over a network (e.g., the network <b>12</b>), a local wireless connection (e.g., Bluetooth), fax, or a physical connection (e.g., USB connection to a portable storage device such as a USB drive).</p>
<p id="p-0032" num="0031">The image data (e.g., pages of a document) associated with the OCR job can be inputted into the Root MFP via a scanner feature of the Root MFP, read from a portable storage device (e.g., a USB drive), or received over the network, local wireless connection, or physical connection (e.g., via fax or e-mail). For example, the images may be received from one or a combination of the server <b>14</b>, client devices <b>16</b><i>a </i>and <b>16</b><i>b</i>, or the other devices discussed above with respect to <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0033" num="0032">Further, the OCR job may be generated automatically in other embodiments based on, for example, the availability of image data or predetermined characteristics of the image data. In these embodiments, an MFP is configured to automatically OCR, or determine whether to OCR, the available image data received by the MFP. As noted above, the image data may be received by the MFP via fax or e-mail, or automatically retrieved from a physically connected portable memory device such as a USB drive.</p>
<p id="p-0034" num="0033">For example, an MFP may be configured to automatically OCR any incoming fax, or any incoming fax with a predetermined characteristic (e.g., a predetermined name in a from field and/or a predetermined phrase in the subject field). In another embodiment, the MFP is configured to OCR any bar code, or one or more predetermined regions, on a title page of a scanned or faxed document, and to use the bar code, or one or more predetermined regions, to read OCR job instructions (e.g., OCR/do not OCR).</p>
<p id="p-0035" num="0034">An MFP that receives a subset of the distributed OCR job originating at the Root MFP takes the role of a Subordinate MFP (e.g., MFPs <b>20</b><i>b</i>-<b>20</b><i>d</i>). The number of Subordinate MFPs participating in the distributed OCR processing of the OCR job is not limited to a particular number and can be a single MFP or number in the tens, hundreds, or thousands.</p>
<p id="p-0036" num="0035">It should be noted that the MFPs may or may not be dedicated to a specific role with regard to being a Root or Subordinate MFP. That is, one embodiment of the present invention allows any particular MFP to be a Root MFP during the processing of one distributed OCR job and to be a Subordinate MFP during the processing of another distributed OCR job.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 2</figref> illustrates an embodiment of the identical components included in each of the plurality of MFPs. As illustrated in <figref idref="DRAWINGS">FIG. 2</figref>, each of the MFPs <b>20</b><i>a</i>-<b>20</b><i>d </i>includes a network connection <b>22</b>, an OCR engine <b>24</b>, and a distributed OCR agent <b>26</b>. The distributed OCR agent <b>26</b> includes an OCR job operator <b>28</b>, an OCR distribution manager <b>30</b>, and a root manager <b>32</b>.</p>
<p id="p-0038" num="0037">The network connection <b>22</b> includes all components that allow a network host to communicate on the network. For example the network connection <b>22</b> includes a wired or wireless network interface card. In one embodiment, the network connection <b>22</b> includes the multi-port network interface <b>166</b> illustrated in <figref idref="DRAWINGS">FIG. 5C</figref>.</p>
<p id="p-0039" num="0038">In one embodiment, the OCR engine <b>24</b> involves all software components that work to electronically translate images into machine-readable text. For example, the OCR engine <b>24</b> may correspond to software that reads an image and creates a separate output that can be used for editing, retrieval, search, and/or storage. The images may be handwritten, printed text, or other machine-readable representations of data such as a bar code.</p>
<p id="p-0040" num="0039">As noted above, each of the MFPs <b>20</b><i>a</i>-<b>20</b><i>d </i>also includes a distributed OCR agent <b>26</b>. The distributed OCR agent <b>26</b> is a software component that is responsible for managing the operation and distribution of subsets of OCR jobs, and includes three main components. [The main components of the distributed OCR agent <b>26</b> are an OCR job operator <b>28</b> that performs OCR on the subset of the OCR job that a respective MFP receives, an OCR distribution manager <b>30</b> that further divides the remainder of the OCR job that the respective MFP receives and sends the divided remainder to at least one other Subordinate MFP for further processing, and a root manager <b>32</b> that is responsible for launching the distributed OCR job and then stitching, or combining, together results received from the Subordinate MFPs participating in the processing of the distributed OCR job. The OCR job operation <b>28</b> performs OCR by triggering/instructing the OCR engine <b>24</b> to electronically translate the one or more images in the subset of the OCR job into machine-readable text. Further, the root manager <b>32</b> component operates on the Root MFP only, and may be excluded from a dedicated Subordinate MFP. That is, each Subordinate MFP and Root MFP uses the OCR job operator <b>28</b> and the OCR distribution manager <b>30</b>, and the single Root MFP additionally uses the root manager <b>32</b>.</p>
<p id="p-0041" num="0040">The software components of the OCR engine <b>24</b> and the distributed OCR agent <b>26</b> may be executed by one or more processors. In an exemplary embodiment, the software components of the OCR engine <b>24</b> and the distributed OCR agent <b>26</b> may be executed on the same or different processors and are separate components. For example, the software components of the OCR engine <b>24</b> may be executed on one processor, and the three main components of the distributed OCR agent <b>26</b> may be executed on one or more different processors. Alternatively, the software components of the OCR engine <b>24</b> and the distributed OCR agent <b>26</b> may be executed on the same processor, such as the CPU <b>160</b> of <figref idref="DRAWINGS">FIG. 5B</figref>. Further, the OCR engine <b>24</b> and/or distributed OCR agent <b>26</b> may be partially or wholly implemented by hardware circuitry. In an alternative embodiment, the OCR Engine <b>24</b> and the distributed OCR agent <b>26</b> are provided by a single component.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 3</figref> illustrates general steps for processing a distributed OCR job in one embodiment of the present invention. In step S<b>302</b>, an MFP receives a multipage job to OCR and therefore is designated the Root MFP. Alternatively, the multipage job may be generated by the Root MFP. The OCR job is divided into separate pages comprising the job in step S<b>304</b>, and the Root MFP performs OCR on a subset of these pages in step S<b>306</b>. The Root MFP then subdivides the remaining pages (i.e., the unprocessed pages) among a number of targeted Subordinate MFPs in step S<b>308</b> and sends these divided sets of pages to these targets in step S<b>310</b>.</p>
<p id="p-0043" num="0042">In step S<b>312</b>, each of the targeted Subordinate MFPs receive a page set and perform OCR on a subset of the page set in step S<b>314</b>. Further, in step S<b>316</b>, each Subordinate MFP sends the resulting pages to the Root MFP. In step S<b>318</b>, the Root MFP receives the OCR pages from each Subordinate MFP, and stitches the pages together in the correct sequence to match the original set of pages before OCR. Based on a determination that there are remaining pages that require OCR processing in step S<b>320</b>, each Subordinate MFP further divides the remaining pages in step S<b>322</b> and sends them to additional targeted Subordinate MFPs in step S<b>324</b>. These steps repeat until there are no pages remaining to OCR.</p>
<p id="p-0044" num="0043">It is noted that the above described steps are not limited to the order illustrated in <figref idref="DRAWINGS">FIG. 3</figref>. For example, in other embodiments, the Root MFP or Subordinate MFPs may perform OCR on the subset of the separated pages at the same time, after dividing the remaining pages among a number of targeted Subordinate MFPs, or after sending the divided remaining pages. Further, the Root MFP may wait to perform stitching until all the resulting pages have been received from the Subordinate MFPs, rather than stitch the resulting pages as they are received.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a computer system <b>70</b> in which embodiments of the server <b>14</b>, client device <b>16</b>, or other device from which a plurality of images can be received by an MFP may be implemented. The server <b>14</b>, client device <b>16</b>, or other device may be implemented in, for example, workstations, personal computers, laptop computers, tablet computers, personal digital assistants (PDAs), cellular telephone devices, or other mobile devices. The computer system <b>70</b> includes a bus B or other communication mechanism for communicating information such as address information and data, and a CPU (or processor) <b>78</b> coupled with the bus B for processing the information. The computer system <b>70</b> also includes a memory unit (or main memory) <b>76</b>, such as a random access memory (RAM) or other dynamic storage device (e.g., dynamic RAM (DRAM), static RAM (SRAM), and synchronous DRAM (SDRAM)), coupled to the bus B for storing information and instructions to be executed by the CPU <b>78</b>. In addition, the memory unit <b>76</b> may be used for storing temporary variables or other intermediate information during the execution of instructions by the CPU <b>78</b>. The computer system <b>70</b> may also further include a read only memory (ROM) or other static storage device (e.g., programmable ROM (PROM), erasable PROM (EPROM), and electrically erasable PROM (EEPROM)) coupled to the bus B for storing static information and instructions for the CPU <b>78</b>.</p>
<p id="p-0046" num="0045">The computer system <b>70</b> may also include a disk controller coupled to the bus B to control one or more storage devices for storing information and instructions, such as mass storage <b>74</b> which may be a hard disk drive, for example, and drive device <b>82</b> (e.g., floppy disk drive, read-only optical disc drive, read/write optical disc drive, optical disc jukebox, tape drive, flash memory or a flash memory based drive, and removable magneto-optical drive). The storage devices may be added to the computer system <b>70</b> using an appropriate device interface (e.g., small computer system interface (SCSI), integrated device electronics (IDE), enhanced-IDE (E-IDE), direct memory access (DMA), or ultra-DMA).</p>
<p id="p-0047" num="0046">The computer system <b>70</b> may also include special purpose logic devices (e.g., application specific integrated circuits (ASICs)) or configurable logic devices (e.g., simple programmable logic devices (SPLDs), complex programmable logic devices (CPLDs), and field programmable gate arrays (FPGAs)) in order to carry out the desired functionality.</p>
<p id="p-0048" num="0047">The computer system <b>70</b> may also include a display controller coupled to the bus B to control a display, such as a cathode ray tube (CRT), organic light emitting diode (OLED) display, liquid crystal display (LCD), or projector, for displaying information to a computer user. The computer system <b>70</b> may include input devices, such as a keyboard, pointing device, or touch display, for interacting with a computer user and providing information to the CPU <b>78</b>. The pointing device, for example, may be a mouse, a trackball, or a pointing stick for communicating direction information and command selections to the CPU <b>78</b> and for controlling cursor movement on the display. In addition, a printer may provide printed listings of data stored and/or generated by the computer system.</p>
<p id="p-0049" num="0048">The computer system <b>70</b> performs a portion or all of the processing steps in response to the CPU <b>78</b> executing one or more sequences of one or more instructions contained in a memory, such as the memory unit <b>76</b>. Such instructions may be read into the memory unit <b>76</b> from another computer-readable medium, such as the mass storage <b>74</b> or a removable media <b>72</b>. One or more processors in a multi-processing arrangement may also be employed to execute the sequences of instructions contained in the memory unit <b>76</b> or the removable media <b>72</b>. In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions. Thus, embodiments are not limited to any specific combination of hardware circuitry and software.</p>
<p id="p-0050" num="0049">As stated above, the computer system <b>70</b> includes at least one removable media <b>72</b>, which is a computer-readable medium, or memory for holding instructions programmed according to the teachings described herein and for containing data structures, tables, records, or other data described herein. Examples of computer-readable media are compact discs, hard disks, floppy disks, tape, magneto-optical disks, PROMs (EPROM, EEPROM, flash EPROM), DRAM, SRAM, SDRAM, or any other magnetic medium, optical discs (e.g., CD-ROM), or any other storage medium from which a computer can read.</p>
<p id="p-0051" num="0050">Stored on any one or on a combination of computer-readable media is software for controlling the computer system <b>70</b>, for driving a device or devices, and for enabling the computer system <b>70</b> to interact with a human user. Such software may include, but is not limited to, device drivers, operating systems, development tools, and applications software. Such computer-readable media further includes the computer program product for performing all or a portion (if processing is distributed) of the processing described herein.</p>
<p id="p-0052" num="0051">The computer code devices may be any interpretable or executable code mechanism, including but not limited to scripts, interpretable programs, dynamic link libraries (DLLs), Java classes, and complete executable programs. Moreover, parts of the processing may be distributed for better performance, reliability, and/or cost.</p>
<p id="p-0053" num="0052">The term &#x201c;computer-readable medium&#x201d; as used herein refers to any medium that participates in providing instructions to the CPU <b>78</b> for execution. A computer-readable medium may take many forms, including but not limited to, non-volatile media, and volatile media. Non-volatile media includes, for example, optical, magnetic disks, and magneto-optical disks, such as the mass storage <b>74</b> or the removable media <b>72</b>. Volatile media includes dynamic memory, such as the memory unit <b>76</b>.</p>
<p id="p-0054" num="0053">Various forms of computer-readable media may be involved in carrying out one or more sequences of one or more instructions to the CPU <b>78</b> for execution. For example, the instructions may initially be carried on a magnetic disk of a remote computer. The remote computer can load the instructions remotely into a dynamic memory and send the instructions over a telephone line using a modem. A modem local to the computer system <b>70</b> may receive the data on the telephone line and use an infrared transmitter to convert the data to an infrared signal. An infrared detector coupled to the bus B can receive the data carried in the infrared signal and place the data on the bus B. The bus B carries the data to the memory unit <b>76</b>, from which the CPU <b>78</b> retrieves and executes the instructions. The instructions received by the memory unit <b>76</b> may optionally be stored on mass storage <b>74</b> either before or after execution by the CPU <b>78</b>.</p>
<p id="p-0055" num="0054">The computer system <b>70</b> also includes a communication interface <b>80</b> coupled to the bus B. The communication interface <b>80</b> provides two-way data communication coupling to a network that is connected to, for example, a LAN, or to another communications network such as the Internet. For example, the communication interface <b>80</b> may be a network interface card to attach to any packet switched LAN. As another example, the communication interface <b>80</b> may be an asymmetrical digital subscriber line (ADSL) card, an integrated services digital network (ISDN) card or a modem to provide a data communication connection to a corresponding type of communications line. Wireless links may also be implemented. In any such implementation, the communication interface <b>80</b> sends and receives electrical, electromagnetic, or optical signals that carry digital data streams representing various types of information. However, in other embodiments, the communication interface <b>80</b> may simply provide for one-way data communication.</p>
<p id="p-0056" num="0055">The network typically provides data communication through one or more networks to other data devices. For example, the network may provide a connection to another computer through a local network (e.g., a LAN) or through equipment operated by a service provider, which provides communication services through a communications network. The local network and the communications network use, for example, electrical, electromagnetic, or optical signals that carry digital data streams, and the associated physical layer (e.g., CAT 5 cable, CAT 6 cable, coaxial cable, optical fiber, etc). The signals through the various networks and the signals on the network and through the communication interface <b>80</b>, which carry the digital data to and from the computer system <b>70</b>, may be implemented in baseband signals, or carrier wave based signals. The baseband signals convey the digital data as un-modulated electrical pulses that are descriptive of a stream of digital data bits, where the term &#x201c;bits&#x201d; is to be construed broadly to mean symbol, where each symbol conveys at least one or more information bits. The digital data may also be used to modulate a carrier wave, such as with amplitude, phase and/or frequency shift keyed signals that are propagated over a conductive media, or transmitted as electromagnetic waves through a propagation medium. Thus, the digital data may be sent as un-modulated baseband data through a &#x201c;wired&#x201d; communication channel and/or sent within a predetermined frequency band, different than baseband, by modulating a carrier wave. The computer system <b>70</b> can transmit and receive data, including program code, through the network and the communication interface <b>80</b>. Moreover, the network may provide a connection to a mobile device such as a personal digital assistant (PDA) laptop computer, or cellular telephone.</p>
<p id="p-0057" num="0056">Alternatively, the client device <b>16</b> may be implemented in a digital copier/printer multi-function machine, as further discussed below. For example, the client device <b>16</b> may capture images, which are transmitted to a Root MFP for distributed OCR processing. The transmission of the images may be initiated in response to a request at the client device <b>16</b> or the Root MFP.</p>
<p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. 5A</figref> illustrates an exemplary mechanical layout of the MFP <b>20</b> illustrated in <figref idref="DRAWINGS">FIG. 1</figref>, which may correspond to a digital copier/printer multi-function machine. In <figref idref="DRAWINGS">FIG. 5A</figref>, <b>101</b> is a fan for the scanner, <b>102</b> is a polygon mirror used with a laser printer, and <b>103</b> designates an F theta lens used to collimate light from a laser. Reference number <b>104</b> designates a sensor for detecting light from the scanner, <b>105</b> is a lens for focusing light from the scanner onto the sensor <b>104</b> and <b>106</b> is a quenching lamp used to erase images on the photoconductive drum <b>132</b>. There is a charging corona unit <b>107</b> and a developer roller <b>108</b>. Reference numeral <b>109</b> designates a lamp used to illustrate a document to be scanned and <b>110</b>, <b>111</b>, and <b>112</b> designate mirrors used to reflect light onto the sensor <b>104</b>. There is a drum mirror <b>113</b> used to reflect light to the photoconductive drum <b>132</b> originating from the polygon mirror <b>102</b>. Reference numeral <b>114</b> designates a fan used to cool the charging area of the MFP <b>20</b>, and <b>115</b> is a first paper feed roller used for feeding paper from the first paper cassette <b>117</b>, and <b>116</b> is a manual feed table. Similarly, element <b>118</b> is a second paper feed roller for the second cassette <b>119</b>. Reference numeral <b>120</b> designates a relay roller, <b>121</b> is a registration roller, <b>122</b> is an image density sensor, and <b>123</b> is a transfer/separation corona unit. Reference numeral <b>124</b> is a cleaning unit, <b>125</b> is a vacuum fan, element <b>126</b> is a transport belt, <b>127</b> is a pressure roller, and <b>128</b> is an exit roller. Reference numeral <b>129</b> is a hot roller used to fix toner onto the paper, <b>130</b> is an exhaust fan, and <b>131</b> is the main motor used to drive the MFP <b>20</b>.</p>
<p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. 5B</figref> illustrates an exemplary block diagram of the electronic components of the MFP <b>20</b> illustrated in <figref idref="DRAWINGS">FIG. 5A</figref>. The CPU <b>160</b> is a microprocessor and acts as the system controller. There is a random access memory (RAM) <b>162</b> to store dynamically changing information including operating parameters of the digital copiers. A read-only memory (ROM) <b>164</b> stores the program code used to run the MFP <b>20</b> and also information describing the static-state data such as model number, serial number, and default parameters that would not change over the life of the machine. When the device needs to boot up from either a hard disk or flash memory, the ROM memory <b>164</b> stores the boot sequence.</p>
<p id="p-0060" num="0059">Similar to the computer system <b>70</b> discussed above, the MFP <b>20</b> may perform a portion of or all processing steps in response to the CPU <b>160</b> executing one or more sequences of one or more instructions contained in a memory, such as the ROM <b>164</b> or of one of the memory types discussed above with respect to the computer system <b>70</b>. The instructions may be read into the memory from another computer-readable medium, as discussed above, such as mass storage or removable media. One or more processors in a multi-processing arrangement may also be employed to execute the sequences of instructions contained in the memory. In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions. Thus, embodiments are not limited to any specific combination of hardware circuitry and software.</p>
<p id="p-0061" num="0060">There is provided a multi-port communication interface <b>166</b>, which allows the MFP <b>20</b> to communicate with external devices. Reference numeral <b>168</b> represents a telephone or other communication line including a wireless channel. Reference number <b>170</b> represents a wired communication line, such as a wired telephone or Ethernet connection. Further information of the multi-port communication interface is described with respect to <figref idref="DRAWINGS">FIG. 5C</figref>. An interface controller <b>172</b> is used to connect an operation panel <b>174</b> to a system bus <b>186</b>. The operation panel <b>174</b> includes standard input and output devices found on a digital copier/printer multi-function machine or business office appliance including some function buttons such as reduce/enlarge and numeric buttons, etc. Additionally, a liquid crystal display, or other displays as discussed above, may be included within the operation panel <b>174</b> to display parameters and messages of the apparatus. The operation panel also can be a touch panel in which the display and function buttons may change according to the context.</p>
<p id="p-0062" num="0061">A local connection interface <b>171</b> is a connection through a local port such as RS232, USB and IEEE 1394. This interface <b>171</b> allows external devices to be attached to the apparatus.</p>
<p id="p-0063" num="0062">A storage interface <b>176</b> connects storage devices to the system bus <b>186</b>. The storage devices include a flash memory <b>178</b> and a disk <b>182</b>. There is a connection <b>180</b> connected to the storage interface <b>176</b> which allows for additional memory devices to be connected. The flash memory <b>178</b> is used to store semi-static data which describes parameters of the device which infrequently change over the life of the apparatus, including the option configuration, network access parameters, and work group, and also can be used to store dynamic data that describes parameters dynamically changing such as print count. An option interface <b>184</b> allows additional option devices to be attached and controlled. A clock/timer <b>187</b> is utilized to keep track of both the time and date and also to measure elapsed time.</p>
<p id="p-0064" num="0063">On the left side of <figref idref="DRAWINGS">FIG. 5B</figref>, the various sections making up the MFP <b>20</b> are illustrated. Reference numeral <b>202</b> designates a sorter and contains sensors and actuators used to sort the output of the MFP <b>20</b>. There is a duplexer <b>200</b> that allows a duplex operation to be performed and includes conventional sensors and actuators. The MFP <b>20</b> includes a large capacity tray unit <b>198</b> that allows paper trays holding a large number of sheets to be used. The large capacity tray unit <b>198</b> includes conventional sensors and actuators.</p>
<p id="p-0065" num="0064">A paper feed controller <b>196</b> is used to control the operation of feeding paper into and through the MFP <b>20</b>. A scanner <b>194</b> is used to scan images into the MFP <b>20</b> and includes a control system of conventional scanning elements such as a light, mirror, etc. Additionally, scanner sensors are used, such as a home position sensor, to determine that the scanner is in the home position, and a lamp thermistor is used to ensure proper operation of the scanning lamp. There is a printer/imager <b>192</b>, which prints the output of the MFP <b>20</b> and includes a conventional laser printing mechanism, a toner sensor, and an image density sensor. The fuser <b>190</b> is used to fuse the toner onto the page using a high temperature roller and includes an exit sensor, a thermistor to assure that the fuser <b>190</b> is not over heating, and an oil sensor. Additionally, there is an optional unit interface <b>188</b> used to connect optional units such as an automatic document feeder, a different type of sorter/collator, or other elements that can be added to the MFP <b>20</b>.</p>
<p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. 5C</figref> illustrates details of the multi-port network interface <b>166</b>. The MFP <b>20</b> may communicate to external devices through a Token Ring interface <b>220</b>, a cable modem unit <b>222</b> that has a high speed connection over cable, a conventional telephone interface <b>224</b> that connects to a telephone line <b>168</b>, a wireless interface <b>228</b>, and an Ethernet interface <b>230</b>. Other interfaces (not shown) include, but are not limited to, a Digital Subscriber line. The multi-port network interface does not need to have all the interfaces described in <figref idref="DRAWINGS">FIG. 5C</figref>.</p>
<p id="p-0067" num="0066">The CPU or other microprocessor or circuitry executes a monitoring process to monitor the state of each of the sensors of the MFP <b>20</b>, and a sequencing process is used to execute the instructions of the code used to control and operate the MFP <b>20</b>. Additionally, there is (1) a central system control process executed to control the overall operation of the MFP <b>20</b> and (2) a communication process used to assure reliable communication to external devices connected to the MFP <b>20</b>. The system control process monitors and controls data storage in a static state (e.g., the ROM <b>164</b> of <figref idref="DRAWINGS">FIG. 5B</figref>), a semi-static state (e.g., the flash memory or disk <b>182</b>), or a dynamic state (e.g., a volatile or non-volatile memory, the RAM <b>162</b> or the flash memory <b>178</b> or disk <b>182</b>).</p>
<p id="p-0068" num="0067">The above details have been described with respect to a digital copier/printer multi-function machine, but this embodiment is equally applicable to other business office machines or devices such as an analog copier, a facsimile machine, a printer, a facsimile server, or other business office machines and business office appliances that are configured to perform OCR processing on image data. Alternatively, the distributed OCR processing performed by the MFP <b>20</b> may be performed in an OCR server implemented, for example, by the computer system <b>70</b> illustrated in <figref idref="DRAWINGS">FIG. 4</figref>. For example, in one embodiment, one or more of the MFPs participating in the processing of a distributed OCR job may be replaced with one or more OCR servers.</p>
<p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. 6A</figref> illustrates an exemplary process performed by a Root MFP for a distributed OCR job. In step S<b>602</b>, the Root MFP receives or generates image data corresponding to a plurality of images. As discussed above, the plurality of images may include one or a combination of hand-written or printed text, or other machine-readable representation of data such as a barcode. The received/generated plurality of images are stored in a first memory in step S<b>604</b>. After the storage of the received/generated plurality of images, the plurality of images are separated into a plurality of image units in step S<b>606</b>. The plurality of images are typically equally divided into the plurality of image units, such as pages of a scanned document, according to page breaks or other division criteria. The other division criteria may include, for example, division according to one or a combination of document chapters, sections, arbitrary size (e.g., number of words), etc. In step S<b>608</b>, sequence identifiers, such as serial numbers, to identify the original sequence of images are assigned to the plurality of image units. A first subset of the plurality of image units is selected and processed by the Root MFP in step S<b>610</b>. The remaining, unprocessed, plurality of image units are divided into at least one second subset of the plurality of image units in step S<b>612</b>. In step S<b>614</b>, each of the at least one second subset of the plurality of image units is sent to a different information processing apparatus, such as any one of MFPs <b>20</b><i>b</i>-<b>20</b><i>d</i>, for processing. The processed at least one second subset of the plurality of image units is received by the Root MFP in step S<b>616</b>, and combined, or otherwise stored, in an order based on the sequence identifiers in step S<b>618</b>.</p>
<p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. 7</figref> illustrates an exemplary process performed by a Subordinate MFP for a distributed OCR job. In step S<b>702</b>, a plurality of image units corresponding to a plurality of images is received from another information processing apparatus, such as any one of MFPs <b>20</b><i>a</i>-<b>20</b><i>d</i>. The plurality of images corresponds to a subset of the total images in the distributed OCR job. The plurality of image units are stored in a memory in step S<b>704</b>. In step S<b>706</b>, a first subset of the plurality of image units is selected and processed. The unprocessed plurality of image units are divided into at least one second subset of the plurality of image units in step S<b>708</b> and each of the at least one second subset of the plurality of image units is sent to a different information processing apparatus for processing in step S<b>710</b>. The processed first subset of the plurality of image units are then sent to a designated information processing apparatus, such as the Root MFP <b>20</b><i>a </i>in step S<b>712</b>.</p>
<p id="p-0071" num="0070">As noted above, a Root MFP receives a multipage job to OCR. In one embodiment, the root manager <b>32</b> launches the distributed OCR job as follows. It designates the MFP <b>20</b><i>a </i>as a Root MFP and splits the multiple pages into S separate pages and assigns a serial number to each in order to associate it to the page sequence in the original multipage set. The root manager <b>32</b> then assembles an OCR Job Message, such as the OCR Job Message <b>900</b> illustrated in <figref idref="DRAWINGS">FIG. 9</figref> and further discussed below, using these pages and sequence numbers to create the OCR job to divide. In one embodiment, the OCR Job Message contains special instructions for the OCR Engine <b>24</b> and/or the OCR Job Operator <b>30</b>. The instructions and MFP distribution list in this message are obtained either from memory, or from a centralized server, or a dedicated MFP, or other source.</p>
<p id="p-0072" num="0071">The OCR job operator <b>28</b> on the Root MFP <b>20</b><i>a </i>performs OCR on a subset N number of the pages (N is taken from the instructions in the OCR Job Message) of the original S pages and stores the results in memory, as a file, or other form of data persistence.</p>
<p id="p-0073" num="0072">The OCR distribution manager <b>30</b> on the Root MFP <b>20</b><i>a </i>then subdivides the remaining pages and sends to Subordinate MFPs, such as MFPs <b>20</b><i>b</i>-<b>20</b><i>d </i>illustrated in <figref idref="DRAWINGS">FIG. 2</figref>, as follows. The OCR distribution manager <b>30</b> iterates down the MFP distribution list of D MFPs, included in the OCR Job Message, and sends test messages to each MFP in the list to find T MFPs, for example the first T MFPs, which is defined in the instructions of the OCR Job Message, on the MFP distribution list that are available to participate as a Subordinate MFP. Alternatively, test messages may be sent to a subset of the MFPs listed in the MFP distribution list. Qualifications to participate include: MFP currently is powered up and MFP is operationally capable of responding to OCR Job Message, as described below.</p>
<p id="p-0074" num="0073">The S-N remaining pages for OCR are then divided equally among the T MFPs, or as equally as possible if the remaining pages cannot be evenly divided. The D-T MFPs on the distribution list likewise are divided equally among the T MFPs. An OCR Job Message is constructed for each T Subordinate MFP by composing a divided page set and distribution list in each. The OCR Job Message to each T is completed by copying the instructions to them. The OCR Job Message is sent to each T Subordinate MFP.</p>
<p id="p-0075" num="0074">Each T Subordinate MFP processes this message similarly to the Root MFP <b>20</b><i>a</i>. The OCR job operator <b>28</b> on each performs OCR on a subset N of the pages received and, in this case, sends the results to the Root MFP <b>20</b><i>a </i>in an OCR Job Result Message, such as the OCR Job Result Message <b>1000</b> of <figref idref="DRAWINGS">FIG. 10</figref> further discussed below. In one embodiment, the address of the Root MFP is found in the instructions included in the OCR Job Message. The OCR distribution manager <b>30</b> in each T Subordinate MFP divides pages and distribution lists identically as done by the Root MFP <b>20</b><i>a</i>, and sends resulting OCR Job Messages to T new Subordinate MFPs.</p>
<p id="p-0076" num="0075">Note that OCR processing of N pages is occurring in parallel among T MFPs at this point. This process repeats at the new level of Subordinate MFPs. Note that at this level OCR processing of N pages is occurring in parallel among T to the power of 2 MFPs. This process repeats until MFPs receive pages in the OCR Job Message that are equal to or less than N. When this occurs, the MFP performs OCR on these pages resulting in no pages remaining to divide into new OCR Job Messages.</p>
<p id="p-0077" num="0076">As OCR Job Messages propagate to MFPs on the MFP distribution list, the results of these jobs arrive at the Root MFP <b>20</b><i>a </i>in OCR Result Messages. The root manager <b>32</b> on the Root MFP <b>20</b><i>a </i>takes these messages and stitches page sets together to form a completed OCR job with processed pages that correspond in sequence to the original multipage set that launched the distributed OCR job. In one embodiment, the stitching is done by annealing the last sequence number of one set to a set whose first sequence number is one increment higher. Alternatively, stitching may performed using any other information that identifies the position of a page set within the original multipage set.</p>
<p id="p-0078" num="0077">It is possible for any point in the process described above that an MFP fails to complete OCR on the subset N of the pages sent to it. This would result in the Root MFP's inability to stitch together a complete set of pages that correspond with the original multipage set. There are many ways that such failures can be handled. The most straightforward method is for the Root MFP <b>20</b><i>a </i>to set a timer at the launch of the distributed OCR job and stop it when the job completes (all pages stitched). If the timer expires before the job completes (results of all pages have not been received) the Root MFP <b>20</b><i>a </i>resets the timer and starts the process from the beginning using only the missing pages and completes the original job when the results of the missing pages arrive. Values of N, S, and T may be used to adjust the expiration setting for this timer.</p>
<p id="p-0079" num="0078">It is also possible that MFPs have pages to subdivide but no MFPs on the distribution list to subdivide, i.e. no Subordinate MFPs as targets for OCR Job Messages. There are numerous ways to handle this condition. One is to use the timer method as described above. The page sets sitting on MFPs with no targets to distribute to act as missing pages in this case. After the timer on the Root MFP <b>20</b><i>a </i>expires, these missing pages would be sent by the Root MFP <b>20</b><i>a </i>for distributed processing as described in the paragraph above. More elaborate ways to deal with this &#x201c;more pages but not targets&#x201d; condition are possible. For example, the value of N (subset of pages in single OCR jobs) can be mathematically computed from S (total number of original pages to OCR) and D (total number of MFPs on Root MFP's MFP distribution list) so that the &#x201c;more pages no targets&#x201d; condition does not occur. Mathematically, N=S/D where N is a whole number rounded up from a decimal value.</p>
<p id="p-0080" num="0079">The details described above can be reduced to a single divide and distribute mechanism repeated among MFPs as shown in <figref idref="DRAWINGS">FIG. 8</figref>. In step S<b>802</b> an MFP receives an OCR job message. The MFP performs OCR on a subset of N received pages in step S<b>804</b> and transmits an OCR results message in step S<b>806</b>. In step S<b>808</b>, the remaining pages of the OCR job received by the MFP is subdivided among T MFPs and sent to each T MFP in step S<b>810</b>.</p>
<p id="p-0081" num="0080">Iteration of this divide and distribute method among MFPs on the distribution list produces a hierarchical, parallel processing, peer-to-peer network with important advantages in time required to OCR a multipage job as described below.</p>
<p id="p-0082" num="0081">The hierarchical network is created when the Root MFP <b>20</b><i>a </i>distributes subsets of the job to each of T Subordinate MFPs, when each of these distribute to T and so on. This creates a tree like structure where one MFP exists as the Root MFP, T MFPs exist at level 1, T squared MFPs exist at level 2, T cubed MFPs exist at level 3 and so on. Because all OCR jobs at each level are parallel and thus performed concurrently, the time it takes to complete all jobs at one level is the time it takes to complete one OCR job.</p>
<p id="p-0083" num="0082">Suppose, for example, a <b>120</b> page document has each page taking 1 second to OCR. For this job to complete on one MFP, the 120 pages would be processed in sequence and take 2 minutes to complete. Now suppose these S=120 pages are processed by the distributed OCR processing of the present invention. To do so, suppose the following parameter values in the OCR Job Message instructions: T=5 MFPs. Suppose also that it takes 2 seconds total for one MFP to concurrently send its subdivided job to the T=5 MFPs. Since, in one embodiment, the Root MFP <b>20</b><i>a </i>stitches as results arrive, the time to stitch the completed job will approximately equal the time it takes for the last MFP to complete and send its OCR job. If there are D=20 MFPs available then N=S/D=6 pages are in a set for each divided OCR job.</p>
<p id="p-0084" num="0083">The results are as follows. One page will be completed at level 1 (the Root MFP <b>20</b><i>a</i>) in 6 seconds. It will take 2 seconds to send the subdivided job to the 5 MFPs at the next level, and 6 seconds to complete 30 pages in parallel at this level. It will take 2 seconds for the next subdivisions of job to be sent in parallel to the 14 remaining MFPs at the next level, where it will take 6 seconds to process, in parallel, the remaining 84 pages. The total time to complete the job with one embodiment of this invention is approximately 22 seconds or less than 20% the time to complete on a single MFP. These calculations are not exact and will vary with differences in network environments, number of pages in a divided OCR job (i.e. N), and other factors. Nevertheless, the calculations show significant time gains produced by the present invention.</p>
<p id="p-0085" num="0084">In general, these large time savings are due to the parallel processing of divided OCR jobs among MFPs. Parallelism exists among all MFPs on a single tree level created by the divide and distribute method of this invention; this parallelism becomes quite large because of the exponential growth of MFPs on a single level as the job propagates from one level to the next. This parallelism increases with increasing D (number of MFPs to share the processing) and T (number for each MFP to send subdivided OCR jobs).</p>
<p id="p-0086" num="0085"><figref idref="DRAWINGS">FIG. 9</figref> illustrates an embodiment of an OCR Job Message, which is transmitted from one MFP to another MFP. The OCR Job message <b>900</b> includes instructions <b>902</b> that are machine-readable instructions with three components that provide the following information for each MFP <b>20</b> involved in a distributed OCR job. In one embodiment, the instructions <b>902</b> are identical for each MFP and include the address of the Root MFP, the number of pages to OCR on each MFP (N), and the number of MFPs to which the job is distributed (T).</p>
<p id="p-0087" num="0086">The address of the Root MFP identifies the address of the Root MFP used as a destination to send a result of the divided OCR job. The address of the Root MFP may identify the MFP from which the distributed OCR job originates, a default device, or another device designated by the user. The number of pages to OCR on each MFP defines the number of pages N the Subordinate MFP that receives the OCR Job Message will OCR. Further, the number of MFPs to distribute job defines the number of MFPs to send the remaining pages of the OCR job that require further division and performance of OCR.</p>
<p id="p-0088" num="0087">As illustrated in <figref idref="DRAWINGS">FIG. 9</figref>, the OCR Job Message <b>900</b> further includes an OCR job to divide <b>904</b> and an MFP distribution list <b>910</b>. The OCR job to divide <b>904</b> holds a subset of pages from the original OCR job <b>906</b> and the sequence numbers of the pages in relation to all pages in the original OCR job <b>908</b>. The MFP distribution list <b>910</b> is a machine readable list of host addresses of MFPs that can participate in the same distributed OCR job. MFPs that are peers on the same network and that possess each component illustrated in <figref idref="DRAWINGS">FIG. 2</figref> are eligible for membership on this list.</p>
<p id="p-0089" num="0088"><figref idref="DRAWINGS">FIG. 10</figref> illustrates an embodiment of an OCR Result Message, which is sent to the device designated by the OCR Job Message (e.g., Root MFP) by Subordinate MFPs that participate in a distributed OCR job by performing OCR on a subset of the original OCR job. As illustrated in <figref idref="DRAWINGS">FIG. 10</figref>, the OCR Result Message <b>1000</b> holds the result of a divided OCR job, i.e., machine-readable text of N pages <b>1002</b> and sequence numbers of these N pages <b>1004</b>, which are in relation to the full sequence of pages in the original job.</p>
<p id="p-0090" num="0089">By way of summary, the distributed OCR processing system in one embodiment of the present invention includes the following features:</p>
<p id="p-0091" num="0090">1. A single MFP receives an original multipage OCR job and then divides and distributes subsets to a plurality of MFPs.</p>
<p id="p-0092" num="0091">2. The plurality of MFPs in (1) may each further divide a received subset into smaller subsets and distribute the smaller subsets to a further plurality of MFPs.</p>
<p id="p-0093" num="0092">3. The process in (2) may be repeated multiple times among further pluralities of MFPs.</p>
<p id="p-0094" num="0093">4. All MFPs in (1) and (2) additionally are
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0094">(a) able to communicate to each other on a network;</li>
        <li id="ul0002-0002" num="0095">(b) host an identical software agent;</li>
        <li id="ul0002-0003" num="0096">(c) perform OCR on a divided subset of original pages described in (1) by processing an OCR Job Message; and</li>
        <li id="ul0002-0004" num="0097">(d) process the results of an OCR job in (c) into an OCR Job Result Message that gets stored in memory of the MFP described in (1).</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0095" num="0098">5. The single MFP in (1) stitches together the OCR-processed pages in (4.d) into the correct sequence to match the sequence of pages in the original multipage OCR Job in (1) thus resulting in a completion of the multipage OCR job.</p>
<p id="p-0096" num="0099">6. The OCR Job Message in (4.c) has the following components:
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0000">
    <ul id="ul0004" list-style="none">
        <li id="ul0004-0001" num="0100">(a) list of network address of MFPs that satisfy all components in (4);</li>
        <li id="ul0004-0002" num="0101">(b) machine-readable instructions, composed of
        <ul id="ul0005" list-style="none">
            <li id="ul0005-0001" num="0102">(i) network address of MFP in (1),</li>
            <li id="ul0005-0002" num="0103">(ii) integer representing number of pages each MFP will OCR-process as described in (4.c),</li>
            <li id="ul0005-0003" num="0104">(iii) integer representing number of MFPs to which each of MFP in (1) and (2) will distribute subsets of pages,</li>
            <li id="ul0005-0004" num="0105">(iv) whereby (ii) is mathematically derived as the number of pages in the original multipage OCR job in (l) divided by the integer of MFPs listed in (a);</li>
        </ul>
        </li>
        <li id="ul0004-0003" num="0106">(c) subset of pages from original multipage OCR job in (1) that needs OCR processing, represented by (i) pages in subset, and (ii) sequence number of each page in subset (i) in relation to the sequence in the original multipage OCR job in (1).</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0097" num="0107">7. OCR Job Result Message in (4.d) has the following components:
<ul id="ul0006" list-style="none">
    <li id="ul0006-0001" num="0000">
    <ul id="ul0007" list-style="none">
        <li id="ul0007-0001" num="0108">(a) OCR-processed pages in (6.c) that result from OCR processing described in (4.c), and</li>
        <li id="ul0007-0002" num="0109">(b) sequence number of pages in (6.c.ii).</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0098" num="0110">8. Software agent in (4.b) has the following components:
<ul id="ul0008" list-style="none">
    <li id="ul0008-0001" num="0000">
    <ul id="ul0009" list-style="none">
        <li id="ul0009-0001" num="0111">(a) OCR job operator responsible for (i) performing OCR processing on a subset of pages described in (4.c), and (ii) processing results of OCR job as described in (4.d);</li>
        <li id="ul0009-0002" num="0112">(b) OCR distribution manager responsible for dividing and distributing subsets of pages as described in (1) and (2);</li>
        <li id="ul0009-0003" num="0113">(c) root manager responsible for (i) dividing original multipage document into separate single pages by MFP in (1), (ii) assigning sequence number to single pages to represent their sequence relative to the original multipage OCR job by MFP in (1), (iii) retrieving instructions described in (6.b) by MFP in (1), (iv) retrieving list of network addresses described in (6.a) by MFP in (1), and (v) identifying MFP as single MFP in (1) by recognizing receipt of original multipage MFP job as in (1); and</li>
        <li id="ul0009-0004" num="0114">(d) performing the stitching process as described in (5).</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0099" num="0115">9. Identification of MFP in (8.c.v) as single MFP in (1) causes processing of results of OCR job described in (4.d) to be done by storing OCR Job Message in memory.</p>
<p id="p-0100" num="0116">10. Lack of identification of MFP in (8.c.v) as single MFP in (1) causes processing of OCR job described in (4.d) to be done by sending OCR Job Message to MFP in (1) using network address in instructions described in (6.b.i).</p>
<p id="p-0101" num="0117">11. An exemplary algorithm for processing OCR on a subset of pages described in (4.c) is as follows:
<ul id="ul0010" list-style="none">
    <li id="ul0010-0001" num="0000">
    <ul id="ul0011" list-style="none">
        <li id="ul0011-0001" num="0118">(a) MFP reads integer in (6.b.ii) and extracts the first N pages from (6.c.i) where N either equals this integer value or the number of pages in (6.c.i) based on whether the integer is greater than this number of pages;</li>
        <li id="ul0011-0002" num="0119">(b) pages extracted in (a) undergo OCR-processing by MFP in (a);</li>
        <li id="ul0011-0003" num="0120">(c) MFP in (a) creates instance of OCR Job Result Message (7) using pages and their corresponding sequence numbers from (b); and</li>
        <li id="ul0011-0004" num="0121">(d) MFP in (a) sends message in (c) to network address in (6.b.i).</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0102" num="0122">12. An exemplary algorithm for dividing and distributing subsets of pages as described in (1) and (2) is performed by MFP in (11) as follows:
<ul id="ul0012" list-style="none">
    <li id="ul0012-0001" num="0000">
    <ul id="ul0013" list-style="none">
        <li id="ul0013-0001" num="0123">(a) algorithm operates if the value of N in (11.a) is less than the number of pages from (6.c.i) which represents the case where the number of pages in (11.b) is a subset of pages from (6.c.i), leaving additional pages that require OCR processing;</li>
        <li id="ul0013-0002" num="0124">(b) reads integer value in (6.b.iii);</li>
        <li id="ul0013-0003" num="0125">(c) reads list of network addresses in (6.a) and stores in memory network addresses of first T MFPs on list that respond to test message to determine if MFP is operating, where T is the value in (b);</li>
        <li id="ul0013-0004" num="0126">(d) creates new list derived from list in (6.a) with MFPs in (c) removed;</li>
        <li id="ul0013-0005" num="0127">(e) divides remaining pages and their sequence numbers in (a) to create T equal (or near equal) sized subsets of pages to OCR; and</li>
        <li id="ul0013-0006" num="0128">(f) subdivides list in (d) to create T equal (or near equal) sized sublists of network addresses of MFPs.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0103" num="0129">13. Creation of new instances of OCR Job Messages by MFP in (11) as follows:
<ul id="ul0014" list-style="none">
    <li id="ul0014-0001" num="0000">
    <ul id="ul0015" list-style="none">
        <li id="ul0015-0001" num="0130">(a) instructions in (6.b) are copied T times where T is integer value in (6.b.iii);</li>
        <li id="ul0015-0002" num="0131">(b) one copy of instructions in (a) is combined with one subset of pages in (12.e) and one sublist from (12.f); and</li>
        <li id="ul0015-0003" num="0132">(c) step (b) is repeated for each copy of instructions in (a), subset of pages in (12.e) and sublist in (12.f) to create T OCR Job Messages.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0104" num="0133">14. The MFP in (11) sends one OCR Job Message from (13) to each of T MFPs identified in (12.c)</p>
<p id="p-0105" num="0134">5. Each T MFP in (14) to which OCR Job Messages are sent performs the algorithm in (11) and then (12).</p>
<p id="p-0106" num="0135">16. OCR processing in (11) and the distribution of OCR Job Message(s) as described in (12) and (13) occurs first on the MFP in (1) immediately after the root manager component on this MFP performs the processing as described by (8.c).</p>
<p id="p-0107" num="0136">17. The iteration of (14) and (15) repeats until the additional pages condition in (12.a) is not satisfied.</p>
<p id="p-0108" num="0137">18. The operation of (16) and (17) results in a hierarchical tree structure of MFPs in a computer cluster where the number of MFPs at each level is T (6.b.iii) times more than that on the previous level.</p>
<p id="p-0109" num="0138">19. The OCR processing of equal-sized subsets of pages as described in (11) occurs in parallel (concurrently) among all MFPs on the same hierarchical tree level described in (18).</p>
<p id="p-0110" num="0139">Numerous modifications and variations of the present invention are possible in light of the above teachings. It is therefore to be understood that within the scope of the appended claims, the invention may be practiced otherwise than as specifically described herein.</p>
<p id="p-0111" num="0140">For example, the plurality of MFPs that perform OCR processing in parallel may be dedicated servers and not MFPs. Alternatively, a combination of MFPs and servers may be used to perform the OCR processing.</p>
<p id="p-0112" num="0141">The present invention described above involves the following sequence of two steps on each MFP: perform OCR on N pages, then subdivide and send to T MFPs. The sequence of these steps may be reversed, or both steps may be performed asynchronously (i.e., concurrently), or may be reversed (i.e., subdivide and send to T MFPs, then perform OCR on N pages) with no effect on the fundamental nature of this invention.</p>
<p id="p-0113" num="0142">Further, conditions can be set in the Root MFP to only distribute multipage OCR jobs that exceed a certain number of pages, that occur at a certain time of data, etc.</p>
<p id="p-0114" num="0143">Moreover, the subdividing of a job for parallel processing among MFPs per the present invention may be performed on other types of jobs other than multipage OCR. Any multi-step or multi-part job (e.g., mathematical calculations, image analyses, text-to-speech, text language translation, video analysis, etc) that can be broken into independent subsets can be distributed for parallel processing among MFPs followed by recombination of results by one MFP or other designated device. As such, the computing power of a company's fleet of MFPs may be harnessed at night, for example, to perform complex, resource-intensive, or high-volume processing of work.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method of using an information processing apparatus for processing a plurality of images, the method comprising:
<claim-text>receiving or generating by the information processing apparatus the plurality of images;</claim-text>
<claim-text>storing the plurality of images in a memory;</claim-text>
<claim-text>separating the plurality of images into a plurality of image units;</claim-text>
<claim-text>assigning sequence identifiers to the plurality of image units;</claim-text>
<claim-text>processing, by the information processing apparatus, a first subset of the plurality of image units;</claim-text>
<claim-text>dividing, by the information processing apparatus, the unprocessed plurality of image units into at least one second subset of the plurality of image units; and</claim-text>
<claim-text>sending each of the at least one second subset of the plurality of image units to a different information processing apparatus for processing.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>receiving the processed at least one second subset of the plurality of image units; and</claim-text>
<claim-text>combining the processed first and second subsets of the plurality of image units in an order based on the sequence identifiers.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>the separating step comprises separating the plurality of images into a plurality of image units corresponding to pages of a scanned document; and</claim-text>
<claim-text>the processing comprises performing, by the information processing apparatus, optical character recognition on the first subset of the plurality of image units.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the sending step comprises sending a job request message to each different information processing apparatus, the job request message including information defining a number of image units to be processed by the respective different information processing apparatus and a number of additional information processing apparatuses to which unprocessed image units are to be sent.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the receiving the processed at least one second subset of the plurality of image units step comprises receiving a job result message, the job result message including at least one processed image unit and a corresponding sequence identifier.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the dividing step comprises determining whether the number of the plurality of image units is greater than the number of the first subset of the plurality of image units and, based on a determination that the number of the plurality of image units is greater than the number of the first subset of the plurality of image units, dividing the unprocessed plurality of image units into the at least second subset of the plurality of image units according to a predetermined number of additional information processing apparatuses to which the unprocessed plurality of image units are to be sent.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the receiving the processed at least one second subset of the plurality of image units step comprises receiving, from another information processing apparatus, a subset of one of the at least one second subset of the plurality of image units sent to the different information processing apparatus.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A method of using an information processing apparatus for processing a plurality of images, the method comprising:
<claim-text>receiving a plurality of image units corresponding to the plurality of images from another information processing apparatus;</claim-text>
<claim-text>storing the plurality of image units in a memory;</claim-text>
<claim-text>processing, by the information processing apparatus, a first subset of the plurality of image units; and</claim-text>
<claim-text>dividing, by the information processing apparatus, the unprocessed plurality of image units into at least one second subset of the plurality of image units;</claim-text>
<claim-text>sending each of the at least one second subset of the plurality of image units to a different information processing apparatus for processing; and</claim-text>
<claim-text>sending the processed first subset of the plurality of image units to a designated information processing apparatus.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein
<claim-text>the receiving step comprises receiving the plurality of image units corresponding to pages of a scanned document; and</claim-text>
<claim-text>the processing step comprises performing, by the information processing apparatus, optical character recognition on the first subset of the plurality of image units.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the sending each of the at least one second subset of the plurality of image units step comprises sending a job request message to each different information processing apparatus, the job request message including information defining a number of image units to be processed by the respective different information processing apparatus and a number of additional information processing apparatuses to which unprocessed image units are to be sent.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the sending the processed first subset of the plurality of image units includes sending a job result message, the job result message including at least one processed image unit and a corresponding sequence identifier.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the dividing step comprises determining whether the number of the plurality of image units is greater than the number of the first subset of the plurality of image units and, based on a determination that the number of the plurality of image units is greater than the number of the first subset of the plurality of image units, dividing the unprocessed plurality of image units into the at least one second subset of the plurality of image units according to a predetermined number of additional information processing apparatuses to which the unprocessed plurality of image units are to be sent.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. An information processing apparatus, comprising:
<claim-text>a memory configured to store a plurality of images, the plurality of images being received or generated by the information processing apparatus;</claim-text>
<claim-text>at least one processor configured</claim-text>
<claim-text>to separate the plurality of images into a first plurality of image units;</claim-text>
<claim-text>to assign sequence identifiers to the first plurality of image units;</claim-text>
<claim-text>to receive a second plurality of image units;</claim-text>
<claim-text>to process a first subset of one of the first and second plurality of image units;</claim-text>
<claim-text>to divide the one of the unprocessed first and second plurality of image units into at least one second subset of the one of the first and second plurality of image units; and</claim-text>
<claim-text>a sending unit configured to send each of the at least one second subset of the one of the first and second plurality of image units to a different information processing apparatus for processing.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The information processing apparatus according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising:
<claim-text>a receiving unit configured to receive the processed at least one second subset of the first plurality of image units, wherein</claim-text>
<claim-text>the at least one processor is configured to combine the processed first and second subsets of the first plurality of image units in an order based on the sequence identifiers.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The information processing apparatus according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the at least one processor is configured
<claim-text>to separate the plurality of images into a plurality of image units corresponding to pages of a scanned document; and</claim-text>
<claim-text>to perform optical character recognition on the first subset of the one of the first and second plurality of image units.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The information processing apparatus according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the sending unit is configured to send a job request message to each different information processing apparatus, the job request message including information defining a number of image units to be processed by the respective different information processing apparatus and a number of additional information processing apparatuses to which unprocessed image units are to be sent.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The information processing apparatus according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the receiving unit is configured to receive, and the sending unit is configured to send, a job result message, the job result message including at least one processed image unit and a corresponding sequence identifier.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The information processing apparatus according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the at least one processor is configured to determine whether the number of the one of the first and second plurality of image units is greater than the number of the first subset of the one of the first and second plurality of image units and, based on a determination that the number of the one of the first and second plurality of image units is greater than the number of the first subset of the one of the first and second plurality of image units, to divide the one of the first and second unprocessed plurality of image units into the at least one second subset of the one of the first and second plurality of image units according to a predetermined number of additional information processing apparatuses to which the one of the first and second unprocessed plurality of image units are to be sent.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The information processing apparatus according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the receiving unit is configured to receive, from another information processing apparatus, a subset of one of the at least one second subset of the first plurality of image units sent to the different processing apparatus.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The information processing apparatus according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein
<claim-text>the same process is performed on the first subset of the one of the first and second plurality of image units by the at least one processor and on each of the at least one second subset of the one of the first and second plurality of image units by the respective different information processing apparatus.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
