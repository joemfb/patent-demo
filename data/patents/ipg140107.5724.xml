<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626827-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626827</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13072539</doc-number>
<date>20110325</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>231</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>16</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>709203</main-classification>
<further-classification>709218</further-classification>
<further-classification>709227</further-classification>
<further-classification>709230</further-classification>
<further-classification>370242</further-classification>
<further-classification>370254</further-classification>
<further-classification>37039553</further-classification>
<further-classification>705 34</further-classification>
<further-classification>705 35</further-classification>
</classification-national>
<invention-title id="d2e53">Programmatically simulating system conditions</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6275785</doc-number>
<kind>B1</kind>
<name>Currie et al.</name>
<date>20010800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>703 13</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7184945</doc-number>
<kind>B1</kind>
<name>Takahashi et al.</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>703 22</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>8285822</doc-number>
<kind>B2</kind>
<name>K.</name>
<date>20121000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709220</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2004/0117460</doc-number>
<kind>A1</kind>
<name>Walsh et al.</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709219</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2004/0221177</doc-number>
<kind>A1</kind>
<name>Koops</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713201</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2005/0027837</doc-number>
<kind>A1</kind>
<name>Roese et al.</name>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709223</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2005/0100032</doc-number>
<kind>A1</kind>
<name>Patiejunas</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370410</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2005/0132064</doc-number>
<kind>A1</kind>
<name>Lo</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709227</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2005/0203995</doc-number>
<kind>A1</kind>
<name>Schumacher</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709203</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2007/0147357</doc-number>
<kind>A1</kind>
<name>Pelletier et al.</name>
<date>20070600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370356</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2008/0159168</doc-number>
<kind>A1</kind>
<name>Ariyoshi et al.</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370253</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2008/0228866</doc-number>
<kind>A1</kind>
<name>Minatogawa et al.</name>
<date>20080900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709203</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2008/0263400</doc-number>
<kind>A1</kind>
<name>Waters et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714 30</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2009/0182605</doc-number>
<kind>A1</kind>
<name>Lappas et al.</name>
<date>20090700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705  8</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2009/0327909</doc-number>
<kind>A1</kind>
<name>Hayton</name>
<date>20091200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715744</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2010/0161789</doc-number>
<kind>A1</kind>
<name>Walia et al.</name>
<date>20100600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709224</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2010/0218104</doc-number>
<kind>A1</kind>
<name>Lewis</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715736</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2011/0055136</doc-number>
<kind>A1</kind>
<name>Hamilton et al.</name>
<date>20110300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>706 47</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2011/0087522</doc-number>
<kind>A1</kind>
<name>Beaty et al.</name>
<date>20110400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705  738</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2011/0125873</doc-number>
<kind>A1</kind>
<name>Pacella et al.</name>
<date>20110500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709219</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>2012/0060167</doc-number>
<kind>A1</kind>
<name>Salsburg et al.</name>
<date>20120300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>718104</main-classification></classification-national>
</us-citation>
</us-references-cited>
<number-of-claims>34</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>709203</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709227-229</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715700-866</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714 30</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714 32- 33</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370242</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370254</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>705 34- 39</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>3</number-of-drawing-sheets>
<number-of-figures>3</number-of-figures>
</figures>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Cabrera</last-name>
<first-name>Luis Felipe</first-name>
<address>
<city>Bellevue</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>De Santis</last-name>
<first-name>Peter</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Cabrera</last-name>
<first-name>Luis Felipe</first-name>
<address>
<city>Bellevue</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>De Santis</last-name>
<first-name>Peter</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Seed IP Law Group PLLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Amazon Technologies, Inc.</orgname>
<role>02</role>
<address>
<city>Reno</city>
<state>NV</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Rutkowski</last-name>
<first-name>Jeffrey M</first-name>
<department>2479</department>
</primary-examiner>
<assistant-examiner>
<last-name>Fayed</last-name>
<first-name>Rasha</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Systems and methods are provided for programmatically simulating one or more system conditions for a network resource using one or more services. In one implementation, a server receives a request to initiate a treatment. The request identifies a treatment definition. The server determines, based on the treatment definition, the one or more services and deploys the one or more services to the network resource. The one or more services simulate the one or more system conditions.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="185.59mm" wi="117.43mm" file="US08626827-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="191.69mm" wi="142.66mm" orientation="landscape" file="US08626827-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="144.27mm" wi="130.73mm" orientation="landscape" file="US08626827-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="202.35mm" wi="117.18mm" file="US08626827-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">A modern computer network system typically includes a variety of components. For example, in packet-switched computer networks, such as the Internet or local area networks (LANs), logically addressed data packets are sometimes routed from a source to a destination through one or more intermediate nodes. The intermediate nodes may comprise hardware components, such as routers, which direct and control the flow of data through the networks. Networks also may include other components, such as servers, bridges, gateways, firewalls, and switches, through which data packets may travel.</p>
<p id="p-0003" num="0002">A network system may experience a variety of events that can cause a degradation in its performance. For example, increased data loads can affect the performance of network components, such as routers, and slow the ability of a network to distribute data. Increased compute loads can stress the capabilities of servers. Other events, such as a denial-of-service (DoS) attack or a distributed denial-of-service (DDoS) attack, can overwhelm and cripple a server with large volumes of communications requests. As further examples, network components may experience packet loss, causing data packets to fail to reach a destination, or packet corruption, causing data packets to arrive at a destination with errors. Unexpected disruptions and delays can impact an entity's ability to function in a timely and efficient manner.</p>
<p id="p-0004" num="0003">To prevent unexpected disruptions and delays, an entity may wish to understand how a configuration of a particular set of provisioned resources, such as network components and servers, will react under certain conditions that may impact performance. However, testing such resources can be time consuming and expensive. For example, one way to test network components is through the use of hardware components that are designed for testing purposes. Such hardware components can be used to determine whether a device is functioning properly. However, these components require configuration that is time consuming, costly, and complex. Furthermore, users of hosted environments, such as those in a public cloud computing environment, are unable to directly conduct such tests because such users are making use of an infrastructure that is within another party's control.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0002" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0005" num="0004">The accompanying drawings, which are incorporated in and constitute a part of this disclosure, illustrate various disclosed embodiments. In the drawings:</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 1</figref> is a diagram of an example of a system for programmatically simulating conditions for one or more network resources;</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 2</figref> shows a diagram of an example of an architecture of a simulation server, consistent with a disclosed embodiment; and</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 3</figref> is a flow diagram of an example of a routine for programmatically simulating conditions for one or more network resources.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0003" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0009" num="0008">The following detailed description refers to the accompanying drawings. Wherever possible, the same reference numbers are used in the drawings and the following description to refer to the same or similar parts. While several illustrative embodiments are described herein, modifications, adaptations and other implementations are possible. For example, substitutions, additions or modifications may be made to the components illustrated in the drawings, and the illustrative methods described herein may be modified by substituting, reordering, removing, or adding blocks to the disclosed methods. Accordingly, the following detailed description is not limiting of the disclosed embodiments. Instead, the proper scope is defined by the appended claims.</p>
<p id="p-0010" num="0009">Disclosed systems and methods allow a user of a hosted environment to programmatically simulate system conditions, such as failures or other unusual conditions, in a distributed environment. In some embodiments, the hosted computing environment (&#x201c;hosted environment&#x201d;) is a public cloud that allows for on-demand provisioning of compute resources, such as virtualized or non-virtualized compute nodes, storage devices, routers, switches, and load balancers. The provisioned resources may be configured in various ways to meet the user's needs. For example, users may select a number of provisioned nodes, a configuration (e.g., operating system type, memory allocation, CPU speed, and storage size) of provisioned nodes, and networking topology.</p>
<p id="p-0011" num="0010">Through the use of application programming interfaces (APIs) implemented by the disclosed systems, a user may introduce system conditions such as various network loads and a variety of partial and complete server failure scenarios into the user's configured environment. For example, the system may generate an arbitrary packet load on a host computer to simulate DDoS scenarios. A user also may instruct the system to introduce environment failure scenarios by using the APIs. These APIs may, for example, simulate crashing a computer and bringing the computer back online after a specified amount of time, set a computer to randomly appear and disappear from a network to simulate a bad network card or router port, or create a partial or complete network partition amongst a set of computers, among other possibilities. Furthermore, for example, the systems can be used to artificially introduce packet corruption, packet loss, and/or packet duplication between host computers.</p>
<p id="p-0012" num="0011">In one embodiment, a computer-implemented method programmatically simulates one or more system conditions for a network resource using one or more services. A server may receive a treatment definition that includes data identifying one or more services and the network resource. The server may receive a request to initiate the treatment. The server may determine, based on the treatment definition, one or more services and deploy the identified services to the network resource to simulate one or more system conditions at the network resource.</p>
<p id="p-0013" num="0012">In other embodiments, a system may include a processor for executing program instructions and a computer-readable storage medium (e.g., a memory) storing the program instructions. The program instructions, when executed by the processor, may perform the method discussed above.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 1</figref> is an example of a system <b>100</b> that enables a user to programmatically simulate conditions for one or more network resources, consistent with a disclosed embodiment. In <figref idref="DRAWINGS">FIG. 1</figref>, system <b>100</b> includes a network <b>120</b> that interconnects a simulation server <b>110</b>, a gateway server <b>130</b>, nodes <b>138</b>A and <b>138</b>B, endpoints <b>140</b>A-<b>140</b>E, a host server <b>150</b>, and terminals <b>160</b> and <b>170</b>. System <b>100</b> may provide functionality that enables the user to programmatically simulate conditions for network resources of system <b>100</b> (e.g., one or more of simulation server <b>110</b>, gateway server <b>130</b>, nodes <b>138</b>A and <b>138</b>B, endpoints <b>140</b>A-<b>140</b>E, host server <b>150</b>, and terminals <b>160</b> and <b>170</b>).</p>
<p id="p-0015" num="0014">System <b>100</b> may be representative of a portion of a hosted environment (e.g., a public cloud that facilitates the provisioning of network resources), and system <b>100</b> may provide functionality for simulating conditions or events in the hosted environment, such as DoS/DDoS attacks, computing system failures, increased network traffic, and packet loss, packet duplication, and/or packet corruption conditions.</p>
<p id="p-0016" num="0015">Such functionality may be provided through a user interface or an application programming interface (API) that forwards requests for various simulation services to simulation server <b>110</b> across network <b>120</b>. In such embodiments, a request for a service may encompass any direct or indirect mechanism by which simulation server <b>110</b> (or other software residing on another computer) provides information that invokes certain behavior in another software component.</p>
<p id="p-0017" num="0016">One of skill in the art will appreciate that although a certain number of each component is depicted in <figref idref="DRAWINGS">FIG. 1</figref>, any number of these components may be provided. For example, one of skill in the art will recognize that one or more components of system <b>100</b> may be combined and/or divided into subcomponents. Furthermore, one of skill in the art will recognize that system <b>110</b> may include additional or fewer components, and may be arranged in alternative configurations.</p>
<p id="p-0018" num="0017">Network <b>120</b> provides communications between the various network resource components in system <b>100</b>, such as simulation server <b>110</b>, gateway server <b>130</b>, host server <b>150</b>, and terminals <b>160</b> and <b>170</b>. Terminals <b>160</b> and <b>170</b> may provide interfaces for a user to define simulation conditions for network resources of system <b>100</b>. In addition, simulation server <b>110</b>, gateway server <b>130</b>, host server <b>150</b>, and terminals <b>160</b> and <b>170</b> may access legacy systems (not shown) via network <b>120</b>, or may directly access legacy systems, data stores, or other network applications. For example, these legacy systems may include obsolete components and applications that are accommodated by system <b>100</b>, for example, due to necessity or due to an association with certain data.</p>
<p id="p-0019" num="0018">Network <b>120</b> may be a shared, public, or private network, may encompass a wide area or local area, and may be implemented through any suitable combination of wired and/or wireless communication networks. Network <b>120</b> may further comprise an intranet or the Internet.</p>
<p id="p-0020" num="0019">Simulation server <b>110</b> may comprise a general purpose computer (e.g., a personal computer, network computer, server, or mainframe computer) having one or more processors that may be selectively activated or reconfigured by a computer program stored in memory. Simulation server <b>110</b> may be implemented in a distributed network, such that simulation server <b>110</b> may communicate via network <b>120</b> with additional simulation servers (not shown). Alternatively, simulation server <b>110</b> may be specially constructed for carrying-out methods consistent with disclosed embodiments.</p>
<p id="p-0021" num="0020">Gateway server <b>130</b> may include a processor <b>132</b>, a memory <b>134</b>, and a data store <b>136</b>. Memory <b>134</b> may comprise one or more memory or storage devices that store data as well as software. Memory <b>134</b> may also comprise, for example, one or more of RAM, ROM, magnetic storage, or optical storage. Memory <b>134</b> may store program modules that, when executed by processor <b>122</b>, perform one or more processes for storing and/or accessing data residing on data store <b>136</b>. Data store <b>116</b> may store applications, libraries, data, and associated configuration settings for one or more entities.</p>
<p id="p-0022" num="0021">As depicted, gateway server <b>130</b> may communicate with nodes <b>138</b>A-<b>138</b>B, which may, in turn, communicate with endpoints <b>140</b>A-<b>140</b>E via data links (e.g., wired or wireless links). For example, gateway server <b>130</b>, nodes <b>138</b>A-<b>138</b>B, and endpoints <b>140</b>A-<b>140</b>E may constitute a local area network (LAN) <b>120</b><i>a </i>that is distinct from network <b>120</b>. In such embodiments, nodes <b>138</b>A and <b>138</b>B, and additionally or alternatively, endpoints <b>140</b>A-<b>140</b>E, may be associated with communications protocols that are incompatible with the communications protocols of network <b>120</b>, and may communicate with network <b>120</b> through gateway server <b>130</b>.</p>
<p id="p-0023" num="0022">LAN <b>120</b><i>a </i>may be part of or constitute a hosted environment in which one or more entities can provision gateway server <b>130</b>, nodes <b>138</b>A and <b>138</b>B, and endpoints <b>140</b>A-<b>140</b>E in order to execute various applications. Nodes <b>138</b>A and <b>138</b>B may constitute any network resource or component, such as routers, servers, bridges, gateways, firewalls, and switches, through which data packets may travel. Endpoints <b>140</b>A-<b>140</b>E may be any type device that communicates through nodes <b>138</b>A-<b>138</b>B. For example, endpoints <b>140</b>A-<b>140</b>E may be personal computers, handheld devices (e.g., PDAs, cellular phones, workstations, etc.), servers, or any other appropriate computing platform or device capable of exchanging data with gateway server <b>130</b>. Endpoints <b>140</b>A-<b>140</b>E may each include a processor (not shown) and a memory (not shown).</p>
<p id="p-0024" num="0023">Host server <b>150</b> may comprise a general purpose computer (e.g., a personal computer, network computer, server, or mainframe computer) having one or more processors that may be selectively activated or reconfigured by a computer program. Host server <b>150</b> may be implemented in a distributed network. For example, host server <b>150</b> may communicate via network <b>120</b> with additional servers (not shown), which may enable host server <b>150</b> to distribute processes for parallel execution by a plurality of servers. Although not depicted in <figref idref="DRAWINGS">FIG. 1</figref>, in one embodiment, host server <b>150</b> may include components (e.g. memory, processor, etc.) that are equivalent to those of gateway server <b>130</b>.</p>
<p id="p-0025" num="0024">Furthermore, consistent with disclosed embodiments, simulation server <b>110</b> may also programmatically simulate network conditions at gateway server <b>130</b> and/or host server <b>150</b>. For example, in such embodiments, a user at one of network terminals <b>160</b> and <b>170</b> may coordinate with simulation server <b>110</b> to programmatically simulate a system condition at gateway server <b>130</b> and/or host server <b>150</b>. A user at one of network terminals <b>160</b> and <b>170</b> may further monitor a performance metric of one or more components of system <b>100</b> in response to the simulated system condition.</p>
<p id="p-0026" num="0025">Terminals <b>160</b> and <b>170</b> may be any type device for communicating with simulation server <b>110</b>, gateway server <b>130</b>, and/or host server <b>150</b>. For example, terminals <b>160</b> and <b>170</b> may be personal computers, handheld devices (e.g., PDAs, cellular phones, workstations, etc.), servers, or any other appropriate computing platform or device capable of exchanging data with simulation server <b>110</b>, gateway server <b>130</b>, and/or host server <b>150</b>. Terminals <b>160</b> and <b>170</b> may each include a processor (not shown) and a memory (not shown). Furthermore, terminals <b>160</b> and <b>170</b> may execute program modules that provide one or more graphical user interfaces (GUIs) for interacting with simulation server <b>110</b>, gateway server <b>130</b>, and/or host server <b>150</b>. Alternatively, in other embodiments, users of terminals <b>160</b> and <b>170</b> may access data through other network mechanisms, such as through an API of one or more services (e.g., a web service).</p>
<p id="p-0027" num="0026">In one embodiment, simulation server <b>110</b> may provide functionality for simulating conditions or events at one or more components in a distributed environment. For example, network resources of LAN <b>120</b><i>a </i>of <figref idref="DRAWINGS">FIG. 1</figref>, such as gateway server <b>130</b> and nodes <b>138</b>A and <b>138</b>B are shared by several clients (e.g., endpoints <b>140</b>A-<b>140</b>E). Consistent with disclosed embodiments, simulation services may be executed by a network resource (e.g., gateway server <b>130</b> and nodes <b>138</b>A-<b>138</b>B), or may be executed by a virtualized host (e.g., a virtual node associated with gateway server <b>130</b>) to selectively manipulate packet streams. For example, the manipulation of the packet streams may be based upon a treatment specified by a user for a particular network resource or a set of network resources.</p>
<p id="p-0028" num="0027">A treatment may comprise one or more simulation services designed to create or simulate certain network conditions or events. For example, in one embodiment, a simulation service may simulate a failure of certain nodes in a network (e.g., one or more of nodes <b>138</b>A and <b>138</b>B), introduce latency into a network, perform load simulations, test recovery code, or power off a server (e.g., one or more of <b>140</b>A-E) to simulate a failure. In other embodiments, a simulation service may simulate a failure of a network resource by returning a message indicative of failure in reply to a request. In still other embodiments, a simulation service may apply a particular data load on, for example, host server <b>150</b>. Such a simulation may increase a load of host server <b>150</b> over a period of time (e.g., an hour, two hours, a day). In yet other embodiments, a simulation service may specify a data rate at which packets should be corrupted (e.g., corrupt one in a million packets, corrupt two in a million packets, etc.). This rate can be configured to increase over time such that a breaking point or negative performance threshold of a network or network component can be determined. In still other embodiments, a simulation service may specify a packet loss rate to be introduced at one or more network components. Accordingly, one or more simulation services may manipulate packet streams such that a user can monitor and determine how a network or other component responds (e.g., whether the network or component recovers).</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 2</figref> shows a diagram of an example of an architecture of simulation server <b>110</b>, consistent with a disclosed embodiment. As discussed above, simulation server <b>110</b> may provide functionality for simulating certain events or conditions through the use of treatments and services. Furthermore, simulation server <b>110</b> may enable the scheduling, execution, monitoring, and reporting of data related to executed treatments.</p>
<p id="p-0030" num="0029">Simulation server <b>110</b> may include a processor <b>202</b>, a memory <b>204</b>, and a data store <b>206</b>. Data store <b>206</b> may include a treatment store <b>206</b><i>a</i>, which may store data reflecting treatments. For example, treatment store <b>206</b><i>a </i>may store data reflecting certain predefined treatments and/or data reflecting user-defined, customized treatments. For a particular entity, treatment store <b>206</b><i>a </i>may store data specifying certain simulation services an entity has selected for execution and may further include data specifying scheduling information pertaining to the simulation services.</p>
<p id="p-0031" num="0030">Memory <b>204</b> may be one or more memory or storage devices that store data as well as software. Memory <b>204</b> may comprise, for example, one or more of RAM, ROM, magnetic storage, or optical storage. Furthermore, memory <b>204</b> may store programming modules, which when executed by processor <b>202</b>, perform one or more processes for simulating conditions or events for a network or a network component. For example, memory <b>204</b> may include a definition module <b>204</b><i>a</i>, a scheduling module <b>204</b><i>b</i>, and a reporting module <b>204</b><i>c</i>, as shown in <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="p-0032" num="0031">Definition module <b>204</b><i>a </i>may provide functionality that enables a user at one of terminals <b>160</b> and <b>170</b> to define a treatment. The definition of a treatment may include, but is not limited to, a specification of a network resource that should receive the treatment and an identification of one or more simulation services associated with the treatment. For example, the network resource may include one of more of endpoints <b>140</b>A-<b>140</b>E, nodes <b>138</b>A and <b>138</b>B, gateway server <b>130</b>, and host server <b>150</b>, and the network resource may be specified using one or more of an IP address, a uniform resource identifier (URI), a uniform resource locator (URL), an account hosted on the network resource (e.g., on gateway server <b>130</b> or host server <b>150</b>), and any additional or alternate identifier of the network resource.</p>
<p id="p-0033" num="0032">As described above, the definition of the treatment may also identify one or more simulation services designed to create or simulate certain system conditions. For example, using one or more simulation services as building blocks, the user may create arbitrary loads and hardware conditions at a component of system <b>100</b>. Such simulation services may be initiated through the use of application programming interfaces (APIs) and/or may be defined and/or scheduled through a user interface.</p>
<p id="p-0034" num="0033">Further, the definition of a treatment may be preexisting (e.g., a predefined treatment definition stored in data store <b>206</b>) or may be user defined (e.g., a user at one of terminals <b>160</b> and <b>170</b> may customize a treatment by selecting services and associated parameters that comprise a treatment). Definition module <b>204</b><i>a </i>may further store treatment definitions in treatment store <b>206</b><i>a </i>of data store <b>206</b>.</p>
<p id="p-0035" num="0034">Scheduling module <b>204</b><i>b </i>may provide functionality for scheduling treatments. For example, a user at one of terminals <b>160</b> and <b>170</b> may schedule a treatment to occur at a particular time (i.e., a one-time simulation) or schedule a treatment to occur on a periodic basis (i.e., a regularly-scheduled simulation). Alternatively, a user may schedule a treatment to occur when certain network conditions are met (e.g., when data loads are low). At the time a treatment is to be executed, scheduling module <b>204</b><i>b </i>may retrieve data defining one or more treatments from data store <b>206</b> and deploy appropriate services to implement the defined one or more treatments.</p>
<p id="p-0036" num="0035">Reporting module <b>204</b><i>c </i>may monitor and record results of treatments, and may generate logs or reports. For example, simulation server <b>110</b> may monitor a network or network component and provide a report summarizing or detailing a treatment. Such a report may include diagnostic information, such as a timeline of the simulation that indicates which services were deployed and when. A user who requested the simulation may correlate the report to the user's data. For example, the report may be correlated to system monitoring data logged by the user during the simulation of the system condition. In such embodiments, the correlated data may be stored, for example, in memory <b>204</b> of simulation server <b>110</b>.</p>
<p id="p-0037" num="0036">As discussed above, a treatment may comprise one or more simulation services designed to create or simulate certain network or component conditions. For example, using one or more simulation services as building blocks, one may recreate arbitrary loads and hardware conditions. These simulation services may be initiated through the use of application programming interfaces (APIs) and/or may be defined and/or scheduled through a user interface. The following provides an overview of illustrative simulation services.</p>
<p id="p-0038" num="0037">For example, simulation server <b>110</b> may enable a user to simulate a DDoS attack on a network resource of system <b>100</b>. A user at one of network terminals <b>160</b> and <b>170</b> may establish a communication session with simulation server <b>110</b>. The user may subsequently define a treatment that applies one or more &#x201c;load&#x201d; services to a network resource (e.g., host server <b>150</b> or gateway server <b>130</b>) using definition module <b>204</b><i>a</i>, and may schedule the treatment, e.g., at a particular time or at periodic times, using scheduling module <b>204</b><i>b. </i></p>
<p id="p-0039" num="0038">Simulation server <b>110</b> may subsequently deploy the defined treatment to the network resource at the scheduled time. In such embodiments, the specified &#x201c;load&#x201d; service associated with the treatment may generate and execute code that produces requests of a given kind up to a capacity of the network resource. As the deployed treatment may include one or more of such &#x201c;load&#x201d; services, the deployed treatment may simulate a desired load for the network resource. Furthermore, the use of multiple load services may enable the user to specify a rate at which a load of the network resource increases towards the desired load.</p>
<p id="p-0040" num="0039">Reporting module <b>204</b><i>c </i>may monitor and record results of the treatment applied to the specified network resource, and additionally or alternatively, the results of the treatment on the performance of other network resources within system <b>100</b>. For example, in such embodiments, reporting module <b>204</b><i>c </i>may monitor the performance of one or more of endpoints <b>140</b>A-<b>140</b>E in response to a desired loading of host server <b>150</b> or gateway server <b>150</b>.</p>
<p id="p-0041" num="0040">As an additional example, simulation server <b>110</b> may enable a user to programmatically simulate of a failure of a network resource, and a subsequent recovery of that network resource, e.g., a reboot of the network resource triggered by a recovery code. In such embodiments, simulation server <b>110</b>, using APIs, may programmatically simulate a &#x201c;crash&#x201d; of a network resource and subsequent recovery (e.g., reboot) after a specified time period, an appearance and/or disappearance of a network resource (e.g., due to a bad network card or router port), and a creation of a partial or complete network partition among network resources of system <b>100</b>.</p>
<p id="p-0042" num="0041">For example, the user may establish a communication session with simulation server <b>110</b> across network <b>120</b>, and may subsequently define a treatment that prevents a network resource (e.g., endpoints <b>104</b>A-<b>140</b>E, nodes <b>138</b>A and <b>138</b>B, host server <b>150</b>, or gateway server <b>130</b>) from receiving data packets for a specified period of time. Once defined, the user may interact with scheduling module <b>204</b><i>b </i>to schedule the application of the treatment, e.g., at a particular time or at periodic intervals.</p>
<p id="p-0043" num="0042">As discussed above, simulation server <b>110</b> may subsequently deploy the defined treatment to the network resource at the scheduled time. In such embodiments, a service associated with a deployed treatment may generate and execute code to block the receipt of incoming data packets at the network resource. Reporting module <b>204</b><i>c </i>of simulation server <b>110</b> may monitor and record results of the treatment applied to the specified network resource, and additionally or alternatively, the results of the treatment on the performance of other network resources within system <b>100</b>.</p>
<p id="p-0044" num="0043">In a further example, simulation server <b>110</b> may enable a programmatic simulation of a loss, corruption, and duplication of data packets at a network resource. In such embodiments, a user at one of network terminals <b>160</b> and <b>170</b> may establish a communication session with simulation server <b>110</b>, and may subsequently define a treatment that applies one or more &#x201c;packet muncher&#x201d; services to the network resource (e.g., endpoints <b>104</b>A-<b>140</b>E, nodes <b>138</b>A and <b>138</b>B, host server <b>150</b>, or gateway server <b>130</b>) using definition module <b>204</b><i>a</i>. The user may subsequently coordinate with scheduling module <b>204</b><i>b </i>to schedule the treatment at a particular time or at periodic intervals.</p>
<p id="p-0045" num="0044">In such embodiments, the packet muncher services may include, but are not limited to, services that cause a network resource to receive a packet and not retransmit the packet (i.e., to lose a packet), to receive a packet and to retransmit the packet with bits changed (i.e., to corrupt a packet), or to receive a packet and transmit the packet twice, with a variable length latency between the two packets (i.e., to duplicate packets). However, the disclosed embodiments are not limited to such exemplary services, and in additional embodiments, the user may define a treatment to include any additional or alternate service that modifies or otherwise corrupts a data packet processed by the network resource.</p>
<p id="p-0046" num="0045">Simulation server <b>110</b> may subsequently deploy the defined treatment to the network resource at the scheduled time. In such embodiments, the specified service associated with the treatment may generate and execute code that loses, corrupts, or duplicates data packets at the network resource, as discussed above. Reporting module <b>204</b><i>c </i>may monitor and record results of the treatment applied to the network resource, and additionally or alternatively, the results of the treatment on the performance of other network resources within system <b>100</b>. For example, in such embodiments, reporting module <b>204</b><i>c </i>may monitor the performance of one or more of endpoints <b>140</b>A-<b>140</b>E in response to a corruption of data packets by gateway server <b>150</b> or nodes <b>130</b>A and <b>138</b>B.</p>
<p id="p-0047" num="0046">Although described in terms of services that generate code for execution by a networked resource, the treatments defined by simulation server <b>110</b> are not limited to such exemplary services. For example, the user may supply code to generation module <b>204</b><i>a</i>, and the supplied code may be incorporated into the defined treatment by simulation server <b>110</b>. In such embodiments, the defined treatment may be deployed to the network resource, which may execute the user-supplied code to simulate the desired system condition.</p>
<p id="p-0048" num="0047">As discussed above, a user may access simulation server <b>110</b> through a user interface associated with terminals <b>160</b> and <b>170</b>, or alternatively, through a programmatic interface (e.g., an API) associated with terminals <b>160</b> and <b>170</b>. In an embodiment, access to simulation server <b>110</b>, and the ability to programmatically simulate system conditions based on treatments generated by simulation server <b>110</b>, may be provided at no charge to the user. For example, the user may submit a payment to access the network and compute facilities of system <b>100</b>. In some implementations, access may be provided to simulation server <b>110</b> at no additional charge.</p>
<p id="p-0049" num="0048">However, in additional embodiments, the user may access simulation server <b>110</b> upon payment of a fee, e.g., an access fee, to an entity associated with system <b>100</b>. For example, such access fees may accrue on an hourly, daily, or monthly basis, or alternatively, may be due upon each successful attempt to access simulation server <b>110</b>.</p>
<p id="p-0050" num="0049">Additionally, third-party entities (e.g., developers not associated with system <b>100</b>) may develop services and/or treatments that may be available to users of simulation server <b>110</b>. In such embodiments, a user may pay to access the developed services and/or treatments, and the resulting revenue may be shared between the third-party developer and the entity associated with system <b>100</b>.</p>
<p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. 3</figref> is a flow diagram of an example of a routine <b>300</b> for programmatically simulating conditions for one or more network resources, consistent with a disclosed embodiment. Routine <b>300</b> provides an overview of a process in which simulation server <b>110</b> enables an entity to define, schedule, and deploy treatments.</p>
<p id="p-0052" num="0051">Prior to the start of routine <b>300</b>, a user may be authenticated by, for example, simulation server <b>110</b>. For example, prior to the start of routine <b>300</b>, simulation server <b>110</b> may transmit a document (e.g., a web page) that is accessible by an Internet browser executing on, for example, terminal <b>160</b>. The document may include options for a user to log onto a secure site provided by simulation server <b>110</b>. The user may log onto the secure site by supplying credentials, such as a username and a password. Once authenticated, routine <b>300</b> may begin.</p>
<p id="p-0053" num="0052">In block <b>302</b>, simulation server <b>110</b> may receive a treatment definition. Simulation server <b>110</b> may store the treatment definition in data store <b>206</b>. For example, a user at one of terminals <b>160</b>,<b>170</b> may define one or more treatments and submit the definitions to simulation service <b>110</b>. As discussed above, a definition of the treatment may specify a network resource that should receive the treatment using, for example, a URL, a URI, an IP address, and an account hosted on the network resource (e.g., on gateway server <b>130</b> or host server <b>150</b>. Furthermore, a treatment may comprise one or more simulation services.</p>
<p id="p-0054" num="0053">In block <b>304</b>, simulation server <b>110</b> may schedule the treatment. As discussed above, a user at one of terminals <b>160</b> and <b>170</b> may schedule the treatment. Simulation server <b>110</b> may store data reflecting the scheduling of the treatment in data store <b>206</b>.</p>
<p id="p-0055" num="0054">In block <b>306</b>, simulation server <b>110</b> may receive a request to initiate a simulation. For example, simulation services may be initiated through the use of application programming interfaces (APIs) and/or may be requested by scheduling module <b>204</b><i>b</i>. As part of block <b>306</b>, simulation server <b>110</b> may determine one or more services that are defined by a treatment. For example, as part of block <b>306</b>, simulation server <b>110</b> may retrieve a treatment definition from data store <b>206</b>.</p>
<p id="p-0056" num="0055">In block <b>308</b>, simulation server <b>110</b> may deploy one or more services to an environment specified by the treatment definition. The environment may correspond to one or more network components and the services may cause one or more conditions to occur at the specified endpoint. For example, simulation server <b>110</b> may retrieve data defining one or more treatments from data store <b>206</b> and deploy one or more simulation services to implement the defined one or more treatments. For example, a simulation service may cause an arbitrary piece of code to produce a plurality of requests of a particular kind. The plurality of requests may be produced up to a capacity of a machine that hosts the service (e.g., host server <b>150</b>). Alternatively, a simulation service may receive a packet and not retransmit the packet (i.e., lose a packet), receive a packet and retransmit the packet with one or more changed bits (i.e., corrupt a packet), or receive a packet and transmit the packet two or more times (i.e., duplicate a packet). Duplicated packets may be transmitted with a variable length latency between transmission of the two or more packets.</p>
<p id="p-0057" num="0056">In block <b>310</b>, simulation server <b>110</b> may record performance information and/or record data pertaining to the one or more treatments. For example, simulation server <b>110</b> may monitor and record results of the one or more treatments and may use the recorded data to generate a log or report. The log or report may identify the one or more services that were deployed, along with information identifying the date and time of the deployment and execution. Simulation server <b>110</b> may transmit the log or report to a user at one of terminals <b>160</b> and <b>170</b> upon request or automatically upon completion of the simulation.</p>
<p id="p-0058" num="0057">As one of ordinary skill in the art will appreciate, one or more of blocks <b>302</b>-<b>310</b> may be optional and may be omitted from implementations in certain embodiments. Furthermore, functionality provided by one or more of blocks <b>302</b>-<b>310</b> may be subdivided into multiple blocks or combined.</p>
<p id="p-0059" num="0058">The foregoing description has been presented for purposes of illustration. It is not exhaustive and is not limited to the precise forms or embodiments disclosed. Modifications and adaptations will be apparent to those skilled in the art from consideration of the specification and practice of the disclosed embodiments. For example, the described implementations include software, but systems and methods consistent with the disclosed embodiments be implemented as a combination of hardware and software or in hardware alone. Examples of hardware include computing or processing systems, including personal computers, servers, laptops, mainframes, micro-processors and the like. Additionally, although aspects of the disclosed embodiments are described as being stored in memory, one skilled in the art will appreciate that these aspects can also be stored on other types of computer-readable media, such as secondary storage devices, for example, hard disks, floppy disks, or CD-ROM, or other forms of RAM or ROM, USB media, DVD, or other optical drive media.</p>
<p id="p-0060" num="0059">Computer programs based on the written description and disclosed methods are within the skill of an experienced developer. The various programs or program modules can be created using any of the techniques known to one skilled in the art or can be designed in connection with existing software. For example, program sections or program modules can be designed in or by means of .Net Framework, .Net Compact Framework (and related languages, such as Visual Basic, C, etc.), Java, C++, Objective-C, HTML, HTML/AJAX combinations, XML, or HTML with included Java applets. One or more of such software sections or modules can be integrated into a computer system or existing e-mail or browser software.</p>
<p id="p-0061" num="0060">Moreover, while illustrative embodiments have been described herein, the scope of any and all embodiments having equivalent elements, modifications, omissions, combinations (e.g., of aspects across various embodiments), adaptations and/or alterations as would be appreciated by those skilled in the art based on the present disclosure. The limitations in the claims are to be interpreted broadly based on the language employed in the claims and not limited to examples described in the present specification or during the prosecution of the application, which examples are to be construed as non-exclusive. Furthermore, the blocks of the disclosed routines may be modified in any manner, including by reordering blocks and/or inserting or deleting blocks. It is intended, therefore, that the specification and examples be considered as illustrative only, with a true scope and spirit being indicated by the following claims and their full scope of equivalents.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer-implemented method comprising:
<claim-text>receiving, by a hosted computing environment implemented using one or more configured computers, a programmatic request from a user of the hosted computing environment via an application programming interface (API) provided by the hosted computing environment;</claim-text>
<claim-text>providing, by the hosted computing environment in response to the programmatic request, information to a client device of the user that indicates multiple predefined treatments available from the hosted computing environment, each of the predefined treatments indicating a network resource and one or more associated simulation services for use in simulating one or more indicated system conditions on the indicated network resource;</claim-text>
<claim-text>receiving, by the hosted computing environment via the API, a second programmatic request sent by the user over one or more networks to implement one of the multiple predefined treatments selected by the user; and</claim-text>
<claim-text>implementing, by the hosted computing environment, the selected predefined treatment on behalf of the user in response to the second programmatic request by:
<claim-text>provisioning, by the hosted computing environment, a physical copy of the network resource indicated in the selected predefined treatment, the provisioning including using one or more of a plurality of network resources of multiple types that are provided in the hosted computing environment for use on behalf of users; and</claim-text>
<claim-text>deploying, in the hosted computing environment, the one or more simulation services associated with the selected predefined treatment to the provisioned physical copy of the network resource, wherein the deployed one or more simulation services simulate the one or more indicated system conditions for the selected predefined treatment at the provisioned physical copy of the network resource.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the network resource indicated in the selected predefined treatment is a server computing system.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the network resource indicated in the selected predefined treatment is identified by a uniform resource locator.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the deployed one or more simulation services produce a plurality of requests.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the deployed one or more simulation services cause a predetermined load at the provisioned physical copy of the network resource.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the deployed one or more simulation services receive a packet at the provisioned physical copy of the network resource and prevent retransmission of the packet.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the deployed one or more simulation services receive a packet at the provisioned physical copy of the network resource and retransmit the packet with one or more changed bits.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the deployed one or more simulation services receive a packet at the provisioned physical copy of the network resource and transmit the packet two or more times.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A computer-implemented method comprising:
<claim-text>providing, by a configured server device of a hosted computing environment, information to a user of the hosted computing environment that indicates multiple predefined treatments available from the hosted computing environment, each of the predefined treatments indicating a network resource and one or more associated simulation services;</claim-text>
<claim-text>receiving, by the hosted computing environment, a request from the user to initiate a treatment selected from the multiple predefined treatments;</claim-text>
<claim-text>provisioning, by the hosted computing environment in response to the received request, the network resource indicated in the selected treatment for use on behalf of the user, the provisioned network resource being one of a plurality of network resources provided by the hosted computing environment; and</claim-text>
<claim-text>deploying, by the hosted computing environment, the one or more simulation services associated with the selected treatment to the provisioned network resource, wherein the deployed one or more simulation services simulate one or more system conditions at the provisioned network resource.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref> further comprising receiving from the user a definition for a second treatment that is not one of the multiple predefined treatments, and deploying one or more additional simulation services associated with the second treatment on one or more additional network resources selected from the plurality of network resources.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein the provisioned network resource is a server computing system, and wherein the deployed one or more services cause the server computing system to shut down.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein the hosted computing environment provides an application programming interface (API) to enable users to supply programmatic requests for selected simulation services, and wherein the request is received from the user via the provided API.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein the provisioned network resource is identified by a uniform resource locator.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein the deployed one or more services produce a plurality of requests.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein the deployed one or more services cause a predetermined load at the provisioned network resource.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein the deployed one or more services receive a packet at the provisioned network resource and prevent retransmission of the packet.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein the deployed one or more services receive a packet at the provisioned network resource and retransmit the packet with one or more changed bits.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein the deployed one or more services receive a packet at the provisioned network resource and transmit the packet two or more times.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein the definition for the second treatment is received from the user via a hypertext transfer protocol request.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The computer-implemented method of <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein the definition for the second treatment specifies the one or more additional network resources.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref> further comprising generating a report including results from the deploying of the one or more simulation services to the provisioned network resource, and providing the generated report to the user.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein the deploying of the one or more simulation services associated with the selected treatment is performed at a later scheduled time indicated in the received request.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The computer-implemented method of <claim-ref idref="CLM-00009">claim 9</claim-ref> further comprising, in response to the received request, scheduling the deploying of the one or more simulation services associated with the selected treatment to initiate upon a predetermined event.</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. A system comprising:
<claim-text>a processor for executing program instructions; and</claim-text>
<claim-text>a memory storing the program instructions, the program instructions, when executed by the processor, performing a process to:
<claim-text>provide, by a server operated by an entity to provide simulation services, an application programming interface (API) to enable users to supply programmatic requests for selected simulation services;</claim-text>
<claim-text>receiving, by the server via the provided API, a programmatic request from a user to initiate a treatment in exchange for one or more fees paid by the user, the programmatic request identifying a treatment selected by the user from multiple predefined treatments available from the entity for the provided simulation services;</claim-text>
<claim-text>provision, by the entity, a network resource on behalf of the user;</claim-text>
<claim-text>determine, by the server, based on the selected treatment, one or more simulation services for use with the provisioned network resource; and</claim-text>
<claim-text>deploy the one or more simulation services to the provisioned network resource, wherein the one or more simulation services simulate one or more system conditions for the provisioned network resource.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The system of <claim-ref idref="CLM-00024">claim 24</claim-ref> wherein the performing of the process further includes receiving from the user a definition for a second treatment that is not one of the multiple predefined treatments, and deploying one or more additional simulation services associated with the second treatment on one or more additional network resources that are selected from a plurality of network resources of multiple types provided by the entity.</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The system of <claim-ref idref="CLM-00025">claim 25</claim-ref> wherein the provisioned network resource is a server computing system.</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The system of <claim-ref idref="CLM-00024">claim 24</claim-ref> wherein the provisioned network resource is identified by a uniform resource locator.</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. The system of <claim-ref idref="CLM-00024">claim 24</claim-ref> wherein the deployed one or more simulation services produce a plurality of requests.</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. The system of <claim-ref idref="CLM-00024">claim 24</claim-ref>, wherein the deployed one or more simulation services cause a predetermined load at the provisioned network resource.</claim-text>
</claim>
<claim id="CLM-00030" num="00030">
<claim-text>30. The system of <claim-ref idref="CLM-00024">claim 24</claim-ref>, wherein the deployed one or more simulation services receive a packet at the provisioned network resource and prevent retransmission of the packet.</claim-text>
</claim>
<claim id="CLM-00031" num="00031">
<claim-text>31. The system of <claim-ref idref="CLM-00024">claim 24</claim-ref>, wherein the deployed one or more simulation services receive a packet at the provisioned network resource and retransmit the packet with one or more changed bits.</claim-text>
</claim>
<claim id="CLM-00032" num="00032">
<claim-text>32. The system of <claim-ref idref="CLM-00024">claim 24</claim-ref>, wherein the deployed one or more simulation services receive a packet at the provisioned network resource and transmit the packet two or more times.</claim-text>
</claim>
<claim id="CLM-00033" num="00033">
<claim-text>33. The system of <claim-ref idref="CLM-00025">claim 25</claim-ref> wherein the definition for the second treatment is received from the user as part of a hypertext transfer protocol request.</claim-text>
</claim>
<claim id="CLM-00034" num="00034">
<claim-text>34. The system of <claim-ref idref="CLM-00025">claim 25</claim-ref> wherein the definition for the second treatment specifies the one or more additional network resources.</claim-text>
</claim>
</claims>
</us-patent-grant>
