<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626969-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626969</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13088116</doc-number>
<date>20110415</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>13</main-group>
<subgroup>12</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>710 62</main-classification>
</classification-national>
<invention-title id="d2e43">Redirection communication</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4539655</doc-number>
<kind>A</kind>
<name>Trussell et al.</name>
<date>19850900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>4792896</doc-number>
<kind>A</kind>
<name>Maclean et al.</name>
<date>19881200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5581715</doc-number>
<kind>A</kind>
<name>Verinsky et al.</name>
<date>19961200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5812820</doc-number>
<kind>A</kind>
<name>Loram</name>
<date>19980900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>5889965</doc-number>
<kind>A</kind>
<name>Wallach et al.</name>
<date>19990300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6192477</doc-number>
<kind>B1</kind>
<name>Corthell</name>
<date>20010200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 11</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6530050</doc-number>
<kind>B1</kind>
<name>Mergard</name>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6606164</doc-number>
<kind>B1</kind>
<name>Irie et al.</name>
<date>20030800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6826387</doc-number>
<kind>B1</kind>
<name>Kammer</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6834326</doc-number>
<kind>B1</kind>
<name>Wang et al.</name>
<date>20041200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6881096</doc-number>
<kind>B2</kind>
<name>Brown et al.</name>
<date>20050400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>7003563</doc-number>
<kind>B2</kind>
<name>Leigh et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>7043205</doc-number>
<kind>B1</kind>
<name>Caddes et al.</name>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>7155512</doc-number>
<kind>B2</kind>
<name>Lean et al.</name>
<date>20061200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>7162638</doc-number>
<kind>B2</kind>
<name>Yoshihiro</name>
<date>20070100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>7225247</doc-number>
<kind>B2</kind>
<name>Kennedy et al.</name>
<date>20070500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709223</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>7284278</doc-number>
<kind>B2</kind>
<name>Anson et al.</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>7400648</doc-number>
<kind>B2</kind>
<name>Cromer et al.</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>7457847</doc-number>
<kind>B2</kind>
<name>Ramey</name>
<date>20081100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>7543277</doc-number>
<kind>B1</kind>
<name>Righi et al.</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>7721013</doc-number>
<kind>B2</kind>
<name>Diamant</name>
<date>20100500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>7949798</doc-number>
<kind>B2</kind>
<name>Diamant</name>
<date>20110500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>7986844</doc-number>
<kind>B2</kind>
<name>Diamant et al.</name>
<date>20110700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>8150973</doc-number>
<kind>B2</kind>
<name>Diamant</name>
<date>20120400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>2002/0054029</doc-number>
<kind>A1</kind>
<name>Glancy et al.</name>
<date>20020500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>2003/0061401</doc-number>
<kind>A1</kind>
<name>Luciani, Jr.</name>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00027">
<document-id>
<country>US</country>
<doc-number>2003/0105850</doc-number>
<kind>A1</kind>
<name>Lean et al.</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00028">
<document-id>
<country>US</country>
<doc-number>2003/0172171</doc-number>
<kind>A1</kind>
<name>Ueno</name>
<date>20030900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00029">
<document-id>
<country>US</country>
<doc-number>2003/0194908</doc-number>
<kind>A1</kind>
<name>Brown et al.</name>
<date>20031000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00030">
<document-id>
<country>US</country>
<doc-number>2003/0229727</doc-number>
<kind>A1</kind>
<name>Wang</name>
<date>20031200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00031">
<document-id>
<country>US</country>
<doc-number>2004/0128412</doc-number>
<kind>A1</kind>
<name>Harrison</name>
<date>20040700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00032">
<document-id>
<country>US</country>
<doc-number>2004/0177264</doc-number>
<kind>A1</kind>
<name>Anson et al.</name>
<date>20040900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00033">
<document-id>
<country>US</country>
<doc-number>2004/0181590</doc-number>
<kind>A1</kind>
<name>Liou et al.</name>
<date>20040900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00034">
<document-id>
<country>US</country>
<doc-number>2004/0249985</doc-number>
<kind>A1</kind>
<name>Mori et al.</name>
<date>20041200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00035">
<document-id>
<country>US</country>
<doc-number>2005/0015430</doc-number>
<kind>A1</kind>
<name>Rothman et al.</name>
<date>20050100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00036">
<document-id>
<country>US</country>
<doc-number>2006/0059336</doc-number>
<kind>A1</kind>
<name>Miller et al.</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00037">
<document-id>
<country>US</country>
<doc-number>2006/0149860</doc-number>
<kind>A1</kind>
<name>Diamant</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00038">
<document-id>
<country>US</country>
<doc-number>2006/0168099</doc-number>
<kind>A1</kind>
<name>Diamant</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00039">
<document-id>
<country>US</country>
<doc-number>2007/0005821</doc-number>
<kind>A1</kind>
<name>Diamant</name>
<date>20070100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00040">
<document-id>
<country>US</country>
<doc-number>2007/0005828</doc-number>
<kind>A1</kind>
<name>Diamant</name>
<date>20070100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00041">
<document-id>
<country>US</country>
<doc-number>2007/0005867</doc-number>
<kind>A1</kind>
<name>Diamant</name>
<date>20070100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00042">
<document-id>
<country>US</country>
<doc-number>2008/0244212</doc-number>
<kind>A1</kind>
<name>Rothman et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711172</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00043">
<document-id>
<country>US</country>
<doc-number>2012/0143990</doc-number>
<kind>A1</kind>
<name>Diamant</name>
<date>20120600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00044">
<othercit>Response to Office Action for U.S. Appl. No. 11/027,917, filed on Aug. 25, 2011, 17 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00045">
<othercit>&#x201c;IPMI&#x2014;Intelligent Platform Management Interface Specification Second Generation V2.0&#x201d;, Table of Contents; Document Revision 1.0, GTPP Standard # 17, Feb. 12, 2004, 23 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00046">
<othercit>&#x201c;Secure Hash Standard&#x201d;, Federal Information Processing Standards Publication 180-1, Apr. 17, 1995, 18 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00047">
<othercit>Advisory Action received for U.S. Appl. No. 11/027,754, mailed on Jun. 30, 2008, 3 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00048">
<othercit>Office Action received fro the U.S. Appl. No. 11/027,754, mailed on Sep. 23, 2010, 18 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00049">
<othercit>Office Action received for U.S. Appl. No. 11/027,754, mailed on Mar. 15, 2010, 20 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00050">
<othercit>Office Action received for U.S. Appl. No. 11/027,754, mailed on Aug. 8, 2007, 24 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00051">
<othercit>Office Action received for U.S. Appl. No. 11/027,754, mailed on May 8, 2008, 26 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00052">
<othercit>Office Action received for U.S. Appl. No. 11/027,754, mailed on Dec. 9, 2008, 9 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00053">
<othercit>Office Action received for U.S. Appl. No. 11/027,754, mailed on Jun. 2, 2009, 9 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00054">
<othercit>Response to Office Action for U.S. Appl. No. 11/027,754 , filed on Jul. 15, 2010, 20 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00055">
<othercit>Response to Office Action received for U.S. Appl. No. 11/027,754, filed on Jan. 31, 2008, 42 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00056">
<othercit>Response to Office Action for U.S. Appl. No. 11/027,754, filed on Jun. 17, 2008, 10 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00057">
<othercit>Response to Office Action for U.S. Appl. No. 11/027,754, filed on Mar. 9, 2009, 25 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00058">
<othercit>Response to Office Action received for U.S. Appl. No. 11/027,754, filed on Jun. 24, 2009, 16 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00059">
<othercit>Supplemental Response to Office Action for U.S. Appl. No. 11/027,754 , filed on Dec. 28, 2009, 10 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00060">
<othercit>Advisory Action received for U.S. Appl. No. 11/027,917, mailed on Jan. 13, 2010, 3 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00061">
<othercit>Advisory Action received for U.S. Appl. No. 11/027,917, mailed on Mar. 16, 2011, 3 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00062">
<othercit>Advisory Office Action received for U.S. Appl. No. 11/027,917, mailed on Mar. 15, 2010, 3 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00063">
<othercit>Office Action received for U.S. Appl. No. 11/027,917, mailed on Oct. 29, 2010, 20 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00064">
<othercit>Office Action received for U.S. Appl. No. 11/027,917, mailed on Dec. 24, 2009, 19 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00065">
<othercit>Office Action received for U.S. Appl. No. 11/027,917, mailed on May 25, 2011, 18 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00066">
<othercit>Office Action received for U.S. Appl. No. 11/027,917, mailed on Jun. 22, 2010, 19 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00067">
<othercit>Office Action received for U.S. Appl. No. 11/027,917, mailed on Sep. 4, 2008, 16 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00068">
<othercit>Office Action received for U.S. Appl. No. 11/027,917, mailed on Apr. 15, 2009, 23 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00069">
<othercit>Office Action received for U.S. Appl. No. 11/027,917, mailed on Aug. 31, 2009, 13 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00070">
<othercit>Supplemental Amendment for U.S. Appl. No. 11/027,917, filed on Dec. 28, 2009, 8 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00071">
<othercit>Response to Office Action for U.S. Appl. No. 11/027,917, filed on Feb. 26, 2010, 11 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00072">
<othercit>Response to Office Action and Request for Continued Examination for U.S. Appl. No. 11/027,917, filed on Mar. 29, 2011, 18 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00073">
<othercit>Response to Office Action for U.S. Appl. No. 11/027,917, filed on Sep. 22, 2010, 14 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00074">
<othercit>Response to Office Action for U.S. Appl. No. 11/027,917, filed on Jan. 5, 2009, 19 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00075">
<othercit>Response to Office Action for U.S. Appl. No. 11/027,917, filed on Jun. 12, 2009, 15 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00076">
<othercit>Response to Office Action for U.S. Appl. No. 11/027,917, filed on Oct. 9, 2009, 13 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00077">
<othercit>Response to Advisory Action and Request for Continued Examination for U.S. Appl. No. 11/027,917, filed on Mar. 29, 2010, 13 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00078">
<othercit>Office Action for U.S. Appl. No. 11/286,513 mailed on Jan. 26, 2011, 15 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00079">
<othercit>Office Action received for U.S. Appl. No. 11/286,513, mailed on Jul. 15, 2010, 11 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00080">
<othercit>Office Action received for U.S. Appl. No. 11/286,513, mailed on May 4, 2010, 14 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00081">
<othercit>Notice of Allowance received for U.S. Appl. No. 11/286,513, mailed on Mar. 30, 2011, 7 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00082">
<othercit>Office Action received for U.S. Appl. No. 11/286,513, mailed on Nov. 5, 2010, 11 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00083">
<othercit>Response to Office Action for U.S. Appl. No. 11/286,513, filed on Mar. 9, 2011, 11 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00084">
<othercit>Response to Office Action for U.S. Appl. No. 11/286,513, filed on Jun. 10, 2010, 8 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00085">
<othercit>Response to Office Action for U.S. Appl. No. 11/286,513, filed on Jan. 3, 2011, 10 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00086">
<othercit>Response to Office Action and Request for Continued Examination for U.S. Appl. No. 11/286,513, filed on Sep. 15, 2010, 11 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00087">
<othercit>Notice of Allowance received for the U.S. Appl. No. 11/804,836, mailed on Dec. 28, 2009, 7 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00088">
<othercit>Office Action received for U.S. Appl. No. 11/804,836, mailed on Mar. 18, 2009, 10 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00089">
<othercit>Office Action received for U.S. Appl. No. 11/804,836, mailed on Sep. 17, 2009, 9 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00090">
<othercit>Response to Final Office Action and Request for Continued Examination for U.S. Appl. No. 11/804,836, filed on Nov. 12, 2009, 14 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00091">
<othercit>Response to Office Action for U.S. Appl. No. 11/804,836, filed on Jun. 16, 2009, 14 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00092">
<othercit>Supplemental Response to Office Action for U.S. Appl. No. 11/804,836, filed on Dec. 28, 2009, 9 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00093">
<othercit>&#x201c;MegaRAC M200 OPMA Based Remote Management Controller&#x201d;, Data Sheet, American Megatrends, Northbelt Parkway, Norcross GA 30071, Aug. 22, 2005, 2 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00094">
<othercit>Microsoft, &#x201c;Virtual PC 2004 Evaluation Guide&#x201d;, Nov. 2003, pp. 1-20.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00095">
<othercit>Notice of Allowance received for U.S. Appl. No. 11/027,754, mailed on Feb. 10, 2011; 6 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00096">
<othercit>Response to Office Action received for U.S. Appl. No. 11/027,754, filed on Jan. 24, 2011; 10 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00097">
<othercit>Notice of allowance received for U.S. Appl. No. 11/027,917, mailed on Nov. 10, 2011; 17 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00098">
<othercit>Response to Office Action for U.S. Appl. No. 11/027,917, filed on Feb. 25, 2011; 15 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00099">
<othercit>Office Action received for U.S. Appl. No. 13/369,439, mailed on May 15, 2012; 16 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00100">
<othercit>Response to Office Action received for U.S. Appl. No. 13/369,439, field on Jul. 18, 2012, 13 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00101">
<othercit>Office Action received for U.S. Appl. No. 13/369,439, mailed on Sep. 21, 2012, 36 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00102">
<othercit>Intelligent Platform Management Interface Specification Second Generation, v2.0, document revision 1.0, Feb. 12, 2004, Intel Corporation et alia, 74 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>25</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>9</number-of-drawing-sheets>
<number-of-figures>9</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>11027754</doc-number>
<date>20041230</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>7949798</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13088116</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110196970</doc-number>
<kind>A1</kind>
<date>20110811</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Diamant</last-name>
<first-name>Nimrod</first-name>
<address>
<city>Ksar-Saba</city>
<country>IL</country>
</address>
</addressbook>
<residence>
<country>IL</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Diamant</last-name>
<first-name>Nimrod</first-name>
<address>
<city>Ksar-Saba</city>
<country>IL</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Gagne</last-name>
<first-name>Christopher K.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Intel Corporation</orgname>
<role>02</role>
<address>
<city>Santa Clara</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Tsai</last-name>
<first-name>Henry</first-name>
<department>2184</department>
</primary-examiner>
<assistant-examiner>
<last-name>Borromeo</last-name>
<first-name>Juanito</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method and system of communicating data to or from a remote computer. The remote computer is accessed by a CPU as though it were a local IDE controller attached to a local IDE device. A peripheral device distinct from the CPU provides a set of virtual IDE device registers and an IDE controller to the central processing unit. The peripheral device receives data written to the set of virtual IDE device registers, and transmits the data into a network, addressed for reception by the remote computer. The remote computer receives the data, interprets it, and performs operations upon a mirror set of device data. The remote computer then responds, and transmits its response across the network to the peripheral device. The peripheral device communicates the response to the CPU in a fashion identical to an physical IDE controller attached to a physical IDE device.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="230.12mm" wi="192.79mm" file="US08626969-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="228.01mm" wi="167.05mm" file="US08626969-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="247.14mm" wi="197.70mm" file="US08626969-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="199.31mm" wi="194.73mm" file="US08626969-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="126.32mm" wi="125.31mm" file="US08626969-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="145.12mm" wi="109.14mm" file="US08626969-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="148.67mm" wi="111.59mm" file="US08626969-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="206.42mm" wi="174.92mm" file="US08626969-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="244.52mm" wi="189.48mm" file="US08626969-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="228.60mm" wi="191.77mm" file="US08626969-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is a continuation of prior co-pending U.S. patent application Ser. No. 11/027,754 filed Dec. 30, 2004, entitled &#x201c;Virtual IDE Interface And Protocol For Use In IDE Redirection Communication.&#x201d;</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">TECHNICAL FIELD</heading>
<p id="p-0003" num="0002">Embodiments of the present invention relate to computing systems that may utilize IDE redirection communication schemes, and more particularly to computing systems that may utilize an IDE redirection communication scheme with a virtual IDE interface and protocols tailored for such an application.</p>
<heading id="h-0003" level="1">BACKGROUND</heading>
<p id="p-0004" num="0003">In environments in which a limited number of information technology (IT) personnel must maintain the operability of a great many computers, it is important to provide tools that permit such personnel to perform such maintenance tasks remotely. For example, in a situation in which a given computer must have an operating system installed, it is inconvenient for IT personnel to physically travel to the particular computer in order to perform the installation. Tools that permit the installation of the operating system by delivering the operating system across a network would eliminate the need for the IT personnel to travel, and would increase efficiency.</p>
<p id="p-0005" num="0004">Some basic input/output systems (BIOS), support a feature whereby a LAN controller may be used to access a remote boot server. Executable code is downloaded from the remote boot server, and is then run by the system. Just prior to running the downloaded executable code, the connection to the remote server is closed by the BIOS.</p>
<p id="p-0006" num="0005">The aforementioned scheme exhibits a shortcoming, however. Some programs need access to the media from whence they originated, while they are being executed. For example, in the context of loading an operating system, only a small portion of the operating system may be downloaded at the time execution begins. Thereafter, downloaded portion attempts to access the remainder of the operating system from the media. Such a feat is not possible in the context of the remote server scheme mentioned above, because the BIOS closes the connection to the remote boot server prior to execution of the downloaded code. Thus, at the time the downloaded portion of the operating system seeks access to the remainder of the operating system, the connection to the remote boot server is unavailable. Consequently, no access to the remainder of the operating system may be obtained, and the installation fails.</p>
<p id="p-0007" num="0006">From the foregoing discussion, it is evident that there exists a need for a scheme by which to redirect device commands and data to and from a network, even after execution of downloaded code has begun.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 1</figref> depicts a computing system that employs a virtual IDE interface, according to one embodiment of the present invention.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 2</figref> depicts an integrated multifunction device, including a virtual IDE interface.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 3</figref> depicts a disc device having an IDE interface, as is known in the prior art.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 4</figref> depicts a protocol stack that my be used to provide an IDE redirection session.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 5</figref> depicts one scheme by which a virtual IDE device may be presented to a CPU.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 6</figref> depicts another protocol stack that my be used to provide an IDE redirection session.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 7</figref> depicts a state flow diagram that describes one example of a state flow that may be enacted by an IDE redirection layer.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 8</figref> depicts one example of an IDE redirection layer.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 9</figref> depicts a flow of operations that may be enacted during a connected stated of operation of the IDE redirection layer.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0017" num="0016">As used herein, the term &#x201c;integrated device electronics (IDE) device&#x201d; refers to an Advanced Technology Attachment (ATA) device, and the terms may be used interchangeably. The specifications governing these devices are promulgated by the InterNational Committee on Information Technology Standards (INCITS), which operates under the American National Standards Institute (ANSI). The specifications include ANSI NCITS 317-1998 AT Attachment&#x2014;4 with Packet Interface Extension, ANSI NCITS 340-2000 AT Attachment&#x2014;5 with Packet Interface, and ANSI NCITS 361-2002 AT Attachment&#x2014;<b>6</b> with Packet Interface. Therefore, the term &#x201c;IDE device&#x201d; or &#x201c;ATA device&#x201d; refers to any device behaving in accordance with these specifications or any such similar specification promulgated in the future.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 1</figref> depicts one example of a computing system <b>100</b> that redirects device commands and data to a network, without rooting the source of such redirection in the system BIOS. As can be seen from <figref idref="DRAWINGS">FIG. 1</figref>, the computing system <b>100</b> includes a CPU <b>102</b>, which is coupled to a memory control hub <b>104</b>. The memory control hub <b>104</b> is an arrangement of circuitry that manages and controls access to the system memory <b>106</b>, graphics card <b>108</b>, and the input/output (I/O) control hub <b>110</b>. The I/O control hub <b>110</b>, in turn, manages and controls access to a flash memory device <b>112</b>, which stores the BIOS. In one embodiment, it manages and controls access to a IDE controller <b>114</b>, which is embodied as a part of the I/O control hub <b>110</b>. An IDE device <b>126</b> is coupled to the controller <b>114</b>. The IDE device <b>126</b> communicates data to and from the host via the controller <b>114</b>. In another embodiment, the I/O control hub <b>110</b> also manages and controls access to an I/O bus <b>116</b>, such as a peripheral component interconnect (PCI) bus. (In an embodiment, the I/O control hub <b>110</b> also manages and controls access to audio channels, USB ports, and other I/O devices that are known in the art, but are not important in the context of this disclosure, and are not depicted herein).</p>
<p id="p-0019" num="0018">Coupled to the I/O bus <b>116</b> is an integrated multifunction device <b>118</b>. As discussed in more detail below, an integrated multifunction device <b>118</b> is a single device that provides more than one function. In the particular example depicted in <figref idref="DRAWINGS">FIG. 2</figref>, the integrated multifunction device <b>118</b> is a single device that offers an IDE device function and a LAN controller function. Such an integrated multifunction device <b>118</b> may be presented in the marketplace as a LAN controller with built-in manageability features.</p>
<p id="p-0020" num="0019">The integrated multifunction device <b>118</b> may include a microcontroller <b>120</b> coupled to a virtual IDE interface <b>122</b> (discussed below) and a LAN controller <b>224</b>. By &#x201c;virtual&#x201d; IDE interface it is meant that the interface presents a set of registers appearing in size, number, and behavior as belonging to an IDE device and IDE controller, when in fact no such device exists. Such a non-existent device is said to be a &#x201c;virtual IDE device.&#x201d; The just-mentioned registers serve as an interface between the virtual IDE functionality provided by the integrated multifunction device <b>118</b> and software running on the CPU <b>102</b>. In other words, data is read from and written to the IDE function by reading from and writing to the registers. Further, the behavior of the IDE function is controlled by writing to and reading from the registers in a manner to mimic the behavior of an IDE device.</p>
<p id="p-0021" num="0020">As discussed in greater detail below, the integrated multifunction device <b>118</b> is accessed in a manner identical to that of an IDE device. The device <b>118</b> receives commands, and forwards the commands via a network to a remote computer that interprets the commands and accesses a data set, in response to the commands. For example, the device <b>118</b> may receive a command to read a given disc sector. The device <b>118</b> forwards the command, via the network, to a remote computer. The remote computer accesses a data set to find the information that would have been found had the disc sector been read by a physically present device. The data is returned to the device <b>118</b> via the network. The device <b>118</b> returns the data to the host via the virtual IDE interface <b>122</b>.</p>
<p id="p-0022" num="0021">Notably, in one embodiment, such a computer system <b>100</b> does not have a physical drive present. In other words, IDE device <b>126</b> is absent, as might be the case in the context of a network computer. All drive access commands are routed through the device <b>118</b> to the aforementioned remote computer. In another embodiment, though, the computer system <b>100</b> may has a physical drive, such as IDE device <b>126</b> present, as shown in <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 2</figref> depicts the integrated multifunction device <b>118</b> in greater detail, including a set of virtual IDE device registers <b>200</b> and a set of virtual IDE controller registers <b>201</b>. As can be seen, the microcontroller <b>120</b> residing on the integrated multifunction device <b>218</b> is coupled to a set of virtual IDE device registers <b>200</b>. The set of virtual IDE device registers includes: (1) the logical block address&#x2014;high register (LBA High); (2) the logical block address&#x2014;mid register (LBA Mid); (3) the logical block address&#x2014;low register (LBA Low); (4) the device register; (5) the sector count register; (6) the command register (Cmd); (7) the features register (Ftrs); (8) the error register; (9) the status register; (10) the data register; (11) the data port; (12) the device control register (Device Cntrl); and (13) the alternate status register (Alt Status).</p>
<p id="p-0024" num="0023">The uses and purposes of the above-mentioned registers are known for IDE devices, and are described by the ANSI standards mentioned above. Briefly, the command register is used to instruct the device to perform a particular operation. The use of the remainder of the registers are command-specific (or device-specific), and their use is known by those skilled in the art.</p>
<p id="p-0025" num="0024">The set of virtual IDE controller registers <b>201</b> includes the configuration space registers <b>202</b> and the bus master registers <b>203</b>. As suggested by the name, the virtual IDE controller registers <b>201</b> are dimensioned in size and quantity to be identical to the registers ordinarily found in a standard IDE controller (like the one in identified by reference numeral <b>114</b> in <figref idref="DRAWINGS">FIG. 1</figref>, embodied in the I/O control hub <b>110</b>). The uses and purposes of the configuration space registers <b>202</b> are known in the art, and are discussed below. The uses and purposes of the bus master registers <b>203</b> are also known in the art. Generally speaking, the bus master registers are used for direct memory access (DMA) read and write operations. For the general orientation of the reader, the uses and purposes of the bus master registers <b>203</b> are briefly described below.</p>
<p id="p-0026" num="0025">As can be seen from <figref idref="DRAWINGS">FIG. 2</figref>, the bus master registers <b>203</b> contains two sets of three registers (additional non-standard registers may also be included, but are not depicted). One set corresponds to a primary IDE cable; the other, to the secondary IDE cable. Each set contains a Bus Master Command register (Cmd Primry and Cmd Scdry). These registers control the bus master operation, and determine whether the operation is a DMA read or a write. They may also start and stop the bus operation. Each set also contains a Bus Master IDE Status register (Stat Primry and Stat Scdry). These registers reveal whether bus master DMA is active, and also contain an interrupt report status bit. Further, each set also contains a Bus Master IDE PRD Table Address register (PRD Primry and PRD Scdry). These registers contain a pointer to a descriptor table. Each descriptor points to an area of host memory to or from which data is to be written or read.</p>
<p id="p-0027" num="0026">As stated above, the microcontroller <b>120</b> executes firmware or software stored in a memory device (not depicted), which causes the microcontroller <b>120</b> to read from and write to the registers <b>200</b> and <b>203</b> as though the integrated multifunction device <b>118</b> actually was an IDE controller with an IDE device or IDE devices coupled thereto. Presented below is an example of how a real IDE device might use its device registers (see <figref idref="DRAWINGS">FIG. 3</figref>), followed by an example describing a virtual IDE device using the virtual IDE device registers <b>200</b> in a virtual IDE device. The uses are parallel. The examples are intended to provide a flavor of the manner in which the microcontroller <b>120</b> can read from and write to the registers <b>200</b> and <b>203</b> to emulate the behavior of an actual IDE controller with an actual IDE device coupled thereto, from the vantage of the CPU <b>102</b>.</p>
<p id="p-0028" num="0027">Shown in <figref idref="DRAWINGS">FIG. 3</figref>, is a set of IDE device registers <b>300</b> associated with a real IDE controller <b>302</b> and a real IDE device <b>304</b>. The set of IDE device registers <b>300</b>, and the IDE device <b>304</b> are contained within a housing <b>306</b>. In the context of a READ SECTORS command, the CPU (not depicted in <figref idref="DRAWINGS">FIG. 3</figref>) indicates the starting logical block of the sectors to be read in the LBA Low, LBA Mid, and LBA High registers, indicates the number of sectors to be read in the sector count register, and indicates which device the command is directed toward (i.e., master or slave) with the device register. After having loaded the appropriate values in the above-mentioned registers, the command register is written to, in order to indicate that the READ SECTORS command is to be performed by the IDE device <b>304</b>. After the command register is written with the appropriate command code, the command is executed, the device is indicated as busy, and the data is prepared. When the data is ready to be read from the data register, the status register indicates that the device is not busy, and the data request bit therein is asserted. The host (i.e., the computer to which the device is attached) responds by obtaining the data from the device, by virtue of a series of reads from the data register. The data is transferred to the host in blocks, and a series of state transitions occur in both the host and the IDE controller <b>302</b> and IDE device <b>304</b> to permit the transfer to take place. The details of the state transitions are known in the art and are beyond the scope of this disclosure.</p>
<p id="p-0029" num="0028">Returning to <figref idref="DRAWINGS">FIG. 2</figref>, therein is depicted a set of virtual IDE device registers <b>200</b>. By this, it is meant that although the set of IDE device registers <b>200</b> exists, there exists no IDE device associated therewith. From the vantage of the CPU (not depicted), however, it is not apparent that no actual IDE device exists. The microcontroller <b>120</b> reads from and writes to the set of virtual IDE device registers <b>200</b> and bus master registers <b>203</b> in a manner mimicking that of a real IDE controller with a real IDE device coupled thereto (i.e., the arrangement of <figref idref="DRAWINGS">FIG. 3</figref>). Thus, for example, when the host requests a READ SECTORS command to be executed by the virtual IDE device, it does so in the same way that it requested a READ SECTORS command to be executed by a read IDE device. Specifically, the host indicates the starting logical block of the sectors to be read in the LBA Low, LBA Mid, and LBA High registers, indicates the number of sectors to be read in the sector count register, and indicates which device the command is directed toward (i.e., master or slave) with the device register. After having loaded the appropriate values in the above-mentioned registers, the host writes the command code indicating the READ SECTORS command to the command register. In the wake of writing to the command register, hardware sets the device busy bit in the status register and alternate status register, and the microcontroller <b>120</b> reads the virtual set of IDE device registers <b>200</b> (alternatively, the device busy bit in the status register may be set by the microcontroller <b>120</b>, upon the command register being written to). Thereafter, the microcontroller <b>120</b> communicates the READ SECTORS command via a network controller <b>124</b> and network to a management console (discussed in further detail, below). The management console receives the READ SECTORS command, interprets the command, prepares the data based upon image data stored at the management console, and returns the data to the microcontroller <b>120</b>. When the data is received by the microcontroller <b>120</b> and is ready to be read from the data register in the virtual IDE interface <b>200</b>, the microcontroller <b>120</b> writes to the status register to indicate that the device is not busy, and asserts the data request bit therein. The host responds by obtaining the data from the device, by virtue of a series of reads from the data register. Again, the data is transferred to the host in blocks, and the microcontroller <b>120</b> controls the registers of the virtual interface <b>200</b>, so as to cause the host to traverse the same series of state transitions it would traverse, if a real IDE device were coupled to the virtual set of IDE device registers <b>200</b> and were transferring the data to the host. Thus, from the vantage of the CPU <b>102</b>, the virtual set of IDE registers <b>200</b> and bus master registers <b>203</b> may be used in an identical manner to that of a real IDE controller with a real IDE device coupled thereto.</p>
<p id="p-0030" num="0029">One advantage of employment of a set of virtual IDE device registers and bus master registers is that the redirective capacity of the computing system employing such registers does not hinge upon the design of the BIOS or operating system. Instead, the redirective capacity of the system results from the ability of a device having access to a network to present a set of registers to the CPU that is indistinguishable from a real IDE controller and device. Therefore, a redirection scheme employing a set of virtual IDE device registers (such as registers <b>200</b>) and bus master registers (such as registers <b>203</b>) can be used to install an operating system.</p>
<p id="p-0031" num="0030">Returning to <figref idref="DRAWINGS">FIG. 2</figref> and a discussion of the structure of the integrated multifunction device <b>118</b>, the integrated multifunction device <b>118</b> may also include a LAN controller <b>124</b>. The LAN controller <b>124</b> includes a set of registers through which the CPU <b>102</b> interfaces with the LAN controller <b>124</b> functionality. Of course, the LAN controller <b>124</b> also includes circuitry to perform low-level functionality including interfacing with the physical communication medium. The integrated multifunction device <b>118</b> may embodied as a single chip, or may be embodied as multiple chips that cooperate with one another.</p>
<p id="p-0032" num="0031">A set of virtual IDE device registers may be made available to a CPU by providing a configuration space that announces the presence of an IDE interface function in a device. For example, if the integrated multifunction device <b>118</b> is a PCI compatible device, then it includes a PCI configuration space <b>202</b>, which is a set of registers including a class code register <b>204</b> and <b>5</b> base address registers (BARs) <b>206</b>. The class code register <b>204</b> contains a value identifying the sort of function provided by the device. Thus, in the context of a device providing a virtual IDE device (or an ordinary IDE device), the class code register <b>204</b> contains a value identifying an IDE interface function. The base address registers <b>206</b> is provided in the configuration space <b>202</b> so that the BIOS may store therein I/O addresses pointing to the set of virtual IDE device registers <b>200</b> (or one or more registers therein). During startup, the BIOS traverses each I/O bus (such as PCI bus <b>116</b>) and seeks out each device. Each device found is enumerated. Furthermore, the BIOS seeks out each function offered by each device. Each function of each device is also enumerated. During this process, the BIOS stores an I/O address in each of the base address registers of the configuration space associated with each function of each device. Based on the I/O addresses stored in the base address registers, the BIOS can determine how to address a particular function on a particular device.</p>
<p id="p-0033" num="0032">The integrated multifunction device <b>118</b> may execute a protocol stack <b>400</b>, such as the one shown in <figref idref="DRAWINGS">FIG. 4</figref>. In <figref idref="DRAWINGS">FIG. 4</figref>, a given layer depicted therein provides services to layers located above it. As can be seen, the stack <b>400</b> includes a network layer <b>402</b>. In one embodiment, the network layer <b>402</b> includes software/firmware providing internet protocol (IP) functionality. The IP functionality provided by the network layer <b>402</b> is made available to the transmission control layer <b>404</b>.</p>
<p id="p-0034" num="0033">According to one embodiment, the transmission control layer <b>404</b> includes software/firmware that provides transmission control protocol (TCP) functionality. According to another embodiment, the transmission control layer <b>404</b> is software/firmware that provides user datagram protocol (UDP) functionality. The TCP or UDP functionality provided by the transmission control layer is provided to the security layer <b>406</b>.</p>
<p id="p-0035" num="0034">The security layer <b>406</b> is an optional layer that is activatable and deactivatable. According to one embodiment, the security layer <b>406</b> includes software/firmware that provides transport layer security (TLS) functionality. According to another embodiment, the security layer <b>406</b> includes software/firmware that provides security defined by the Intelligent Platform Management Interface (IPMI). The security functionality provided by the security layer <b>406</b> is made available to the multiplex layer <b>408</b>.</p>
<p id="p-0036" num="0035">The multiplex layer <b>408</b> is, again, an optional layer. It may be present on a computing system running other forms of redirection (such as serial-over-LAN redirection, discussed below). The multiplex layer <b>408</b> is responsible for determining which application the data is destined for (IDER or serial-over-LAN, or other application). The functionality provided by the multiplex layer is made available to an IDE redirection layer <b>410</b>.</p>
<p id="p-0037" num="0036">The IDE redirection layer <b>410</b> performs many tasks, which are aimed at the goal of receiving data from the virtual IDE interface and delivering them to the LAN controller, and vice versa. The IDE redirection <b>410</b> layer is discussed in greater detail, below.</p>
<p id="p-0038" num="0037">The software/firmware making up the network layer <b>402</b> may be executed by the LAN controller <b>124</b>. The software/firmware making up the other layers <b>404</b>-<b>410</b> may be executed by the microcontroller <b>120</b> in the integrated multifunction device <b>118</b>.</p>
<p id="p-0039" num="0038">In operation, the IDE redirection layer <b>410</b> receives data from the set of virtual IDE device registers <b>200</b>, and packages the data therein into commands that are passed downwardly through the protocol stack, destined to be received by a management console (discussed below). As the protocol stack is executed, the commands are packetized and ultimately transmitted through the network, eventually being received by the aforementioned management console.</p>
<p id="p-0040" num="0039">The management console (not depicted) is a computer system that communicates with the managed computing system <b>100</b> (<figref idref="DRAWINGS">FIG. 1</figref>). The term &#x201c;managed computing system&#x201d; refers to a system employing an IDE redirection scheme, such that it receives device data from a remote system (i.e., management console). The management console runs an identical protocol stack (such as <b>400</b>), so that it can properly interpret the commands received from the managed computing system <b>100</b>.</p>
<p id="p-0041" num="0040">IT personnel at the management console may activate the IDE redirection layer (discussed in more detail below), and may instruct the managed computing system to boot-up using the virtual IDE device. Then, the IT personnel may re-boot the managed system <b>100</b>. The managed system <b>100</b> then accesses the virtual IDE device in the same manner it accesses an ordinary, physically present device. The IDE commands from the managed system are forwarded to the management console. The management console maintains a set of image device data for the managed system <b>100</b>. The management console interprets the IDE commands and operates upon the image device data (i.e., reads from the image data, writes to the image data, etc.). In this way, for example, IT personnel may reinstall an operating system on the managed system <b>100</b> without having to be physically present to do so.</p>
<p id="p-0042" num="0041">As shown in <figref idref="DRAWINGS">FIG. 5</figref>, a managed computing system (such as computing system <b>100</b>) may execute the following acts. First, as depicted by operation <b>500</b>, a set of registers dimensioned in size and number to mimic that of an IDE controller and IDE device are presented to the BIOS as an ordinary IDE controller and IDE device. In the context of performing that task with a PCI device, this includes providing a PCI configuration space having a class code register that identifies the PCI device as having an IDE function, and further having base address registers that can be programmed to point at the aforementioned sets of registers.</p>
<p id="p-0043" num="0042">Next, as shown in operation <b>502</b>, a microcontroller coupled to the aforementioned sets of registers is programmed to read and write data to and from the registers in a manner mimicking the behavior of an ordinary IDE controller and IDE device. This may include providing an IDE redirection layer <b>410</b>, as shown in <figref idref="DRAWINGS">FIG. 4</figref>, and as is discussed in greater detail, below.</p>
<p id="p-0044" num="0043">Finally, as shown depicted by operation <b>504</b>, data read from the aforementioned set of registers is communicated to a LAN controller (or network interface chip) for communication through a network to a management console or other computing system. Of course, data received from the management console via the LAN controller <b>124</b> is unpacked into the aforementioned registers for retrieval by the CPU of the managed system. Operation <b>504</b> may include execution of a protocol stack, such as that shown in layers <b>402</b>-<b>408</b> in <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 6</figref> depicts one possible embodiment of the protocol stack <b>400</b> depicted in <figref idref="DRAWINGS">FIG. 4</figref>. As shown in <figref idref="DRAWINGS">FIG. 6</figref>, the IDE redirection layer <b>410</b> shown in <figref idref="DRAWINGS">FIG. 4</figref> may be controlled by a session manager <b>600</b>. Briefly, the session manager <b>600</b> is responsible for opening a redirection session (such as an IDE redirection session), and in some situations is responsible for ensuring that fewer than some maximum number of such sessions are open (example: limit the number of simultaneous IDE redirection sessions to only a single such session). The operation of the session manager <b>600</b> is discussed in more detail, below.</p>
<p id="p-0046" num="0045">As can also be seen from <figref idref="DRAWINGS">FIG. 6</figref>, a redirection session other than an IDE redirection session may also be supported by the multifunction integrated device <b>118</b>. For example, the integrated multifunction device <b>118</b> may also provide a set of registers dimensioned in size and number to be identical to that of a serial port interface (COM port interface). In other words, a virtual COM port may be provided by the integrated multifunction device <b>118</b>. The microcontroller <b>120</b> in the integrated multifunction device <b>118</b> may be programmed to cooperate with a remote management console, so that the microcontroller <b>118</b> redirects text-mode screen data to the management console, and receives keystroke data therefrom.</p>
<p id="p-0047" num="0046">Previously, it was mentioned that IT personnel could use the management console to instruct the managed computing system to boot up from the virtual IDE device, as opposed to booting up from a physically present device. The IT personnel may use the virtual COM port functionality to view the BIOS menus at the management console. Also, the IT personnel could enter keystrokes at the management console. Those keystrokes are redirected to the managed system via the virtual COM port, and are treated as keystrokes from a keyboard that is physically present at the managed system. Thus, the IT personnel may enter keystrokes at the management console to alter a BIOS menu (e.g., boot menu), causing the managed system to boot-up from a virtual IDE device. Such functionality is provided by the redirection layer <b>602</b>, which provides redirection functionality other than IDE redirection, such as serial-over-LAN redirection.</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 7</figref> depicts one embodiment of the joint flow of operation of the session manager <b>600</b> and the IDE redirection layer <b>410</b> (other embodiments are possible). As shown in <figref idref="DRAWINGS">FIG. 7</figref>, the session manager <b>600</b> may be initially set in motion by the reception of a StartRedirectionSession command from management console. (Of course, commands from the management console are received by way of the LAN controller <b>124</b> in the integrated multifunction device <b>118</b>). The StartRedirectionSession command is the first command that the management console generally sends to the computing system under management <b>100</b>. Basically, this command identifies what kind of redirection session should be started (i.e., should an IDE redirection session be started, or should another form of redirection session, such as a serial-over-LAN session, be started). Thus, the StartRedirectionSession command may include at least one argument, in order to fulfill its role of identifying the sort of redirection session to be started.</p>
<p id="p-0049" num="0048">The StartRedirectionSession command is received by the session manager <b>600</b>, which causes the session manager <b>600</b> to transition to the starting state <b>700</b>. During the starting state <b>700</b>, the session manager <b>600</b> determines whether opening the requested redirection session would result in more than a maximum number of permitted sessions to be opened. If so, the session manager <b>600</b> does not open the requested redirection session. On the other hand, if opening the requested session would not result in more than a maximum number of permitted sessions, the session manager <b>600</b> continues forward in its procedure to open a session. Either way, the session manager <b>600</b> replies to the management console by sending a StartRedirectionSessionReply message. This message indicates whether the maximum number of redirection sessions is already open, and also indicates whether the particular variety of redirection session requested by the management console is supported by the computing system under management <b>100</b>.</p>
<p id="p-0050" num="0049">The session manager <b>600</b> remains in the starting state <b>700</b> until it receives an AuthenticateSession command from the management console, whereupon it transitions to the authenticating state <b>702</b>. The AuthenticateSession command identifies a process by which the management console may identify itself, so that the managed computing system <b>100</b> can verify that the console indeed has the authority to start the redirection session. For example, the AuthenticateSession command may include arguments such as a user name and password, for the aforementioned purpose. If the authentication fails (e.g., the username or password provided by the management console is incorrect), then the session manager <b>600</b> remains in the authenticating state <b>702</b>, awaiting an AuthenticateSession command with a correct username and password. An AuthenticateSessionReply message is returned to the management console indicating that the authentication failed. On the other hand, if the authentication is successful, an AuthenticateSessionReply message is returned to the management console indicating the success, and the IDE redirection layer <b>410</b> transitions to the starting IDE redirection state <b>704</b>.</p>
<p id="p-0051" num="0050">In the starting IDER state <b>704</b>, the IDE redirection layer <b>410</b> awaits a StartIDERedirection command from the management console. The StartIDERedirection command tells the IDE redirection layer <b>410</b> that it should start forwarding host IDE commands to the management console. In other words, it marks the beginning of the IDE redirection session. The SartIDERedirection command may contain certain arguments that configure the IDE redirection layer <b>410</b>. <figref idref="DRAWINGS">FIG. 8</figref> depicts the general structure of the IDE redirection layer <b>410</b>. Briefly, the IDE redirection layer <b>410</b> includes a transmission command queue <b>800</b>, a transmission data buffer (write buffer) <b>802</b>, a reception command queue <b>804</b>, and a reception data buffer (read buffer) <b>806</b>. The IDE redirection layer <b>410</b> may also include two clocks: (1) a heartbeat timer <b>808</b>; and (2) a session timeout timer <b>810</b>.</p>
<p id="p-0052" num="0051">During operation, redirected IDE commands are entered into the transmission command queue <b>800</b>. Any data associated with the command is entered into the write buffer <b>802</b>. When the previous command is completed (this is indicated by receipt of a reply message from the management console, as discussed below), the next command is removed from the transmission command queue <b>800</b>, repackaged into an IDE redirection layer command, and sent to the multiplex layer <b>408</b> for communication to the management console. Any data associated with the command is removed from the write buffer <b>802</b>, bundled into the associated IDE redirection command, and placed sent to the multiplex layer <b>408</b>, as well.</p>
<p id="p-0053" num="0052">Commands received from the management console are received from the multiplex layer <b>408</b> and are placed into the reception command queue <b>804</b>. Any data associated therewith (e.g., data read from the device image data set maintained at the management console) is placed in the read buffer <b>806</b>. Upon the occurrence of certain state transitions, the commands and data are removed from the reception queue <b>804</b> and read buffer <b>806</b> and unpackaged into the appropriate registers in the virtual IDE interface <b>801</b>.</p>
<p id="p-0054" num="0053">The IDE redirection layer <b>410</b> includes a heartbeat timer <b>808</b>. Upon expiration of the heartbeat timer <b>808</b>, a heartbeat message is communicated to the management console to indicate that the IDE redirection session is still active. The heartbeat timer <b>808</b> is reset every time a heartbeat message is sent or any other message/command is sent to the management console. The StartIDERedirection command may include an argument that configures the heartbeat timer <b>808</b> to expire after a selected period of time (e.g., the StartIDERedirection command may configure the heartbeat timer <b>808</b> to expire after 100 ms or 200 ms).</p>
<p id="p-0055" num="0054">The StartIDERedirection command may also include an argument that configures the session timeout timer <b>810</b> to expire after a chosen period of time. Upon expiration of the session timeout timer <b>810</b>, the IDE redirection session is terminated, as it is inferred that the management console is no longer in communication with the computing system under management <b>100</b> for one reason or another. The session timeout timer <b>810</b> is reset every time a message is received from the management console.</p>
<p id="p-0056" num="0055">The StartIDERedirection command may also set an initial value for a console sequence number. Each subsequent message from the management console includes a console sequence number, with each successive message containing a sequence number that has been incremented by one. The console sequence number ensures that its messages are received and acted upon in the correct order at the managed computing system <b>100</b>. The sequence number is important in the context of UDP implementations.</p>
<p id="p-0057" num="0056">Upon reception of the StartIDERedirection command, the IDE redirection layer <b>410</b> transitions from the starting IDE state <b>704</b> to the connected state <b>706</b>. To indicate that such a transition has been made, a StartIDERedirectionReply message is sent to the management console. The StartIDERedirectionReply message informs the management console that the IDE redirection session has started. Additionally, it may include arguments indicating the size of the read buffer <b>806</b> and write buffer <b>802</b>. The management console should not send data in blocks larger than the size of the read buffer <b>806</b>, because the IDE redirection layer <b>410</b> would not be able to enter such a block of data into the buffer <b>806</b>. Additionally, the management console should not request the IDE redirection layer <b>410</b> to request from the host a data block larger than the size of the write buffer <b>802</b>, because the IDE redirection layer <b>410</b> would not be able to enter such a block of data into the buffer <b>802</b>. In some instances, the length of the read or write buffers <b>806</b> and <b>802</b> may be constrained to be a multiple of four bytes.</p>
<p id="p-0058" num="0057">During the tenure of the connected state <b>706</b>, the IDE redirection layer <b>410</b> awaits the occurrence of certain events. In response to these events, the IDE redirection layer <b>410</b> reacts as depicted in <figref idref="DRAWINGS">FIG. 9</figref>.</p>
<p id="p-0059" num="0058">When a command code is written to the command register in the virtual IDE interface <b>200</b>, the connected state <b>706</b> transitions from an awaiting event operation <b>900</b> to a send CommandWritten message operation <b>902</b>. It should be noted that if the command code written to the command register is a PACKET command, then the transition to the send CommandWritten message operation <b>902</b> does not occur until the packet data is written to the data register. During execution of the send CommandWritten operation <b>902</b>, a CommandWritten message is sent from the IDE redirection layer <b>410</b> to the multiplex layer <b>408</b>, for ultimate delivery to the management console.</p>
<p id="p-0060" num="0059">The CommandWritten message includes arguments to convey the contents of each of the registers of virtual IDE interface (e.g., an argument to convey the content of the command register, the LBA High register, the LBA Mid register, etc.). The CommandWritten message also includes an argument to convey any PACKET data that may accompany a PACKET command. Thus, the management console may completely reconstruct the IDE (ATA/ATAPI) command from the arguments conveyed by the CommandWritten message. After sending the CommandWritten message to the multiplex layer <b>408</b>, the connected state <b>706</b> returns to the awaiting event operation <b>900</b>.</p>
<p id="p-0061" num="0060">As shown in <figref idref="DRAWINGS">FIG. 9</figref>, the management console may transmit a KeepAlivePing message. The management console may send such a message to the managed computing system <b>100</b> when a given period of time has passed without either receiving a message from the system <b>100</b> or sending a message to the system <b>100</b>. In response to reception of a KeepAlivePing message, the connected state <b>706</b> transitions from the awaiting event operation <b>900</b> to the send KeepAlivePong message operation <b>904</b>. During this operation <b>904</b>, a KeepAlivePong message is returned to the management console (by way of the multiplex layer <b>408</b>). After transmission of the KeepAlivePong message, the connected state returns to the awaiting event operation <b>900</b>. By virtue of this &#x201c;ping&#x201d; and &#x201c;pong&#x201d; exchange, the management console can verify that the IDE Redirection session is still active. If, after transmission of a KeepAlivePing message, a given period of time elapses without the management console receiving a KeepAlivePong message, the management console closes the serial-over-LAN session, based on the assumption that the session is no longer active for one reason or another.</p>
<p id="p-0062" num="0061">As is also shown in <figref idref="DRAWINGS">FIG. 9</figref>, upon the heartbeat timer <b>808</b> elapsing, the connected state <b>706</b> transitions from the awaiting event operation <b>900</b> to the send heartbeat message operation <b>906</b>. This message serves a similar purpose to that of the KeepAlivePong, i.e., it confirms to the management console that the redirection session is still valid. Upon transmission of heartbeat message, the connected state <b>706</b> returns to the awaiting event operation <b>900</b>.</p>
<p id="p-0063" num="0062">In the wake of an ATAPI write command having been sent to the management console (via a CommandWritten message, discussed above), the IDE redirection layer <b>410</b> may receive a GetDataFromHost command from the management console. The GetDataFromHost command includes arguments for each of the registers in the virtual IDE interface <b>200</b>. Of note, the GetDataFromHost command includes arguments indicating the number of bytes the host should transfer to the IDE redirection layer <b>410</b>, and an argument indicating the mode of the transfer (PIO or DMA). Thus, the IDE redirection layer may unpack the GetDataFromHost command, entering its contents into the appropriate registers of the virtual IDE interface <b>200</b>, and thereby prompting the host to transfer data to the IDE redirection layer <b>410</b>.</p>
<p id="p-0064" num="0063">Upon receiving the data from the host, the IDE redirection layer transitions to the send DataFromHost message operation <b>908</b>. During the execution of this operation <b>908</b>, a DataFromHost message is sent to the management console. The DataFromHost message includes arguments indicating the number of bytes in the DataFromHost message, the cable from which the data has been transferred (primary or secondary), and the data, itself. Upon transmission of DataFromHost message, the connected state <b>706</b> returns to the awaiting event operation <b>900</b>.</p>
<p id="p-0065" num="0064">In the wake of an ATAPI read command having been sent to the management console (via a Command Written message, discussed above), the IDE redirection layer <b>410</b> may receive a DataToHost command from the management console. Receipt of this message causes the connected state <b>706</b> to transition from the awaiting event operation <b>900</b> to the pass upstream operation <b>910</b>. The DataToHost command includes the cable to which the data should go (primary or secondary), arguments for the registers in the virtual IDE interface <b>200</b>, an argument indicating the number of data bytes being transferred, and the data, itself. The DataToHost command also includes a flag indicating whether all of the data has been transferred (i.e., whether or not there will be a subsequent DataToHost command). If the flag indicates that the DataToHost command is not the last one, then the data contained therein is unpacked into the virtual IDE interface <b>200</b>, and is received by the host. If, on the other hand, the flag indicates that the DataToHost command is the last one, then the data is first unpacked and placed in the virtual IDE interface <b>200</b>, and then the arguments indicating the contents of the various registers are unpacked and placed into the appropriate registers of the virtual IDE interface. Upon unpacking the DataToHost message, the connected state <b>706</b> returns to the awaiting event operation <b>900</b>.</p>
<p id="p-0066" num="0065">If a command simply did not require that data be transferred (to or from the host, from or to the management console, respectively), then the IDE redirection layer <b>410</b> may receive a CommandEndResponse message. The CommandEndResponse message includes arguments for the registers of the virtual IDE interface <b>200</b>. Receipt of this message causes the connected state <b>706</b> to transition from the awaiting event operation <b>900</b> to the pass upstream operation <b>910</b>. During execution of the pass upstream operation <b>910</b>, the arguments indicating the contents of the various registers are unpacked and placed into the appropriate registers of the virtual IDE interface. Upon unpacking the CommandEndResponse message, the connected state <b>706</b> returns to the awaiting event operation <b>900</b>. If an error occurred during execution of an IDE command or ATAPI command, the arguments included in the CommandEndResponse message contain the appropriate error values to be unpacked into the registers of the virtual IDE interface <b>200</b>.</p>
<p id="p-0067" num="0066">The IDE redirection layer <b>410</b> may detect the occurrence of a hardware or software reset. In response to such a detection, the connection state <b>706</b> transitions from the awaiting event operation <b>900</b> to the send ResetOccurred message operation <b>914</b>. During the execution of this operation <b>914</b>, a ResetOccurred message is transmitted to the management console to inform the management console of the reset. The ResetOccurred message includes an argument that indicates which device the reset occurred is directed toward (i.e., master or slave). Next, the IDE redirection layer <b>410</b> ignores all subsequent messages from the management console, except for a ResetOccurredResponse message, which confirms that the management console has ceased the execution of the last command.</p>
<p id="p-0068" num="0067">As mentioned above briefly, the IDE redirection layer <b>410</b> includes a session timeout timer <b>810</b>. The session timeout timer <b>810</b> is reset every time a message is received from the management console. Should the session timeout timer <b>810</b> expire, the IDE redirection layer <b>410</b> transitions to the socket invalid state <b>710</b> (<figref idref="DRAWINGS">FIG. 7</figref>), as shown by operation <b>916</b>. The session timeout timer <b>810</b> allows the managed computing system <b>100</b> to infer that the redirection session has been compromised in some fashion (e.g., the communication link has been lost, or the management console has crashed, etc.), and to respond by invalidating the redirection session.</p>
<p id="p-0069" num="0068">When finally the IT professional at the management console has completed his or her remote installation, diagnosis or configuration work upon the managed computing system <b>100</b>, he or she may close the redirection session. The management console commands the closing of the redirection session by sending an EndIDERedirection command, as shown in <figref idref="DRAWINGS">FIG. 7</figref>. The EndIDERedirection command is received by the IDE redirection layer <b>410</b>, and informs the layer <b>410</b> that the redirection session has ended, meaning that the layer <b>410</b> should cease forwarding any messages to the management console. Reception of the EndIDERedirection command causes the IDE redirection layer <b>410</b> to transition to the closing state <b>708</b>. Upon transition into the closing state <b>708</b>, the IDE redirection layer <b>410</b> transmits an EndIDERedirectionReply message to the management console, which is a message that confirms to the management console that the IDE redirection layer <b>410</b> has ended the redirection session.</p>
<p id="p-0070" num="0069">The IDE redirection layer <b>410</b> remains in the closing state <b>708</b> until the reception of an EndRedirectionSession command. The EndRedirectionSession command is received by the session manager <b>600</b>. It informs the session manager <b>600</b> that the redirection session has come to an end. In response, the session manager <b>600</b> closes the communication socket that had been utilized by the IDE redirection layer <b>410</b> during the redirection session. Therefore, the session manager <b>400</b> transitions to a socket invalid state <b>710</b>. Although not depicted, reception of a StartRedirectionSession command causes the session manager <b>600</b> to transition from the socket invalid state <b>710</b> to the starting state <b>700</b>, and the aforementioned state flow commences again.</p>
<p id="p-0071" num="0070">The above-described protocol (with reference to <figref idref="DRAWINGS">FIGS. 7-9</figref>) may be used in concert with a TLS/TCP/IP protocol suite. The methods and schemes presented herein may also support IDE redirection via HTTP or HTTPS over TCP/IP, or any other transport protocol. Other protocols may be used in concert with a UDP/IP protocol suite that is protected by a security protocol defined by the internet protocol management interface (IPMI).</p>
<p id="p-0072" num="0071">It should be noted that the protocol described with reference to <figref idref="DRAWINGS">FIG. 7-9</figref> may be re-arranged to function so that the IDE redirection session is initiated by the managed system, rather than be the management console. Such a modification is useful in a scenario wherein the management console does not possess a priori knowledge of the network address at which a managed system can be reached.</p>
<p id="p-0073" num="0072">Embodiments of the invention may be implemented in one or a combination of hardware, firmware, and software. Embodiments of the invention may also be implemented as instructions stored on a machine-readable medium, which may be read and executed by at least one processor to perform the operations described herein. A machine-readable medium may include any mechanism for storing or transmitting information in a form readable by a machine (e.g., a computer). For example, a machine-readable medium may include read-only memory (ROM), random-access memory (RAM), magnetic disc storage media, optical storage media, or flash-memory devices.</p>
<p id="p-0074" num="0073">The Abstract is provided to comply with 37 C.F.R. Section 1.72(b) requiring an abstract that will allow the reader to ascertain the nature and gist of the technical disclosure. It is submitted with the understanding that it will not be used to limit or interpret the scope or meaning of the claims.</p>
<p id="p-0075" num="0074">In the foregoing detailed description, various features are occasionally grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments of the subject matter require more features than are expressly recited in each claim. Rather, as the following claims reflect, inventive subject matter lies in less than all features of a single disclosed embodiment. Thus, the following claims are hereby incorporated into the detailed description, with each claim standing on its own as a separate preferred embodiment.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The claimed invention is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An apparatus comprising:
<claim-text>a device to:
<claim-text>receive a first command for communication via a network with a computer, the apparatus being remote from the computer, the communication including a network redirection session to transmit to the computer at least one of storage command and storage data, the at least one of the storage command and the storage data being redirected via the session to the computer from the apparatus;</claim-text>
<claim-text>open, in response, at least in part, to the first command, the session, unless opening the session would result in exceeding a maximum number of concurrent redirections, the concurrent redirections including one or more types from among the following: text data redirection, storage device redirection, and serial-over-local area network redirection;</claim-text>
<claim-text>receive a second command to stop redirecting from the apparatus to the computer via the session;</claim-text>
<claim-text>stop, in response, at least in part, to the second command, the redirecting;</claim-text>
<claim-text>receive a third command to end the session; and</claim-text>
<claim-text>end, in response, at least in part to the third command, the session.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the first command indicates a selected type of the session, the selected type being selected from the one or more types.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the first, second, and third commands are issued to the device from the computer; and</claim-text>
<claim-text>the device also is to verify that the computer has authority to initiate the session.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the at least one of the storage command and the storage data comprises at least one of an integrated device electronics (IDE) command and data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the serial-over-local area network redirection comprises redirecting keystroke data from the computer to the apparatus; and</claim-text>
<claim-text>the text data redirection comprises redirecting screen data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the device also is to execute transport layer security to be used in the session.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>the network and the computer.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A method comprising:
<claim-text>receiving at a device of an apparatus a first command for communication via a network with a computer, the apparatus being remote from the computer, the communication including a network redirection session to transmit to the computer at least one of storage command and storage data, the at least one of the storage command and the storage data being redirected via the session to the computer from the apparatus;</claim-text>
<claim-text>opening by the device, in response, at least in part, to the first command, the session, unless the opening of the session would result in exceeding a maximum number of concurrent redirections, the concurrent redirections including one or more types from among the following: text data redirection, storage data redirection, and serial-over-local area network redirection;</claim-text>
<claim-text>receiving by the device a second command to stop redirecting from the apparatus to the computer via the session;</claim-text>
<claim-text>stopping at the device, in response, at least in part, to the second command, the redirecting;</claim-text>
<claim-text>receiving by the device a third command to end the session; and</claim-text>
<claim-text>ending by the device, in response, at least in part to the third command, the session.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein:
<claim-text>the first command indicates a selected type of the session, the selected type being selected from the one or more types.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein:
<claim-text>the first, second, and third commands are issued to the device from the computer; and</claim-text>
<claim-text>the device also is to verify that the computer has authority to initiate the session.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein:
<claim-text>the at least one of the storage command and the storage data comprises at least one of an integrated device electronics (IDE) command and data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein:
<claim-text>the serial-over-local area network redirection comprises redirecting keystroke data from the computer to the apparatus; and</claim-text>
<claim-text>the text data redirection comprises redirecting screen data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein:
<claim-text>the device also is to execute transport layer security to be used in the session.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. Machine-readable memory storing instructions that when executed by a machine result in operations comprising:
<claim-text>receiving at a device of an apparatus a first command for communication via a network with a computer, the apparatus being remote from the computer, the communication including a network redirection session to transmit to the computer at least one of storage command and storage data, the at least one of the storage command and the storage data being redirected via the session to the computer from the apparatus;</claim-text>
<claim-text>opening by the device, in response, at least in part, to the first command, the session, unless the opening of the session would result in exceeding a maximum number of concurrent redirections, the concurrent redirections including one or more types from among the following:</claim-text>
<claim-text>text data redirection, storage data redirection, and serial-over-local area network redirection;</claim-text>
<claim-text>receiving by the device a second command to stop redirecting from the apparatus to the computer via the session;</claim-text>
<claim-text>stopping at the device, in response, at least in part, to the second command, the redirecting;</claim-text>
<claim-text>receiving by the device a third command to end the session; and</claim-text>
<claim-text>ending by the device, in response, at least in part to the third command, the session.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The memory of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein:
<claim-text>the first command indicates a selected type of the session, the selected type being selected from one or more types.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The memory of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein:
<claim-text>the first, second, and third commands are issued to the device from the computer; and</claim-text>
<claim-text>the device also is to verify that the computer has authority to initiate the session.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The memory of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein:
<claim-text>the at least one of the storage command and the storage data comprises at least one of an integrated device electronics (IDE) command and data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The memory of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein:
<claim-text>the serial-over-local area network redirection comprises redirecting keystroke data from the computer to the apparatus; and</claim-text>
<claim-text>the text data redirection comprises redirecting screen data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The memory of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein:
<claim-text>the device also is to execute transport layer security to be used in the session.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. An apparatus comprising:
<claim-text>a device to be used in establishing a serial-over-local area network redirection session with a remote computer via a network controller of the device and a network, the redirection session involving screen data redirection to be used to facilitate remote management of the device by the remote computer, the redirection session to transition from one state to another state and thereafter to a third state;</claim-text>
<claim-text>in which:
<claim-text>in the one state, the session has been established;</claim-text>
<claim-text>in the another state, the session has been established, involves an active connection, and utilizes a security protocol;</claim-text>
<claim-text>in the third state, the session is closed; and</claim-text>
<claim-text>prior to the one state, the redirection session is to be established unless establishment of the redirection session would result in exceeding a maximum number of concurrent redirections.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The apparatus of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein:
<claim-text>the device comprises a network controller to be coupled to a central processing unit.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. A method comprising:
<claim-text>using a device to establish a serial-over-local area network redirection session with a remote computer via a network controller of the device and a network, the redirection session involving screen data redirection to be used to facilitate remote management of the device by the remote computer, the redirection session to transition from one state to another state and thereafter to a third state;</claim-text>
<claim-text>in which:
<claim-text>in the one state, the session has been established;</claim-text>
<claim-text>in the another state, the session has been established, involves an active connection, and utilizes a security protocol;</claim-text>
<claim-text>in the third state, the session is closed; and</claim-text>
<claim-text>prior to the one state, the redirection session is to be established unless establishment of the redirection session would result in exceeding a maximum number of concurrent redirections.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The method of <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein:
<claim-text>the device comprises a network controller to be coupled to a central processing unit.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. Machine-readable memory storing instructions that when executed by a machine result in operations comprising:
<claim-text>using a device to establish a serial-over-local area network redirection session with a remote computer via a network controller of the device and a network, the redirection session involving screen data redirection to be used to facilitate remote management of the device by the remote computer, the redirection session to transition from one state to another state and thereafter to a third state;</claim-text>
<claim-text>in which:
<claim-text>in the one state, the session has been established;</claim-text>
<claim-text>in the another state, the session has been established, involves an active connection, and utilizes a security protocol;</claim-text>
<claim-text>in the third state, the session is closed; and</claim-text>
<claim-text>prior to the one state, the redirection session is to be established unless establishment of the redirection session would result in exceeding a maximum number of concurrent redirections.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The memory of <claim-ref idref="CLM-00024">claim 24</claim-ref>, wherein:
<claim-text>the device comprises a network controller to be coupled to a central processing unit.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
