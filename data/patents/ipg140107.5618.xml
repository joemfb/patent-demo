<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626719-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626719</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10985389</doc-number>
<date>20041111</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>261</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>7</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>707673</main-classification>
<further-classification>709206</further-classification>
</classification-national>
<invention-title id="d2e53">Methods of managing and accessing e-mail</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6144959</doc-number>
<kind>A</kind>
<name>Anderson et al.</name>
<date>20001100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  9</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7054905</doc-number>
<kind>B1</kind>
<name>Hanna et al.</name>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7113948</doc-number>
<kind>B2</kind>
<name>Jhingan et al.</name>
<date>20060900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707 10</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7257639</doc-number>
<kind>B1</kind>
<name>Li et al.</name>
<date>20070800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709232</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2001/0051991</doc-number>
<kind>A1</kind>
<name>Beyda et al.</name>
<date>20011200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2001/0054073</doc-number>
<kind>A1</kind>
<name>Ruppert et al.</name>
<date>20011200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2002/0056123</doc-number>
<kind>A1</kind>
<name>Liwerant et al.</name>
<date>20020500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>725 87</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2002/0138586</doc-number>
<kind>A1</kind>
<name>Paleiov et al.</name>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709207</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2004/0133644</doc-number>
<kind>A1</kind>
<name>Warren et al.</name>
<date>20040700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2004/0158607</doc-number>
<kind>A1</kind>
<name>Coppinger et al.</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2005/0060375</doc-number>
<kind>A1</kind>
<name>Ernest et al.</name>
<date>20050300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2005/0080889</doc-number>
<kind>A1</kind>
<name>Malik et al.</name>
<date>20050400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709223</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2005/0108335</doc-number>
<kind>A1</kind>
<name>Naick et al.</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2005/0188026</doc-number>
<kind>A1</kind>
<name>Hilbert et al.</name>
<date>20050800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2005/0193145</doc-number>
<kind>A1</kind>
<name>Brown et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709238</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2006/0018270</doc-number>
<kind>A1</kind>
<name>Forand et al.</name>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370324</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2006/0031309</doc-number>
<kind>A1</kind>
<name>Luoffo et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2006/0085503</doc-number>
<kind>A1</kind>
<name>Stoye et al.</name>
<date>20060400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709206</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>2006/0171523</doc-number>
<kind>A1</kind>
<name>Greenwell</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>379242</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00020">
<othercit>EmailXtender for Lotus Notes&#x2014;The complete Email Management Solution; http://www.legato.com/products/emaixtender/lotus.cfm?mode=features, Download Date: Aug. 9, 2004, pp. 1-2.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00021">
<othercit>Legato&#x2014;Email Management Solutions; http://www.legato.com/products/emailxtender; Download Date: Aug. 9, 2004, pp. 1-2.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00022">
<othercit>EmailXtender for Lotus Notes&#x2014;The Complete Email Management Solution: http://www.legato.com/products/emailxtender/lotus.cfm; Download Date: Aug. 9, 2004; pp. 1.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00023">
<othercit>EmailXtender for Lotus Notes&#x2014;The Complete Email Management Solution: http://www.legato.com/products/emailxtender/lotus.cfm; Download Date: Aug. 9, 2004, pp. 1.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00024">
<othercit>IBM Lotus Domino, http://www.louts.com/products/product4.nsf/wdocs/dominohomepage; Download Date: Aug. 9, 2004, pp. 1-3.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00025">
<othercit>Lotus Domino Document Manager: http://www-306.ibm.com/software/lotus/knowledge/4523FB65A93D640185256E4D00425 . . . ; Download Date Aug. 9, 2004, pp. 1.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>26</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>707  2</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707  1</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707200</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707673</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>4</number-of-drawing-sheets>
<number-of-figures>4</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20060101099</doc-number>
<kind>A1</kind>
<date>20060511</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Shaw</last-name>
<first-name>Timothy C.</first-name>
<address>
<city>Amherst</city>
<state>NH</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Shaw</last-name>
<first-name>Timothy C.</first-name>
<address>
<city>Amherst</city>
<state>NH</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Dergosits &#x26; Noah LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>Noah</last-name>
<first-name>Todd A.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>EMC Corporation</orgname>
<role>02</role>
<address>
<city>Hopkinton</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Ng</last-name>
<first-name>Amy</first-name>
<department>2155</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Methods and systems for managing e-mails involve an e-mail server that maintains a data set identifying e-mails, and that implements a shortcut feature whereby at least a portion of an e-mail identified in the data set is identified by a shortcut identifier, so that the at least a portion of the e-mail is not stored in the data set. One method involves replicating a copy of at least some of the e-mails onto the client computer when the client computer is coupled to the e-mail server. Another method involves accessing a full copy of an e-mail while a client computer is not in communication with the e-mail server. Another method involves maintaining the shortcut identifier for an e-mail in the data set so that the data set is not updated with a full copy of the e-mail when a user requests the e-mail.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="184.66mm" wi="176.02mm" file="US08626719-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="208.53mm" wi="175.01mm" file="US08626719-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="195.41mm" wi="152.82mm" file="US08626719-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="161.12mm" wi="141.31mm" file="US08626719-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="177.80mm" wi="152.48mm" file="US08626719-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD OF INVENTION</heading>
<p id="p-0002" num="0001">The present invention relates to management and control of electronic data files</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">E-mail messages often include attachments, such as files. Attached files can have any of a variety of file formats suitable for delivery of, for example, text, audio, images, video, etc. A recipient of an e-mail that includes an attachment initiates actions to open the e-mail and to open the attachment to the e-mail. Opening the attachment often entails retrieving the attachment from an e-mail server or storage device. The recipient can then open the attachment, using, for example, a software program associated with the format of the retrieved file (e.g., using a word processing program to open a word processing file, using a spreadsheet program to open a spreadsheet file, etc.) Aspects of the present invention relate to managing e-mails in a computer system.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading>
<p id="p-0004" num="0003">The accompanying drawings are not intended to be drawn to scale. In the drawings, each identical or nearly identical component that is illustrated in various figures is represented by a like numeral. For purposes of clarity, not every component may be labeled in every drawing. In the drawings:</p>
<p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of a system that manages e-mails, in accordance with one embodiment of the invention;</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 2</figref> is a flow diagram of a method for managing e-mails in a computer system that includes at least one e-mail server and at least one client computer, in accordance with one embodiment of the invention;</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 3</figref> is a flow diagram of a method for accessing e-mails in a computer system that includes at least one e-mail server and at least one client computer, in accordance with another embodiment of the invention; and</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 4</figref> is a flow diagram of a method for managing e-mails in a computer system that includes at least one e-mail server and at least one client computer, in accordance with another embodiment of the invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0009" num="0008">Some e-mail systems can embed an attachment in an e-mail message in the form of a link to a file stored&#x2014;possibly in a compressed form&#x2014;on an e-mail server. When a recipient of the e-mail retrieves the attachment, the e-mail system can deliver the attached file to the recipient, and the recipient can then utilize a local program appropriate to the format of the file to access the file. A local program can also be used to decompress a file stored in compressed form.</p>
<p id="p-0010" num="0009">To save storage space on the e-mail server, some e-mail systems store attachments remotely, and store a shortcut identifier at the e-mail server. For example, some e-mail systems replace an e-mail attachment with a link related to a Uniform Resource Locator (URL), i.e., a Web address of a network site containing the full attachment. A recipient of the e-mail can then select the link to retrieve the attachment from the indicated Web site.</p>
<p id="p-0011" num="0010">An example of one such a system places a link to an attachment in an e-mail message forwarded to a client computer, with the formatted full attachment residing in the e-mail server. After retrieving the formatted attachment from the server, the client computer can utilize software located on the client computer to convert the file to a form observable by a user of the client computer. One example of a file format suitable for storage and transmission is the zip compressed format. This format is supported by, for example, PKZIP software (available from PKWare, Incorporated, Brown Deer, Wis.), which can process files having the .zip extension. When activated, the decompression software can decompress a compressed attachment delivered to a client computer.</p>
<p id="p-0012" num="0011">The above-described systems can require extra effort on the part of a user of the e-mail system to access an attachment, above and beyond the effort in accessing the e-mail that includes the attachment. For example, when a user attempts to access the attachment, the client computer may not recognize the format of the attachment. The user may then need to select a program that recognizes the format to access the attachment.</p>
<p id="p-0013" num="0012">For example, if the attachment is a compressed file, the user may need to determine what program compressed the file, and then instruct the client computer to utilize that program to decompress the compressed attachment file. If the program is not available on the client computer, the user may need to take additional action to obtain a copy of the program to decompress the attachment.</p>
<p id="p-0014" num="0013">Moreover, access to attachments can be interrupted when a client computer is disconnected from a network that facilitates the e-mail system.</p>
<p id="p-0015" num="0014">In accordance with one embodiment of the invention described below, full attachments are stored on a client computer even for e-mails stored using a shortcut ID on the e-mail server. As a result, a user can access the full attachment even when not connected to a network that allows the attachment to be obtained from an e-mail server or via a URL link.</p>
<p id="p-0016" num="0015">In another embodiment, the e-mail server need not replicate a full copy of an e-mail having a portion thereof represented by a shortcut ID when a full copy is delivered to a client computer. Thus, the advantages of the shortcut ID (e.g., storage savings) can be maintained on the e-mail server, even when a full copy is provided to a requesting client computer.</p>
<p id="p-0017" num="0016">Accordingly, in one example embodiment, as described in more detail below with reference to <figref idref="DRAWINGS">FIG. 2</figref>, a method of managing e-mails relates to a computer system that includes an e-mail server(s) and a client computer(s). The e-mail server maintains a data set identifying e-mails managed by the e-mail server, and implements a shortcut feature whereby at least a portion of at least one e-mail identified in the data set is identified in the data set by a shortcut identifier. In this manner, the portion of the e-mail is not stored in the data set, and is stored remotely from the data set.</p>
<p id="p-0018" num="0017">The method includes replicating a copy of at least some of the e-mails identified in the data set on a client computer when the client computer is coupled to the e-mail server. The copy replicated on the client computer may include a full copy of the portion of the e-mail that is identified in the data set by the shortcut identifier. Thus, full copies of e-mails may be stored on the client computer rather than shortcuts that only identify the e-mails, thereby ensuring access via the client computer to the full e-mails even when the client computer is not coupled to the e-mail server.</p>
<p id="p-0019" num="0018">In another embodiment, as described in more detail below with reference to <figref idref="DRAWINGS">FIG. 3</figref>, a method of managing e-mails includes accessing, by a user of a client computer, a full copy of an e-mail from the client computer while the client computer is not in communication with an e-mail server. The full copy of the attachment can, for example, be stored on the client computer.</p>
<p id="p-0020" num="0019">In still another embodiment, as described in more detail below with reference to <figref idref="DRAWINGS">FIG. 4</figref>, a method of managing e-mails includes, in response to a request from a user of a client computer to access an e-mail, maintaining a shortcut identifier for the e-mail in a data set managed by an e-mail server so that the data set is not updated with a full copy of the e-mail. Thus, an e-mail server need not replicate a full copy of an e-mail when the e-mail is requested by a user.</p>
<p id="p-0021" num="0020">The above-described embodiments can be implemented in any suitable manner, as the present invention is not limited in this respect. For example, an e-mail server software platform can be modified to provide full copies of e-mail files to a client computer without any additional effort on the part of the client computer to retrieve and/or access the full copy. The full copies can be delivered to the client computer from any suitable location. In one embodiment, the full copies can be provided directly from an extension server that supports the e-mail server software platform and stores the full copy.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of an illustrative computer system <b>100</b> on which aspects of the present invention described herein can be implemented. The computer system <b>100</b> includes an e-mail server(s) <b>110</b>, a mail extension server(s) <b>120</b>, and a client computer(s) <b>130</b>. The extension server <b>120</b> can provide remote storage of e-mails, or portions thereof (e.g., attachments), working in cooperation with the e-mail server <b>120</b>.</p>
<p id="p-0023" num="0022">The e-mail server <b>110</b> can implement an e-mail server application program. The e-mail server <b>110</b> can be, for example, a server running any suitable e-mail server messaging software platform. The e-mail server <b>110</b> can support, for example, an application such as the LOTUS DOMINO messaging server software platform (from IBM Corporation, Armonk, N.Y.), the EXCHANGE messaging server software platform (from Microsoft Corporation, Redmond, Wash.), or any other messaging server software platform.</p>
<p id="p-0024" num="0023">The client(s) <b>130</b> can execute client software compatible with the messaging server software platform executing on the e-mail server <b>110</b>. For example, the system <b>100</b> can include the LOTUS NOTES client software running on the client computer <b>130</b>, and working in cooperation with the LOTUS DOMINO messaging server software platform, the OFFICE OUTLOOK client software (from Microsoft Corporation, Redmond, Wash.) working in cooperation with the EXCHANGE messaging server software, or any other suitable client software.</p>
<p id="p-0025" num="0024">These examples are not intended to limit application of embodiments to any particular messaging platform. For example, embodiments can be applied to other software platforms, such as the Sendmail e-mail software utility (a free shareware program) running under the UNIX operating system (versions available from IBM Corporation, Armonk, N.Y., and other vendors), or other platforms.</p>
<p id="p-0026" num="0025">In one embodiment, the client computer <b>130</b> does not include any software specifically added to the client computer <b>130</b> to permit the client computer <b>130</b> to be supported by the extension server <b>120</b>. For example, the client computer <b>130</b> can be loaded with any standard DOMINO-related or NOTES-related application program interfaces (APIs), which will function properly when accessing a filed stored by the extension server <b>120</b>. Thus, the interaction between the extension server <b>120</b> and the e-mail server <b>110</b> can be performed in a manner that is transparent to the client. However, it should be appreciated that the aspects of the present invention described herein are not limited in this respect, and can be used in connection with systems wherein the client is aware of the existence of the extension server <b>120</b>, and/or the client <b>130</b> has software loaded thereon to communicate (directly or indirectly through the e-mail server <b>110</b>) with the extension server <b>120</b>.</p>
<p id="p-0027" num="0026">Aspects of the present invention can also be implemented on a system wherein additional document control-related software is implemented on the e-mail server <b>110</b>. For example, the EMAILEXTENDER software product (from EMC Corporation, Hopkinton, Mass.) for managing data storage and content management for electronic messaging can be included in the system <b>100</b> and loaded on the e-mail server <b>110</b>.</p>
<p id="p-0028" num="0027">In one embodiment described below, document control-related software product is provided with functionality to implement features of the invention. In the example described below, the document control-related software product is the EMAILEXTENDER software product and the e-mail server platform is the DOMINO server software platform. However, this example is merely illustrative, and is not intended to limit the implementation of this embodiment to any particular software platform environment or document control-related software product. In addition, while the functionality performed in accordance with the embodiments of the invention described herein is implemented in a document-control-related software product in accordance with one embodiment of the invention, the invention is not limited in this respect and can be implemented via any software product executing on any computer(s) in the system (e.g., the e-mail server <b>110</b>, the extension server <b>120</b>, the client <b>130</b>, or any other computer.)</p>
<p id="p-0029" num="0028">In one illustrative embodiment, the e-mail server <b>110</b> maintains a data set identifying e-mails that it manages. The e-mail server <b>110</b> implements a shortcut feature whereby at least a portion, (e.g., an attachment) of at least one e-mail identified in the data set is identified in the data set by a shortcut identifier, and is stored remotely from the data set by the extension server <b>120</b> (i.e., the identified portion is not stored in the data set.) The EMAILEXTENDER software product may provide the shortcut feature, and may create the data set which includes shortcut identifiers.</p>
<p id="p-0030" num="0029">In one illustrative embodiment, the client computer <b>130</b> does not require any software added specifically to implement any features of the present invention. Thus, client computers <b>130</b> can benefit from these features without requiring any modification of the software environment running on the client computer <b>130</b>.</p>
<p id="p-0031" num="0030">As mentioned above, the e-mail server <b>110</b> may maintain a data set identifying e-mails managed by the e-mail server <b>110</b>, and implement a shortcut feature that involves shortcut identifiers that are included in the data set and identify portions of (or total) e-mails. Thus, a full copy of an e-mail need not be stored by the e-mail server <b>110</b> as at least a portion (e.g., an attachment) of an e-mail may be stored by the extension server <b>120</b>.</p>
<p id="p-0032" num="0031">The e-mail server <b>110</b> can implement the shortcut feature in any suitable manner. For example, the e-mail server <b>110</b> can store a redirection document (such as an indicator of the shortcut identifier, or a copy of the shortcut identifier itself) in the data set that it maintains for e-mails that it manages. The e-mail or portion thereof, associated with the redirection document, can then, for example, be stored by the extension server <b>120</b>. The redirection document may contain meta data indicating the stored file's actual storage location. The redirection document may include enough information to allow it to display properly in, for example, DOMINO platform-related views and folders as if the redirection document were the original file, with the only indication to a user of the client computer <b>130</b> that the document is not the original being the small size of the redirection document.</p>
<p id="p-0033" num="0032">In one embodiment discussed further below, shortcut identifiers are not provided to the client computer, such that the shortcut ID need not be provided in a form that enables the shortcut to be displayed.</p>
<p id="p-0034" num="0033">As discussed above, in one embodiment, copies of the shortcutted portions such as full copies (including full attachments) are stored on the client computer <b>130</b> automatically (i.e., without the shortcut being accessed by the user on the client computer.) This can be accomplished in any suitable way, as the invention is not limited to any particular implementation technique. For example, full copies can be sent from the e-mail server <b>110</b>, or from the extension server <b>120</b>, to the client computer <b>130</b> on a predetermined schedule. Alternatively, any e-mail having a redirection document that is being sent to the client computer <b>130</b> can be trapped, and the redirection document can be replaced with a full copy of the associated portion of the e-mail (e.g., an attachment) for storage on the client computer <b>130</b>.</p>
<p id="p-0035" num="0034">As mentioned above, in accordance with one embodiment, when a full copy of an e-mail having a shortcut ID is sent to a client computer, a full copy is not provided to the data set maintained by the e-mail server <b>110</b> to save storage space thereon. While this aspect of the present embodiment advantageously can be used in conjunction with the embodiment in which full copies of e-mails including shortcut IDS are provided to the client computer automatically, this aspect of the present invention is not limited in this respect.</p>
<p id="p-0036" num="0035">Thus, the aspect of the present invention that relates to not updating the e-mail server <b>110</b> data set with a full copy of an e-mail portion identified by a shortcut ID can alternatively be employed on a system wherein e-mails having shortcut IDs are sent to the client computer. In such a system when a user of the client computer <b>130</b>, or an application running on the client computer, selects a redirection document to open the associated e-mail, the actual e-mail is retrieved from the extension server <b>120</b> and used to replace the redirection document on the client computer <b>130</b>. However, unlike convention systems, the accessed e-mail is provided without replacing the redirection document in the e-mail server <b>110</b> to conserve storage space thereon.</p>
<p id="p-0037" num="0036">As mentioned above, the features of the present invention can be implemented in any manner, but in one embodiment are implemented by adding software-related components to document control-related software (such as the EMAILEXTENDER software product) utilized by the system <b>100</b>. In the illustrative implementation described, shortcut identifiers can be used for entire e-mails (not simply attachments thereto), and the EMAILEXTENDER software product can interface with (or hook into) the e-mail server to control the management of e-mails with shortcut identifiers. When adopted for use with a system that employs the DOMINO message server platform, the components may include a dynamic link library (DLL) that is added to the DOMINO e-mail server <b>110</b> executable directory. A database having a &#x201c;.nsf&#x201d; extension may be created on the DOMINO-based e-mail server <b>110</b> to support the shortcut feature (i.e., the DOMINO software utilizes the Notes Storage Facility file format, designated by the .nsf extension.) The access control level (ACL) of the database may provide &#x201c;Manager&#x201d; level access with full rights to a user identification related to a user of the client computer <b>130</b>, as will be understood by one having familiarity with the DOMINO and EMAILEXTENDER software platforms.</p>
<p id="p-0038" num="0037">As described in more detail below, the added DLL may reconfigure the e-mail server <b>110</b> to trap function calls traveling between the client computer <b>130</b> and the e-mail server <b>110</b>. In one embodiment, the added DLL supports automatic replication of full e-mail files on the client computer <b>130</b> and the prevention of such replication on the e-mail server <b>110</b>. However, as discussed above, in other embodiments these two functionalities can be provided separately, such that other embodiments support either of these functionalities without the other.</p>
<p id="p-0039" num="0038">In response to a user of the client computer <b>130</b> selecting an e-mail message to read, when the client computer is running in a mode with access to the e-mail server, NOTES software running on the client computer <b>130</b> transmits various function calls to the DOMINO-based e-mail server <b>110</b> to access the user's e-mail. From the perspective of the client computer <b>130</b>, the DOMINO-based server <b>110</b> can appear to fully manage a user's e-mail account. Thus, in one embodiment, the user as well as the client computer <b>130</b> need have no awareness of the added software components that implement the features of the present invention. However, it should be appreciated that the invention is not limited to operating in a transparent manner.</p>
<p id="p-0040" num="0039">For example, when a user selects an e-mail message, a series of function calls, related to the particular request, may be transmitted between the DOMINO-based e-mail server <b>110</b> and the NOTES-based client computer <b>130</b>. For example, a &#x201c;NSFDbOpen( )&#x201d; function call may be transmitted from the client computer <b>130</b> to initiate access to a user's e-mail message by opening the data set. In the present example, the data set is associated with the user's .nsf database. This function call is, however, trapped through action of the added DLL, described above, to alter the response seen at the client computer <b>130</b> from the response that would otherwise be provided by the DOMINO software platform running on the e-mail server <b>110</b>.</p>
<p id="p-0041" num="0040">As described in more detail below, flags associated with the NSFDbOpen( ) function call are examined to determine a source of the function call, because NSFDbOpen( ) function calls may be generated by sources other than a user request to access an e-mail, and embodiments of the invention may act differently depending on the source of the function call.</p>
<p id="p-0042" num="0041">When a client has initiated a request to read an e-mail message, a NSFNoteOpen( ) function call is generated by the client computer <b>130</b> to the DOMINO-based e-mail server <b>110</b>. The DOMINO-based e-mail server <b>110</b> may process the function call in its ordinary manner, and retrieve the shortcut identifier for the e-mail from its data set. However, the shortcut identifier will not be returned to the client computer <b>130</b>, but will instead be trapped by the DLL. The DLL examines metadata in the shortcut identifier to retrieve the full e-mail from its storage location, which can be in any suitable location, including locations outside of the e-mail server data set. The e-mail message, is then delivered to the client computer <b>130</b> for review by a user. In accordance with one embodiment discussed above, while the full e-mail is returned to the circuit computer <b>130</b>, the data set for the e-mail server <b>110</b> is not updated and continues to identify the e-mail via the shortcut identifier.</p>
<p id="p-0043" num="0042">If the e-mail message has an attachment, and the user selects the attachment for review, the client computer generates a NSFDbReadObject( ) function call to read the attachment. This function call, too, may be trapped by the DLL, which can then retrieve the full attachment and return it to the client computer <b>130</b> for review by the user in much the same manner as discussed above for the body of the e-mail. For example, the e-mail attachment may be stored by the EMAILEXTENDER software outside of the data set managed by the e-mail server. In addition, in one embodiment, while the full attachment is provided to the client computer, the e-mail server <b>110</b> data set is not updated with the full attachment.</p>
<p id="p-0044" num="0043">The aspects of the present invention described above can be implemented in any of numerous ways, as the present invention is not limited to any particular implementation technique. In one embodiment, the added software components, create a transient storage area, such as a transient area in a database managed by the e-mail server <b>110</b> to store the e-mail server data set discussed above. The transient area of the e-mail server database is used to provide an area where an e-mail (or attachment thereof) represented in the non-transient area of the database by a shortcut identifier can be placed temporarily on the e-mail server for transmission to the client computer, without needing to update the non-transient area of the database, in accordance with the embodiment of the invention wherein the e-mail server data set is not updated when an e-mail (or attachment thereof) is accessed by the client computer.</p>
<p id="p-0045" num="0044">When a function call related to a request for an e-mail is trapped, the software (e.g., the DLL) components can retrieve the full e-mail (or attachment) from the extension server <b>120</b>, and temporarily store the retrieved full e-mail in the transient (or attachment) database.</p>
<p id="p-0046" num="0045">In accordance with one embodiment of the present invention, when a user selects an e-mail, or attachment thereof, represented in the e-mail server <b>110</b> database, the added software components (e.g., the DLL) described above can find the full e-mail or attachment, and place it into the transient database as discussed above. The added software can then return an identifier for a new &#x201c;note&#x201d; in the DOMINO software platform, with the identifier content provided in the transient database. This can be performed by the EMAILEXTENDER software platform, with some modifications made thereto to allow for the interaction with the transient area in the database. The added software components (e.g., the DLL) can then open the note, and copy it into the e-mail or attachment represented by the shortcut identifier, which had already been opened by the DOMINO software platform. Thereafter, the added software components (e.g., the DLL) can trigger the DOMINO software platform to return the full message to the user. In accordance with one embodiment of the present invention, if the returned e-mail does not have an attachment, it can be deleted from the transient database in conjunction with the full message being returned to the client computer.</p>
<p id="p-0047" num="0046">In accordance with one embodiment of the present invention, e-mails having attachments are handled in a different manner, in that such e-mails are not deleted from the transient database upon being returned to the client computer. Specifically, the possibility exists that the user may want to open the attachment. Thus, the e-mail, along with the full attachment, is maintained in the transient database until it is determined that the user has completed accessing that e-mail. In accordance with one embodiment of the present invention, this determination is made when a NSFNoteClose( ) function call is received for the e-mail.</p>
<p id="p-0048" num="0047">In accordance with one embodiment of the present invention, the added software components (e.g., DLL) maintain a list of open e-mails stored in the transient database, along with any associated attachments. Thus, when a user opens an attachment, the list is examined, and, when a match is found, the full attachment is returned from the database to the client computer. In accordance with one embodiment, this can be done by trapping the appropriate NSFDbReadObject( ) function call from the client computer, and responding directly to it with the full attachment from the transient database, such that the DOMINO-based e-mail server <b>110</b> need not even see the function call.</p>
<p id="p-0049" num="0048">For e-mails that have attachments, the e-mails and the corresponding attachments are maintained in the transient database until the user finishes examining the e-mail, which can be determined by looking for a NSFNoteClose( ) function call relating to the appropriate e-mail or note, at which point the e-mail and its associated attachments can be edited from the transient database.</p>
<p id="p-0050" num="0049">With a embodiment of the present invention that works with the DOMINO software platform, it should be appreciated that the database managed by the DOMINO-based e-mail server <b>110</b> has a number of mail boxes or accounts set up for each user, such that each user has essentially a separate database. In accordance with one embodiment of the present invention, the added software components (e.g., the DLL) execute as a parasite software component on the DOMINO server and can enjoy supervisory access privileges, so that any portion of the database managed by the DOMINO-based e-mail server <b>110</b> can be used to implement the transient database. In accordance with one embodiment of the present invention, security techniques are employed to ensure that the transient database is accessible only to the DOMINO server and the EMAILEXTENDER software platform, and is inaccessible to individual users, to ensure that the e-mails and/or attachments for one user are not visible to another.</p>
<p id="p-0051" num="0050">It should be appreciated that in a DOMINO software platform (or other e-mail management platforms), e-mails may be accessed by various agents or infrastructure components of the e-mail management platform, as opposed to access by a user. As an example, the e-mail server platform may have a compaction agent running that is designed to compact the amount of storage space used by the e-mail server and/or may have a replication agent executing that seeks to replicate some of the content managed by the e-mail management platform.</p>
<p id="p-0052" num="0051">In accordance with one embodiment of the present invention, it is desirable to ensure that the above-described actions of returning a full e-mail or attachment thereof, in response to an access to the e-mail or attachment, is only performed when the access originates from a user, and not when the access originates from an agent or infrastructure component of the e-mail management platform. In accordance with one embodiment of the present invention for use with the DOMINO software platform, publicly available flags that are currently unused can be employed to designate the source of the access request, and to ensure that both of the described actions of replacing the shortcut identifier with a full e-mail or attachment are only performed when the source of the access request is a user.</p>
<p id="p-0053" num="0052">Any suitable flags can be used, or any other suitable technique for designating the source of the access request can be employed, as this aspect of the present invention is not limited to any particular implementation technique. In accordance with one embodiment of the present invention, the function call that is examined to determine the source of an access request is the NSFDbOpen( ) function call, which is used to access the database for a particular user account. Thus, flags can be used with this function call to indicate whether the function call originates from the user or an agent or infrastructure component of the e-mail management software platform.</p>
<p id="p-0054" num="0053">As should be appreciated from the described aspects of the present invention for use on a DOMINO e-mail platform, that features of the invention can be supported by hooking or interacting with various function calls employed by the DOMINO e-mail platform, examples of which include NSFDbOpen( ) which is executed to open a user account, and gain access to the appropriate database thereof; NSFNoteOpen( ) which is used to open a specific note (e.g., an e-mail); NSFDbReadObject( ) which is used to open an object of a note (e.g., an e-mail attachment); NSFNoteClose( ) which is used to close access to a note; and NSFDbClose( ) is used to close a user account.</p>
<p id="p-0055" num="0054">Although the illustrative embodiments described above and in the following description relate to e-mails, these examples are not intended to be limiting, as the aspects of the present invention described herein can be used with other types of systems to manage other types of documents.</p>
<p id="p-0056" num="0055">As should be appreciated from the foregoing, one embodiment of the invention is directed to a method and system for managing e-mails in a computer system that includes at least one e-mail server and at least one client computer. The e-mail server maintains a data set identifying e-mails that it manages, and implements a shortcut feature whereby at least a portion of at least one e-mail (e.g., an e-mail attachment or the entire e-mail) identified in the data set is identified in the data set by a shortcut identifier, and is stored remotely from the data set. Although shortcuts can be used on the e-mail server to conserve storage space, full copies of e-mails, including attachments, can be provided on a client computer. Accordingly, the client computer need not retrieve a full copy from the e-mail server, or other location, as the full e-mail is stored locally. For example, if the client computer is a portable computer, full e-mails (including attachments) can be available to a user of the client computer, even when the client computer is disconnected from the e-mail server.</p>
<p id="p-0057" num="0056">E-mails replicated to a client computer can be assigned to an account of a user that logs into the e-mail system via the client computer. For example, the user can be one of one or more users assigned to a particular client computer.</p>
<p id="p-0058" num="0057">Referring now to <figref idref="DRAWINGS">FIG. 2</figref>, a method <b>200</b>, which can be implemented on the system <b>100</b> (<figref idref="DRAWINGS">FIG. 1</figref>) or other suitable system, is illustrated that provides full copies of e-mails on a client computer. The method <b>200</b> includes receiving <b>210</b>, by the e-mail server, a full copy of at least one portion of the at least one e-mail. A shortcut identifier for the e-mail, or a portion thereof, can then be created (e.g., by the e-mail software platform running on the e-mail server) of the e-mail, and the e-mail server can attempt to send <b>220</b> the shortcut identifier to the client computer</p>
<p id="p-0059" num="0058">Rather than permitting the shortcut identifier to be delivered to the client computer, software modifications running on the e-mail server can trap <b>230</b> the identifier sent from the e-mail server. A full copy of the e-mail can be sent <b>240</b> to the client computer rather than sending the shortcut identifier.</p>
<p id="p-0060" num="0059">The act <b>240</b> of provide a full copy of the e-mail to the client computer can be implemented any suitable way. Act <b>240</b> can be automated so that, for example, full copies of e-mail can be stored on the client computer on a predetermined schedule, at the time the client computer is to be disconnected from the e-mail server, at the time a user first requests an e-mail, and/or at the time of first receipt of an e-mail by an e-mail server. Thus, as described below with reference to <figref idref="DRAWINGS">FIG. 3</figref>, a client computer can be disconnected from a network providing access to the server, and the locally available e-mail, including full copies of any shortcutted portions (e.g., attachment), can then remain accessible to a user of the client computer. In this manner, for example, full copies of e-mails associated with shortcut identifiers in a data set maintained by the e-mail server can placed on a client computer.</p>
<p id="p-0061" num="0060">Referring now to <figref idref="DRAWINGS">FIG. 3</figref>, a method <b>300</b>, which can be implemented on the system <b>100</b> or any other suitable system, is illustrated that provides access to full copies of e-mails when a client computer is not attached to an e-mail server via a network. Similar to the e-mail server <b>110</b> in the system <b>100</b>, the e-mail server maintains a data set identifying e-mails that it manages, and implements a shortcut feature whereby portions of e-mails are identified in the data set by shortcut identifiers. The method <b>300</b> includes accessing <b>310</b> a full copy of an e-mail from a client computer while the client computer is not in communication with an e-mail server.</p>
<p id="p-0062" num="0061">Full copies of e-mails can be accessed locally from the client computer by, for example, providing the full copies, including full copies of attachments, on the client computer in any suitable manner. Full copies can be delivered to the client computer via the control of software running on the e-mail server and/or the client computer. For example, as described above with reference to <figref idref="DRAWINGS">FIG. 1</figref>, features of the software components on the e-mail server <b>110</b> described above can be used to maintain full copies of e-mail on the client computer.</p>
<p id="p-0063" num="0062">For example, the method <b>300</b> can include trapping of an indicator of a shortcut identifier sent from an e-mail server before the shortcut identifier arrives at the client computer. Instead of delivering the indicator, a replicated copy is delivered to the client computer.</p>
<p id="p-0064" num="0063">The method <b>300</b> can also include storing the replicated copy on the client computer when the client computer is coupled to the at least one e-mail server for later access. Storing can be automated so that a user need initiate the storing process. Moreover, storing can be performed in response to an e-mail application program executing on the client computer. The replicated copy stored by the at least one client computer can correspond to e-mails assigned to an account of a user that logs into the at least one client computer.</p>
<p id="p-0065" num="0064">Referring now to <figref idref="DRAWINGS">FIG. 4</figref>, a method <b>400</b>, which can be implemented on the system <b>100</b> or any other suitable system, is illustrated that prevents replication in a data set of a full copy of an e-mail when the full copy is directed to a client computer. The method <b>400</b> provides management of e-mails in a computer system that includes at least one e-mail server and at least one client computer, wherein, the e-mail server maintains a data set including shortcut identifiers.</p>
<p id="p-0066" num="0065">The method <b>400</b> includes sending <b>410</b> an access request for an e-mail from a user of a client computer to an e-mail server, and maintaining <b>420</b> a shortcut identifier associated with the requested e-mail in the e-mail server data set in response to the access request. Accordingly, the data set is not updated with a full copy of the requested e-mail.</p>
<p id="p-0067" num="0066">Maintaining <b>420</b> can entail, in response to the request, providing the full copy of the e-mail to the user on the client computer, without the e-mail server updating its data set with the full copy of the e-mail.</p>
<p id="p-0068" num="0067">A full copy of the e-mail is retrieved <b>440</b> from an extension server, such as the extension server <b>120</b>, rather than from the e-mail server, and an act of delivering <b>450</b> the full copy to the client computer. For example, in response to a trapped function call, the full copy can be retrieved from an extension server, and delivered to a client computer, without action by the e-mail server. As described above with reference to <figref idref="DRAWINGS">FIG. 1</figref>, a client computer can generate a function call in response to a user selecting an attachment. The function call can be intercepted to prevent the e-mail server from replicating the attachment and/or the entire associated e-mail.</p>
<p id="p-0069" num="0068">As should be appreciated from the foregoing, there are numerous aspects of the approaches described above that can be used independently of one another. It should also be appreciated, however, that in some embodiments, all of the above-described features can be used together, or any combination or subset of the features described above can also be employed together in a particular implementation, as the aspects of the present approaches are not limited in this respect.</p>
<p id="p-0070" num="0069">The above-described embodiments can be implemented in any of numerous ways. For example, some embodiments may be implemented using hardware, software or a combination thereof. When implemented in software, the software code can be executed on any suitable processor or collection of processors, whether provided in a single computer or distributed among multiple computers, which may be servers. It should be appreciated that any component or collection of components that perform the functions described above can be generically considered as one or more controllers that control the above-discussed function. The one or more controllers can be implemented in numerous ways, such as with dedicated hardware, or with general purpose hardware (e.g., one or more processors) that is programmed using microcode or software to perform the functions recited above.</p>
<p id="p-0071" num="0070">It should be appreciated that the various methods outlined herein may be coded as software that is executable on one or more processors that employ any one of a variety of operating systems or platforms. Additionally, such software may be written using any of a number of suitable programming languages and/or conventional programming or scripting tools, and also may be compiled as executable machine language code. In this respect, it should be appreciated that some embodiments are directed to computer-readable media (e.g., a computer memory, one or more floppy disks, compact disks, optical disks, magnetic tapes, etc.) encoded with one or more programs that, when executed on one or more computers or other processors, perform methods that implement the various embodiments discussed above. A computer-readable medium or media can be transportable, such the program or programs stored thereon can be loaded onto one or more different computers or other processors to implement various aspects of the present approaches as discussed above.</p>
<p id="p-0072" num="0071">It should be understood that the term &#x201c;program&#x201d; is used herein in a generic sense to refer to any type of computer code or set of instructions that can be employed to program a computer or other processor to implement various aspects of the present approaches as discussed above. Additionally, it should be appreciated that according to one aspect of this embodiment, one or more computer programs, when executed, perform methods that need not reside on a single computer or processor, but may be distributed in a modular fashion amongst a number of different computers or processors to implement various aspects of the present approaches. For example, programs that support features of the invention may be implemented, at least in part, on, the e-mail server <b>110</b> and/or the extension server <b>120</b>.</p>
<p id="p-0073" num="0072">Various aspects of the present approaches may be used alone, in combination, or in a variety of arrangements not specifically discussed in the embodiments described in the foregoing and is therefore not limited in its application to the details and arrangement of components set forth in the foregoing description or illustrated in the drawings. The approaches are capable of other embodiments and of being practiced or of being carried out in various ways. In particular, various aspects of the present approaches may be implemented in connection with any type of network, cluster or configuration. No limitations are placed on the network implementation. Accordingly, the foregoing description and drawings are by way of example only.</p>
<p id="p-0074" num="0073">Also, the phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of &#x201c;including,&#x201d; &#x201c;comprising,&#x201d; or &#x201c;having,&#x201d; &#x201c;containing,&#x201d; &#x201c;involving,&#x201d; and variations thereof herein, is meant to encompass the items listed thereafter and equivalent thereof as well as additional items.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method of managing e-mails in a computer system comprising at least one e-mail server, at least one other server and at least one client computer, wherein the e-mail server maintains a data set identifying a plurality of e-mails managed by the e-mail server, wherein at least some of the plurality of e-mails are individually identified in the data set by an associated shortcut identifier, and wherein the attachments are stored by the other server, the method comprising:
<claim-text>transmitting, by the client computer, requests to access at least some of the plurality of e-mails to the at least one e-mail server, wherein the requested e-mails are intercepted if the e-mails individually include having an attachment identified in the data set by the associated shortcut identifier;</claim-text>
<claim-text>receiving individually, at the client computer in response to the requests, full copies of the at least some of the plurality of e-mails having attachments thereof identified in the data set by the associated shortcut identifiers, the full copies of the at least some of the plurality of e-mails comprising all of the content of the e-mails, including the attachments stored in the other server such that the attachments replace the shortcut identifiers at the client computer in the full copies of the at least some of the plurality of e-mails; and</claim-text>
<claim-text>storing, by the client computer, the full copies of the at least some of the plurality of e-mails, including the attachments that were received at the client computer in response to the request.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the full copies of the at least some of the plurality of e-mails stored by the at least one client computer is are associated with an account of a user that logs into the at least one client computer.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the transmitting, by the client computer, a the requests is not in response to a user of the client computer accessing the at least one e-mail.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the full copies are received via the at least one e-mail server or the at least one other server.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the at least partial copies of at least some of the plurality of e-mails received at the client computer do not comprise the shortcut identifiers.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A method of accessing at least one e-mail in a computer system comprising at least one e-mail server and at least one client computer, wherein the e-mail server maintains a data set identifying a plurality of e-mails managed by the e-mail server, wherein at least some of the plurality of e-mails are individually identified in the data set by an associated shortcut identifier, wherein full copies of the identified e-mails are stored remotely from the data set by at least one other server, wherein the e-mail server and the other server are separate servers, wherein the e-mail server is in communication with the other server over a network, the method comprising:
<claim-text>transmitting, by the client computer, requests to access at least some of the plurality of e-mails to the at least one e-mail server, wherein the requested e-mails are intercepted if the e-mails individually include having an attachment identified in the data set by the associated shortcut identifier;</claim-text>
<claim-text>receiving individually, at the client computer, the full copies of the requested e-mails via the other server, the full copies of the requested e-mails comprising all of the content of the e-mails, including the attachments identified in the data set by the shortcut identifiers such that the attachments replace the shortcut identifiers at the client computer in the full copies of the e-mails; and</claim-text>
<claim-text>accessing the full copies of the requested e-mails, including the attachments that were received at the client computer in response to the requests, from the client computer while the client computer is not in communication with either the e-mail server or the other server.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the full copies of the requested e-mails stored by the at least one client computer corresponds to e-mails assigned to an account of a user that logs into the at least one client computer.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising storing the full copies of the requested e-mails on the at least one client computer when the at least one client computer is coupled to the at least one e-mail server and/or the at least one other server.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein storing the full copies of the requested e-mails is performed not in response to a user of the at least one client computer accessing the at least some of the plurality of e-mails, and wherein the full copies replace shortcut identifiers associated with the full copies.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein transmitting, by the client computer, requests to access the at least some of the plurality of e-mails are performed in response to an application program executing on the at least one client computer.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the transmitting, by the client computer, a requests to access at least some of the plurality of e-mails is performed prior to the receiving, at the client computer, the full copies of the at least some of the plurality of e-mails, and wherein the at least one other server comprises at least one extension server supporting the at least one e-mail server.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A method of managing e-mails in a computer system comprising at least one e-mail server, at least one other server and at least one client computer, wherein the e-mail server and the other server are separate servers, wherein the e-mail server is in communication with the other server over a network, wherein the e-mail server maintains a data set identifying a plurality of e-mails managed by the e-mail server, wherein at least some of the plurality of e-mails are individually identified in the data set by an associated shortcut identifier, and wherein the attachments are stored by the other server, the method comprising:
<claim-text>receiving, at the e-mail server, requests to access at least some of the plurality of e-mails having attachments individually identified in the data set by the associated shortcut identifier;</claim-text>
<claim-text>sending in response to the requests, via the e-mail server, the attachments to the client computer; and</claim-text>
<claim-text>maintaining, by the at least one e-mail server, the shortcut identifiers for the e-mails in the data set so that the data set is not updated to include the attachments.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref> comprising:
<claim-text>after the receiving, at the e-mail server, a requests to access at least some of the plurality of e-mails having attachments identified in the data set by the shortcut identifiers, determining that the e-mail server is attempting to send the shortcut identifiers to the client computer; and</claim-text>
<claim-text>upon the determination, preventing the shortcut identifiers from being sent with the at least some of the plurality of e-mails to the client computer.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein the sending in response to the requests, via the e-mail server, the attachments to the client computer comprises:
<claim-text>sending, with the attachment to the client computer, the at least some of the plurality of e-mails to the client computer, wherein the at least some of the plurality of e-mails sent to the client computer does not comprise the shortcut identifiers.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein the receiving, at the e-mail server, the requests to access at least some of the plurality of e-mails having attachments identified in the data set by the shortcut identifiers comprises:
<claim-text>determining whether the requests originated from a user of the at least one client computer or an agent software component of the e-mail server,</claim-text>
<claim-text>wherein the sending, in response to the requests, the attachments to the client computer is based on a determination that the requests originated from the user of the at least one client computer, and</claim-text>
<claim-text>wherein if a determination is that the requests originated from the agent software component of the e-mail server, not sending the attachments.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A method of managing e-mails in a computer system comprising at least one e-mail server, at least one other server and at least one client computer, wherein the e-mail server maintains a data set identifying a plurality of e-mails managed by the e-mail server, wherein at least some of the plurality of e-mails are individually identified in the data set by an associated shortcut identifier, and wherein the attachments are stored by the other server, the method comprising:
<claim-text>receiving, by the client computer, at least partial copies of at least some of the plurality of e-mails identified in the data set, the at least some of the plurality of e-mails comprising the at least one e-mail, wherein the at least partial copies of the least some of the plurality of e-mails received by the client computer comprises the attachments that are identified in the data set by the shortcut identifiers, wherein the attachments are received automatically and not in response to a user of the client computer accessing the e-mails; and</claim-text>
<claim-text>storing the partial copies by the client computer.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising:
<claim-text>receiving at the client computer the at least partial copies, wherein the at least partial copies are received on a predetermined schedule.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising:
<claim-text>receiving the at least partial copies by the client computer transmitted by the at least one e-mail server.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further comprising:
<claim-text>receiving the at least partial copies by the client computer transmitted by the at least one other server.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the receiving, by the client computer, at least partial copies is performed in response to execution of an application program on the at least one client computer.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the at least one other server comprises at least one extension server that supports the at least one e-mail server.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the at least one extension server provides the at least one e-mail to the client computer in accordance with a predetermined policy.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. At least one non-transitory computer readable storage medium encoded with a plurality of instructions that, when executed, perform a method of managing e-mails in a computer system comprising at least one e-mail server, at least one other server and at least one client computer, wherein at least some of the plurality of e-mails are individually identified in the data set by an associated shortcut identifier, and wherein the attachments are stored by the other server, the method comprising:
<claim-text>transmitting, by the client computer, requests to access at least some of the plurality of e-mails to the at least one e-mail server, wherein the requested e-mails are intercepted if the e-mails individually include having an attachment identified in the data set by the associated shortcut identifier;</claim-text>
<claim-text>receiving individually, at the client computer in response to the requests, full copies of the at least some of the plurality of e-mails having attachments thereof identified in the data set by the associated shortcut identifiers, the full copies of the at least some of the plurality of e-mails comprising all of the content of the e-mails, including the attachments stored in the other server such that the attachments replace the shortcut identifiers at the client computer in the full copies of the at least some of the plurality of e-mails; and
<claim-text>storing, by the client computer, the full copies of the at least some of the plurality of e-mails, including the attachments that were received at the client computer in response to the request.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. At least one non-transitory computer readable storage medium encoded with a plurality of instructions that, when executed, perform a method of accessing at least one e-mail in a computer system comprising at least one e-mail server and at least one client computer, wherein the e-mail server maintains a data set identifying a plurality of e-mails managed by the e-mail server, wherein at least some of the plurality of e-mails are individually identified in the data set by an associated shortcut identifier, wherein a full copies of the identified e-mails are is stored remotely from the data set by at least one other server, wherein the e-mail server and the other server are separate servers, wherein the e-mail server is in communication with the other server over a network, the method comprising:
<claim-text>transmitting, by the client computer, requests to access at least some of the plurality of e-mails to the at least one e-mail server, wherein the requested e-mails are intercepted if the e-mails individually include having an attachment thereof identified in the data set by the associated shortcut identifier;</claim-text>
<claim-text>receiving individually, at the client computer, the full copies of the requested e-mails via the other server, the full copies of the requested e-mails comprising all of the content of the e-mails, including the attachments identified in the data set by the shortcut identifiers such that the attachments replace the shortcut identifiers at the client computer in the full copies of the e-mails; and</claim-text>
<claim-text>accessing the full copies of the requested e-mails, including the attachments that were received at the client computer in response to the requests, from the client computer while the client computer is not in communication with either the e-mail server or the other server.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. At least one non-transitory computer readable storage medium encoded with a plurality of instructions that, when executed, perform a method of managing e-mails in a computer system comprising at least one e-mail server, at least one other server and at least one client computer, wherein the e-mail server and the other server are separate servers, wherein the e-mail server is in communication with the other server over a network, wherein the e-mail server maintains a data set identifying a plurality of e-mails managed by the e-mail server, wherein at least some of the plurality of e-mails are individually identified in the data set by an associated shortcut identifier, and wherein the attachments are stored by the other server, the method comprising:
<claim-text>receiving, at the e-mail server, requests to access at least some of the plurality of e-mails having attachments individually identified in the data set by the associated shortcut identifier;</claim-text>
<claim-text>sending in response to the requests, via the e-mail server, the attachments to the client computer; and</claim-text>
<claim-text>maintaining, by the at least one e-mail server, the shortcut identifiers for the e-mails in the data set so that the data set is not updated to include the attachments.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. At least one non-transitory computer readable storage medium encoded with a plurality of instructions that, when executed, perform a method of managing e-mails in a computer system comprising at least one e-mail server, at least one other server and at least one client computer, wherein the e-mail server maintains a data set identifying a plurality of e-mails managed by the e-mail server, wherein at least some of the plurality of e-mails are individually identified in the data set by an associated shortcut identifier, and wherein the attachments are stored by the other server, the method comprising:
<claim-text>receiving, by the client computer, at least partial copies of at least some of the plurality of e-mails identified in the data set, wherein the at least partial copies of the least some of the plurality of e-mails received by the client computer comprise the attachments that are identified in the data set by the shortcut identifiers, wherein the attachments are received automatically and not in response to a user of the client computer accessing the e-mails; and</claim-text>
<claim-text>storing the partial copies by the client computer. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
