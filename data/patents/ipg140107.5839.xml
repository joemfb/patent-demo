<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626947-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626947</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13216727</doc-number>
<date>20110824</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>173</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>16</subgroup>
<symbol-position>L</symbol-position>
<classification-value>N</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>709238</main-classification>
<further-classification>709206</further-classification>
</classification-national>
<invention-title id="d2e51">Method and system for remote activation and management of personal security devices</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6202155</doc-number>
<kind>B1</kind>
<name>Tushie et al.</name>
<date>20010300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 20</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6738900</doc-number>
<kind>B1</kind>
<name>Hardjono et al.</name>
<date>20040500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713156</main-classification></classification-national>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>709206</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709238</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>19</number-of-drawing-sheets>
<number-of-figures>19</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>10476329</doc-number>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>8028083</doc-number>
</document-id>
</parent-grant-document>
<parent-pct-document>
<document-id>
<country>WO</country>
<doc-number>PCT/EP02/03930</doc-number>
<date>20020409</date>
</document-id>
</parent-pct-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13216727</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<continuation-in-part>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>09844246</doc-number>
<date>20010430</date>
</document-id>
<parent-status>ABANDONED</parent-status>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>10476329</doc-number>
</document-id>
</child-doc>
</relation>
</continuation-in-part>
<continuation-in-part>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>09844439</doc-number>
<date>20010430</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>7363486</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>09844246</doc-number>
</document-id>
</child-doc>
</relation>
</continuation-in-part>
<continuation-in-part>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>09844272</doc-number>
<date>20010430</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>7225465</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>09844439</doc-number>
</document-id>
</child-doc>
</relation>
</continuation-in-part>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120173637</doc-number>
<kind>A1</kind>
<date>20120705</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Audebert</last-name>
<first-name>Yves Louis Gabriel</first-name>
<address>
<city>Los Gatos</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Clemot</last-name>
<first-name>Olivier</first-name>
<address>
<city>Rueil-Malmaison</city>
<country>FR</country>
</address>
</addressbook>
<residence>
<country>FR</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Audebert</last-name>
<first-name>Yves Louis Gabriel</first-name>
<address>
<city>Los Gatos</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Clemot</last-name>
<first-name>Olivier</first-name>
<address>
<city>Rueil-Malmaison</city>
<country>FR</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Muirhead and Saturnelli, LLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>ActivIdentity, Inc.</orgname>
<role>02</role>
<address>
<city>Fremont</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Kim</last-name>
<first-name>Hee Soo</first-name>
<department>2457</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Managing a Personal Security Device (PSD) includes retrieving proprietary information from a remote storage location using a first Remote Computer System, providing at least one Client as a host to the PSD and establishing a communications pipe over a first network between the PSD and the Remote Computer System. The communications pipe communicates with the PSD through the Client. Managing a PSD also includes transmitting the proprietary information from the Remote Computer System to the PSD by sending a PSD-formatted message through the communications pipe, where the proprietary information provided in the PSD-formatted message and passing through the Client is at least partially inaccessible by the Client, processing the PSD-formatted messages at the PSD to extract the proprietary information and storing the proprietary information in the PSD.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="185.59mm" wi="226.57mm" file="US08626947-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="232.16mm" wi="178.31mm" orientation="landscape" file="US08626947-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="248.24mm" wi="206.42mm" orientation="landscape" file="US08626947-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="233.51mm" wi="186.18mm" orientation="landscape" file="US08626947-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="234.87mm" wi="170.86mm" orientation="landscape" file="US08626947-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="232.16mm" wi="176.70mm" orientation="landscape" file="US08626947-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="241.22mm" wi="193.89mm" orientation="landscape" file="US08626947-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="236.90mm" wi="196.68mm" orientation="landscape" file="US08626947-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="236.30mm" wi="156.13mm" orientation="landscape" file="US08626947-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="205.99mm" wi="183.98mm" orientation="landscape" file="US08626947-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="218.19mm" wi="187.28mm" orientation="landscape" file="US08626947-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="214.97mm" wi="187.37mm" orientation="landscape" file="US08626947-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="217.09mm" wi="198.20mm" orientation="landscape" file="US08626947-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="210.06mm" wi="196.85mm" orientation="landscape" file="US08626947-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="211.92mm" wi="193.04mm" orientation="landscape" file="US08626947-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="215.05mm" wi="194.14mm" orientation="landscape" file="US08626947-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="165.44mm" wi="164.76mm" orientation="landscape" file="US08626947-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="195.58mm" wi="171.70mm" orientation="landscape" file="US08626947-20140107-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="235.63mm" wi="191.01mm" orientation="landscape" file="US08626947-20140107-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="244.18mm" wi="194.39mm" orientation="landscape" file="US08626947-20140107-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is a continuation of U.S. application Ser. No. 10/476,329, filed Oct. 29, 2003, now U.S. Pat. No. 8,028,083, which is the National Stage of International Application No. PCT/EP2002/03930, filed Apr, 9, 2002, which is a continuation-in-part of Ser. No. 09/844,246 filed Apr. 30, 2001 (abandoned), and is a continuation-in-part of Ser. No. 09/844,439 filed Apr. 30, 2001, now U.S. Pat. No. 7,363,486, and is a continuation-in-part of Ser. No. 09/844,272 filed Apr. 30, 2001, now U.S. Pat. No. 7,225,465, which are hereby incorporated by reference.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">1. FIELD OF INVENTION</heading>
<p id="p-0003" num="0002">The present invention relates to a data processing method and system for remote activation and management of Personal Security Devices (PSD) over a network for purposes of obtaining services or data from one or more Remote Computer Systems. More particularly, the invention relates to a secure single-step method of activating and managing a Personal Security Device.</p>
<heading id="h-0003" level="1">2. BACKGROUND OF INVENTION</heading>
<p id="p-0004" num="0003">The current art involving the management of Personal Security Devices (PSD), for example, smart cards, requires a multi-step process where all the information necessary to use a PSD is loaded into this PSD prior to distribution, including an initial Personal Identification Number or PIN. The PSD is then sent to the end user followed by a separate letter containing the initial PIN which the user must enter the first time the PSD is used. Another current alternative affixes an adhesive label containing a telephone number on a PSD prior to issuance. This label provides instructions for the end user to telephone a call center to activate the PSD before the device can be used.</p>
<p id="p-0005" num="0004">The latter and former methods constitute multi-step processes, which adds considerably to the initial distribution and subsequent management costs of the PSDs. For example, in issuing smart cards, additional equipment, maintenance, labor and operating costs are required to generate either the separate mailings containing an initial PIN, or to generate adhesive labels to be placed on the smart cards and to operate the call centers which activate the cards.</p>
<p id="p-0006" num="0005">Another major drawback of the current art concerns the lack of ability to manage information contained within the PSD after the device is issued. Currently, PSDs, which require changes, are either sent back to a central location or simply discarded and replaced with a new device. Both processes are time consuming and costly.</p>
<heading id="h-0004" level="1">3. SUMMARY OF INVENTION</heading>
<p id="p-0007" num="0006">It is an object of the present invention to provides a post-issuance method for securely downloading and managing information inside the protected domain of a PSD.</p>
<p id="p-0008" num="0007">This object is achieved with a method for activating and/or managing at least one PSD with at least a first Remote Computer System over a first network using at least one Client as a host to said at least one PSD, said method comprising the steps of:
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0008">a) establishing at least one communications pipe over said first network between said at least one PSD and said at least first Remote Computer System,</li>
        <li id="ul0002-0002" num="0009">b) retrieving proprietary information by said at least first Remote Computer System from a remote storage location,</li>
        <li id="ul0002-0003" num="0010">c) transmitting said proprietary information from said at least first Remote Computer System to said at least one PSD through said at least one communications pipe, and</li>
        <li id="ul0002-0004" num="0011">d) storing and/or processing said proprietary information in said at least one PSD.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0009" num="0012">This improvement over the current art utilizes a communications pipe which allows downloading of information into a blank PSD and subsequently managing that information. For purposes of this invention, a blank PSD lacks proprietary algorithms and/or data but does contain an embedded runtime environment and optionally a unique identifier code.</p>
<p id="p-0010" num="0013">In a first embodiment of the method of the invention, said remote storage location is in said at least first Remote Computer System.</p>
<p id="p-0011" num="0014">In a second embodiment of the method of the invention, said remote storage location is in an at least one subsequent Remote Computer System functionally connected to said at least first Remote Computer System over a second network, and said step b) comprises the step of transmitting said proprietary information from said at least one subsequent Remote Computer System to said at least first Remote Computer System through said second network.</p>
<p id="p-0012" num="0015">These embodiments allow either the Remote Computer System maintaining the communications pipe (first embodiment) or a subsequent Remote Computer System (second embodiment) to download proprietary information such as authentication algorithms, cryptographic keys, credentials or certificates directly into a PSD connected to a local Client through the communications pipe without disclosing proprietary information to the local Client.</p>
<p id="p-0013" num="0016">A major advantage of the method of the invention is that it allows blank PSDs to be issued in bulk and activated at a future date without risk of compromise. Since no proprietary data is Included in a bulk distribution, the PSDs are not usable to gain access to secure functions or data.</p>
<p id="p-0014" num="0017">An example process by which a blank PSD becomes activated is as follows; an end user, who has previously received a blank PSD, connects the PSD to a local Client and accesses a predetermined site over a network located on a Remote Computer System. The Remote Computer System may optionally perform end user authentication by some predetermined method such as prompting for a social security number, static PIN, mother's maiden name, etc. Alternatively, authentication may be implied using a unique identifier contained within the PSD.</p>
<p id="p-0015" num="0018">Once the end user is properly authenticated or valid PSD connected, a Remote Computer System forms a communications pipe and downloads (first embodiment), or causes a subsequent Remote Computer System to download (second embodiment), the necessary information through the communications pipe and into the PSD. The PSD may become activated upon completion of the process or as an additional security measure, the end user is prompted to devise and enter a unique PIN code to further protect access to the PSD.</p>
<p id="p-0016" num="0019">In both said embodiments of the invention, a means to manage (e.g. upgrade, change, delete) PSD algorithms and data is facilitated by remotely gaining access to the PSDs and then downloading the changes directly into the PSDs, again without leaving proprietary information on the Clients. Any changes necessary to proprietary information may be performed entirely within the secure domain of the PSD.</p>
<p id="p-0017" num="0020">In both said embodiments of the invention, all transactions occur within the secure domain of a PSD and a secure remote computer system, thus providing end-to-end security.</p>
<p id="p-0018" num="0021">In said second embodiment of the invention, a centralized depository for tracking of PSD changes is provided, which greatly simplifies the management of large numbers of PSDs.</p>
<p id="p-0019" num="0022">It is another object of the invention to provide a system for implementing the above-mentioned method.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">4. BRIEF DESCRIPTION OF DRAWINGS</heading>
<p id="p-0020" num="0023"><figref idref="DRAWINGS">FIG. 1</figref> is a generalized system block diagram for implementing a plain communications pipe,</p>
<p id="p-0021" num="0024"><figref idref="DRAWINGS">FIG. 2</figref> is a detailed block diagram depicting initiating a plain communications pipe,</p>
<p id="p-0022" num="0025"><figref idref="DRAWINGS">FIG. 3</figref> is a detailed block diagram depicting establishing a plain communications pipe,</p>
<p id="p-0023" num="0026"><figref idref="DRAWINGS">FIG. 4A</figref> is a generalized system block diagram for implementing a secure communications pipe which includes software-based security mechanisms,</p>
<p id="p-0024" num="0027"><figref idref="DRAWINGS">FIG. 4B</figref> is a generalized system block diagram for implementing a secure communications pipe which includes HSM-based security mechanisms,</p>
<p id="p-0025" num="0028"><figref idref="DRAWINGS">FIG. 5</figref> is a detailed block diagram depicting initiating a secure communications pipe,</p>
<p id="p-0026" num="0029"><figref idref="DRAWINGS">FIG. 6</figref> is a detailed block diagram depicting establishing a secure communications pipe,</p>
<p id="p-0027" num="0030"><figref idref="DRAWINGS">FIG. 7</figref> is a general system block diagram for implementing the authentication of a PSD vis-&#xe0;-vis at least one Remote Computer System,</p>
<p id="p-0028" num="0031"><figref idref="DRAWINGS">FIG. 8</figref> is a detailed block diagram illustrating initial authentication challenge,</p>
<p id="p-0029" num="0032"><figref idref="DRAWINGS">FIG. 9</figref> is a detailed block diagram illustrating initial authentication response,</p>
<p id="p-0030" num="0033"><figref idref="DRAWINGS">FIG. 10</figref> is a detailed block diagram illustrating remote authentication challenge,</p>
<p id="p-0031" num="0034"><figref idref="DRAWINGS">FIG. 11</figref> is a detailed block diagram illustrating remote authentication response,</p>
<p id="p-0032" num="0035"><figref idref="DRAWINGS">FIG. 12</figref> is a detailed block diagram illustrating authentication credential transfer,</p>
<p id="p-0033" num="0036"><figref idref="DRAWINGS">FIG. 13</figref> is a detailed block diagram illustrating remote authentication challenge using said transferred credential,</p>
<p id="p-0034" num="0037"><figref idref="DRAWINGS">FIG. 14</figref> is a detailed block diagram illustrating remote authentication response using said transferred credential,</p>
<p id="p-0035" num="0038"><figref idref="DRAWINGS">FIG. 15A</figref> is a general system block diagram for implementing present invention using a first Remote Computer System (first embodiment of the invention),</p>
<p id="p-0036" num="0039"><figref idref="DRAWINGS">FIG. 15B</figref> is a general system block diagram for implementing present invention using a subsequent Remote Computer System (second embodiment of the invention),</p>
<p id="p-0037" num="0040"><figref idref="DRAWINGS">FIG. 16</figref> is a detailed block diagram illustrating the direct transfer of proprietary information to a PSD (first embodiment of the Invention),</p>
<p id="p-0038" num="0041"><figref idref="DRAWINGS">FIG. 17</figref> is a detailed block diagram illustrating the remote transfer of proprietary information to a PSD (second embodiment of the invention).</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">5. DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0039" num="0042">In a first part (section 5.1.), the present Detailed Description of the Invention will disclose how to establish a plain communications pipe and a secure communications pipe between a PSD and a Remote Computer System.</p>
<p id="p-0040" num="0043">In a second part (section 5.2.), the present Detailed Description of the Invention will disclose how to enhance security of an authentication process of a PSD vis-&#xe0;-vis a Remote Computer System using said secure communications pipe, and how to use said Remote Computer System as a secure hub for authentication of said PSD vis-&#xe0;-vis a plurality of subsequent Remote Computer Systems.</p>
<p id="p-0041" num="0044">In a third part (section 5.3.), the present Detailed Description of the Invention will disclose a post-issuance method and system for securely downloading and managing information inside the protected domain of a PSD.</p>
<p id="p-0042" num="0045">Said second part of the Detailed Description will be based on the use of a secure communications pipe, but the present invention is not limited to such a use.</p>
<p id="p-0043" num="0046">The use of a plain communications pipe, i.e. of a communications pipe which does not involve end-to-end cryptographic mechanisms, falls within the scope of the present invention.</p>
<p id="p-0044" num="0047">Note also that the following description of the invention will be based on a PSD which receives and sends APDU-(Application Protocol Data Unit)-formatted messages.</p>
<p id="p-0045" num="0048">APDU messaging format, which is per se known in the art, is a lower-level messaging format which allows a PSD to communicate with higher-level applications located in devices to which the PSD is to be connected.</p>
<p id="p-0046" num="0049">It must be clear that the present invention is not limited to the use of an APDU messaging format, and that any other low-level messaging format that can be processed by the PSD enters within the scope of the present invention.</p>
<heading id="h-0007" level="1">5.1. Establishment of a Communications Pipe</heading>
<heading id="h-0008" level="1">5.1.1. Plain Communications Pipe</heading>
<p id="p-0047" num="0050">Referring to <figref idref="DRAWINGS">FIG. 1</figref>, a generalized system block diagram of the architectures of a Client <b>10</b> and of a Remote Computer System is depicted. The various layers shown are based on the Open System Interconnection model (OSI). For simplicity, certain layers common to both the Client and Remote Computer System are not shown and should be assumed to be present and incorporated into adjacent layers. The layers common to both a Client and Remote Computer System include:
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0000">
    <ul id="ul0004" list-style="none">
        <li id="ul0004-0001" num="0051">an Applications Layer <b>90</b> which generally contains higher level software applications (e.g. word processor) and a user interface and such as a Graphical User Interface (GUI),</li>
        <li id="ul0004-0002" num="0052">an Applications Programming Interface level (API) Layer <b>100</b> for processing and manipulating data for use by either higher or lower level applications,</li>
        <li id="ul0004-0003" num="0053">a Communications Layer <b>105</b> which contains communications programs including secure communications capabilities, which enable a Client to communicate with a Remote Computer System to exchange information in an agreed upon protocol and visa versa,</li>
        <li id="ul0004-0004" num="0054">an Operating System Layer <b>110</b> or equivalent runtime environment, which controls the allocation and usage of hardware resources such as memory, Central Processing Unit (CPU) time, disk space, hardware I/O port assignments, peripheral device management,</li>
        <li id="ul0004-0005" num="0055">a Hardware Drivers Layer <b>120</b> which permits the operating system to communicate and control physical devices connected to the Client's or Remote Computer System's hardware I/O bus,</li>
        <li id="ul0004-0006" num="0056">and a Physical Device Layer <b>130</b> where Network Interface Cards (NIC) <b>140</b> provide the physical connections to a telecommunications network <b>45</b>. Other Hardware Devices <b>60</b> may also be connected at this Layer.</li>
    </ul>
    </li>
</ul>
</p>
<heading id="h-0009" level="1">5.1.1.1. Client Specific Features</heading>
<p id="p-0048" num="0057">A specialized program contained within the API Layer <b>100</b> of the Client and referred to as a Pipe Client <b>15</b>, interacts with Communications Programs contained within the Communications Layer <b>105</b>. The Pipe Client <b>15</b> functions to separate encapsulated APDU requests from Incoming messaging packets received from a network <b>45</b> for processing by a locally connected PSD <b>40</b>. Alternately, outbound APDU responses generated by a locally connected PSD <b>40</b>, are processed by the Pipe Client for encapsulation into an agreed upon communications protocol by Communications Programs contained within the Communications Layer <b>105</b>.</p>
<p id="p-0049" num="0058">A software driver contained within the Communications Layer <b>105</b> of the Client and referred to as a PSD Software Interface <b>20</b> directs incoming APDUs communicated by the Pipe Client <b>15</b> into the I/O device port connecting the PSD Hardware Device Interface <b>25</b> to the locally connected PSD <b>40</b>. Outgoing APDUs generated by the PSD are communicated through the PSD Hardware Device Interface <b>25</b> through the I/O device port to the PSD Software Interface <b>20</b> and subsequently communicated to the Pipe Client <b>15</b>.</p>
<heading id="h-0010" level="1">5.1.1.2. Remote Computer System Specific Features</heading>
<p id="p-0050" num="0059">A first specialized program contained within the API Layer <b>100</b> of the Remote Computer System <b>50</b> and referred to as an APDU Interface <b>55</b>, translates higher level messaging formats into low-level APDU messaging format required to communicate with a PSD <b>40</b>. Alternately, the APDU Interface <b>55</b> translates incoming APDU responses received from a PSD <b>40</b> into higher level messaging formats used by programs in the API Layer <b>100</b> and Applications Layer <b>90</b> of the Remote Computer System.</p>
<p id="p-0051" num="0060">A second specialized program contained within the API Layer <b>100</b> of the Remote Computer System <b>50</b> and referred to as a Pipe Server <b>70</b> interacts with Communications Programs contained within the Communications Layer <b>105</b>. The Pipe Server <b>70</b> functions to separate encapsulated APDU requests from incoming messaging packets received from a network <b>45</b> for processing by the APDU Interface <b>55</b>. Alternately, outbound APDU requests translated by the APDU Interface <b>55</b> are processed by the Pipe Server for encapsulation into an agreed upon communications protocol by Communications Programs contained within the Communications Layer <b>105</b>.</p>
<heading id="h-0011" level="1">5.1.1.3. Other Features</heading>
<p id="p-0052" num="0061">The connection <b>30</b> between the PSD <b>40</b> and PSD Hardware Interface <b>25</b> includes but is not limited to traditional electrical or optical fiber connections or wireless means including optical, radio, acoustical, magnetic, or electromechanical. Likewise the connection <b>75</b> between the Client <b>10</b> and the network <b>45</b>, and the connection <b>75</b> between the Remote Computer System <b>50</b> and the network <b>45</b> may be accomplished analogously.</p>
<p id="p-0053" num="0062">The network, shown generally at <b>45</b>, includes both public and private telecommunications networks connected by traditional electrical, optical, electro-acoustical (DTMF) or by other wireless means. Any mutually agreed upon communications protocol capable of encapsulating APDU commands may be employed to establish a plain communications pipe including open or secure communications protocols.</p>
<p id="p-0054" num="0063">Referring now to <figref idref="DRAWINGS">FIG. 2</figref>, depicts initiating a plain communications pipe between the Remote Computer System <b>50</b> and the PSD <b>40</b> connected to a Client <b>10</b>. In this depiction, the Remote Computer System <b>50</b> is sending a request to PSD <b>40</b> for non-proprietary embedded information <b>35</b>, for example an identification number. PSD <b>40</b> is connected <b>30</b> to the local Client <b>10</b> using PSD Interface <b>25</b>. PSD Interface <b>25</b> communicates with the Client <b>10</b> via hardware device port <b>5</b>.</p>
<p id="p-0055" num="0064">To initiate a plain communications pipe between Remote Computer System <b>50</b> and PSD <b>40</b>, the Remote Computer System <b>50</b> generates a request <b>200</b> by way of API programs <b>100</b> which is translated into APDU format <b>220</b> by the APDU Interface <b>55</b> and sent to the Pipe Server <b>70</b> for message encapsulation. The encapsulated APDUs are then sent <b>210</b> to the Communications Programs <b>105</b>S for incorporation into outgoing message packets <b>230</b>.</p>
<p id="p-0056" num="0065">The message packets <b>230</b> containing the encapsulated APDUs are transmitted <b>75</b> over the network <b>45</b> via a Network Interface Card (I/O) <b>130</b>S. The Client <b>10</b> receives the message packets <b>240</b> containing the encapsulated APDUs which are received from the network <b>45</b> via a Network Interface Card (I/O) <b>130</b>C installed on the local Client. The incoming messages are processed by Client-side Communications Programs <b>105</b>C and routed <b>250</b> into the Pipe Client <b>15</b> for APDU extraction. The extracted APDUs are sent <b>260</b> through hardware device port <b>5</b>, routed <b>270</b> into the PSD Interface <b>25</b> and sent to PSD <b>40</b> via connection <b>30</b> for processing within PSD domain <b>35</b>.</p>
<p id="p-0057" num="0066">Alternative requests to form a plain communications pipe <b>75</b> between a Remote Computer System <b>50</b> and a PSD <b>40</b> may be initiated by Client <b>10</b> requesting access to information contained on one or more networked local Clients, by connecting a PSD <b>40</b> to PSD Interface <b>25</b> which initiates a request to form a plain communications pipe <b>75</b>, or by another Remote Computer System requesting access to PSD <b>40</b>.</p>
<p id="p-0058" num="0067">Referring now to <figref idref="DRAWINGS">FIG. 3</figref>, depicts a PSD response which establishes the plain communications pipe between PSD <b>40</b> and Remote Computer System <b>50</b>. In this depiction, the request previously received is processed within the PSD domain <b>35</b>, which generates a response message. The PSD response is sent in APDU format from PSD <b>40</b> through connection <b>30</b> and into PSI) interface <b>25</b>. The PSD response is then routed <b>370</b> through hardware device port <b>5</b> and sent <b>360</b> to the Pipe Client <b>15</b> for processing and encapsulation. The resulting message packets are then sent <b>350</b> to the Client-side Communications Programs <b>105</b>C for incorporation into outgoing message packets <b>340</b>. The message packets <b>340</b> containing the encapsulated APDUs are transmitted <b>75</b> over the network <b>45</b> via the Network Interface Card (I/O) <b>130</b>C.</p>
<p id="p-0059" num="0068">The Remote Computer System <b>50</b> receives the message packets <b>330</b> containing the encapsulated APDUs, which are received from the network <b>45</b> via the Network Interface Card (I/O) <b>130</b>S installed on the Remote Computer System. The incoming messages are processed by server-side Communications Programs <b>105</b>S and routed <b>310</b> into the Pipe Server <b>70</b> for APDU extraction. The extracted APDUs are sent <b>320</b> to the APDU Interface <b>55</b> for processing and translation into a higher-level format and sent <b>300</b> to API Level programs <b>100</b> for processing and further transactions with the PSD <b>40</b> if desired.</p>
<heading id="h-0012" level="1">5.1.2. Secure Communications Pipe</heading>
<p id="p-0060" num="0069">Referring now to <figref idref="DRAWINGS">FIG. 4A</figref>, a generalized system block diagram of one implementation of a secure communications pipe is shown. The general system block diagram includes an additional software-based Cryptography Module <b>470</b> installed on the Remote Computer System, which is not shown in <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0061" num="0070"><figref idref="DRAWINGS">FIG. 4B</figref> depicts an alternative to using software-based security mechanisms. In this alternative, a Hardware Security Module (HSM) <b>440</b> is employed to perform cryptographic functions. To access the HSM, a software driver referred to as an HSM S/W Interface <b>475</b>, is included in the API Layer <b>100</b>. The HSM software driver communicates with a physical device interface included in the Physical Device Layer <b>130</b>. The physical device interface is installed on the I/O bus of the Remote Computer System, and is referred to as an HSM H/W Interface <b>485</b>. The HSM module <b>440</b> is connected <b>430</b> to the HSM H/W Interface in a manner analogous to the PSD connection to the PSD Interface previously described. The use of HSM technologies provides end-to-end security, which further reduces the possibility of unauthorized disclosure of cryptographic or sensitive information.</p>
<p id="p-0062" num="0071">Both APDU messaging security mechanisms shown in <figref idref="DRAWINGS">FIGS. 4A &#x26; 4B</figref> are used to generate cryptographic keys necessary to unlock secure functions and data contained within the secure domain of a PSD, encrypt outgoing APDUs and decrypt incoming encrypted APDUs. The security mechanisms employed in generating a secure pipe may include synchronous, asynchronous or any combination of cryptography methods.</p>
<p id="p-0063" num="0072">Secure communications protocols used to communicate over a network are accomplished by the Communications Programs contained within the Communications Layers <b>105</b>. Cryptography used in generating secure communications may employ the security mechanisms described for APDU messaging, employ separate mechanisms or employ any combination thereof.</p>
<p id="p-0064" num="0073">Referring now to <figref idref="DRAWINGS">FIG. 5</figref>, depicts the initiating of a secure pipe between the Remote Computer System and the PSD <b>40</b> connected to Client <b>10</b>. In this depiction, Remote Computer System <b>50</b> is sending a secure request to PSD <b>40</b> for proprietary embedded information <b>35</b>, for example an authentication password, PSD <b>40</b> is connected <b>30</b> to the local Client <b>10</b> using PSD Interface <b>25</b>. PSD Interface <b>25</b> communicates with the Client <b>10</b> via hardware device port <b>5</b>.</p>
<p id="p-0065" num="0074">To initiate a secure communications pipe between Remote Computer System <b>50</b> and PSD <b>40</b>, a request <b>500</b> is generated on Remote Computer System <b>50</b> to access PSD <b>40</b> by way of API programs <b>100</b> which are translated into APDU format by the APDU Interface <b>55</b>. The APDUs are then sent <b>520</b> to a Security Module <b>525</b> for encryption using a pre-established cryptography method. The proper cryptographic parameters may be determined by using a look-up table or database, which cross-references the PSD's unique internal identification information with one or more codes necessary to implement the appointed cryptography method.</p>
<p id="p-0066" num="0075">The encrypted APDUs are then routed <b>510</b> to the Pipe Server <b>70</b> for message encapsulation. The encapsulated APDUs are then sent <b>530</b> to the Communications Programs <b>105</b> for processing, encryption using a pre-established secure communications protocol and incorporation into outgoing message packets <b>535</b>. The secure message packets <b>535</b> containing the encrypted and encapsulated APDUs are transmitted <b>75</b> over the network <b>45</b> via a Network Interface Card (I/O) <b>130</b>S.</p>
<p id="p-0067" num="0076">The Client <b>10</b> receives the message packets <b>540</b> containing the encrypted and encapsulated APDUs which are received from the network <b>45</b> via a Network Interface Card (I/O) <b>130</b>C installed on the local Client <b>10</b>.</p>
<p id="p-0068" num="0077">The incoming encrypted message packets are decrypted and processed using the pre-established cryptography employed in the secure communications protocol by Client-side Communications Programs <b>105</b>C. The unencrypted message packets still containing the encrypted APDUs are routed <b>550</b> into the Pipe Client <b>15</b> for APDU extraction. The extracted APDUs are sent <b>560</b> through hardware device port <b>5</b>, routed <b>570</b> into the PSD Interface <b>25</b> and sent to PSD <b>40</b> via connection <b>30</b> for decryption and processing within the secure domain <b>35</b> of the PSD <b>40</b>. Using a pre-established cryptography method, incoming secure APDUs are decrypted and requests processed.</p>
<p id="p-0069" num="0078">Referring now to <figref idref="DRAWINGS">FIG. 6</figref>, depicts a PSD secure response, which establishes the secure communications pipe between PSD <b>40</b> and Remote Computer System <b>50</b>. In this depiction, the secure request previously received is processed within the secure domain <b>35</b> of the PSD <b>40</b>, which causes the PSD to generate a secure response message using a pre-established cryptography method.</p>
<p id="p-0070" num="0079">The PSD secure response is sent in APDU format from PSD <b>40</b> through connection <b>30</b> and into PSD interface <b>25</b>. The PSD secure response is then routed <b>670</b> through hardware device port <b>5</b> and sent <b>660</b> to the Pipe Client <b>15</b> for processing and encapsulation. The resulting message packets are then sent <b>650</b> to the Client-side Communications Programs <b>105</b> for processing, encryption using a pre-established secure communications protocol and incorporation into outgoing message packets <b>640</b>. The message packets <b>640</b> containing the encapsulated APDUs are transmitted <b>75</b> over the network <b>45</b> via the Network Interface Card (I/O) <b>130</b>C.</p>
<p id="p-0071" num="0080">The Remote Computer System <b>50</b> receives the message packets <b>635</b> containing the encapsulated APDUs from the network <b>45</b> via the Network Interface Card (I/O) <b>130</b>S installed on the Remote Computer System <b>50</b>. The incoming messages are processed and decrypted using the pre-established cryptography method employed in the secure communications protocol by the server-side Communications Programs <b>105</b> and routed <b>610</b> into the Pipe Server <b>70</b> for secure APDU extraction. The extracted secure APDUs are sent <b>630</b> to the Security Module <b>525</b> for decryption of the secure APDUs using the pre-established cryptography method. The decrypted APDUs are then routed <b>620</b> to the APDU Interface <b>55</b> for processing and translation into a higher-level format and sent <b>600</b> to API programs <b>100</b> for processing and further transactions with the PSD <b>40</b> if desired. This step establishes the secure &#x201c;pipe&#x201d; to communicate with the PSD. The secure pipe is maintained until the Remote Computer System signals the Client to close the hardware interface port <b>5</b>.</p>
<p id="p-0072" num="0081">No limitation is intended in the number of PSDs and Clients forming communications pipes <b>75</b> with one or more Remote Computer System(s) <b>50</b>, nor should any limitation on the number of Remote Computer Systems <b>50</b> available for generating communications pipes <b>75</b> be construed from the drawings. Lastly, no limitation is intended concerning the initiating event to establish a communications pipe.</p>
<heading id="h-0013" level="1">5.2. Authentication Method Using a Communications Pipe</heading>
<p id="p-0073" num="0082">As already mentioned above, description of said authentication method will be based on the use of a secure communications pipe, but the present invention is not limited to such a use.</p>
<p id="p-0074" num="0083">The use of a plain communications pipe falls within the scope of the present invention.</p>
<p id="p-0075" num="0084">The steps involved in performing authentication through a secure communications pipe are shown in <figref idref="DRAWINGS">FIGS. 7 through 14</figref>. <figref idref="DRAWINGS">FIG. 7</figref> is a generalized system block diagram. <figref idref="DRAWINGS">FIGS. 8 through 11</figref> illustrate a first variant where responses to authentication challenges are generated within the secure domain of a Personal Security Device. <figref idref="DRAWINGS">FIGS. 12 through 14</figref> illustrate a second variant where a Remote Computer System acting as a secure hub provides the proper response to authentication challenges, rather than directing challenges through the communications pipe into the PSD for processing. Characters shown with a prime sign (e.g. C&#x2032;) indicate a duplicate of an original authentication credential. Other drawing details shown but not described refer to information described in previous section 5.1.</p>
<p id="p-0076" num="0085">Referring now to <figref idref="DRAWINGS">FIG. 7</figref>, a generalized system block diagram is depicted, where a Personal Security Device <b>1040</b> is connected to a Client <b>1010</b> which is itself connected over a network <b>1045</b> to a Remote Computer System <b>1050</b> using a secure communications pipe <b>1075</b> as described in previous section 5.1.2. Remote Computer System <b>1050</b> is operating as a secure hub following initial authentication as described below, to service authentication requests made by subsequent Remote Computer Systems sent over a network <b>1045</b> or <b>1045</b>A.</p>
<p id="p-0077" num="0086">The subsequent Remote Computer System <b>1150</b> is an example of a system requiring authentication when a request for secure functions or data is sent from Client computer <b>1010</b> over the networks <b>1045</b> and <b>1045</b>A. The secure communications pipe <b>1075</b> applies to authentication transactions but does not restrict nor control non-secure transactions occurring over either network <b>1045</b> or <b>1045</b>A.</p>
<p id="p-0078" num="0087">Networks <b>1045</b> and <b>1045</b>A may be a common network as in a virtual private networking arrangement or separate networks such as private intranet and public interact arrangements. The networks <b>1045</b> and <b>1045</b>A are depicted separately for illustrative purposes only. No limitation is intended in the number of PSDs and Clients forming communications pipes <b>1075</b> with one or more secure hubs <b>1050</b>; nor should any limitation on the number of subsequent Remote Computer Systems <b>1150</b> available for authentication be construed from the drawing. Transactions not involving authentications are not restricted to the secure hub.</p>
<p id="p-0079" num="0088">The basic operation of the secure hub may be initiated when an end user at a Client requests access to secure functions or data contained on one or more Remote Computer Systems connected by a network. An available Remote Computer System, in which a secure communications pipe has been established as described in previous section 5.1.2., authenticates the end user and Client using the security mechanisms contained within the secure domain of the PSD. Alternatively, an external event such as a need to update information within a PSD may trigger a subsequent Remote Computer System to initiate the authentication process.</p>
<p id="p-0080" num="0089">Once an initial Client authentication has been accomplished by the available Remote Computer System, subsequent authentication challenges transmitted over a network <b>1045</b> or <b>1045</b>A made by subsequent Remote Computer Systems are directed to the Remote Computer System <b>1050</b> acting as a secure hub and depending on which variant employed, are either routed through the appropriate communications pipe <b>1075</b> to PSD <b>1040</b> or are directly authenticated by the Remote Computer System <b>1050</b>.</p>
<heading id="h-0014" level="1">5.2.1. First Variant of Authentication Method</heading>
<p id="p-0081" num="0090">Referring to <figref idref="DRAWINGS">FIG. 8</figref>, to establish a secure hub, a Client <b>1010</b> causes an authentication challenge to be generated on a Remote Computer System <b>1050</b>, by requesting access to secure functions or data over a network <b>1045</b>. Upon receiving the request from Client <b>1010</b>, the Remote Computer System <b>1050</b> generates an authentication challenge <b>1205</b> within a secure domain designated as authentication routine <b>1065</b>. The authentication challenge is processed by an API level program <b>1100</b> and routed <b>1200</b> to an APDU interface <b>1055</b> for translation into an APDU format. The APDUs are then sent <b>1220</b> to a Security Module <b>1225</b> for encryption. The encrypted APDUs are then routed <b>1230</b> to a Pipe Server <b>1070</b> for encapsulation into outgoing messaging and sent <b>1210</b> to the Communications Programs <b>1105</b>S for transmission over the communications pipe <b>1075</b>, through the network <b>1045</b> into the network interface <b>1130</b>C of the Client <b>10</b>. The incoming messages are then routed <b>1240</b> to Communications Programs <b>1105</b>C for processing.</p>
<p id="p-0082" num="0091">Following processing, the messages are sent <b>1250</b> to a Pipe Client <b>1015</b> for separation of the encapsulated APDUs. The APDUs are their sent <b>1260</b> through a hardware device port <b>1005</b> assigned to a PSD Interface <b>1025</b>. PSD Interface <b>1025</b> routes the incoming APDUs into the PSD <b>1040</b> via connection <b>1030</b>, where it is subsequently decrypted and processed within its secure domain <b>1035</b>.</p>
<p id="p-0083" num="0092">Referring to <figref idref="DRAWINGS">FIG. 9</figref>, once PSD <b>1040</b> has processed the authentication challenge within the secure domain <b>1035</b> of the PSD, an authentication response message is generated using a pre-established cryptography method.</p>
<p id="p-0084" num="0093">The authentication response is sent in APDU format from PSD <b>1040</b> through connection <b>1030</b> and into PSD Interface <b>1025</b>. The PSD secure response is then routed <b>1370</b> through hardware device port <b>1005</b> and sent <b>1360</b> to the Pipe Client <b>1015</b> for processing and encapsulation. The resulting message packets are then sent <b>1350</b> to the Client-side Communications Programs <b>1105</b>C for processing, encryption using a pre-established secure communications protocol and incorporation into outgoing message packets <b>1340</b>. The message packets <b>1340</b> containing the encapsulated APDUs are transmitted <b>1075</b> over the network <b>1045</b> via a network interface card (I/O) <b>1130</b>C.</p>
<p id="p-0085" num="0094">The Remote Computer System <b>1050</b> receives the message packets <b>1335</b> containing the encapsulated APDUs from the network <b>1045</b> via a network interface card (I/O) <b>1130</b>S installed on the Remote Computer System. The incoming messages are processed and decrypted using the pre-established cryptography method employed in the secure communications protocol by the server-side Communications Programs <b>1105</b>S and routed <b>1310</b> into the Pipe Server <b>1070</b> for secure APDU extraction. The extracted secure APDUs are sent <b>1330</b> to the Security Module <b>1325</b> for decryption of the secure APDUs using the pre-established cryptography method. The decrypted APDUs are then routed to the APDU Interface <b>1055</b> for processing and translation into a higher-level format and sent <b>1300</b> to API Level programs <b>1100</b> for processing. If authentication is successful, the Remote Computer System <b>1050</b> allows access to secure functions or data and establishes itself as a secure hub. If authentication fails, the end user will be unable to access secure functions or data.</p>
<p id="p-0086" num="0095">Referring to <figref idref="DRAWINGS">FIG. 10</figref>, once the secure hub has been established as previously described, remote authentication of subsequent Remote Computer Systems may be accomplished. Remote authentication may be initiated either by a Client's request for access to secure functions or data or by other Remote Computer Systems to perform transactions within the secure domain of a PSD.</p>
<p id="p-0087" num="0096">To perform a remote authentication, a challenge <b>1085</b> is issued by a subsequent Remote Computer System <b>1150</b>. The challenge is routed over a network <b>1045</b>, into the secure hub <b>1050</b>. The incoming challenge is processed and decrypted in the secure hub <b>1050</b> using the pre-established cryptography method employed in the secure communications protocol by the server-side Communications Programs <b>11055</b> and routed <b>1085</b> to an API level program <b>1100</b> where it is processed and routed <b>1400</b> to an AMU interface <b>1055</b> for translation into an APDU format. The APDUs are then sent <b>1420</b> to a Security Module <b>1425</b> for encryption. The encrypted APDUs are then muted <b>1430</b> to a Pipe Server <b>1070</b> for encapsulation into outgoing messaging and sent <b>1410</b> to the communications programs <b>1105</b>S for transmission over the communications pipe <b>1075</b>, through the network <b>1045</b> into the network interface <b>1130</b>C of the Client <b>1010</b>.</p>
<p id="p-0088" num="0097">The incoming messages are then routed <b>1440</b> to Communications Programs <b>11050</b> for processing. Following processing, the messages are sent <b>1450</b> to a Pipe Client <b>1015</b> for separation of the encapsulated APDUs. The APDUs are then sent <b>1460</b> through a hardware device port <b>1005</b> assigned to a PSD Interface <b>1025</b>. PSD Interface <b>1025</b> routes the incoming APDUs into the PSD <b>1040</b> via connection <b>1030</b>, where it is subsequently decrypted and processed within its secure domain <b>1035</b>.</p>
<p id="p-0089" num="0098">Referring to <figref idref="DRAWINGS">FIG. 11</figref>, once PSD <b>1040</b> has processed the authentication challenge within its secure domain <b>1035</b>, an authentication response message is generated using a pre-established cryptography method. The authentication response is sent in APDU format from PSD <b>1040</b> through connection <b>1030</b> and into PSD interface <b>1025</b>. The PSD secure response is then routed <b>1570</b> through hardware device port <b>1005</b> and sent <b>1560</b> to the Pipe Client <b>1015</b> for processing and encapsulation. The resulting message packets are then sent <b>1550</b> to the Client-side Communications Programs <b>1105</b>C for processing, encryption using a pre-established secure communications protocol and incorporation into outgoing message packets <b>1540</b>. The message packets <b>1540</b> containing the encapsulated APDUs are transmitted <b>1075</b> over the network <b>1045</b> via network interface card (I/O) <b>1130</b>C.</p>
<p id="p-0090" num="0099">The secure hub <b>1050</b> receives the message packets <b>1535</b> containing the encapsulated APDUs from the network <b>1045</b> via network interface card (I/O) <b>1130</b>S. The incoming messages are processed and decrypted using the pre-established cryptography method employed in the secure communications protocol by the server-side Communications Programs <b>1105</b>S and routed <b>1510</b> into the Pipe Server <b>1070</b> for secure APDU extraction. The extracted secure APDUs are sent <b>1530</b> to the Security Module <b>1525</b> for decryption of the secure APDUs using the pre-established cryptography method. The decrypted APDUs are then routed <b>1520</b> to the APDU Interface <b>1055</b> for processing and translation into a higher-level format and sent <b>1500</b> to API Level programs <b>1100</b> for processing. Authentication Module <b>1065</b> within the secure hub <b>1050</b> remains inactive during the transfer of authentication information. The authentication response message is then routed <b>1085</b> into the Communications Programs <b>1105</b>S where the response is sent over the network <b>1045</b> in a pre-established secure communications protocol to the challenging subsequent Remote Computer System <b>1150</b>.</p>
<p id="p-0091" num="0100">The incoming response message is decrypted and sent to an Authentication Module <b>1095</b>. If authentication is successful, the subsequent Remote Computer System <b>1150</b> allows access to secure functions or data. If authentication fails, the end user will be unable to access secure functions or data.</p>
<heading id="h-0015" level="1">5.2.2. Second Variant of Authentication Method</heading>
<p id="p-0092" num="0101">Referring to <figref idref="DRAWINGS">FIG. 12</figref> depicts a second variant of the authentication method where the Remote Computer System <b>1050</b> transfers copies of the PSD credentials C <b>1035</b>, if not pre-existing on said Remote computer System <b>1050</b>. To perform credential transfer, an initial authentication transaction is performed by the Remote Computer System <b>1050</b> as previously described. Following authentication, additional commands are sent by the Remote Computer System <b>1050</b> to transfer the specified credentials.</p>
<p id="p-0093" num="0102">The credentials are generated using a pre-established cryptography method and sent in APDU format from PSD <b>1040</b> through connection <b>1030</b> and into PSD interface <b>1025</b>. The PSD secure response is then routed <b>1670</b> through hardware device port <b>1005</b> and sent <b>1660</b> to the Pipe Client <b>1015</b> for processing and encapsulation. The resulting message packets are then sent <b>1650</b> to the Client-side Communications Programs <b>1105</b>C for processing, encryption using a pre-established secure communications protocol and incorporation into outgoing message packets <b>1640</b>. The message packets <b>640</b> containing the encapsulated APDUs are transmitted <b>1075</b> over the network <b>1045</b> via a network interface card (I/O) <b>1130</b>C.</p>
<p id="p-0094" num="0103">The Remote Computer System <b>1050</b> receives the message packets <b>1635</b> containing the encapsulated APDUs from the network <b>1045</b> via network interface card (I/O) <b>1130</b>S installed on the Remote Computer System.</p>
<p id="p-0095" num="0104">The incoming messages are processed and decrypted using the pre-established cryptography method employed in the secure communications protocol by the server-side Communications Programs <b>1105</b>S and routed <b>1610</b> into the Pipe Server <b>1070</b> for secure APDU extraction. The extracted secure APDUs are sent <b>1630</b> to the Security Module <b>1625</b> for decryption of the secure APDUs using the pre-established cryptography method. The decrypted APDUs are then routed <b>1620</b> to the APDU Interface <b>1055</b> for processing and translation into a higher-level format and sent <b>1600</b> to API Level programs <b>1100</b> for processing and subsequently sent <b>1605</b> to the Authentication Module <b>1065</b> for secure storage and future use. The transferred authentication information is shown in <figref idref="DRAWINGS">FIG. 12</figref> as C&#x2032;.</p>
<p id="p-0096" num="0105">In <figref idref="DRAWINGS">FIG. 13</figref>, an authentication challenge <b>1085</b> is sent by a subsequent Remote Computer System <b>1150</b> over a network <b>1045</b>. The Remote Computer System <b>1050</b> acting as a secure hub receives the incoming challenge <b>1085</b> from the network <b>1045</b> via network interface card <b>1130</b>S installed on the Remote Computer System <b>1050</b>. The incoming challenges <b>1085</b> are processed and decrypted using the pre-established cryptography method employed in the secure communications protocol by the server-side Communications Programs <b>1105</b>S and routed to API Level programs <b>1100</b> for processing. The processed challenge is then sent <b>1705</b> to the Authentication Module <b>1065</b> for authentication using the PSD's transferred credentials C&#x2032; <b>1035</b>&#x2032;. The communications pipe <b>1075</b> may remain intact during this process to allow for other transactions to occur.</p>
<p id="p-0097" num="0106">Referring to <figref idref="DRAWINGS">FIG. 14</figref>, the secure hub <b>1050</b> generates an authentication reply within the Authentication Module <b>1065</b> which is sent <b>1805</b> to the API Level Programs <b>1100</b> for processing, and subsequently routed <b>1810</b> to the Server-side Communications Programs <b>1105</b>S for processing, encryption using a pre-established secure communications protocol and incorporation into outgoing message packets. The message packets are routed over the network <b>1045</b> to the challenging subsequent Remote Computer System <b>1150</b>. The incoming messages are then decrypted and the authentication reply processed by an internal authentication module <b>1095</b>, if authentication is successful, the subsequent Remote Computer System <b>1150</b> allows access to secure functions or data. If authentication fails, the end user will be unable to access secure functions or data.</p>
<heading id="h-0016" level="1">5.3. Method and System for Remote Activation and Management of PSDs</heading>
<p id="p-0098" num="0107">The need for secure network communications is paramount for sensitive business and government transactions. The present invention provides an improvement over the current art by allowing issuance of generic PSDs, which can be activated and customized at a later date.</p>
<p id="p-0099" num="0108">The steps involved in activating a PSD and performing subsequent information management through a communications pipe are shown in <figref idref="DRAWINGS">FIGS. 15 through 17</figref>. For purposes of demonstration, it should be assumed that any local authentications between the end user, Client and local network domain have already been accomplished. Preferentially, a secure communications protocol is employed over the network between the client and one or more Remote Computer Systems. It is understood to one skilled in the art, that either embodiment of the invention will work with or without the use of secure communications protocols.</p>
<p id="p-0100" num="0109">Referring now to <figref idref="DRAWINGS">FIG. 15A</figref>, a first embodiment of the invention is depicted where a Client <b>2010</b> and a connected PSD <b>2040</b> are connected over a network <b>2045</b> with a Remote Computer System <b>2050</b> using a communications pipe <b>2075</b> as described in previous section 5.1. The Remote Computer System <b>2050</b> maintains the communications pipe <b>2075</b> and is available to transfer proprietary information &#x201c;I&#x201d; <b>2165</b> through the communications pipe <b>2075</b> and into the PSD <b>2040</b>.</p>
<p id="p-0101" num="0110">In <figref idref="DRAWINGS">FIG. 15B</figref>, a second embodiment of the invention is depicted where a first Remote Computer System <b>2050</b> acting as a secure hub as described in previous section 5.2. provides a mechanism for a subsequent Remote Computer System <b>2150</b> connected <b>2085</b> to a network <b>2045</b> to transfer proprietary information &#x201c;I&#x2032;&#x201d; <b>2165</b>&#x2032; into a PSD <b>2040</b>. In this second embodiment of the invention, proprietary information <b>2165</b>&#x2032; is received and processed by a first Remote Computer System <b>2050</b>. The proprietary information <b>2165</b>&#x2032; is then sent by the first Remote Computer System <b>2050</b>, through the communications pipe <b>2075</b> and into the PSD <b>2040</b>.</p>
<p id="p-0102" num="0111">The network <b>2045</b> may be a common network as in a virtual private networking arrangement or separate networks such as private intranet and public internet arrangements. No limitation is intended in the number of PSDs <b>2040</b> and clients <b>2010</b> forming communications pipes <b>2075</b> with one or more Remote Computer Systems <b>2050</b>, <b>2150</b>; nor should any limitation on the number of Remote Computer Systems <b>2050</b>, <b>2150</b> available for transferring proprietary information <b>2165</b>, <b>2165</b>&#x2032; be construed from any of the depictions shown herein.</p>
<p id="p-0103" num="0112">End user authentication is optional for activating blank PSDs or for deactivating PSDs already in use. In instances where access to a previously personalized PSD is desired, authentication transactions may be required as described in previous section 5.2. to facilitate secure access to the PSD. Once the authentication process has been accomplished, changes to proprietary information contained within the secure domain of the PSD are accomplished using the equivalent methodology described for blank card activation.</p>
<p id="p-0104" num="0113">Proprietary information <b>2165</b>, <b>2165</b>&#x2032; for injection into a PSD may originate on a Remote Computer system <b>2050</b> supporting a communications pipe (first embodiment of the invention), on subsequent Remote Computer Systems <b>2150</b> (second embodiment of the invention), or on any combination of Remote Computer Systems.</p>
<p id="p-0105" num="0114">Referring to <figref idref="DRAWINGS">FIG. 16</figref>, this drawing illustrates the transfer of proprietary information from a storage location over a network into a PSD using the Remote Computer System supporting the communications pipe (first embodiment of the invention). This drawing is applicable for either activating a blank PSD or changing information in an active PSD subsequent to authentication. In this first embodiment of the invention, the proprietary information <b>2165</b> is called from its storage location <b>2160</b> within the Remote Computer System <b>2050</b>.</p>
<p id="p-0106" num="0115">After retrieval, the proprietary information <b>2165</b> is sent <b>2206</b> for processing into APDU format and encapsulation into the proper communications messaging format <b>2204</b> as described in previous section 5.1. After processing, the communications message <b>2204</b> is sent through the network interface <b>2130</b>S, into the communications pipe <b>2075</b> over network <b>2045</b> and received by the client <b>2010</b> via a complementary network interface <b>2130</b>C.</p>
<p id="p-0107" num="0116">The incoming communications messages are sent <b>2212</b> for processing where the APDU formatted information is separated as described in previous section 5.1. The separated APDUs are then routed <b>2216</b> through the hardware device port <b>2005</b> and into <b>2218</b> the PSD device interface <b>2025</b>. The incoming APDUs are then routed <b>2030</b> into the secure domain <b>2035</b> of the PSD <b>2040</b> where the information is processed and stored by at least one embedded algorithm.</p>
<p id="p-0108" num="0117">For newly issued PSDs lacking proprietary information, the embedded algorithm is installed by the PSD issuer and functions to manage the initial installation of proprietary information. For PSDs already containing proprietary information, the algorithm may be the same or a different algorithm, which may include cryptographic capabilities.</p>
<p id="p-0109" num="0118">Referring to <figref idref="DRAWINGS">FIG. 17</figref>, this drawing illustrates the transfer of proprietary information from a remote storage location <b>1160</b>&#x2032; over a network <b>2045</b> and injection into a PSD <b>2040</b> using a plurality of remote computer systems <b>2050</b>, <b>2150</b>. This second embodiment of the invention involves retrieving proprietary information <b>2165</b>&#x2032; from one or more <b>2150</b> remote computer systems, sending <b>2085</b> the proprietary information over a network <b>2045</b> where the proprietary information is received and processed by a first Remote Computer System <b>2050</b> which is supporting a communications pipe <b>2075</b> and injected into the secure domain <b>2035</b> of the PSD <b>2040</b>.</p>
<p id="p-0110" num="0119">This second embodiment of the invention is applicable for either activating a blank PSD or changing information in an active PSD subsequent to authentication. In instances where authentication is required, the Remote Computer System supporting the communications pipe may operate as a secure hub as described in previous section 5.2.</p>
<p id="p-0111" num="0120">In this second embodiment of the invention, the proprietary information <b>2160</b>&#x2032; is called from a storage location inside a subsequent Remote Computer System <b>2150</b> or another Remote Computer System, which is local to, and communicating with, the subsequent Remote Computer System <b>2150</b>. The proprietary information &#x201c;I&#x2032;&#x201d; <b>2165</b>&#x2032; is retrieved and sent <b>2085</b> over the network <b>2045</b> to the Remote Computer System <b>2050</b> supporting the communications pipe <b>2075</b> with the designated PSD <b>2040</b>. Remote Computer System <b>2050</b> receives the proprietary information through the network interface <b>2130</b> and routes the incoming proprietary Information <b>2165</b>&#x2032; for processing it <b>2302</b> into APDU format and encapsulation into the proper communications messaging format <b>2304</b> as described in previous section 5.1. After processing, the message <b>2304</b> is sent through the network interface <b>2130</b>S, into the communications pipe <b>2075</b> over network <b>2045</b> and received by the client <b>2010</b> via a complementary network interface <b>2130</b>C.</p>
<p id="p-0112" num="0121">The incoming communications messages are sent <b>2312</b> for processing in <b>2314</b> where the APDU formatted information is separated as described in previous section 5.1. The separated APDUs are then routed <b>2316</b> through the hardware device port <b>2005</b> and into <b>2318</b> the PSD interface <b>2025</b>. The incoming APDUs are then routed <b>2030</b> into the secure domain <b>2035</b> of the PSD <b>2040</b> where the information is processed and stored by at least one embedded algorithm.</p>
<p id="p-0113" num="0122">As previously described, for newly issued PSDs lacking proprietary information, the embedded algorithm is installed by the PSD issuer and functions to Manage the initial installation of proprietary information. For PSDs already containing proprietary information, the algorithm may be the same or a different algorithm, which may include cryptographic capabilities.</p>
<p id="p-0114" num="0123">The foregoing described embodiments of the invention are provided as illustrations and descriptions. They are not intended to limit the invention to precise form described. In particular, it is contemplated that functional implementation of the invention described herein may be implemented equivalently in hardware, software, firmware, and/or other available functional components or building blocks. Other variations and embodiments are possible in light of above teachings, and it is not intended that the scope of the invention be limited by this Detailed Description, but rather by the Claims following herein</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for managing a Personal Security Device, comprising:
<claim-text>retrieving proprietary information from a remote storage location using a first Remote Computer System;</claim-text>
<claim-text>providing at least one Client as a host to the Personal Security Device;</claim-text>
<claim-text>establishing a communications pipe over a first network between the Personal Security Device and the Remote Computer System, wherein the communications pipe communicates with the Personal Security Device through the Client;</claim-text>
<claim-text>forming a Personal Security Device&#x2014;formatted message using the proprietary information;</claim-text>
<claim-text>transmitting the proprietary information from the Remote Computer System to the Personal Security Device by sending the Personal Security Device&#x2014;formatted message through the communications pipe, wherein the proprietary information provided in the Personal Security Device&#x2014;formatted message and passing through the Client is inaccessible by the Client;</claim-text>
<claim-text>processing the Personal Security Device&#x2014;formatted messages at the Personal Security Device to extract the proprietary information; and</claim-text>
<claim-text>storing the proprietary information in the Personal Security Device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the proprietary information is encapsulated to form the Personal Security Device&#x2014;formatted messages.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>encrypting the proprietary information in the first Remote Computer System after retrieving the proprietary information and before transmitting the proprietary information; and</claim-text>
<claim-text>decrypting the proprietary information in the at least one Personal Security Device processing the proprietary information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said remote storage location is in said at least first Remote Computer System.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the remote storage location is in a second Remote Computer System functionally connected to the first Remote Computer System over a second network and wherein retrieving proprietary information includes transmitting proprietary Information from the second Remote Computer System to the first Remote Computer System through the second network.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising:
<claim-text>encrypting the proprietary information in the second Remote Computer System; and</claim-text>
<claim-text>decrypting the proprietary information in the first Remote Computer System.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>authenticating the Personal Security Device through the communications pipe.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the communications pipe is initiated by the first Remote Computer System.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the communications pipe is initiated by a second Remote Computer System requesting access to the Personal Security Device.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the proprietary information is not disclosed to the client device.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. Computer software, provided in a non-transitory computer-readable storage medium, that manages a Personal Security Device, the software comprising:
<claim-text>executable code that retrieves proprietary information from a remote storage location using a first Remote Computer System;</claim-text>
<claim-text>executable code that establishes a communications pipe over a first network between the Personal Security Device and the Remote Computer System, wherein the communications pipe communicates with the Personal Security Device through a Client that is a host to the Personal Security Device;</claim-text>
<claim-text>executable code that forms a Personal Security Device&#x2014;formatted message using the proprietary information;</claim-text>
<claim-text>executable code that transmits the proprietary information from the Remote Computer System to the Personal Security Device by sending the Personal Security Device&#x2014;formatted message through the communications pipe, wherein the proprietary information provided in the Personal Security Device&#x2014;formatted message and passing through the Client is inaccessible by the Client;</claim-text>
<claim-text>executable code that processes the Personal Security Device&#x2014;formatted messages at the Personal Security Device to extract the proprietary information; and</claim-text>
<claim-text>executable code that stores the proprietary information in the Personal Security Device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. Computer software according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the proprietary information is encapsulated to form the Personal Security Device&#x2014;formatted messages.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. Computer software according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:
<claim-text>executable code that encrypts the proprietary information in the first Remote Computer System after retrieving the proprietary information and before transmitting the proprietary information; and</claim-text>
<claim-text>executable code that decrypts the proprietary information in the at least one Personal Security Device processing the proprietary information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. Computer software according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein said remote storage location is in said at least first Remote Computer System.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. Computer software according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the remote storage location is in a second Remote Computer System functionally connected to the first Remote Computer System over a second network and wherein executable code that retrieves proprietary information transmits proprietary Information from the second Remote Computer System to the first Remote Computer System through the second network.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. Computer software according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:
<claim-text>executable code that encrypts the proprietary information in the second Remote Computer System; and</claim-text>
<claim-text>executable code that decrypts the proprietary information in the first Remote Computer System.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. Computer software according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:
<claim-text>executable code that authenticates the Personal Security Device through the communications pipe.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. Computer software according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the communications pipe is initiated by the first Remote Computer System.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. Computer software according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the communications pipe is initiated by a second Remote Computer System requesting access to the Personal Security Device.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. Computer software according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the proprietary information is not disclosed to the client device.</claim-text>
</claim>
</claims>
</us-patent-grant>
