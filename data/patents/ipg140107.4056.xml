<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625125-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625125</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12237374</doc-number>
<date>20080924</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2007-259238</doc-number>
<date>20071002</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>1054</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>3</main-group>
<subgroup>12</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>K</subclass>
<main-group>15</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>K</subclass>
<main-group>9</main-group>
<subgroup>34</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>358  115</main-classification>
<further-classification>358  113</further-classification>
<further-classification>358  114</further-classification>
<further-classification>382180</further-classification>
<further-classification>715211</further-classification>
<further-classification>715234</further-classification>
</classification-national>
<invention-title id="d2e71">Print processing method and information processing apparatus implementing the method</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5550962</doc-number>
<kind>A</kind>
<name>Nakamura et al.</name>
<date>19960800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709232</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2001/0055421</doc-number>
<kind>A1</kind>
<name>Baatz et al.</name>
<date>20011200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382173</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>JP</country>
<doc-number>2000215010</doc-number>
<kind>A</kind>
<date>20000800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>JP</country>
<doc-number>2001-222395</doc-number>
<kind>A</kind>
<date>20010800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>JP</country>
<doc-number>2004-30386</doc-number>
<kind>A</kind>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00006">
<othercit>JP Office Action May 11, 2012 for corresponding JP2007-259238.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>40</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>15</number-of-drawing-sheets>
<number-of-figures>15</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20090086265</doc-number>
<kind>A1</kind>
<date>20090402</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Toda</last-name>
<first-name>Masanari</first-name>
<address>
<city>Yokohama</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Hirakawa</last-name>
<first-name>Satoshi</first-name>
<address>
<city>Kawasaki</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Kikuchi</last-name>
<first-name>Hiroshi</first-name>
<address>
<city>Musashino</city>
<country>JP</country>
</address>
</addressbook>
<residence>
<country>JP</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Toda</last-name>
<first-name>Masanari</first-name>
<address>
<city>Yokohama</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Hirakawa</last-name>
<first-name>Satoshi</first-name>
<address>
<city>Kawasaki</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Kikuchi</last-name>
<first-name>Hiroshi</first-name>
<address>
<city>Musashino</city>
<country>JP</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Rossi, Kimms &#x26; McDowell LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Canon Kabushiki Kaisha</orgname>
<role>03</role>
<address>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Lett</last-name>
<first-name>Thomas</first-name>
<department>2625</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A printer driver for generating print job data to be transferred to a printer in response to a drawing instruction determines, based on combining condition, whether the received drawing instruction can be combined with another drawing instruction. If the printer driver determines that the received drawing instruction can be combined, the printer driver stores the received drawing instruction as intermediate data. If the printer driver determines that the received drawing instruction cannot be combined, the printer driver combines intermediate data of already stored drawing instructions into a single item of print job data and outputs the print job data to the printer. The combining condition is that the received drawing instruction meets all of three conditions.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="215.65mm" wi="153.42mm" file="US08625125-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="146.39mm" wi="150.11mm" file="US08625125-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="198.71mm" wi="148.51mm" file="US08625125-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="188.21mm" wi="151.81mm" file="US08625125-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="237.49mm" wi="147.40mm" orientation="landscape" file="US08625125-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="236.47mm" wi="149.44mm" orientation="landscape" file="US08625125-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="232.75mm" wi="147.07mm" orientation="landscape" file="US08625125-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="231.06mm" wi="147.40mm" orientation="landscape" file="US08625125-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="232.75mm" wi="136.31mm" orientation="landscape" file="US08625125-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="172.38mm" wi="138.68mm" file="US08625125-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="230.04mm" wi="142.32mm" orientation="landscape" file="US08625125-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="237.49mm" wi="162.98mm" orientation="landscape" file="US08625125-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="240.88mm" wi="162.98mm" orientation="landscape" file="US08625125-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="198.04mm" wi="159.26mm" file="US08625125-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="186.52mm" wi="142.66mm" file="US08625125-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="228.35mm" wi="155.19mm" file="US08625125-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0002" num="0001">1. Field of the Invention</p>
<p id="p-0003" num="0002">The present invention relates to a print processing method of generating print data to be transmitted to an image output device that outputs image data, and an information processing apparatus that implements the method.</p>
<p id="p-0004" num="0003">2. Description of the Related Art</p>
<p id="p-0005" num="0004">In print processing performed by printer drivers for high-function printers, when a drawing instruction is provided from an operating system (OS) to the printer driver, the drawing instruction is replaced with corresponding drawing commands in a page description language before data is transferred to the printer. The Page Description Language will be hereinafter abbreviated as PDL and the method that uses PDL will be referred to as PDL mode. PDL-mode in general has the advantages that it reduces the amounts of data and therefore allows printers to perform processing fast as compared with low-function printers (such as dumb printers, video printers) that do not have PDL and accept only bitmaps as input.</p>
<p id="p-0006" num="0005">As personal computers become faster and application programs become more sophisticated in functionality, a wider variety of graphical representations are contained in documents such as presentation handouts. Consequently, the amount of data handled in PDL mode is increasing and even high-function printers have become often slower than low-function printers accordingly.</p>
<p id="p-0007" num="0006">For example, the processing speed of a printer can become slow when objects specified in drawing instructions provided from an OS are small in size but large in number. In such cases, the total throughput can sometimes be increased by rendering the data as a bitmap on the PC, which has a high-power CPU and substantial memory resources, rather than generating PDL drawing commands and transferring the PDL drawing commands to the printer through a network and processing them on the printer.</p>
<p id="p-0008" num="0007">Therefore, printer drivers provide a mode in which an entire page is rendered into a bitmap and transferred to a printer (hereinafter called raster mode) and allow manual or automatic selection between PDL mode and raster mode. A technique disclosed in Japanese Patent Laid-Open No. 2004-030386 reduces the number of PDL commands by temporarily storing drawing instructions provided from an OS and grouping neighboring drawing instructions into a PDL command in image data form. This technique has prevented reduction of performance by combining the advantages of PDL mode and image mode.</p>
<p id="p-0009" num="0008">However, the method that provides the raster mode and allows a user to set the raster mode by means of a printer driver does not allow the user to determine whether PDL drawing commands will produce a huge amount of data. Consequently, in many cases, print processing in slow PDL mode is chosen. If the printer driver predicts which of the modes will process each page faster, one page of print data must be held and no print data is sent to the printer while the print data is held, increasing the first printout time. In addition, much PC resources are required.</p>
<p id="p-0010" num="0009">On the other hand, the method described in Japanese Patent Laid-Open No. 2004-030386 solves the problem by converting only contiguous drawing instruction portions to image data and using PDL commands for the other portions. However, some recent applications use drawing instructions to use small images to draw only individual solid line portions of an apparently dashed line (see <figref idref="DRAWINGS">FIG. 4</figref>) or specify to use small images to draw only black pixels of a larger image (see <figref idref="DRAWINGS">FIG. 6</figref>). Because such disconnected images are not contiguous to one another, the images cannot be combined by using the method described in Japanese Patent Laid-Open No. 2004-030386, remaining to degrade performance.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0011" num="0010">The present invention provides a print processing method capable of performing fast and optimum processing of data containing noncontiguous images such as disconnected images and an information processing apparatus that implements the print processing method.</p>
<p id="p-0012" num="0011">To achieve the object, a print processing method according to the present invention performed by a printer driver of receiving drawing instructions and generating print job data to a printer, comprises the steps of: receiving a drawing instruction; determining whether or not the received drawing instruction can be combined with drawing instructions already stored, based on combining condition; storing the received drawing instruction as intermediate data when it is determined that the received drawing instruction can be combined; and combining intermediate data of the drawing instructions already stored into a single item of print job data and outputting the combined single item of print job data to the printer, when it is determined that the received drawing instruction cannot be combined.</p>
<p id="p-0013" num="0012">A print processing method according to the present invention of receiving drawing instructions and generating print job data to a printer, comprises the steps of: receiving a drawing instruction; determining whether or not the received drawing instruction should be combined with another drawing instruction; storing the received drawing instruction when it is determined that the received drawing instruction should be combined; and combining drawing instructions already stored in the storing step to create a combined drawing instruction and outputting the combined drawing instruction to the printer when it is determined that the received drawing instruction should not be combined, wherein, in the determining step, it is determined that the received drawing instruction should not be combined when an attribute of the received drawing instruction is the same as an attribute of another drawing instruction and a ratio of an image to an area resulting from combining the received drawing instruction with the another drawing instruction is smaller than a first threshold.</p>
<p id="p-0014" num="0013">An information processing apparatus according to the present invention including a printer driver for generating print job data to be transferred to a printer in response to a drawing instruction, comprises: a receiving unit adapted to receive a drawing instruction; a determination unit adapted to determine whether or not the received drawing instruction can be combined with drawing instructions already stored, based on combining condition; a storage unit adapted to store the received drawing instruction as intermediate data in a memory when the determination unit determines that the received drawing instruction can be combined; and an output unit adapted to combine intermediate data of the drawing instructions already stored in the memory into a single item of print job data and output the combined single item of print job data to the printer.</p>
<p id="p-0015" num="0014">An information processing apparatus according to the present invention which generates print job data to printer in response to a drawing instruction, comprises: a receiving unit adapted to receive a drawing instruction; a determination unit adapted to determine whether or not the received drawing instruction should be combined with another drawing instruction; a storage unit adapted to, when it is determined that the received drawing instruction should be combined, store the received drawing instruction; and an output unit adapted to, when it is determined that the received drawing instruction should not be combined, combine drawing instructions already stored by the storage unit to create a combined drawing instruction and output the combined drawing instruction to the printer; wherein the determination unit determines that the received drawing instruction should not be combined when an attribute of the received drawing instruction is the same as an attribute of another drawing instruction and a ratio of an image to an area resulting from combining the received drawing instruction with the another drawing instruction is smaller than a first threshold.</p>
<p id="p-0016" num="0015">According to the present invention, there is provided a print processing method capable of performing fast and optimum processing of data containing noncontiguous images such as disconnected images and an information processing apparatus that implements the print processing method.</p>
<p id="p-0017" num="0016">According to the present invention, drawing instructions for drawing portions that locally involve a huge amount of data are sequentially rendered as bitmaps even in PDL mode and then sent to a printer. Drawing instructions for other portions are transferred to the printer as PDL drawing commands.</p>
<p id="p-0018" num="0017">Consequently, noncontiguous, disconnected images (overlapping or spaced apart) can be combined to reduce the size of PDL commands (reduce the number of headers and improve the data compression ratio by taking advantage of data continuity), thereby reducing the total printing time.</p>
<p id="p-0019" num="0018">Additionally, by combining and transmitting images one after another, concurrent processing with a printer can be performed and therefore higher performance can be achieved than in image mode in which all data is stored and then transmitted as an image through batch transfer.</p>
<p id="p-0020" num="0019">Further features of the present invention will become apparent from the following description of exemplary embodiments with reference to the attached drawings (with reference to the attached drawings).</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram showing an exemplary configuration of a print processing system to which a print processing method according to an exemplary embodiment of the present invention is applied;</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 2</figref> is a conceptual diagram showing a dataflow in a process from input of a print instruction from an input unit to transmission of data to a printer for printing in the print processing method according to an exemplary embodiment of the present invention;</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram showing in further detail processing performed by a printer driver shown in <figref idref="DRAWINGS">FIG. 2</figref>;</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 4</figref> is a conceptual diagram showing a problem with a conventional image composition method;</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 5</figref> is a conceptual diagram showing processing according to the present invention that solves the problem with the conventional image composition method shown in <figref idref="DRAWINGS">FIG. 4</figref>;</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 6</figref> is a conceptual diagram showing a second problem with the conventional image composition method;</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 7</figref> is a conceptual diagram showing processing according to the present invention that solves the second problem with the conventional image composition method shown in <figref idref="DRAWINGS">FIG. 6</figref>;</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 8</figref> is a diagram illustrating image information received by a Windows printer driver from an OS in the exemplary embodiment;</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 9</figref> shows an exemplary configuration of combination data table according to the exemplary embodiment;</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 10</figref> is a diagram illustrating a flow of image data when a horizontal dotted line is composed according to the exemplary embodiment;</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 11</figref> is a diagram illustrating a flow of image data when a slope dotted line is composed according to the exemplary embodiment;</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 12</figref> is a diagram illustrating a flow of image data when another disconnected image is composed according to the exemplary embodiment;</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 13</figref> is a flowchart showing an exemplary procedure of a print processing method by a printer driver for an information processing apparatus according to the exemplary embodiment;</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 14</figref> is a flowchart showing an exemplary procedure of combination data table flush processing shown in <figref idref="DRAWINGS">FIG. 13</figref>; and</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 15</figref> is a flowchart showing an exemplary procedure of combining condition determination processing shown in <figref idref="DRAWINGS">FIG. 13</figref>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DESCRIPTION OF THE EMBODIMENTS</heading>
<p id="p-0036" num="0035">Exemplary embodiments of the present invention will be described with reference to the accompanying drawings.</p>
<p id="p-0037" num="0036">&#x3c;Exemplary Configuration of a Print Processing System Including an Information Processing Apparatus According to an Exemplary Embodiment&#x3e;</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram showing an exemplary configuration of a print processing system to which a print processing method of the present invention is applied.</p>
<p id="p-0039" num="0038">Reference numeral <b>101</b> in <figref idref="DRAWINGS">FIG. 1</figref> denotes a central processing unit (CPU), which controls the information processing apparatus and the print processing system. The CPU <b>101</b> reads a program and data relating to the program from a storage medium such as an FD, CD-ROM, or IC memory card into an auxiliary storage unit <b>103</b> through a storage medium reading unit <b>106</b> connected to the system. The CPU <b>101</b> processes information input from an input unit <b>104</b> in accordance with a system program and application program loaded from the auxiliary storage unit <b>103</b> into a main storage unit <b>102</b> and outputs the processed information to an output unit <b>105</b> or a printer <b>107</b>.</p>
<p id="p-0040" num="0039">The term output unit <b>105</b> as used herein refers to a display unit such as a display monitor, as distinguished from the printer <b>107</b>, which otherwise would be included in the category of output unit. The input unit <b>104</b> includes devices such as keyboard and a pointing device. The auxiliary storage unit <b>103</b> may be a hard disk or a magneto-optical disk or a combination of these. These units may be interconnected through a bus or a network, which does not limit the present invention.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 2</figref> is a conceptual diagram illustrating a control program that implements a print processing method of the present invention and a flow of data relating to the control program.</p>
<p id="p-0042" num="0041">An application <b>302</b> and a printer driver <b>303</b> function under the control of the CPU <b>101</b> according to an OS <b>301</b> loaded in the main storage unit <b>102</b>. In print processing, a print instruction is input from an input unit and print job data is sent to the printer to perform printing.</p>
<p id="p-0043" num="0042">Although not shown in <figref idref="DRAWINGS">FIG. 2</figref>, reserved in the main storage unit <b>102</b> are areas for temporarily storing drawing instructions received, converted intermediate data, and generated PDL commands, a memory buffer <b>306</b>, which will be described later, a combination memory <b>308</b>, and areas for storing flags for determining branches in the flowcharts shown in <figref idref="DRAWINGS">FIGS. 13 to 15</figref> and arithmetic expressions for determining whether processing speed can be increased by combination.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 3</figref> shows in detail a flow of data processing performed by the printer driver <b>303</b> shown in the conceptual diagram of <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="p-0045" num="0044">The printer driver <b>303</b> converts a drawing instruction received from the OS <b>301</b> to intermediate data by an intermediate data conversion module <b>304</b>. At the same time, determination is made as to whether the drawing instruction meets a combining condition, as will be detailed later. If the intermediate data meets the combining condition, information required for drawing is stored in the memory buffer <b>306</b>. If the intermediate data does not meet the combining condition, the intermediate data is converted to a PDL command at a PDL command generation module <b>305</b> and the PDL command is sent to the printer <b>107</b>.</p>
<p id="p-0046" num="0045">Intermediate data in the memory buffer <b>306</b> is converted to image data at a combination module <b>307</b> by using the combination memory <b>308</b> if any of the following states occurs while the intermediate data is stored in the memory buffer <b>306</b>: a drawing instruction that cannot be combined is received; the memory buffer <b>306</b> is exhausted; and a drawing instruction for one page has been executed. Image data generated by the combination module <b>307</b> is converted to a PDL command by the PDL command generation module <b>305</b>, and the PDL command is sent to the printer <b>307</b>.</p>
<p id="p-0047" num="0046">In this way, drawing instructions from the OS <b>301</b> are converted to intermediate data one after another, some of the intermediate data is converted to image data and combined, then converted to PDL commands, and transferred to the printer. Thus processing of drawing instructions from the OS <b>301</b> is continued. After processing of all drawing instructions from the OS <b>301</b> is completed, the intermediate data in the memory buffer <b>306</b> is converted to PDL commands by the process as described above and the PDL commands are transferred to the printer, then the print processing by the printer driver <b>303</b> ends.</p>
<p id="p-0048" num="0047">&#x3c;Concept of the Print Processing Method in the Print Processing System of the Exemplary Embodiment&#x3e;</p>
<p id="p-0049" num="0048">To aid in the understanding of the print processing method of the present invention, differences between a conventional print processing method and the print processing method according to the present invention will be described first with respect to two examples. It will be apparent to those skilled in the art that the present invention is not merely improvements on the techniques in the following two examples but execution of the print processing method of the present invention enables effective processing of images that are not contiguous to one another, such as disconnected images.</p>
<p id="p-0050" num="0049">(Example of Conventional Processing of a Horizontal Dotted Line)</p>
<p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. 4</figref> shows an example of a conventional method for printing a horizontal dotted line, which is one example of disconnected images. In the example shown in <figref idref="DRAWINGS">FIG. 4</figref>, the amount of data in rendering using PDL drawing commands is large as compared with the amount of data in bitmap rendering.</p>
<p id="p-0052" num="0051">When a dotted line is drawing by a typical application, an instruction to draw the dotted line is transferred to a printer driver as one function.</p>
<p id="p-0053" num="0052">If the application has high-level PDL drawing commands capable of specifying a dotted line, a PDL drawing command of a small size can be used to instruct to draw a dotted line by adding a dotted line attribute to the line drawing instruction.</p>
<p id="p-0054" num="0053">However, some applications represents a dotted line by using a large number of disconnected images <b>401</b> (each with a height of 1 pixel and width of 3 pixels in the example in <figref idref="DRAWINGS">FIG. 4</figref>) of solid line portions of the dotted line. If the printer driver converts image data transferred from an OS to PDL drawing commands, a large number of drawing instructions <b>402</b> to drawing disconnected images, each consisting of several bits, are sent to the printer.</p>
<p id="p-0055" num="0054">When a large number of small image drawing instructions <b>402</b> are sent to a printer, the data transfer rate decreases because (1) the ratio of header size in PDL commands increases and (2) compression that uses continuity, such as PackBits compression, does not work well. Furthermore, if a large number of disconnected images are processed on a printer that has a small capability of CPU and small capacity of memory space, much time is required for command analysis, which adds to printing time.</p>
<p id="p-0056" num="0055">(Example of Processing of a Horizontal Dotted Line According to the Invention)</p>
<p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. 5</figref> shows an example in which a horizontal dotted line, which is one example of disconnected images, is printed according to the present invention. In the example shown in <figref idref="DRAWINGS">FIG. 5</figref>, the same horizontal dotted line as that in <figref idref="DRAWINGS">FIG. 4</figref> can be drawn with a smaller amount of data in rendering using a PDL drawing command in processing according to the present invention than the amount of data rendered as bitmaps.</p>
<p id="p-0058" num="0057">According to the present invention, images drawn by drawing instructions that are not contiguous to one another as shown in part <b>601</b> of <figref idref="DRAWINGS">FIG. 5</figref> are combined and converted into an image and a mask as shown in part <b>602</b> of <figref idref="DRAWINGS">FIG. 5</figref> to increase the performance of the whole printing time when it is determined that the whole processing time can be reduced. According to the present invention, unless the amount of combined data exceeds a limit, drawing instructions are combined into a single PDL command and sent to the printer, where the dotted line is drawn as shown in part <b>603</b> of <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0059" num="0058">(Example of Processing of a Slope Dotted Line)</p>
<p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. 6</figref> shows an example in which a slope dotted line, which is one example of disconnected images, is printed. In the example shown in <figref idref="DRAWINGS">FIG. 6</figref>, the concept of combination and conversion into an image and mask shown in <figref idref="DRAWINGS">FIG. 5</figref> is extended to a slope dotted line without modification and, as a result, the amount of data in rendering using PDL drawing commands becomes large as compared with the amount of data rendered as bitmaps.</p>
<p id="p-0061" num="0060">When the range of images to be combined is extended without modification to the combining process shown in <figref idref="DRAWINGS">FIG. 5</figref> and disconnected images <b>501</b> shown in <figref idref="DRAWINGS">FIG. 6</figref> are combined, an image larger than the sum of the source images as shown in part <b>502</b> is likely to result (see also <figref idref="DRAWINGS">FIG. 11</figref>). There is no advantage in combining images to draw an image as shown in part <b>503</b> in this way because the time for transmitting data from the PC to the printer increases.</p>
<p id="p-0062" num="0061">Therefore, according to the present invention, a specific combining condition is added to the processing in <figref idref="DRAWINGS">FIG. 5</figref> to solve the problem with the example in <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0063" num="0062">(Example of Processing of a Slope Dotted Line According to the Invention)</p>
<p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. 7</figref> shows an example in which a slope dotted line, which is one example of disconnected images, is printed according to the present invention. In the example shown in <figref idref="DRAWINGS">FIG. 7</figref>, a specific combining condition is added to perform the process in <figref idref="DRAWINGS">FIG. 5</figref>, the problem with the example in <figref idref="DRAWINGS">FIG. 6</figref> is solved, and the amount of data in rendering using PDL drawing commands is reduced as compared with the amount of data rendered as bitmaps.</p>
<p id="p-0065" num="0064">In <figref idref="DRAWINGS">FIG. 7</figref>, only optimum drawing instructions in disconnected images <b>701</b> are combined to generate a PDL drawing command <b>702</b> (including an image and a mask). As shown in drawing in part <b>703</b> of <figref idref="DRAWINGS">FIG. 7</figref>, images transferred for a single solid line of the dotted line are combined whereas images apart from each other are not combined, on the basis of a specific combining condition.</p>
<p id="p-0066" num="0065">A mask pattern is generated in order to indicate the portion of a rectangle bitmap that is to be processed on a printer.</p>
<p id="p-0067" num="0066">&#x3c;Exemplary Configurations of Drawing Instruction and Combination Data Table in the Present Embodiment&#x3e;</p>
<p id="p-0068" num="0067">For purposes of illustration of a combining condition in the exemplary embodiment, an image drawing process performed in a printer driver will be described using Windows (registered trademark) as an example with reference to <figref idref="DRAWINGS">FIGS. 8 and 9</figref>.</p>
<p id="p-0069" num="0068">(Exemplary Configuration of Drawing Instruction)</p>
<p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. 8</figref> shows an example in which a dotted line drawing generated on an application is transferred to the DrvStretchBlt function <b>801</b>, which is a DDI function of a Windows-based printer driver, as an instruction to draw an image of several pixels.</p>
<p id="p-0071" num="0070">In the example in <figref idref="DRAWINGS">FIG. 8</figref>, a &#x201c;prclSrc&#x201d; area <b>804</b> in a bitmap memory space <b>802</b> indicated by &#x201c;psoSrc&#x201d; is drawn in a &#x201c;prclDest&#x201d; area <b>803</b> in a bitmap memory space <b>805</b> indicated by &#x201c;psoDest&#x201d;. The structure RECTL of the &#x201c;prclDest&#x201d; area <b>804</b> and &#x201c;prclDest&#x201d; area <b>803</b> can represent the positions in a rectangular area as follows:</p>
<p id="p-0072" num="0071">
<maths id="MATH-US-00001" num="00001">
<math overflow="scroll">
<mrow>
  <mrow>
    <mi>typedef</mi>
    <mo>&#x2062;</mo>
    <mstyle>
      <mspace width="0.8em" height="0.8ex"/>
    </mstyle>
    <mo>&#x2062;</mo>
    <mi>struct_RECTL</mi>
    <mo>&#x2062;</mo>
    <mstyle>
      <mspace width="0.6em" height="0.6ex"/>
    </mstyle>
    <mo>&#x2062;</mo>
    <mrow>
      <mo>{</mo>
      <mstyle>
        <mtext>
</mtext>
      </mstyle>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="1.1em" height="1.1ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mrow>
        <mrow>
          <mi>LONG</mi>
          <mo>&#x2062;</mo>
          <mstyle>
            <mspace width="0.8em" height="0.8ex"/>
          </mstyle>
          <mo>&#x2062;</mo>
          <mi>left</mi>
        </mrow>
        <mo>;</mo>
        <mstyle>
          <mtext>
</mtext>
        </mstyle>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="1.1em" height="1.1ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <mrow>
          <mi>LONG</mi>
          <mo>&#x2062;</mo>
          <mstyle>
            <mspace width="0.8em" height="0.8ex"/>
          </mstyle>
          <mo>&#x2062;</mo>
          <mi>top</mi>
        </mrow>
        <mo>;</mo>
        <mstyle>
          <mtext>
</mtext>
        </mstyle>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="1.1em" height="1.1ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <mrow>
          <mi>LONG</mi>
          <mo>&#x2062;</mo>
          <mstyle>
            <mspace width="0.8em" height="0.8ex"/>
          </mstyle>
          <mo>&#x2062;</mo>
          <mi>right</mi>
        </mrow>
        <mo>;</mo>
        <mstyle>
          <mtext>
</mtext>
        </mstyle>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="1.1em" height="1.1ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <mrow>
          <mi>LONG</mi>
          <mo>&#x2062;</mo>
          <mstyle>
            <mspace width="0.8em" height="0.8ex"/>
          </mstyle>
          <mo>&#x2062;</mo>
          <mi>bottom</mi>
        </mrow>
        <mo>;</mo>
      </mrow>
      <mo>&#x2062;</mo>
      <mstyle>
        <mtext>
</mtext>
      </mstyle>
      <mo>}</mo>
    </mrow>
    <mo>&#x2062;</mo>
    <mstyle>
      <mspace width="0.6em" height="0.6ex"/>
    </mstyle>
    <mo>&#x2062;</mo>
    <mi>RECTL</mi>
  </mrow>
  <mo>,</mo>
  <mrow>
    <mrow>
      <mo>*</mo>
      <mi>PRECTL</mi>
    </mrow>
    <mo>;</mo>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0073" num="0072">In addition, there are other elements such as &#x201c;psomask&#x201d; which indicates a mask area using on-pixels in a bitmap and &#x201c;pco&#x201d; which indicates a clipping area, description of which will be omitted here. A drawing instruction formed with a drawing bitmap and a mask pattern is a command to draw a masked portion of a mask pattern on a drawing bitmap. Alternatively, a drawing instruction includes a command to clear a masked portion of a mask pattern and a command to draw a bitmap in which an unmasked portion of the mask pattern is cleared, by using OR operation.</p>
<p id="p-0074" num="0073">Here, &#x201c;left&#x201d; and &#x201c;right&#x201d; indicate drawing positions where the leftmost position in the horizontal directions is 0 whereas &#x201c;top&#x201d; and &#x201c;bottom&#x201d; indicate drawing positions where the top position in the vertical directions is 0.</p>
<p id="p-0075" num="0074">(Exemplary Configuration of Combination Data Table)</p>
<p id="p-0076" num="0075">A storage format of image data in combination data table form for intermediate data stored in the memory buffer <b>306</b> will be described next with reference to <figref idref="DRAWINGS">FIG. 9</figref>.</p>
<p id="p-0077" num="0076">&#x201c;rclUniImgArea&#x201d; <b>901</b> stores the most-outer circumscribed rectangle area of an image resulting from combination of intermediate data stored in the memory buffer <b>306</b>.</p>
<p id="p-0078" num="0077">&#x201c;UniImagAreaSize&#x201d; <b>902</b> is the data size of a generated image in &#x201c;rclUniImageArea&#x201d; <b>901</b>.</p>
<p id="p-0079" num="0078">&#x201c;TotalSrcImageSize&#x201d; <b>903</b> is the total of the sizes of individual images stored and can be obtained according to the following equations:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>Image<i>W</i>=rclDest.right&#x2212;rclDest.left;<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>Image<i>H</i>=rclDest.bottom&#x2212;rclDest.top;<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>TotalSrcImageSize=&#x3a3;(Image<i>W</i>&#xd7;Image<i>H</i>);<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0080" num="0079">&#x201c;rop&#x201d; <b>904</b> contains a logical value specified in image drawing instructions stored. When the memory buffer <b>306</b> contains disconnected images, it is determined that images that have a rep value different from the stored rep value cannot be combined.</p>
<p id="p-0081" num="0080">&#x201c;ImgCnt&#x201d; <b>907</b> indicates the number of images stored.</p>
<p id="p-0082" num="0081">&#x201c;plstimgtable&#x201d; <b>908</b> stores the start address of an image data structure stored. &#x201c;plastimgtable&#x201d; <b>912</b> represents a pointer to the last image data structure stored.</p>
<p id="p-0083" num="0082">The components <b>901</b> to <b>908</b> and <b>912</b> constitute a general management table <b>910</b> for managing whole images stored.</p>
<p id="p-0084" num="0083">The image data structure <b>911</b> stored includes the following data: source image area information &#x201c;rclSrc&#x201d; <b>905</b>, rendering area information &#x201c;rclDst&#x201d; <b>909</b>, and a drawing destination area of the size of image data body size &#x201c;ImageSize&#x201d; <b>906</b>. &#x201c;ImageData&#x201d; contains the image data body.</p>
<p id="p-0085" num="0084">As shown in <figref idref="DRAWINGS">FIG. 9</figref>, multiple image data structures <b>911</b> (first and second image information are shown in <figref idref="DRAWINGS">FIG. 9</figref>) can be stored in series in a single management table <b>910</b>.</p>
<p id="p-0086" num="0085">&#x3c;Exemplary Criterion for Determining Whether to Combine Images According to the Exemplary Embodiment&#x3e;</p>
<p id="p-0087" num="0086">In the exemplary embodiment, upon reception of image data from the OS, Formula A given below is executed in order to quickly determine whether combining the image will increase processing speed. If the result is logically true, it is determined that combination should be performed; if logically false, it is determined that combination should not be performed.
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(Image<i>W</i>&#xd7;Image<i>H</i>&#xd7;bitspixel&#x3c;maxSize) &#x26; (TotalSrcImageSize/UniImgAreaSize&#xd7;100&#x3e;MinimumOccupationRatio) &#x2003;&#x2003;(Formula A)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0088" num="0087">Here, &#x201c;bitspixel&#x201d; is the number of bits representing one pixel and &#x201c;maxSize&#x201d; is a first threshold (constant) for combining only disconnected images. In the exemplary embodiment, when a reduced image is to be generated, the resolution of the original image is reduced to an output resolution by the printer driver and when an enlarged image is to be generated, the original image is enlarged on the printer. Accordingly, if a bitmap size obtained from the rclDest area is smaller than the threshold, the image is processed as a disconnected image. The first threshold varies from one print processing system to another.</p>
<p id="p-0089" num="0088">&#x201c;MinimumOccupationRatio&#x201d; is a second threshold (constant) for ensuring that the ratio of the area of an image to a combined image is greater than a certain value so that an unused area in the combined image does not increase. The second threshold also varies from one print processing system to another.</p>
<p id="p-0090" num="0089">Formula A for the determination given above and the thresholds are not limitative but can be changed without departing from the present invention.</p>
<p id="p-0091" num="0090">&#x3c;Example of Processing by Print Processing Method According to the Exemplary Embodiment&#x3e;</p>
<p id="p-0092" num="0091">Disconnected image combination according to the exemplary embodiment will be simulated below with respected to <figref idref="DRAWINGS">FIGS. 10 to 12</figref>. It is assumed in the exemplary embodiment that maxSize=80 bytes and MinimumOccupationRatio=20%. However, these values vary from one print processing system to another.</p>
<p id="p-0093" num="0092">(Example of Processing of a Horizontal Dotted Line)</p>
<p id="p-0094" num="0093"><figref idref="DRAWINGS">FIG. 10</figref> shows an example of processing of a dotted line by a print processing method according to the exemplary embodiment.</p>
<p id="p-0095" num="0094">Image <b>1</b> (<b>1001</b>) (ImageW=3, ImageH=1, bitspixel=1, and drawing position is (X=1, y=2)) meets the combining conditions expressed by Formula A and therefore is stored in a memory buffer as an image to be combined. Here, Imgoccupation=100% because only the image is stored in the memory buffer. Part <b>1002</b> shows image <b>1</b> stored in the memory buffer and rendered as a bitmap.</p>
<p id="p-0096" num="0095">The next image <b>2</b> (<b>1003</b>) (ImageW=2, ImageH=1, bitspixel=1, and drawing position is (x=8, y=2)) provided from the OS also meets the combining conditions expressed by Formula A. Because image <b>2</b> does not overlap image <b>1</b> and ImgOccupation=55%, which meets the condition, image <b>2</b> is stored in the memory buffer as an image combined. Part <b>1004</b> shows the combined image (images <b>1</b> and <b>2</b>) stored in the memory buffer and rendered as a bitmap.</p>
<p id="p-0097" num="0096">Similarly, image <b>3</b> (<b>1005</b>) is determined to be combinable because ImgOccupation=50%. Therefore, image <b>3</b> is also stored in the memory buffer. Part <b>1006</b> shows the combined image (images <b>1</b>, <b>2</b>, and <b>3</b>) stored in the memory buffer and rendered as a bitmap.</p>
<p id="p-0098" num="0097">(Example of Processing of Slope Dotted Line)</p>
<p id="p-0099" num="0098"><figref idref="DRAWINGS">FIG. 11</figref> shows an example of processing of a slope dotted line by the print processing method according to the exemplary embodiment.</p>
<p id="p-0100" num="0099">In the example in <figref idref="DRAWINGS">FIG. 11</figref>, image <b>1</b> (<b>1101</b>), image <b>2</b> (<b>1103</b>), and image <b>3</b> (<b>1105</b>) are determined to be combinable because Imgoccupation=50%. Parts <b>1102</b>, <b>1104</b>, and <b>1106</b> show combined images rendered as bitmaps.</p>
<p id="p-0101" num="0100">However, if image <b>4</b> (<b>1107</b>) were combined, the combined image would appear as shown in part <b>1108</b> and Imgoccupation=17%, which is lower than a threshold of 20%. This does not satisfy Formula A and therefore image <b>4</b> (<b>1107</b>) is not combined. It is shown that images <b>1</b> (<b>1101</b>) to images <b>3</b> (<b>1105</b>) are combined to generate a PDL drawing command.</p>
<p id="p-0102" num="0101">After the PDL command for the combined image is issued, the memory buffer <b>306</b> is cleared and image <b>4</b> (<b>1107</b>) is stored in the image buffer <b>306</b> for the subsequent combination.</p>
<p id="p-0103" num="0102">By continuing the process, the process shown in <figref idref="DRAWINGS">FIG. 7</figref> is accomplished.</p>
<p id="p-0104" num="0103">(Example of Application to Other Noncontiguous Images)</p>
<p id="p-0105" num="0104"><figref idref="DRAWINGS">FIG. 12</figref> shows an example of application of the exemplary embodiment to noncontiguous images dissimilar to a horizontal dotted line (<figref idref="DRAWINGS">FIG. 10</figref>) and a slope dotted line (<figref idref="DRAWINGS">FIG. 11</figref>).</p>
<p id="p-0106" num="0105">In the example in <figref idref="DRAWINGS">FIG. 12</figref>, image <b>1</b> (<b>1201</b>) to image <b>3</b> (<b>1205</b>) are the same as those in <figref idref="DRAWINGS">FIG. 11</figref>. Accordingly, parts <b>1202</b> to <b>1206</b> are the same as parts <b>1102</b> to <b>1106</b> of <figref idref="DRAWINGS">FIG. 11</figref>.</p>
<p id="p-0107" num="0106">The drawing area of the next image <b>4</b> (<b>1207</b>) in <figref idref="DRAWINGS">FIG. 12</figref> overlaps the most-outer circumscribed rectangle area rclUniImgArea of images <b>1</b> to <b>3</b> (<b>1205</b>).</p>
<p id="p-0108" num="0107">If the drawing instructions for images <b>1</b> to <b>3</b> are instructions to draw overlying images without using an underlying background, it is determined that the images can be combined. Furthermore, if image <b>4</b> (<b>1207</b>) is combined, Imgoccupation will be 58%. Therefore, it is determined that image <b>4</b> (<b>1207</b>) can be combined. Image <b>4</b> (<b>1207</b>) is combined and is stored in the memory buffer <b>306</b>. Part <b>1208</b> shows the combined image (images <b>1</b>, <b>2</b>, <b>3</b> and <b>4</b>) stored in the memory buffer and rendered as a bitmap.</p>
<p id="p-0109" num="0108">&#x3c;Example of Procedure of Print Processing Method According to the Exemplary Embodiment&#x3e;</p>
<p id="p-0110" num="0109"><figref idref="DRAWINGS">FIGS. 13</figref>, <b>14</b>, and <b>15</b> are flowcharts showing an exemplary flow of the processing performed by the printer driver <b>303</b> described above. In practice, the process by the printer driver <b>303</b> is executed by the central processing unit <b>101</b> in accordance with the process procedure of the printer driver <b>303</b>. However, the expression &#x201c;the printer driver <b>303</b> does&#x201d; will be used in the following description.</p>
<p id="p-0111" num="0110">(Example of Whole Process Procedure)</p>
<p id="p-0112" num="0111">The whole process of a pint processing method by the printer driver according to the present invention will be described with reference to the flowchart of <figref idref="DRAWINGS">FIG. 13</figref>.</p>
<p id="p-0113" num="0112">Before an initialization message is provided to the printer driver, the following process is performed.</p>
<p id="p-0114" num="0113">First, an instruction to execute printing is input from the input unit <b>104</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>. In response to the instruction, an OS <b>301</b>, among OSs, drivers and applications (<figref idref="DRAWINGS">FIG. 2</figref>) loaded in the main storage unit <b>102</b> from the auxiliary storage unit <b>103</b>, receives the message. The OS <b>301</b> sends a print execution message to a currently active application <b>302</b>.</p>
<p id="p-0115" num="0114">The application <b>302</b> converts the message to a command recognizable to the OS <b>301</b> and sends the data to be printed and the command message to the OS <b>301</b>. The OS <b>301</b> converts the command message to a command recognizable to the printer driver <b>303</b> and sends the message to the printer driver <b>303</b>.</p>
<p id="p-0116" num="0115">Upon receiving the initialization message, the printer driver <b>303</b> starts the process of the flowchart in <figref idref="DRAWINGS">FIG. 13</figref>. The printer driver <b>303</b> first allocates and clears a memory buffer <b>306</b> for storing combination data table and a combination memory <b>308</b> used for combining images, as initialization (step S<b>1301</b>).</p>
<p id="p-0117" num="0116">The printer driver <b>303</b> obtains and analyzes a command sent from the OS (step S<b>1302</b>). At step S<b>1303</b>, the printer driver <b>303</b> detects a page-end command from the result of the analysis. If the command is a page-end command, the printer driver <b>303</b> proceeds to step S<b>1308</b>, otherwise, to step S<b>1304</b>.</p>
<p id="p-0118" num="0117">The printer driver <b>303</b> converts the command to intermediate data at step S<b>1304</b> and checks with combining conditions at step S<b>1305</b> (which will be described later in detail with reference to <figref idref="DRAWINGS">FIG. 15</figref>). At step S<b>1306</b>, the printer driver <b>303</b> determines on the basis of the result of checking at step S<b>1305</b> whether the intermediate data can be combined. If the intermediate data can be combined, the printer driver <b>303</b> proceeds to step S<b>1307</b>. The printer driver <b>303</b> stores the image information in the combination data table in the memory buffer <b>306</b> along with the image at step S<b>1307</b>, then returns to step S<b>1302</b>, where the printer driver <b>303</b> waits for the next instruction.</p>
<p id="p-0119" num="0118">On the other hand, if the printer driver <b>303</b> determines at step S<b>1306</b> that the intermediate data cannot be combined, the printer driver <b>303</b> proceeds to step S<b>1309</b>. At step S<b>1309</b>, the printer driver <b>303</b> performs a flush process (which will be described later in detail with reference to <figref idref="DRAWINGS">FIG. 14</figref>), then returns to step S<b>1302</b> to obtain the next instruction.</p>
<p id="p-0120" num="0119">If the printer driver <b>303</b> determines at step S<b>1303</b> that it has received a page-end command, the printer driver <b>303</b> flushes the combination data table at step S<b>1308</b> (which will be described later in detail with reference to <figref idref="DRAWINGS">FIG. 14</figref>). At step S<b>1310</b>, the printer driver <b>303</b> frees up the memories allocated at step S<b>1301</b> and will end the process.</p>
<p id="p-0121" num="0120">(Example of Procedure of Combination Data Table Flush Process)</p>
<p id="p-0122" num="0121"><figref idref="DRAWINGS">FIG. 14</figref> is a flowchart of the combination data table flush process performed at steps S<b>1308</b> and S<b>1309</b> of <figref idref="DRAWINGS">FIG. 13</figref>.</p>
<p id="p-0123" num="0122">At step S<b>1401</b>, the printer driver <b>303</b> uses the value of rclUniImageArea in the combination data table in the memory buffer <b>306</b> to allocate a bitmap area in the combination memory <b>308</b> that is required for combination. At step S<b>1402</b>, the printer driver <b>303</b> renders the image information <b>911</b> registered in the combination data table in the bitmap area allocated in the combination memory <b>308</b> in the order of registration. At step S<b>1403</b>, the printer driver <b>303</b> generates a PDL command from the bitmap data combined on the combination memory <b>308</b> and sends the PDL command to the printer.</p>
<p id="p-0124" num="0123">If the printer driver <b>303</b> determines at step S<b>1405</b> that the intermediate data currently being processed is image data that, if combined, increases processing speed, the printer driver <b>303</b> proceeds to step S<b>1407</b>; otherwise, the printer driver <b>303</b> proceeds to step S<b>1406</b>.</p>
<p id="p-0125" num="0124">At step S<b>1406</b>, the printer driver <b>303</b> converts the intermediate data being processed to a PDL command and sends the PDL command to the printer. At step S<b>1407</b>, on the other hand, the printer driver <b>303</b> stores the intermediate data in the memory buffer <b>306</b>.</p>
<p id="p-0126" num="0125">Then the printer driver <b>303</b> ends the combination data table flush process and returns.</p>
<p id="p-0127" num="0126">(Example of Procedure of Combining Condition Checking Process)</p>
<p id="p-0128" num="0127"><figref idref="DRAWINGS">FIG. 15</figref> is a flowchart of the process for checking with combining conditions performed at step S<b>1305</b> of <figref idref="DRAWINGS">FIG. 13</figref>.</p>
<p id="p-0129" num="0128">At step S<b>1501</b>, the printer driver <b>303</b> determines on the basis of Formula A whether combining into the image will increase the processing speed. If the printer driver <b>303</b> determines that combining into the image will increase processing speed, the printer driver <b>303</b> proceeds to step S<b>1502</b>; otherwise, the printer driver <b>303</b> proceeds to step S<b>1507</b>.</p>
<p id="p-0130" num="0129">At step S<b>1502</b>, the printer driver <b>303</b> determines whether there is image data stored in the combination data table in the memory buffer <b>306</b>. If image data is stored, the printer driver <b>303</b> proceeds to step S<b>1503</b>; otherwise, the printer driver <b>303</b> proceeds to step S<b>1506</b>.</p>
<p id="p-0131" num="0130">At step S<b>1503</b>, the printer driver <b>303</b> checks the drawing attribute of the drawing instruction to determine whether the drawing instruction uses a background. If the drawing instruction uses a background, the printer driver <b>303</b> proceeds to step S<b>1504</b>; otherwise, the printer driver <b>303</b> proceeds to step S<b>1505</b>.</p>
<p id="p-0132" num="0131">At step S<b>1504</b>, the printer driver <b>303</b> checks the drawing instruction being processed to determine whether the image overlap a stored image. If the image does not overlap, the printer driver <b>303</b> proceeds to step S<b>1505</b>. If the image overlap, the image cannot be combined and therefore the printer driver <b>303</b> proceeds to step S<b>1507</b>.</p>
<p id="p-0133" num="0132">At step S<b>1505</b>, the printer driver <b>303</b> determines whether the drawing attribute (such as a rop value or CLIP value) of the image is the same as that of the stored image. If the attribute is the same, the printer driver <b>303</b> proceeds to step S<b>1506</b>; otherwise, the printer driver <b>303</b> proceeds to step S<b>1507</b>.</p>
<p id="p-0134" num="0133">At step S<b>1506</b>, the printer driver <b>303</b> determines that the image can be combined. At step S<b>1507</b>, on the other hand, the printer driver <b>303</b> determines that the image cannot be combined. For example, the printer driver <b>303</b> stores a flag in an area reserved in the main storage unit <b>102</b>.</p>
<p id="p-0135" num="0134">In summary, the conditions for combining an image is: (1) there is not a stored image, (2) there is a stored image, a background is not used, and the attribute of the image is the same as that of the stored image; or (3) there is a stored image, a background is used but the image does not overlap, and the attribute is the same. If none of the three conditions are met, it is determined that the image cannot be combined.</p>
<p id="p-0136" num="0135">In this way, each time the printer driver receives a drawing instruction from the OS, the printer driver determines whether the received drawing instruction should be combined, and then stores intermediate data. If the printer driver receives a drawing instruction that does not meet any of the combining conditions, the printer driver combines and draws the intermediate data stored up to that point in the bitmap space. A print instruction is generated from the bitmap combined and drawn and is immediately sent to the printer. Therefore, the process can be performed concurrently with processing on the printer.</p>
<p id="p-0137" num="0136">While commands converted by the printer driver from drawing instructions or intermediate data transferred from the OS and sent to the printer are PDL drawing commands in the foregoing description, the commands do not necessarily need to be PDL drawing commands. For example, the commands may be device-independent drawing commands or drawing instructions transferred from the OS without conversion. The present invention is applicable to such cases as well and has the same effects.</p>
<p id="p-0138" num="0137">The present invention may be applied to a system or integrated apparatus including multiple devices (such as a host computer, an interface device, and a printer) or to an apparatus formed by a single device.</p>
<p id="p-0139" num="0138">It will be understood that the object of the present invention can also be achieved by providing a storage medium (or a recording medium) on which a software program code that implements the functions of any of the exemplary embodiments described above is recorded to a system or apparatus to cause the computer (CPU or MPU) of the system or apparatus to read and execute the program code recorded on the medium.</p>
<p id="p-0140" num="0139">In this case, the program code read from the storage medium implements the functions of any of the exemplary embodiments described above and the storage medium on which the program code is recorded constitutes the present invention.</p>
<p id="p-0141" num="0140">The functions of any of the exemplary embodiments can be implemented not only by a computer reading and executing the program code. Of course, the present invention also includes an implementation in which an operating system (OS) running on a computer performs part or all of actual processing in accordance with instructions in the program code and the processing implements the functions of any of the exemplary embodiments described above.</p>
<p id="p-0142" num="0141">The present invention also includes an implementation in which the program code read from a storage medium is written on a memory provided in a function expansion card inserted in a computer or a function expansion unit connected to a computer, then a CPU or other processor provided in the function expansion card or the function expansion unit performs part or all of actual processing in accordance with instructions in the program code and the processing implements the functions of any of the exemplary embodiments described above.</p>
<p id="p-0143" num="0142">If the present invention is applied to the storage medium, program codes corresponding to the flowcharts described above are stored on the storage medium.</p>
<p id="p-0144" num="0143">While the present invention has been described with reference to exemplary embodiments, it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures and functions.</p>
<p id="p-0145" num="0144">This application claims the benefit of Japanese Patent Application No. 2007-259238, filed Oct. 2, 2007, which is hereby incorporated by reference herein in its entirety.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-math idrefs="MATH-US-00001" nb-file="US08625125-20140107-M00001.NB">
<img id="EMI-M00001" he="21.51mm" wi="76.20mm" file="US08625125-20140107-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A print processing method performed by a printer driver of receiving drawing instructions and generating print job data for a printer, the method comprising the steps of:
<claim-text>receiving a drawing instruction;</claim-text>
<claim-text>determining whether or not the received drawing instruction can be combined with drawing instructions already stored, based on a combining condition;</claim-text>
<claim-text>storing the received drawing instruction as intermediate data when it is determined that the received drawing instruction can be combined; and</claim-text>
<claim-text>combining intermediate data of the drawing instructions already stored into a single item of print job data and outputting the combined single item of print job data to the printer, when it is determined that the received drawing instruction cannot be combined,</claim-text>
<claim-text>wherein, in the determining step, whether or not the received drawing instruction can be combined with the drawing instructions already stored is determined based on whether the received drawing instruction uses a background or not.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The print processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising a control step of, when it is determined that the received drawing instruction cannot be combined based on the combining condition but the received drawing instruction meets a condition that combining the received drawing instruction with another drawing instruction reduces printing time, storing the received drawing instruction as intermediate data after the combined intermediate data of the drawing instructions already stored has been output at the outputting step, and, when it is determined that the received drawing instruction cannot be combined based on the combining condition and the received drawing instruction does not meet the condition that combining the received drawing instruction with another drawing instruction reduces printing time, outputting the received drawing instruction to the printer as a single item of print job data after the combined intermediate data of the drawing instruction already stored has been output at the outputting step.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The print processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the combining condition includes that the drawing instruction meets all of the following conditions that:
<claim-text>predicted printing time required when the received drawing instruction is combined with already stored intermediate data is shorter than predicted printing time required when the received drawing instruction is not combined with the already stored intermediate data;</claim-text>
<claim-text>the received drawing instruction is of the same type as the already stored intermediate data; and</claim-text>
<claim-text>the received drawing instruction does not use a background or the intermediate data of the received drawing instruction does not overlap the already stored intermediate data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The print processing method according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the condition that predicted printing time required when the received drawing instruction is combined with already stored intermediate data is shorter than predicted printing time required when the received drawing instruction is not combined with already stored intermediate data is when an amount of data of an image drawn by the received drawing instruction is smaller than a first threshold and an ratio of the amount of data of a combined image to an area of the combined image is greater than a second threshold.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The print processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the print job data is a PDL drawing command.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The print processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein, in the determining step,
<claim-text>it is determined that the received drawing instruction can be combined with the drawing instructions already stored if the received drawing instruction does not use a background and an attribute of the received drawing instruction is the same as that of the drawing instructions already stored,</claim-text>
<claim-text>it is determined that the received drawing instruction can be combined with the drawing instructions already stored if the received drawing instruction uses a background, an image according to the received drawing instruction does not overlap images according to the drawing instructions already stored, and an attribute of the received drawing instruction is the same as that of the drawing instructions already stored,</claim-text>
<claim-text>it is determined that the received drawing instruction cannot be combined with the drawing instructions already stored if the received drawing instruction uses a background and an image according to the received drawing instruction overlaps images according to the drawing instructions already stored, and</claim-text>
<claim-text>it is determined that the received drawing instruction cannot be combined with the drawing instructions already stored if the received drawing instruction uses a background, an image according to the received drawing instruction does not overlap images according to the drawing instructions already stored, and an attribute of the received drawing instruction is not the same as that of the drawing instructions already stored.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A non-transitory computer-readable storage medium storing a computer-executable program included in a printer driver for causing a computer to perform a print processing method of receiving drawing instructions and generating print job data for a printer, the method comprising the steps of:
<claim-text>receiving a drawing instruction;</claim-text>
<claim-text>determining whether or not the received drawing instruction can be combined with drawing instructions already stored, based on a combining condition;</claim-text>
<claim-text>storing the received drawing instruction as intermediate data when it is determined that the received drawing instruction can be combined; and</claim-text>
<claim-text>combining intermediate data of the drawing instructions already stored into a single item of print job data and outputting the combined single item of print job data to the printer, when it is determined that the received drawing instruction cannot be combined,</claim-text>
<claim-text>wherein, in the determining step, whether or not the received drawing instruction can be combined with the drawing instructions already stored is determined based on whether the received drawing instruction uses a background or not.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A print processing method of receiving drawing instructions and generating print job data for a printer, the method comprising the steps of:
<claim-text>receiving a drawing instruction;</claim-text>
<claim-text>determining whether or not the received drawing instruction should be combined with another drawing instruction;</claim-text>
<claim-text>storing the received drawing instruction when it is determined that the received drawing instruction should be combined; and</claim-text>
<claim-text>combining drawing instructions already stored in the storing step to create a combined drawing instruction and outputting the combined drawing instruction to the printer when it is determined that the received drawing instruction should not be combined,</claim-text>
<claim-text>wherein, in the determining step, it is determined that the received drawing instruction should not be combined when an attribute of the received drawing instruction is the same as an attribute of another drawing instruction and a ratio of an image to an area resulting from combining the received drawing instruction with the another drawing instruction is smaller than a first threshold.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The print processing method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein, in the determining step, it is determined that the received drawing instruction should not be combined when a size of the image of the received drawing instruction is smaller than a second threshold and an attribute of the received drawing instruction is the same as an attribute of another drawing instruction and the ratio of the image to the area resulting from combining the received drawing instruction with the another drawing instruction is smaller than the first threshold.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The print processing method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein, in the determining step, it is determined that the received drawing instruction should not be combined when the received drawing instruction uses a background and overlaps the already stored drawing instructions.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The print processing method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein, in the output step, the drawing instructions already stored by the storing step are combined to create a combined drawing instruction and the combined drawing instruction and a mask pattern of the combined drawing instruction are output to the printer, when it is determined that the received drawing instruction should not be combined.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A non-transitory computer-readable storage medium storing a computer-executable program included in a printer driver for causing a computer to perform a print processing method of receiving drawing instructions and generating print job data for a printer, the method comprising the steps of:
<claim-text>receiving a drawing instruction;</claim-text>
<claim-text>determining whether or not the received drawing instruction should be combined with another drawing instruction;</claim-text>
<claim-text>storing the received drawing instruction when it is determined that the received drawing instruction should be combined; and</claim-text>
<claim-text>combining drawing instructions already stored in the storing step to create a combined drawing instruction and outputting the combined drawing instruction to the printer when it is determined that the received drawing instruction should not be combined,</claim-text>
<claim-text>wherein, in the determining step, it is determined that the received drawing instruction should not be combined when an attribute of the received drawing instruction is the same as an attribute of another drawing instruction and a ratio of an image to an area resulting from combining the received drawing instruction with the another drawing instruction is smaller than a first threshold.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. An information processing apparatus including a printer driver for generating print job data to be transferred to a printer in response to a drawing instruction, comprising:
<claim-text>a receiving unit adapted to receive a drawing instruction;</claim-text>
<claim-text>a determination unit adapted to determine whether or not the received drawing instruction can be combined with drawing instructions already stored, based on a combining condition;</claim-text>
<claim-text>a storage unit adapted to store the received drawing instruction as intermediate data in a memory when the determination unit determines that the received drawing instruction can be combined; and</claim-text>
<claim-text>an output unit adapted to combine intermediate data of the drawing instructions already stored in the memory into a single item of print job data and output the combined single item of print job data to the printer when the determination unit determines that the received drawing instruction cannot be combined,</claim-text>
<claim-text>wherein the determination unit determines whether or not the received drawing instruction can be combined with the drawing instructions already stored based on whether the received drawing instruction uses a background or not.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The information processing apparatus according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising a control unit adapted to, when the determination unit determines that the received drawing instruction cannot be combined based on the combining condition but the received drawing instruction meets a condition that combining the received drawing instruction with another drawing instruction reduces printing time, storing the received drawing instruction as intermediate data after the combined intermediate data of the already stored drawing instruction has been output by the output unit, and when it is determined that the received drawing instruction cannot be combined based on the combining condition and the received drawing instruction does not meet the condition that combining the received drawing instruction with another drawing instruction reduces printing time, outputting the received drawing instruction to the printer as a single item of print job data after the stored intermediate data of the already stored drawing instruction has been output by the output unit.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The information processing apparatus according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the combining condition includes that the drawing instruction meets all of the following conditions that:
<claim-text>predicted printing time required when the received drawing instruction is combined with already stored intermediate data is shorter than predicted printing time required when the received drawing instruction is not combined with the already stored intermediate data;</claim-text>
<claim-text>the received drawing instruction is of the same type as stored intermediate data; and</claim-text>
<claim-text>the received drawing instruction does not use a background or the intermediate data of the received drawing instruction does not overlap the already stored intermediate data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The information processing apparatus according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the condition that predicted printing time required when the received drawing instruction is combined with the already stored intermediate data is shorter than predicted printing time required when the receiving drawing instruction is not combined with the already stored intermediate data is when an amount of data of an image drawn by the received drawing instruction is smaller than a first threshold and a ratio of the amount of data of a combined image to an area of the combined image is greater than a second threshold.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The information processing apparatus according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the print job data is a PDL drawing command.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The information processing apparatus according to <claim-ref idref="CLM-00013">claim 13</claim-ref>,
<claim-text>wherein the determination unit determines that the received drawing instruction can be combined with the drawing instructions already stored if the received drawing instruction does not use a background and an attribute of the received drawing instruction is the same as that of the drawing instructions already stored,</claim-text>
<claim-text>wherein the determination unit determines that the received drawing instruction can be combined with the drawing instructions already stored if the received drawing instruction uses a background, an image according to the received drawing instruction does not overlap images according to the drawing instructions already stored, and an attribute of the received drawing instruction is the same as that of the drawing instructions already stored,</claim-text>
<claim-text>wherein the determination unit determines that the received drawing instruction cannot be combined with the drawing instructions already stored if the received drawing instruction uses a background and an image according to the received drawing instruction overlaps images according to the drawing instructions already stored, and</claim-text>
<claim-text>wherein the determination unit determines that the received drawing instruction cannot be combined with the drawing instructions already stored if the received drawing instruction uses a background, an image according to the received drawing instruction does not overlap images according to the drawing instructions already stored, and an attribute of the received drawing instruction is not the same as that of the drawing instructions already stored.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. An information processing apparatus which generates print job data to be transferred to a printer in response to a drawing instruction, comprising:
<claim-text>a receiving unit adapted to receive a drawing instruction;</claim-text>
<claim-text>a determination unit adapted to determine whether or not the received drawing instruction should be combined with another drawing instruction;</claim-text>
<claim-text>a storage unit adapted to, when it is determined that the received drawing instruction should be combined, store the received drawing instruction; and</claim-text>
<claim-text>an output unit adapted to, when it is determined that the received drawing instruction should not be combined, combine drawing instructions already stored by the storage unit to create a combined drawing instruction and output the combined drawing instruction to the printer;</claim-text>
<claim-text>wherein the determination unit determines that the received drawing instruction should not be combined when an attribute of the received drawing instruction is the same as an attribute of another drawing instruction and a ratio of an image to an area resulting from combining the received drawing instruction with the another drawing instruction is smaller than a first threshold.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The information processing apparatus according to <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the determination unit determines that the received drawing instruction should not be combined when a size of an image of the received drawing instruction is smaller than a second threshold and an attribute of the received drawing instruction is the same as an attribute of the another drawing instruction and the ratio of the image to an area resulting from combining the received drawing instruction with the another drawing instruction is smaller than the first threshold.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The information processing apparatus according to <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the determination unit determines that the received drawing instruction should not be combined when the received drawing instruction uses a background and overlaps already stored drawing instructions.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The information processing apparatus according to <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein when it is determined that the received drawing instruction should not be combined, the output unit combines the drawing instructions already stored by the storage unit to create a combined drawing instruction and outputs the combined drawing instruction and a mask pattern of the combined drawing instruction to the printer.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. A non-transitory computer-readable storage medium storing a computer-executable program for causing a computer to perform a print processing method of receiving drawing instructions and generating print job data for a printer, the method comprising the steps of:
<claim-text>receiving a drawing instruction;</claim-text>
<claim-text>determining whether or not the received drawing instruction can be combined with drawing instructions already stored based on whether the received drawing instruction uses a background or not; and</claim-text>
<claim-text>generating combined print job data by combining the received drawing instruction and the drawing instructions already stored and outputting the combined print job data to the printer, when it is determined that the received drawing instruction can be combined in the determining step.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The non-transitory computer-readable storage medium according to <claim-ref idref="CLM-00023">claim 23</claim-ref>, wherein, in the determining step,
<claim-text>it is determined that the received drawing instruction can be combined with the drawing instructions already stored if the received drawing instruction does not use a background and an attribute of the received drawing instruction is the same as that of the drawing instructions already stored,</claim-text>
<claim-text>it is determined that the received drawing instruction can be combined with the drawing instructions already stored if the received drawing instruction uses a background, an image according to the received drawing instruction does not overlap images according to the drawing instructions already stored, and an attribute of the received drawing instruction is the same as that of the drawing instructions already stored,</claim-text>
<claim-text>it is determined that the received drawing instruction cannot be combined with the drawing instructions already stored if the received drawing instruction uses a background and an image according to the received drawing instruction overlaps images according to the drawing instructions already stored, and</claim-text>
<claim-text>it is determined that the received drawing instruction cannot be combined with the drawing instructions already stored if the received drawing instruction uses a background, an image according to the received drawing instruction does not overlap images according to the drawing instructions already stored, and an attribute of the received drawing instruction is not the same as that of the drawing instructions already stored.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The non-transitory computer-readable storage medium according to <claim-ref idref="CLM-00023">claim 23</claim-ref>, wherein, in the determining step,
<claim-text>whether or not the received drawing instruction uses a background is determined if the drawing instructions already stored exist.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. A print processing method of receiving drawing instructions and generating print job data for a printer, the method comprising the steps of:
<claim-text>receiving a drawing instruction;</claim-text>
<claim-text>determining whether or not the received drawing instruction can be combined with drawing instructions already stored based on whether the received drawing instruction uses a background or not; and</claim-text>
<claim-text>generating combined print job data by combining the received drawing instruction and the drawing instructions already stored and outputting the combined print job data to the printer, when it is determined that the received drawing instruction can be combined in the determining step.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The print processing method according to <claim-ref idref="CLM-00026">claim 26</claim-ref>, wherein, in the determining step,
<claim-text>it is determined that the received drawing instruction can be combined with the drawing instructions already stored if the received drawing instruction does not use a background and an attribute of the received drawing instruction is the same as that of the drawing instructions already stored,</claim-text>
<claim-text>it is determined that the received drawing instruction can be combined with the drawing instructions already stored if the received drawing instruction uses a background, an image according to the received drawing instruction does not overlap images according to the drawing instructions already stored, and an attribute of the received drawing instruction is the same as that of the drawing instructions already stored,</claim-text>
<claim-text>it is determined that the received drawing instruction cannot be combined with the drawing instructions already stored if the received drawing instruction uses a background and an image according to the received drawing instruction overlaps images according to the drawing instructions already stored, and</claim-text>
<claim-text>it is determined that the received drawing instruction cannot be combined with the drawing instructions already stored if the received drawing instruction uses a background, an image according to the received drawing instruction does not overlap images according to the drawing instructions already stored, and an attribute of the received drawing instruction is not the same as that of the drawing instructions already stored.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. The print processing method according to <claim-ref idref="CLM-00026">claim 26</claim-ref>, wherein, in the determining step,
<claim-text>whether or not the received drawing instruction uses a background is determined if the drawing instructions already stored exist.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. A print processing apparatus adapted to receive drawing instructions and generate print job data for a printer, the print processing apparatus comprising:
<claim-text>a receiving unit adapted to receive a drawing instruction;</claim-text>
<claim-text>a determining unit adapted to determine whether or not the received drawing instruction can be combined with drawing instructions already stored based on whether the received drawing instruction uses a background or not; and</claim-text>
<claim-text>a generating unit adapted to generate combined print job data by combining the received drawing instruction and the drawing instructions already stored and outputting the combined print job data to the printer, when it is determined by the determining unit that the received drawing instruction can be combined.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00030" num="00030">
<claim-text>30. The print processing apparatus according to <claim-ref idref="CLM-00029">claim 29</claim-ref>, wherein, it is determined by the determining unit that the received drawing instruction can be combined with the drawing instructions already stored if the received drawing instruction does not use a background and an attribute of the received drawing instruction is the same as that of the drawing instructions already stored,
<claim-text>it is determined by the determining unit that the received drawing instruction can be combined with the drawing instructions already stored if the received drawing instruction uses a background, an image according to the received drawing instruction does not overlap images according to the drawing instructions already stored, and an attribute of the received drawing instruction is the same as that of the drawing instructions already stored,</claim-text>
<claim-text>it is determined by the determining unit that the received drawing instruction cannot be combined with the drawing instructions already stored if the received drawing instruction uses a background and an image according to the received drawing instruction overlaps images according to the drawing instructions already stored, and</claim-text>
<claim-text>it is determined by the determining unit that the received drawing instruction cannot be combined with the drawing instructions already stored if the received drawing instruction uses a background, an image according to the received drawing instruction does not overlap images according to the drawing instructions already stored, and an attribute of the received drawing instruction is not the same as that of the drawing instructions already stored.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00031" num="00031">
<claim-text>31. The print processing apparatus according to <claim-ref idref="CLM-00029">claim 29</claim-ref>, wherein, whether or not the received drawing instruction uses a background is determined by the determining unit if the drawing instructions already stored exist.</claim-text>
</claim>
<claim id="CLM-00032" num="00032">
<claim-text>32. An information processing apparatus comprising:
<claim-text>a obtaining unit adapted to obtain a drawing instruction; and</claim-text>
<claim-text>a generation unit adapted to combine a plurality of drawing instructions satisfying a predetermined condition obtained by the obtaining unit, and generate a print command including the combined drawing instructions,</claim-text>
<claim-text>wherein the generation unit combines the drawing instructions satisfying the predetermined condition when the drawing instructions do not use background.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00033" num="00033">
<claim-text>33. The information processing apparatus according to <claim-ref idref="CLM-00032">claim 32</claim-ref>,
<claim-text>wherein one drawing instruction in the plurality of drawing instructions is newly obtained by the obtaining unit and the other drawing instructions in the plurality of drawing instructions have been already stored, and</claim-text>
<claim-text>wherein the generation unit does not combine the one drawing instruction satisfying the predetermined condition with the other drawing instructions already stored when the one drawing instruction uses background and an image according to the one drawing instruction overlaps images according to the other drawing instructions already stored.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00034" num="00034">
<claim-text>34. The information processing apparatus according to <claim-ref idref="CLM-00032">claim 32</claim-ref>,
<claim-text>wherein one drawing instruction in the plurality of drawing instructions is newly obtained by the obtaining unit and the other drawing instructions in the plurality of drawing instructions have been already stored,</claim-text>
<claim-text>wherein the generation unit does not combine the one drawing instruction satisfying the predetermined condition with the other drawing instructions already stored when the one drawing instruction uses background and an image according to the one drawing instruction overlaps images according to the other drawing instructions already stored, and</claim-text>
<claim-text>wherein the generation unit combines the one drawing instruction satisfying the predetermined condition with the other drawing instructions already stored when the one drawing instruction uses background and the image according to the one drawing instruction does not overlap the images according to the other drawing instructions already stored.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00035" num="00035">
<claim-text>35. An non-transitory computer-readable storage medium storing a computer-executable program for causing a computer to perform a method comprising the steps of:
<claim-text>obtaining a drawing instruction; and</claim-text>
<claim-text>generating a print command by combining a plurality of drawing instructions satisfying a predetermined condition obtained in the obtaining step, the print command including the combined drawing instructions,</claim-text>
<claim-text>wherein, in the generating step, the plurality of drawing instructions satisfying the predetermined condition are combined when the drawing instructions do not use background.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00036" num="00036">
<claim-text>36. The non-transitory computer-readable storage medium according to <claim-ref idref="CLM-00035">claim 35</claim-ref>,
<claim-text>wherein one drawing instruction in the plurality of drawing instructions is newly obtained in the obtaining step and the other drawing instructions in the plurality of drawing instructions have been already stored, and</claim-text>
<claim-text>wherein, in the generating step, the one drawing instruction satisfying the predetermined condition is not combined with the other drawing instructions already stored when the one drawing instruction uses background and an image according to the one drawing instruction overlaps images according to the other drawing instructions already stored.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00037" num="00037">
<claim-text>37. The non-transitory computer-readable storage medium according to <claim-ref idref="CLM-00035">claim 35</claim-ref>,
<claim-text>wherein one drawing instruction in the plurality of drawing instructions is newly obtained in the obtaining step and the other drawing instructions in the plurality of drawing instructions have been already stored,</claim-text>
<claim-text>wherein, in the generating step, the one drawing instruction satisfying the predetermined condition is not combined with the other drawing instructions already stored when the one drawing instruction uses background and an image according to the one drawing instruction overlaps images according to the other drawing instructions already stored, and</claim-text>
<claim-text>wherein, in the generating step, the one drawing instruction satisfying the predetermined condition is combined with the other drawing instructions already stored when the one drawing instruction uses background and the image according to the one drawing instruction does not overlap the images according to the other drawing instructions already stored.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00038" num="00038">
<claim-text>38. An information processing method comprising the steps of:
<claim-text>obtaining a drawing instruction; and</claim-text>
<claim-text>generating a print command by combining a plurality of drawing instructions satisfying a predetermined condition obtained in the obtaining step, the print command including the combined drawing instructions,</claim-text>
<claim-text>wherein, in the generating step, the plurality of drawing instructions satisfying the predetermined condition are combined when the drawing instructions do not use background.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00039" num="00039">
<claim-text>39. The information processing method according to <claim-ref idref="CLM-00038">claim 38</claim-ref>,
<claim-text>wherein one drawing instruction in the plurality of drawing instructions is newly obtained in the obtaining step and the other drawing instructions in the plurality of drawing instructions have been already stored, and</claim-text>
<claim-text>wherein, in the generating step, the one drawing instruction satisfying the predetermined condition is not combined with the other drawing instructions already stored when the one drawing instruction uses background and an image according to the one drawing instruction overlaps images according to the other drawing instructions already stored.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00040" num="00040">
<claim-text>40. The information processing method according to <claim-ref idref="CLM-00038">claim 38</claim-ref>,
<claim-text>wherein one drawing instruction in the plurality of drawing instructions is newly obtained in the obtaining step and the other drawing instructions in the plurality of drawing instructions have been already stored,</claim-text>
<claim-text>wherein, in the generating step, the one drawing instruction satisfying the predetermined condition is not combined with the other drawing instructions already stored when the one drawing instruction uses background and an image according to the one drawing instruction overlaps images according to the other drawing instructions already stored, and</claim-text>
<claim-text>wherein, in the generating step, the one drawing instruction satisfying the predetermined condition is combined with the other drawing instructions already stored when the one drawing instruction uses background and the image according to the one drawing instruction does not overlap the images according to the other drawing instructions already stored.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
