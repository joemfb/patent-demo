<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626971-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626971</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>11249044</doc-number>
<date>20051011</date>
</document-id>
</application-reference>
<us-application-series-code>11</us-application-series-code>
<us-term-of-grant>
<us-term-extension>1192</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>13</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>13</main-group>
<subgroup>12</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>13</main-group>
<subgroup>38</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>11</class>
<subclass>B</subclass>
<main-group>21</main-group>
<subgroup>10</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>710 74</main-classification>
<further-classification>710 33</further-classification>
<further-classification>369 4712</further-classification>
</classification-national>
<invention-title id="d2e53">Flash memory method and apparatus with single-press button response</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5754844</doc-number>
<kind>A</kind>
<name>Fuller</name>
<date>19980500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  6</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6955292</doc-number>
<kind>B2</kind>
<name>Nakamura et al.</name>
<date>20051000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>235375</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7136951</doc-number>
<kind>B2</kind>
<name>Deng et al.</name>
<date>20061100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710302</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2003/0196167</doc-number>
<kind>A1</kind>
<name>Dewar</name>
<date>20031000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715507</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2003/0221040</doc-number>
<kind>A1</kind>
<name>Yamada et al.</name>
<date>20031100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710313</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2004/0136224</doc-number>
<kind>A1</kind>
<name>Hamer et al.</name>
<date>20040700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>365145</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2004/0165211</doc-number>
<kind>A1</kind>
<name>Herrmann et al.</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  115</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2004/0229681</doc-number>
<kind>A1</kind>
<name>Romano</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>463 22</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2004/0252604</doc-number>
<kind>A1</kind>
<name>Johnson et al.</name>
<date>20041200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>369 4722</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2005/0160223</doc-number>
<kind>A1</kind>
<name>Chen et al.</name>
<date>20050700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711115</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>WO</country>
<doc-number>WO 2006000039</doc-number>
<kind>A1</kind>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
</us-citation>
</us-references-cited>
<number-of-claims>21</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>710 33</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>710 74</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>369 4712</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>8</number-of-drawing-sheets>
<number-of-figures>10</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60617256</doc-number>
<date>20041008</date>
</document-id>
</us-provisional-application>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Lee</last-name>
<first-name>Mike</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Dani</last-name>
<first-name>Faheem</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Brunnett</last-name>
<first-name>Don</first-name>
<address>
<city>Pleasanton</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Sinha</last-name>
<first-name>Prokash</first-name>
<address>
<city>Sammamish</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Lee</last-name>
<first-name>Mike</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Dani</last-name>
<first-name>Faheem</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Brunnett</last-name>
<first-name>Don</first-name>
<address>
<city>Pleasanton</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Sinha</last-name>
<first-name>Prokash</first-name>
<address>
<city>Sammamish</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>HolzerIPLaw, PC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Seagate Technology LLC</orgname>
<role>02</role>
<address>
<city>Cupertino</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Huson</last-name>
<first-name>Zachary K</first-name>
<department>2181</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A flash memory device apparatus and method is provided such that data or programming information is uploaded or downloaded between the flash memory device and a host, in response to a single-press of a button associated with the flash memory device. The system can facilitate a number of operations including saving an active window application or associated data, transferring media files to or from media players, providing device-specific and/or data-specific transfer of applications or data and/or providing protection of transferred data or applications.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="122.00mm" wi="139.95mm" file="US08626971-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="265.68mm" wi="181.53mm" file="US08626971-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="207.18mm" wi="154.01mm" file="US08626971-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="264.24mm" wi="170.35mm" file="US08626971-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="242.91mm" wi="158.07mm" file="US08626971-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="174.16mm" wi="144.95mm" file="US08626971-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="173.23mm" wi="113.03mm" file="US08626971-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="273.90mm" wi="196.93mm" file="US08626971-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="261.11mm" wi="105.58mm" file="US08626971-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading>
<p id="p-0002" num="0001">This application claims priority from U.S. Provisional Application Ser. No. 60/617,256 filed Oct. 8, 2004, which is incorporated herein by reference in its entirety.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0003" num="0002">The present invention is directed to a flash memory peripheral which can accommodate various data or programming transfers. In particular, the present invention is directed to a flash memory peripheral which communicates with a host for data or programming transfer(s) in response to a button press.</p>
<heading id="h-0003" level="1">BACKGROUND INFORMATION</heading>
<p id="p-0004" num="0003">Many computer peripherals are designed for user input, such as keyboards, mice and the like. Flash memory peripherals have typically been substantially passive, from the point of view of the host, in the sense that typical flash memory peripherals do not receive user input for initiating communication with the host. As used herein, a flash memory peripheral or device communicates directly with a host device such as via a USB connection, &#x201c;firewire&#x201d; connection, wireless connection or the like. It is believed that this typical configuration has led to the absence of a number of potentially useful implementations of flash memory peripherals. Accordingly, it would be useful to provide non-passive flash memory peripherals for performing functions in cooperation with a host device.</p>
<p id="p-0005" num="0004">One relatively popular application for flash memory has been in connection with portable media players such as portable Moving Pictures Experts Group (MPEG)-1 Audio Layer 3 (MP3) players, portable video players and the like. At least some of such devices can be coupled to a computer or other host device such as a Universal Serial Bus (USB) or other connection. Typically, an MP3 player will have user-activatible controls such as for selecting songs, adjusting volume and the like. However, such controls typically control the operation of the player and do not initiate functions in cooperation with the host such as downloading of &#x201c;content&#x201d;, e.g., MP3 files, video files, and the like. In at least some configurations, a download (from the host to the peripheral) of files is initiated by the host, in response to, e.g., keyboard or mouse activations (i.e., not in response to user activation of flash peripheral controls, if any). This is believed to represent an inconvenience to the user. Accordingly, it would be useful to provide a flash peripheral which can initiate a backup or download to itself, without the need to move to, or shift focus to, host input devices not associated with the flash peripheral. In this regard, it is believed useful to distinguish between data backup, which preserves a copy of desired files (e.g., in case the original file is corrupted) and synchronization, such as provided in programs like Microsoft&#xae; Briefcase which is used to synchronize files, e.g., modify a portable computer or personal digital assistant (PDA) with their counterparts on a main computer.</p>
<p id="p-0006" num="0005">User controls on an MP3 player, as well as user input devices of a host computer, typically require multiple steps or actions to perform a given function (e.g., moving a mouse pointer to a icon or menu item, clicking on a menu item, making sub-menu or other selections by moving the mouse pointer, confirming desired actions and the like). Such multiple-step requirements for a download or other action are typical for host devices such as computers which are designed to have the ability to perform, at a given time, many different functions (and, thus, typically require multiple steps to select and/or configure the desired function). Controls that are configured to require multiple actions, such as multiple button presses or other multiple steps are also typical for an MP3 player which is generally designed to permit selection among a wide range of options (such as selecting desired songs, volume levels and the like) while positioning the controls in a device which has a small physical size. Such multi-step controls are believed, however, to be inconvenient and time consuming, at least for some functions. Accordingly, it would be useful to provide a flash memory peripheral such that a download can be initiated from the peripheral without the need for multiple steps or actions.</p>
<p id="p-0007" num="0006">Some peripheral devices are configured to perform downloads and/or synchronize content with the host, automatically upon connection to the host (such as by a USB connector or the like). One example is the &#x201c;auto-sync&#x201d; function provided for the Apple iPOD&#xae;. Although &#x201c;auto-sync&#x201d; can be discontinued by making appropriate selections, it is believed that at least some users prefer greater (or at least different) control over download operations and/or may wish to initiate download other than upon connection. Accordingly, it would be useful to provide a flash memory peripheral which does not automatically initialize download upon connection.</p>
<heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0008" num="0007">The present invention includes a recognition of the existence, source and nature of problems found in previous approaches, including those described herein.</p>
<p id="p-0009" num="0008">The present invention relates to an apparatus, to a computer or other electronic system which can use or do use such apparatus, and to methods involving such apparatus. The apparatus provides for a (preferably small or portable) peripheral or other electronic device, generally referred to herein as a flash memory peripheral or device. The flash memory peripheral or device is provided with an associated button, or other user-activatable input. As used herein, a button which is associated with a peripheral is more closely associated with the peripheral device than with the host device, such as being rigidly or flexibly mounted on, or connected to, the peripheral device. Typically, activation of a button associated with a peripheral device will be received and/or processed by the peripheral device before the button press is communicated (if at all) to the host device. The peripheral is capable of single-press functionality, including as described in greater detail below. As used herein, a button, coupled to a device, is capable of a given single-press function if the device is configured (or can be configured or modified) to achieve the given function (possibly in cooperation with a host) in response to a single-press of the button. So long as the device has, or can have, single-press function capability, the capability is not negated or diminished merely because the capability is foregone in favor of a multiple press protocol requirement or the like.</p>
<p id="p-0010" num="0009">According to one facet of the invention, in response to a single-press of a flash device button, a communication is sent to the host which results in data being downloaded, from the host to the flash device. Preferably, the flash device communicates directly (other than possibly using, e.g., a substantially passive communication component such as a USB hub, a router and the like) with the host. Preferably, no further input (other than the flash device button single-press) from the user is needed in order to identify the data that is to be downloaded. For example, in one embodiment, the system (host, flash device and programming thereof) responds to a single-press of the flash device button by downloading the currently-active file. For example, if the button is pressed while a PowerPoint&#xae; presentation is in the active window of a host computer, the data file which is currently the basis for such presentation is downloaded to the flash device. Similarly, if the flash device button is pressed while, e.g., Excel&#xae; is the active window of a host computer, the active data file for the displayed spreadsheet will be downloaded. If the button is pressed while a Microsoft&#xae; Word document is open, the document in the active window of the Word&#xae; program will be downloaded, and so forth. Other manners of selecting the file or files to be downloaded can also be used in various embodiments of the present invention including, e.g., downloading the most-recently opened music files, the most-recently saved video files and the like.</p>
<p id="p-0011" num="0010">According to one aspect of the invention, in response to a single-press of a flash device button, a communication is sent to the host device which results in downloading of one or more files which are specific to the type of flash device. For example, when the flash device is an MP3 player, the system can be configured to download the most recent MP3 file(s), whereas, if the flash device is a video player, the system can be configured to download the active video data file(s), and the like.</p>
<p id="p-0012" num="0011">In one facet of the invention, the system can be configured such that, in response to a single-press of a button associated with a flash memory device, communication is established with the host, resulting in an uploading (from the flash device to the host device) of programming information, such as one or more executable files, configuration data, and the like, typically of a type which can be executed on the host. In some configurations, the programming information or applications are data-specific or device-specific. For example, a flash memory device can be provided with pre-loaded music files, which, in response to a single button press, not only uploads the files to the host but also uploads a music player application (preferably, after checking to determine that the application was not already present on the host). In another aspect, a converse configuration is provided in which, in response to a single-press of a button, not only is data downloaded (from the host to the flash device) but also one or more programming files such as an application file, configuration data, and the like, is sent to the flash device. In this way, it is convenient for, e.g., a presenter to provide an audience member with a copy, not only of the presentation, but a viewer or application which will permit the user to view the presentation on his or her own host device. Preferably, the programming information is data and/or device-specific such that, e.g., if a video file is downloaded, the system also downloads, from the host, a video &#x201c;viewer&#x201d; application. In one aspect, if the flash device is, e.g., an MP3 player, the system downloads to the flash device, not only MP3 data but also programming data such as configuration information (e.g., specifying sound playback quality, volume level and the like).</p>
<p id="p-0013" num="0012">According to one facet of the invention, in response to a single-press of a memory device button, communication is sent to the host which results not only in download, to the flash memory device, of data and/or programming information, but also provides for data security (such as encryption and/or setting &#x201c;read only&#x201d; flags) with respect to the downloaded data (without the need for further user input, in order to achieve such security).</p>
<p id="p-0014" num="0013">According to one aspect of the invention, a flash memory device apparatus and method is provided such that data or programming information is uploaded or downloaded between the flash memory device and a host, in response to a single-press of a button associated with the flash memory device. The system can facilitate a number of operations including saving an active window application or associated data, transferring media files to or from media players, providing device-specific and/or data-specific transfer of applications or data and/or providing protection of transferred data or applications.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram showing selected components of a system that can be used in accordance with embodiments of the present invention;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 2</figref> is a diagrammatic representation of a perspective view of a flash memory device according to an embodiment of the present invention;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 3</figref> is a flowchart of a process showing response to a single-press of a button associated with a flash memory device according to an embodiment of the present invention;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 4</figref> is a flowchart of a process for download of data in response to a single-press of a button associated with a flash memory device according to an embodiment of the present invention;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart of a process for uploading data in response to a single-press of a button associated with a flash memory device according to an embodiment of the present invention;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 6</figref> is a flowchart of a process for uploading dictation data in response to a single-press of a button associated with a flash memory dictaphone according to an embodiment of the present invention;</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 7</figref> is a flowchart of a process for downloading MP3 files in response to a single-press of a button associated with a flash memory MP3 player according to an embodiment of the present invention;</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 8</figref> is a flowchart of a process for uploading data-specific programming information in response to a single-press of a button associated with a flash memory device according to an embodiment of the present invention;</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 9</figref> is a flowchart of a process for providing security of downloaded data in response to a single-press of a button associated with a flash memory device according to an embodiment of the present invention; and,</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 10</figref> is a flowchart of a process for using data of the type downloaded and protected by the process illustrated in <figref idref="DRAWINGS">FIG. 9</figref>, according to an embodiment of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 1</figref> depicts, in schematic block diagram form, an apparatus which can be used in connection with an embodiment of the present invention, including a host <b>112</b> and a flash memory peripheral <b>114</b>, such as a flash drive and the like, connected by a universal serial bus (USB) cable <b>116</b>. Host <b>112</b>, depicted in <figref idref="DRAWINGS">FIG. 1</figref>, can be substantially any personal computer provided with communications capability, such as USB connection capabilities and programming for performing functions as described below. Although <figref idref="DRAWINGS">FIG. 1</figref> depicts a cable <b>116</b> used to connect the flash memory peripheral <b>114</b> to the host <b>112</b>, the present invention can also be used in situations where the flash memory peripheral <b>114</b> is configured to be directly connected to the USB connector of the host <b>112</b>, i.e., without an intervening cable <b>116</b>.</p>
<p id="p-0026" num="0025">Preferably, this device is configured and programmed such that it will recognize the communication connection and/or automatically (e.g., upon connection) load appropriate drivers (possibly uploaded from the flash memory device) and perform other procedures as may be necessary for operating in conjunction with the flash memory device. Those skilled in the art will understand how to provide and use host device programming or operating systems to implement such procedures.</p>
<p id="p-0027" num="0026">Selected components of the host <b>112</b> and peripheral <b>114</b> are depicted to assist in description of the system and its use. The flash memory peripheral <b>114</b> contains a flash memory <b>118</b> typically with a memory controller <b>122</b>. The flash memory <b>118</b> is typically provided on a single integrated circuit (IC) and enclosed, with a number of other components, in a housing <b>212</b>, such as depicted in <figref idref="DRAWINGS">FIG. 2</figref>. The housing <b>212</b> has coupled to it a user activatible input such as a button <b>214</b> and, in the depicted embodiment, a USB connector <b>216</b>. In the embodiment depicted in <figref idref="DRAWINGS">FIG. 2</figref>, a signaling component, such as a controllable LED <b>218</b>, is mounted on the housing <b>212</b>.</p>
<p id="p-0028" num="0027">The flash memory <b>118</b> is substantially controlled by a controller such as a programmable microcontroller <b>124</b> which can access microinstructions, e.g., from a memory such as program ROM <b>126</b>. In the depicted embodiment, microcontroller <b>124</b> can receive an interrupt signal <b>128</b> initiated by a press of the button <b>214</b> with conditioning, de-bounce and buffering <b>132</b>. The microcontroller <b>124</b> can control the LED <b>218</b>, e.g., via an LED interface <b>134</b>. A USB interface IC <b>136</b> communicates with the microcontroller <b>124</b> and, in the depicted embodiment, can send and receive data to and from the flash memory <b>118</b>. The USB interface IC maintains proper values for the voltage and ground lines of the USB output and outputs digital signals (control signals or data and the like) on first and second differential signal lines of the USB system, via a USB port <b>138</b> and USB connector <b>216</b>.</p>
<p id="p-0029" num="0028">Although the depicted flash memory peripheral differs from prior devices in a number of ways including in the provision and/or functioning of the button <b>214</b> and responses thereto, those of skill in the art will understand how to fabricate, select, connect and/or program components appropriate for use in connection with the present invention, at least after understanding the present disclosure.</p>
<p id="p-0030" num="0029">According to one embodiment of the invention, and as illustrated in <figref idref="DRAWINGS">FIG. 3</figref>, in response to a single-press of the button <b>214</b> on the flash memory device <b>212</b>, which has been placed in communication with the host <b>314</b>, the information regarding the occurrence of the button-press is communicated to the host <b>316</b>. The host, in response, sends one or more data files associated with the currently-active window in the host, to the flash peripheral <b>318</b> which then stores the data files in the flash memory <b>322</b>. In order to complete items <b>316</b>, <b>318</b>, <b>322</b>, which follow the single-press <b>312</b>, no further user input is necessary other than that single-press of the button. It is, of course, possible to provide or allow additional user input following the single-press.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 4</figref> depicts a process generally in accordance with the embodiment of <figref idref="DRAWINGS">FIG. 3</figref>, but in greater detail. In the depiction of <figref idref="DRAWINGS">FIG. 4</figref>, following the single-press of the button <b>312</b> an interrupt signal (<figref idref="DRAWINGS">FIG. 1</figref>, <b>128</b>) is sent to the microcontroller <b>416</b>. The microcontroller <b>124</b> is configured to respond to the button-type interrupt by accessing a particular entry point in the program ROM <b>126</b> and to begin executing instructions from that point <b>418</b>. The microcontroller's execution of these instructions results in the microcontroller <b>124</b> causing the USB interface <b>136</b> to output an event signal <b>422</b> over the USB connector <b>216</b> and cable <b>116</b>. Preferably, communication of the event signal and other USB communications disclosed herein are in compliance with USB standards established by USB Implementators Forum Incorporated (USB-IF, at www.usb.org).</p>
<p id="p-0032" num="0031">In the embodiment depicted in <figref idref="DRAWINGS">FIG. 4</figref>, the event signal sent over the cable <b>116</b> is held in a buffer of the head controller interface (HCI) <b>146</b> until this particular USB channel is polled <b>424</b>. Upon such polling, the event signal is operated on by (e.g., causes execution of) the appropriate (USB) device driver (software) <b>426</b> resulting in a stream of instructions <b>152</b> which are executed by the microprocessor <b>142</b>. As will be understood by those with skill in the art, the host typically includes a binding database which associates certain applications and/or files with various events and/or file types. In one embodiment, in response to receipt of a button-press event, the driver or other software sends a query to the binding database. The query is used to determine the identity of software which is bound to the &#x201c;button press&#x201d; event and/or device identification information. In some embodiments, the query may result in returning the name of an associated script file which may include, e.g., indications of drives, directories, sub-directories, files, file types and the like.</p>
<p id="p-0033" num="0032">By way of executing instructions <b>152</b>, the microprocessor identifies which data files are associated with the currently-running application or, in the parlance of Microsoft Windows&#xae; applications, data files associated with the active window <b>428</b>. In this way, the system of <figref idref="DRAWINGS">FIG. 4</figref> provides for downloading particular files without the need for additional input from the user. Other embodiments can provide for other file selection such as downloading those files which were most-recently stored, files with particular file extensions or types, and the like.</p>
<p id="p-0034" num="0033">In one embodiment, the system is configured to download not only data files but (preferably conditionally) download programming information such as executable applications. For example, in one embodiment, if one or more Microsoft&#xae; Word data files are associated with the active window, the system will also download, to the flash device, one or more applications which can execute or operate on such data files. For example, a Microsoft&#xae; Word viewer application may be sent to the flash device. In this way the user can, later, upload, to a host, not only the data files but, if needed, applications for viewing or operating on the data files. This embodiment is believed to be particularly useful when the application is one which is not commonly available on personal computers (or other appropriate host devices) and/or when the user is expected to be unable or unwilling to select and launch appropriate applications in connection with the stored or downloaded data.</p>
<p id="p-0035" num="0034">In the depicted embodiment, the microprocessor <b>142</b> sends a &#x201c;ready to send&#x201d; signal, e.g., over the USB cable <b>116</b>, to the flash peripheral <b>432</b>. The flash peripheral configures the USB interface <b>136</b> and flash memory <b>118</b> to receive and store the data to be sent by the host and outputs a &#x201c;ready to receive&#x201d; signal <b>434</b> over the USB cable <b>116</b> to the host. The flash peripheral also controls the LED <b>218</b> to display a &#x201c;receiving&#x201d; signal <b>436</b>. A single LED <b>218</b> can be used to indicate various statuses such as using different flashing patterns, different colors and the like. Alternatively, other display devices can be used such as multiple LED's, liquid crystal displays and the like. Preferably, use of the flash memory device provides substantially no displays on the computer screen or, any such displays are preferably sized and positioned to provide little, if any, interference with other operations the user may be performing on the computer.</p>
<p id="p-0036" num="0035">In response to receiving the &#x201c;ready to receive&#x201d; signal, the host <b>112</b> starts streaming data packets <b>438</b> containing the previously-identified data files <b>428</b>. Preferably, the streaming of data packets is provided with checksum, cyclical redundancy check (CRC) or other error checking. Some errors may initiate a re-send or a correction. In the depicted embodiment, certain errors, such as unrecoverable errors, result in the peripheral <b>114</b> causing the LED <b>218</b> to display an error signal <b>442</b>. The packet data is received, buffered as necessary, and stored in flash memory of the flash memory peripheral <b>444</b>. Upon successful transfer of the identified data files, a &#x201c;successful transfer&#x201d; signal is displayed on the LED <b>448</b>.</p>
<p id="p-0037" num="0036">In one embodiment, following a successful download of data, aspects of the flash device (such as program ROM entry points) are changed in order to modify the function which results from pressing the user-activatable button. For example, in one embodiment, following a successful download of a PowerPoint presentation and viewer, the flash memory device is modified so that the next time the button is pressed, the data now stored on the flash device, and the associated viewer program will be uploaded to a host device and executed thereon. An example in which this configuration might be useful would be in the context of a sales presentation when a potential customer wishes to have a copy of a PowerPoint&#xae; sales presentation. The presenter can insert an appropriately configured flash memory &#x201c;stick&#x201d; (www.memorystick.org) or similar device into the USB port of his or her computer and press the button, causing the currently-active PowerPoint&#xae; presentation and appropriate viewer to be loaded onto the memory stick which then has its button function reconfigured. The potential customer retains the memory stick and, when the customer connects the memory stick to his own computer and presses the button, the PowerPoint&#xae; presentation (and, if needed, a viewer) is uploaded (and preferably executed on the viewer) so that the potential customer can re-view the presentation.</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 5</figref> depicts an embodiment which is similar in some respects to <figref idref="DRAWINGS">FIG. 4</figref>, but which provides for data to be uploaded (from the peripheral to the host) rather than downloaded. In the depiction of <figref idref="DRAWINGS">FIG. 5</figref>, steps <b>314</b>, <b>312</b>, <b>416</b>, <b>418</b>, <b>422</b>, <b>424</b> and <b>426</b> are substantially similar to corresponding steps of <figref idref="DRAWINGS">FIG. 4</figref>. In <figref idref="DRAWINGS">FIG. 5</figref>, processing of the event signal causes the microprocessor to configure its own memory and/or disk <b>154</b>, <b>156</b> to receive and store data to be sent by the flash peripheral <b>512</b>. In the depicted embodiment, the host <b>112</b> is configured to provide for direct data transfer <b>162</b> between the USB connector (and HCI) and memory or disk. The present invention can also be used in systems which do not provide for direct data transfer. The microprocessor <b>142</b> sends a &#x201c;ready&#x201d; signal over the USB to the flash peripheral <b>514</b>. Preferably, the flash peripheral causes the LED <b>218</b> to display a &#x201c;sending&#x201d; signal <b>516</b> and starts streaming data packets (preferably with error checking) over the USB cable <b>116</b> to the host <b>518</b>. In response to at least certain errors, such as unrecoverable errors, the peripheral LED <b>218</b> (and/or the host) displays an &#x201c;error&#x201d; signal <b>522</b>. The packets are received, buffered as necessary, and stored in the host memory or disk <b>524</b> and, upon completion of transfer, a &#x201c;successful transfer&#x201d; signal is preferably displayed on the peripheral LED <b>526</b> (and/or the host).</p>
<p id="p-0039" num="0038">Embodiments of the present invention can include processing by the host <b>112</b> in place of, or in addition to, storage on the memory or hard disk. In the embodiment of <figref idref="DRAWINGS">FIG. 6</figref>, the flash memory peripheral is a flash memory dictaphone <b>612</b>. In this embodiment, after dictation is recorded <b>614</b> and a USB or other communication connection to the host computer is established <b>616</b>, a single-press <b>618</b> of a button associated with the dictaphone causes the dictation audio file to be uploaded to the host <b>620</b>, preferably with appropriate signals displayed on the dictaphone LED or other display device <b>622</b>. In the depicted embodiment, the host processes the dictation file, e.g., with speech recognition software, and stores the transcription of the dictation as a text file <b>624</b>. Uploading and transcription <b>620</b>, <b>624</b> are provided without the need for any user input other than the single-press of the transcribe button. Optionally, the text file can be downloaded back to the dictaphone <b>626</b>. Preferably, the dictaphone LED or other display device provides an indication of successful transcription and/or download <b>628</b>.</p>
<p id="p-0040" num="0039">As depicted in <figref idref="DRAWINGS">FIG. 7</figref>, it is possible to download device-specific files, i.e., to select the files to be downloaded on the basis of the type of flash memory device. In the example of <figref idref="DRAWINGS">FIG. 7</figref>, the flash memory device is an MP3 player, placed in communication with the host. As will be clear to those with skill in the art, corresponding processes can be used for other types of flash devices such as downloading video files when the flash device is a video player, downloading photographs when the flash device is a photographic &#x201c;frame&#x201d; display, and the like. In the depicted embodiment, a single-press of a &#x201c;download&#x201d; button on the MP3 player <b>714</b> is communicated to the host <b>716</b>. The host identifies the device as an MP3 player, e.g., based on device or type identification data sent when the device is first connected to the host, or as part of the button-press event notice <b>718</b>. In the depicted embodiment, the host requests the size of available storage on the MP3 player <b>722</b>. If desired, the system can be configured such that, in the event less than a predetermined amount of MP3 player memory is available, a predetermined amount of currently-used flash memory (selected, e.g., on the basis of oldest-recordings, least-frequently-played recording, or the like) will be designated as available for overwriting. The host then sends MP3 files having a cumulative size of up to the available storage, preferably giving preference to certain MP3 files such as those most-recently stored on the host <b>724</b>. The MP3 files are then stored in the flash memory of the MP3 player <b>726</b>. Preferably, an LED or other signaling component provides an indication after MP3 download is complete <b>728</b>.</p>
<p id="p-0041" num="0040">In the embodiment depicted in <figref idref="DRAWINGS">FIG. 8</figref>, the response to a single-press of a button includes an upload (from the flash device to the host) of one or more applications or other programming information which is preferably data-specific (configured for or compatible with the data) with respect to data on the flash device. In the depicted embodiment, in response to a single-press of the button <b>312</b> of a flash device which is in communication with the host <b>314</b>, the button press event is communicated to the host <b>316</b>. The host determines the type of applications which are useful for the data which is to be uploaded. For example, the host may receive information about the type of data to be uploaded from the flash device, either as part of the initial button event notification or in response to a query sent from the host to the flash device. As one example, if the data on the flash device which is to be uploaded includes files with a file extension indicating that they are Microsoft&#xae; PowerPoint presentations, then the host can determine that the type of application usable for the data includes such things as versions of Microsoft&#xae; PowerPoint or versions of Microsoft&#xae; PowerPoint Viewer. Although <figref idref="DRAWINGS">FIG. 8</figref> is directed to a method in which the uploaded application is data-specific, it is also possible to provide embodiments in which uploaded applications are device-specific (e.g., such that if the host determines that the flash device is a dictaphone, the uploaded application might be a transcription or speech recognition application.)</p>
<p id="p-0042" num="0041">After the host has determined the type of application <b>812</b>, the host then determines which, if any, applications are on the flash device and are available for upload (or, in some embodiments, for direct execution without prior storage on the host) <b>814</b>. Preferably, the applications available for upload from the flash device are compared to those applications which may already be available on the host. This comparison is performed in order to determine if the up-loadable applications are, according to one or more criteria, &#x201c;better&#x201d; (such as being more recent versions, being versions better adapted to the data, etc.) compared to those applications already on the host. If the up-loadable applications are not better than the applications already available on the host <b>816</b>, then the host applications are used <b>818</b>. Otherwise, the applications on the flash memory are uploaded (or streamed for direct execution). Optionally, if permitted, the applications uploaded from the flash device are stored on the host for possible future use <b>822</b>. For example, &#x201c;albums&#x201d; of MP3 music stored on a flash memory stick can be included, on the stick, along with an MP3 player. Thus, merely by playing purchased music albums, the user will automatically have the most recent versions of MP3 players made available on the host.</p>
<p id="p-0043" num="0042">Optionally, configuration information is uploaded from the flash device for use in connection with the application which will play or display the data (or otherwise execute). For example, a sales representative who, by a single-press of a button on, e.g., a memory stick, provides a customer with a memory stick containing a PowerPoint&#xae; sales presentation preferably also provides on the memory stick (without the need for further input beyond the single-press) configuration data to ensure that the PowerPoint&#xae; application is appropriately configured (e.g., so that the sales presentation is accurately reproduced when the customer plays it back on his or her own host device, which will typically be different from the host device). Examples of configuration information include items which are typically set using the operating system (screen resolution, color resolution, and the like), as well as items that are set via the application (such as slide show display rate, and the like). Preferably, any current or previous configuration data residing on the host is stored before the new configuration data is applied (in order to permit the host device to be reconfigured to its prior state after using the uploaded configuration data).</p>
<p id="p-0044" num="0043">Provided the data (which is to be executed by the applications) is not read-only or otherwise protected, the data is then merely uploaded from the flash device, e.g., and stored on the host disk <b>828</b>. However, if the data on the flash device is read-only data or is otherwise protected, the manner of transfer to the host must be appropriately handled. For example, if the system is configured such that read-only data cannot be copied to the host disk, one option will be to stream the data to the host for use by the application <b>832</b>, i.e., without prior storage of the (entire) data file on the host. Depending upon the type of data security provided for the data on the flash device, it may be possible to make one or more copies of the data for storage, e.g., on the host disk, possibly with the requirement that the copied data itself be designated as &#x201c;read-only.&#x201d; In some embodiments, the uploaded application will be especially configured or designed to provide appropriate operation on the host device (view-only, one-time decryption and the like) for particular types of data protection.</p>
<p id="p-0045" num="0044">The data which is uploaded or streamed from the flash device is operated on (e.g., such as by playing, displaying, editing, transcribing, etc.) using either the uploaded application <b>822</b> or one or more applications already available on the host <b>818</b>. At the end of the playback or other execution (or, optionally, upon closing the application) the old configuration data is restored <b>836</b>.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 9</figref> provides or illustrates an embodiment providing for security in the downloaded data. In this embodiment, following a single-press of a button <b>312</b> on a flash peripheral which has been placed in communication with the host <b>314</b>, the button press is communicated to the host <b>316</b>. The host identifies the data which is to be downloaded <b>912</b> using any of various processes, including as described above. The host then sends the identified data to the flash device <b>914</b>. The flash device stores the data while providing a type of data security or protection, in this case, setting a &#x201c;read-only&#x201d; flag which identifies the data as &#x201c;read-only&#x201d; data. Various other types of data or levels of data protection can also be used in embodiments of the present invention including other types of flags such as write-once flags, copy-once flags, copy-N flags, various types and/or levels of encryption and the like.</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 10</figref> shows how read-only data, e.g., as provided according to the process of <figref idref="DRAWINGS">FIG. 9</figref>, can be used. According to <figref idref="DRAWINGS">FIG. 9</figref>, following the single-press of a button <b>312</b> on a flash peripheral in communication with the host <b>314</b>, not only is the button press communicated to the host but also the &#x201c;read-only&#x201d; flag or flags applicable to the data to be uploaded <b>1012</b>. In response, the host opens an appropriate (e.g., data reading or viewing) application <b>1014</b>. This application will be appropriate for (or will be configured to be appropriate for) treatment of &#x201c;read-only&#x201d; data. For example, if the data file is a read-only Microsoft&#xae; Word file, the host could open a Microsoft&#xae; Word Viewer application which has (or which has been configured to have) no capability to edit, save or copy a data file. The flash device then begins streaming data to the host which &#x201c;operates&#x201d; on the data (such as displaying the data) without making a permanent copy on the host of the data which is streamed <b>1016</b>. As will be clear to those with skill in the art, depending on the type of data and/or type of application, it may be necessary to place a copy of some or all of the data streamed from the flash device, in, for example, random access memory (RAM) of the host, e.g., with the restriction that the data will not be permanently stored following the &#x201c;read-only&#x201d; use of the data (for example, will not be normally stored on the host disk drive). For example, if the uploaded data is a single photograph and the application is a photo-viewing application, the viewing of the photograph is normally performed in conjunction with storing the entire photographic data in host RAM, video memory or the like.</p>
<p id="p-0048" num="0047">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="98pt" align="left"/>
<colspec colname="2" colwidth="105pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" rowsep="1">TABLE I</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Involvement of Host</entry>
<entry>Involvement of Flash Device</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>None</entry>
<entry>All files downloaded in</entry>
</row>
<row>
<entry/>
<entry/>
<entry>response to button press </entry>
</row>
<row>
<entry/>
<entry/>
<entry>are protected</entry>
</row>
<row>
<entry/>
<entry/>
<entry>(&#x201c;read-only&#x201d; or otherwise)</entry>
</row>
<row>
<entry/>
<entry>Host encrypts or otherwise </entry>
<entry>None</entry>
</row>
<row>
<entry/>
<entry>protects all data </entry>
<entry/>
</row>
<row>
<entry/>
<entry>sent to flash device in </entry>
<entry/>
</row>
<row>
<entry/>
<entry>response to button press</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Host performs the type</entry>
<entry>&#x201c;Button-press event&#x201d; message </entry>
</row>
<row>
<entry/>
<entry>or object of encryption </entry>
<entry>(or subsequent message to host) </entry>
</row>
<row>
<entry/>
<entry>specified by flash device</entry>
<entry>tells host which files (or </entry>
</row>
<row>
<entry/>
<entry/>
<entry>file types) to encrypt</entry>
</row>
<row>
<entry/>
<entry/>
<entry>and/or how to encrypt </entry>
</row>
<row>
<entry/>
<entry/>
<entry>(or otherwise protect) (may </entry>
</row>
<row>
<entry/>
<entry/>
<entry>need to upload encryption</entry>
</row>
<row>
<entry/>
<entry/>
<entry>application, keys, etc.)</entry>
</row>
<row>
<entry/>
<entry>Host sends message </entry>
<entry>Flash device performs </entry>
</row>
<row>
<entry/>
<entry>to flash device</entry>
<entry>type or object of</entry>
</row>
<row>
<entry/>
<entry>specifying which files </entry>
<entry>protection specified by host</entry>
</row>
<row>
<entry/>
<entry>(and/or how) to&#x201c;read-only&#x201d; </entry>
<entry/>
</row>
<row>
<entry/>
<entry>(or otherwise) protect</entry>
<entry/>
</row>
<row>
<entry/>
<entry>downloaded files</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0049" num="0048">The examples of <figref idref="DRAWINGS">FIGS. 9 and 10</figref> illustrate a situation in which substantially all of the data security protection measures occur on, or within, the flash device (namely setting the read flag) and the host is not involved in establishing or creating the security procedures (other than selecting and/or executing applications which are capable of properly handling &#x201c;read-only&#x201d; type data). Table I indicates, in its first entry, this type of a system, in which the host has substantially no involvement in creation of the security for the stored data and all of the data security is created or initiated substantially by the flash memory device. Table I illustrates several other possible approaches (not necessarily exhaustively). For example, Table I, illustrates a situation in which the flash device performs substantially no part of the creation of the security features, and in which the host device encrypts (or otherwise protects) all data sent to the flash device in response to a single button press. Table I also illustrates examples of shared security. In one example, the flash device is configured such that the &#x201c;button press event&#x201d; message (or a subsequent message sent to the host) tells the host which files (or file types) to encrypt (or otherwise protect), and/or how to encrypt the information. In some configurations, the flash device may also need to upload the associated information such as encryption applications, keys and the like. The host, in response, performs the type of encryption, or selects the files to be encrypted, as specified by the flash device. Table I also provides an example in which, following the single-press, the host sends a message to the flash device specifying which files to flag as &#x201c;read-only&#x201d; or how to otherwise protect downloaded files. The flash device performs the type of protection specified and/or provides protection for the files identified by the host.</p>
<p id="p-0050" num="0049">A number of variations and modifications of the invention can also be used. In general, it is possible to use some aspects of the invention without using others. For example, it is possible to provide for data or programming transfer in response to a single-press of a flash memory device button without providing for error checking or correction. It is possible to provide for flash memory devices with single-button functionality which do not have an LED or similar display device. Although a number of processes have been described, illustrating various embodiments of the invention, in general, it is possible to use embodiments of the present invention in connection other processes or in connection with processes which have more, fewer or different steps then those illustrated.</p>
<p id="p-0051" num="0050">Although embodiments have been described in which flash memory forms the sole mass storage in a peripheral for storing data or transferable programming, it is possible to provide embodiments of the present invention in which the peripheral includes other mass storage or data storage components in addition to flash memory. As used herein, transferable programming includes programs or portions thereof which can be transferred to the host device for execution thereon (as opposed to, e.g., programming which is used or executed only on the peripheral device).</p>
<p id="p-0052" num="0051">Although the system of <figref idref="DRAWINGS">FIG. 1</figref> illustrates a host in which a microprocessor <b>142</b> uses polling <b>144</b> of the host controller interface (HCI) <b>146</b>, the present invention can also be used in contexts where the host uses an interrupt system.</p>
<p id="p-0053" num="0052">In some embodiments, the selection of which data is to be transferred can be made in a number of different ways. According to one approach, the host's device driver <b>148</b> always selects files according to a single criterion (most recent files, files of a certain type, etc.) whenever it receives a flash device button-press notice. In another embodiment, the device driver is configured to select any of several different types of files depending upon one or more selection factors. Examples of selection factors can include such things as the type of flash device, types of files or applications which may already be present on the flash device (e.g., downloading PowerPoint, data files if a PowerPoint Viewer is present on the flash device), time of day (e.g., performing a hard disk backup if local time is between midnight and 4:00 a.m.), and the like. Selection factors may be factors which are known or determined solely by the host (such as time of day) or may be selection factors which are obtained from the flash device (such as types of files already present) either obtained in response to a query sent from the host to the flash device as part of the execution of the device driver, or included in the initial button notification sent from the flash device to the host.</p>
<p id="p-0054" num="0053">In one embodiment, one or more device drivers (or parameters to be used by the device driver such as one or more file name extensions) may be stored on the flash device and sent to the host, at least if appropriate device drivers are not already present on the host, as part of, or following, transmittal of the button press event notice.</p>
<p id="p-0055" num="0054">In one embodiment, the host device obtains information identifying the files and/or versions already present on the flash device, and avoids downloading files which are already present.</p>
<p id="p-0056" num="0055">Although, embodiments have been provided describing a USB communication channel, other types of communication can be used including an IEEE1394 (fire wire) channel and Ethernet channel, a wireless communication link and the like.</p>
<p id="p-0057" num="0056">Preferably, embodiments are provided which permit the flash memory device to be connected and/or disconnected without having to shut down or reboot the computer (&#x201c;hot swapping&#x201d;).</p>
<p id="p-0058" num="0057">Although, it is possible to provide embodiments in which the button on the flash memory device is dedicated to a single function, it is also possible to provide embodiments in which there is substantial flexibility in use of the button such as by allowing the user to select or program the function to be performed in response to the button push.</p>
<p id="p-0059" num="0058">A number of types of buttons can be used including electromechanical push buttons, heat sensitive switches, membrane switches, piezoelectric switches, proximity switches, heat sensing switches, touch screens, voice activation systems, biometric sensors and the like. Although embodiments of the present invention have described positioning a button or other user input device substantially rigidly coupled to the chassis or body of the flash memory device, it is also possible to associate a button or other external or other user input device with the flash memory device including, e.g., providing a button or other user input device which is flexibly connected such as by a ribbon connector, cable or the like, providing a wireless link, and the like.</p>
<p id="p-0060" num="0059">In one embodiment, the function of the button may be changed or modified prior to successful completion of a download or upload such as to provide a modified function during a download or upload. For example, the flash memory device can be configured such that if the button is pressed during a download or upload operation (e.g., as indicated by the LED) such button press will result in aborting the download or upload.</p>
<p id="p-0061" num="0060">In light of the above description a number of advantages of the present invention can be seen. The present invention can avoid certain types of user inconveniences, including those associated with the need to perform multiple steps or actions in order to achieve functions such as downloading or uploading data or programming information.</p>
<p id="p-0062" num="0061">The present invention can provide greater control compared to corresponding devices or processes which initiate functions upon insertion or coupling of a peripheral device. The present invention can provide for user convenience in the backup or copying of host files, downloading of content to flash-based player or viewer devices, data-specific and/or device specific transfer of applications and/or data and the provision of data security.</p>
<p id="p-0063" num="0062">The present invention can minimize impact on ongoing computer operations such as reducing or avoiding the need for occupying display screen windows or otherwise occupying space on the display screen, during, or as part of, operations involving the flash device. The present invention involves a relatively rapid transfer of data and/or programming information (e.g., compared with a CD-based backup) and can avoid the need for inserting, labeling and/or locating multiple disks.</p>
<p id="p-0064" num="0063">The present invention, in various embodiments, includes components, methods, processes, systems and/or apparatus substantially as depicted and described herein, including various embodiments, sub-combinations, and subsets thereof. Those with skill in the art will understand how to make and use the present invention after understanding the present disclosure. The present invention, in various embodiments, includes providing the devices and processes in the absence of items not depicted and/or described herein or in various embodiments hereof, including in the absence of such items as may have been used in previous devices or processes, e.g., for improving performance, achieving ease of implementation and/or reducing cost of implementation. The present invention includes items which are novel, and terminology adapted from previous and/or analogous technologies, for convenience in describing novel items or processes, do not necessarily retain all aspects of conventional usage of such terminology.</p>
<p id="p-0065" num="0064">The foregoing discussion of the invention has been presented for purposes of illustration and description. The foregoing is not intended to limit the invention to the forms or form disclosed herein. Although the description of the invention has included description of one or more embodiments and certain variations and modifications, other variations and modifications are within the scope of the invention, e.g., as may be within the skill and knowledge of those in the art, after understanding the present disclosure. It is intended to obtain rights which include alternative embodiments to the extent permitted, including alternate, interchangeable and/or equivalent structures, functions, ranges or steps to those claimed, whether or not such alternate, interchangeable and/or equivalent structures, functions, ranges or steps are disclosed herein, and without intending to publicly dedicate any patentable subject matter.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. Apparatus, comprising:
<claim-text>a flash memory device, configured to communicate with a host computing device over a communications link;</claim-text>
<claim-text>a user-activatable button mounted on said flash memory device;</claim-text>
<claim-text>wherein, in response to a single-press of said button, an active file associated with an active window on said host computing device is saved to flash memory of said flash memory device, without the need for user input, other than said single-press, in order to achieve saving of said active file.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. Apparatus, as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said flash memory device includes a signaling component mounted thereon, controlled by said flash memory device to indicate status of saving said active file.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. Apparatus, as claimed in <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein said signaling component comprises at least a first light emitting diode (LED).</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. Apparatus, as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said communications link comprises a universal serial bus connection.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. Apparatus, as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said flash memory device is configured to set a read-only flag for data downloaded from said host, without the need for user input in addition to said single-press of said button.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. Apparatus, as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said flash memory device includes an indicator for indicating that said flash memory device is configured for downloading of a host's active file.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. Apparatus, as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said flash memory device performs error checking on data downloaded from said host computing device.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. Apparatus, as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein saving of said active file is aborted if said active file is already present on said flash memory device.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. Apparatus, as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said flash memory stores at least a first driver which, when uploaded, can be used by either said host computing device or another host computing device to determine response to a press of said user-activatable button.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. Apparatus, as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said flash memory device comprises a memory stick.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. Apparatus, comprising:
<claim-text>a flash memory device, configured to communicate with a host computing device over a communications link; and</claim-text>
<claim-text>a user-activatable button mounted on said flash memory device;</claim-text>
<claim-text>wherein, in response to a single-press of said button, one or more active files associated with an active window on said host computing device are saved to flash memory of said flash memory device and provided with data protection without the need for user input, other than said single-press, in order to achieve said data protection.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. Apparatus, as claimed in <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein said one or more files are provided with data protection by setting at least a first read-only flag in said flash memory device.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. Apparatus, as claimed in <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein said flash memory device includes a signaling component mounted thereon, controlled by said flash memory device, to indicate status of said data protection.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. Apparatus, as claimed in <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein said flash memory device includes an indicator for indicating that said flash memory device is configured for download with data protection.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. Apparatus, as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said active file comprises a file displayed in an active window of the host computing device.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. Apparatus, as claimed in <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein at least one of said one or more active files comprises a file displayed in an active window of the host computing device.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. Apparatus, as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein in response to the single-press of said button, the active file is provided with data protection without the need for user input by setting at least a first read-only flag in said flash memory device.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. Apparatus, as claimed in <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein:
<claim-text>if the host computing device is displaying or recently displayed a spreadsheet file through a spreadsheet program, the active file comprises that spreadsheet file;</claim-text>
<claim-text>if the host computing device is displaying or recently displayed a document file through a document program, the active file comprises that document file;</claim-text>
<claim-text>if the host computing device is displaying or recently displayed a presentation file through a presentation program, the active file comprises that presentation file;</claim-text>
<claim-text>if the host computing device is displaying or recently displayed a video file through a video playing program, the active file comprises that video file;</claim-text>
<claim-text>if the host computing device is displaying or recently displayed an audio file through an audio playing program, the active file comprises that audio file; and</claim-text>
<claim-text>if the host computing device is displaying or recently displayed an image file through an imaging program, the active file comprises that image file.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. Apparatus, as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the host computing device comprises a microprocessor and operating system configured to execute applications and receive user input.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. An apparatus comprising:
<claim-text>a memory device configured to communicate with a host computing device over a communications link;</claim-text>
<claim-text>a user activated button mounted on the memory device;</claim-text>
<claim-text>wherein, in response to a single press of the user activated button, an active file associated with an active window on the host computing device is transferred to the memory device, without the need for additional user input.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the active file and one or more executable files configured to execute the active file on the host computing device are saved to flash memory of the flash memory device in response to the single-press of the button.</claim-text>
</claim>
</claims>
</us-patent-grant>
