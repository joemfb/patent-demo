<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627011-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627011</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13756333</doc-number>
<date>20130131</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>12</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>13</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>13</main-group>
<subgroup>28</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>711133</main-classification>
</classification-national>
<invention-title id="d2e51">Managing metadata for data in a copy relationship</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>7124128</doc-number>
<kind>B2</kind>
<name>Springer et al.</name>
<date>20061000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>  1  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7472312</doc-number>
<kind>B2</kind>
<name>Jarvis et al.</name>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7529776</doc-number>
<kind>B2</kind>
<name>Li et al.</name>
<date>20090500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7546412</doc-number>
<kind>B2</kind>
<name>Ahmad et al.</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711112</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>7734580</doc-number>
<kind>B2</kind>
<name>Lahiri et al.</name>
<date>20100600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7873878</doc-number>
<kind>B2</kind>
<name>Belluomini et al.</name>
<date>20110100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2004/0260735</doc-number>
<kind>A1</kind>
<name>Martinez et al.</name>
<date>20041200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707204</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2006/0106971</doc-number>
<kind>A1</kind>
<name>Mahar et al.</name>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2009/0183145</doc-number>
<kind>A1</kind>
<name>Hu et al.</name>
<date>20090700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2009/0300298</doc-number>
<kind>A1</kind>
<name>Ash et al.</name>
<date>20091200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711156</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2010/0191925</doc-number>
<kind>A1</kind>
<name>Blount et al.</name>
<date>20100700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2012/0254547</doc-number>
<kind>A1</kind>
<name>Benhase et al.</name>
<date>20121000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00013">
<othercit>L F. Cabrera, et al., &#x201c;QuickSilver Distributed File Services: An Architecture for Horizontal Growth&#x201d;, IEEE, 1988, pp. 1-15.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00014">
<othercit>&#x201c;Expanding Track State Possibilities of Global Metedata Tracks to Improve Access&#x201d;, IP.com, No. IPCOM000124563D, Apr. 28, 2005, pp. 1-2.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00015">
<othercit>B. Dufrasne, et al., &#x201c;IMB System Storage DS8800 Architecture and Implementation&#x201d;, IBM Corporation, Jan. 2011, IBM document No. SG24-8886-00, pp. 1-434.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00016">
<othercit>Preliminary Amendment filed Jan. 31, 2012, pp. 7, for U.S. Appl. No. 13/077,840, filed Mar. 31, 2011 by inventors M.T. Benhase, et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00017">
<othercit>NOA dated Aug. 6, 2013, pp. 20, for U.S. Appl. No. 13/077,840, filed Mar. 31, 2011 by inventors M.T. Benhase, et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>24</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>711133</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>8</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>13077840</doc-number>
<date>20110331</date>
</document-id>
<parent-status>PENDING</parent-status>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>13756333</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20130145100</doc-number>
<kind>A1</kind>
<date>20130606</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<orgname>International Business Machines Corporation</orgname>
<address>
<city>Armonk</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Benhase</last-name>
<first-name>Michael T.</first-name>
<address>
<city>Tucson</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Brown</last-name>
<first-name>Theresa M.</first-name>
<address>
<city>Tucson</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Gupta</last-name>
<first-name>Lokesh M.</first-name>
<address>
<city>Tucson</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Li</last-name>
<first-name>Suguang</first-name>
<address>
<city>Tucson</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="005" designation="us-only">
<addressbook>
<last-name>Lipets</last-name>
<first-name>Mark L.</first-name>
<address>
<city>Tucson</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="006" designation="us-only">
<addressbook>
<last-name>Mellgren</last-name>
<first-name>Carol S.</first-name>
<address>
<city>Tucson</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="007" designation="us-only">
<addressbook>
<last-name>Todd</last-name>
<first-name>Kenneth W.</first-name>
<address>
<city>Tucson</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Victor</last-name>
<first-name>David W.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<orgname>Konrad Raynes Davda &#x26; Victor LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>International Business Machines Corporation</orgname>
<role>02</role>
<address>
<city>Armonk</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Bradley</last-name>
<first-name>Matthew</first-name>
<department>2182</department>
</primary-examiner>
<assistant-examiner>
<last-name>Goldschmidt</last-name>
<first-name>Craig</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Provided is a method for managing metadata for data in a copy relationship copied from a source storage to a target storage. Information is maintained on a copy relationship of source data in the source storage and target data in the target storage. The source data is copied from the source storage to the cache to copy to target data in the target storage indicated in the copy relationship. Target metadata is generated for the target data comprising the source data copied to the cache. An access request to requested target data comprising the target data in the cache is processed and access is provided to the requested target data in the cache. The target metadata for the requested target data in the target storage is discarded in response to determining that the requested target data in the cache has not been destaged to the target storage.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="163.83mm" wi="165.95mm" file="US08627011-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="244.77mm" wi="178.14mm" file="US08627011-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="219.20mm" wi="145.46mm" file="US08627011-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="242.23mm" wi="150.62mm" file="US08627011-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="246.72mm" wi="194.82mm" file="US08627011-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="191.60mm" wi="138.43mm" file="US08627011-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="171.11mm" wi="141.65mm" file="US08627011-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This patent application is a continuation of U.S. patent application Ser. No. 13/077,840, filed on Mar. 31, 2011, which patent application is incorporated herein by reference in its entirety.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">1. Field of the Invention</p>
<p id="p-0004" num="0003">The present invention relates to a computer program product, system, and method for managing metadata for data in a copy relationship.</p>
<p id="p-0005" num="0004">2. Description of the Related Art</p>
<p id="p-0006" num="0005">In a storage environment, source volumes may be mirrored to target volumes to provide redundant copies of data. The source and target volumes may be in different storage devices to provide further redundancy. A point-in-time copy replicates data in a manner that appears instantaneous and allows a host to continue accessing the source volume while actual data transfers to the copy volume are deferred to a later time. The point-in-time copy appears instantaneous because complete is returned to the copy operation in response to generating the relationship data structures without copying the data. The point-in-time copy relationships that are immediately established in response to the point-in-time copy command include a bitmap or other data structure indicating the location of blocks in the volume at either the source volume or the copy volume.</p>
<p id="p-0007" num="0006">Point-in-time copy techniques, such as the IBM FlashCopy&#xae; (FlashCopy is a registered trademark of International Business Machines, Corp. or &#x201c;IBM&#x201d;), typically defer the transfer of the source volume tracks in the copy relationship to the corresponding target volume until a write operation is requested to that data block on the source volume. Data transfers may also proceed as a background copy process with minimal impact on system performance. Further, a source track in the copy relationship may be copied to the corresponding target track in the copy relationship in response to a read request to the corresponding target track.</p>
<p id="p-0008" num="0007">A command to withdraw the copy relationship may be submitted. To implement a copy relationship withdraw operation, the target metadata for all the target volume tracks in the copy relationship is discarded in the target storage system and any target tracks in the copy relationship, modified or unmodified, residing in cache, are demoted, i.e., discarded. As part of the copy relationship withdraw operation, access to the target volume is quiesced until all the metadata for the target volume in the target storage is discarded. Following the withdraw operation, the target metadata for a requested target track needs to be rebuilt when the target track is subsequently requested because all the metadata for the target volume in the target storage was discarded during the copy relationship withdraw operation.</p>
<p id="p-0009" num="0008">The target metadata for the target volume is discarded to prevent a mismatch of the target metadata data in the target storage and the target tracks described by the metadata. This mismatch may occur if at the time of the withdraw operation, target metadata for modified target tracks in cache is destaged to the target storage before the modified target tracks. For this reason, during the copy withdraw operation, all target metadata in the volume is discarded to avoid this mismatch of the target storage having target metadata having information that is inconsistent with the corresponding target tracks in the target storage.</p>
<p id="p-0010" num="0009">There is a need in the art for improved techniques for managing metadata in the storage system and cache.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0011" num="0010">Provided is a method for managing metadata for data in a copy relationship copied from a source storage to a target storage. Information is maintained on a copy relationship of source data in the source storage and target data in the target storage. The source data is copied from the source storage to the cache to copy to target data in the target storage indicated in the copy relationship. Target metadata is generated for the target data comprising the source data copied to the cache. An access request to requested target data comprising the target data in the cache is processed and access is provided to the requested target data in the cache. A determination is made as to whether the requested target data in the cache has been destaged to the target storage. The target metadata for the requested target data in the target storage is discarded in response to determining that the requested target data in the cache has not been destaged to the target storage.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an embodiment a computing environment.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 2</figref> illustrates an embodiment of copy relation information.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an embodiment of operations to copy source data to target data in a copy relationship.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 4</figref> illustrates an embodiment of operations to process a write request to target data.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an embodiment of operations to destage target data in a copy relationship to target storage.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an embodiment of operations to process a read request to target data in a copy relationship.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 7</figref> illustrates an embodiment of operations performed when an access request to target data completes.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 8</figref> illustrates an embodiment of operations performed to process a request to withdraw a copy relationship.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an embodiment of a storage server <b>2</b> coupled to a source storage <b>4</b><i>a </i>and a target storage <b>4</b><i>b</i>. The storage server <b>2</b> includes a processor <b>6</b> and a memory <b>8</b> having an Input/Output (I/O) manager <b>10</b>, copy relationship information <b>12</b>, a modified data structure <b>14</b>, and a cache <b>16</b>. The copy relationship information <b>12</b> provides a relationship information for each instance of a copy operation to copy source data <b>18</b><i>a </i>in the source storage <b>4</b><i>a </i>to target data <b>18</b><i>b </i>in the target storage <b>4</b><i>b</i>. The target and source data <b>18</b><i>a</i>, <b>18</b><i>b </i>specified for the copy relationships <b>12</b> may comprise tracks, logical block addresses (LBAs), volumes, or any other units of data known in the art. The I/O manager <b>10</b> manages the copying of source data <b>18</b><i>a </i>to target data <b>18</b><i>b </i>as part of a copy relationship <b>12</b>, and manages I/O access to the target storage <b>4</b><i>b </i>from a host <b>22</b>, connected to the server over network <b>20</b>. The source <b>4</b><i>a </i>and target <b>4</b><i>b </i>storages may further maintain source metadata <b>24</b><i>a </i>and target metadata <b>24</b><i>b</i>, respectively, providing metadata for the source <b>18</b><i>a </i>and target <b>18</b><i>b </i>data. Metadata includes information describing the contents of the source and target data for which the metadata is provided, such as a format of the data, number of records, record size, content of the data, etc. One unit of metadata <b>24</b><i>a</i>, <b>24</b><i>b </i>may provide information for multiple units of source <b>18</b><i>a </i>and target data <b>18</b><i>b</i>, such as for units of tracks, blocks, etc. The source <b>18</b><i>a </i>and target data <b>18</b><i>b </i>may comprise customer data.</p>
<p id="p-0021" num="0020">The source data <b>18</b><i>a </i>and metadata <b>24</b><i>a </i>and target data <b>18</b><i>b </i>and metadata <b>24</b><i>b </i>may be maintained in the source <b>4</b><i>a </i>and target <b>4</b><i>b </i>storages, respectively, and also in the cache <b>16</b>. In the cache <b>16</b>, the data <b>18</b><i>a</i>, <b>18</b><i>b </i>and metadata <b>20</b><i>a</i>, <b>20</b><i>b </i>may be modified and then subsequently destaged to the storages <b>4</b><i>a</i>, <b>4</b><i>b </i>for persistent storage.</p>
<p id="p-0022" num="0021">The storage server <b>2</b> may receive read and write requests directed to the target storage <b>4</b><i>b </i>from a host <b>20</b> over a network <b>22</b>. The modified data structure <b>14</b> indicates target data in the cache <b>16</b> that has been modified and needs to be destaged to the target storage <b>4</b><i>b</i>. The modified target data <b>18</b><i>b </i>in the cache may comprise updates from the host <b>22</b> to the target data <b>18</b><i>b </i>or source data <b>18</b><i>a </i>copies to the target data <b>18</b><i>b </i>transferred to the cache <b>16</b> as part of a background copy operation for the copy relationship <b>12</b>.</p>
<p id="p-0023" num="0022">The storages <b>4</b><i>a</i>, <b>4</b><i>b </i>may comprise storage media implemented in one or more storage devices known in the art, such as interconnected hard disk drives (e.g., configured as a DASD, RAID, JBOD, etc.), solid state storage devices (e.g., EEPROM (Electrically Erasable Programmable Read-Only Memory), flash memory, flash disk, storage-class memory (SCM)), electronic memory, magnetic tape media, etc. The memory <b>8</b> and cache <b>16</b> may be comprised of one or more volatile or non-volatile memory devices known in the art.</p>
<p id="p-0024" num="0023">In <figref idref="DRAWINGS">FIG. 1</figref>, the I/O manager <b>10</b> is shown as a software program in the memory <b>8</b> executed by the processor <b>6</b>. In an alternative embodiment, the I/O manager <b>10</b> may be implemented in a hardware component, such as dedicated integrated circuit, e.g., Application Specific Integrated Circuit (ASIC), expansion card, etc., in the storage server <b>100</b> or implemented as a combination of hardware or software.</p>
<p id="p-0025" num="0024">The network <b>22</b> may comprise a Wide Area Network (WAN), Local Area Network (LAN), Storage Area Network (SAN), wireless network, the Internet, an Intranet, peer-to-peer network, etc. The storage server <b>2</b> may connect to the storages <b>4</b><i>a </i>and <b>4</b><i>b </i>with a direct connection or cable, over the Internet or through multiple switches and cables in a WAN, SAN, LAN, etc.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 2</figref> illustrates an embodiment of an instance of copy relationship information <b>50</b> maintained in the copy relationships <b>12</b> for one copy relationship including a copy relationship identifier (ID) <b>52</b> identifying a relation of source data <b>54</b>, such as a volume or group of tracks or blocks, to copy to target data <b>56</b>, and a copy data structure <b>58</b> indicating portions of the source data <b>54</b>, such as tracks, blocks, extents, copied to the target data <b>56</b> in the copy relationship <b>50</b>. The copy relationship <b>50</b> may indicate specific source data units <b>54</b> and corresponding target data units <b>56</b> to which the source data units are copied.</p>
<p id="p-0027" num="0026">The copy relationship <b>50</b> may represent a logical or virtual copy operation, such as FlashClopy, where the initial copy operation is completed instantaneously upon creating the copy relationship <b>50</b> data structures, and the source data <b>54</b> may be copied in the background over to the target data <b>56</b> as part of background copy processes that seek to minimize impact on the server <b>2</b> resources and performance.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an embodiment of operations performed by the I/O manager <b>10</b> to initiate an operation to copy the source data <b>54</b> in a copy relationship <b>50</b> to the corresponding target data <b>56</b>. Upon initiating (at block <b>100</b>) the operation to copy the source data <b>54</b> to the target data <b>56</b>, the I/O manager <b>10</b> determines (at block <b>102</b>) from the copy data structure <b>12</b> source data to copy to target data, such as sectors, tracks, blocks, etc. The I/O manager <b>10</b> then copies (at block <b>104</b>) the determined source data <b>54</b> to the cache <b>16</b> to write to the corresponding target data <b>56</b> in the copy relationship <b>50</b>. The I/O manager <b>10</b> builds (at block <b>106</b>) target metadata <b>24</b><i>b </i>for the corresponding target data in the cache <b>16</b> comprising the source data <b>54</b> copied into the cache <b>16</b>. The built target metadata <b>24</b><i>b </i>may include metadata for the target data <b>18</b><i>b </i>subject to the specific operation and additional units of target data, such as tracks, blocks, sectors, etc. The I/O manager <b>10</b> indicates (at block <b>108</b>) in the modified data structure <b>14</b> the corresponding target data <b>56</b> in the cache <b>16</b> updated from the source data <b>54</b> to make eligible for destaging to the target storage <b>4</b><i>b </i>as part of a subsequent destage process.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 4</figref> illustrates an embodiment of operations performed by the I/O manager <b>10</b> to process a write request from the host <b>22</b>. Upon receiving (at block <b>120</b>) a write request having write data to write to target data <b>18</b><i>b</i>, the I/O manager <b>10</b> writes (at block <b>122</b>) the write data to the cache <b>16</b> as target data <b>18</b><i>b </i>and builds (at block <b>124</b>) target metadata <b>24</b><i>b </i>for the updated target data <b>18</b><i>b </i>in the cache <b>16</b>. The I/O manager <b>10</b> further updates (at block <b>126</b>) the modified data structure <b>14</b> to indicate that the target data <b>18</b><i>b </i>in the cache <b>16</b> is modified so that the modified target data and its built metadata <b>24</b><i>b </i>are eligible for destaging as part of a subsequent destage operation.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an embodiment of operations performed by the I/O manager <b>10</b> to destage target data <b>18</b><i>b </i>in the cache <b>16</b> in a copy relationship <b>50</b> to the target storage <b>4</b><i>b</i>. Upon initiating (at block <b>150</b>) the destage operation, if (at block <b>152</b>) the destage operation succeeded, then the I/O manager <b>10</b> updates (at block <b>156</b>) the modified data structure <b>14</b> to indicate that the destaged target data is not modified and updates (at block <b>158</b>) the copy data structure <b>12</b> to indicate the corresponding source data <b>54</b> in the copy relationship <b>50</b> has been copied or mirrored to the corresponding target data <b>56</b>. Once the target data <b>18</b><i>b </i>has been modified with more current data, then even if the corresponding source data <b>54</b> was not previously copied over, there is no need to copy over since the target data <b>56</b> has been updated. If (at block <b>152</b>) the destage did not complete, then the I/O manager <b>10</b> discards (at block <b>154</b>) the target metadata <b>24</b><i>b </i>for the target data <b>18</b><i>b </i>whose destage failed. This discarding of the target metadata <b>24</b><i>b </i>for the failed destage will prevent a situation from occurring where the rebuilt target metadata <b>24</b><i>b </i>is destaged, but the corresponding target data <b>18</b><i>b </i>is not destaged, and is prevented from being destaged due to a copy relationship withdrawal operation which demotes the target data <b>18</b><i>b </i>in the cache <b>16</b> while leaving the target metadata <b>24</b><i>b </i>for the demoted target data <b>18</b><i>b </i>not destaged in the target storage <b>4</b><i>b. </i></p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an embodiment of operations performed by the I/O manager <b>10</b> to process (at block <b>200</b>) a read request to target data <b>56</b> in a copy relationship <b>50</b> in the target storage <b>4</b><i>b</i>. If (at block <b>202</b>) the requested target data <b>18</b><i>b </i>is in the cache <b>16</b> and if (at block <b>204</b>) there is valid target metadata <b>24</b><i>b </i>for the requested target data <b>56</b> in the cache <b>16</b>, then the I/O manager <b>10</b> provides (at block <b>208</b>) read access to the requested target data <b>18</b><i>b </i>and its metadata <b>24</b><i>b </i>in the cache <b>16</b>. If (at block <b>202</b>) there is not valid target metadata <b>24</b><i>b </i>for the requested target data <b>18</b><i>b </i>in the cache <b>16</b>, then the I/O manager <b>10</b> generates (at block <b>206</b>) target metadata <b>24</b><i>b </i>for the requested target data <b>18</b><i>b </i>in the cache <b>16</b> and control then proceeds to block <b>208</b> to provide read access to the target data <b>18</b><i>b </i>and its metadata <b>24</b><i>b. </i></p>
<p id="p-0032" num="0031">If (at block <b>202</b>) the requested target data <b>18</b><i>b </i>is not in the cache <b>16</b> and if (at block <b>210</b>) the copy data structure <b>58</b> indicates that the corresponding source data <b>54</b> for the requested target data <b>18</b><i>b </i>or <b>56</b> in the copy relationship <b>50</b> has not been copied to the target storage <b>4</b><i>b</i>, then the I/O manager <b>10</b> copies (at block <b>212</b>) the corresponding source data to the requested target data <b>18</b><i>b </i>in the cache <b>16</b>. Control then proceeds to block <b>206</b> to build target metadata <b>24</b><i>b </i>and provide read access to the requested target data <b>18</b><i>b </i>in the cache <b>16</b>. If (at block <b>210</b>) the copy data structure <b>58</b> indicates that the corresponding source data <b>54</b> for the requested target data <b>18</b><i>b</i>, <b>56</b> in the copy relationship <b>50</b> has already been copied to the target storage <b>4</b><i>b</i>, then the I/O manager <b>10</b> stages (at block <b>214</b>) the requested target data from the target storage <b>4</b><i>b </i>into the cache <b>16</b>. If (at block <b>216</b>) the cache <b>16</b> already includes valid metadata <b>24</b><i>b </i>for the staged target data <b>18</b><i>b</i>, then read access is provided (at block <b>208</b>) to the target data <b>18</b><i>b </i>in the cache <b>16</b>. If (at block <b>216</b>) the cache <b>16</b> does not include the requested target data, then the I/O manager stages (at block <b>218</b>) the target metadata <b>24</b><i>b </i>for the requested target data <b>18</b><i>b </i>from the target storage <b>4</b><i>b </i>to the cache <b>16</b> and control proceeds to block <b>208</b> to provide read access to the requested target data <b>18</b><i>b </i>and its metadata <b>24</b><i>b </i>in the cache <b>16</b>.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 7</figref> illustrates an embodiment of operations performed by the I/O manager <b>10</b> to process metadata <b>24</b><i>b </i>for accessed target data <b>18</b><i>b </i>in the cache <b>18</b> after the access operation ends. Upon the access ending (at block <b>250</b>), but before the access completes, if (at block <b>252</b>) the access is a write, then the access request is ended, such as with an acknowledgment to the host <b>22</b> of write complete. If (at block <b>252</b>) the access is a read, then the I/O manager <b>10</b> determines (at block <b>254</b>) whether the accessed target data <b>18</b><i>b </i>was destaged. If so, then control ends, leaving the target metadata <b>24</b><i>b </i>for the accessed target data <b>18</b><i>b </i>in the cache <b>16</b>. If (at block <b>254</b>) the accessed target data was not destaged, then the I/O manager discards (at block <b>256</b>) the target metadata <b>24</b><i>b </i>for the requested target data in the target storage <b>4</b><i>b</i>. This discarding of the target metadata <b>24</b><i>b </i>prevents a mismatch if the target metadata <b>24</b><i>b </i>is destaged but the corresponding target data <b>18</b><i>b </i>cannot be destaged before the withdrawal of the copy relationship.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 8</figref> illustrates an embodiment of operations performed by the I/O manager <b>10</b> to process a request to withdraw a copy relationship. Upon receiving (at block <b>280</b>) a request to withdraw a copy relationship <b>50</b>, the I/O manager demotes, i.e., discards, (at block <b>282</b>) all the target data <b>18</b><i>b </i>in the cache <b>16</b> for the copy relationship <b>50</b> being withdrawn. For target data <b>18</b><i>b </i>indicated as modified in the cache <b>16</b> in the modified data structure <b>14</b>, the I/O manager <b>10</b> discards (at block <b>284</b>) the target metadata in the target storage <b>4</b><i>b </i>for the demoted/discarded modified target data <b>56</b> in the cache <b>16</b>. The copy relationship <b>50</b> is then indicated as withdrawn (at block <b>286</b>), which would also end any background copy operation of the source data <b>54</b> to the corresponding target data <b>56</b> in the target storage <b>4</b><i>b. </i></p>
<p id="p-0035" num="0034">With the embodiment of <figref idref="DRAWINGS">FIG. 8</figref>, the target metadata <b>24</b><i>b </i>in the target storage <b>4</b><i>b </i>is discarded in the event that the target metadata <b>24</b><i>b </i>was destaged to the target storage <b>4</b><i>b </i>before the target data in the cache <b>16</b> was discarded. If this operation was not performed, then the target metadata <b>24</b><i>b </i>destaged to the target storage <b>4</b><i>b </i>may not reflect the target data <b>18</b><i>b </i>in the target storage <b>4</b><i>b</i>, but instead reflect the discarded target data <b>18</b><i>b </i>in the cache <b>16</b>. Thus, discarding the target metadata in the target storage <b>4</b><i>b </i>prevents this mismatch of target metadata <b>24</b><i>b </i>and target data <b>18</b><i>b </i>in the storage <b>4</b><i>b. </i></p>
<p id="p-0036" num="0035">Described embodiments provide techniques for managing target metadata in the cache so as to limit the amount of target metadata that needs to be discarded if the copy relationship is withdrawn by discarding target metadata for requested target data in the cache that has not been destaged. In this way, the amount of target metadata that needs to be discarded at the time of the copy withdrawal operation is reduced to avoid delays that could adversely affect server performance because I/O activity to target storage data may be queisced during the time required to discard the target metadata as part of the copy withdrawal operation.</p>
<p id="p-0037" num="0036">The described operations may be implemented as a method, apparatus or computer program product using standard programming and/or engineering techniques to produce software, firmware, hardware, or any combination thereof. Accordingly, aspects of the embodiments may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a &#x201c;circuit,&#x201d; &#x201c;module&#x201d; or &#x201c;system.&#x201d; Furthermore, aspects of the embodiments may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.</p>
<p id="p-0038" num="0037">Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system, apparatus, or device.</p>
<p id="p-0039" num="0038">A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.</p>
<p id="p-0040" num="0039">Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.</p>
<p id="p-0041" num="0040">Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the &#x201c;C&#x201d; programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).</p>
<p id="p-0042" num="0041">Aspects of the present invention are described above with reference to flowchart illustrations and/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and/or block diagrams, and combinations of blocks in the flowchart illustrations and/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks.</p>
<p id="p-0043" num="0042">These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function/act specified in the flowchart and/or block diagram block or blocks.</p>
<p id="p-0044" num="0043">The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks.</p>
<p id="p-0045" num="0044">The variables &#x201c;a&#x201d; and &#x201c;b&#x201d; when used to represent a variable number of an element may indicate any number of instances of the element, and may indicate different integer numbers when used with different elements or when used with different instances of the same element. For instance variables &#x201c;a&#x201d; and &#x201c;b&#x201d; used to indicate a number of a source storage and target storage may indicate the same or different number of these elements.</p>
<p id="p-0046" num="0045">The terms &#x201c;an embodiment&#x201d;, &#x201c;embodiment&#x201d;, &#x201c;embodiments&#x201d;, &#x201c;the embodiment&#x201d;, &#x201c;the embodiments&#x201d;, &#x201c;one or more embodiments&#x201d;, &#x201c;some embodiments&#x201d;, and &#x201c;one embodiment&#x201d; mean &#x201c;one or more (but not all) embodiments of the present invention(s)&#x201d; unless expressly specified otherwise.</p>
<p id="p-0047" num="0046">The terms &#x201c;including&#x201d;, &#x201c;comprising&#x201d;, &#x201c;having&#x201d; and variations thereof mean &#x201c;including but not limited to&#x201d;, unless expressly specified otherwise.</p>
<p id="p-0048" num="0047">The enumerated listing of items does not imply that any or all of the items are mutually exclusive, unless expressly specified otherwise.</p>
<p id="p-0049" num="0048">The terms &#x201c;a&#x201d;, &#x201c;an&#x201d; and &#x201c;the&#x201d; mean &#x201c;one or more&#x201d;, unless expressly specified otherwise.</p>
<p id="p-0050" num="0049">Devices that are in communication with each other need not be in continuous communication with each other, unless expressly specified otherwise. In addition, devices that are in communication with each other may communicate directly or indirectly through one or more intermediaries.</p>
<p id="p-0051" num="0050">A description of an embodiment with several components in communication with each other does not imply that all such components are required. On the contrary a variety of optional components are described to illustrate the wide variety of possible embodiments of the present invention.</p>
<p id="p-0052" num="0051">Further, although process steps, method steps, algorithms or the like may be described in a sequential order, such processes, methods and algorithms may be configured to work in alternate orders. In other words, any sequence or order of steps that may be described does not necessarily indicate a requirement that the steps be performed in that order. The steps of processes described herein may be performed in any order practical. Further, some steps may be performed simultaneously.</p>
<p id="p-0053" num="0052">When a single device or article is described herein, it will be readily apparent that more than one device/article (whether or not they cooperate) may be used in place of a single device/article. Similarly, where more than one device or article is described herein (whether or not they cooperate), it will be readily apparent that a single device/article may be used in place of the more than one device or article or a different number of devices/articles may be used instead of the shown number of devices or programs. The functionality and/or the features of a device may be alternatively embodied by one or more other devices which are not explicitly described as having such functionality/features. Thus, other embodiments of the present invention need not include the device itself.</p>
<p id="p-0054" num="0053">The illustrated operations of <figref idref="DRAWINGS">FIGS. 3-8</figref> show certain events occurring in a certain order. In alternative embodiments, certain operations may be performed in a different order, modified or removed. Moreover, steps may be added to the above described logic and still conform to the described embodiments. Further, operations described herein may occur sequentially or certain operations may be processed in parallel. Yet further, operations may be performed by a single processing unit or by distributed processing units.</p>
<p id="p-0055" num="0054">The foregoing description of various embodiments of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description, but rather by the claims appended hereto. The above specification, examples and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention, the invention resides in the claims herein after appended.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method, comprising:
<claim-text>maintaining information on a copy relationship of source data in a source storage and target data in a target storage;</claim-text>
<claim-text>copying source data from the source storage to a cache to copy to target data in the target storage indicated in the copy relationship;</claim-text>
<claim-text>generating target metadata for the target data comprising the source data copied to the cache;</claim-text>
<claim-text>processing an access request to requested target data comprising the target data in the cache;</claim-text>
<claim-text>providing access to the requested target data in the cache;</claim-text>
<claim-text>determining whether the requested target data in the cache has been destaged to the target storage; and</claim-text>
<claim-text>discarding the target metadata for the requested target data in the target storage in response to determining that the requested target data in the cache has not been destaged to the target storage.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the determining whether the requested target data in the cache has been destaged and discarding the target metadata are performed after the access request is processed.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the request comprises a read request.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, further comprising:
<claim-text>receiving a subsequent read request to the requested target data after completing the processed read request;</claim-text>
<claim-text>rebuilding target metadata for the requested target data for the subsequent read request;</claim-text>
<claim-text>providing access to the requested target data in the cache for the subsequent read request;</claim-text>
<claim-text>determining whether the requested target data in the cache has been destaged to the target storage; and</claim-text>
<claim-text>discarding the rebuilt target metadata for the requested target data in the target storage in response to determining that the requested target data in the cache has not been destaged to the target storage.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the request comprises a read request, further comprising:
<claim-text>retaining the target metadata for the requested target data in the cache to destage to the target storage in response to determining that the requested target data has been destaged to the target storage.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the request comprises a read request, further comprising:
<claim-text>receiving a request to withdraw the copy relationship; and</claim-text>
<claim-text>demoting the target data in the cache in the copy relationship in response to receiving the request to withdraw the copy relationship.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the request comprises a read request, further comprising:
<claim-text>receiving a write request to write data to the target data in the copy relationship;</claim-text>
<claim-text>updating the target data in the cache with the write data;</claim-text>
<claim-text>generating target metadata for the updated target data in the cache; and</claim-text>
<claim-text>indicating in a data structure the updated target data in the cache, wherein the indication is removed in response to destaging the updated target data and the metadata for the updated target data to the target storage.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the operations further comprise:
<claim-text>receiving a request to withdraw the copy relationship;</claim-text>
<claim-text>demoting the target data in the cache indicated in the copy relationship in response to receiving the request to withdraw the copy relationship; and</claim-text>
<claim-text>discarding the target metadata data in the target storage for the target data indicated in the data structure.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the operations further comprise:
<claim-text>determining that an attempt to destage the target data to the target storage has failed; and</claim-text>
<claim-text>discarding the target metadata in the target storage for the target data whose destage failed in response to determining that the destage of the target data failed.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A computer program product for managing data being copied from a source storage to a target storage, the computer program product comprising a non-transitory computer readable storage medium having computer readable program code embodied therein that executes to communicate with the source storage, the target storage and a cache and to perform operations, the operations comprising:
<claim-text>maintaining information on a copy relationship of source data in the source storage and target data in the target storage;</claim-text>
<claim-text>copying source data from the source storage to the cache to copy to target data in the target storage indicated in the copy relationship;</claim-text>
<claim-text>generating target metadata for the target data comprising the source data copied to the cache;</claim-text>
<claim-text>processing an access request to requested target data comprising the target data in the cache;</claim-text>
<claim-text>providing access to the requested target data in the cache;</claim-text>
<claim-text>determining whether the requested target data in the cache has been destaged to the target storage; and</claim-text>
<claim-text>discarding the target metadata for the requested target data in the target storage in response to determining that the requested target data in the cache has not been destaged to the target storage.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The computer program product of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the operations of determining whether the requested target data in the cache has been destaged and discarding the target metadata are performed after the access request is processed.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The computer program product of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the request comprises a read request.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The computer program product of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the operations further comprise:
<claim-text>receiving a subsequent read request to the requested target data after completing the processed read request;</claim-text>
<claim-text>rebuilding target metadata for the requested target data for the subsequent read request;</claim-text>
<claim-text>providing access to the requested target data in the cache for the subsequent read request;</claim-text>
<claim-text>determining whether the requested target data in the cache has been destaged to the target storage; and</claim-text>
<claim-text>discarding the rebuilt target metadata for the requested target data in the target storage in response to determining that the requested target data in the cache has not been destaged to the target storage.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The computer program product of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the operations further comprise:
<claim-text>retaining the target metadata for the requested target data in the cache to destage to the target storage in response to determining that the requested target data has been destaged to the target storage.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The computer program product of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the operations further comprise:
<claim-text>receiving a request to withdraw the copy relationship; and</claim-text>
<claim-text>demoting the target data in the cache in the copy relationship in response to receiving the request to withdraw the copy relationship.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The computer program product of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the operations further comprise:
<claim-text>receiving a write request to write data to the target data in the copy relationship;</claim-text>
<claim-text>updating the target data in the cache with the write data;</claim-text>
<claim-text>generating target metadata for the updated target data in the cache; and</claim-text>
<claim-text>indicating in a data structure the updated target data in the cache, wherein the indication is removed in response to destaging the updated target data and the metadata for the updated target data to the target storage.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The computer program product of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the operations further comprise:
<claim-text>receiving a request to withdraw the copy relationship;</claim-text>
<claim-text>demoting the target data in the cache indicated in the copy relationship in response to receiving the request to withdraw the copy relationship; and</claim-text>
<claim-text>discarding the target metadata data in the target storage for the target data indicated in the data structure.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The computer program product of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the operations further comprise:
<claim-text>determining that an attempt to destage the target data to the target storage has failed; and</claim-text>
<claim-text>discarding the target metadata in the target storage for the target data whose destage failed in response to determining that the destage of the target data failed.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. A system in communication with a source storage and a target storage, comprising:
<claim-text>a processor including at least one hardware component;</claim-text>
<claim-text>a cache;</claim-text>
<claim-text>a computer readable storage medium having computer readable program code embodied therein executed by the processor to perform operations, the operations comprising:
<claim-text>maintaining information on a copy relationship of source data in the source storage and target data in the target storage;</claim-text>
<claim-text>copying source data from the source storage to the cache to copy to target data in the target storage indicated in the copy relationship;</claim-text>
<claim-text>generating target metadata for the target data comprising the source data copied to the cache;</claim-text>
<claim-text>processing an access request to requested target data comprising the target data in the cache;</claim-text>
<claim-text>providing access to the requested target data in the cache;</claim-text>
<claim-text>determining whether the requested target data in the cache has been destaged to the target storage; and</claim-text>
<claim-text>discarding the target metadata for the requested target data in the target storage in response to determining that the requested target data in the cache has not been destaged to the target storage.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The system of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the operations of determining whether the requested target data in the cache has been destaged and discarding the target metadata are performed after the access request is processed.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The system of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the request comprises a read request, wherein the operations further comprise:
<claim-text>receiving a subsequent read request to the requested target data after completing the processed read request;</claim-text>
<claim-text>rebuilding target metadata for the requested target data for the subsequent read request;</claim-text>
<claim-text>providing access to the requested target data in the cache for the subsequent read request;</claim-text>
<claim-text>determining whether the requested target data in the cache has been destaged to the target storage; and</claim-text>
<claim-text>discarding the rebuilt target metadata for the requested target data in the target storage in response to determining that the requested target data in the cache has not been destaged to the target storage.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The system of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the request comprises a read request, wherein the operations further comprise:
<claim-text>retaining the target metadata for the requested target data in the cache to destage to the target storage in response to determining that the requested target data has been destaged to the target storage.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The system of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the request comprises a read request, wherein the operations further comprise:
<claim-text>receiving a request to withdraw the copy relationship; and</claim-text>
<claim-text>demoting the target data in the cache in the copy relationship in response to receiving the request to withdraw the copy relationship.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The system of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the request comprises a read request, wherein the operations further comprise:
<claim-text>receiving a write request to write data to the target data in the copy relationship;</claim-text>
<claim-text>updating the target data in the cache with the write data;</claim-text>
<claim-text>generating target metadata for the updated target data in the cache; and</claim-text>
<claim-text>indicating in a data structure the updated target data in the cache, wherein the indication is removed in response to destaging the updated target data and the metadata for the updated target data to the target storage.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
