<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626678-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626678</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12811048</doc-number>
<date>20071228</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>630</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>18</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>706 12</main-classification>
<further-classification>370230</further-classification>
</classification-national>
<invention-title id="d2e53">Anomaly detection for link-state routing protocols</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>2003/0159069</doc-number>
<kind>A1</kind>
<name>Choi et al.</name>
<date>20030800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713201</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00002">
<othercit>Wang, Y.; Wong, J.; Miner, A.; , &#x201c;Anomaly intrusion detection using one class SVM,&#x201d; Information Assurance Workshop, 2004. Proceedings from the Fifth Annual IEEE SMC , vol., No., pp. 358-364, Jun. 10-11, 2004.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00003">
<othercit>Brown, Michael PS, et al. &#x201c;Support vector machine classification of microarray gene expression data.&#x201d; University of California, Santa Cruz, Technical Report UCSC-CRL-99-09 (1999).</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00004">
<othercit>International Search Report and Written Opinion dtd Dec. 8, 2008, PCT/IT2007/00930.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00005">
<othercit>Jou Y. F. et al., &#x201c;Design and implementation of a scalable intrusion detection system for the protection of network infrastructure,&#x201d; DARPA Information Survivability Conf. and Exposition, 2000. Disce X '00. Proceedings Hilton Head, SC, Jan. 25-27, 2000, Las Alamitos, CA, IEEE Comput. Soc, US, vol. 2, Jan. 25, 2000, pp. 69-83.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00006">
<othercit>Eskin E. et al., &#x201c;A Geometric Framework for Unsupervised Anomaly Detection: Detecting Intrusions in Unlabeled Data,&#x201d; Applications of Data Mining in Computer Security, Kluwer Academic Publishers, pp. 1-20 [Online] 2002, http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.8.5445&#x26;rep=rep1&#x26;type=pdf.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00007">
<othercit>He L, &#x201c;Recent developments in securing Internet routing protocols,&#x201d; BT Technology Journal, Kluwer Academic Publishers, vol. 24, No. 4, Oct. 1, 2006, pp. 180-196.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00008">
<othercit>D. Qu et al., &#x201c;Statistical Anomaly Detection for Link-State Routing Protocols,&#x201d; Sixth International Conference on Network Protocols, 1998, p. 62.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00009">
<othercit>F. Wang, et al., Design and Implementation of Property-Oriented Detection for Link-State Routing Protocols, in Proceedings of the 2001 IEEE Workshop on Information Assurance and Security, US Military Academy, West Point, NY, Jun. 2001, ISBN 0-7803-9814-9 IEEE, pp. 91-99.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00010">
<othercit>S. Kaplantzis, N. Mani, A Study on Classification Techniques for Network Intrusion Detection, presented at the IASTED International Conference on Networks and Communication Systems, Thailand.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>8</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>706 12</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>3</number-of-drawing-sheets>
<number-of-figures>5</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20100287128</doc-number>
<kind>A1</kind>
<date>20101111</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Baltatu</last-name>
<first-name>Madalina</first-name>
<address>
<city>Turin</city>
<country>IT</country>
</address>
</addressbook>
<residence>
<country>IT</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Di Paola</last-name>
<first-name>Sebastiano</first-name>
<address>
<city>Turin</city>
<country>IT</country>
</address>
</addressbook>
<residence>
<country>IT</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Lombardo</last-name>
<first-name>Dario</first-name>
<address>
<city>Turin</city>
<country>IT</country>
</address>
</addressbook>
<residence>
<country>IT</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Baltatu</last-name>
<first-name>Madalina</first-name>
<address>
<city>Turin</city>
<country>IT</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Di Paola</last-name>
<first-name>Sebastiano</first-name>
<address>
<city>Turin</city>
<country>IT</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Lombardo</last-name>
<first-name>Dario</first-name>
<address>
<city>Turin</city>
<country>IT</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Banner &#x26; Witcoff, Ltd.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Telecom Italia S.p.A.</orgname>
<role>03</role>
<address>
<city>Milan</city>
<country>IT</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Gaffin</last-name>
<first-name>Jeffrey A</first-name>
<department>2129</department>
</primary-examiner>
<assistant-examiner>
<last-name>Kim</last-name>
<first-name>David H</first-name>
</assistant-examiner>
</examiners>
<pct-or-regional-filing-data>
<document-id>
<country>WO</country>
<doc-number>PCT/IT2007/000930</doc-number>
<kind>00</kind>
<date>20071228</date>
</document-id>
<us-371c124-date>
<date>20100628</date>
</us-371c124-date>
</pct-or-regional-filing-data>
<pct-or-regional-publishing-data>
<document-id>
<country>WO</country>
<doc-number>WO2009/084053</doc-number>
<kind>A </kind>
<date>20090709</date>
</document-id>
</pct-or-regional-publishing-data>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Disclosed herein is an anomaly detection method for link-state routing protocols, a link-state routing protocol providing for link-state update (LSU) messages to be exchanged between nodes in a packet-based network, wherein each link-state update message includes link-state advertisement (LSA) message(s) each having a respective header. The method comprises monitoring the link-state advertisement messages exchanged in the network, extracting and forming respective feature vectors with the values in the fields of the headers of the monitored link-state advertisement messages, and detecting an anomaly related to routing based on the feature vectors. In particular, detecting an anomaly related to routing includes feeding the feature vectors to a machine learning system, conveniently a one-class classifier, preferably a one-class support vector machine (OC-SVM).</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="184.91mm" wi="168.74mm" file="US08626678-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="229.87mm" wi="178.22mm" file="US08626678-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="259.33mm" wi="190.58mm" file="US08626678-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="228.68mm" wi="170.94mm" file="US08626678-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This is a U.S. National Phase Application under 35 U.S.C. &#xa7;371 of International Application No. PCT/1T2007/00930, filed Dec. 28, 2007, which was published Under PCT Article 21(2), the entire contents of which are incorporated herein by reference.</p>
<heading id="h-0002" level="1">TECHNICAL FIELD OF THE INVENTION</heading>
<p id="p-0003" num="0002">The present invention relates in general to anomaly detection for link-state routing protocols.</p>
<heading id="h-0003" level="1">BACKGROUND ART</heading>
<p id="p-0004" num="0003">As is known, routing protocols are used in packet-switched networks for computer communications and are implemented by every switching node in the network to forward data packets. In the Internet, these nodes are called routers.</p>
<p id="p-0005" num="0004">There are two main classes of routing protocols: the distance-vector routing protocols and the link-state routing protocols. In a distance-vector routing protocol, such as the Routing Information Protocol (RIP), each node periodically exchanges reachability information with its neighbors, while in a link-state routing protocol, such as the Open Shortest Path First (OSPF) protocol and the Intermediate System to Intermediate System (IS-IS) protocol, connectivity information is passed between the nodes to construct connectivity maps.</p>
<p id="p-0006" num="0005">In particular, in a link-state routing protocol, each node receives from all the other nodes a map of the connectivity of the network, in the form of a graph showing which nodes are connected to which other nodes, and independently computes the best next hop for every possible destination in the network. This is done by using only a local copy of the map, and without communicating in any other way with any other node. The collection of best next hops forms the routing table for the node.</p>
<p id="p-0007" num="0006">Link-state routing protocols are commonly used for intra-domain routing, i.e. are exploited to transport routing information among routers of the same routing domain, also known as Autonomous System (AS), which is a region of a network under a single administrative domain.</p>
<p id="p-0008" num="0007">In OSPF-based Autonomous Systems, each router periodically floods immediate connectivity information to all the other routers in the Autonomous System by means of Link-State Advertisement (LSA) messages enclosed into Link-State Update (LSU) messages. The LSA messages contain the routing information from which each router constructs a consistent view of the network topology, used to correctly route data packets from their source to their-destination.</p>
<p id="p-0009" num="0008">Anomaly detection is a well known approach to intrusion detection in network and computer security, and is generally based on statistical models computed for the normal behaviour of an object (users, software products or networks), and on the subsequent measure of the distance of the monitored &#x201c;live&#x201d; behaviour of the object from the normal one.</p>
<p id="p-0010" num="0009">Currently, several methods are known in the literature implementing anomaly detection for routing protocols, most of which are based on known statistical approaches, like the so-called Next-generation Intrusion Detection Expert System/STATistical (NIDES/STAT) Intrusion Detection System (IDS) or the so-called Property-Oriented detection approach for OSPF. For a detailed description of these approaches reference may be made to D. Qu, B. Vetter, F. Wang, R. Narayan, S. Wu, Y. Jou, F. Gong, C. Sargor, <i>Statistical Anomaly Detection for Link</i>-<i>State Routing Protocols</i>, Sixth International Conference on Network Protocols, 1998, page 62, and respectively to F. Wang, F. Gong, F. S. Wu, H. Qi, <i>Design and Implementation of Property</i>-<i>Oriented Detection for Link</i>-<i>State Routing Protocols</i>, in Proceedings of the 2001 IEEE Workshop on Information Assurance and Security, US Military Academy, West Point, N.Y., June 2001, ISBN 0-7803-9814-9 IEEE.</p>
<p id="p-0011" num="0010">In particular, in <i>Statistical Anomaly Detection for Link</i>-<i>State Routing Protocols</i>, a statistical anomaly detection approach for link-state routing protocols is disclosed, which is based on the NIDES/STAT IDS and was mainly tested on simulated insider attacks against Open Shortest Path First (OSPF) protocol.</p>
<p id="p-0012" num="0011">The NIDES approach to intrusion detection is to construct a short-term statistical profile of the monitored object and to compare it with a long-term profile generated during a previous training session The profiles are basically the probability distributions of several intrinsic object variables, and they are compared using a modified test. Among the variables taken into account for attack detection, there are variables that measure the routing activity intensity (e.g. the volume of OSPF traffic in a time interval), the distribution of OSPF packets type, 3 fields of the Link State Advertisement (LSA), i.e., age, checksum, and sequence number, CPU usage on routers, etc. The fields are examined independently and the values therein are compared individually with respective predefined values (from the OSPF protocol standard) to generate one of the following coarse alarms, such as &#x201c;invalid checksum&#x201d;, &#x201c;invalid sequence number&#x201d;, &#x201c;init sequence number&#x201d;, &#x201c;max sequence number&#x201d;, and &#x201c;normal&#x201d;. In detail, the comparison is aimed at checking whether the LSA checksum is correct, the LSA age is lower than or equal to the maximum admissible value (standardized in 3600 s), and the LSA sequence number is not equal to a sequence initial number or a maximum sequence number (also standardized).</p>
<p id="p-0013" num="0012">In <i>Design and Implementation of Property</i>-<i>Oriented Detection for Link</i>-<i>State Routing Protocols</i>, a generic protocol analysis is applied to the OSPF, reducing the whole properties space to a significant subset in order to limit the complexity of the task. The OSPF case study is simplified by considering only flat or mono area routing, only point to point networks, and by not taking into account the LSA type 5 messages, used when a router acts as an Autonomous System Border Router (ASBR).</p>
<p id="p-0014" num="0013">In other network security-related areas, some anomaly detection approaches are known which use machine learning paradigms like traditional binary Support Vector Machines (SVMs) or one-class SVMs.</p>
<p id="p-0015" num="0014">Specifically, SVMs are a class of machine learning algorithms for classification/regression that are particularly useful for high dimensional-input data with either large or small training sets. SVMs algorithms work by mapping the input feature space into a high-dimensional feature space, and computing linear functions on those mapped features in the high-dimensional feature space.</p>
<p id="p-0016" num="0015">SVMs are generally trained through supervised learning, in which the best function that relates the output data to the input data is computed, and the goodness of this function is judged by its ability to generalize on new inputs, i.e. inputs which are not present in the training set. For a detailed description of learning methods for SVMs, reference may be made to N. Cristianini, J. Shawe-Taylor, <i>An Introduction to Support Vector Machines and other kernel</i>-<i>based learning methods</i>, pp. 93-122, Cambridge University Press, 2000.</p>
<p id="p-0017" num="0016">In S. Kaplantzis, N. Mani, <i>A Study on Classification Techniques for Network Intrusion Detection</i>, presented at the IASTED International Conference on Networks and Communication Systems, Thailand, SVMs are used for detecting intrusions and misbehaviours in TCP/IP networks.</p>
<p id="p-0018" num="0017">In particular, SVMs are used to perform misused detection, hence to detect known attacks. The SVMs are trained on existent attack data, in particular on the Defense Advanced Research Projects Agency (DARPA) database for IDS evaluation (benchmark created by Lincoln Laboratory of Massachusetts Institute of Technology from 1998 to 0.2000). The features on which these SVMs work are the 41 TCP connection features included in the DARPA database or on a subset of these features. The attacks included in the database are probing attacks, Denial-of-Service (DoS) attacks, user to root access and remote to user access.</p>
<p id="p-0019" num="0018">Another area in which the use of SVMs was proposed is intrusion detection in wireless ad hoc networks. In this case the intrusion detection functionality is meant to detect anomalous behaviour in network traffic, which also includes routing traffic. Hence, the SVM features also include some routing traffic information: the rate of routing requests and responses received and sent by a node and the number of modifications (such as add, remove, find) performed on the routing tables of each node. For a detailed description of intrusion detection in wireless ad hoc networks, reference may be made to P. Fu, D. Zhang, L. Wang, Z. Duan, <i>Intelligent Hierarchical Intrusion Detection System for Secure Wireless Ad Hoc Network</i>, Conference Title: Advances in Neural Networks&#x2014;ISNN 2005, Second International Symposium on Neural Networks, Proceedings, Part III (Lecture Notes in Computer Science Vol. 3498) Part Vol. 3 p. 482-7 Vol. 3, and to H. Deng, Q.-A. Zeng, D. P. Agrawal, <i>SVM</i>-<i>based Intrusion Detection System for Wireless Ad Hoc Networks</i>, in Proceedings of the IEEE Vehicular Technology Conference, October 2003, IEEE 58th Volume 3, Issue, 6-9 October 2003 Page(s): 2147-2151 Vol. 3.</p>
<heading id="h-0004" level="1">OBJECT AND SUMMARY OF THE INVENTION</heading>
<p id="p-0020" num="0019">The Applicant has noted that all the known methods, and in particular those based on statistical approaches, are aimed at detecting a limited amount of anomalies in the behaviour of link-state routing protocols, and hence normally have a good/reliable behaviour/performance only for those anomalies they are planned to detect.</p>
<p id="p-0021" num="0020">Therefore, an objective of the present invention is to provide a methodology which can alleviate at least in part the above cited drawbacks, and in particular which allows a large spectrum of anomalies in the behaviour of link-state routing protocols, to be efficiently and reliably detected.</p>
<p id="p-0022" num="0021">Moreover, the Applicant has noted that all the known methods involve computationally-intensive and time-consuming data pre-processing and analysis.</p>
<p id="p-0023" num="0022">Therefore, another objective of the present invention is to provide a methodology which allows such a large spectrum of anomalies to be detected without involving computationally-intensive and time-consuming data pre-processing and analysis.</p>
<p id="p-0024" num="0023">These and other objectives are achieved by the present invention in that it relates to a method, a system, and a computer program for detecting anomalies for link-state routing protocols, as defined in the appended claims.</p>
<p id="p-0025" num="0024">The present invention is based on the observation that OSPF attacks and, in general, all anomalies in the behaviour of link-state routing protocols affect the contents of the headers of the link-state advertisements, which are messages containing routing information exchanged among routers of the same routing domain, and hence the quintessential information transferred inside a routing domain at a given moment in time.</p>
<p id="p-0026" num="0025">Therefore, the present invention achieves the first aforementioned objective by monitoring contents of the headers of the LSA messages exchanged in the network, and then detecting an anomaly in the behaviour of the link-state routing protocol based on the contents of the LSA headers, in particular based on the serialized values in all or some of the fields of the headers of all or some of the monitored LSA Messages.</p>
<p id="p-0027" num="0026">Conveniently, the anomaly detection is based on a machine learning approach, which allows anomalies to be detected without involving computationally-intensive and time-consuming data pre-processing and analysis.</p>
<p id="p-0028" num="0027">Conveniently, the machine learning approach is based on a one-class classifier, preferably a one-class Support Vector Machine (OC-SVM), trained based on the contents of &#x201c;positive&#x201d; LSA headers only, i.e. LSA headers exchanged in the network during a free-of-attacks and free-of-failures training period only.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0029" num="0028">For a better understanding of the present invention, preferred embodiments, which are intended purely by way of example and not to be construed as limiting, will now be described with reference to the attached drawings, wherein:</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 1</figref> shows a Link-State Advertisement header;</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 2</figref> shows a hyperplane, separating positive and negative training examples, and support vectors in a high-dimensional feature space of an SVM;</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 3</figref> shows a hypersphere containing training vectors, and support vectors in the high-dimensional feature space of a one-class SVM;</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 4</figref> shows a flow chart describing training of an one-class SVM according to an embodiment of the present invention; and</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 5</figref> shows a flow chart describing anomaly detection in an intra-routing domain according to an embodiment of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS OF THE INVENTION</heading>
<p id="p-0035" num="0034">The following description is presented to enable a person skilled in the art to make and use the invention. Various modifications to the embodiments will be readily apparent to those skilled in the art, and the generic principles herein may be applied to other embodiments and applications without departing from the scope of the present invention. Thus, the present invention is not intended to be limited to the embodiments shown, but is to be accorded the widest scope consistent with the principles and features disclosed herein and defined in the attached claims.</p>
<p id="p-0036" num="0035">In addition, the present invention is implemented by means of a computer program including software code portions for implementing, when the computer program product is loaded in a memory of a processing system and run thereon, the anomaly detection method described hereinafter.</p>
<p id="p-0037" num="0036">In the following, for the sake of description simplicity and without losing generality, the present invention will be described with specific reference to the OSPF protocol, remaining clear that the present invention may also be applied to other types of link-state routing protocols.</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 1</figref> shows an LSA header, the binary representation of which is made up of twenty bytes, wherein the first two bytes encode the &#x201c;LS Age&#x201d; field, the third byte encode the &#x201c;Options&#x201d; field, the fourth byte encodes the &#x201c;LS Type&#x201d; field, the fifth, sixth, seventh and eighth bytes encode the &#x201c;Link State ID&#x201d; field, the ninth, tenth, eleventh, and twelfth bytes encode the &#x201c;Advertising Router&#x201d; field, the thirteenth, fourteenth, fifteenth, and sixteenth bytes encode the &#x201c;LS Sequence Number&#x201d; field, the seventeenth and eighteenth bytes encode the &#x201c;LS Checksum&#x201d; field, and the nineteenth and twentieth bytes encode the &#x201c;Length&#x201d; field.</p>
<p id="p-0039" num="0038">The Applicant has carried but an extensive investigation on LSA headers during simulated attacks or network failure conditions, and has noted that all or a subset of the fields of LSA headers are altered in presence of anomalies in the routing process due either to attacks or to failures.</p>
<p id="p-0040" num="0039">Therefore, according to present invention, a large spectrum of anomalies in the behaviour of link-state routing protocols may be efficiently and reliably detected by monitoring the headers of the LSA messages exchanged between the network switching nodes, and by detecting anomalies based on the contents of the LSA headers.</p>
<p id="p-0041" num="0040">In particular, at a given time, anomaly detection is performed by:
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0041">extracting and serializing, i.e. forming respective detection feature vectors, with the values in all or some of the fields of the headers of all or some of the LSA messages exchanged in the network; and</li>
        <li id="ul0002-0002" num="0042">feeding the detection feature vectors to a machine learning algorithm, which detects possible anomalies in the behaviour of the link-state routing protocol.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0042" num="0043">In particular, the detection feature vectors are fed to a one-class classifier, which is previously trained based on training feature vectors formed with the values in all or some of the fields of the headers of all or some of the LSA messages exchanged between the network switching nodes during a free-of-attacks and free-of-failures training period only.</p>
<p id="p-0043" num="0044">Accordingly, the one-class classifier, being trained during normal routing conditions, is able to recognize if the LSA headers belong to a normal routing class, i.e. a class containing all possible values of the instances of the LSA headers in normal routing conditions. Therefore, when the one-class classifier doesn't recognize the LSA headers as belonging to the normal routing class, it detects an operating anomaly.</p>
<p id="p-0044" num="0045">A computationally-efficient and time-saving one-class classifier is a one-class Support Vector Machine (OC-SVM), some mathematical notation relating to which are introduced hereinafter to facilitate understanding of its employment in the present invention.</p>
<p id="p-0045" num="0046">SVMs were firstly developed by V. Vapnik in <i>The Nature of Statistical Learning Theory</i>, Springer-Verlag, New York, 1998, based on a principle known as Structural Risk Minimization from statistical learning theory. They can be applied to regression, classification, and density estimation problems.</p>
<p id="p-0046" num="0047">Briefly, SVMs belong to the category of maximum-margin classifiers, and they naturally perform binary classification (i.e. they have two output classes), by finding, in the feature space of the SVM, a decision hypersurface (usually a hyperplane) that splits the positive examples from the negative examples, the split being such as to have the largest distances from the hypersurface to the nearest of the positive and negative examples, generally making the classification correct for testing data that is near, but not identical to the training data.</p>
<p id="p-0047" num="0048">Focusing on classification, SVMs receives as input an independent and identically distributed (i.i.d.) training sample S=(x<sub>1</sub>, y<sub>1</sub>), (x<sub>2</sub>, y<sub>2</sub>), . . . , (x<sub>n</sub>, y<sub>n</sub>), of size n from a fixed but unknown distribution Pr(x,y) describing the learning task, wherein x<sub>i </sub>are vectors representing the input data to be classified (the observations), while y<sub>i</sub>, typically in the set {&#x2212;1, +1} are the class labels.</p>
<p id="p-0048" num="0049">In their basic form, SVMs learn binary, linear decision rules in the form:</p>
<p id="p-0049" num="0050">
<maths id="MATH-US-00001" num="00001">
<math overflow="scroll">
<mrow>
  <mrow>
    <mi>h</mi>
    <mo>&#x2061;</mo>
    <mrow>
      <mo>(</mo>
      <mi>x</mi>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>=</mo>
  <mrow>
    <mo>{</mo>
    <mtable>
      <mtr>
        <mtd>
          <mrow>
            <mi>sign</mi>
            <mo>&#x2061;</mo>
            <mrow>
              <mo>(</mo>
              <mrow>
                <mrow>
                  <mi>w</mi>
                  <mo>&#xb7;</mo>
                  <mi>x</mi>
                </mrow>
                <mo>+</mo>
                <mi>b</mi>
              </mrow>
              <mo>)</mo>
            </mrow>
          </mrow>
        </mtd>
        <mtd>
          <mrow>
            <mrow>
              <mrow>
                <mi>if</mi>
                <mo>&#x2062;</mo>
                <mstyle>
                  <mspace width="0.8em" height="0.8ex"/>
                </mstyle>
                <mo>&#x2062;</mo>
                <mrow>
                  <mi>w</mi>
                  <mo>&#xb7;</mo>
                  <mi>x</mi>
                </mrow>
              </mrow>
              <mo>+</mo>
              <mi>b</mi>
            </mrow>
            <mo>&#x2265;</mo>
            <mn>0</mn>
          </mrow>
        </mtd>
      </mtr>
      <mtr>
        <mtd>
          <mrow>
            <mo>-</mo>
            <mn>1</mn>
          </mrow>
        </mtd>
        <mtd>
          <mi>otherwise</mi>
        </mtd>
      </mtr>
    </mtable>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0050" num="0051">The decision function, also known as hypothesis, is described by a weight vector w and a threshold b. According to which side of the hypersurface the input vector x lies on, it is classified into class +1 or &#x2212;1. The idea of structural risk minimization is to find a hypothesis h for which the lowest error probability can be guaranteed. With SVMs, Vapnik showed that this goal can be translated into finding the hypersurface with largest margin for separable data. In other words, for separable training sets, SVMs find the hypersurface h, which separates the positive and negative training examples, marked with &#x201c;+&#x201d; and &#x201c;&#x2212;&#x201d;, respectively, in <figref idref="DRAWINGS">FIG. 2</figref>, with largest margin. The examples closest to the hypersurface h are called support vectors, marked with circles in <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="p-0051" num="0052">Computing the hypersurface is equivalent to solving the following quadratic optimization problem in the Lagrangian representation (for more details reference may be made to N. Cristianini, J. Shawe-Taylor, <i>An Introduction to Support Vector Machines and other kernel</i>-<i>based learning methods</i>, Cambridge University Press, 2000, pp. 93-122):</p>
<p id="p-0052" num="0053">
<maths id="MATH-US-00002" num="00002">
<math overflow="scroll">
  <mrow>
    <mrow>
      <mi>minimize</mi>
      <mo>&#x2062;</mo>
      <mstyle>
        <mspace width="0.8em" height="0.8ex"/>
      </mstyle>
      <mo>&#x2062;</mo>
      <mrow>
        <mi>W</mi>
        <mo>&#x2061;</mo>
        <mrow>
          <mo>(</mo>
          <mi>&#x3b1;</mi>
          <mo>)</mo>
        </mrow>
      </mrow>
    </mrow>
    <mo>=</mo>
    <mrow>
      <mrow>
        <mo>-</mo>
        <mrow>
          <munderover>
            <mo>&#x2211;</mo>
            <mrow>
              <mi>i</mi>
              <mo>=</mo>
              <mn>1</mn>
            </mrow>
            <mi>n</mi>
          </munderover>
          <mo>&#x2062;</mo>
          <msub>
            <mi>&#x3b1;</mi>
            <mi>i</mi>
          </msub>
        </mrow>
      </mrow>
      <mo>+</mo>
      <mrow>
        <mfrac>
          <mn>1</mn>
          <mn>2</mn>
        </mfrac>
        <mo>&#x2062;</mo>
        <mrow>
          <munderover>
            <mo>&#x2211;</mo>
            <mrow>
              <mi>i</mi>
              <mo>=</mo>
              <mn>1</mn>
            </mrow>
            <mi>n</mi>
          </munderover>
          <mo>&#x2062;</mo>
          <mrow>
            <munderover>
              <mo>&#x2211;</mo>
              <mrow>
                <mi>j</mi>
                <mo>=</mo>
                <mn>1</mn>
              </mrow>
              <mi>n</mi>
            </munderover>
            <mo>&#x2062;</mo>
            <mrow>
              <msub>
                <mi>y</mi>
                <mi>i</mi>
              </msub>
              <mo>&#x2062;</mo>
              <msub>
                <mi>y</mi>
                <mi>j</mi>
              </msub>
              <mo>&#x2062;</mo>
              <msub>
                <mi>&#x3b1;</mi>
                <mi>i</mi>
              </msub>
              <mo>&#x2062;</mo>
              <msub>
                <mi>&#x3b1;</mi>
                <mi>j</mi>
              </msub>
              <mo>&#x2062;</mo>
              <msub>
                <mi>x</mi>
                <mi>i</mi>
              </msub>
              <mo>&#x2062;</mo>
              <msub>
                <mi>x</mi>
                <mi>j</mi>
              </msub>
            </mrow>
          </mrow>
        </mrow>
      </mrow>
    </mrow>
  </mrow>
</math>
</maths>
<maths id="MATH-US-00002-2" num="00002.2">
<math overflow="scroll">
  <mrow>
    <mrow>
      <mrow>
        <mi>subject</mi>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <mi>to</mi>
        <mo>&#x2062;</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>&#x2062;</mo>
        <mrow>
          <mo>&#x2211;</mo>
          <mrow>
            <msub>
              <mi>&#x3b1;</mi>
              <mi>i</mi>
            </msub>
            <mo>&#x2062;</mo>
            <msub>
              <mi>y</mi>
              <mi>i</mi>
            </msub>
          </mrow>
        </mrow>
      </mrow>
      <mo>=</mo>
      <mn>0</mn>
    </mrow>
    <mo>,</mo>
    <mrow>
      <mo>&#x2200;</mo>
      <msub>
        <mi>&#x3b1;</mi>
        <mi>i</mi>
      </msub>
    </mrow>
    <mo>,</mo>
    <mrow>
      <mn>0</mn>
      <mo>&#x2264;</mo>
      <msub>
        <mi>&#x3b1;</mi>
        <mi>i</mi>
      </msub>
      <mo>&#x2264;</mo>
      <mi>C</mi>
    </mrow>
    <mo>,</mo>
    <mrow>
      <mi>i</mi>
      <mo>=</mo>
      <mn>1</mn>
    </mrow>
    <mo>,</mo>
    <mi>&#x2026;</mi>
    <mo>&#x2062;</mo>
    <mstyle>
      <mspace width="0.8em" height="0.8ex"/>
    </mstyle>
    <mo>,</mo>
    <mi>n</mi>
  </mrow>
</math>
</maths>
</p>
<p id="p-0053" num="0054">Support vectors are those training vectors x<sub>i </sub>corresponding to positive Lagrangian coefficients &#x3b1;<sub>i</sub>&#x3e;0. From the solution of this optimization problem the decision rule can be computed as:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>w&#xb7;x=&#x3a3;&#x3b1;</i><sub>i</sub><i>y</i><sub>i</sub><i>x</i><sub>i</sub><i>x </i>and <i>b=y</i><sub>tsv</sub><i>&#x2212;w&#xb7;x</i><sub>tsv </sub><?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0054" num="0055">The training example (x<sub>tsv</sub>, y<sub>tsv</sub>) for calculating b must be a support vector with &#x3b1;<sub>tsv</sub>&#x3c;C.</p>
<p id="p-0055" num="0056">For both solving the quadratic optimization problem as well as applying the learned decision rule, it is sufficient to be able to calculate inner products between observation vectors. Exploiting this property, the use of kernel functions, denoted by K(x<sub>1</sub>,x<sub>2</sub>), was introduced for learning non-linear decision rules. Such kernel functions calculate an inner product in some high-dimensional feature space and replace the inner product in the formulas above.</p>
<p id="p-0056" num="0057">Popular kernel functions are linear, polynomial, Radial-Basis Function (RBF), and sigmoid:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>K</i><sub>lin</sub>(<i>x</i><sub>i</sub><i>,x</i><sub>j</sub>)=<i>x</i><sub>i</sub><i>&#xb7;x</i><sub>j </sub><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>K</i><sub>poly</sub>(<i>x</i><sub>i</sub><i>,x</i><sub>j</sub>)=(<i>x</i><sub>i</sub><i>&#xb7;x</i><sub>j</sub>+1)<sup>p </sup><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>K</i><sub>rbf</sub>(<i>x</i><sub>i</sub><i>,x</i><sub>j</sub>))=exp(&#x2212;(<i>x</i><sub>i</sub><i>&#x2212;x</i><sub>j</sub>)<sup>2</sup><i>/s</i><sup>2</sup>)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>K</i><sub>sig</sub>(<i>x</i><sub>i</sub><i>,x</i><sub>j</sub>)=tan <i>h</i>(<i>s</i>(<i>x</i><sub>i</sub><i>&#xb7;x</i><sub>j</sub>)+<i>c</i>)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0057" num="0058">Therefore, depending on the type of the kernel function, SVMs can be linear classifiers, polynomial classifiers, radial basis function (RBF) classifiers, or two-layer sigmoid neural networks.</p>
<p id="p-0058" num="0059">In OC-SVMs (One-Class Support Vector Machines) the support vectors characterizing the object's class are obtained only from positive training examples. In particular, such support vectors define a hypersphere that encloses all possible representations of the object. All observations (input vectors) lying outside this hypersphere are considered not correct or anomalous representations.</p>
<p id="p-0059" num="0060">The problem the OC-SVM has to solve is the estimation of a model function h(x, w) which gives a closed boundary around the target class data (reference may for example be made to D. M. J. Tax, <i>One</i>-<i>class classification</i>, Concept learning in the absence of counter examples, Ph.D. thesis, Technical University of Delft, 2001). This closed boundary is a hypersphere that contains all the training objects X<sup>tr</sup>, and that is characterized by a center a and a radius R, as illustrated in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0060" num="0061">In particular, in <figref idref="DRAWINGS">FIG. 3</figref> three objects are on the boundary of the hypersphere, and these three objects are the support vectors, while an object x<sub>i </sub>is outside the hypersphere since it has &#x3be;<sub>i</sub>&#x3e;0, where &#x3be;<sub>i </sub>is a measure of the classification error (i.e. the difference between the distance from object x<sub>i </sub>to the center a and the radius of the hypersphere R).</p>
<p id="p-0061" num="0062">Basically, the OC-SVM minimizes the structural error defined as:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>E</i>(<i>R,a</i>)=<i>R</i><sup>2 </sup><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
subject to the following constraint:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>|<i>x</i><sub>i</sub><i>&#x2212;a|</i><sup>2</sup><i>=R</i><sup>2</sup><i>,&#x2200;i </i><?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0062" num="0063">To allow the possibility of outliers in the training set, and therefore to make the method more robust, the distance from objects x<sub>i </sub>to the center a is not strictly smaller than R<sup>2</sup>, but larger distances are penalized. This means that the empirical error is not zero, so slack variables &#x3be;, &#x3be;<sub>i</sub>&#x3e;0, &#x2200;i are introduced and the minimization problem becomes:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>E</i>(<i>R,a,&#x3be;</i>)=<i>R</i><sup>2</sup><i>+C&#xb7;&#x3a3;</i><sub>i</sub>&#x3be;<sub>i </sub><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
with the constraint that almost all objects are within the following hypersphere:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>|<i>x</i><sub>i</sub><i>&#x2212;a|</i><sup>2</sup><i>=R</i><sup>2</sup>+&#x3be;<sub>i</sub><i>,&#x2200;i </i><?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0063" num="0064">Parameter C gives the trade-off between the volume of the description and the errors. By introducing Lagrange multipliers and constructing the Lagrangian, the minimization of this error is a well-known quadratic programming problem, for which standard algorithms exist (reference may again be made to the above-referenced <i>One</i>-<i>class classification</i>).</p>
<p id="p-0064" num="0065">By solving this problem the support vectors are obtained (which practically represent the object's reference model or template) together with the following expression for the center a of the hypersphere:</p>
<p id="p-0065" num="0066">
<maths id="MATH-US-00003" num="00003">
<math overflow="scroll">
<mrow>
  <mi>a</mi>
  <mo>=</mo>
  <mrow>
    <munder>
      <mo>&#x2211;</mo>
      <mi>i</mi>
    </munder>
    <mo>&#x2062;</mo>
    <mrow>
      <msub>
        <mi>&#x3b1;</mi>
        <mi>i</mi>
      </msub>
      <mo>&#x2062;</mo>
      <msub>
        <mi>x</mi>
        <mi>i</mi>
      </msub>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0066" num="0067">As such, new objects are accepted by the description if the distance from the objects to the center a of the hypersphere is lower than or equal to the radius R.</p>
<p id="p-0067" num="0068">Noteworthy issues related to OC-SVM are the training set construction, the SVM input data representation, and the SVM parameters tuning. Finding the right solution to these issues is a sine qua non condition for the success of the anomaly detection process.</p>
<p id="p-0068" num="0069">The present invention proposes a particular choice of features and a training set construction method, an optimized representation of the input data and an automatic method for SVM parameter configuration.</p>
<p id="p-0069" num="0070">Specifically, anomaly detection based on OC-SVMs comprises two phases showed in <figref idref="DRAWINGS">FIGS. 4 and 5</figref>: the OC-SVM training <b>1</b> and the anomaly detection <b>2</b>, each comprising several steps.</p>
<p id="p-0070" num="0071">According to <figref idref="DRAWINGS">FIG. 4</figref>, the OC-SVM training <b>1</b> comprises:
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0000">
    <ul id="ul0004" list-style="none">
        <li id="ul0004-0001" num="0072">data acquisition (collection) (block <b>10</b>), i.e. acquisition of all LSU messages exchanged in the network during the free-of-attacks and free-of-failures training period only;</li>
        <li id="ul0004-0002" num="0073">feature extraction (block <b>11</b>), in turn comprising:
        <ul id="ul0005" list-style="none">
            <li id="ul0005-0001" num="0074">LSA extraction (block <b>12</b>),</li>
            <li id="ul0005-0002" num="0075">LSA header extraction (block <b>13</b>), and</li>
            <li id="ul0005-0003" num="0076">serialization of the values extracted from the LSA headers, so forming the training feature vectors (block <b>14</b>); and</li>
        </ul>
        </li>
        <li id="ul0004-0003" num="0077">OC-SVM training (block <b>15</b>), which results in the creation of a reference template for use in the anomaly detection phase <b>2</b>.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0071" num="0078">In particular, SVM variables that need to be set are:
<ul id="ul0006" list-style="none">
    <li id="ul0006-0001" num="0000">
    <ul id="ul0007" list-style="none">
        <li id="ul0007-0001" num="0079">the kernel function;</li>
        <li id="ul0007-0002" num="0080">the constant C;</li>
        <li id="ul0007-0003" num="0081">the training set size; and</li>
        <li id="ul0007-0004" num="0082">the support vector size.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0072" num="0083">The output of the OC-SVM training (block <b>15</b>) is a reference template which comprises:
<ul id="ul0008" list-style="none">
    <li id="ul0008-0001" num="0000">
    <ul id="ul0009" list-style="none">
        <li id="ul0009-0001" num="0084">the value of the parameter sigma of the kernel;</li>
        <li id="ul0009-0002" num="0085">the number of support vectors;</li>
        <li id="ul0009-0003" num="0086">the support vectors</li>
        <li id="ul0009-0004" num="0087">the weights (or &#x3b1; coefficients, also known as Lagrangian multipliers) of each support vector; and</li>
        <li id="ul0009-0005" num="0088">a detection threshold.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0073" num="0089">According to Applicant's experimentations, an REF kernel function has been used, which outperforms both sigmoid and polynomial kernels. The OC-SVM with an REF kernel represents a Gaussian radial basis function classifier that automatically produces all the information necessary for the reference template creation: the support vectors, their weights and the threshold.</p>
<p id="p-0074" num="0090">Fundamentally, the value of the parameter sigma of the Gaussian RBF kernel used with the one-class SVM is estimated during the training phase <b>1</b>, taking into consideration the actual training feature set. The computed sigma value becomes a part of the reference template, and is subsequently used during the anomaly detection (block <b>25</b>).</p>
<p id="p-0075" num="0091">Accurate tests have shown that the best value for the sigma parameter is equal to the average Euclidean distance between training feature vectors representing the normal behavior class. Other settings are possible, but this is the configuration that gives the best anomaly detection performance, since it represents the best trade-off between the false acceptance and false rejection error rates.</p>
<p id="p-0076" num="0092">The value of the constant C is determined empirically for each type of feature set and represents the trade-off between the correct classification and the error rates.</p>
<p id="p-0077" num="0093">Data acquisition (block <b>10</b>) may be performed by collectors which are part of the network. Specifically, the collectors may be common network devices with their network interfaces in promiscuous mode, which receive all OSPF-related messages. They can also be routers.</p>
<p id="p-0078" num="0094">In a possible embodiment of the present invention, the collectors may also carry out the LSA extraction (block <b>12</b>) and the LSA headers extraction (block <b>13</b>). In this case, they select only LSA instances from OSPF traffic, eliminate the duplicates, extract and send the LSA headers to a common collection point responsible for the training feature vectors creation (block <b>14</b>) and the OC-SVM training (block <b>15</b>).</p>
<p id="p-0079" num="0095">The proposed anomaly detection can work with different sets of features extracted from OSPF LSA instances. Even if hereinafter it will be described the use of some sets, other sets can be used, since the invention provides an automatic procedure for computing the necessary SVM parameters for each new type of feature set.</p>
<p id="p-0080" num="0096">According to an embodiment of the present invention, training feature vectors contain twenty integer numbers representing the values of the twenty bytes composing the headers of the LSA instances observed in the modeled Autonomous System in normal operating conditions, i.e. during the substantially free-of-attack and free-of-failure training period. Hence, according to this embodiment, vectors containing twenty integer numbers, each with a value ranging from 0 to 255, are used.</p>
<p id="p-0081" num="0097">It's important to note that according to this embodiment the values of the fields are considered as such in the composition of training feature vectors, therefore no time-consuming pre-processing is needed.</p>
<p id="p-0082" num="0098">According to another embodiment of the present invention, the &#x201c;LS Checksum&#x201d; field is excluded, since it is considered less important for detection of anomalies and attacks. In fact this field depends on the values of the other fields. As a consequence, the training feature vectors, in this case, contain eighteen integers.</p>
<p id="p-0083" num="0099">According to a further embodiment, each switching node inside the network can be provided with an own one-class SVM. Accordingly, the LSAs are slightly pre-processed, i.e. they are grouped per originating switching node.</p>
<p id="p-0084" num="0100">Accordingly, all the LSAs originating from the same switching node form, the training feature vectors for this specific switching node, and contribute to the creation of the reference template of that switching node. Hence the number of reference templates is equal to the number of OSPF switching nodes. In this case, the training feature vectors include fourteen integers because the 4-byte &#x201c;Advertising Router&#x201d; field is also excluded from the template computation, since it is previously used for the LSAs selection (grouping). Also if this embodiment tends to be more time consuming, it yields better detection results especially if the number of switching nodes in the network is high.</p>
<p id="p-0085" num="0101">According to the foregoing, OC-SVM training (block <b>15</b>) results in the creation of the reference template, which characterizes the normal operating behavior of the OSPF routing in the modeled network. In particular, only positive examples of the network behavior are used for the training <b>1</b> of the one-class Support Vector Machine and these examples are the training feature vectors created during a substantially free-of-attacks and free-of-failures training period.</p>
<p id="p-0086" num="0102">In particular, the OC-SVM computes or &#x201c;learns&#x201d; a function h which defines a hypersphere which encloses all the positive example's representing the normal class, while all other examples are not necessary for the complete definition of the hypersphere.</p>
<p id="p-0087" num="0103">More particularly, the OC-SVM operates by mapping the training feature vectors into a high-dimensional feature space and by finding in the high-dimensional feature space a hypersphere that encompasses all the training feature vectors, the hypersphere having a given center, a given radius defining the detection threshold and a surface in the high-dimensional feature space defined by the support vectors.</p>
<p id="p-0088" num="0104">The obtained support vectors together with some SVM specific parameters, such as the radius of the hypersphere, i.e. the detection threshold, the sigma value of the RBF kernel function, i.e. the variance of the kernel function of the OC-SVM, and the value of the constant C, form the reference template which represents the normal routing behavior of the network.</p>
<p id="p-0089" num="0105">In case of each switching node inside the network provided with an own one-class SVM, each modeled switching node of the network has its own reference template.</p>
<p id="p-0090" num="0106">According to <figref idref="DRAWINGS">FIG. 5</figref>, the anomaly detection phase <b>2</b> comprises:
<ul id="ul0010" list-style="none">
    <li id="ul0010-0001" num="0000">
    <ul id="ul0011" list-style="none">
        <li id="ul0011-0001" num="0107">data acquisition (collection) (block <b>20</b>), i.e. acquisition of all LSU messages exchanged in the network;</li>
        <li id="ul0011-0002" num="0108">feature extraction (block <b>21</b>), in turn comprising:
        <ul id="ul0012" list-style="none">
            <li id="ul0012-0001" num="0109">LSA extraction (block <b>22</b>),</li>
            <li id="ul0012-0002" num="0110">LSA header extraction (block <b>23</b>), and</li>
            <li id="ul0012-0003" num="0111">serialization of the values extracted from the LSA headers, so forming the detection feature vector (block <b>24</b>); and</li>
        </ul>
        </li>
        <li id="ul0011-0003" num="0112">anomaly detection (block <b>25</b>) based on the detection feature vectors and reference template.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0091" num="0113">Moreover, an alarm together with an attached severity-level may also be issued.</p>
<p id="p-0092" num="0114">After the feature extraction (block <b>21</b>), the one-class SVM classification is applied on each detection feature vector composing the live set at a given moment in time, and the anomaly detection (block <b>25</b>) is performed.</p>
<p id="p-0093" num="0115">Specifically, the anomaly detection (block <b>25</b>) consists in computing, for each detection feature vector representing a feature set, its distance from the center of the hypersphere computed during the training phase <b>1</b>. If the distance is shorter than the detection threshold, i.e. the radius of the hypersphere, the actual detection feature vector is classified as belonging to the normal class. Otherwise an anomaly is detected and an alarm is issued.</p>
<p id="p-0094" num="0116">Alternatively, the anomaly detection (block <b>25</b>) may be implemented by means of a decision fusion scheme. In the simplest case, the fusion rule may be based on majority voting. A simple majority voting scheme includes:
<ul id="ul0013" list-style="none">
    <li id="ul0013-0001" num="0000">
    <ul id="ul0014" list-style="none">
        <li id="ul0014-0001" num="0117">computing a distance between each detection feature vector and the center of the hypersphere in the high-dimensional feature space;</li>
        <li id="ul0014-0002" num="0118">detecting an anomaly if the number of detection feature vectors with a distance lower than the anomaly detection threshold in relation to the total number of detection feature vectors is lower than a given value.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0095" num="0119">Other fusion rules can be implemented if required. The severity of the alarm may be set directly proportional to the average distance between the detection feature vectors and the reference hypersphere.</p>
<p id="p-0096" num="0120">The advantages of the present invention are clear from the foregoing. In particular, not only the training phase <b>1</b>, but also the anomaly detection phase <b>2</b> is significantly simplified with one-class Support Vector Machines, since only one reference template per network or per switching node is used for the anomaly detection and not an arbitrary number of attack signatures as in the existing detection methods. Consequently, the anomaly detection according to the present invention is faster and its duration does not depend on the size of an additional database.</p>
<p id="p-0097" num="0121">Additionally, all anomalies which alter the normal values of the fields of the link-state routing protocol messages exchanged inside a network are detected in real-time and in a reliable way. Such anomalies can either be due to attacks to the routing infrastructure or to errors and failure condition of the routing infrastructure. Such attacks can also be originated externally, for example coming from a router belonging to an external network.</p>
<p id="p-0098" num="0122">The main attacks, which can result in anomalies in the network routing, are:
<ul id="ul0015" list-style="none">
    <li id="ul0015-0001" num="0000">
    <ul id="ul0016" list-style="none">
        <li id="ul0016-0001" num="0123">cross algorithm route hijacking, in which a Border Gateway Protocol (BGP) router announces reachability to prefixes it does not own nor is able to route to, thus black-holing the traffic to those prefixes; route hijacking is usually the result of misconfigurations, for example, a typo advertising the prefix 1.3.3.0/24 instead of 1.2.3.0/24, but it can be also malicious, employed as a form of DOS (Denial Of Service) attack;</li>
        <li id="ul0016-0002" num="0124">resource consumption, in which a malicious router of the OSPF network injects fake routes (e.g. type 5 external routes) in a stateless way; working in a stateless manner, it can inject data without consuming its own resources, and, in the same time, filling the central unit of other nodes with trash; this attack will affect the weakest routers (i.e. the ones with less memory) and the nearest to the attacker first; when a router has no more room to store OSPF data, it cannot receive more updates; in the mean time, the OSPF process deletes good data when they are old, leaving the node with bad data only;</li>
        <li id="ul0016-0003" num="0125">internal route hijacking, in which a router announces a route that is owned by another router; the attacker creates a so-called &#x201c;attraction area&#x201d;, an area in which the cost of the network it announces is lower than the cost of the router owner; inside this area it attracts the packet addressed to the route, while outside the packets are routed correctly;</li>
        <li id="ul0016-0004" num="0126">external route injection, in which a router announces a route that is not owned by any router of the (internal) network; normally the way selected for this route is the general one (i.e. the default route); if a specific network is injected in OSPF it is surely chosen by every router of the inside network, relying on the longest prefix match paradigm;</li>
        <li id="ul0016-0005" num="0127">route leakage, when a misconfigured BGP router mistakenly sends a lot of routes to a peer with limited resources, which can completely melt down the peer router; in general BGP routers have fast interfaces and a lot of memory and CPU power, while OSPF ones can have fast or slow interfaces, much or few memory and fast or slow CPU, hence, if a BGP router redistributes all of its networks into OSPF some crash situation may occur; this happens also because BGP is a slow algorithm but able to transport a lot of data (millions of routes), while OSPF is extremely fast, but requires much data and large databases to do it, so it is not able to transport a large quantity of data as BGP; and</li>
        <li id="ul0016-0006" num="0128">OSPF insider attacks such as max-sequence, max age, sequence++, bogus LSA; these attacks try to subvert a route that is originated from a router of the network; the subversion could consist in deleting the route from the network (using the &#x201c;premature aging&#x201d; technique) or overwriting an information related to that route; the owner of the route will try, to re-establish the correct state (fight-back procedure), so the attacker subverts the router if, he/she sends more data than it; this makes the attack very noisy.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0099" num="0129">The described attacks are all correctly detected by the anomaly detection method according to the present invention.</p>
<p id="p-0100" num="0130">Finally, it is clear that numerous modifications and variants can be made to the present invention, all falling within the scope of the invention, as defined in the appended claims.</p>
<p id="p-0101" num="0131">In particular, it is again pointed out that the present invention may also be applied to any link-state routing protocol other than the aforementioned OSPF.</p>
<p id="p-0102" num="0132">Moreover, in principle, anomaly detection may be based on machine learning approaches other than those previously described (one-class classifiers in general, and one-class Support Vector Machines in particular), such as neural networks or clustering algorithms, all based on the contents of the LSA headers.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-math idrefs="MATH-US-00001" nb-file="US08626678-20140107-M00001.NB">
<img id="EMI-M00001" he="7.45mm" wi="76.20mm" file="US08626678-20140107-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00002 MATH-US-00002-2" nb-file="US08626678-20140107-M00002.NB">
<img id="EMI-M00002" he="14.14mm" wi="76.20mm" file="US08626678-20140107-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00003" nb-file="US08626678-20140107-M00003.NB">
<img id="EMI-M00003" he="7.03mm" wi="76.20mm" file="US08626678-20140107-M00003.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An anomaly detection method for link-state routing protocols, a link-state routing protocol providing for link-state update messages to be exchanged between nodes in a packet-based network, wherein each link-state update message includes link-state advertisement message(s) each having a respective header with a number of fields, the method comprising:
<claim-text>extracting and forming respective training feature vectors with values in at least some of the fields of the headers of at least some of the link-state advertisement messages exchanged in the network during a training period;</claim-text>
<claim-text>computing a hypersurface encompassing the training feature vectors, wherein the hypersurface comprises a center and a radius defining an anomaly detection threshold;</claim-text>
<claim-text>monitoring link-state advertisement messages exchanged in the network;</claim-text>
<claim-text>extracting and forming respective detection feature vectors with the values in at least some of the fields of the headers of at least some of the monitored link-state advertisement messages;</claim-text>
<claim-text>detecting an anomaly related to routing by comparing positions of the detection feature vectors to the hypersurface and feeding the detection feature vectors to a one-class support vector machine and;</claim-text>
<claim-text>training the one-class support vector machine during the training period based on the training feature vectors, wherein the training period is substantially free-of-attacks and free-of-failures,</claim-text>
<claim-text>wherein the one-class support vector machine is based on a kernel function with a variance which is set substantially equal to an average Euclidean distance between the training feature vectors, and wherein the kernel function is a radial basis function,</claim-text>
<claim-text>wherein the one-class support vector machine operates by mapping the training feature vectors into a high-dimensional feature space used to model the hypersurface, and wherein the one-class support vector machine includes support vectors defined by training feature vectors closest to the hypersurface;</claim-text>
<claim-text>wherein training the one-class support vector machine includes computing a reference template including the support vectors, the variance of the kernel function, and the center and radius of the one-class support vector machines, and representing a free-of-attacks and free-of-failures routing behaviour of the network; and</claim-text>
<claim-text>wherein detecting an anomaly related to routing includes:
<claim-text>detecting an anomaly related to routing based on the reference template and the detection feature vectors; and</claim-text>
</claim-text>
<claim-text>wherein detecting an anomaly related to routing based on the reference template and the detection feature vectors comprises:
<claim-text>computing a distance between each detection feature vector and the center of the hypersurface in the high-dimensional feature space; and</claim-text>
<claim-text>detecting an anomaly related to routing based on the computed distances.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein detecting an anomaly related to routing based on the computed distances includes:
<claim-text>detecting an anomaly related to routing if a computed distance is higher than the anomaly detection threshold.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein detecting an anomaly related to routing is based on a decision fusion scheme.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the decision fusion scheme is based on majority voting.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein majority voting includes:
<claim-text>computing a distance between each detection feature vector and the center of a hypersphere in the high-dimensional feature space; and</claim-text>
<claim-text>detecting an anomaly related to routing if a number of detection feature vectors with a distance lower than the anomaly detection threshold in relation to a total number of detection feature vectors is lower than a given value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the method is implemented by each node in the network.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. An anomaly detection system for link-state routing protocols, a link-state routing protocol providing for link-state update messages to be exchanged between nodes in a packet-based network, wherein each link-state update message includes link-state advertisement message(s) each having a respective header with a number of fields, the anomaly detection system being configured to implement an anomaly detection method comprising:
<claim-text>extracting and forming respective training feature vectors with values in at least some of the fields of the headers of at least some of the link-state advertisement messages exchanged in the network during a training period;</claim-text>
<claim-text>computing a hypersurface encompassing the training feature vectors, wherein the hypersurface comprises a center and a radius defining an anomaly detection threshold;</claim-text>
<claim-text>monitoring link-state advertisement messages exchanged in the network;</claim-text>
<claim-text>extracting and forming respective detection feature vectors with the values in at least some of the fields of the headers of at least some of the monitored link-state advertisement messages;</claim-text>
<claim-text>detecting an anomaly related to routing by comparing positions of the detection feature vectors to the hypersurface and feeding the detection feature vectors to a one-class support vector machine and;</claim-text>
<claim-text>training the one-class support vector machine during the training period based on the training feature vectors, wherein the training period is substantially free-of-attacks and free-of-failures,</claim-text>
<claim-text>wherein the one-class support vector machine is based on a kernel function with a variance which is set substantially equal to an average Euclidean distance between the training feature vectors, and wherein the kernel function is a radial basis function,</claim-text>
<claim-text>wherein the one-class support vector machine operates by mapping the training feature vectors into a high-dimensional feature space used to model the hypersurface, and wherein the one-class support vector machine includes support vectors defined by training feature vectors closest to the hypersurface;</claim-text>
<claim-text>wherein training the one-class support vector machine includes computing a reference template including the support vectors, the variance of the kernel function, and the center and radius of the one-class support vector machines, and representing a free-of-attacks and free-of-failures routing behaviour of the network; and</claim-text>
<claim-text>wherein detecting an anomaly related to routing includes:
<claim-text>detecting an anomaly related to routing based on the reference template and the detection feature vectors; and</claim-text>
</claim-text>
<claim-text>wherein detecting an anomaly related to routing based on the reference template and the detection feature vectors comprises:
<claim-text>computing a distance between each detection feature vector and the center of the hypersurface in the high-dimensional feature space; and</claim-text>
<claim-text>detecting an anomaly related to routing based on the computed distances.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A non-transitory computer readable memory having computer executable instructions stored thereon, which when executed by a processor perform an anomaly detection method for link-state routing protocols, a link-state routing protocol providing for link-state update messages to be exchanged between nodes in a packet-based network, wherein each link-state update message includes link-state advertisement message(s) each having a respective header with a number of fields, the method comprising:
<claim-text>extracting and forming respective training feature vectors with values in at least some of the fields of the headers of at least some of the link-state advertisement messages exchanged in the network during a training period;</claim-text>
<claim-text>computing a hypersurface encompassing the training feature vectors, wherein the hypersurface comprises a center and a radius defining an anomaly detection threshold;</claim-text>
<claim-text>monitoring link-state advertisement messages exchanged in the network;</claim-text>
<claim-text>extracting and forming respective detection feature vectors with the values in at least some of the fields of the headers of at least some of the monitored link-state advertisement messages;</claim-text>
<claim-text>detecting an anomaly related to routing by comparing positions of the detection feature vectors to the hypersurface and feeding the detection feature vectors to a one-class support vector machine and;</claim-text>
<claim-text>training the one-class support vector machine during the training period based on the training feature vectors, wherein the training period is substantially free-of-attacks and free-of-failures,</claim-text>
<claim-text>wherein the one-class support vector machine is based on a kernel function with a variance which is set substantially equal to an average Euclidean distance between the training feature vectors, and wherein the kernel function is a radial basis function,</claim-text>
<claim-text>wherein the one-class support vector machine operates by mapping the training feature vectors into a high-dimensional feature space used to model the hypersurface, and wherein the one-class support vector machine includes support vectors defined by training feature vectors closest to the hypersurface;</claim-text>
<claim-text>wherein training the one-class support vector machine includes computing a reference template including the support vectors, the variance of the kernel function, and the center and radius of the one-class support vector machines, and representing a free-of-attacks and free-of-failures routing behaviour of the network; and</claim-text>
<claim-text>wherein detecting an anomaly related to routing includes:
<claim-text>detecting an anomaly related to routing based on the reference template and the detection feature vectors; and</claim-text>
</claim-text>
<claim-text>wherein detecting an anomaly related to routing based on the reference template and the detection feature vectors comprises:
<claim-text>computing a distance between each detection feature vector and the center of the hypersurface in the high-dimensional feature space; and</claim-text>
<claim-text>detecting an anomaly related to routing based on the computed distances.</claim-text>
</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
