<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626722-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626722</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12778063</doc-number>
<date>20100511</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>17</main-group>
<subgroup>30</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>707690</main-classification>
<further-classification>709223</further-classification>
</classification-national>
<invention-title id="d2e43">Consolidating session information for a cluster of sessions in a coupled session environment</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6006259</doc-number>
<kind>A</kind>
<name>Adelman et al.</name>
<date>19991200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6363421</doc-number>
<kind>B2</kind>
<name>Barker et al.</name>
<date>20020300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6463501</doc-number>
<kind>B1</kind>
<name>Kern et al.</name>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6484187</doc-number>
<kind>B1</kind>
<name>Kern et al.</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>7443787</doc-number>
<kind>B2</kind>
<name>Karino et al.</name>
<date>20081000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7613699</doc-number>
<kind>B2</kind>
<name>Noehring et al.</name>
<date>20091100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>7958098</doc-number>
<kind>B2</kind>
<name>Noehring et al.</name>
<date>20110600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>8433691</doc-number>
<kind>B2</kind>
<name>Noehring et al.</name>
<date>20130400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2003/0028804</doc-number>
<kind>A1</kind>
<name>Noehring et al.</name>
<date>20030200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2003/0050938</doc-number>
<kind>A1</kind>
<name>Peng et al.</name>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2006/0010338</doc-number>
<kind>A1</kind>
<name>Schroiff et al.</name>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2006/0053216</doc-number>
<kind>A1</kind>
<name>Deokar et al.</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2006/0248199</doc-number>
<kind>A1</kind>
<name>Stanev</name>
<date>20061100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709227</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2007/0274307</doc-number>
<kind>A1</kind>
<name>Karino et al.</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2010/0088288</doc-number>
<kind>A1</kind>
<name>Noehring et al.</name>
<date>20100400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2011/0119305</doc-number>
<kind>A1</kind>
<name>Noehring et al.</name>
<date>20110500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>TW</country>
<doc-number>561351</doc-number>
<date>20031100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>TW</country>
<doc-number>I234975</doc-number>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>TW</country>
<doc-number>I241494</doc-number>
<date>20051000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00020">
<document-id>
<country>WO</country>
<doc-number>00/31945</doc-number>
<date>20000600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00021">
<document-id>
<country>WO</country>
<doc-number>2005/017746</doc-number>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00022">
<document-id>
<country>WO</country>
<doc-number>2005/060187</doc-number>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00023">
<document-id>
<country>WO</country>
<doc-number>2005/101760</doc-number>
<date>20051000</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00024">
<othercit>C. Warrick et al., &#x201c;IBM TotalStorage Enterprise Storage Server: Implementing ESS Copy Services with IBM eServer zSeries&#x201d;, IBM Corporation, Document No. SG24-5680-04, Jul. 2004, Chaps. 1, 3, and 5.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00025">
<othercit>Office Action dated Apr. 6, 2009 for U.S. Appl. No. 11/356,664, filed Feb. 16, 2006.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00026">
<othercit>Office Action dated Nov. 10, 2009 for U.S. Appl. No. 11/356,664, filed Feb. 16, 2006.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00027">
<othercit>Notice of Allowance dated Mar. 11, 2010 for U.S. Appl. No. 11/356,664, filed Feb. 16, 2006.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00028">
<othercit>Response IFW dated Jul. 7, 2009, pp. 1-15, to First Office Action IFW dated Apr. 6, 2009, pp. 1-34, for U.S. Appl. No. 11/356,664, filed Feb. 16, 2006, by inventors D.R. Blea et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00029">
<othercit>Response IFW dated Feb. 24, 2010, pp. 1-10, to Final Office Action IFW dated Nov. 10, 2009, pp. 1-34, for U.S. Appl. No. 11/356,664, filed Feb. 16, 2006, by inventors D.R. Blea et al.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00030">
<othercit>Information Materials for IDS document from JPO Office Acton dated Dec. 20, 2011 for Serial No. JP2007-025622, filed Feb. 5, 2007.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00031">
<othercit>US Patent No. 7,613,699, dated Nov. 3, 2009, is an English language equivalent of TWI234975, dated Jun. 21, 2005.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00032">
<othercit>US Patent No. 7,958,098, dated Jun. 7, 2011, is an English language equivalent of TWI234975, dated Jun. 21, 2005.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00033">
<othercit>US Patent No. 8,433,691, dated Apr. 30, 2013, is an English language equivalent of TWI234975, dated Jun. 21, 2005.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00034">
<othercit>US Publication No. 2003/0028804, dated Feb. 6, 2003, is an English language equivalent of TWI234975, dated Jun. 21, 2005.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00035">
<othercit>US Publication No. 2010/0088288, dated Apr. 8, 2010, is an English language equivalent of TWI234975, dated Jun. 21, 2005.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00036">
<othercit>US Publication No. 2011/0119305, dated May 19, 2011, is an English language equivalent of TWI234975, dated Jun. 21, 2005.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00037">
<othercit>US Publication No. 2003/0050938, dated Mar. 13, 2003, is an English language equivalent of TWI241494, dated Oct. 11, 2005.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00038">
<othercit>Information Materials for IDS dated Jun. 24, 2013 for Taiwan Office Action dated Jun. 19, 2013, or Serial No. 96104166, filed Feb. 5, 2007.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00039">
<othercit>Taiwan Search Report dated Jun. 19, 2013 for Serial No. 96104166, filed Feb. 5, 2007.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>39</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>709223</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709227</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707690</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>7</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>11356664</doc-number>
<date>20060216</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>7761431</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>12778063</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20100217857</doc-number>
<kind>A1</kind>
<date>20100826</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Blea</last-name>
<first-name>Donald Reynold</first-name>
<address>
<city>Tucson</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Crockett</last-name>
<first-name>Robert Nelson</first-name>
<address>
<city>Tucson</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>McBride</last-name>
<first-name>Gregory Edward</first-name>
<address>
<city>Vail</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>McClure</last-name>
<first-name>Alan George</first-name>
<address>
<city>Sahuarita</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="005" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Shackelford</last-name>
<first-name>David M.</first-name>
<address>
<city>Tucson</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Blea</last-name>
<first-name>Donald Reynold</first-name>
<address>
<city>Tucson</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Crockett</last-name>
<first-name>Robert Nelson</first-name>
<address>
<city>Tucson</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>McBride</last-name>
<first-name>Gregory Edward</first-name>
<address>
<city>Vail</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>McClure</last-name>
<first-name>Alan George</first-name>
<address>
<city>Sahuarita</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="005" designation="us-only">
<addressbook>
<last-name>Shackelford</last-name>
<first-name>David M.</first-name>
<address>
<city>Tucson</city>
<state>AZ</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Victor</last-name>
<first-name>David W.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<orgname>Konrad Raynes Davda &#x26; Victor LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>International Business Machines Corporation</orgname>
<role>02</role>
<address>
<city>Armonk</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Peng</last-name>
<first-name>Huawen</first-name>
<department>2158</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Provided are a method, system, and program for consolidating session information for a cluster of sessions in a coupled session environment. Information for each of a plurality of sessions comprising a cluster is stored in a memory of a processor session. Each session associates at least one primary system and at least one secondary system, wherein within each session, updates are copied from the at least one primary system to the at least one secondary system. The session information in the memory for the plurality of sessions is processed to generate consolidated session information for the cluster based on the session information for the sessions in the cluster. The consolidated session information for the cluster is written to a master data set maintaining information for sessions.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="105.49mm" wi="72.39mm" file="US08626722-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="175.60mm" wi="132.16mm" file="US08626722-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="166.71mm" wi="186.18mm" file="US08626722-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="120.57mm" wi="152.23mm" file="US08626722-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="120.14mm" wi="101.43mm" file="US08626722-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="138.94mm" wi="126.92mm" file="US08626722-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="164.08mm" wi="113.37mm" file="US08626722-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 11/356,664, filed on Feb. 16, 2006, which patent application is incorporated herein by reference in its entirety.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">1. Field of the Invention</p>
<p id="p-0004" num="0003">The present invention relates to a method, system, and program for consolidating session information for a cluster of sessions in a coupled session environment.</p>
<p id="p-0005" num="0004">2. Description of the Related Art</p>
<p id="p-0006" num="0005">Disaster recovery systems typically address two types of failures, a sudden catastrophic failure at a single point in time or data loss over a period of time. In the second type of gradual disaster, updates to volumes may be lost. To assist in recovery of data updates, a copy of data may be provided at a remote location. Such dual or shadow copies are typically made as the application system is writing new data to a primary storage device. Different copy technologies may be used for maintaining remote copies of data at a secondary site, such as International Business Machine Corporation's (&#x201c;IBM&#x201d;) Extended Remote Copy (XRC), Coupled XRC (CXRC), Global Copy, and Global Mirror Copy. These different copy technologies are described in the IBM publications &#x201c;The IBM TotalStorage DS6000 Series: Copy Services in Open Environments&#x201d;, IBM document no. SG24-6783-00 (September 2005) and &#x201c;IBM TotalStorage Enterprise Storage Server: Implementing ESS Copy Services with IBM eServer zSeries&#x201d;, IBM document no. SG24-5680-04 (July 2004).</p>
<p id="p-0007" num="0006">In data mirroring systems, data is maintained in volume pairs. A volume pair is comprised of a volume in a primary storage device and a corresponding volume in a secondary storage device that includes an identical copy of the data maintained in the primary volume. Primary and secondary storage controllers may be used to control access to the primary and secondary storage devices. In certain backup system, a sysplex timer is used to provide a uniform time across systems so that updates written by different applications to different primary storage devices use consistent time-of-day (TOD) value as a time stamp. Application systems time stamp data sets when writing such data sets to volumes in the primary storage. The integrity of data updates is related to insuring that updates are done at the secondary volumes in the volume pair in the same order as they were done on the primary volume. The time stamp provided by the application program determines the logical sequence of data updates.</p>
<p id="p-0008" num="0007">In many application programs, such as database systems, certain writes cannot occur unless a previous write occurred; otherwise the data integrity would be jeopardized. Such a data write whose integrity is dependent on the occurrence of previous data writes is known as a dependent write. Volumes in the primary and secondary storages are consistent when all writes have been transferred in their logical order, i.e., all dependent writes transferred first before the writes dependent thereon. A consistency group has a consistency time for all data writes in a consistency group having a time stamp equal or earlier than the consistency time stamp. A consistency group is a collection of updates to the primary volumes such that dependent writes are secured in a consistent manner. The consistency time is the latest time to which the system guarantees that updates to the secondary volumes are consistent. Consistency groups maintain data consistency across volumes and storage devices. Thus, when data is recovered from the secondary volumes, the recovered data will be consistent.</p>
<p id="p-0009" num="0008">Consistency groups are formed within a session. All volume pairs assigned to a session will have their updates maintained in the same consistency group. Thus, the sessions are used to determine the volumes that will be grouped together in a consistency group. Consistency groups are formed within a journal device or volume. From the journal, updates gathered to from a consistency group are applied to the secondary volume. If the system fails while updates from the journal are being applied to a secondary volume, during recovery operations, the updates that did not complete writing to the secondary volume can be recovered from the journal and applied to the secondary volume.</p>
<p id="p-0010" num="0009">In a coupled session environment, such as the Coupled XRC environment (CXRC), multiple sessions spread across different processors coordinate their updates through a master data set that provide the time of the most recent update for every session in the coupled session environment. Sessions must write updated session information to the master data set for other sessions in the coupled environment to read in order to maintain data consistency across all sessions. Sessions need to access the master data set to determine the minimum of the most recent update times across all sessions so that no session applies updates greater than the minimum of the most recent update times. Sessions performing reads and writes to the master data set may lock other sessions out of performing such operations. As the number of sessions increase in as coupled session environment, the number of reads and writes to the shared master data set increases, which may cause delays for the other sessions trying to gain access.</p>
<p id="p-0011" num="0010">For these reasons, there is a need in the art to provide techniques to improve the usage and management of the master data set.</p>
<heading id="h-0002" level="1">SUMMARY</heading>
<p id="p-0012" num="0011">Provided are a method, system, and program for consolidating session information for a cluster of sessions in a coupled session environment. Information for each of a plurality of sessions comprising a cluster is stored in a memory of a processor session. Each session associates at least one primary system and at least one secondary system, wherein within each session, updates are copied from the at least one primary system to the at least one secondary system. The session information in the memory for the plurality of sessions is processed to generate consolidated session information for the cluster based on the session information for the sessions in the cluster. The consolidated session information for the cluster is written to a master data set maintaining information for sessions.</p>
<p id="p-0013" num="0012">In a further embodiment, information on a session not included in the cluster is written to the master data set. The session not included in the cluster associates at least one primary system and at least one secondary system such that updates are copied from the at least one primary system to the at least one secondary system.</p>
<p id="p-0014" num="0013">In a further embodiment, the processor comprises a first processor, wherein the session not included in the cluster is managed by a second processor, and wherein the first processor manages the copying of updates for the sessions in the cluster.</p>
<p id="p-0015" num="0014">In a further embodiment, the cluster comprises a first cluster and the master data set is adapted to include information from additional clusters including sessions managed by additional processors.</p>
<p id="p-0016" num="0015">In a further embodiment, processing the information comprises determining a most recent update time for each session indicated in the memory, wherein the consolidated information comprises a minimum of the determined most recent update times.</p>
<p id="p-0017" num="0016">In a further embodiment, the master data set is adapted to include information from coupled sessions associating at least one primary storage and at least one secondary storage that are managed by additional processors. The additional processors read the consolidated information in the master data set to determine the minimum of the most recent update times across all the coupled sessions indicated in the master data set to maintain data consistency across coupled sessions.</p>
<p id="p-0018" num="0017">In a further embodiment, processing the information comprises determining a value of an error flag for each session indicated in the memory, wherein the consolidated information comprises performing an OR operation on all the determined error flags, wherein additional processors managing additional sessions fails an update in response to determining that the consolidated error flag indicates an error.</p>
<p id="p-0019" num="0018">In a further embodiment, processing the information comprises determining a value of a state flag for each session indicated in the memory. The consolidated information is generated by performing a first type of operation on the determined values to determine consolidated information for a first operation and performing a second type of operation on the determined values to determine consolidated information for a second operation.</p>
<p id="p-0020" num="0019">In a further embodiment, the state flag indicates whether the session is consistent with all other sessions represented in the master data set, wherein the first type of operation comprises an OR operation and wherein the second type of operation comprises an AND operation.</p>
<p id="p-0021" num="0020">In a further embodiment, the master data set is adapted to include information from sessions associating at least one primary storage and at least one secondary storage that are managed by additional processors. One processor managing at least one session processes the information for each cluster or session not included in a cluster indicated in the master data set to obtain a value providing information on all sessions indicated in the master data set and processes the value to determine whether to perform write updates from the primary system to the secondary system.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an embodiment of a network computing environment.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 2</figref> illustrates an embodiment of individual session information.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an embodiment of consolidated session information.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 4</figref> illustrates an embodiment of operations to update session information.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an embodiment of operations to consolidate session information for sessions that are part of a cluster.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an embodiment of operations to copy updates to a primary storage to a secondary storage.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 7</figref> illustrates an embodiment of operations for functions to consolidate and use session information.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an embodiment of a network computing environment. A network <b>2</b> includes a plurality of primary control units <b>4</b><i>a </i>. . . <b>4</b><i>m</i>, <b>4</b><i>n</i>; primary storages <b>6</b><i>a </i>. . . <b>6</b><i>m</i>, <b>6</b><i>n</i>; data movers <b>8</b><i>a </i>. . . <b>8</b><i>m</i>, <b>8</b><i>n </i>managing the copying of updates to the primary storages <b>6</b><i>a </i>. . . <b>6</b><i>m</i>, <b>6</b><i>n </i>to secondary control units <b>10</b><i>a </i>. . . <b>10</b><i>m</i>, <b>10</b><i>n </i>and corresponding secondary storages <b>12</b><i>a </i>. . . <b>12</b><i>m</i>, <b>12</b><i>n</i>; a host <b>14</b> writing updates to the primary storages <b>6</b><i>a </i>. . . <b>6</b><i>m</i>, <b>6</b><i>n</i>; a system timer <b>18</b>; and a master data set <b>20</b>. The data movers <b>8</b><i>a </i>. . . <b>8</b><i>m</i>, <b>8</b><i>n </i>are implemented in processors <b>22</b><i>a </i>and <b>22</b><i>b</i>. The components <b>4</b><i>a </i>. . . <b>4</b><i>m</i>, <b>4</b><i>n</i>, <b>6</b><i>a </i>. . . <b>6</b><i>m</i>, <b>6</b><i>n</i>, <b>8</b><i>a </i>. . . <b>8</b><i>m</i>, <b>8</b><i>n</i>, <b>10</b><i>a </i>. . . <b>10</b><i>m</i>, <b>10</b><i>n</i>, <b>12</b><i>a </i>. . . <b>12</b><i>m</i>, <b>12</b><i>n</i>, <b>14</b>, <b>18</b>, <b>20</b>, <b>22</b><i>a</i>, <b>22</b><i>b </i>are connected to the network <b>2</b> and the network <b>2</b> enables communication among these components. The network <b>2</b> may include one or more switches to provide one or more paths of communication between the different network <b>2</b> elements.</p>
<p id="p-0030" num="0029">In described embodiments, a single processor <b>22</b><i>a </i>may include multiple system data mover (SDM) programs <b>8</b><i>a </i>. . . <b>8</b><i>m</i>, where each SDM <b>8</b><i>a </i>. . . <b>8</b><i>m </i>manages the transfer of updates for one or more sessions. Each session associates primary and secondary volumes such that updates applied to the primary volumes are copied to the associated secondary volumes. The primary and secondary volumes associated in one session may be managed by one or more primary control units <b>4</b><i>a </i>. . . <b>4</b><i>m </i>and one or more secondary control units <b>4</b><i>a </i>. . . . <b>4</b><i>m</i>. Multiple sessions maintained by a single processor <b>22</b><i>a </i>comprise a cluster <b>24</b>. Thus, a cluster <b>24</b> represents sessions managed within a single processor <b>22</b><i>a</i>. Each session may be assigned its own address space in the processor <b>22</b><i>a. </i></p>
<p id="p-0031" num="0030">An individual session, such as individual session <b>25</b>, is not included within a cluster of multiple sessions. In such case, the processor <b>22</b><i>b </i>maintaining the SDM <b>8</b><i>n </i>for the individual session <b>25</b> does not include SDMs for any other sessions. <figref idref="DRAWINGS">FIG. 1</figref> shows only one cluster <b>24</b> and one individual session <b>25</b> that are maintaining data consistency. In additional embodiments, there may be multiple clusters and multiple individual sessions not part of a cluster. In further embodiments, one processor may implement multiple sessions that are not coupled in a cluster, such that each session implemented in the single processor comprise unclustered, individual sessions.</p>
<p id="p-0032" num="0031">System data mover (SDM) programs <b>8</b><i>a </i>. . . <b>8</b><i>n </i>read updates from the primary storages <b>6</b><i>a </i>. . . <b>6</b><i>n </i>and form consistency groups of updates from the primary storage <b>6</b><i>a </i>. . . <b>6</b><i>n </i>to write to the corresponding secondary storage <b>12</b><i>a </i>. . . <b>12</b><i>n</i>. At the primary control units <b>4</b><i>a </i>. . . <b>4</b><i>n</i>, updates may be written to a side file in a cache of the primary control units <b>4</b><i>a </i>. . . <b>4</b><i>n</i>. The updates may then be transferred to journals <b>26</b><i>a </i>. . . <b>26</b><i>n </i>maintained by the SDMs <b>8</b><i>a </i>. . . <b>8</b><i>n</i>. The journals <b>26</b><i>a </i>. . . <b>26</b><i>n </i>may be implemented on a disk storage device. Within each of the journals <b>26</b><i>a </i>. . . <b>26</b><i>n</i>, the updates are arranged into consistency groups. The journals <b>26</b><i>a </i>. . . <b>26</b><i>n </i>may store one or more consistency groups. A consistency group has a consistency time for all data writes in a consistency group having a time stamp equal or earlier than the consistency time stamp. A consistency group is a collection of updates to the primary volumes such that dependent writes are secured in a consistent manner. The consistency time is the latest time to which the system guarantees that updates to the secondary volumes are consistent. Consistency groups maintain data consistency across volumes and storage devices. Thus, when data is recovered from the secondary volumes, the recovered data will be consistent.</p>
<p id="p-0033" num="0032">Consistency groups are formed within a session. All primary and secondary volume pairs assigned to a session will have their updates maintained in the same consistency group. Thus, the sessions are used to determine the volumes that will be grouped together in a consistency group. If the system fails while updates from the journal <b>26</b><i>a </i>. . . <b>26</b><i>n </i>are being applied to a secondary volume, during recovery operations, the updates that did not complete writing to the secondary volume can be recovered from the journal <b>26</b><i>a </i>. . . <b>26</b><i>n </i>and applied to the secondary volume.</p>
<p id="p-0034" num="0033">In <figref idref="DRAWINGS">FIG. 1</figref>, the SDMs <b>8</b><i>a </i>. . . <b>8</b><i>n </i>comprise programs implemented in the processors <b>22</b><i>a</i>, <b>22</b><i>b</i>. In an alternative embodiment, the SDMs <b>8</b><i>a </i>. . . <b>8</b><i>n </i>may be implemented in other systems, such as the primary control units <b>4</b><i>a </i>. . . <b>4</b><i>n</i>, secondary control units <b>10</b><i>a </i>. . . <b>10</b><i>n</i>, etc.</p>
<p id="p-0035" num="0034">A processor <b>22</b><i>a </i>managing multiple sessions for the cluster <b>24</b> includes a cluster manager <b>28</b> program that manages the reading and writing of session information to the master data set <b>20</b>. The SDM <b>8</b><i>n </i>writes the session information for a session not within a cluster to the master data set <b>20</b>. The processor <b>22</b><i>a </i>managing a cluster of sessions also includes a common memory <b>30</b>. Session information within a cluster <b>24</b> is written to the common memory <b>30</b>. The cluster manager <b>28</b> consolidates the session information in the common memory <b>30</b> for multiple sessions and writes consolidated session information for all sessions in the cluster <b>24</b> to the master data set <b>20</b>. Further, the cluster manager <b>28</b> consolidates information in the master data set <b>20</b> to provide to sessions in the cluster <b>24</b> to use when the session SDMs <b>8</b><i>a </i>. . . <b>8</b><i>m </i>copy updates from the primary to secondary storages.</p>
<p id="p-0036" num="0035">The master data set <b>20</b> includes a list of the sessions whose consistency is maintained across sessions. The master data set <b>20</b> list includes information for individual sessions not part of a cluster <b>24</b> and a single consolidated entry for each cluster providing consolidated information for all sessions in the cluster <b>24</b>. The master data set <b>20</b> may reside on volumes in the storages <b>6</b><i>a </i>. . . <b>6</b><i>n</i>, <b>12</b><i>a </i>. . . <b>12</b><i>n </i>and stored in a disk storage device. The journal data sets <b>26</b><i>a </i>. . . <b>26</b><i>n </i>for a primary/secondary control pair may reside on any device. In <figref idref="DRAWINGS">FIG. 1</figref>, each SDM <b>8</b><i>a </i>. . . <b>8</b><i>n </i>is part of one session whose information is indicated in the master data set <b>20</b>. The cluster manager <b>28</b> and individual SDMs <b>8</b><i>n </i>are enabled to access the master data set <b>20</b>.</p>
<p id="p-0037" num="0036">The system timer <b>18</b> provides the time stamps for updates to insure that a common time is used across all SDMs <b>8</b><i>a </i>. . . <b>8</b><i>n </i>to provide a common time reference for application programs writing updates to volumes to insure that updates are not mirrored out-of-sequence. Once updates in the journal <b>26</b><i>a </i>. . . <b>26</b><i>n </i>are organized within a consistency group, then the updates within a consistency group are applied to the secondary storages <b>12</b><i>a </i>. . . <b>12</b><i>n</i>. The creation of consistency groups guarantees that the system will shadow data to a remote site in real time with update sequence integrity for any type of data. Using consistency groups ensures that updates applied to the secondary storages <b>12</b><i>a </i>. . . <b>12</b><i>n </i>within a session are consistent as of the consistency time of the consistency group and consistent between sessions. If a failure occurs while updates are written from the journal <b>22</b><i>a </i>. . . <b>22</b><i>n </i>to secondary volumes in the secondary storage <b>12</b><i>a </i>. . . <b>12</b><i>n</i>, then during recovery, the updates that were interrupted during system failure can be recovered from the journal and reapplied to the secondary volume. In this way, data is insured consistent within and across sessions during recovery as of a point in time. The copy operations use the master data set <b>20</b> to maintain consistency across sessions, such as International Business Machine Corporation's (&#x201c;IBM&#x201d;) Extended Remote Copy (XRC), Coupled XRC (CXRC), Global Copy, Global Mirror Copy, and synchronous mirroring such as Peer-to-Peer Remote Copy (PPRC).</p>
<p id="p-0038" num="0037">The network <b>2</b> may comprise a Storage Area Network (SAN), Local Area Network (LAN), Intranet, the Internet, Wide Area Network (WAN), peer-to-peer network, wireless network, arbitrated loop network, etc. The storages <b>6</b><i>a </i>. . . <b>6</b><i>n</i>, <b>12</b><i>a </i>. . . <b>12</b><i>n </i>may comprise an array of storage devices, such as a Just a Bunch of Disks (JBOD), Direct Access Storage Device (DASD), Redundant Array of Independent Disks (RAID) array, virtualization device, tape storage, flash memory, etc. The processors <b>22</b><i>a</i>, <b>22</b><i>b </i>may comprise separate systems having an operating system or comprise one of multiple logical partitions (LPARs) or virtual processors implemented in a single system.</p>
<p id="p-0039" num="0038">The primary <b>4</b><i>a </i>. . . <b>4</b><i>n </i>and secondary control units <b>10</b><i>a </i>. . . <b>10</b><i>n </i>include operating systems <b>32</b><i>a </i>. . . <b>32</b><i>n </i>and <b>34</b><i>a </i>. . . . <b>34</b><i>n</i>, respectively, and mirroring programs to perform the copy operations. The host <b>14</b> includes an operating system <b>36</b> and one or more applications <b>38</b> that communicate I/O requests to the primary control units <b>4</b><i>a </i>. . . <b>4</b><i>n. </i></p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 2</figref> illustrates an embodiment of individual session information <b>50</b>. The individual session information <b>50</b> may comprise the session information each SDM <b>8</b><i>a </i>. . . <b>8</b><i>m </i>in a cluster <b>24</b> writes to the common memory <b>30</b> or the session information for a an individual session <b>25</b> that the SDM <b>8</b><i>n </i>writes to the master data set <b>20</b>. The individual session information <b>50</b> includes a session identifier (ID) <b>52</b>; a most recent update time <b>54</b> of the most recent update at the primary control unit <b>4</b><i>a </i>. . . <b>4</b><i>n </i>written to the journal <b>26</b><i>a </i>. . . . <b>26</b><i>n</i>; an error flag <b>56</b> indicating whether an error has occurred for the session; an interlock flag <b>58</b> indicating whether the session is consistent with respect to the other sessions for which information is maintained in the master data set <b>20</b>; and a number of volumes field <b>60</b> indicating a number of volumes included in the session.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an embodiment of consolidated session information <b>70</b> generated by the cluster manager <b>28</b> from the individual session information <b>50</b> maintained in the common memory <b>30</b> for the sessions in the cluster <b>24</b>. The consolidated session information for one cluster <b>24</b> includes: a cluster identifier <b>72</b>; a most recent update time <b>74</b> for all sessions in the cluster <b>24</b>; a consolidated error flag <b>76</b> which may be formed by ORing the error flags <b>56</b> for the individual session information <b>50</b> for all sessions in the cluster <b>24</b>; two consolidated interlock flags <b>78</b> and <b>80</b> formed by performing different operations on the interlock flags <b>58</b> for the individual session information <b>50</b> for all sessions in the cluster <b>24</b>; and a total number of volumes <b>82</b> comprising the total number of volumes in all the clustered sessions. For instance, the first interlock flag <b>78</b> may be formed by ORing all the individual interlock flags <b>58</b> for the sessions in the cluster <b>24</b> and the second interlock flag <b>80</b> may be performed by ANDing all the individual interlock flags <b>58</b> for the sessions in the cluster <b>24</b>. The reason for maintaining different consolidated values for the interlock flags is that the different operations/functions may require consolidated information formed in different manners, such as ORing versus ANDing the values.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIGS. 2 and 3</figref> illustrate one embodiment of the individual and clustered session information, respectively. In additional implementations, different or additional information may be included for the individual and clustered session information.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 4</figref> illustrates operations performed by an SDM <b>8</b><i>a </i>. . . <b>8</b><i>n </i>to update the individual session information <b>50</b> for the session managed by the SDM <b>8</b><i>a </i>. . . <b>8</b><i>n</i>. Upon the SDM <b>8</b><i>a </i>. . . <b>8</b><i>n </i>initiating (at block <b>100</b>) the operation to update the session information, if (at block <b>102</b>) the session is not part of a cluster, e.g., individual session <b>25</b>, then the SDM <b>8</b><i>n </i>writes (at block <b>104</b>) the individual session information <b>50</b>, e.g., most recent update time <b>54</b>, error <b>56</b> and interlock <b>58</b> flags for the session, to the master data set <b>20</b>. If (at block <b>102</b>) the session is part of a cluster <b>24</b>, then the SDM <b>8</b><i>a </i>. . . <b>8</b><i>m </i>writes (at block <b>106</b>) the individual session information <b>50</b> to an entry in the common memory <b>30</b> for the cluster <b>24</b>.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an embodiment of operations performed by the cluster manager <b>28</b> to write consolidated session information for the cluster <b>24</b> to the master data set <b>20</b> to consolidate and reduce the number of write operations to the master data set <b>20</b>. Upon being invoked (at block <b>150</b>) to consolidate information, the cluster manager <b>28</b> processes (at block <b>152</b>) the individual session information <b>50</b> in the memory <b>30</b> for the plurality of sessions in the cluster <b>24</b> to generate consolidated session information <b>70</b> for the cluster <b>24</b>. The session information consolidation operation at block <b>152</b> may be performed by the operations at blocks <b>154</b> to <b>168</b>. To determine a consolidated most recent update time <b>74</b>, the cluster manager <b>28</b> determines (at block <b>154</b>) from the individual session information <b>50</b> a most recent update time <b>54</b> for each session in the cluster <b>24</b> indicated in the common memory <b>30</b> The cluster manager <b>28</b> then determines (at block <b>156</b>) a consolidated most recent update time <b>74</b> comprising the minimum of the determined most recent update times for all sessions in the cluster <b>24</b>. To determine the consolidated error flag <b>76</b>, the cluster manager <b>28</b> determines (at block <b>158</b>) a value of an error flag for each session indicated in the memory. A consolidated error flag <b>76</b> is determined (at block <b>160</b>) by performing an OR operation on the error flags <b>56</b> determined from the common memory <b>30</b>.</p>
<p id="p-0045" num="0044">To determine two consolidated interlock session information values <b>78</b> and <b>80</b>, the cluster manager <b>28</b> determines (at block <b>162</b>) a value of an interlock flag for each session in the cluster <b>24</b> from the common memory <b>30</b>. The cluster manager <b>28</b> then determines (at block <b>164</b>) a consolidated interlock flag for a first operation/function by performing a first type of operation on the interlock flags <b>58</b> for the sessions in the cluster <b>24</b>, such as an OR on all the interlock flags <b>56</b> in the individual session information <b>50</b> for the sessions in the cluster <b>24</b>. A second type of operation may be performed (at block <b>166</b>) on the interlock flags <b>58</b> of the individual sessions, such as an AND operation. Different operations may be performed on the same session information when generating consolidated session information for use by different functions that require different operations on the same data. The cluster manager <b>28</b> then writes (at block <b>168</b>) the consolidated session information <b>70</b> for the cluster to the master data set <b>20</b>.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an embodiment of operations performed by an SDM <b>8</b><i>a </i>. . . <b>8</b><i>n </i>to copy updates to the primary storage <b>6</b><i>a </i>. . . . <b>6</b><i>n </i>to the secondary storage <b>12</b><i>a </i>. . . <b>12</b><i>n</i>. In response to being invoked (at block <b>200</b>) to copy updates, the SDM <b>8</b><i>a </i>. . . <b>8</b><i>n </i>determines (at block <b>202</b>) consolidated error flags <b>76</b> for each cluster <b>24</b> in the network <b>2</b>. The SDM <b>8</b><i>a </i>. . . <b>8</b><i>n </i>may obtain the consolidated error flags <b>76</b> by reading the master data set <b>20</b> or by calling the cluster managers for all clusters <b>28</b> to access the common memories for all clusters to read the error flags for the cluster sessions. In one embodiment, the cluster manager <b>28</b> for a clustered session <b>24</b> may access the master data set <b>20</b> and consolidate entries in the master data set <b>20</b> for other clusters and individual sessions <b>25</b> to provide to the SDM <b>8</b><i>a </i>. . . . <b>8</b><i>m </i>to use.</p>
<p id="p-0047" num="0046">The SDM <b>8</b><i>a </i>. . . <b>8</b><i>n </i>further determines (at block <b>204</b>) the error flags <b>56</b> for all individual sessions <b>25</b> not included in a cluster by reading the master data set <b>20</b>. The SDM <b>8</b><i>a </i>. . . <b>8</b><i>n </i>then performs (at block <b>206</b>) an OR of all determined error flags (for individual sessions <b>25</b> not in a cluster and consolidated error flags <b>76</b> for the clusters). If (at block <b>208</b>) the OR value indicates an error, e.g., has a value of one, then the update operation is failed (at block <b>210</b>) because a failure of one session causes a failure throughout the coupled session environment. If (at block <b>208</b>) the OR value indicates that there is no error in any session, then the SDM <b>8</b><i>a </i>. . . <b>8</b><i>n </i>determines (at block <b>212</b>) the consolidated most recent updates <b>74</b> for each cluster (from cluster managers <b>28</b> or reading the master data set <b>20</b>). The SDM <b>8</b><i>a </i>. . . <b>8</b><i>n </i>further determines (at block <b>214</b>) the most recent update times <b>54</b> for all individual sessions <b>25</b> not included in a cluster <b>24</b> by reading the master data set <b>20</b>. The SDM <b>8</b><i>a </i>. . . <b>8</b><i>n </i>then determines (at block <b>216</b>) the minimum of all the determined most recent update times for all sessions in the coupled environment. The SDM <b>8</b><i>a </i>. . . <b>8</b><i>n </i>then forms (at block <b>218</b>) a consistency group of all updates in the journal <b>26</b><i>a </i>. . . <b>26</b><i>n </i>having a time less than or equal to the minimum of all the most recent update times and then writes (at block <b>220</b>) the updates in the formed consistency group to the secondary storage <b>12</b><i>a </i>. . . <b>12</b><i>n</i>. In this way, consistency is maintained across all clustered sessions and individual sessions in the coupled session environment.</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 7</figref> illustrates an embodiment of operations performed by different functions that use the session information. These functions may be part of the SDMs <b>8</b><i>a </i>. . . <b>8</b><i>n</i>, the cluster managers <b>28</b> or some other component. In response to one of the functions being invoked (at block <b>250</b>), the functions (or another component) determine (at block <b>252</b>) consolidated interlock flags <b>78</b> for each cluster <b>24</b> (from cluster managers or reading the master data set <b>20</b>) and determines (at block <b>254</b>) interlock flags <b>58</b> for all individual sessions <b>25</b> not included in a cluster by reading the master data set <b>20</b>. The function dependent operation (e.g., an OR, AND or other function) is then performed (at block <b>256</b>) on all the determined interlock flags for all the sessions in the coupled environment to determine a consolidated function dependent interlock value across all sessions. The function uses (at block <b>258</b>) the determined consolidated interlock value. In alternative embodiments, the operations of <figref idref="DRAWINGS">FIG. 6</figref> may be performed with respect to session information other than an interlock flag.</p>
<p id="p-0049" num="0048">With the described embodiments, the number of writes for a cluster of sessions to the master data set is reduced by having the cluster manager consolidate session information for sessions in a cluster managed by a single processor. Further, the number of reads is reduced because the information necessary to perform update related operations, such as the most recent update time and error flag, is consolidated for each cluster into consolidated session information that provides session information for multiple sessions in the cluster. Thus, as the number of sessions in the coupled environment increases, the number of reads and writes to the master data set does not necessarily likewise increase, especially for sessions added in a cluster. Reducing the number of reads and writes to the master data set reduces the delays sessions must wait to access the master data set before access by other sessions completes.</p>
<heading id="h-0005" level="1">Additional Embodiment Details</heading>
<p id="p-0050" num="0049">The described operations may be implemented as a method, apparatus or article of manufacture using standard programming and/or engineering techniques to produce software, firmware, hardware, or any combination thereof. The described operations may be implemented as code maintained in a &#x201c;computer readable medium&#x201d;, where a processor may read and execute the code from the computer readable medium. A computer readable medium may comprise media such as magnetic storage medium (e.g., hard disk drives, floppy disks, tape, etc.), optical storage (CD-ROMs, DVDs, optical disks, etc.), volatile and non-volatile memory devices (e.g., EEPROMs, ROMs, PROMs, RAMs, DRAMs, SRAMs, Flash Memory, firmware, programmable logic, etc.), etc. The code implementing the described operations may further be implemented in hardware logic (e.g., an integrated circuit chip, Programmable Gate Array (PGA), Application Specific Integrated Circuit (ASIC), etc.). Still further, the code implementing the described operations may be implemented in &#x201c;transmission signals&#x201d;, where transmission signals may propagate through space or through a transmission media, such as an optical fiber, copper wire, etc. The transmission signals in which the code or logic is encoded may further comprise a wireless signal, satellite transmission, radio waves, infrared signals, Bluetooth, etc. The transmission signals in which the code or logic is encoded is capable of being transmitted by a transmitting station and received by a receiving station, where the code or logic encoded in the transmission signal may be decoded and stored in hardware or a computer readable medium at the receiving and transmitting stations or devices. An &#x201c;article of manufacture&#x201d; comprises computer readable medium, hardware logic, and/or transmission signals in which code may be implemented. A device in which the code implementing the described embodiments of operations is encoded may comprise a computer readable medium or hardware logic. Of course, those skilled in the art will recognize that many modifications may be made to this configuration without departing from the scope of the present invention, and that the article of manufacture may comprise suitable information bearing medium known in the art.</p>
<p id="p-0051" num="0050">The terms &#x201c;an embodiment&#x201d;, &#x201c;embodiment&#x201d;, &#x201c;embodiments&#x201d;, &#x201c;the embodiment&#x201d;, &#x201c;the embodiments&#x201d;, &#x201c;one or more embodiments&#x201d;, &#x201c;some embodiments&#x201d;, and &#x201c;one embodiment&#x201d; mean &#x201c;one or more (but not all) embodiments of the present invention(s)&#x201d; unless expressly specified otherwise.</p>
<p id="p-0052" num="0051">The terms &#x201c;including&#x201d;, &#x201c;comprising&#x201d;, &#x201c;having&#x201d; and variations thereof mean &#x201c;including but not limited to&#x201d;, unless expressly specified otherwise.</p>
<p id="p-0053" num="0052">The enumerated listing of items does not imply that any or all of the items are mutually exclusive, unless expressly specified otherwise.</p>
<p id="p-0054" num="0053">The terms &#x201c;a&#x201d;, &#x201c;an&#x201d; and &#x201c;the&#x201d; mean &#x201c;one or more&#x201d;, unless expressly specified otherwise.</p>
<p id="p-0055" num="0054">Devices that are in communication with each other need not be in continuous communication with each other, unless expressly specified otherwise. In addition, devices that are in communication with each other may communicate directly or indirectly through one or more intermediaries.</p>
<p id="p-0056" num="0055">A description of an embodiment with several components in communication with each other does not imply that all such components are required. On the contrary a variety of optional components are described to illustrate the wide variety of possible embodiments of the present invention.</p>
<p id="p-0057" num="0056">Further, although process steps, method steps, algorithms or the like may be described in a sequential order, such processes, methods and algorithms may be configured to work in alternate orders. In other words, any sequence or order of steps that may be described does not necessarily indicate a requirement that the steps be performed in that order. The steps of processes described herein may be performed in any order practical. Further, some steps may be performed simultaneously.</p>
<p id="p-0058" num="0057">When a single device or article is described herein, it will be readily apparent that more than one device/article (whether or not they cooperate) may be used in place of a single device/article. Similarly, where more than one device or article is described herein (whether or not they cooperate), it will be readily apparent that a single device/article may be used in place of the more than one device or article or a different number of devices/articles may be used instead of the shown number of devices or programs. The functionality and/or the features of a device may be alternatively embodied by one or more other devices which are not explicitly described as having such functionality/features. Thus, other embodiments of the present invention need not include the device itself.</p>
<p id="p-0059" num="0058">The illustrated operations of <figref idref="DRAWINGS">FIGS. 4</figref>, <b>5</b>, <b>6</b>, and <b>7</b> show certain events occurring in a certain order. In alternative embodiments, certain operations may be performed in a different order, modified or removed. Moreover, steps may be added to the above described logic and still conform to the described embodiments. Further, operations described herein may occur sequentially or certain operations may be processed in parallel. Yet further, operations may be performed by a single processing unit or by distributed processing units.</p>
<p id="p-0060" num="0059">The foregoing description of various embodiments of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description, but rather by the claims appended hereto. The above specification, examples and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention, the invention resides in the claims hereinafter appended.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method, comprising:
<claim-text>storing in a memory of a processor individual session information for each of a plurality of sessions comprising a cluster, wherein each session associates at least one primary system and at least one secondary system, wherein within each session, updates are copied from the at least one primary system to the at least one secondary system, and wherein the session information for each session has a plurality of fields;</claim-text>
<claim-text>using a first operation to process one of a plurality of fields in the individual session information in the memory for each of the plurality of sessions to generate a first value for a first field in consolidated session information for the cluster based on the processed field in the individual session information for each of the plurality of the sessions;</claim-text>
<claim-text>using a second operation, different from the first operation, to process one of the plurality of fields in the individual session information in the memory for each of the plurality of sessions to generate a second value for a second field in the consolidated session information for the cluster based on the processed field in the individual session information for each of the plurality of sessions; and</claim-text>
<claim-text>writing the consolidated session information for the cluster, including the first value in the first field and the second value in the second field, to a master data set maintaining information for the sessions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>writing information on a session not included in the cluster to the master data set, wherein the session not included in the cluster associates at least one primary system and at least one secondary system such that updates are copied from the at least one primary system to the at least one secondary system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the processor comprises a first processor, wherein the session not included in the cluster is managed by a second processor, wherein the first processor manages the copying of updates for the sessions in the cluster.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the cluster comprises a first cluster and wherein the master data set is adapted to include information from additional clusters including sessions managed by additional processors.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the field in the individual session information for the sessions stored in the memory processed by the first operation comprises a most recent update time for the session, and wherein the first operation processing the individual session information for the sessions comprises:
<claim-text>determining the most recent update time for each session indicated in the memory, wherein the first value for the first field in the consolidated session information comprises a minimum of the determined most recent update times.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the master data set is adapted to include information from coupled sessions associating at least one primary storage and at least one secondary storage that are managed by additional processors, further comprising:
<claim-text>reading, by the additional processors, the consolidated session information in the master data set to determine the minimum of the most recent update times across all the coupled sessions indicated in the master data set to maintain data consistency across coupled sessions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the field in the individual session information for the sessions stored in the memory processed by the first operation comprises an error flag for the session, and wherein the first operation processing the individual session information for the sessions comprises:
<claim-text>determining a value of the error flag for each session indicated in the memory, wherein generating the first value for the first field in the consolidated session information comprises performing an OR operation on all the determined error flags, wherein additional processors managing additional sessions fails an update in response to determining that the consolidated error flag indicates an error.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the field in the individual session information for the sessions stored in the memory and processed by the first and second operations comprises a state flag for the session, and wherein processing the individual session information for the sessions comprises:
<claim-text>determining a value of the state flag for each session indicated in the memory, wherein the first and second operations are applied to the state flag values for the sessions to generate the first and second values for the state flag in the consolidated session information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the state flag for each session comprises an interlock flag indicating whether the session is consistent with all other sessions represented in the master data set, wherein the first operation comprises an OR operation on the interlock flags for the sessions to produce the first value and wherein the second operation comprises an AND operation on the interlock flags for the sessions to produce the second value.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the master data set is adapted to include information from sessions associating at least one primary storage and at least one secondary storage that are managed by additional processors further comprising:
<claim-text>processing, by one processor managing at least one session, the information for each cluster or session not included in a cluster indicated in the master data set to obtain a value providing information on all sessions indicated in the master data set; and</claim-text>
<claim-text>processing the value to determine whether to perform write updates from the primary system to the secondary system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first and second operations process different fields in the individual session information for the sessions.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first and second operations process a same field of the plurality of fields in the individual session information for the sessions.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the field in the individual session information for the sessions stored in the memory processed by the first operation comprises a number of volumes included in the session, and wherein the first operation processing the individual session information for the sessions comprises:
<claim-text>determining the number of volumes for each session indicated in the memory, wherein the first value for the first field in the consolidated session information comprises a total of the number of volumes for the sessions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. A system in communication with primary systems, secondary systems, and a master data set, comprising:
<claim-text>a processor;</claim-text>
<claim-text>a memory coupled to the processor;</claim-text>
<claim-text>a computer readable medium including code executed by the processor to perform operations, the operations comprising:
<claim-text>storing in the memory individual session information for each of a plurality of sessions comprising a cluster, wherein each session associates at least one of the primary systems and at least one of the secondary systems, wherein within each session, updates are copied from the at least one primary system to the at least one secondary system associated with the session, and wherein the session information for each session has a plurality of fields;</claim-text>
<claim-text>using a first operation to process one of a plurality of fields in the individual session information in the memory for each of the plurality of sessions to generate a first value for a first field in consolidated session information for the cluster based on the processed field in the individual session information for each of the plurality of the sessions;</claim-text>
<claim-text>using a second operation, different from the first operation, to process one of the plurality of fields in the individual session information in the memory for each of the plurality of sessions to generate a second value for a second field in the consolidated session information for the cluster based on the processed field in the individual session information for each of the plurality of sessions; and</claim-text>
<claim-text>writing the consolidated session information for the cluster, including the first value in the first field and the second value in the second field, to the master data set maintaining information for sessions.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the operations further comprise:
<claim-text>writing information on a session not included in the cluster to the master data set, wherein the session not included in the cluster associates at least one primary system and at least one secondary system such that updates are copied from the at least one primary system to the at least one secondary system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the processor comprises a first processor, further comprising:
<claim-text>a second processor, wherein the session not included in the cluster is managed by the second processor, and wherein the first processor manages the copying of updates for the sessions in the cluster.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the cluster comprises a first cluster and wherein the master data set is adapted to include information from additional clusters including sessions managed by additional processors.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the field in the individual session information for the sessions stored in the memory processed by the first operation comprises a most recent update time for the session, and wherein the first operation processing the individual session information for the sessions comprises:
<claim-text>determining the most recent update time for each session indicated in the memory, wherein the first value for the first field in the consolidated session information comprises a minimum of the determined most recent update times.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, further comprising:
<claim-text>additional processors, wherein the master data set is adapted to include information from coupled sessions associating at least one primary storage and at least one secondary storage that are managed by additional processors, wherein the additional processors are enabled to perform reading the consolidated session information in the master data set to determine the minimum of the most recent update times across all the coupled sessions indicated in the master data set to maintain data consistency across coupled sessions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the field in the individual session information for the sessions stored in the memory processed by the first operation comprises an error flag for the session, and wherein the first operation processing the individual session information for the sessions comprises:
<claim-text>determining a value of the error flag for each session indicated in the memory, wherein generating the first value for the first field in the consolidated session information comprises performing an OR operation on all the determined error flags, wherein additional processors managing additional sessions fails an update in response to determining that the consolidated error flag indicates an error.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the field in the individual session information for the sessions stored in the memory and processed by the first and second operations comprises a state flag for the session, and wherein processing the individual session information for the sessions comprises:
<claim-text>determining a value of the state flag for each session indicated in the memory, wherein the first and second operations are applied to the state flag values for the sessions to generate the first and second values for the state flag in the consolidated session information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the state flag for each session comprises an interlock flag indicating whether the session is consistent with all other sessions represented in the master data set, wherein the first type of operation comprises an OR operation on the interlock flags for the sessions to produce the first value and wherein the second operation comprises an AND operation on the interlock flags for the sessions to produce the second value.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, further comprising:
<claim-text>additional processors, wherein the master data set is adapted to include information from sessions associating at least one primary storage and at least one secondary storage that are managed by the additional processors, wherein one processor managing at least one session is enabled to perform:
<claim-text>processing the information for each cluster or session not included in a cluster indicated in the master data set to obtain a value providing information on all sessions indicated in the master data set; and</claim-text>
<claim-text>processing the value to determine whether to perform write updates from the primary system to the secondary system.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the first and second operations process different fields in the individual session information for the sessions.</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the first and second operations process a same field of the plurality of fields in the individual session information for the sessions.</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the field in the individual session information for the sessions stored in the memory processed by the first operation comprises a number of volumes included in the session, and wherein the first operation processing the individual session information for the sessions comprises:
<claim-text>determining the number of volumes for each session indicated in the memory, wherein the first value for the first field in the consolidated session information comprises a total of the number of volumes for the sessions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. An article of manufacture comprising a computer readable storage medium storing code executed by a processor having a memory, wherein the code is enabled to cause operations to be performed, the operations comprising:
<claim-text>generating a master data set;</claim-text>
<claim-text>storing in the memory individual session information for each of a plurality of sessions comprising a cluster, wherein each session associates at least one primary system and at least one secondary system, wherein within each session, updates are copied from the at least one primary system to the at least one secondary system, and wherein the session information for each session has a plurality of fields;</claim-text>
<claim-text>using a first operation to process one of a plurality of fields in the individual session information in the memory for each of the plurality of sessions to generate a first value for a first field in consolidated session information for the cluster based on the processed field in the individual session information for each of the plurality of the sessions;</claim-text>
<claim-text>using a second operation, different from the first operation, to process one of the plurality of fields in the individual session information in the memory for each of the plurality of sessions to generate a second value for a second field in the consolidated session information for the cluster based on the processed field in the individual session information for each of the plurality of sessions; and</claim-text>
<claim-text>writing the consolidated session information for the cluster, including the first value in the first field and the second value in the second field, to the master data set maintaining information for sessions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. The article of manufacture of <claim-ref idref="CLM-00027">claim 27</claim-ref>, wherein the operations further comprise:
<claim-text>writing information on a session not included in the cluster to the master data set, wherein the session not included in the cluster associates at least one primary system and at least one secondary system such that updates are copied from the at least one primary system to the at least one secondary system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. The article of manufacture of <claim-ref idref="CLM-00028">claim 28</claim-ref>, wherein the processor comprises a first processor, wherein the article of manufacture further includes code executed by a second processor managing the session not included in the cluster, wherein the first processor manages the copying of updates for the sessions in the cluster.</claim-text>
</claim>
<claim id="CLM-00030" num="00030">
<claim-text>30. The article of manufacture of <claim-ref idref="CLM-00027">claim 27</claim-ref>, wherein the cluster comprises a first cluster and wherein the master data set is adapted to include information from additional clusters including sessions managed by additional processors.</claim-text>
</claim>
<claim id="CLM-00031" num="00031">
<claim-text>31. The article of manufacture of <claim-ref idref="CLM-00027">claim 27</claim-ref>, wherein the field in the individual session information for the sessions stored in the memory processed by the first operation comprises a most recent update time for the session, and wherein the first operation processing the individual session information for the sessions comprises:
<claim-text>determining the most recent update time for each session indicated in the memory, wherein the first value for the first field in the consolidated session information comprises a minimum of the determined most recent update times.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00032" num="00032">
<claim-text>32. The article of manufacture of <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein the master data set is adapted to include information from coupled sessions associating at least one primary storage and at least one secondary storage that are managed by additional processors, wherein the article of manufacture further includes code executed by the additional processors to perform operations comprising:
<claim-text>reading the consolidated session information in the master data set to determine the minimum of the most recent update times across all the coupled sessions indicated in the master data set to maintain data consistency across coupled sessions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00033" num="00033">
<claim-text>33. The article of manufacture of <claim-ref idref="CLM-00027">claim 27</claim-ref>, wherein the field in the individual session information for the sessions stored in the memory processed by the first operation comprises an error flag for the session, and wherein the first operation processing the individual session information for the sessions comprises:
<claim-text>determining a value of the error flag for each session indicated in the memory, wherein generating the first value for the first field in the consolidated session information comprises performing an OR operation on all the determined error flags, wherein additional processors managing additional sessions fails an update in response to determining that the consolidated error flag indicates an error.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00034" num="00034">
<claim-text>34. The article of manufacture of <claim-ref idref="CLM-00027">claim 27</claim-ref>, wherein the field in the individual session information for the sessions stored in the memory and processed by the first and second operations comprises a state flag for the session, wherein processing the individual session information for the sessions comprises:
<claim-text>determining a value of the state flag for each session indicated in the memory, wherein the first and second operations are applied to the state flag values for the sessions to generate the first and second values for the state flag in the consolidated session information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00035" num="00035">
<claim-text>35. The article of manufacture of <claim-ref idref="CLM-00034">claim 34</claim-ref>, wherein the state flag for each session comprises an interlock flag indicating whether the session is consistent with all other sessions represented in the master data set, wherein the first operation comprises an OR operation on the interlock flags for the sessions to produce the first value and wherein the second operation comprises an AND operation on the interlock flags for the sessions to produce the second value.</claim-text>
</claim>
<claim id="CLM-00036" num="00036">
<claim-text>36. The article of manufacture of <claim-ref idref="CLM-00027">claim 27</claim-ref>, wherein the master data set is adapted to include information from sessions associating at least one primary storage and at least one secondary storage that are managed by additional processors, wherein the article of manufacture further includes code executed by the additional processors to perform operations comprising:
<claim-text>processing, by one processor managing at least one session, the information for each cluster or session not included in a cluster indicated in the master data set to obtain a value providing information on all sessions indicated in the master data set; and</claim-text>
<claim-text>processing the value to determine whether to perform write updates from the primary system to the secondary system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00037" num="00037">
<claim-text>37. The article of manufacture of <claim-ref idref="CLM-00027">claim 27</claim-ref>, wherein the first and second operations process different fields in the individual session information for the sessions.</claim-text>
</claim>
<claim id="CLM-00038" num="00038">
<claim-text>38. The article of manufacture of <claim-ref idref="CLM-00027">claim 27</claim-ref>, wherein the first and second operations process a same field of the plurality of fields in the individual session information for the sessions.</claim-text>
</claim>
<claim id="CLM-00039" num="00039">
<claim-text>39. The article of manufacture of <claim-ref idref="CLM-00027">claim 27</claim-ref>, wherein the field in the individual session information for the sessions stored in the memory processed by the first operation comprises a number of volumes included in the session, and wherein the first operation processing the individual session information for the sessions comprises:
<claim-text>determining the number of volumes for each session indicated in the memory, wherein the first value for the first field in the consolidated session information comprises a total of the number of volumes for the sessions. </claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
