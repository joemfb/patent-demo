<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08626960-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08626960</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13281247</doc-number>
<date>20111025</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>SG</country>
<doc-number>201007994-5</doc-number>
<date>20101029</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>38</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>3</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>710  8</main-classification>
<further-classification>710  2</further-classification>
<further-classification>710 10</further-classification>
<further-classification>710 14</further-classification>
<further-classification>710 16</further-classification>
<further-classification>710 17</further-classification>
<further-classification>710104</further-classification>
<further-classification>710300</further-classification>
<further-classification>710305</further-classification>
<further-classification>700 19</further-classification>
<further-classification>709227</further-classification>
<further-classification>709228</further-classification>
<further-classification>709250</further-classification>
</classification-national>
<invention-title id="d2e71">Industrial controller interface for plug-in I/O modules</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4809217</doc-number>
<kind>A</kind>
<name>Floro et al.</name>
<date>19890200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>710 52</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5472347</doc-number>
<kind>A</kind>
<name>Nordenstrom et al.</name>
<date>19951200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>439 61</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6233626</doc-number>
<kind>B1</kind>
<name>Swales et al.</name>
<date>20010500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710 11</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6349235</doc-number>
<kind>B1</kind>
<name>Gibart et al.</name>
<date>20020200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>700 11</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6484215</doc-number>
<kind>B1</kind>
<name>Gibart et al.</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>710  9</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6651110</doc-number>
<kind>B1</kind>
<name>Caspers et al.</name>
<date>20031100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>710 13</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6947798</doc-number>
<kind>B2</kind>
<name>Bronikowski et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>700 90</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>7581053</doc-number>
<kind>B2</kind>
<name>Sichner et al.</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>710300</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>7587251</doc-number>
<kind>B2</kind>
<name>Hopsecger</name>
<date>20090900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>700 17</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>7804287</doc-number>
<kind>B2</kind>
<name>Terdan et al.</name>
<date>20100900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>323351</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2003/0074489</doc-number>
<kind>A1</kind>
<name>Steger et al.</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710  1</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2006/0121770</doc-number>
<kind>A1</kind>
<name>Hammer et al.</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>439374</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2008/0005406</doc-number>
<kind>A1</kind>
<name>Odom et al.</name>
<date>20080100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710 58</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2009/0077270</doc-number>
<kind>A1</kind>
<name>Chen et al.</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710  2</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2010/0204806</doc-number>
<kind>A1</kind>
<name>Chowaniec et al.</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>700 19</main-classification></classification-national>
</us-citation>
<us-citation>
<nplcit num="00016">
<othercit>&#x2018;Modular I/O System&#x2014;MODBUS Manual, Technical Description, Installation and Configuration&#x2019; by WAGO, copyright 1997-2001.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00017">
<othercit>&#x2018;Evaluation of a fast PLC module in prospect of the LHC beam interlock system&#x2019; by Manuel Zaera Sanz, Feb. 2005.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00018">
<othercit>&#x2018;Electronics Manual for Valve Terminal Type 03/04-B&#x2019; from FESTO, copyright 2000.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00019">
<othercit>&#x2018;IEEE 1451: A Standard in Support of Smart Transducer Networking&#x2019; by Kang Lee, copyright 2000, IEEE.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
</us-references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>4</number-of-drawing-sheets>
<number-of-figures>4</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20120110216</doc-number>
<kind>A1</kind>
<date>20120503</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Zhang</last-name>
<first-name>Yue</first-name>
<address>
<city>Singapore</city>
<country>SG</country>
</address>
</addressbook>
<residence>
<country>SG</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Hong</last-name>
<first-name>Kevin Lee Huan</first-name>
<address>
<city>Singapore</city>
<country>SG</country>
</address>
</addressbook>
<residence>
<country>SG</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Zhang</last-name>
<first-name>Yue</first-name>
<address>
<city>Singapore</city>
<country>SG</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Hong</last-name>
<first-name>Kevin Lee Huan</first-name>
<address>
<city>Singapore</city>
<country>SG</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Fletcher Yoder, P.C.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>Speroff</last-name>
<first-name>R. Scott</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="03" rep-type="attorney">
<addressbook>
<last-name>Miller</last-name>
<first-name>John M.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Rockwell Automation Technologies, Inc.</orgname>
<role>02</role>
<address>
<city>Mayfield Heights</city>
<state>OH</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Snyder</last-name>
<first-name>Steven</first-name>
<department>2184</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">An interface for an industrial controller is provided that enables connection of different types of plug-in I/O modules to the industrial controller. The interface includes several mechanisms, which can be implemented through control logic, circuitry, and/or software, that enable the control/monitoring device to operate in conjunction with different types of plug-in I/O modules. According to certain embodiments, the interface includes setup mechanisms that enable initial communications between the plug-in I/O modules and the control/monitoring device. The interface also may include operational mechanisms that facilitate communication between the plug-in I/O modules and the control/monitoring device during operation. The interface further may include registers that store data for the plug-in I/O modules.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="150.37mm" wi="210.82mm" file="US08626960-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="194.82mm" wi="112.18mm" file="US08626960-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="186.52mm" wi="110.24mm" orientation="landscape" file="US08626960-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="212.77mm" wi="158.24mm" orientation="landscape" file="US08626960-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="191.60mm" wi="158.92mm" file="US08626960-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application claims priority from and the benefit of Singapore Application No. 201007994-5, filed on Oct. 29, 2010 entitled &#x201c;Industrial Controller Interface for Plug-In I/O Modules&#x201d;, which is herein incorporated by reference.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">The invention relates generally to the field of industrial automation and control systems, such as those used in industrial and commercial settings. More particularly, embodiments of the present invention relate to industrial controller drivers designed to interface with different types of plug-in I/O modules.</p>
<p id="p-0004" num="0003">Industrial controllers are special purpose computers used for controlling factory automation and the like. Under the direction of stored programs, a processor of the industrial controller examines a series of inputs reflecting the status of a controlled process and changes outputs affecting control of the controlled process. The stored control programs can be continuously executed in a series of execution cycles, executed periodically, or executed based on events.</p>
<p id="p-0005" num="0004">The inputs received by the industrial controller from the controlled process and the outputs transmitted by the industrial controller to the controlled process are normally passed through one or more input/output (I/O) modules, which serve as an electrical interface between the controller and the controlled process. The inputs and outputs are recorded in an I/O data table in memory. Input values may be asynchronously read from the controlled process by specialized circuitry. Output values are written directly to the I/O data table by the processor and then communicated to the controlled process by the specialized communications circuitry.</p>
<p id="p-0006" num="0005">Some industrial controllers may provide for connection of additional I/O modules, such as plug-in I/O modules, to add input and output functionality to the controller. For example, adding an I/O module may allow the industrial controller to interface with a specific type of control equipment. Further, the plug-in I/O modules may provide different functionalities, such as added analog inputs and/or outputs, digital inputs and/or outputs, temperature control and/or monitoring, and voltage control and/or monitoring, among others. Accordingly, the plug-in I/O modules can have different hardware structures that may require custom drivers and other custom software to allow their use with the industrial controller. For example, the plug-in I/O modules may have different types and/or numbers of inputs and outputs. Providing custom drivers typically requires on-site firmware upgrades and testing. It is now recognized that this adds complexity, cost, and development time. Further, providing custom software can involve the use of extensive software libraries, which may result in slower I/O scanning during operation of the industrial controller.</p>
<heading id="h-0003" level="1">BRIEF DESCRIPTION</heading>
<p id="p-0007" num="0006">The present invention provides a novel approach to connecting and using plug-in I/O modules with an industrial controller, such as a control/monitoring device for controlling or monitoring an industrial process. In particular, the present invention provides an interface, such as a common driver, for a control/monitoring device that enables connection of the control/monitoring device to different types of plug-in modules. The interface includes several mechanisms, which can be implemented through control logic, circuitry, and/or software, that enable the control/monitoring device to operate in conjunction with different types of plug-in I/O modules.</p>
<p id="p-0008" num="0007">According to certain embodiments, the interface includes setup mechanisms that enable initial communications between the plug-in I/O modules and the control/monitoring device. For example, the setup mechanisms may detect connection of a plug-in I/O module, request identification data from a connected plug-in I/O module, write module configuration data to a connected plug-in I/O module, and retrieve I/O data and feature data from a connected I/O module. The interface also may include operational mechanisms that facilitate communication between the plug-in I/O modules and the control/monitoring device during operation. For example, the operational mechanisms may communicate operational mode data between the control/monitoring device and a connected plug-in I/O module and may enable the connected plug-in I/O module to interrupt operation of the control/monitoring device. The interface further may include registers that store data for the plug-in I/O modules.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">DRAWINGS</heading>
<p id="p-0009" num="0008">These and other features, aspects, and advantages of the present invention will become better understood when the following detailed description is read with reference to the accompanying drawings in which like characters represent like parts throughout the drawings, wherein:</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 1</figref> is a diagrammatical representation of an exemplary control and monitoring system that includes a control/monitoring device that is compatible with different types of plug-in I/O modules in accordance with the present techniques;</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram illustrating components of the control/monitoring device of <figref idref="DRAWINGS">FIG. 1</figref> in accordance with the present techniques;</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 3</figref> is a diagrammatical representation of an interface of the control/monitoring device of <figref idref="DRAWINGS">FIG. 2</figref> in communication with a plug-in I/O module in accordance with the present techniques; and</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 4</figref> is a table depicting an embodiment of register addresses for the interface of <figref idref="DRAWINGS">FIG. 3</figref> in accordance with the present techniques.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 1</figref> is a diagrammatical representation of an exemplary control and monitoring system <b>10</b> that employs a control/monitoring device <b>12</b> that includes a common interface <b>14</b> designed to support various types of plug-in I/O modules <b>16</b>. The plug-in I/O modules <b>16</b> may be produced by the manufacturer of the control/monitoring device <b>12</b> or may be prepared by third party providers. The control and monitoring system <b>10</b> includes a process <b>18</b> that can be controlled and/or monitored by the control/monitoring device <b>12</b>. The process <b>18</b> may take many forms and may include devices for accomplishing many different and varied purposes. For example, the process may comprise a compressor station, an oil refinery, a batch operation for making food items, a mechanized assembly line, and so forth. Accordingly, the process <b>18</b> may include a variety of operational components, such as electric motors, valves, actuators, temperature elements, pressure sensors, for a myriad of manufacturing, processing, and/or material handling applications, among others. According to certain embodiments, the control and/or monitoring of the process <b>18</b> may be facilitated by the use of certain network strategies. For example, an industry standard network may be employed, such as DeviceNet, to enable data transfer. The networks can permit the exchange of data in accordance with a predefined protocol, and may provide power for operation of networked elements.</p>
<p id="p-0015" num="0014">Further, the process <b>18</b> may comprise control and monitoring equipment for regulating process variables through automation and/or observation. For example, the illustrated process <b>18</b> includes sensors <b>20</b> and actuators <b>22</b>. The sensors <b>20</b> can include any number of devices adapted to provide information regarding process conditions. The actuators <b>22</b> can include any number of devices adapted to perform a mechanical action in response to an input signal.</p>
<p id="p-0016" num="0015">As illustrated, the sensors <b>20</b> and the actuators <b>22</b> are in communication with the control/monitoring device <b>12</b> to control and/or monitor equipment within the process <b>18</b>. For example, the sensors <b>20</b> and the actuators <b>22</b> can be utilized within process loops that are monitored and controlled by the control/monitoring device <b>12</b> and/or by a monitoring station <b>24</b>. According to certain embodiments, the monitoring station <b>24</b> may include one or more personal computers and/or displays that enable a user to view the status of the control/monitoring device <b>12</b>, program certain components of the control/monitoring device <b>12</b>, and/or adjust operating parameters of the process <b>18</b> and/or the control/monitoring device <b>12</b>. For example, the monitoring station <b>24</b> may display output parameters such as operating parameters of the process <b>18</b>, temperatures and pressures sensed by the sensors <b>20</b>, position information of the actuators <b>22</b>, and so forth. Further, the monitoring station <b>24</b> may be connected to a database <b>26</b> (for example, over a network) that provides data for the plug-in I/O modules <b>16</b>. In other embodiments, the database <b>26</b> may be stored within the monitoring station <b>24</b>.</p>
<p id="p-0017" num="0016">In certain embodiments, a process loop may be activated based on process inputs (e.g., input from a sensor <b>20</b>) or by direct operator input received through the monitoring station <b>24</b>. The sensors <b>20</b> and the actuators <b>22</b> can be assigned a particular address in the control/monitoring device <b>12</b> that is accessible by the monitoring station <b>24</b>. According to certain embodiments, the sensors <b>20</b> and the actuators <b>22</b> communicate with the control/monitoring device <b>12</b> via one or more of the plug-in I/O modules <b>16</b> coupled to the control/monitoring device <b>12</b>. The plug-in I/O modules <b>16</b> may transfer input and output signals between the control/monitoring device <b>12</b> and the controlled process <b>18</b>.</p>
<p id="p-0018" num="0017">According to certain embodiments, the control/monitoring device <b>12</b> may be an industrial controller, such as a programmable logic controller and/or an automation controller. The plug-in I/O modules <b>16</b> can be added to or removed from the control/monitoring device <b>12</b> via connection ports <b>27</b> of the interface <b>14</b>. For example, to add functionality to the control/monitoring device <b>12</b>, additional plug-in I/O modules <b>16</b> may be added. For example, when new sensors <b>20</b> or actuators <b>22</b> are added to control the process <b>18</b>, additional plug-in I/O modules <b>16</b> may be added to the control/monitoring device <b>12</b> by coupling the additional plug-in I/O modules <b>16</b> to the connection ports <b>27</b>. According to certain embodiments, the connection ports <b>27</b> may be disposed in expansions slots or bays of the control/monitoring device <b>12</b> and may include a connector, such as a male or female pin connector, for mating with a corresponding connector of the plug-in I/O modules <b>16</b>.</p>
<p id="p-0019" num="0018">The plug-in I/O modules <b>16</b> can enable the control/monitoring device <b>12</b> to perform a variety of different functions. For example, the plug-in I/O modules <b>16</b> may include communication modules, such as an isolated RS232/RS485 module or a DeviceNet module, that allow the control/monitoring device <b>12</b> to communicate with industry standard networks. According to certain embodiments, the plug-in I/O modules <b>16</b> may include input modules that receive signals from input devices, such as photo-sensors, proximity switches, and temperature sensors (e.g. thermocouples and/or resistance temperature detectors), output modules that use output signals to energize relays or to start motors, and/or bidirectional I/O modules, such as motion control modules, which can direct motion devices and receive position or speed feedback. In some embodiments, the plug-in I/O modules <b>16</b> may convert between AC and DC analog signals used by devices of the process <b>18</b> and +5-volt DC logic signals used by the control/monitoring device <b>12</b>. Further, some of the plug-in I/O modules <b>16</b> may provide digital signals to digital I/O devices and receive digital signals from digital I/O devices.</p>
<p id="p-0020" num="0019">As described further below with respect to <figref idref="DRAWINGS">FIG. 2</figref>, the plug-in I/O modules <b>16</b> can be designed to meet standards that ensure compatibility with the interface <b>14</b>. According to certain embodiments, the common interface <b>14</b> includes one or more drivers designed to control operation of each of the different types of plug-in I/O modules <b>16</b> that comply with the common interface standard. Accordingly, the common interface <b>14</b> enables the control/monitoring device <b>12</b> to function with the different types of plug-in I/O modules without requiring a firmware upgrade or an extensive software library.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram illustrating an example of components of the control/monitoring device <b>12</b>. The control/monitoring device <b>12</b> includes a microprocessor <b>28</b> that may read and write to a memory <b>30</b>. The memory <b>30</b> holds programs executed by the microprocessor <b>28</b> to provide desired functions and also variables and data necessary for the execution of those programs. The control/monitoring device <b>12</b> also includes a network interface <b>32</b> to provide for communication over the networks described above with respect to <figref idref="DRAWINGS">FIG. 1</figref>. Further, the control/monitoring device <b>12</b> includes one or more embedded I/O modules <b>34</b> that are integrated into the control/monitoring device <b>12</b>. The embedded I/O module <b>34</b> serves as an electrical interface between the control/monitoring device <b>12</b> and components of the process <b>18</b> and provides functionality similar to the plug-in I/O modules <b>16</b>. However, the embedded I/O module <b>34</b> is integrated into the control/monitoring device <b>12</b>, rather than existing as removable components like the plug-in I/O modules <b>16</b>. I/O data can be transferred between the embedded I/O module <b>34</b> and the microprocessor <b>28</b> over one or more data buses <b>36</b> included within the control/monitoring device <b>12</b>.</p>
<p id="p-0022" num="0021">The interface <b>14</b> also is communicatively coupled to the microprocessor <b>28</b> through the one or more data buses <b>36</b>. Further, the interface <b>14</b> can be communicatively coupled to the plug-in I/O modules <b>16</b> through a connection <b>38</b>. According to certain embodiments, the connection <b>38</b> may be established by connecting a physical connector of the plug-in I/O module <b>16</b> to a corresponding port of the interface <b>14</b>, such as the connection port <b>27</b> (<figref idref="DRAWINGS">FIG. 1</figref>).</p>
<p id="p-0023" num="0022">According to certain embodiments, the connection <b>38</b> may include a 40-pin hardware connection interface that employs a Synchronous Parallel Interface (SPI) for the primary exchange of data between the plug-in I/O module <b>16</b> and the interface <b>14</b>. For example, signals, such as address, data, read, write, chip select, interrupt, and parity signals, may be exchanged over the SPI. In certain embodiments, the SPI may include an 8-bit parallel data bus and an 11-bit address bus. Further, the connection <b>38</b> may support up to 2 kilobytes of addressing capability. The connection <b>38</b> also may provide for the supply of power from the control/monitoring device <b>12</b> to the plug-in module <b>16</b>. For example, in certain embodiments, the connection <b>38</b> may provide a 3.3 volt and a 24 volt power supply to the plug-in module <b>16</b>. According to certain embodiments, the plug-in modules <b>16</b> may be powered solely by the control/monitoring device <b>12</b> and may not include a separate power supply.</p>
<p id="p-0024" num="0023">As described above with respect to <figref idref="DRAWINGS">FIG. 1</figref>, the interface <b>14</b> can include one or more mechanisms <b>40</b> that allow the control/monitoring device <b>12</b> to interface with different types of plug-in I/O modules <b>16</b>. The mechanisms <b>40</b> may include control logic, circuitry, and/or software. According to certain embodiments, the mechanisms <b>40</b> may include one or more firmware drivers. According to certain embodiments, the mechanisms <b>40</b> may be embodied on a non-transitory machine readable medium, such as read only memory, flash memory, a hard drive, or any other suitable optical, magnetic, or solid-state computer readable media, as well as a combination thereof.</p>
<p id="p-0025" num="0024">As described further below with respect to <figref idref="DRAWINGS">FIG. 3</figref>, the mechanisms <b>40</b> may allow for the exchange of data between one or more plug-in I/O modules <b>16</b> and the control/monitoring device <b>12</b>. For example, the mechanisms <b>40</b> may be designed to retrieve setup data, such as the number of inputs and outputs on the plug-in I/O module <b>16</b>, the data length used by the plug-in I/O module, and the type of the plug-in I/O module <b>16</b>, among others, and may be designed to store the setup data in registers <b>42</b> of the interface <b>14</b>. The mechanisms <b>40</b> also may be designed to exchange operational data, such as the status of the control/monitoring device <b>12</b> and the status of the plug-in I/O module <b>16</b>, among others, during operation of the control/monitoring device <b>12</b>. The operational data also may be stored within the registers <b>42</b>. According to certain embodiments, the registers <b>42</b> may include address registers, storage registers, and/or general purpose registers. Further, in certain embodiments, the plug-in I/O modules <b>16</b> may be designed to support primary registers of the interface <b>14</b>.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 3</figref> is a diagrammatical representation depicting communication between the interface <b>14</b> and a plug-in I/O module <b>16</b>. Although one plug-in I/O module <b>16</b> is depicted in <figref idref="DRAWINGS">FIG. 3</figref>, the interface <b>14</b> may communicate with any number of plug-in I/O modules <b>16</b>. For clarity, only the interface <b>14</b> of the control/monitoring device <b>12</b> is shown in <figref idref="DRAWINGS">FIG. 3</figref>; however, it should be understand that the interface <b>14</b> operates in conjunction with the other components of the control/monitoring device <b>12</b>, as discussed above with respect to <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="p-0027" num="0026">The plug-in I/O module <b>16</b> includes a control device <b>44</b> that governs operation of the plug-in I/O module <b>16</b>. For example, as shown in <figref idref="DRAWINGS">FIG. 1</figref>, the control device <b>44</b> may enable the plug-in I/O module <b>16</b> to control inputs from sensors <b>20</b> and/or outputs to actuators <b>22</b> of the process <b>18</b>. According to certain embodiments, the control device <b>44</b> may be a complex programmable logic device (CPLD) and/or a microprocessor. The control device <b>44</b> can be designed to meet standards that comply with the common interface <b>14</b>, thereby making the control device <b>44</b> and the plug-in I/O module <b>16</b> compatible with the interface <b>14</b>.</p>
<p id="p-0028" num="0027">The control device <b>44</b> also includes registers <b>46</b> that provide temporary storage areas for instructions and/or data. According to certain embodiments, the registers <b>46</b> may include one or more address registers, storage registers, general purpose registers, accumulators, or a combination thereof. According to certain embodiments, the registers <b>46</b> may be designed to store input and output data for interacting with the process <b>18</b>. The plug-in I/O module <b>16</b> further includes storage <b>48</b>, such as an EPROM, that provides for non-volatile storage of data. For example, data may be stored within the storage <b>48</b> that can be used by the interface <b>14</b> to establish communication between the interface <b>14</b> and the plug-in module <b>16</b>. In certain embodiments, the storage <b>48</b> may be integrated within the control device <b>44</b>. However, in other embodiments, the storage <b>48</b> may be a separate component from the control device <b>44</b>.</p>
<p id="p-0029" num="0028">Communication between the interface <b>14</b> and the plug-in I/O module <b>16</b> may begin upon power up of the control/monitoring device <b>12</b>. As described above with respect to <figref idref="DRAWINGS">FIG. 2</figref>, communication may occur through the connection <b>38</b>. The mechanisms <b>40</b> may initiate communication with the plug-in I/O module <b>16</b>, thereby allowing the plug-in I/O module <b>16</b> to function as a slave device. The mechanisms <b>40</b> include setup mechanisms <b>50</b> that exchange setup data <b>52</b> with the plug-in I/O module <b>16</b> and operational control mechanisms <b>54</b> that exchange operational data <b>56</b> with the plug-in I/O module <b>16</b>. The setup data <b>52</b> and the operational data <b>56</b> can be stored in designated registers <b>42</b> of the interface <b>14</b>. For example, each of the mechanisms <b>40</b> may interact with one or more designated registers <b>42</b> that store the data used by that mechanism <b>40</b>. The mechanisms <b>40</b>, the microprocessor <b>28</b> (<figref idref="DRAWINGS">FIG. 2</figref>), and the plug-in I/O module <b>16</b> may employ the data stored within the registers <b>42</b> to conduct operations of the control/monitoring device <b>12</b>.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 4</figref> depicts a table of representative registers <b>42</b> that may be designated to receive data for individual mechanisms <b>40</b>. Each of the registers is identified by an address and stores the data <b>52</b> and/or the data <b>56</b> employed by the mechanisms <b>40</b>. The data <b>52</b> and the data <b>56</b> may be stored within one or more bits of the registers <b>42</b>. As may be appreciated, <figref idref="DRAWINGS">FIG. 4</figref> is provided by way of example only and is not intended to be limiting. In other embodiments, the specific register addresses and/or the number of register addresses employed may vary depending on factors, such as the types of plug-in I/O modules <b>16</b> designed to interact with the interface <b>14</b> and/or the specific design of the control/monitoring device <b>12</b>.</p>
<p id="p-0031" num="0030">Returning to <figref idref="DRAWINGS">FIG. 3</figref>, a module identification mechanism <b>58</b> may poll the plug-in I/O module <b>16</b> to retrieve identification data <b>60</b> upon power up of the control/monitoring device <b>12</b>. According to certain embodiments, the identification data <b>60</b> may be stored within the storage <b>48</b> and may include identification information, such as the vendor identification number (e.g. a number that identifies the manufacturer of the module), the module version number, the module serial number, the module type (e.g. whether the plug-in module <b>16</b> is a discrete I/O module or a multichannel analog module, among others) and/or the vendor specific product code for the plug-in I/O module <b>16</b>. The module identification mechanism <b>58</b> may then store the identification data <b>60</b> in designated registers <b>42</b> of the interface <b>14</b>. For example, as shown in <figref idref="DRAWINGS">FIG. 4</figref>, the identification data <b>60</b> may be stored within registers 0000 to 0009. In certain embodiments, the identification data <b>60</b> may include high byte and low byte values. If no identification data <b>60</b> is received, the interface <b>14</b> may assume that no plug-in I/O module <b>16</b> is coupled to the interface <b>14</b>.</p>
<p id="p-0032" num="0031">After the identification data <b>60</b> has been retrieved by the module identification mechanism <b>58</b>, a module configuration mechanism <b>62</b> may retrieve configuration format data <b>64</b> from the plug-in I/O module <b>16</b>. According to certain embodiments, the configuration format data <b>64</b> may be stored within the storage <b>48</b>. The configuration format data <b>64</b> may include data that identifies the format of data used by the plug-in I/O module <b>16</b>. For example, the configuration format data <b>64</b> may identify the data length employed by the plug-in I/O module <b>16</b>. In certain embodiments, the data length may be represented by high byte and low byte values. Further, the configuration format data <b>64</b> may include an offset number for identifying the starting address for where configuration data should be stored with the plug-in I/O module <b>16</b>. According to certain embodiments, the offset number may represent the amount of offset from the base address of the plug-in I/O module. After retrieving the configuration format data <b>64</b>, the module configuration mechanism <b>62</b> may store the configuration format data <b>64</b> within the registers <b>42</b>. For example, as shown in <figref idref="DRAWINGS">FIG. 4</figref>, the configuration format data <b>64</b> may be stored within registers 000E, 001D, and 001E.</p>
<p id="p-0033" num="0032">The module configuration mechanism <b>62</b> may use the configuration format data <b>64</b> to retrieve module configuration data <b>66</b> for the plug-in I/O module <b>16</b>. According to certain embodiments, the module configuration mechanism <b>62</b> may retrieve the module configuration data <b>66</b> from the monitoring station <b>24</b>. For example, the module configuration mechanism <b>62</b> may communicate with the microprocessor <b>28</b>, which may then request the module configuration data <b>66</b> through the network interface <b>32</b>, as shown in <figref idref="DRAWINGS">FIG. 2</figref>. According to certain embodiments, the monitoring station <b>24</b> may retrieve the module configuration data <b>66</b> from the database <b>26</b>. Further, in certain embodiments, the module configuration mechanism <b>62</b> also may use the identification data <b>60</b> to retrieve the module configuration data <b>66</b>. The module configuration data <b>66</b> may define operational parameters that the plug-in module <b>16</b> should employ, such as the current output level and/or the voltage mode among others.</p>
<p id="p-0034" num="0033">The module configuration mechanism <b>62</b> may store some or all of the module configuration data <b>66</b> within the registers <b>42</b>. In certain embodiments, the module configuration mechanism <b>62</b> may use the configuration format data <b>64</b> to define one or more registers <b>42</b> that should store the configuration data <b>66</b>. For example, the module configuration mechanism <b>62</b> may use the offset number received as part of the configuration format data <b>64</b> to assign registers <b>42</b> that should store the configuration data <b>66</b>. The module configuration mechanism <b>62</b> also may write the module configuration data <b>66</b> to the control device <b>44</b> of the plug-in I/O module <b>16</b>. The control device <b>44</b> may then store the module configuration data <b>66</b> within the registers <b>46</b>. Retrieval and writing of the module configuration data <b>66</b> may occur upon power up of the control/monitoring device <b>12</b> and may be particularly useful when the plug-in I/O module <b>16</b> does not include its own power supply, such as a battery, that could be used to retain data when the control/monitoring device <b>12</b> is powered down.</p>
<p id="p-0035" num="0034">The interface <b>14</b> may then determine input/output (I/O) information for the plug-in I/O module <b>16</b> through a module I/O mechanism <b>68</b>. For example, the module I/O mechanism <b>68</b> may request I/O format data <b>70</b> from the plug-in I/O module <b>16</b>. According to certain embodiments, the I/O format data <b>70</b> may be stored within the storage <b>48</b>. The I/O format data <b>70</b> may represent the I/O configuration of the plug-in I/O module <b>16</b>. For example, the I/O format data <b>70</b> may identify the number of inputs and/or the number of outputs included in the plug-in I/O module <b>16</b>.</p>
<p id="p-0036" num="0035">The I/O format data <b>70</b> also may identify the starting address offset number for the input registers and/or the output registers. For example, the offset number may identify the offset from the base address of the plug-in I/O module <b>16</b> of where the input data and/or the output data should be stored within the registers <b>46</b>. The offset number may enable the interface <b>14</b> to retrieve the input data from and transmit the output data to the appropriate registers <b>46</b> of the plug-in I/O module <b>16</b>. The module I/O mechanism <b>68</b> may then store the I/O format data <b>70</b> within the registers <b>42</b>. For example, as shown in <figref idref="DRAWINGS">FIG. 4</figref>, the I/O format data <b>70</b> may be stored within registers 000C, 000D, 0018, and 0019. Further, the module I/O mechanism <b>68</b> may use the I/O format data <b>70</b> to define input and output registers <b>42</b> of the interface <b>14</b>. For example, the module I/O mechanism <b>68</b> may define addresses of the registers <b>48</b> using the staring address offsets stored within addresses 0018 and 0019 to define registers <b>42</b> that correspond to the registers <b>46</b> employed by the control device <b>44</b>.</p>
<p id="p-0037" num="0036">The interface <b>14</b> also includes a module feature mechanism <b>72</b> that requests feature data <b>74</b> from the plug-in I/O module <b>16</b>. For example, the feature data <b>74</b> may define features that are included in the plug-in I/O module <b>16</b>, such as whether user interrupt functionality exists, whether an input latch mechanism exists, and/or whether an output apply mechanism exists. When user interrupt functionality is included within the plug-in I/O module <b>16</b>, a user may be able to program the plug-in I/O module <b>16</b> to interrupt the control/monitoring device <b>12</b> when a specific input event (e.g. a sensed value of temperature, voltage, etc. received through a sensor <b>20</b>) occurs. If a user has programmed a user interrupt event, the feature data <b>74</b> may include data describing the input event, and the interface <b>14</b> may write data to a register to indicate that a user interrupt event has been programmed. For example, the interface <b>14</b> may write the feature data to <b>74</b> register 001C as shown in <figref idref="DRAWINGS">FIG. 4</figref>. The input latch mechanism and the output apply mechanism may be designed to ensure data integrity for communication of two byte data and may be employed to synchronize inputs and outputs of the plug-in I/O module <b>16</b>.</p>
<p id="p-0038" num="0037">The module feature mechanism <b>72</b> may then store the feature data <b>74</b> within the registers <b>42</b>. For example, the module feature data <b>74</b> may be stored within register 000F as shown in <figref idref="DRAWINGS">FIG. 4</figref>. According to certain embodiments, different bits within register 000F may represent different features of the plug-in I/O module <b>16</b>. For example, one bit may be used to indicate whether the user interrupt functionality exists, while another bit may be used to indicate whether an input latch mechanism exists and yet another bit may be used to indicate whether an output apply mechanism exists.</p>
<p id="p-0039" num="0038">The module feature mechanism <b>72</b> also may store data within certain registers <b>42</b> to indicate how data should be communicated based on the features that are present within the plug-in I/O module <b>16</b>. Writing to certain registers by the module feature mechanism <b>72</b> may identify whether the features represented by the featured data <b>74</b> are present within the plug-in I/O module <b>16</b>. For example, as shown in <figref idref="DRAWINGS">FIG. 4</figref>, writing the feature data <b>74</b> to register 001A may indicate that input latching should be employed. Similarly, writing to the register 001B may indicate that output latching should be employed. In certain embodiments, if no feature data <b>74</b> is written to these registers, these registers may be ignored.</p>
<p id="p-0040" num="0039">The module identification mechanism <b>50</b>, the module configuration mechanism <b>62</b>, the module I/O mechanism <b>68</b>, and the module feature mechanism <b>72</b> may operate simultaneously with one another or in various orders to obtain the setup data <b>52</b>. Once the setup mechanisms <b>50</b> have completed the setup process, the interface <b>14</b> can facilitate operation of the plug-in I/O module <b>16</b> to control and/or monitor the process <b>18</b> (<figref idref="DRAWINGS">FIG. 1</figref>). During operation, the interface <b>14</b> may receive input data <b>76</b> from the plug-in I/O module <b>16</b> and may provide output data <b>78</b> to the plug-in I/O module <b>16</b>. The input data <b>76</b> may be received by the control device <b>44</b> from inputs, such as the sensors <b>20</b>, and may be provided to the interface <b>14</b> for use by the control/monitoring device <b>12</b>. The output data <b>78</b> may be transmitted to the interface <b>14</b> by the microprocessor <b>28</b> for transmission to the plug-in I/O module <b>16</b> where the output data <b>78</b> may be employed by the control device <b>44</b> to control outputs, such as outputs to the actuators <b>22</b>. The input data <b>76</b> and the output data <b>78</b> may be stored in the interface <b>14</b> within the input and output registers <b>42</b> defined by the module I/O mechanism <b>68</b> based on the offset numbers received from the plug-in I/O module <b>16</b> as part of the I/O format data <b>70</b>. The control/monitoring device <b>12</b> may use the input data <b>76</b> and the output data <b>78</b> to control the process <b>18</b>, as described above with respect to <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0041" num="0040">During operation of the control/monitoring device <b>12</b>, operational control mechanisms <b>54</b> may facilitate the exchange of operational data <b>56</b> between the plug-in I/O module <b>16</b> and the interface <b>14</b>. For example, the operational control mechanisms <b>54</b> may enable the control/monitoring device <b>12</b> and the plug-in I/O module to know the operational modes of each other. According to certain embodiments, the interface <b>14</b> may continuously write and/or request the operational data <b>56</b> to and/or from the control device <b>44</b> of the plug-in I/O module <b>16</b>.</p>
<p id="p-0042" num="0041">The interface <b>14</b> includes a controller mode mechanism <b>80</b> that may be employed to communicate controller mode data <b>82</b> to the plug-in I/O module <b>16</b>. The controller mode data <b>82</b> may represent the operational mode of the control/monitoring device <b>12</b>. For example, the controller mode data may indicate whether an error has occurred and if so, whether the error is an operational error or a fatal error. The controller mode mechanism <b>80</b> may retrieve the controller mode data <b>82</b> from the registers <b>42</b> and may transmit the controller mode data <b>82</b> to the control device <b>44</b>. For example, as shown in <figref idref="DRAWINGS">FIG. 4</figref>, the controller mode mechanism <b>80</b> may retrieve the controller mode data <b>82</b> from register 000B. According to certain embodiments, different bits within the controller mode register 000B may represent whether an error has occurred and the type of error. Further, other bits within the controller mode register may represent the operational mode of the control/monitoring device <b>12</b>. For example, one bit may be used for a non-run mode where the control/monitoring device is not providing output, and another bit may be used to represent a run mode.</p>
<p id="p-0043" num="0042">Further, the controller mode data <b>82</b> also may represent the power status of the control/monitoring device <b>12</b>. For example, one bit within the register 000B may represent that the power level is acceptable, while another bit may represent that a power failure has been triggered. According to certain embodiments, the control device <b>44</b> may initiate a data retention process upon receiving controller mode data <b>82</b> that indicates that a power failure has been triggered. For example, in certain embodiments, the control device <b>44</b> may send data from the registers <b>46</b> to the interface <b>14</b> for storage within the control/monitoring device <b>12</b> upon receiving an indication that a power failure has been triggered.</p>
<p id="p-0044" num="0043">The interface also includes a module control mechanism <b>84</b> that may be employed to control the operational mode of the plug-in I/O module <b>16</b>. In particular, the module control mechanism <b>84</b> may write module setting data <b>86</b> to the registers <b>46</b> of the plug-in I/O module <b>16</b> to place the plug-in I/O module <b>16</b> in a run mode or in a non-run mode. According to certain embodiments, the module control mechanism <b>84</b> may retrieve the module setting data <b>86</b> from the registers <b>42</b>. For example, as shown in <figref idref="DRAWINGS">FIG. 4</figref>, the module control mechanism <b>84</b> may retrieve the module setting data <b>86</b> from register 0011. According to certain embodiments, the microprocessor <b>28</b> may write the module setting data <b>86</b> to the register 0011 when the microprocessor <b>28</b> (<figref idref="DRAWINGS">FIG. 2</figref>) desires to place the plug-in I/O module <b>16</b> in either the run mode or the non run mode.</p>
<p id="p-0045" num="0044">The interface <b>14</b> further includes an interrupt mechanism <b>88</b> that enables the plug-in I/O module <b>16</b> to interrupt operation of the control/monitoring device <b>12</b>. According to certain embodiments, the control device <b>44</b> of the plug-in I/O module <b>16</b> may generate an interrupt signal that transmits the interrupt data <b>90</b> to the interface <b>14</b> when an error occurs. According to certain embodiments, the interrupt data <b>90</b> may be transmitted in response to the control device <b>44</b> detecting a bus parity check failure or a module specific interrupt. For example, according to certain embodiments, the control device <b>44</b> may be programmed to generate interrupt signals based on the inputs from the sensors <b>20</b> of the process <b>18</b>. Further, in certain embodiments, the control device may generate an interrupt signal based on a user defined interrupt event that may be programmed by a user through, for example, the monitoring station <b>24</b>. For example, the user defined interrupt signal may exist when the plug-in I/O module <b>16</b> includes the user interrupt functionality, as stored within address 001C (<figref idref="DRAWINGS">FIG. 4</figref>).</p>
<p id="p-0046" num="0045">According to certain embodiments, the interrupt data <b>90</b> may be placed within one of the registers <b>42</b> by the interrupt mechanism <b>88</b>. For example, as shown in <figref idref="DRAWINGS">FIG. 4</figref>, the interrupt data <b>90</b> may be written to the register 000A. According to certain embodiments, different bits within this register may be used to identify the type of interrupt signal, for example, whether the interrupt is the result of a bus parity check failure, a module specific interrupt, or a user configured interrupt. The microprocessor <b>28</b> (<figref idref="DRAWINGS">FIG. 2</figref>) may then read the interrupt signal from the register <b>42</b> and may interrupt operation of the control/monitoring device <b>12</b>. According to certain embodiments, the interface <b>14</b> may set the value of the interrupt register 000A to zero after the interrupt data <b>90</b> has been read by the microprocessor <b>28</b>.</p>
<p id="p-0047" num="0046">The interface <b>14</b> further includes a module mode mechanism <b>92</b> that periodically polls the plug-in I/O module <b>16</b> for module mode data <b>94</b>. The module mode data <b>94</b> may represent the operational mode of the plug-in I/O module <b>16</b>. For example, the module mode data <b>94</b> may indicate that the plug-in I/O module is idle, running, has received an error, or is busy. The module mode data <b>94</b> also may indicate whether the user interrupt functionality has been enabled or disabled on the plug-in I/O module <b>16</b>. Further, module mode data <b>94</b> may include error data <b>96</b> that indicates specific errors that have occurred within the plug-in I/O module <b>16</b>.</p>
<p id="p-0048" num="0047">The module mode mechanism <b>92</b> may retrieve the module mode data <b>94</b> and may write the module mode data <b>94</b> to a designated register <b>42</b>. For example, as shown in <figref idref="DRAWINGS">FIG. 4</figref>, the module mode mechanism <b>92</b> may write the module mode data to the register 0010. According to certain embodiments, different bits within the register 0010 may be employed to represent the module operational mode, the user interrupt status, and the error codes. The microprocessor <b>28</b> may use the module mode data <b>94</b> to control operation of the control/monitoring device <b>12</b>. Further, in certain embodiments, the module mode mechanism <b>92</b> may transmit the error data <b>96</b>, which is part of the module mode data <b>94</b>, to the monitoring station <b>24</b>. The monitoring station <b>24</b> may then display an error code representative of the error data <b>96</b> on a display accessible by a user, thereby allowing the user to address the error.</p>
<p id="p-0049" num="0048">While only certain features of the invention have been illustrated and described herein, many modifications and changes will occur to those skilled in the art. It is, therefore, to be understood that the appended claims are intended to cover all such modifications and changes as fall within the true spirit of the invention.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An industrial automation device, comprising:
<claim-text>a port configured to receive a plurality of different types of plug-in input/output (I/O) modules; and</claim-text>
<claim-text>an interface for enabling communication between the industrial automation device and the plurality of different types of plug-in I/O modules, wherein the interface comprises:
<claim-text>one or more setup mechanisms configured to detect connection of one of the plurality of different types of plug-in I/O modules to the interface through the port, configured to write module configuration data to the connected plug-in I/O module, and configured to retrieve I/O format data and feature data from the connected plug-in I/O module; and</claim-text>
<claim-text>one or more operational mechanisms configured to exchange operational mode data between a control/monitoring device and the connected plug-in I/O module, wherein the one or more operational mechanisms comprise a controller mode mechanism configured to:
<claim-text>write controller mode data to designated registers of the interface, wherein the controller mode data comprises error data associated with the control/monitoring device, power data associated with the control/monitoring device, or a combination thereof; and</claim-text>
<claim-text>transmit the controller mode data to the connected plug-in I/O module.</claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The industrial automation device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more setup mechanisms comprise a module I/O mechanism configured to request the I/O format data from the connected plug-in I/O module and configured to store the I/O format data in designated registers of the interface, wherein the I/O format data comprises a number of inputs and a number of outputs for the connected plug-in I/O module.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The industrial automation device of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the I/O data comprises a first offset value determinative of a first address of the connected plug-in I/O module where input data is stored and a second offset value determinative of a second address of the connected plug-in I/O module where output data is stored.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The industrial automation device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more setup mechanisms comprise a module feature mechanism configured to request the feature data from the connected plug-in I/O module and to store the feature data in designated registers of the interface, wherein the feature data comprises input latch mechanism data, output latch mechanism data, or user interrupt functionality data, or a combination thereof.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The industrial automation device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more setup mechanisms comprise a module configuration mechanism configured to request format data from the connected plug-in I/O module and configured to retrieve the module configuration data for the plug-in I/O module based on the format data.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The industrial automation device of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the format data comprises data length information for the connected plug-in I/O module and offset data identifying a configuration data address of the connected plug-in I/O module.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The industrial automation device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, comprising the control/monitoring device configured to communicate with the interface, wherein the controller mode data comprises run data indicating whether the control/monitoring device is providing an output.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The industrial automation device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more operational mechanisms comprise a module control mechanism configured to set the connected plug-in I/O module to a run mode and to a non-run mode.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The industrial automation device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more operational mechanisms comprise an interrupt mechanism configured to enable the connected plug-in I/O module to interrupt operation of the industrial automation device.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The industrial automation device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the interrupt mechanism is configured to receive interrupt data from the connected plug-in I/O module and to store the interrupt data in designated registers of the interface.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The industrial automation device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the plurality of different types of plug-in I/O modules comprise at least one of a communication module, an analog module, and a digital module.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The industrial automation device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the port comprises a 40-pin connector configured to transmit data over an Asynchronous Parallel Interface.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. Non-transitory computer-readable storage media comprising instructions for:
<claim-text>detecting connection of different types of plug-in input/output (I/O) modules to an industrial automation device;</claim-text>
<claim-text>retrieving plug-in I/O module configuration data for the different types of plug-in I/O modules and writing the plug-in I/O module configuration data to the different types of plug-in I/O modules;</claim-text>
<claim-text>requesting a plug-in I/O module number of inputs and a plug-in I/O module number of outputs from the different types of plug-in I/O modules and storing the plug-in I/O module number of inputs and the plug-in I/O module number of outputs in designated registers; and</claim-text>
<claim-text>requesting feature data from the different types of plug-in I/O modules and storing the feature data in additional designated registers, wherein the feature data comprises input latch mechanism data, output latch mechanism data, or user interrupt functionality data, or a combination thereof.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The non-transitory computer-readable storage media of <claim-ref idref="CLM-00013">claim 13</claim-ref>, comprising instructions for retrieving identification data from the different types of plug-in I/O modules.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The non-transitory computer-readable storage media of <claim-ref idref="CLM-00013">claim 13</claim-ref>, comprising instructions for setting the different types of plug-in I/O modules to a run mode and to a non-run mode.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The non-transitory computer-readable storage media of <claim-ref idref="CLM-00013">claim 13</claim-ref>, comprising instructions for transmitting controller mode data to the different types of plug-in I/O modules, wherein the controller mode data comprises error data, run data, or power data, or a combination thereof.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. An industrial automation control and monitoring system, comprising:
<claim-text>an industrial automation device configured to control and/or monitor a process;</claim-text>
<claim-text>a plug-in input/output (I/O) module connected to the industrial automation device through a port of the industrial automation device designed to receive different types of plug-in I/O modules; and</claim-text>
<claim-text>an interface of the industrial automation device for enabling communication between the industrial automation device and the plug-in I/O module, wherein the interface comprises:
<claim-text>a module identification mechanism configured to detect which of the different types of plug-in I/O modules is connected to the interface through the port;</claim-text>
<claim-text>a module I/O mechanism configured to request a number of inputs and a number of outputs from the plug-in I/O module and configured to store the number of inputs and the number of outputs from the plug-in I/O module in designated registers of the interface; and</claim-text>
<claim-text>a module feature mechanism configured to request feature data from the different types of plug-in I/O modules and storing the feature data in additional designated registers of the interface, wherein the feature data comprises input latch mechanism data, output latch mechanism data, user interrupt functionality data, or a combination thereof.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The industrial automation control and monitoring system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the plug-in I/O module comprises a control device configured to control operation of the plug-in I/O module, and wherein the control device comprises plug-in I/O module registers configured to store input data and output data for the plug-in I/O module.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The industrial automation control and monitoring system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the interface is configured to store the input data and the output data in the additional designated registers of the interface that correspond to the plug-in I/O module registers.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The industrial automation control and monitoring system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the plug-in I/O module comprises storage containing identification data for the plug-in I/O module, and wherein the module identification mechanism is configured to retrieve the identification data from the plug-in I/O module upon power up of the industrial automation device. </claim-text>
</claim>
</claims>
</us-patent-grant>
