<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625757-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625757</doc-number>
<kind>B1</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>13168747</doc-number>
<date>20110624</date>
</document-id>
</application-reference>
<us-application-series-code>13</us-application-series-code>
<us-term-of-grant>
<us-term-extension>105</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>M</subclass>
<main-group>15</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>37911206</main-classification>
<further-classification>37911203</further-classification>
</classification-national>
<invention-title id="d2e53">Monitoring services and service consumers</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>7783745</doc-number>
<kind>B1</kind>
<name>Bhargava et al.</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709224</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>2005/0143956</doc-number>
<kind>A1</kind>
<name>Long et al.</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>702184</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2005/0216241</doc-number>
<kind>A1</kind>
<name>Entin et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>703  2</main-classification></classification-national>
</us-citation>
</us-references-cited>
<number-of-claims>21</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>37911203</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>37911205</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>37911206</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>705 10</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>11</number-of-drawing-sheets>
<number-of-figures>11</number-of-figures>
</figures>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Karpov</last-name>
<first-name>Alexandre</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>McAdams</last-name>
<first-name>Darin Keith</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Kozolchyk</last-name>
<first-name>Jonathan</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Ding</last-name>
<first-name>Peter S</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
<us-applicant sequence="005" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Fielding</last-name>
<first-name>Jeffrey J</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Karpov</last-name>
<first-name>Alexandre</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>McAdams</last-name>
<first-name>Darin Keith</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Kozolchyk</last-name>
<first-name>Jonathan</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Ding</last-name>
<first-name>Peter S</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="005" designation="us-only">
<addressbook>
<last-name>Fielding</last-name>
<first-name>Jeffrey J</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Lee &#x26; Hayes, PLLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Amazon Technologies, Inc.</orgname>
<role>02</role>
<address>
<city>Reno</city>
<state>NV</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Tran</last-name>
<first-name>Quoc D</first-name>
<department>2656</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A monitoring service may receive, from a plurality of service providers, log information pertaining to access calls made by service consumers to services or APIs provided by the service providers. The monitoring service aggregates and analyzes the log information for use in monitoring performance of the services, identifying anomalies, and the like. In some instances, the monitoring service may identify multiple services that are behaviorally interrelated based on at least one performance metric, and may group these services together into service groups for monitoring purposes. A service relationship model may be generated for each of the service groups that predicts how each service will behave relative to the other services in the service group. The monitoring service may monitor performance and use of the services based, at least in part, on the one or more service groups and the service relationship model for each group.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="158.75mm" wi="251.97mm" file="US08625757-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="252.56mm" wi="176.87mm" orientation="landscape" file="US08625757-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="245.53mm" wi="173.40mm" orientation="landscape" file="US08625757-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="261.28mm" wi="178.31mm" orientation="landscape" file="US08625757-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="237.49mm" wi="177.88mm" orientation="landscape" file="US08625757-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="235.71mm" wi="181.78mm" orientation="landscape" file="US08625757-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="264.08mm" wi="181.44mm" orientation="landscape" file="US08625757-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="243.76mm" wi="174.75mm" orientation="landscape" file="US08625757-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="256.71mm" wi="172.64mm" file="US08625757-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="252.56mm" wi="160.10mm" file="US08625757-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="237.15mm" wi="175.09mm" file="US08625757-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="239.95mm" wi="166.71mm" file="US08625757-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">Some types of businesses or enterprises may use a number of applications that interact with one another to carry out functions connected with enterprise activities. Thus, some of these applications provide services that are utilized by other applications employed by the enterprise. These internal services are often provided to the other applications as part of an enterprise's business operations. Further, because internal services are typically provided within an enterprise's own network, intranet, or the like, interactions are often assumed to be secure. Consequently, the provision and consumption of internal services may not always be well monitored, which can affect the enterprise's efficiency and security.</p>
<p id="p-0003" num="0002">Additionally, some internal services may be used by many different service consumers for many different purposes, and internal services tend to change or evolve at a faster rate than public services. Thus, internal service providers may not be able to easily monitor how their services are performing, how their services are being used, who is using their services, or how ongoing changes in their services affect users and overall security concerns. Further, on the other side, the applications of service consumers may not always receive their requested services in a timely manner due to latency or interrupts at the service providers. However, the causes of such latencies or interrupts are not always easy to identify.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0002" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0004" num="0003">The detailed description is set forth with reference to the accompanying figures. In the figures, the left-most digit(s) of a reference number identifies the figure in which the reference number first appears. The use of the same reference numbers in different figures indicates similar or identical items or features.</p>
<p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an example architecture of a system for monitoring services and service consumers according to some implementations.</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 2</figref> illustrates an example of multiple entities engaging in multiple roles as service and/or client according to some implementations.</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an example framework for generating service relationship models from aggregated log data according to some implementations.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a graphic example of using a service relationship model for monitoring aggregated log data of a service group according to some implementations.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 5</figref> illustrates a graphic example of using a service relationship model for monitoring aggregated log data of a service group according to some implementations.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an example framework for monitoring services and taking remedial action in response to an alert according to some implementations.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 7</figref> illustrates an example of a portion of a monitoring service user interface according to some implementations.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 8</figref> is a flow diagram illustrating an example process for grouping services into one or more service groups and generating one or more service relationship models for monitoring the services according to some implementations.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 9</figref> is a flow diagram illustrating an example process for monitoring services and service consumers according to some implementations.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 10</figref> illustrates select components of an example monitoring service computing device according to some implementations.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 11</figref> illustrates select components of an example service provider computing device according to some implementations.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0003" level="1">DETAILED DESCRIPTION</heading>
<p id="h-0004" num="0000">Monitoring Services and Service Consumers</p>
<p id="p-0016" num="0015">This disclosure includes techniques and arrangements for monitoring services and service consumers. In some implementations, a monitoring service may receive copies of log data pertaining to a plurality of services. The log data may include details of service requests or calls made to the services by the service consumers, such as calls made to one or more application programming interfaces (APIs) provided by each service. For example, the monitoring service herein can receive log information from each service and maintain log files pertaining to service consumer usage of each service. The monitoring service may perform aggregation and analysis on the logs to determine various types of information pertaining to performance of the services and usage of the services by service consumers. For example, information that may be determined regarding the performance of the services may include latency times in responding to calls from service consumers, average latency times for a service, which service consumers may have contributed to an increase in latency or call volume, peak call volumes, size of outgoing data, average number of calls over a period of time, number of calls at different times of day or during different days of the week, and the like. Information that may be determined regarding the service consumers may include the identity of each service consumer that called each service, how many times each service consumer called each service, latencies for each service consumer in receiving responses to each call, changes in latency experienced by various service consumers, changes in timeouts experienced by various service consumers, aggregate change in performance over a period of time, and the like. The aggregated log information may be rendered for display and/or monitored for detecting abnormal call volumes or latencies, access anomalies, security breaches, excessive usage of a service by a service consumer, and the like. For example, the monitoring service may issue an alert to a service provider when usage anomalies are detected and/or take direct action to address a detected anomaly.</p>
<p id="p-0017" num="0016">In some implementations, a user interface may display the aggregated information extracted from the log data. For example, the aggregated log information may be rendered in graphical form for viewing by an administrator at the monitoring service or at a service provider. For instance, the user interface may display various types of information such as which service consumers called a particular service most often, which service consumers consumed the most service time over a particular time window, which service consumers may have contributed to an increase in latency times for a particular service, and the like. Further, the aggregated log information may be automatically analyzed using analysis techniques to detect anomalies or other problems. For example, for each service, call volume and several different types of latencies may be monitored, e.g., the amount of time to respond to each request, the average amount of time to respond to a plurality of requests, the amount of time required to respond to a certain percentage of the requests, and so forth. Furthermore, in some implementations, the aggregated log information for each service may be provided directly to the corresponding service provider of that service to enable the service provider to view, analyze and/or address any issues presented by the aggregated log information for that service.</p>
<p id="p-0018" num="0017">Some implementations may establish a one or more service relationships for detecting abnormalities, excessive service consumer usage, or the like. For example, some or all of the service applications for the enterprise may be observed over a first period of time to detect which services are interrelated to one another based on utilization or behavior patterns of the services with respect to one or more performance metrics. For example, based on global observation of the relative performances of all services, the monitoring service can identify one or more subsets of services that are interdependent or behaviorally related to one another. Based on this observed behavior, the monitoring service creates one or more service groups from the plurality of services and each service group may be monitored for anomalies. Thus, each service group may be made up of a subset of the services that have been determined to have performance that is interrelated or codependent, at least in part, on performance of the other services in that group. As one example, when one of the services in a particular service group experiences an increase in traffic or an increase in latency, the other services in the group might also be expected to experience a similar increase in traffic or latency.</p>
<p id="p-0019" num="0018">In addition, one or more service relationship models may be established for each of the subsets or groups of interrelated services based on the observed performance patterns. For example, the service relationship model may be a statistical model that predicts how each member of a particular service group will behave in response to performance of other members of the particular service group.</p>
<p id="p-0020" num="0019">Following identification of the service groups and generation of the corresponding service relationship models, the services in each group may be monitored over subsequent time periods to determine whether the services in each group are performing in an expected manner, such as may be indicated by the service relationship models. As one example, spikes in service calls for some types of services may occur on a frequent basis. However, according to implementations herein, such spikes do not necessarily indicate an anomaly or a problem for concern when other services in the same group are also observed to spike in a similar manner. Consequently, some implementations enable avoidance of spurious alarms by using the service relationship models to determine whether a spike in call volume, latency, or other metric for a service is an anomaly that needs to be addressed, or merely part of normal enterprise operations, such as may be caused by a spike in real-world traffic.</p>
<p id="p-0021" num="0020">Additionally, in some implementations, the user interface may provide an administrator at the monitoring service or at a service provider with the ability to address anomalies, detected security breaches, or excessive use of a service by a service consumer. For example, the user interface may enable implementation of a remedial action contingency or control to slow down overall traffic at a particular service or block one or more particular service consumers causing the anomaly. In some implementations, overall traffic may be slowed down using various techniques such as by implementing a captcha or asking a security question, thereby requiring human interaction from the service consumers for each call to a service. Additionally, in some implementations, the user interface may provide a single control that can be activated by a service provider or by the monitoring service to block calls received from a particular service consumer, thereby blocking the particular service consumer from accessing a particular service or multiple services. For example, the blocking of one or more selected service consumers may occur at the service level, such as when an anomaly or excessive usage is detected. In some implementations, a particular service consumer may be blocked from accessing a particular API when the rate at which the service consumer calls the API exceeds a predetermined threshold or quota established for the service consumer.</p>
<p id="h-0005" num="0000">Example Architecture</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an example architecture of a system <b>100</b> that includes a monitoring service <b>102</b> for monitoring services and service consumers according to some implementations. The monitoring service <b>102</b> is able to communicate with a plurality of service providers <b>104</b>-<b>1</b>, <b>104</b>-<b>2</b>, . . . , <b>104</b>-N, which in turn, are able to communicate with a plurality of clients or service consumers <b>106</b>-<b>1</b>, <b>106</b>-<b>2</b>, . . . , <b>106</b>-M. For example, each service provider <b>104</b> may have one or more service provider applications <b>108</b>-<b>1</b>, <b>108</b>-<b>2</b>, . . . , <b>108</b>-L that provide one or more services <b>110</b>-<b>1</b>, <b>110</b>-<b>2</b>, . . . , <b>110</b>-K to one or more service consumer applications <b>112</b>-<b>1</b>, <b>112</b>-<b>2</b>, . . . , <b>112</b>-J at each service consumer <b>106</b>. Furthermore, as will be explained additionally below, in some instances a service consumer <b>106</b> of one service <b>110</b> may itself be a service provider <b>104</b> of another service <b>110</b> to another service consumer <b>106</b>. Thus, in some implementations, a single application may act in dual roles by being both a service provider application <b>108</b> that provides a service <b>110</b> to a service consumer <b>106</b>, while also being a service consumer application <b>112</b> that utilizes a service <b>110</b> provided by another service provider <b>104</b>.</p>
<p id="p-0023" num="0022">Additionally, in some instances, one or more of the service consumers <b>106</b> may provide services to end users <b>114</b>, such as internal users (e.g., employees of an enterprise) or external users such as customers, potential customers and other members of the public. For example, the users <b>114</b> may access one of the service consumers <b>106</b>, such as service consumer <b>106</b>-<b>2</b>, using any of a variety of devices, such as personal computers or workstations <b>116</b>-<b>1</b>, e-book readers and tablet devices <b>116</b>-<b>2</b>, laptop computers <b>116</b>-<b>3</b>, cellular telephones and smart phones <b>116</b>-<b>4</b>, or any other suitable devices. The service consumer <b>106</b>-<b>2</b> may access one or more service providers <b>104</b> when providing a service itself to the users <b>114</b>. Thus, in some implementations, the service providers <b>104</b> may provide internal services to the service consumers <b>106</b>, and one or more service consumers <b>106</b> may provide an external service to one or more users <b>114</b>.</p>
<p id="p-0024" num="0023">The monitoring service <b>102</b> may include a monitoring module <b>118</b> to perform the functions and features described herein for monitoring services and service consumers. For example, the monitoring module <b>118</b> may receive log information <b>120</b> from the service providers <b>104</b> for enabling monitoring of the services <b>110</b> and the service consumers <b>106</b> by the monitoring service <b>102</b>. Thus, the monitoring service <b>102</b> may receive the log information <b>120</b> from each service <b>110</b> monitored by the monitoring service <b>102</b>, and the received log information <b>120</b> may be stored in logs <b>122</b>. For example, the logs <b>122</b> may be stored at the monitoring service <b>102</b> or at a remote location, such as on a storage array, network attached storage, storage area network, storage service, or the like. The information in the logs <b>122</b> may be subsequently aggregated and analyzed, as described additionally below, to generate aggregated log data <b>124</b> that is used during monitoring of the services and service consumers.</p>
<p id="p-0025" num="0024">The monitoring module <b>118</b> may further include a user interface <b>126</b> that may be used by an administrator at the monitoring service <b>102</b> for performing functions in association with the monitoring. An instance of the user interface <b>126</b> may also be made available to one or more of the service providers <b>104</b> for enabling the service providers to view the aggregated log data for monitoring and managing their own services <b>110</b>. The user interface <b>126</b> may provide the aggregated log data <b>124</b> for review by an authorized party, such as the administrator at the monitoring service, an administrator at one or more associated service providers <b>104</b>, or other authorized third parties. Additional details and functions of the user interface <b>126</b> are discussed below.</p>
<p id="p-0026" num="0025">The monitoring module <b>118</b> may automatically review and monitor the aggregated log data <b>124</b>, such as by utilizing one or more service relationship models <b>128</b>, which may be applied to identify any anomalies or use conditions that may warrant providing an alert to the administrator at the monitoring service or at a particular service provider. Furthermore, as described additionally below, the monitoring module <b>118</b> may also generate and continually refine the one or more service relationship models <b>128</b> for monitoring the actions and interactions of each service <b>110</b> and each service consumer <b>106</b>. In some implementations, the one or more service relationship models <b>128</b> may be based on groupings of services that have performance metrics that are interrelated to one another, such as a plurality of APIs that show some performance metric interdependence or relationship.</p>
<p id="p-0027" num="0026">The service providers <b>104</b> may communicate with the monitoring service <b>102</b> through one or more communication links <b>130</b>; the service providers <b>104</b> may communicate with the service consumers <b>106</b> through one or more communication links <b>132</b>; and the service consumers <b>106</b> may communicate with the users <b>114</b> through one or more communication links <b>134</b>. Further, while not shown for clarity, the monitoring service <b>102</b>, service providers <b>104</b>, service consumers <b>106</b> and users <b>114</b> may all be able to communicate with one another through the various communication links. Each of these communication links <b>130</b>, <b>132</b>, <b>134</b> may be the same communication link or different communication links. For example, the communications links <b>130</b>-<b>134</b> may be any of a direct connection, a local area network (LAN), a wide area network (WAN), a virtual private network (VPN), or any combination thereof, and may include both wired and wireless communication technologies using any suitable protocols and communication techniques. In some implementations, the monitoring service <b>102</b>, service providers <b>104</b> and service consumers <b>106</b> may be located at a data center, server farm or other single physical location, while in other implementations, the monitoring service <b>102</b>, service providers <b>104</b>, service consumers <b>106</b> and users <b>114</b> may be located in diverse and disparate locations that are physically remote from one another, and the communication links <b>130</b>-<b>134</b> may include the Internet or other long range communication network.</p>
<p id="h-0006" num="0000">Example Roles and Relationships</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 2</figref> is an example framework <b>200</b> illustrating how different entities may perform various different roles (e.g., service provider, service consumer (client) or both service provider and service consumer) according to some implementations. In this example, a first entity <b>202</b> may be a provider of an external service <b>204</b> to one or more end users <b>206</b>, such as consumers, employees of an enterprise, or the like. In order to provide the external service <b>204</b>, the first entity <b>202</b> may subscribe as a service consumer to a plurality of services. For instance, the first entity <b>202</b> may include a consumer of service A <b>208</b> as a service consumer that uses services provided by a second entity <b>210</b>. For example, the second entity <b>210</b> may provide a service A <b>212</b> that, when called by the consumer of service A <b>208</b>, provides information or other services to the consumer of service A <b>208</b>. Further, the first entity <b>202</b> may also include a consumer of service B <b>214</b> as a service consumer that uses services provided by a third entity <b>216</b>. For example, the third entity <b>216</b> may provide a service B <b>218</b> that provides services to the consumer of service B <b>214</b> at the first entity <b>202</b>.</p>
<p id="p-0029" num="0028">Furthermore, the second entity <b>210</b> may include a consumer of service C <b>220</b> as a service consumer that accesses services provided by a fourth entity <b>222</b>, such as to enable the service A <b>212</b> to provide the service A to the consumer of service A <b>208</b>. The fourth entity <b>222</b> may include a service C <b>224</b> that provides information or other services to the consumer of service C <b>220</b> to enable functionality of the service A <b>212</b>. Similarly, the third entity <b>216</b> includes a consumer of service C <b>226</b> as a service consumer that obtains information or other services from the service C <b>224</b> of the fourth entity <b>222</b> for use by the service B <b>218</b> when providing the service B to the consumer of service B <b>214</b>.</p>
<p id="p-0030" num="0029">From this example, it will be apparent that certain entities or applications may adopt different roles as service consumer (client) and/or service provider during performance of their functions. Further, each of the services <b>212</b>, <b>218</b> and <b>224</b> may communicate log information <b>120</b> to the monitoring service <b>102</b>. For example, the services <b>212</b>, <b>218</b> and <b>224</b> may provide log information <b>120</b> to the monitoring service <b>102</b> on a periodic basis, such as in a batch delivery, or may provide the log information <b>120</b> to the monitoring service <b>102</b> as the log information <b>120</b> is accumulated at each service <b>212</b>, <b>218</b> and <b>224</b>. Further, the example of <figref idref="DRAWINGS">FIG. 2</figref> is just one nonlimiting example of the numerous types of service consumer and service interactions that may be monitored according to the implementations disclosed herein.</p>
<p id="h-0007" num="0000">Example Service Groups and Service Relationship Models</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an example framework <b>300</b> for identifying interrelated services and/or generating one or more service relationship models according to some implementations. The functions of the framework <b>300</b> may be executed by the monitoring module <b>118</b>, as executed on one or more processors on one or more monitoring service computing devices, as described additionally below. For example, the monitoring module <b>118</b> may include a data aggregation module <b>302</b> that carries out the data aggregation to generate the aggregated log data <b>124</b>. Furthermore, the monitoring module <b>118</b> may include a modeling module <b>304</b> to identify service groups and generate the service relationship models <b>128</b> based on an initial set of aggregated log data <b>124</b>. Further, the modeling module <b>304</b> may periodically refine or update the service groups and/or service relationship models based on subsequent sets of aggregated log data <b>124</b>. In addition, the monitoring module <b>118</b> may include an analysis module <b>306</b> for applying the service relationship models <b>128</b> to subsequent sets of aggregated log data <b>124</b> for performing the monitoring functions described herein.</p>
<p id="p-0032" num="0031">Each of the services <b>110</b>-<b>1</b>, <b>110</b>-<b>2</b>, . . . , <b>110</b>-K may include one or more respective APIs <b>308</b>-<b>1</b>, <b>308</b>-<b>2</b>, . . . , <b>308</b>-H that may provide the associated services to service consumers when called by a service consumer application <b>112</b>. Furthermore, each service <b>110</b> provides log information <b>120</b> that is aggregated by the data aggregation module <b>302</b> to generate aggregated log data <b>124</b>. For example, the data aggregation module may aggregate received log data on at predetermined intervals, such as every minute, every five minutes, every ten minutes, etc. Numerous different types of aggregated log data <b>124</b> may be generated from the log information <b>120</b>, such as call volume of each service as a function of time, latency of each service as a function of time, average latencies, number of cache hits, how many times each client called each service, and a comparison of the performance of one service with the performance of another service, to name a few nonlimiting examples. In some implementations, the data aggregation module <b>302</b> may be operated across a distributed computing system such as by using a map reduce process for aggregating the log data, or the like. Furthermore, the data aggregation module may aggregate the log data into the discrete intervals of time to determine the various metrics of the services and service consumers mentioned above.</p>
<p id="p-0033" num="0032">Initially, in order to group the plurality of services <b>110</b> into subsets of interrelated services and/or generate the service relationship models <b>128</b>, the monitoring module <b>118</b> may receive log information <b>120</b> from the plurality of the services <b>110</b> over a first period of time. The data aggregation module <b>302</b> may aggregate this log information to generate aggregated log data <b>124</b>. In the example of <figref idref="DRAWINGS">FIG. 3</figref>, a plurality of service groups and service relationship models are generated based on call volume as a function of time, although service groups and/or service relationship models may be generated based on numerous other aspects of service metrics, such as response times, average latency, and so forth.</p>
<p id="p-0034" num="0033">For example, each service <b>110</b> may receive calls from service consumers <b>106</b> to the one or APIs <b>308</b> provided by each service <b>110</b>. This is generally referred to as call volume or traffic. Each service <b>110</b> generates log information <b>120</b> about the calls from each service consumer <b>106</b>, and provides this log information <b>120</b> to the monitoring module <b>118</b>. In the illustrated example, the data aggregation module <b>302</b> aggregates the call volume data from a plurality of services, as represented by graph <b>310</b> (although other suitable data structures may be used, depending at least in part on the metric being examined). In this example, each curve <b>312</b>-<b>322</b> in the graph <b>310</b> maps changes in the call volume of a different service <b>110</b> over time. Furthermore, while the curves of six different services are shown in the example of <figref idref="DRAWINGS">FIG. 3</figref> for discussion purposes, in some implementations there may be several orders of magnitude greater number of services.</p>
<p id="p-0035" num="0034">The modeling module <b>304</b> may apply statistical analysis to identify those services or particular APIs that demonstrate an interrelationship with respect to call volume. Services or particular APIs that are determined to be interrelated may be grouped into one or more service groups, such as a first service group <b>324</b>-<b>1</b>, a second service group <b>324</b>-<b>2</b>, a third service group <b>324</b>-<b>3</b>, . . . , and so forth. For example if the call volume of a first service goes up when the call volume of a second service goes up, and likewise, goes down, when the call volume of the second service goes down, as demonstrated by curves <b>318</b> and <b>320</b>, then those two services may be grouped together in a service group such as first service group <b>324</b>-<b>1</b>. As another example, if the call volume of a first service goes down when the call volume of a second service goes up, and vice versa, those services might also be considered to be interrelated, as demonstrated for example, by curves <b>314</b> and <b>320</b> in the graph <b>310</b>. As yet another example, as indicated by the curves <b>320</b> and <b>322</b>, when a service receives call volumes for a longer period of time or at more frequent intervals, as indicated by curve <b>322</b>, when another service goes up in call volume, as indicated by curve <b>320</b>, then those services might also be considered interrelated. The modeling module may take these and other relationships into consideration when grouping the services into service groups <b>324</b>, such as service groups <b>324</b>-<b>1</b>, <b>324</b>-<b>2</b> and <b>324</b>-<b>3</b> in this example. Each of the service groups <b>324</b> may include identification of a plurality of services or APIs that have been identified by the modeling module <b>304</b> as being related to one another for purposes of monitoring call volume. Service groups may be similarly generated for other service metrics such as various types of latency or the like.</p>
<p id="p-0036" num="0035">The modeling module <b>304</b> may generate a service relationship model <b>128</b> based on each of the service groups <b>324</b> that predicts how each API in each service group <b>324</b> will perform relative to the other APIs in the service group. For example, various statistical modeling techniques may be used to generate the service relationship models <b>128</b>, examples of which may include regression models, Markov chain models, hidden Markov models, Bayesian models, or the like. The service relationship model <b>128</b> for each service group establishes statistical probabilities regarding predicted relative behaviors of members of the group with respect to one another for the relative performance metric.</p>
<p id="p-0037" num="0036">As a simple example, suppose that a first service group <b>324</b> includes ten services, and observed behavior has shown that as the latency of one of the services increases, the latency of the other nine services increases generally proportionally, and as the latency of one of the services decreases, the latency of the other nine services also decreases generally proportionally. Accordingly, a service relationship model <b>128</b> may be generated for this service group <b>324</b> that predicts the proportional amount of change in latency expected for each service in the group in response to changes in latency of one or more of the other services in the group. The service relationship model may further include a predicted deviation from the observed changes for each member of the group <b>324</b> to account for variations in day-to-day operations of the services. Various other statistical modeling techniques may also be employed for generating the service relationship model. Further, while the foregoing provides a simple description of an example service relationship model, the service relationship models <b>128</b> may become substantially more complex when attempting to account for more unusual behaviors, such as those demonstrated by the curves <b>312</b>, <b>314</b>, <b>316</b>, and <b>322</b>, which may take into account inverse relationships, relate time of performance to quantity of performance, and so forth, or when a plurality of performance metrics are used to relate the services in a group to one another. Nevertheless, once generated, the service relationship model <b>128</b> for each service group <b>324</b> may be applied to subsequent aggregated log data <b>124</b> to predict whether a member of the service group <b>324</b> is out of range with respect to other members of the service group <b>324</b>. When a determination is made that a member of a service group <b>324</b> is out of range, an alert may be provided to an administrator at the monitoring service or at the service provider itself.</p>
<p id="p-0038" num="0037">Furthermore, the modeling module <b>304</b> may continually refine the service groups <b>324</b> and/or the service relationship models <b>128</b> as new log information <b>120</b> is received from the services <b>110</b>. For example, if a first service <b>110</b>-<b>1</b> changes its algorithm so that it no longer shows a performance correspondence to other services in a particular service group related to a particular metric, then the modeling module <b>304</b> will subsequently remove the first service <b>110</b>-<b>1</b> from the particular service group, as there will no longer be sufficient statistical association between the performance of the first service <b>110</b>-<b>1</b> and the other services in the service group for the particular performance metric. Services may subsequently be added to service groups on inverse similar reasoning.</p>
<p id="p-0039" num="0038">In the illustrated example of <figref idref="DRAWINGS">FIG. 3</figref>, the modeling module <b>304</b> has generated a first service relationship model <b>128</b>-<b>1</b> for the first service group <b>324</b>-<b>1</b>, which includes at least the first API <b>308</b>-<b>1</b>, the second API <b>308</b>-<b>2</b>, and the third API <b>308</b>-<b>3</b>. Similarly, a second service relationship model <b>128</b>-<b>2</b> for a second service group <b>324</b>-<b>2</b> includes at least a fourth API <b>308</b>-<b>4</b>, a fifth API <b>308</b>-<b>5</b>, and a sixth API <b>308</b>-<b>6</b>. Further a third service relationship model <b>128</b>-<b>3</b> for a third service group <b>324</b>-<b>3</b> includes at least the first API <b>308</b>-<b>1</b>, the fourth API <b>308</b>-<b>4</b>, and a seventh API <b>308</b>-<b>7</b>. Accordingly, the APIs <b>308</b> may be grouped into more than one service group <b>324</b>, with a limitation being that they show a behavioral interrelationship with the other APIs included in that particular service group <b>324</b> for a particular service metric.</p>
<p id="p-0040" num="0039">Following generation of the service relationship models <b>128</b>, the analysis module <b>306</b> of the monitoring module <b>118</b> may apply the service relationship models <b>128</b> when performing analysis of subsequently received log information <b>120</b>. For example, as new log information is received and aggregated by the data aggregation module <b>302</b>, the log information for the APIs <b>308</b> of each service group <b>324</b> may be aggregated together to determine compliance with the service relationship model <b>128</b> for that service group <b>324</b>. When a service relationship model <b>128</b> for a particular service group <b>324</b> indicates that a member of the service group <b>324</b> is out of range as compared to the other members of the service group <b>324</b>, an alert may be issued.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 4</figref> illustrates an example for discussion purposes of a graph <b>400</b> representing aggregation of call volume data for a service group <b>324</b> over time. The graph <b>400</b> maps data for a service group <b>324</b> that includes four APIs including a first API <b>402</b> having data points represented by squares, a second API <b>404</b> having data points represented by circles, a third API <b>406</b> having data points represented by pentagons, and a fourth API <b>408</b> having data points represented by inverted triangles. In this example, the first API <b>402</b> has spiked to almost double its previous value over the course of several minutes, as shown at by a spike <b>410</b>. However, because the other APIs, <b>404</b>, <b>406</b> and <b>408</b> have also increased by large amounts, the analysis component <b>306</b> may determine that the spike is a normal event driven by external traffic, and therefore, an alarm is not issued. For instance, in this example, the service relationship model <b>128</b> indicates that the four APIs <b>402</b>, <b>404</b>, <b>406</b> and <b>408</b> are interrelated in such a way that they follow each other in call volume within certain ranges <b>412</b>, <b>414</b>, <b>416</b>. Consequently, the analysis module <b>306</b> determines that the spike <b>410</b> in the first API <b>402</b> also resulted in spikes in the other three APIs <b>404</b>, <b>406</b> and <b>408</b>, and accordingly, the likelihood that the spike <b>410</b> is cause for alarm is considered low.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an example of a graph <b>500</b> that depicts a different scenario for the APIs <b>402</b>-<b>408</b> discussed in <figref idref="DRAWINGS">FIG. 4</figref> above. In this example, as noted at area <b>502</b> on the graph <b>500</b>, the fourth API <b>408</b> has increased in call volume substantially while the other APIs <b>402</b>, <b>404</b>, and <b>406</b> have only increased gradually over several intervals time. Accordingly, the analysis module <b>306</b> may determine that the fourth API <b>408</b> is not within the expected ranges indicated by the service relationship model <b>128</b> for this service group <b>324</b>. Consequently, when the analysis module <b>306</b> makes this determination an alert may be provided to the administrator at the monitoring service <b>102</b>, or at the service provider corresponding to the fourth API <b>408</b>. For example, the analysis module <b>306</b> may generate an alert that is sent as electronic communication to an administrator at the monitoring service <b>102</b> or at the service provider <b>104</b> that provides the fourth API <b>408</b>. The administrator may access the monitoring service interface <b>126</b> to take remedial action to address the anomaly in the fourth API <b>408</b>.</p>
<p id="p-0043" num="0042">For example, upon determining that an alert should be issued, the analysis module <b>306</b> may next examine the service consumers <b>106</b> that are accessing the fourth API <b>408</b> during the interval in question. For example, the aggregated log data <b>124</b> may provide information with the granularity of each call to each API by each service consumer, which enables the data aggregation module <b>304</b> to identify how many calls each service consumer makes to each API. Accordingly, the data aggregation module is able to isolate and identify the service consumers currently and recently calling the fourth API <b>408</b>. The analysis module <b>306</b> may access this information to determine whether one or several of those service consumers are causing the spike at <b>502</b> and may include this information with the alert provided to the administrator. If a particular service consumer is causing the increased activity, the administrator may block the particular service consumer using a control in the user interface <b>126</b>, as described additionally below. As another example, if a particular service consumer cannot be identified as the cause, the administrator may be able to take other remedial action to slow traffic to the API, if necessary. For example, if the service type is conducive, the administrator may use the user interface <b>126</b> to implement a captcha or security question that causes all service consumers to include human interaction when making requests to the fourth API <b>408</b>. This type of remedial action may be effective during a denial of service attack, thereby slowing traffic to the fourth API <b>408</b>, although this may not be practical for all types of services. However, numerous other options will be apparent to those of skill in the art in view of the disclosure herein. In the example of <figref idref="DRAWINGS">FIG. 5</figref>, following the remedial action, the traffic to the fourth API recedes to an expected level as indicated at <b>504</b>.</p>
<p id="h-0008" num="0000">Example Monitoring Framework</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an example framework <b>600</b> for monitoring services and service consumers, and for enabling remedial action in response to an alert according to some implementations. In this example, the monitoring service <b>102</b> is in communication with a plurality of services <b>602</b>-<b>1</b>, <b>602</b>-<b>2</b>, . . . , which are in communication with a plurality of service consumers <b>604</b>-<b>1</b> through <b>604</b>-<b>6</b>, . . . , as described above. Accordingly, each service consumer <b>604</b> may submit one or more access calls <b>606</b> to obtain a desired service from one of the services <b>602</b>. Each service <b>602</b> may include at least one service application <b>608</b> for providing the service and at least one API <b>610</b> for responding to the access calls <b>606</b> from the service consumers <b>604</b>. As an example, in some implementations, the services <b>602</b> may require that the service consumers <b>604</b> use a secret key to sign the access calls <b>606</b>, and each service <b>602</b> may also have a corresponding secret key that may be used to check that the access calls <b>606</b> are from authorized service consumers. In other implementations, secret keys are not used and the services may check the authorization of the service consumers <b>604</b> in other known manners, or not at all.</p>
<p id="p-0045" num="0044">In some implementations, each service <b>602</b>-<b>1</b>, <b>602</b>-<b>2</b> may include a respective agent <b>612</b>-<b>1</b>, <b>612</b>-<b>2</b>, such as a runtime client, that records the log information <b>120</b> and provides the log information <b>120</b> to the monitoring service <b>102</b>. For example, the agent <b>612</b> for a service <b>602</b> may keep track of each access call <b>606</b> received by the service <b>602</b> from each service consumer <b>604</b>, determine the response time to each access call <b>606</b>, the API that was the subject of each access call <b>606</b>, the information provided to a service consumer for each access call <b>606</b>, and the like. In some instances, when each service provider <b>614</b> registers a service <b>602</b> with the monitoring service <b>102</b>, or otherwise becomes a member of or subject to the monitoring service <b>102</b>, the agent <b>612</b> may be provided to each service provider <b>614</b>. For example, each service provider <b>614</b> may download the agent <b>612</b> from the monitoring service <b>102</b>, or the like. In the illustrated example, the agent <b>612</b>-<b>1</b> provides log information <b>120</b>-<b>1</b> from the first service <b>602</b>-<b>1</b>, while the agent <b>612</b>-<b>2</b> provides log information <b>120</b>-<b>2</b> from the second service <b>602</b>-<b>2</b>.</p>
<p id="p-0046" num="0045">Accordingly, each agent <b>612</b> on each service <b>602</b> may act independently to store log information <b>120</b> and periodically provide the log information <b>120</b> to the monitoring service <b>102</b> for storage in the logs <b>122</b>. For example, the logs <b>122</b> may include separately stored logs for each separate service, such as logs from the first service <b>122</b>-<b>1</b>, logs from the second service <b>122</b>-<b>2</b>, and so forth. Furthermore, each agent <b>612</b> may provide an instance of the user interface <b>126</b> to an administrator at the service provider <b>614</b>, which may provide the service provider <b>614</b> with the ability to view aggregated log data <b>124</b> pertaining to at least the corresponding the service of the service provider. For example, as the data aggregation module <b>302</b> aggregates the logs <b>122</b> to generate aggregated log data <b>124</b> the aggregated log data <b>124</b> may be provided to each service provider <b>614</b>. In the illustrated example, aggregated log data <b>124</b>-<b>1</b> related to first service <b>602</b>-<b>1</b> is provided to the first service provider <b>614</b>-<b>1</b>. Similarly, aggregated log data <b>124</b>-<b>2</b> related to the second service <b>602</b>-<b>2</b> is provided to the second service provider <b>614</b>-<b>2</b>. Thus, administrators at each service provider <b>614</b> are able to view the aggregated log data <b>124</b> relating to their services <b>602</b>. Further, in some implementations, administrators at the service providers may also be able to view the aggregated log data <b>124</b> of other services that are not their own.</p>
<p id="p-0047" num="0046">In some implementations, the user interface <b>126</b> may provide a remedial action control <b>616</b> that may be implemented by an administrator to address abuse of service, security breaches, software glitches and/or system failures according to some implementations herein. For instance, it may happen that a service consumer <b>604</b> is exceeding an authorized usage quota set for a particular service <b>602</b>. For example, when a service consumer <b>604</b> substantially exceeds an authorized usage quota, this can cause latency or service-interrupt problems at the service <b>602</b>, denial of service to other service consumers <b>604</b>, and the like. Accordingly, implementations herein may provide the remedial action control <b>616</b> with the capability to block access calls <b>606</b> of a particular service consumer <b>604</b> to one or more APIs <b>610</b> and/or service applications <b>608</b>. For example, each instance of the user interface <b>126</b> may include the remedial action control <b>616</b>, which may identify a particular API <b>610</b> and a particular service consumer <b>604</b> that may be blocked from accessing the particular API <b>610</b>. In some instances, the user interface <b>126</b> may display each of the APIs and each of the service consumers to enable an administrator to select a particular service consumer to block from accessing one or more selected APIs.</p>
<p id="p-0048" num="0047">As an example, suppose that service consumer <b>604</b>-<b>1</b> begins to make a large number of access calls <b>606</b> to the service <b>602</b>-<b>1</b>. For instance, the service consumer <b>604</b>-<b>1</b> may be the subject of a security breach that causes the service consumer <b>604</b>-<b>1</b> to make an abnormally high number of access calls <b>606</b>, or the service consumer <b>604</b>-<b>1</b> may have suffered a software glitch causing an abnormally high number of access calls <b>606</b>. The service provider <b>614</b>-<b>1</b> for the service <b>602</b>-<b>1</b> may become aware of this situation in any of several manners, such as through monitoring the user interface <b>126</b>, or by an alert <b>618</b> issued by the monitoring service <b>102</b> in view of the log information <b>120</b>-<b>1</b> received by the monitoring service <b>102</b> from the service <b>602</b>-<b>1</b>. In response, an administrator at the service provider <b>614</b>-<b>1</b> may activate the remedial action control <b>616</b> to block access of the particular service consumer <b>604</b>-<b>1</b> to the API <b>610</b>-<b>1</b> and/or the service application <b>608</b>-<b>1</b>. Additionally, because the blocking of a particular service consumer <b>604</b> may take place at a service or API level, when a service provider <b>614</b> provides multiple different services, the service provider may block access of the particular service consumer <b>604</b> to a particular service <b>608</b> or API <b>610</b>, while still permitting access of this particular service consumer <b>604</b> to other services <b>608</b> or APIs <b>610</b> provided by the service provider or other service providers.</p>
<p id="p-0049" num="0048">In other implementations, the remedial action control <b>616</b> may perform a different action than blocking access of one or more service consumers. For example, in some instances, the remedial action control <b>616</b> may instruct the service to pause for a predetermined period of time before responding to each request. Alternatively, the remedial action control <b>616</b> may instruct the service to error-out calls from one or more service consumers. For example, if a particular service consumer is noted to be 100 percent over the expected request rate allowed for that particular service consumer, the remedial action control <b>616</b> may be activated to error-out a certain percentage (e.g., 50 percent) of the calls received from that particular service consumer. As another example, activation of the remedial action control <b>616</b> may cause instructions to be sent to one or more of the registered service consumers requesting that the service consumers throttle their access calls to the service to a specified level or frequency. As yet another example, the remedial action control <b>616</b>, when activated, may cause a captcha or security question to be activated in conjunction with a particular service. This option might be implemented when excessive traffic cannot be attributed to any particular service consumers and the service provider desires to slow down overall traffic for a service. Accordingly, by implementing a captcha or security question, it is possible to reduce the amount of traffic to a service because human interaction is required to make access calls to the service. However, this solution may work in only a limited number of service scenarios, as some types of services are not conducive to requiring human interaction, such as where the typical number of calls from each service consumer may number in multiple transactions per second, and the like.</p>
<p id="p-0050" num="0049">Furthermore, an administrator at the monitoring service <b>102</b> may also be authorized to execute the remedial action control <b>616</b> at the monitoring service <b>102</b> when an alert is received for a particular service. For example, a command to block a particular service consumer may be transmitted from the user interface <b>126</b> at the monitoring service <b>102</b> to the agent <b>612</b>-<b>1</b> at the first service <b>602</b>-<b>1</b> for instructing the agent <b>612</b> to execute the blocking of the service consumer <b>604</b>-<b>1</b>. Accordingly, implementations herein provide the service provider <b>614</b> and/or the monitoring service <b>102</b> with the ability to block an individual service consumer <b>604</b> at the host level, at the service application level, or at the API level, without blocking access of other service consumers <b>604</b> to the API <b>610</b>-<b>1</b> or the service application <b>608</b>-<b>1</b>. Consequently, rather than resulting in a denial of service to all authorized service consumers <b>604</b>, an unexpected or abnormally high number of access calls from a particular service consumer <b>604</b> can be curtailed without loss of service to the other service consumers <b>604</b>. Further, in some implementations, the remedial action control <b>616</b> can be automated so as to act independently to block an offending service consumer <b>604</b> whenever the service consumer's peak access call rate exceeds the service consumer's established quota or a predetermined threshold, as established for example, by the service relationship models <b>128</b>.</p>
<p id="p-0051" num="0050">Furthermore, in some implementations, the monitoring service <b>102</b> may monitor the behavior of each service consumer <b>604</b> with respect to a particular service <b>602</b> to determine whether there are any anomalies, apparent improper use, unauthorized access calls, and so forth. For example, when the monitoring service <b>102</b> determines that there is an anomaly, the monitoring service <b>102</b> may send an alert to the corresponding service provider <b>614</b>. Additionally, in some implementations, rather than the monitoring service <b>102</b> monitoring and reviewing the logs <b>122</b>, the logs <b>122</b> and/or aggregated log data <b>124</b> for a particular service, or for all services, may be provided to an authorized third party to review the logs <b>122</b> and/or aggregated log data <b>124</b> for anomalies or other areas of concern.</p>
<p id="h-0009" num="0000">Example User Interface</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 7</figref> illustrates an example user interface portion <b>700</b> that an administrator at the monitoring service <b>102</b> or at a service provider <b>104</b> may use to monitor desired metrics related to one or more services or service consumers according to some implementations. The user interface portion <b>700</b> may correspond to part of the monitoring service user interface <b>126</b> discussed above with respect to <figref idref="DRAWINGS">FIGS. 1</figref>, <b>3</b> and <b>6</b>. For example, the user interface portion <b>700</b> may be configured to display a large variety of information related to particular APIs, particular service consumers, and accesses to APIs or services by service consumers.</p>
<p id="p-0053" num="0052">In the illustrated example, the user interface portion <b>700</b> is configured to display information on the granularity of individual APIs for a particular service A. In this example, the user interface portion <b>700</b> includes a list <b>702</b> of APIs for the service A including a first API <b>704</b>, and a second API <b>706</b>. For each API provided by the service A, the user interface portion <b>700</b> may display information such as call volume as a function of time <b>708</b>, response time as a function of time <b>710</b>, number of calls made over time by a first service consumer <b>712</b>, and so forth. Similarly, for the second API <b>706</b> similar information may be displayed such as call volume as a function of time <b>714</b>, response time as a function of time <b>716</b>, number calls made over time by the first service consumer <b>718</b>, and so forth. Further, the example information illustrated in <figref idref="DRAWINGS">FIG. 7</figref> provides just several non-limiting examples of the large variety of aggregated information <b>124</b> that may be provided by the user interface <b>126</b>. Numerous other types of information may be displayed, as described above.</p>
<p id="p-0054" num="0053">Additionally, in some implementations, the user interface <b>126</b> may include other functionality to enable administrators at the monitoring service <b>102</b> and or service providers <b>104</b> to obtain desired information. In some implementations, the user interface <b>700</b> may include one or more a query boxes <b>720</b> that a user may employ to submit a query to obtain desired information. For example, the user interface <b>126</b> may accept information such as the name of an API or service and a first and second timestamp, as inputs may return, for example, the top K service consumers that used the service over the time period between the first time stamp and the second timestamp, which service consumers contributed to an overall service latency change over the time period, which service consumers contributed most to the call volume over the time period, or the like.</p>
<p id="p-0055" num="0054">Additionally, the monitoring service <b>102</b> may provide history information regarding each service that subscribes to the monitoring, such as date at which the service was first added to the monitoring service, the date that a particular metric was added for a particular service, performance numbers for the particular service over the course of time since the service was added, and the like. Similarly, user interface <b>126</b> may provide views of particular service consumer metrics, such as a list of all services accessed by a particular service consumer, the total number of calls made by a particular service consumer to each service, the overall request rate for a particular service consumer to a single service, several services, or all services, and the like.</p>
<p id="p-0056" num="0055">Accordingly, the user interface <b>126</b> and the user interface portion <b>700</b> may provide service providers with the ability to obtain a large amount of information regarding how their services are being used, who is using their services, and the like. For example, the user interface <b>126</b> enables the service provider to determine whether the service consumers are using their services correctly and efficiently. In addition, as mentioned above, the user interface <b>126</b> may enable service providers and/or the monitoring service <b>102</b> to restrict access of particular service consumers who violate access policies, usage quotas, or the like, such as when the service consumers exceed their maximum allowed call rate, or the like. The restriction of access may be executed at a granularity of restricting access of a particular service consumer at the service level and or an individual API level.</p>
<p id="p-0057" num="0056">Furthermore, the monitoring service <b>102</b> may enable service providers to efficiently manage and monitor the service consumers that are authorized to access their services. For example, a service provider may view a history of who has accessed a particular service. Additionally, the monitoring service <b>102</b> may notify a service provider of abnormalities in service consumer call patterns, determine which service consumers have called which APIs, determine which service consumers no longer require access to particular APIs, allocate costs of operation back to particular service consumers, determine whether a particular service is meeting service level agreements for particular service consumers, and monitor other information that assists the service providers in the management and provision of their services.</p>
<p id="h-0010" num="0000">Example Processes</p>
<p id="p-0058" num="0057"><figref idref="DRAWINGS">FIGS. 8 and 9</figref> illustrate example processes for implementing the techniques described above for monitoring services and service consumers according to some implementations. These processes are illustrated as a collection of operations in logical flow graphs, which represent a sequence of operations, some or all of which can be implemented in hardware, software or a combination thereof. In the context of software, the blocks represent computer-executable instructions stored on one or more computer-readable media that, when executed by one or more processors, perform the recited operations. Generally, computer-executable instructions include routines, programs, objects, components, data structures and the like that perform particular functions or implement particular abstract data types. The order in which the operations are described is not intended to be construed as a limitation, and any number of the described blocks can be combined in any order and/or in parallel to implement the process. For discussion purposes, the processes are described with reference to the frameworks, architectures and environments described in the examples herein, although the processes may be implemented in a wide variety of other architectures, frameworks or environments.</p>
<p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. 8</figref> is a flow diagram illustrating an example process <b>800</b> for identifying groups of interrelated services and generating a service relationship model for the identified groups according to some implementations herein.</p>
<p id="p-0060" num="0059">At block <b>802</b>, the monitoring service <b>102</b> receives log information related to a plurality of services. For example, the agent <b>612</b> at each service provider may collect log information regarding each access by a service consumer to the one or more services provided by the service provider. The agent may forward this log information to the monitoring service <b>102</b> as the log information is accumulated, or as a batch on a periodic basis. The log information may provide numerous details relating to the calls to each service (e.g., each API), such as total calls to a service, latency of each service, which service consumer has called which service, the frequency with which a service is called by each service consumer, and the like.</p>
<p id="p-0061" num="0060">At block <b>804</b>, the aggregation module <b>302</b> may aggregate the log information related to the plurality of services. For example, the aggregation module may cross-reference the log information from each of the plurality of services for determining various performance metrics related to the plurality of services, such as total call volume, response time or latency, average latency, average amount of data returned, and so forth. The aggregation module may also aggregate and cross reference the log information with respect to the service consumers to determine calls made by each service consumer to each service, rate at which the calls were made, time between making a call and receiving a response, and the like.</p>
<p id="p-0062" num="0061">At block <b>806</b>, the modeling module <b>304</b> may group the plurality of services into one or more service groups based on observed interrelationships between various different services. For example, the modeling module <b>304</b> may apply statistical analysis to identify those services (e.g., particular APIs) that demonstrate an interrelationship with one another for one or more performance metrics of interest, such as total call volume, latency, or the like.</p>
<p id="p-0063" num="0062">At block <b>808</b>, the modeling module <b>304</b> may generate a service relationship model <b>128</b> corresponding to each identified service group <b>324</b>. For example, the modeling module <b>304</b> may generate a service relationship model for a corresponding service group, which predicts how each service in the service group will perform relative to the other services in the service group for the relative performance metric that interrelates the services in the service group. Various statistical modeling techniques may be used to generate the service relationship models <b>128</b>, examples of which may include regression models, Markov chain models, hidden Markov models, Bayesian models, or the like. The service relationship model <b>128</b> for each service group <b>324</b> establishes statistical probabilities regarding predicted relative behaviors of members of the service group with respect to one another for one or more relative performance metrics. Following establishment of one or more service groups <b>324</b> and one or more corresponding relationship models <b>128</b> for the plurality of services, the process <b>800</b> may return to block <b>802</b>. The process <b>800</b> may be repeated periodically to update the service groups <b>324</b> and/or the service relationship models <b>128</b> as existing services change and/or new services are added.</p>
<p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. 9</figref> is a flow diagram illustrating an example process <b>900</b> that may be performed by a service provider for monitoring services and service consumers according to some implementations.</p>
<p id="p-0065" num="0064">At block <b>902</b>, the monitoring service <b>102</b> receives log information related to a plurality of services. For example, the agent <b>612</b> at each service provider may collect log information regarding each access by a service consumer to the one or more services provided by the service provider. The agent may forward this log information to the monitoring service <b>102</b> as the log information is accumulated, or as a batch on a periodic basis. The log information may provide numerous details relating to the calls to each service (e.g., each API), such as total calls to a service, latency of each service, which service consumer has called which service, the frequency with which a service is called by each service consumer, and the like.</p>
<p id="p-0066" num="0065">At block <b>904</b>, the aggregation module <b>302</b> may aggregate the log information related to the plurality of services. For example, the aggregation module may cross-reference the log information from each of the plurality of services for determining various performance metrics related to the plurality of services, such as total call volume, response time or latency, average latency, average amount of data returned, and so forth. The aggregation module <b>302</b> may also aggregate and cross reference the log information with respect to the service consumers to determine calls made by each service consumer to each service, rate at which the calls were made, time between making a call and receiving a response, and the like.</p>
<p id="p-0067" num="0066">At block <b>906</b>, the analysis component <b>306</b> may apply one or more service relationship models <b>128</b> to the aggregated log data for each corresponding service group. For example, the aggregated log data may be aggregated according to the service groups <b>324</b> into a suitable data structure such as a graph, matrix or the like. The analysis component <b>306</b> may then examine the behavior of each service that is a member of a particular service group <b>324</b> to determine whether the behavior of each service in the particular service group conforms to the expected behavior, as predicted by the corresponding service relationship model <b>128</b> for that particular service group <b>324</b>.</p>
<p id="p-0068" num="0067">At block <b>908</b>, when the analysis component <b>306</b> detects that one or more of the services in a particular service group are not behaving in a manner that corresponds to the service relationship model <b>128</b> for the particular service group, the analysis component <b>306</b> may identify the actions of one or more of the services in the particular service group as an anomaly.</p>
<p id="p-0069" num="0068">At block <b>910</b>, in response to identifying an anomaly in a service group, the analysis component <b>306</b> may provide an alert to an administrator at the monitoring service, at the service provider, or the like. For example, in some implementations, the alert may be provided to the service provider, and an administrator at the service provider may take appropriate remedial action in response, such as blocking access of a particular client, slowing traffic to the service, or the like. However, in other implementations, the alert may be provided to an administrator at the monitoring service and the administrator at the monitoring service may take remedial action, such as blocking access of a particular client, slowing traffic to the service, or the like. Furthermore, in some implementations, the analysis component <b>306</b> may also determine which service consumer is a top contributor to the anomaly noted in the particular service, and provide this information with the alert.</p>
<p id="p-0070" num="0069">The example processes described herein are only examples of processes provided for discussion purposes. Numerous other variations will be apparent to those of skill in the art in light of the disclosure herein. Further, while the disclosure herein sets forth several examples of suitable frameworks, architectures and environments, implementations herein are not limited to the particular examples shown and discussed.</p>
<p id="h-0011" num="0000">Example Computing Devices</p>
<p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. 10</figref> illustrates select components of one or more monitoring service computing devices <b>1000</b> that may be used to implement the functionality of the monitoring service <b>102</b> according to some implementations. For example, the monitoring service <b>102</b> may be hosted on servers or on one or more other types of computing devices that may be embodied in any number of ways. For instance, in the case of a server, the monitoring service <b>102</b> may be implemented on a single server, a cluster of servers, a server farm or data center, and so forth, although other computer architectures (e.g., a mainframe architecture) may also be used. Further, while the figures illustrate the components of the monitoring service <b>102</b> as being present in a single location, it is to be appreciated that these components may be distributed across different computing devices and locations in any manner. Generally, the monitoring service <b>102</b> may be implemented by one or more computing devices, with the various functionality described above distributed in various ways across the different computing devices. The computing devices may be located together or separately, and organized, for example, as virtual servers, server banks and/or server farms. The described functionality may be provided by the servers of a single entity or enterprise, or may be provided by the servers and/or services of multiple entities or enterprises.</p>
<p id="p-0072" num="0071">In the illustrated example, the monitoring service computing device <b>1000</b> includes one or more processors <b>1002</b>, a memory <b>1004</b>, and one or more communication interfaces <b>1006</b>. The memory <b>1004</b> may include volatile and nonvolatile memory and/or removable and non-removable media implemented in any type of technology for storage of information, such as computer-readable instructions, data structures, program modules or other data. Such memory includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, RAID storage systems, storage arrays, or any other medium which can be used to store the desired information and which can be accessed by a computing device. Depending on the configuration of the computing device <b>1000</b>, the memory <b>1004</b> may be a type of computer readable storage media and may be a non-transitory storage media.</p>
<p id="p-0073" num="0072">The memory <b>1004</b> may be used to store any number of functional components that are executable by the processors <b>1002</b>. In many implementations, these functional components comprise instructions or programs that are executable by the processors <b>1002</b> and that, when executed, implement operational logic for performing the actions attributed above to the monitoring service <b>102</b>. Functional components stored in the memory <b>1004</b> may include the monitoring module <b>118</b> as described above, which may be executed on the processors <b>1002</b> for implementing the various functions and features of the monitoring service <b>102</b> described herein. In some implementations, the monitoring module <b>118</b> may include the data aggregation module <b>302</b>, the modeling module <b>304</b>, and the analysis module <b>306</b>, as described above. Other components included in the monitoring module <b>118</b> may include the user interface <b>126</b> and the remedial action control <b>616</b>, described above. Additional functional components stored in the memory <b>1004</b> may include an operating system <b>1008</b> for controlling and managing various functions of the monitoring service computing device <b>1000</b>. The memory <b>1004</b> may also store the aggregated blog data <b>124</b>, the service relationship models <b>128</b>, and the logs <b>122</b>. The computing device <b>1000</b> may also include many other logical, programmatic and physical components, of which those described above are merely examples that are related to the discussion herein. Furthermore, while multiple modules have been described for performing various functions for convenience of discussion in some implementations, in other implementations, a single module may perform all the functions described herein, or multiple different modules may perform some or all of the functions described herein.</p>
<p id="p-0074" num="0073">The communication interface(s) <b>1006</b> may include one or more interfaces and hardware components for enabling communication with various other devices, such as service provider computing devices, service consumer computing devices, and/or user devices over communication links <b>130</b>-<b>134</b>. For example, communication interface(s) <b>1006</b> may facilitate communication through one or more of the Internet, cable networks, cellular networks, wireless networks (e.g., Wi-Fi, cellular) and wired networks. Various different approaches to implementations described herein can be implemented in various environments. For example, the communication links <b>130</b>-<b>134</b> may include any appropriate network, including an intranet, the Internet, a cellular network, a LAN, WAN, VPN or any other such network or combination thereof. Components used for such a system can depend at least in part upon the type of network and/or environment selected. Protocols and components for communicating via such networks are well known and will not be discussed herein in detail.</p>
<p id="p-0075" num="0074">Monitoring service computing device <b>1000</b> may further be equipped with various input/output devices <b>1010</b>. Such devices may include a display, various user interface controls (e.g., buttons, joystick, keyboard, touch screen, etc.), audio speakers, connection ports and so forth.</p>
<p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. 11</figref> illustrates select components of one or more service provider computing devices <b>1100</b> that may be used to implement the functionality of the service providers described herein according to some implementations. Additionally, in some implementations, the service consumer computing devices may be structurally similar, while containing different functional components. Further, as mentioned previously, a service provider for a first service may itself be a service consumer of a second service. In the illustrated example, the service provider computing device <b>1100</b> includes one or more processors <b>1102</b>, a memory <b>1104</b> and one or more communication interfaces <b>1106</b>. The processors <b>1102</b> and the memory <b>1104</b> may be any of the types of processors and memory described above with respect to processors <b>1002</b> and memory <b>1004</b>, respectively.</p>
<p id="p-0077" num="0076">The memory <b>1104</b> may be used to store any number of functional components that are executable on the processors <b>1102</b>. In many implementations, these functional components comprise instructions or programs that are executable by the processors <b>1102</b> and that implement operational logic for performing the actions attributed above to the service providers. In addition, the memory <b>1104</b> may store various types of data that are referenced by the executable components.</p>
<p id="p-0078" num="0077">The memory <b>1104</b> may store one or more service applications <b>1108</b> and one or more APIs <b>1110</b>, which may be executed on the processors <b>1102</b> to provide one or more services, as discussed above. The memory <b>1104</b> may also store the agent <b>612</b>, including an instance of the user interface <b>126</b> and the remedial action control <b>616</b>, as described above. Memory <b>1104</b> may also store an operating system <b>1112</b> that may manage and coordinate the various functions of the service provider computing device <b>1100</b>.</p>
<p id="p-0079" num="0078">The communication interface(s) <b>1106</b> may include one or more interfaces and hardware components for enabling communication with various other devices, such as service provider computing devices, service consumer computing devices, and/or user devices over communication links <b>130</b>-<b>134</b>. For example, communication interface(s) <b>1106</b> may facilitate communication through one or more of the Internet, cable networks, cellular networks, wireless networks (e.g., Wi-Fi, cellular) and wired networks.</p>
<p id="p-0080" num="0079">The service provider computing device <b>1100</b> may further be equipped with various input/output devices <b>1114</b>. Such devices may include a display and various user interface controls (e.g., buttons, joystick, keyboard, touch screen, etc.), audio speakers, connection ports and so forth.</p>
<p id="p-0081" num="0080">Furthermore, this disclosure provides various example implementations, as described and as illustrated in the drawings. However, this disclosure is not limited to the implementations described and illustrated herein, but can extend to other implementations, as would be known or as would become known to those skilled in the art. Reference in the specification to &#x201c;one implementation,&#x201d; &#x201c;this implementation,&#x201d; &#x201c;these implementations&#x201d; or &#x201c;some implementations&#x201d; means that a particular feature, structure, or characteristic described is included in at least one implementation, and the appearances of these phrases in various places in the specification are not necessarily all referring to the same implementation.</p>
<heading id="h-0012" level="1">CONCLUSION</heading>
<p id="p-0082" num="0081">Although the subject matter has been described in language specific to structural features and/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described. Rather, the specific features and acts are disclosed as example forms of implementing the claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. One or more computer-readable media storing computer-executable instructions that, when executed, cause one or more processors to perform operations comprising:
<claim-text>receiving from a plurality of service providers, service consumer access information relating to service consumer calls made during a first period of time to a plurality of application programming interfaces (APIs) provided by the plurality of service providers;</claim-text>
<claim-text>grouping the APIs into one or more service groups based, at least in part, on determining that the APIs in each service group have at least one performance metric that is interrelated to the at least one performance metric of other APIs that are members of the service group;</claim-text>
<claim-text>generating a service relationship model for each service group based, at least in part, on observed behavior of the members of the service group with respect to one another for the at least one performance metric, the service relationship model predicting relative behaviors of members of the service group with respect to one another for the at least one performance metric;</claim-text>
<claim-text>receiving from a plurality of service providers, service consumer access information relating to service consumer calls made over a subsequent period of time to the APIs provided by the service providers; and</claim-text>
<claim-text>monitoring performance of the APIs based, at least in part, on the one or more service groups and the service relationship model for each service group.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The one or more computer-readable media as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the at least one performance metric comprises at least one of:
<claim-text>call volume of each API in the service group as a function of time; or</claim-text>
<claim-text>latency of each API in the service group as a function of time.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The one or more computer-readable media as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, the operations further comprising:
<claim-text>determining that a first value related to the at least one performance metric for a first API in a first service group has changed;</claim-text>
<claim-text>determining that a second value related to the at least one performance metric for a second API in the first service group has not changed in a manner predicted by the service relationship model for the first service group; and</claim-text>
<claim-text>generating an alert based, at least in part, on failure of the APIs in the first service group to behave in accordance with the service relationship model for the first service group.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The one or more computer-readable media as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, the operations further comprising:
<claim-text>providing an agent to each service provider of the plurality of service providers; and</claim-text>
<claim-text>receiving, from the agents, log information relating to the service consumer calls to one or more of the APIs provided by each service provider.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The one or more computer-readable media as recited in <claim-ref idref="CLM-00004">claim 4</claim-ref>, the operations further comprising aggregating the log information received from the agents at periodic intervals to determine for a particular interval a plurality of the performance metrics related to the service consumer calls to the plurality of APIs provided by the plurality of service providers.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A method comprising:
<claim-text>grouping, by a computing device, based at least in part on performance information received over a first period of time, services of a plurality of services into one or more service groups, wherein individual service groups comprise a subset of the services determined to be interrelated with respect to a corresponding performance metric; and</claim-text>
<claim-text>monitoring, over a second period of time, performance of the services within a particular one of the service groups with respect to other services in the particular service group for the corresponding performance metric.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method as recited in <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising:
<claim-text>generating a service relationship model corresponding to the particular service group, the service relationship model predicting relative behaviors of members of the particular service group with respect to one another for the performance metric; and</claim-text>
<claim-text>applying the service relationship model for the particular service group when monitoring the behavior of the services in the particular service group.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method as recited in <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the performance metric is a volume of calls received by individual services from service consumers.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method as recited in <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the performance metric is a response time for responding to calls received by individual services from service consumers.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method as recited in <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising:
<claim-text>receiving, from the plurality of services, log information relating to service consumer calls to the plurality of services; and</claim-text>
<claim-text>aggregating the log information at periodic intervals to generate aggregated log information for the plurality of services, the aggregated log information including the performance metric for the plurality of services, the performance metric related to the service consumer calls to the plurality of services.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method as recited in <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising determining from the aggregated log information which service consumer of a plurality of service consumers is a top contributor to the performance metric.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method as recited in <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising displaying at least a portion of the aggregated log information in a user interface.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method as recited in <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising generating an alert based, at least in part, on failure of the services in the particular service group to behave with respect to one another in accordance with a prediction of behavior for the services in the particular service group.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method as recited in <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising:
<claim-text>identifying a service consumer that is a cause, at least in part, of failure of the services in the particular service group to behave in accordance with the prediction; and</claim-text>
<claim-text>blocking access of the service consumer to at least one service in the particular service group.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method as recited in <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising:
<claim-text>determining that a particular service of the services in the particular service group is a cause, at least in part, of failure of the services in the particular service group to behave in accordance with the prediction; and</claim-text>
<claim-text>slowing access of one or more service consumers to the particular service.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. One or more computing devices comprising:
<claim-text>one or more processors;</claim-text>
<claim-text>one or more computer-readable media coupled to the one or more processors;</claim-text>
<claim-text>one or more modules maintained on the one or more computer-readable media and which, when executed by the one or more processors, cause the one or more processors to:
<claim-text>receive, over a first period of time, log information related to calls made by service consumers to a plurality of services;</claim-text>
<claim-text>identify, based at least in part on the log information, a plurality of service groups, wherein individual ones of the service groups include a respective subset of the services, wherein the services in a particular subset are determined to have a performance-related interrelationship with one another based, at least in part, on at least one performance metric; and</claim-text>
<claim-text>monitor, over a second period of time, relative performance of the services within the particular subset of the services corresponding to a respective one of the service groups.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The one or more computing devices as recited in <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the one or more modules are further executed to generate a service relationship model corresponding to the respective service group of the plurality of service groups, the service relationship model predicting behavior of the subset of the services in the corresponding respective service group with respect to one another for the at least one performance metric.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The one or more computing devices as recited in <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the one or more modules are further executed to periodically update at least one of the plurality of service groups or the corresponding service relationship model as services are changed or new services are added to the plurality of services.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The one or more computing devices as recited in <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the one or more modules are further executed to identify an anomaly in the calls to a particular service based, at least in part, on determining that behavior of the particular service is not in accordance with the service relationship model for the service group including the particular service.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The one or more computing devices as recited in <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the one or more modules are further executed to identify a particular service consumer as a top contributor to the anomaly.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The one or more computing devices as recited in <claim-ref idref="CLM-00020">claim 20</claim-ref>, further comprising a user interface maintained on the computer-readable media and executed on the one or more processors to provide a remedial action control for blocking access of the particular service consumer to the particular service. </claim-text>
</claim>
</claims>
</us-patent-grant>
