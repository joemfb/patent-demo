<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08627088-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08627088</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12703685</doc-number>
<date>20100210</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<us-term-of-grant>
<us-term-extension>489</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>K</subclass>
<main-group>1</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>713176</main-classification>
<further-classification>726  4</further-classification>
<further-classification>709203</further-classification>
</classification-national>
<invention-title id="d2e53">System and method for in- and out-of-band multi-factor server-to-user authentication</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5434918</doc-number>
<kind>A</kind>
<name>Kung et al.</name>
<date>19950700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7047408</doc-number>
<kind>B1</kind>
<name>Boyko et al.</name>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7073067</doc-number>
<kind>B2</kind>
<name>Mizrah</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7082532</doc-number>
<kind>B1</kind>
<name>Vick et al.</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>7188314</doc-number>
<kind>B2</kind>
<name>Mizrah</name>
<date>20070300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7266693</doc-number>
<kind>B1</kind>
<name>Potter et al.</name>
<date>20070900</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>7506161</doc-number>
<kind>B2</kind>
<name>Mizrah</name>
<date>20090300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>7533257</doc-number>
<kind>B2</kind>
<name>Lee et al.</name>
<date>20090500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>7552330</doc-number>
<kind>B2</kind>
<name>Kokumai</name>
<date>20090600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>7577987</doc-number>
<kind>B2</kind>
<name>Mizrah</name>
<date>20090800</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>7644433</doc-number>
<kind>B2</kind>
<name>Mizrah</name>
<date>20100100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>7853794</doc-number>
<kind>B2</kind>
<name>Jeffries et al.</name>
<date>20101200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>8006300</doc-number>
<kind>B2</kind>
<name>Mizrah</name>
<date>20110800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726 20</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2007/0037552</doc-number>
<kind>A1</kind>
<name>Lee et al.</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2008/0072045</doc-number>
<kind>A1</kind>
<name>Mizrah</name>
<date>20080300</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2008/0098464</doc-number>
<kind>A1</kind>
<name>Mizrah</name>
<date>20080400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2008/0179401</doc-number>
<kind>A1</kind>
<name>Hart et al.</name>
<date>20080700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>235449</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2008/0313726</doc-number>
<kind>A1</kind>
<name>Gardner</name>
<date>20081200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00019">
<othercit>Further Simplifications in Proactive RSA Signatures. Stanis<sub>&#x2014;</sub>law Jarecki and Nitesh Saxena UC Irvine, Irvine, CA pp. 1-19.</othercit>
</nplcit>
<category>cited by examiner</category>
</us-citation>
<us-citation>
<nplcit num="00020">
<othercit>&#x201c;Extended Validation Certificate&#x201d; from Wikipedia, found at http://en.wikipedia.org/wiki/Extended<sub>&#x2014;</sub>Validation<sub>&#x2014;</sub>Certificate, as of Feb. 10, 2010, 5 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00021">
<othercit>&#x201c;Pharming&#x201d; from Wikipedia, found at http://en.wikipedia.org/wiki/Pharming, as of Feb. 10, 2010, 3 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00022">
<othercit>&#x201c;Phishing&#x201d; from Wikipedia found at http://en.wikipedia.org/wiki/Phishing as of Feb. 10, 2010, 17 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00023">
<othercit>&#x201c;Public key certificate&#x201d; from Wikipedia, found at http://en.wikipedia.org/wiki/Ssl<sub>&#x2014;</sub>certificate, as of Feb. 10, 2010, 5 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00024">
<othercit>&#x201c;SiteKey&#x201d; from Wikipedia, as of Feb. 10, 2010, found on http://en.wikipedia.org/wiki/Site<sub>&#x2014;</sub>key 2 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00025">
<othercit>Anti-Phishing World Group (APWG) &#x201c;Phishing Activity Trend Report 1st Half 2009,&#x201d; found at http://www.antiphishing.org/reports/apwg<sub>&#x2014;</sub>report<sub>&#x2014;</sub>h1<sub>&#x2014;</sub>2009.pdf, as early as Jan. 2009, 11 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00026">
<othercit>Tec-Ed, Inc. Whitepaper, &#x201c;Extended Validation and VeriSign Brand,&#x201d; found at http://www.verisign.com/static/040655.pdf. As early as Aug. 28, 2008, 18 pages.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>42</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>713176</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>726  4</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709203</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>30</number-of-drawing-sheets>
<number-of-figures>49</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20110197070</doc-number>
<kind>A1</kind>
<date>20110811</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Mizrah</last-name>
<first-name>Len L.</first-name>
<address>
<city>San Carlos</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Mizrah</last-name>
<first-name>Len L.</first-name>
<address>
<city>San Carlos</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Haynes Beffel &#x26; Wolfeld LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>Authernative, Inc.</orgname>
<role>02</role>
<address>
<city>Redwood City</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Zand</last-name>
<first-name>Kambiz</first-name>
<department>2494</department>
</primary-examiner>
<assistant-examiner>
<last-name>Jamshidi</last-name>
<first-name>Ghodrat</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method to authenticate a server to a client is provided, including in-band and out-of-band techniques. At least a first shared secret identifies a server path, including a plurality of pre-defined locations on a frame of reference (e.g. a grid). An authentication session is initiated upon receiving a client identifier at the server-side resources. A current session instance of the grid is presented to the client, populated with characters. The process includes sharing between the client and the server a challenge identifying a random subset of the plurality of predefined locations in the server path, and a response including characters that match the characters in the locations on the server path identified by the challenge. As a result, client is capable of verifying that the server has access to the first shared secret. Then a protocol is executed to authenticate the client to the server.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="214.21mm" wi="178.39mm" file="US08627088-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="226.57mm" wi="177.46mm" file="US08627088-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="221.23mm" wi="159.00mm" file="US08627088-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="219.63mm" wi="147.15mm" file="US08627088-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="219.37mm" wi="177.80mm" file="US08627088-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="205.32mm" wi="173.23mm" file="US08627088-20140107-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="224.03mm" wi="120.90mm" file="US08627088-20140107-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="224.03mm" wi="178.56mm" file="US08627088-20140107-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="219.29mm" wi="176.36mm" file="US08627088-20140107-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="227.33mm" wi="177.29mm" file="US08627088-20140107-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="219.96mm" wi="175.43mm" file="US08627088-20140107-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="229.02mm" wi="169.93mm" file="US08627088-20140107-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="214.21mm" wi="173.40mm" file="US08627088-20140107-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="223.01mm" wi="170.77mm" file="US08627088-20140107-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="213.02mm" wi="170.26mm" file="US08627088-20140107-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="226.31mm" wi="174.67mm" file="US08627088-20140107-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="222.93mm" wi="171.53mm" file="US08627088-20140107-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="225.38mm" wi="171.28mm" file="US08627088-20140107-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="230.21mm" wi="172.72mm" file="US08627088-20140107-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="226.40mm" wi="171.37mm" file="US08627088-20140107-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="224.96mm" wi="173.74mm" file="US08627088-20140107-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="224.37mm" wi="171.20mm" file="US08627088-20140107-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00022" num="00022">
<img id="EMI-D00022" he="226.74mm" wi="173.82mm" file="US08627088-20140107-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00023" num="00023">
<img id="EMI-D00023" he="225.21mm" wi="172.64mm" file="US08627088-20140107-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00024" num="00024">
<img id="EMI-D00024" he="229.87mm" wi="174.33mm" file="US08627088-20140107-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00025" num="00025">
<img id="EMI-D00025" he="228.60mm" wi="171.62mm" file="US08627088-20140107-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00026" num="00026">
<img id="EMI-D00026" he="230.97mm" wi="174.33mm" file="US08627088-20140107-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00027" num="00027">
<img id="EMI-D00027" he="228.18mm" wi="168.99mm" file="US08627088-20140107-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00028" num="00028">
<img id="EMI-D00028" he="224.20mm" wi="171.11mm" file="US08627088-20140107-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00029" num="00029">
<img id="EMI-D00029" he="212.77mm" wi="170.01mm" file="US08627088-20140107-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00030" num="00030">
<img id="EMI-D00030" he="203.62mm" wi="175.26mm" file="US08627088-20140107-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0002" num="0001">1. Field of the Invention</p>
<p id="p-0003" num="0002">The invention relates generally to client (or a user at a client platform)/server multi-factor mutual authentication systems and methods for computer and network security access control systems employing Random Partial Shared Secret Recognition (RPSSR) algorithms with a focus on in- and out-of-band multi-factor authentication of a server to the user; and more particularly multi-factor authentication of a server to the user based on virtual reference grids of data with low entropy leakage of user personalized, embedded, and hidden in the grid server credentials (entropy leakage per an authentication session), and high resilience against online identity theft attacks like guessing, phishing (using social engineering techniques) and/or pharming attacks.</p>
<p id="p-0004" num="0003">2. Description of the Related Art</p>
<p id="p-0005" num="0004">Server Authentication to a User (at a Client Platform)</p>
<p id="p-0006" num="0005">For both, business-to-consumer (B2C) and business-to-business (B2B) transaction networks, online e- and m-commerce require a certain level of trust between parties to perform a variety of business transactions with typical parties to a transaction being an online consumer or a business representative (a user at a client platform) and a server providing services, applications, and goods. There are user authentication systems integrated with and trusted by servers. So that a user proves one's identity by submitting a user ID (or a username, or an email address, or any other pre-arranged digital identifier) and authentication credential(s) (typically, it is either a PIN, or a password, or a hardware token pass code (PIN+a currently indicated token number in a case of a two-factor authentication). There is a variety of authentication factors, and authentication credentials associated with them, that are used alone or in multi-factor combinations to enhance user authentication security.</p>
<p id="p-0007" num="0006">The common security feature of these authentication systems is a fundamental reliance on the user/server shared secrets whether it be &#x201c;what user knows&#x201d; PINs or passwords, or &#x201c;what user is&#x201d; biometric traits like fingerprints or sound bites, or &#x201c;what user has&#x201d; like hardware tokens or software tokens on mobile devices. Illegal activities by hackers and criminal organizations utilizing hacker talents are centered in many cases on attacks aiming at stealing user authentication credentials, which is the most efficient way to preempt user identities and deplete user accounts. Among best known are social engineering attacks like &#x201c;shoulder surfing&#x201d;, allegedly administrator's calls, Trojan horse attacks, guessing attacks, Man-in-the-Middle (MITM) and Man-in-the-Browser (MITB) attacks, brute force attacks, keyboard memory sniffing, network sniffing, video recording of credential entry sessions, authentication system user store breaches, etc.</p>
<p id="p-0008" num="0007">Phishing and Pharming Attacks</p>
<p id="p-0009" num="0008">During the last several years, a couple of new social engineering attacks called phishing (http://en.wikipedia.org/wiki/Phishing) and pharming (http://en.wikipedia.org/wiki/Pharming) attacks were employed by intruders to the significant detriment of e- and m-commerce security. Without providing here a detailed technique used in initiating these attacks, it is sufficient to note that during such an attack a user is brought to a false server which looks very similar to the real one, and the user is lured to enter one's user credentials into this false graphical user interface. The scale of phishing attacks can be seen from the following citation of quite eloquent data presented by the Anti-Phishing World Group (APWG) (http://www.antiphishing.org/) in PHISHING ACTIVITY TREND REPORT 1<sup>st </sup>HALF 2009 (see the full report in http://www.antiphishing.org/reports/apwg_report_h1<sub>&#x2014;</sub>2009.pdf):</p>
<p id="h-0002" num="0000">&#x201c;1st Half '09 Phishing Activity Trends Summary</p>
<p id="p-0010" num="0000">
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0009">Unique phishing reports submitted to APWG recorded a high of 37,165 in May, around 7 percent higher than last year's high of 34,758 in October. [p. 4]</li>
        <li id="ul0002-0002" num="0010">The number of unique phishing websites detected in June rose to 49,084, the highest recorded since April, 2007's record of 55,643. [p. 4]</li>
        <li id="ul0002-0003" num="0011">Brand&#x25a1;domain pairs increased to a record 21,085 in June, up 92 percent from the beginning of 2009. [p. 5]</li>
        <li id="ul0002-0004" num="0012">The number of hijacked brands ascended to a high of 310 at the end of Q1. [p. 6]</li>
        <li id="ul0002-0005" num="0013">Payment Services became phishing's most targeted sector, displacing Financial Services in Q1 &#x26; Q2. [p. 7]</li>
        <li id="ul0002-0006" num="0014">Banking Trojan/password&#x25a1;stealing crime ware infections detected increased during more than 186 percent between Q4, 2008 and Q2, 2009. [p. 10]</li>
        <li id="ul0002-0007" num="0015">The total number of infected computers rose more than 66 percent between Q4 2008 and the end of the half, 2009 to 11,937,944, representing more than 54 percent of the total sample of scanned computers. [p. 10]</li>
        <li id="ul0002-0008" num="0016">Sweden moved ahead of the United States as the nation hosting the most phish web sites at the half's end. [p. 7]</li>
        <li id="ul0002-0009" num="0017">China hosted the most websites harboring Trojans and Downloaders from March through June. [p. 9]&#x201d;</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0011" num="0018">Site Key, SSL Certificate, and Extended Validation (EV) SSL Certificate Technologies</p>
<p id="p-0012" num="0019">Some of these attacks described above became so ubiquitous and efficient that a significant number of potential e- and m-commerce users decline to do business online or they would keep it highly limited in scope, unless stronger protection services/technologies/laws are becoming available to protect security of users' authentication credentials. There are conventional technologies like server SSL certificates (http://en.wikipedia.org/wiki/Ssl_certificate) and server extended validation (EV) SSL certificates (http://en.wikipedia.org/wiki/Extended_Validation_Certificate), or server's image/text mark (like site key technology http://en.wikipedia.org/wiki/Site_key)&#x2014;all these technologies allowing with a varying level of assurance to authenticate a server to the user, before the user enters either one's authentication credentials, or some personally identifiable information (PII), or any other data potentially jeopardizing privacy, security, confidentiality, and business interests of transacting parties.</p>
<p id="p-0013" num="0020">Hence, the security tiers to thwart phishing or pharming attacks are based on a mutual authentication of first a server to the user and then second, the user to the server. In a case of server certificates utilizing Public Key Infrastructure and the existence of Certification Authorities, users see either a lock icon on the browser frame or the same icon inside an address bar along with the green colored background of the address bar. The site key is the only user/server shared knowledge-based secret technology which is requiring hackers' personalized attacks, instead of hackers using a standard scheme, to harvest numerous user credentials with minimal efforts. Nevertheless, the security level of site keys against personalized attacks does not seem strong enough to protect user credentials.</p>
<p id="p-0014" num="0021">EV SSL certificate technology looks stronger than the site key one. However, it is a relatively new technology and its resilience against phishing and pharming attacks remains to be tested yet. As a commodity mass protection layer, EV SSL certificate technology looks quite simple to use. However, for a certain amount of proficient users and ones that are highly concerned with their security, this technology is not user personalized, it is not user/server interactive, engaging, and providing a personalized sense of security. With regard to Extended Validation's defense against phishing, according to Tec-Ed Inc. &#x201c;Extended Validation and VeriSign Brand&#x201d; http://www.verisign.com/static/040655.pdf. Retrieved 2008-08-28 Tec-Ed research reveals that when a site adopts green address bars, then 23% of specially trained users visiting what appears to be the same site but without the green address bar will complete the transaction. It is difficult to anticipate behavior of non-trained users, though most likely the number of users ignoring the absence of the green bar will grow.</p>
<p id="p-0015" num="0022">Hardware Token Based Server Authentication to the User</p>
<p id="p-0016" num="0023">VASCO Data Security International, Inc. (http://www.vasco.com) offered several hardware token based solutions to authenticate a server to the user. In the first solution (dated 2004), the user was sending to a server's Web site the user name along with several first digits (say four digits) displayed by the user's token that time. Then, this server was expected to send back to the user the remaining digits currently displayed by the token (let's say the last four digits). Otherwise, if digits were not sent, or the sent digits did not match with the last four digits displayed at the token that time, the server was not authenticated.</p>
<p id="p-0017" num="0024">Lately (in 2009), the company revealed another hardware token based solution. The user sends to a server the user name and obtains back from the server a certain one-time code (for example, 391483). The user is to enter this code into the user's token, and if the token positively authenticates the server, then the token generates another one-time code (say One-Time PIN; for example, 204817) which the user is to enter into a browser or another GUI, and sent to the server to authenticate the user. If the user is positively authenticated by the server, it completes the mutual authentication process and the user is provided the access requested.</p>
<p id="p-0018" num="0025">In the first described solution, the user has to check personally if the last digits match, while also performing simple instructions of entering the digits into the browser or another GUI. In the second solution, the user is performing simple instructions only, without a need to make any decisions. In both cases, the disadvantage of such solutions is a necessity to carry a hardware device with the user all the time. Usability level of these solutions and their total cost of ownership are to be other points to consider as well. Another disadvantage yet, there is no protection if the hardware token gets into &#x201c;wrong hands.&#x201d;</p>
<p id="p-0019" num="0026">Back-End Client (User at a Client Platform)/Server Mutual Authentication Protocols</p>
<p id="p-0020" num="0027">It is important to outline to what extent user (at a client platform)/server mutual authentication protocols, that are available at the back end, complement a server to the user authentication on the front-end. User/server back end mutual authentication protocols (for instance, Kenneth C. Kung et al., U.S. Pat. No. 5,434,918, Victor Vladimir Boyko et al, U.S. Pat. No. 7,047,408, Len L. Mizrah, U.S. Pat. No. 7,506,161) are typically a series of client/server encrypted messages enabled by knowledge-based credentials that are used in the protocol on both ends of a user/server communication pair but never transmitted in any form over non-trusted communication media. Normally, when the user and the server are who they claim they are, the failure of the protocol's positive mutual authentication with back end protocols would mean that somehow messages have been tampered with during transmission over the communication lines. That is, the protocols would report intrusion detection based on the server side logic (the client side Graphical User Interface (GUI) logic, unless there is a permanent software client installed at the client platform and communicating with the server, is defined by the server side logic as well).</p>
<p id="p-0021" num="0028">However, in a case of phishing or pharming attacks, the user deals with a fraudulent server, so that a server side logic cannot be trusted in the first place. Therefore, back end protocols are not much help in such cases, and what is needed is that the control be given directly to the user to decide through user's cognitive recognition of server's personalized credentials as to whether the user communicates to the truly authenticated server. Certainly, the key requirements for such user control would be a very strong protection of server credentials against various attacks, and first of all a very low credential entropy leakage (per server-to-user authentication session) and a high combinatorial capacity of server credential(s) against guessing attacks.</p>
<heading id="h-0003" level="1">PRIOR ART</heading>
<p id="p-0022" num="0029">Representative prior art solutions addressing server authentication to a user at a client platform and more broadly their mutual authentication technologies are described in Kenneth C. Kung et al., U.S. Pat. No. 5,434,918, Victor Vladimir Boyko et al, U.S. Pat. No. 7,047,408, Cornelius V. Vick et al., U.S. Pat. No. 7,082,532, Eric R. Potter at al., U.S. Pat. No. 7,266,693, Sok Joon Lee et al., U.S. Pat. No. 7,533,257, Hiroshi Kokumai, U.S. Pat. No. 7,552,330, Timothy Lee et al., Pub. No. U.S. 2007/0037552, Richard Mervyn Gardner, Pub. No. U.S. 2008/0313726.</p>
<p id="p-0023" num="0030">Also, earlier work of the present inventor in this field is described in U.S. Pat. No. 7,073,067 entitled AUTHENTICATION SYSTEM AND METHOD BASED UPON RANDOM PARTIAL DIGITIZED PATH RECOGNITION, U.S. Pat. No. 7,644,433 entitled AUTHENTICATION SYSTEM AND METHOD BASED UPON RANDOM PARTIAL PATTERN RECOGNITION, U.S. Pat. No. 7,188,314 entitled SYSTEM AND METHOD FOR USER AUTHENTICATION INTERFACE, U.S. Pat. No. 7,577,987 entitled OPERATION MODES FOR USER AUTHENTICATION SYSTEM BASED ON RANDOM PARTIAL PATTERN RECOGNITION, U.S. Pat. No. 7,506,161 entitled COMMUNICATION SESSION ENCRYPTION AND AUTHENTICATION SYSTEM, U.S. Pat. No. 8,006,300 entitled TWO-CHANNEL CHALLENGE-RESPONSE AUTHENTICATION METHOD IN RANDOM PARTIAL SHARED SECRET RECOGNITION SYSTEM, U.S. Pat. No. 7,849,321 entitled AUTHENTICATION METHOD OF RANDOM PARTIAL DIGITIZED PATH RECOGNITION WITH A CHALLENGE BUILT INTO THE PATH, all invented by Mizrah.</p>
<p id="p-0024" num="0031">Aspects of this invention are particularly concerned with security of B2B and B2C transaction networks users (at a variety of client computing platforms) with respect to phishing and pharming attacks. Prior art server-to-user authentication algorithms and protocols are quite limited in the scope, they are either not sufficiently secure or usable, or fail to satisfy personalized security requirements of a vast plurality of users. There is a substantial need for competing, improved and more efficient server-to-user authentication algorithms and protocols, addressing more versatile security requirements, usability, less complex infrastructures required, and less costly for practical implementation. These improved authentication algorithms and protocols should also include secure mutual authentication capabilities built into them as well.</p>
<heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0025" num="0032">An authentication paradigm is provided for a client-server system to authenticate a server to a client, which can be used in advance of a protocol to authenticate the client to the server. The method provides protection against phishing and pharming attacks, while being easy to use, low-cost and adaptable to versatile security requirements and simple infrastructures.</p>
<p id="p-0026" num="0033">An interactive, computer implemented method for execution by server-side computer resources in a client-server system is described to authenticate a server to a client according to the authentication paradigm described herein. The method includes processes storing data identifying a graphical representation of a frame of reference (e.g. a grid) adapted for rendering on the display, wherein the frame of reference includes a number of pre-defined locations having coordinates on the frame of reference. Also, a data set is stored associated with the client in a memory accessible using the server-side computer resources. The data set includes at least a first shared secret identified a server path, where the server path includes a plurality of pre-defined locations on the frame of reference. An authentication session is initiated upon receiving a client identifier at the server-side resources. During the session, a current session instance of the graphical representation of the frame of reference for the current session is presented via data communications to the client, where the current session instance shows the frame of reference populated with characters in the number of predefined locations according to a different pattern than used in other sessions with the client. The characters used to populate the locations on the frame of reference preferably represent numbers. Utilizing a variety of techniques, such as the examples described herein, the process includes sharing between the client and the server a challenge for use in the current session identifying a random subset of the plurality of predefined locations in the server path. Also, the process includes sharing between the client and the server a response including characters that match the characters positioned in a random subset of the plurality of predefined locations in the server path. As a result of presentation of the current session instance, and the sharing of the challenge and the response, the client is capable of verifying that the server has access to the first shared secret identifying the server path. Thus, the client can be assured that the server is authentic.</p>
<p id="p-0027" num="0034">In various embodiments described herein, the process may include storing a second shared secret associated with the client in memory accessible using server-side computer resources, where the second shared secret identifies a response path including a plurality of predefined locations on the frame of reference used for sharing the response between the server and the client, and in which characters in the response path in the current session instance comprise the response. The server is capable of creating a current session instance to meet this rule when the challenge is known to the server in advance of the composition of the current session instance of the frame of reference.</p>
<p id="p-0028" num="0035">Also, the process may include storing a third shared secret associated with the client, or the third shared secret identifies a challenge path including a plurality of predefined locations on the frame of reference used for sharing the challenge between the server and the client, and in which characters in the challenge path in the current session instance comprise the challenge.</p>
<p id="p-0029" num="0036">Embodiments described herein also provide for storing an additional shared secret associated with the client, where the additional shared secret identifies a watermark path including a plurality of predefined locations on the frame of reference, and in which the watermark contents include indicators such as colors are characters, are positioned in the watermark path in the current session instance of the frame of reference.</p>
<p id="p-0030" num="0037">According to additional aspects of the authentication process described herein, an out-of-band technology is applied. The out-of-band technology can be applied where the client has access to first and second data processing machines. In this case, the process can include receiving the data communication to initiate the session via data communication on a first channel from the first data processing machine, while the sharing of at least one of the challenge and the response is carried out outside of the first channel using the second data processing machine. For another example, in an embodiment utilizing a watermark path, data matching the watermark contents can be shared with the client outside of the first channel using a second processing machine. In yet another embodiment, the process includes presenting the current session instance of the graphical representation of the frame of reference to the client outside the first channel using the second data processing machine, such as by causing rendering of the current session instance on a display screen of a mobile phone.</p>
<p id="p-0031" num="0038">Further advantageous combinations and embodiments of the processes described above are set forth in the application below. Also, persons of skill in the art will recognize additional possible variations.</p>
<p id="p-0032" num="0039">As described herein, after executing the process to allow the client to authenticate the server, including sharing the response and the challenge with the client, the server-side computer resources initiate an authentication protocol for authentication of the client to the server. The client can refuse to enter authentication credentials for the authentication to the server if the client is not satisfied with the preceding authentication of the server. Upon authentication the client to the server, the server can enable access by the client to a protected resource.</p>
<p id="p-0033" num="0040">In addition, an authentication system comprising data processing resources, including a processor, memory and a communication interface such as typically utilized for executing server programs, are described, which are adapted for executing the authentication processes described above.</p>
<p id="p-0034" num="0041">Likewise, an article of manufacture is described which includes a machine readable data storage medium that stores a computer program executable to perform a protocol enabling authentication of a server by a client as described above.</p>
<p id="p-0035" num="0042">Other aspects and advantages of the invention can be seen with reference to the drawings, the detailed description and the claims.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0036" num="0043"><figref idref="DRAWINGS">FIG. 1</figref> illustrates a basic communication set up for one of the preferred embodiments of a mutual authentication processes according to the present invention.</p>
<p id="p-0037" num="0044"><figref idref="DRAWINGS">FIG. 2A</figref> and <figref idref="DRAWINGS">FIG. 2B</figref> present a flowchart for one of the preferred embodiments of the basic Random Partial Digitized Path Recognition (RPDPR) algorithm which is modified with a user generated challenge sent to the Server, and the Server's authentication response delivered to the user during the mutual authentication session according to the present invention.</p>
<p id="p-0038" num="0045"><figref idref="DRAWINGS">FIG. 3A</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting a variety of operation modes in client (a user at a client platform)/server mutual authentication system, and particularly, the operation mode menu entry selection process, and the first step of the login (or a credential reset) process at the User Name entry state and a Server Challenge entry state used in one example of an authentication program according to one of the preferred embodiments of the present invention.</p>
<p id="p-0039" num="0046"><figref idref="DRAWINGS">FIG. 3B</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting a variety of a second communication channel options in client (a user at a client platform)/server mutual authentication system, and particularly, the &#x2018;Send To 2<sup>nd </sup>Channel:&#x201d; menu entry selection process, and the first step of the login (or a credential reset) process at the User Name entry state and a Server Challenge entry state used in one example of an authentication program according to one of the preferred embodiments of the present invention.</p>
<p id="p-0040" num="0047"><figref idref="DRAWINGS">FIG. 3C</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting a particular out-of-band server to the user (at a client platform) authentication option in a user/server mutual authentication system, and particularly, the login operation mode entry selected along with a server generated grid and the server generated authentication challenge to be delivered to the software client on a mobile device in one example of an authentication program according to one of the preferred embodiments of the present invention.</p>
<p id="p-0041" num="0048"><figref idref="DRAWINGS">FIG. 3D</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting a particular in-band server to client authentication option in client (a user at a client platform)/server mutual authentication system, and particularly, the login operation mode entry selected along with Server Path and Server Response being delivered to the graphical user interface in a desktop or laptop's browser or on a screen in one example of an authentication program according to one of the preferred embodiments of the present invention. Server Challenge in this case is always the first four (&#x201c;four&#x201d; can be reset by a system administrator) fields for enumerated positions along the Server Path.</p>
<p id="p-0042" num="0049"><figref idref="DRAWINGS">FIG. 3E</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting a particular in-band first step of server to client authentication option in client (a user at a client platform)/server mutual authentication system, and particularly, the &#x2018;login session&#x2019; operation mode entry selected and User Name is entered, whereas Server Response is manually generated by the User (or the User edits an automatically generated Server Response) in one of the preferred embodiments of the present invention. All the entries are sent to the server.</p>
<p id="p-0043" num="0050"><figref idref="DRAWINGS">FIG. 3F</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting a particular first step of out-of-band server to client authentication option in client (a user at a client platform)/server mutual authentication system, and particularly, the login operation mode entry selected along with either Server Challenge, or Server Response, or Grid Watermark contents to be delivered with a software token preset on a smartphone in one example of an authentication program according to one of the preferred embodiments of the present invention.</p>
<p id="p-0044" num="0051"><figref idref="DRAWINGS">FIG. 3G</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting a particular first step of out-of-band server to client authentication option in client (a user at a client platform)/server mutual authentication system, and particularly, the login operation mode entry selected along with either Server Challenge, or Server Response, or Grid Watermark contents to be delivered with a hardware token in one example of an authentication program according to one of the preferred embodiments of the present invention.</p>
<p id="p-0045" num="0052"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a frame of reference rendered in the form of a virtual reference grid of data fields in one of the preferred embodiments of this invention.</p>
<p id="p-0046" num="0053"><figref idref="DRAWINGS">FIGS. 5A-1</figref> to <b>5</b>E-<b>1</b> provide various examples depicted by arrows with continuous paths having ten field positions along the path for online server/user (at a client platform) shared secret set up in support of a server to the user authentication process during the login sessions according to one of the preferred embodiments of the present invention.</p>
<p id="p-0047" num="0054"><figref idref="DRAWINGS">FIGS. 5A-2</figref> to <b>5</b>E-<b>2</b> provide a secret graphical ordered path selection grid and various examples depicted by digits and shadowed grid fields with continuous paths having ten field positions for online server/user (at a client platform) shared secret set up in support of a server to the user authentication process during the login sessions according to one of the preferred embodiments of the present invention.</p>
<p id="p-0048" num="0055"><figref idref="DRAWINGS">FIGS. 6A-1</figref> to <b>6</b>F-<b>1</b> provide various examples depicted by arrows with graphical non-continuous paths having ten field positions for online server/user (at a client platform) shared secret set up in support of a server to the user authentication process during the login sessions according to one of the preferred embodiments of the present invention.</p>
<p id="p-0049" num="0056"><figref idref="DRAWINGS">FIGS. 6A-2</figref> to <b>6</b>F-<b>2</b> provide various examples of graphical non-continuous paths having ten field positions depicted by digits and shadowed grid fields for online server/user (at a client platform) shared secret set up in support of a server to the user authentication process during the login sessions according to one of the preferred embodiments of the present invention.</p>
<p id="p-0050" num="0057"><figref idref="DRAWINGS">FIG. 7A</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting the second step of server to the user in-band authentication with a challenge to a server previously manually generated by the user (or generated automatically with an option of being either edited, or approved by the user as it was shown at the first login or reset process step in <figref idref="DRAWINGS">FIGS. 3A and 3B</figref>). The hidden in the grid shared secret credentials to authenticate the server are Server Path and Server Response Path. Upon successful server authentication by the user, the user's password is entered to authenticate the user to the server and to complete user/server mutual authentication in one of the preferred embodiments of this invention.</p>
<p id="p-0051" num="0058"><figref idref="DRAWINGS">FIG. 7B</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting the second step of server to the user in-band authentication with a challenge to a server previously manually generated by the user (or generated automatically with an option of being either edited, or approved by the user as it was shown at the first login or reset process step in <figref idref="DRAWINGS">FIGS. 3A and 3B</figref>). The hidden in the grid shared secret credentials to authenticate the server are Server Path and Server Response Path and Grid Watermark. Upon successful server authentication by the user, the user's password is entered to authenticate the user to the server and to complete user/server mutual authentication in one of the preferred embodiments of this invention.</p>
<p id="p-0052" num="0059"><figref idref="DRAWINGS">FIG. 7C</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting the second step of server to the user in-band authentication with a challenge to a server previously manually generated by the user (or generated automatically with an option of being either edited, or approved by the user as it was shown at the first login or reset process step in <figref idref="DRAWINGS">FIGS. 3A and 3B</figref>). The hidden in the grid shared secret credentials to authenticate the server are Server Path and Server Response Path, each having a one path discontinuity on the grid. Upon successful server authentication by the user, the user's password is entered to authenticate the user to the server and to complete user/server mutual authentication in one of the preferred embodiments of this invention.</p>
<p id="p-0053" num="0060"><figref idref="DRAWINGS">FIG. 7D</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting the second step of server to the user in-band authentication with a challenge to a server previously manually generated by the user (or generated automatically with an option of being either edited, or approved by the user as it was shown at the first login or reset process step in <figref idref="DRAWINGS">FIGS. 3A and 3B</figref>). The hidden in the grid shared secret credentials to authenticate the server are Server Path and Server Response Path. Upon successful server authentication by the user, the server's authentication response is used as a server authentication challenge to the hidden in the grid shared secret User Path, then the User Response is entered to authenticate the user to the server and to complete user/server mutual authentication in one of the preferred embodiments of this invention.</p>
<p id="p-0054" num="0061"><figref idref="DRAWINGS">FIG. 7E</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting the second step of server to the user in-band authentication with a challenge to a server previously manually generated by the user (or generated automatically with an option of being either edited, or approved by the user as it was shown at the first login or reset process step in <figref idref="DRAWINGS">FIGS. 3A and 3B</figref>). The hidden in the grid shared secret credentials to authenticate the server are Server Path and Server Response Path. Upon successful server authentication by the user, the server generated User Challenge and the hidden in the grid shared secret User Path are used to enter the User Response to authenticate the user to the server and to complete user/server mutual authentication in one of the preferred embodiments of this invention.</p>
<p id="p-0055" num="0062"><figref idref="DRAWINGS">FIG. 7F</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting the second step of server to the user in-band authentication with a Server Challenge being the first four consecutive enumerated field positions on the Server Path. Hence, the first step (see <figref idref="DRAWINGS">FIG. 3D</figref>) is just the User Name which is sent to a server alone without accompanying it with a Server Challenge. The hidden in the grid shared secret credentials to authenticate the server are Server Path and Server Response Path, each having several discontinuities along the paths on the grid. Upon successful server authentication by the user, the user's password is entered to authenticate the user to the server and to complete user/server mutual authentication in one of the preferred embodiments of this invention.</p>
<p id="p-0056" num="0063"><figref idref="DRAWINGS">FIG. 7G</figref> illustrates a possible continuation of the processes depicted in <figref idref="DRAWINGS">FIG. 7F</figref> with the only difference related to the user authentication to the server, which this time is being a two-factor authentication with a shared secret User Path hidden in the grid and the server generated User Challenge used by the user after entering the User Password into graphical user interface. That completes the user/server mutual authentication process in one of the preferred embodiments of this invention.</p>
<p id="p-0057" num="0064"><figref idref="DRAWINGS">FIG. 7H</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting the second step of a server to the user in-band authentication. The first step (see <figref idref="DRAWINGS">FIG. 3D</figref>) is just the User Name is sent to a server alone without accompanying it with a Server Challenge. The hidden in the grid shared secret credentials to authenticate the server are Server Path, Server Challenge Path, and Server Response Path. Upon successful server authentication by the user, the user's password is entered to authenticate the user to the server and to complete user/server mutual authentication in one of the preferred embodiments of this invention.</p>
<p id="p-0058" num="0065"><figref idref="DRAWINGS">FIG. 7I</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting the second step of a server to the user in-band authentication. The first step (see <figref idref="DRAWINGS">FIG. 3E</figref>) is just the User Name and Server Response value generated or edited by the user is sent to a server. The hidden in the grid shared secret credentials to authenticate the server are Server Path and Server Challenge Path, and Server Response value defined by the user in the first step in <figref idref="DRAWINGS">FIG. 3E</figref> is explicitly displayed in the GUI's field. Upon successful server authentication by the user, the user's password is entered to authenticate the user to the server and to complete user/server mutual authentication in one of the preferred embodiments of this invention.</p>
<p id="p-0059" num="0066"><figref idref="DRAWINGS">FIG. 8A</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting the second step of a server to the user out-of-band authentication with a software token in a smartphone as a second channel. The first step (see <figref idref="DRAWINGS">FIG. 3E</figref>) is just the User Name which is sent to a server alone without accompanying it with a Server Challenge. The hidden in the grid shared secret credentials to authenticate the server are Server Path, Server Response Path, and Grid Watermark Path, whereas the Server Challenge is digital content in the first four fields having enumerated positions along the Server Path. Session dynamic content in the fields along the Grid Watermark Path is to be matched to the software token content displayed on the smartphone. Upon successful server authentication by the user, his/her password is entered to authenticate the user to the server and to complete user/server mutual authentication in one of the preferred embodiments of this invention.</p>
<p id="p-0060" num="0067"><figref idref="DRAWINGS">FIG. 8B</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting the second step of a server to the user out-of-band authentication with a software token in a smartphone as a second channel. The first step (see <figref idref="DRAWINGS">FIG. 3F</figref>) is just the User Name which is sent to a server alone without accompanying it with a Server Challenge. The hidden in the grid shared secret credentials to authenticate the server are Server Path, Server Response Path, and Grid Watermark Path, whereas the Server Challenge is fields' digital content in the first four fields having enumerated positions along the Server Path. Session dynamic content in the fields along the Grid Watermark Path (which is the same in this case as the Server Path) is to be matched to the software token content displayed on the smartphone. Upon successful server authentication by the user, his/her password is entered to authenticate the user to the server and to complete user/server mutual authentication in <figref idref="DRAWINGS">FIG. 7H</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting the second step of server to the user in-band authentication. The first step (see <figref idref="DRAWINGS">FIG. 3D</figref>) is just the User Name is sent to a server alone without accompanying it with a Server Challenge. The hidden in the grid shared secret credentials to authenticate the server are Server Path, Server Challenge Path, and Server Response Path. Upon successful server authentication by the user, the user's password is entered to authenticate the user to the server and to complete user/server mutual authentication in one of the preferred embodiments of this invention.</p>
<p id="p-0061" num="0068"><figref idref="DRAWINGS">FIG. 8C</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting the second step of a server to the user out-of-band authentication with a software token in a smartphone as a second channel. The first step (see <figref idref="DRAWINGS">FIG. 3F</figref>) is just the User Name which is sent to a server alone without accompanying it with a Server Challenge. The hidden in the grid shared secret credentials to authenticate the server are the Server Path and the Server Challenge Path, whereas the Server Response is to be matched to the software token content displayed on the smartphone. Upon successful server authentication by the user, his/her password is entered to authenticate the user to the server and to complete user/server mutual authentication in one of the preferred embodiments of this invention.</p>
<p id="p-0062" num="0069"><figref idref="DRAWINGS">FIG. 8D</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting the second step of a server to the user out-of-band authentication with a software token on a smartphone or a hardware token as a second channel. The first step (see <figref idref="DRAWINGS">FIG. 3F</figref>) is just the User Name which is sent to a server alone without accompanying it with a Server Challenge. The hidden in the grid shared secret credentials to authenticate the server are the Server Path and the Server Response Path, whereas the Server Challenge is generated by the hardware token or the software token and displayed on the smartphone. Upon successful server authentication by the user, his/her password is entered to authenticate the user to the server and to complete user/server mutual authentication in one of the preferred embodiments of this invention.</p>
<p id="p-0063" num="0070"><figref idref="DRAWINGS">FIG. 8E</figref> illustrates a graphical user interface in a desktop or laptop's browser or on a screen supporting the second step of a server to the user out-of-band authentication with a software client in a smartphone as a second channel. The first step (see <figref idref="DRAWINGS">FIG. 3C</figref>) is just the User Name which is sent to a server alone without accompanying it with a Server Challenge. The hidden in the grid shared secret credential to authenticate the server is the Server Path, while both the grid and the session-only authentication challenge are generated by the software client and displayed in the smartphone. Meanwhile, the Server Response is explicitly displayed in the graphical user interface in a desktop or laptop's browser or on a screen, and the Server Response is supposed to match to the one derived from the smartphone display. Upon successful server authentication by the user, his/her password is entered to authenticate the user to the server and to complete user/server mutual authentication in one of the preferred embodiments of this invention.</p>
<p id="p-0064" num="0071"><figref idref="DRAWINGS">FIG. 9A</figref> is a basic architecture diagram for one of the preferred embodiments of a client-server system according to the present invention, including support for the user mutual authentication to a server, which is an authentication process utilizing one (in-band) communication channel (like a channel established using an Internet browser) for interactive client-server authentication session.</p>
<p id="p-0065" num="0072"><figref idref="DRAWINGS">FIG. 9B</figref> is a basic architecture diagram for one of the preferred embodiments of a user at a client platform/server system according to the present invention, including support for a Random Partial Digitized Path Recognition (RPDPR) mutual authentication process utilizing two communication channels (like separate channels established using an Internet browser and a mobile communication device like a smartphone pre-downloaded with a software token, or a software client; or a hardware token) to split and deliver to the smartphone either a content of Grid Watermark, or Server Path, or Server Response in a case of a software token, or a hardware token, or a grid and a content of a Server Challenge, or a Software Response in a case of a software client.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0066" num="0073">A detailed description of embodiments of the present invention is provided with reference to <figref idref="DRAWINGS">FIGS. 1 through 9</figref>.</p>
<p id="p-0067" num="0074"><figref idref="DRAWINGS">FIG. 1</figref> illustrates a basic communication set up for a representative Random Partial Digitized Path Recognition (RPDPR) authentication protocol utilized for a server authentication to the user at a client platform, according to the present invention. A client subsystem <b>1010</b> communicates by communication media, such as a local area network or wide area network communications subsystem <b>1020</b>, with server subsystem <b>1030</b>. Protected network destination <b>1060</b> controls access to resources such as secure web sites identified by URLs, links to secure networks, applications, and the like.</p>
<p id="p-0068" num="0075">To set up access, pre-authentication session <b>1040</b> is executed by client subsystem <b>1010</b> and server subsystem <b>1030</b>. In pre-authentication session <b>1040</b>, a user account is set up in server subsystem <b>1030</b>, the user name and a shared secret digitized path represented by an ordered data set of data fields is selected by the user and stored in server subsystem <b>1030</b> as a personalized server credential that would be used later to authenticate the server to this particular user. The ordered data set characterizes the server's full pattern, in which the data fields have enumerated positions in the data set and have respective field contents. For RPDPR, the field contents include combinations of field coordinates on a frame of reference of points. The coordinates characterize data field locations along a directed digitized path on the frame of reference. The position in the data set corresponds to the enumerated position (e.g. field number) of a corresponding point on the directed digitized path, which has coordinates known to the user at a client platform on the frame of reference. The position in the data set therefore indicates such coordinates to the user at a client platform, and the coordinates or the random session-only digital content randomly populated by the server in the appropriate fields can be used to select an indicator to be supplied as a fulfillment of a part of the authentication factor that corresponds to the position indicated by the One-Time Authentication Challenge (OTAC). Hence, the authentication response can be either position based or content based. The latter allows reducing credential entropy leakage by entering as the authentication response the appropriate content either by clicking on the other fields, where such content is met during the session, or entering the content needed from a keyboard. The former would require clicking on the right fields to generate a One-Time Authentication Response (OTAR), which is more vulnerable to credential reengineering if recorded during the entry process, and it would lead to a higher entropy leakage as compared to a content based approach. Nevertheless, in both cases OTAC challenges to enter only a session-only random subset of the credential, hence the OTAR response does not allow to reengineer the entire credential, keeping entropy leakage much lower than in password/PIN cases.</p>
<p id="p-0069" num="0076">The user account information, the user name and the ordered set of data fields being a shared secret between the user and the server and used later as the user personalized server's credential utilized to authenticate the server to the user. This information is stored in a secure server database, along with other credentialing information employed during an authentication of the user to the server to complete a mutual authentication session. In some embodiments, the user's credential(s) could be a password, or another ordered set of data fields being a shared secret between the user and the server, and it is used later as a user's credential to authenticate the user to the server. Alternatively, both user credentials can be stored in the database in a case of two-factor layered user authentication. These are the preferred embodiments, though any types of user authentication credentials can be used for a single factor as well as a multi-factor user authentication to the server.</p>
<p id="p-0070" num="0077">To gain access to protected network destination <b>1060</b>, client subsystem <b>1010</b> and server subsystem <b>1030</b> execute mutual authentication session <b>1050</b> that includes a user at a client platform/server interactive communication based on RPDPR for a server authentication to the user and any chosen by the user authentication factors to authenticate a user to the server. A more detailed description of an embodiment of authentication session <b>1050</b> is provided with reference to <figref idref="DRAWINGS">FIGS. 2A and 2B</figref>.</p>
<p id="p-0071" num="0078">According to one basic flow, an authentication session is initiated when the user tries to reach a protected resource in a network destination (block <b>1060</b>). The protected network destination redirects the user's attempted access to the authentication server, or the attempted access is otherwise detected at the authentication server <b>1030</b>. In one example, where the user is attempting access (block <b>2010</b>, <figref idref="DRAWINGS">FIG. 2A</figref>) using for instance an Internet browser, a communication interface is returned to the user's browser including a graphical user interface having links to authentication server <b>1030</b> (block <b>2020</b>, <figref idref="DRAWINGS">FIG. 2A</figref>). The communication interface may be returned through redirection for example, by the authentication server or another network resource. Via the communication interface, the server prompts the user to enter a user name into a field in the Graphical User Interface (GUI), or in another preferred embodiment, the server prompts the user to enter the user name and a user-manually-created or user-edited a one-time authentication challenge to a server (Server Challenge; in other preferred embodiments it can be user-edited a one-time authentication response&#x2014;Server Response, to for example, <figref idref="DRAWINGS">FIG. 3E</figref> (block <b>2030</b>, <figref idref="DRAWINGS">FIG. 2A</figref>)). In yet another preferred embodiment, the user generated Server Challenge or Server Response is requested to be entered and sent to a server utilizing a second communication channel, for instance user's email address, or SMS address, or user's hardware token, or delivered to a server with the user's phone (block <b>2030</b>, <figref idref="DRAWINGS">FIG. 2A</figref>).</p>
<p id="p-0072" num="0079">Hence, in one embodiment the user enters only the user name, whereas in another embodiment, the user along with the user name also enters a Server Challenge (a session-only random One-Time Authentication Challenge (OTAC)) or a Server Response (a session-only random One-Time Authentication Response (OTAR)) to the server being each a numerical code looking like a digits only PIN generated by the user, or generated by the user's machine and either agreed upon or edited by the user) into the same GUI or, in other embodiments, the user generated challenge or response is entered and sent to the server utilizing a second communication channel, for instance, user's email address, or SMS address, or user's hardware token, or delivered with the user's phone (block <b>2040</b>, <figref idref="DRAWINGS">FIG. 2A</figref>).</p>
<p id="p-0073" num="0080">Then, in one embodiment, the authentication server submits to the user's GUI a reference grid with randomly populated digital content placed in grid's fields (having a digit per field), while a server's response is either sent to the user's GUI, or to the user's email address, or SMS address, or delivered over the user's phone, or embedded into a server/user shared secret static server's response path (Server Path) on a grid (block <b>2050</b>, <figref idref="DRAWINGS">FIG. 2B</figref>). In other embodiments, the reference grid with randomly populated digital content and Server Challenge are submitted to the second communication channel, whereas the session-only One-Time Authentication Response (OTAR) generated by the server to the user (Server Response) is displayed on the user's GUI, so that the user can deduce if the response is correct by looking at the GUI and the grid and the Server Challenge sent with another communication channel (block <b>2050</b>, <figref idref="DRAWINGS">FIG. 2B</figref>). In yet another preferred embodiment of this invention, OTAR generated by the user is sent to a server (like in <figref idref="DRAWINGS">FIG. 3E</figref>), and then displayed on the user's GUI while the reference grid with randomly populated digital content and the Server Challenge are submitted to the second channel, so that the user can deduce if the response is correct by looking at the GUI and the grid with the Server Challenge sent with another communication channel (block <b>2050</b>, <figref idref="DRAWINGS">FIG. 2B</figref>). The only difference in these last two preferred embodiments is a tradeoff between security, usability, and computer/network resource utilization. OTAR generated by the user is providing some additional security against replay attacks at expense of lower usability and higher requirements to the bandwidth and the server CPU power.</p>
<p id="p-0074" num="0081">In any embodiments, the user looks at the challenge and at the secret full graphical path having in a user store record enumerated field positions along the path (the server's credential personalized for this particular user) and deduces the server's authentication response that user compares with the response sent by a server to the GUI, or to the user's email address, or SMS address, or hardware token, or delivered to the user's phone (a software client or a software token in a mobile device), or to the static response path on the grid (block <b>2060</b>, <figref idref="DRAWINGS">FIG. 2B</figref>).</p>
<p id="p-0075" num="0082">If the server's authentication to the user is recognized by the user, then the user goes through a conventional one- or multi-factor user authentication to the server. Otherwise, the user interrupts the session. The server notifies the user about successful authentication through the GUI and allows for a network connection to the network resource <b>1060</b> requested by the user. If the user authentication to the server is not correct, the access to the resource is denied by the server (block <b>2070</b>, <figref idref="DRAWINGS">FIG. 2B</figref>).</p>
<p id="p-0076" num="0083">For instance, in one preferred embodiment of this invention and for one particular authentication session, an instance of a graphical representation of the frame of reference consists of a 10 by 10 grid of data field locations, where a random character (where the characters are digits, letters or other characters that can be used to suggest an order) is positioned at each data field location in the grid. For a particular instance of the grid, the character positioned at each data field location is session specific, so that the instance is used for only one authentication session. In a representative example, consider a full path including ten data fields storing coordinates of ten data field locations on the frame of reference, with the starting field location for the full path in position 1 and a random character being the digit 3, next consecutive field location in position 2 and a random character being the digit 8, next consecutive field location in position 3 and a random character being the digit 5, next consecutive field location in position 4 and a random character being the digit 2, next consecutive field location in position 5 and a random character being the digit 7, next consecutive field location in position 6 and a random character being the digit 9, next consecutive field location in position 7 and a random character being the digit 8, next consecutive field location in position 8 and a random character being the digit 1, next consecutive field location in position 9 and a random character being the digit 4, and the last field location at the full graphical ordered path in position 10 which is presented with digit 0 and a random character being the digit 6. Hence, the full ordered path is presented in this example as the following sequence of characters in the pre-defined field locations along the secret full ordered path: &#x201c;3, 8, 5, 2, 7, 9, 8, 1, 4, 6&#x201d;. Assume for this example that the second shared secret being a Server Challenge or OTAC consists of coordinates of the six pre-selected field locations on the reference grid. As an example, we will consider a Server Challenge including six data fields storing coordinates of six data field locations on the frame of reference, with the starting field location for the Server Challenge in position 1 and a random character being the digit 5, next consecutive field location in position 2 and a random character being the digit 9, next consecutive field location in position 3 and a random character being the digit 1, next consecutive field location in position 4 and a random character being the digit 4, next consecutive field location in position 5 and a random character being the digit 3, and next consecutive field location in position 6 and a random character being the digit 8. Then, according to the example above, the one-time authentication challenge OTAC consists of the six characters displayed at the field locations corresponding to the Server Challenge on the instance of the grid. Thus, a secret OTAC (5, 9, 1, 4, 3, 8) is built into the reference grid as a second user/server static shared secret digitized path on the session specific instance of the grid. While the secret is static, the digital OTAC content is dynamic and gets updated each authentication session when the reference grid is invoked.</p>
<p id="p-0077" num="0084">The user is prompted to deduce OTAR and to compare it with the one displayed in the data entry field on the graphical user interface according to the OTAC. In this particular example, the first character of the challenge points to field position 5 along the path, where the displayed random character is the digit 7. Then, the second character of the challenge points to field position 9 along the path, where the displayed random character is the digit 4. Going the same way across remaining points in the OTAC path 3, 4, 5, and 6, one can derive a random session-only one time authentication response OTAR &#x201c;7 4 3 2 5 1&#x201d;. The user completes the matching process of comparing deduced field values with the OTAR sent from the server to the user in- or out-of-band (block <b>2070</b>, <figref idref="DRAWINGS">FIG. 2B</figref>). If the input data matches the field content derived at the server (or, in one of other preferred embodiments of this invention, generated manually or edited by the user) for the very same path, challenge and the random session-only characters in the array, then the user, having an assurance that the server is not a fraudulent one, can proceed entering user authentication credentials or PII, or any confidential and business security sensitive information.</p>
<p id="p-0078" num="0085">Graphical User Interface for User's Personalized Server Authentication Factor</p>
<p id="p-0079" num="0086"><figref idref="DRAWINGS">FIGS. 3A-3G</figref> illustrate input constructs based on graphical user interfaces presented using Web browsers for a login and authentication session. <figref idref="DRAWINGS">FIG. 3A</figref> illustrates an opening screen <b>3010</b> which is presented to the user at the beginning of a server authentication session. In the opening screen <b>3010</b>, data entry fields <b>3040</b> and <b>3140</b> are used for entry of a user name and a server challenge (OTAC to a server). The Server Challenge or OTAC is generated manually by the user, or it is generated automatically as a session-only random OTAC with an option to be edited by the user at the user's will, before it is sent to a server. Login button <b>3060</b> is indicated to initiate processing of field data and to start a login process.</p>
<p id="p-0080" num="0087">&#x201c;Operation mode:&#x201d; menu <b>3050</b> is included and when it is indicated, it causes a drop-down menu of operation mode buttons including &#x2018;login session&#x2019; operation mode button <b>3070</b>, &#x2018;account set-up&#x2019; operation mode button <b>3080</b>, &#x2018;server path reset&#x2019; operation mode button <b>3090</b>, server &#x2018;response path reset&#x2019; operation mode button <b>3100</b>, user credentials to authenticate a user to the server (path or password, or password and path together) reset operation mode &#x2018;user pswd/path reset&#x2019; button <b>3110</b>, user &#x2018;personal information reset&#x2019; (a set of personalized security questions not disclosing user's personally identifiable information) button <b>3120</b>, and user &#x2018;account information reset&#x2019; button <b>3130</b>. Stoplight icon <b>3030</b> is included in screen <b>3010</b>. Out-of-band second channel selection menu &#x201c;Send to 2<sup>nd </sup>Channel:&#x201d; <b>3150</b> is included and its buttons are described in <figref idref="DRAWINGS">FIG. 3B</figref>. Stoplight icon <b>3020</b> is red before the user name and, in some preferred embodiment, the Server Challenge are entered (either by indicating LOGIN button <b>3060</b>, or hitting the &#x201c;Enter&#x201d; key on the user's keyboard), is yellow during client-server communications while the client (the user at a client platform) is waiting for verification of the user name and the OTAC compliance with the system administrator's set policies (say OTAC is to be between 4 and 6 digits), and turns green when the data are accepted. Then, the initial first step of user/client multi-factor mutual authentication GUI is replaced with any of the GUIs in <figref idref="DRAWINGS">FIGS. 7A-7I</figref> or <figref idref="DRAWINGS">FIGS. 8A-8E</figref> used to perform the second step of verifying as to whether a server got authenticated to the user and entering user credentials to authenticate the user to the server, if the server has been positively authenticated by the user. Until the data are entered in these GUIs, the stoplight <b>3020</b> is red; it is yellow during client-server communications while the client (the user at a client platform) is waiting for verification of the user's credential(s) to be authenticated by the server, then the stoplight <b>3020</b> turns green if the user is positively authenticated by the server. Also included in screen <b>3010</b> is session timer icon <b>3030</b> indicating session elapsed time for the mutually authenticated login session. The elapsed session time <b>3030</b> continues and uninterrupted when the user is presented with GUIs replacing each other during different steps of the mutual authentication session. The system administrator can set parameters in the server that terminate the login process or any other selected by user operation mode session in menu <b>3050</b>, if the timer expires (session time can have different time limits for various operation modes), or otherwise react to timer expiry.</p>
<p id="p-0081" num="0088"><figref idref="DRAWINGS">FIG. 3B</figref> is similar to <figref idref="DRAWINGS">FIG. 3A</figref> while providing more pictorial information on &#x201c;Send to 2<sup>nd </sup>Channel:&#x201d; menu <b>3150</b>. The RPDPR-based user/server mutual authentication factor components that can be utilized out-of-band in various operation modes are presented by the following buttons: &#x2018;server challenge&#x2019; <b>3160</b>, &#x2018;server grid&#x2019; <b>3170</b>, &#x2018;server response&#x2019; <b>3180</b>, &#x2018;user password&#x2019; <b>3190</b>, &#x2018;user challenge&#x2019; <b>3200</b>, &#x2018;user grid&#x2019; <b>3210</b>, &#x2018;user response&#x2019; <b>3240</b>, &#x2018;server path&#x2019; <b>3250</b>, and &#x2018;grid watermark&#x2019; <b>3260</b>. Each of these components can be used by a variety of different out-of-band channels <b>3230</b> like email, SMS, phone voice/dial, smartphone software client, hardware token, smartphone software token. If out-of-band channels are not used, all in-band solutions are supported with &#x201c;GUI in-band (default)&#x201d; entry in menu <b>3150</b>.</p>
<p id="p-0082" num="0089"><figref idref="DRAWINGS">FIG. 3C</figref> illustrates an input construct used by the user to enter the user's name in field <b>3040</b>, whereas the server having obtained and verified the user name, securely communicates with the software client on the user's mobile device to deliver the session only grid and the Server Challenge or OTAC (see field <b>3150</b> of the &#x201c;Send To 2<sup>nd </sup>Channel:&#x201d; menu&#x2014;it points to &#x201c;smartphone &#x26; soft token&#x2019; as an out-of-band second channel). Concurrently, the Session Response or OTAR is delivered in-band from the server to the browser or the user's login screen. The OTAR deduced by the user from the data in the mobile device is to be matching the one delivered through the browser GUI&#x2014;this way the server gets authenticated. It is worth to note that a grid sent to the software client in a mobile device can be combined not necessarily with the OTAC but instead, it can be combined for instance with a OTAR, whereas the OTAC will be concurrently displayed in the browser GUI. Then, the OTAC applied to the obtained out-of-band grid (sent to the software client in the mobile device) is to produce the same OTAR that is displayed in the mobile device, which is positively authenticating the server to the user.</p>
<p id="p-0083" num="0090"><figref idref="DRAWINGS">FIG. 3D</figref> illustrates an input construct based on graphical user interface presented using a Web browser for a login and authentication session. The only difference with <figref idref="DRAWINGS">FIG. 3A</figref> is that instead of a session-only random authentication challenge OTAC sent in-band to the server, the user authentication challenge in one of the preferred embodiments of this invention is always (according to the policies set by the system administrator) a session-only random digital content in the first four enumerated positions of the Server Path. Certainly, the number of the first enumerated field positions on the Server Path used as OTAC can be varied with the system administrator policy change.</p>
<p id="p-0084" num="0091"><figref idref="DRAWINGS">FIG. 3E</figref> illustrates the input graphical construct for an in-band authentication of the user to a server during various operation modes. The OTAC to a server is either generated manually or it is generated automatically, and then optionally edited by the user. The grid then sent to the user allows to test the Server Response embedded into the grid along with the Server Path. The Server Response is to correspond to the OTAC initially chosen by the user and displayed in the browser or the user's login screen.</p>
<p id="p-0085" num="0092"><figref idref="DRAWINGS">FIG. 3F</figref> illustrates an input construct based on a graphical user interface presented using a Web browser for an out-of-band login authentication session. One of the RPDPR components (in one of the preferred embodiments of this invention it can be a Server Response value or OTAR) is delivered to the user through a software token at the user's mobile device. In other preferred embodiments it can be either a Server Challenge value or a Server Watermark value instead of a Server Response value.</p>
<p id="p-0086" num="0093"><figref idref="DRAWINGS">FIG. 3G</figref> illustrates an input construct based on a graphical user interface presented using a Web browser for an out-of-band login authentication session. One of the RPDPR components (in one of the preferred embodiments of this invention it can be a Server Response or OTAR) is delivered to the user through a hardware token (similar to the RSA SecureID token). In other preferred embodiments, it can be either a Server Challenge value or a Server Watermark value instead of a Server Response value.</p>
<p id="p-0087" num="0094">Selecting a Full Graphical Ordered Path on a Grid at User Account Set Up</p>
<p id="p-0088" num="0095"><figref idref="DRAWINGS">FIG. 4</figref> and <figref idref="DRAWINGS">FIGS. 5A-1</figref> to <b>5</b>E-<b>1</b>, when related to <figref idref="DRAWINGS">FIGS. 5A-2</figref> to <b>5</b>E-<b>2</b>, and <figref idref="DRAWINGS">FIGS. 6A-1</figref> to <b>6</b>F-<b>1</b>, when related to <figref idref="DRAWINGS">FIGS. 6A-2</figref> to <b>6</b>F-<b>2</b>, illustrate how an ordered path is specified with respect to a frame of reference for use as a personalized for any particular user a server's authentication factor, which is utilized later to authenticate a server to the user. In this example, the frame of reference consists of a reference grid as shown in <figref idref="DRAWINGS">FIG. 4</figref>. Reference grid <b>4010</b> in this embodiment consists of an array of pre-defined locations (e.g. <b>4011</b>) that can be characterized by coordinates along horizontal and vertical axes <b>4012</b>, <b>4013</b> respectively, as in a Cartesian coordinate system. Other frames of reference may be organized according to other coordinate systems, such as polar coordinate systems, three dimensional coordinate systems, and so on. In the example shown in <figref idref="DRAWINGS">FIG. 4</figref>, location <b>4011</b> can be characterized by coordinates (7, 4). <figref idref="DRAWINGS">FIG. 4</figref> represents an instance of a frame of reference in which the locations on the grid are not populated with characters, for display on a user interface during an account setup procedure, for example, and used by a client to specify a full graphical ordered path. Thus, the instance includes icon <b>4014</b> with a black triangle (or more preferably a triangle that is highlighted in some form, such as by being colored red) depicted on it at the intersection of the reference axes, used as a button for opening and closing the instance. The client may draw (or choose, or select) a graphical path on the reference grid with a mouse, a keyboard, or other input device, or the graphical path may be provided by a server, as suits a particular instance of the set up algorithm.</p>
<p id="p-0089" num="0096"><figref idref="DRAWINGS">FIGS. 5A-1</figref> to <b>5</b>E-<b>1</b>, illustrate representative graphical ordered paths which can be set up using the frame of reference <b>4010</b>. Related <figref idref="DRAWINGS">FIGS. 5A-2</figref> to <b>5</b>E-<b>2</b> disclose the meaning of word &#x201c;ordered&#x201d; as an adjective for &#x201c;graphical path&#x201d; as used herein. Shaded grid locations consecutively numbered with digits 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 from the beginning to the end of the graphical path comprise full graphical ordered paths. Any subset of this path's fields can be selected as a sub-path representing an authentication challenge built into the path. The number of a field represents the field position in the order along a full graphical ordered path. Thus, <figref idref="DRAWINGS">FIG. 5A-1</figref> and its related Figure, <figref idref="DRAWINGS">FIG. 5A-2</figref>, illustrate graphical path <b>4021</b> on an instance <b>4020</b> of the reference grid. The path includes a set of locations beginning with a location at coordinates (0, 8). The path proceeds in a straight line in order with locations at the coordinates (9, 8), (8, 8), (7, 8), . . . , (1, 8). A data set corresponding with this ordered path comprises a set of data fields having positions 1 through 0 (here and everywhere in this application 0 represents position number 10) in the data set (where the positions can be represented by a field number using a data set that comprises a linear array of data fields). The data fields at the positions respectively store combinations of coordinates (0, 8) through (1, 8) in order. In this manner, if the client knows the path and the location of a data field in the data set, the client can determine the coordinates stored in the data field. Those coordinates can be used to fulfill the authentication factor as described below.</p>
<p id="p-0090" num="0097"><figref idref="DRAWINGS">FIG. 5B-1</figref> and its related Figure, <figref idref="DRAWINGS">FIG. 5B-2</figref>, illustrate a graphical path represented by arrows <b>4031</b>, <b>4032</b>, <b>4033</b> on an instance <b>4030</b> of the frame of reference. The graphical path of <figref idref="DRAWINGS">FIG. 5B-1</figref> and its position number representation in <figref idref="DRAWINGS">FIG. 5B-2</figref> include the coordinates in order: (1, 9), (2, 0), (3,0), (3, 9), (3, 8), (4, 7), (5, 6), (6, 5), (7, 4), and (8, 3). These coordinates are stored in the data fields in positions 1 through 0 respectively (see <figref idref="DRAWINGS">FIG. 5B-2</figref>) in the data set used as the authentication factor based on the path in <figref idref="DRAWINGS">FIG. 5B-1</figref>.</p>
<p id="p-0091" num="0098"><figref idref="DRAWINGS">FIG. 5C-1</figref> and its related Figure, <figref idref="DRAWINGS">FIG. 5C-2</figref>, illustrate a path represented by arrows <b>4041</b>, <b>4042</b> on an instance <b>4040</b> of the frame of reference. The graphical path of <figref idref="DRAWINGS">FIG. 5C-1</figref> and its related Figure, <figref idref="DRAWINGS">FIG. 5C-2</figref>, include the coordinates in order: (1, 6), (2, 7), (3, 8), (4, 9), (5, 0), (6, 0), (7, 9), (8, 8), (9, 7), and (0, 6). These coordinates are stored in the data fields in positions 1 through 0 respectively (see <figref idref="DRAWINGS">FIG. 5C-2</figref>) in the data set used as the authentication factor based on the path in <figref idref="DRAWINGS">FIG. 5C-1</figref>.</p>
<p id="p-0092" num="0099"><figref idref="DRAWINGS">FIG. 5D-1</figref> and its related Figure, <figref idref="DRAWINGS">FIG. 5D-2</figref>, illustrate a path represented by arrows <b>4051</b>, <b>4052</b> on instance <b>4050</b> of the frame of reference. The graphical path of <figref idref="DRAWINGS">FIG. 5D-1</figref> and its position number representation in <figref idref="DRAWINGS">FIG. 5D-2</figref>, include the coordinates in order: (0, 0), (0, 9), (0, 8), (0, 7), (0, 6), (9, 6), (8, 6), (7, 6), (6, 6), and (5, 6). These coordinates are stored in the data fields in positions 1 through 0 respectively (see <figref idref="DRAWINGS">FIG. 5D-2</figref>) in the data set used as the authentication factor based on the path in <figref idref="DRAWINGS">FIG. 5D-1</figref>.</p>
<p id="p-0093" num="0100"><figref idref="DRAWINGS">FIG. 5E-1</figref> and its related Figure, <figref idref="DRAWINGS">FIG. 5E-2</figref>, illustrate a path represented by arrows <b>4061</b>, <b>4062</b>, <b>4063</b>, <b>4064</b>, <b>4065</b> on instance <b>4060</b> of the frame of reference. The graphical path of <figref idref="DRAWINGS">FIG. 5E-1</figref> and its position number representation in <figref idref="DRAWINGS">FIG. 5E-2</figref> include the coordinates in order: (3, 0), (3, 9), (4, 9), (4, 0), (5, 0), (5, 9), (6, 9), (6, 0), (7, 0), and (7, 9). These coordinates are stored in the data fields in positions 1 through 0 respectively (see <figref idref="DRAWINGS">FIG. 5E-2</figref>) in the data set used as the authentication factor based on the path in <figref idref="DRAWINGS">FIG. 5E-1</figref>.</p>
<p id="p-0094" num="0101">The ordered paths shown in <figref idref="DRAWINGS">FIGS. 5A-1</figref> through <b>5</b>E-<b>1</b> and their related Figures, <figref idref="DRAWINGS">FIGS. 5A-2</figref> through <b>5</b>E-<b>2</b>, are herein considered continuous ordered paths, because all of the locations have coordinates on the path are adjacent to coordinates of other locations on the path in order. Continuous paths may be easier to remember for some clients.</p>
<p id="p-0095" num="0102">Also, all in the set of representative ordered paths have the same number of data field locations (or data fields). Using the same number of locations (or data fields) on each graphical path facilitates the execution of the RPDPR authentication algorithm. In alternative, lengths of the ordered paths can vary from client to client.</p>
<p id="p-0096" num="0103">Other embodiments of the invention use ordered paths that are non-continuous, such as described in reference to <figref idref="DRAWINGS">FIGS. 6A-1</figref> to <b>6</b>F-<b>1</b> and their related Figures, <figref idref="DRAWINGS">FIGS. 6A-2</figref> to <b>6</b>F-<b>2</b>.</p>
<p id="p-0097" num="0104"><figref idref="DRAWINGS">FIG. 6A-1</figref> and its related Figure, <figref idref="DRAWINGS">FIG. 6A-2</figref>, illustrate a non-continuous path represented by arrows <b>6011</b>, <b>6012</b>, <b>6013</b> on instance <b>6010</b> of the frame of reference. The graphical path of <figref idref="DRAWINGS">FIG. 6A-1</figref> and its position number representation in <figref idref="DRAWINGS">FIG. 6A-2</figref> include the coordinates in order: (1, 1), (2, 2), (3, 3), (8, 3), (9, 2), (0, 1), (0, 7), (0, 8), (0, 9), and (0, 0). A discontinuity in the path occurs between coordinates (3, 3) and (8, 3). Also, a discontinuity occurs between coordinates (0, 1) and (0, 7). These coordinates are stored in the data fields in positions 1 through 0 (see <figref idref="DRAWINGS">FIG. 6A-2</figref>) respectively in the data set used as the authentication factor based on the path in <figref idref="DRAWINGS">FIG. 6A-1</figref>.</p>
<p id="p-0098" num="0105"><figref idref="DRAWINGS">FIG. 6B-1</figref> and its related Figure, <figref idref="DRAWINGS">FIG. 6B-2</figref>, illustrate a non-continuous path represented by arrows <b>6021</b>, <b>6022</b> on instance <b>6020</b> of the frame of reference. The graphical path of <figref idref="DRAWINGS">FIG. 6B-1</figref> and its position number representation in <figref idref="DRAWINGS">FIG. 6B-2</figref> include the coordinates in order: (6, 4), (7, 4), (8, 4), (9, 4), (0, 4), (0, 7), (9, 7), (8, 7), (7, 7), and (6, 7). These coordinates are stored in the data fields in positions 1 through 0 respectively (see <figref idref="DRAWINGS">FIG. 6B-2</figref>) in the data set used as the authentication factor based on the path in <figref idref="DRAWINGS">FIG. 6B-1</figref>.</p>
<p id="p-0099" num="0106"><figref idref="DRAWINGS">FIG. 6C-1</figref> and its related Figure, <figref idref="DRAWINGS">FIG. 6C-2</figref>, illustrate a non-continuous path represented by arrows <b>6031</b>, <b>6032</b>, <b>6033</b> and cross <b>6034</b> on instance <b>6030</b> of the frame of reference. The path of <figref idref="DRAWINGS">FIG. 6C-1</figref> and its position number representation in <figref idref="DRAWINGS">FIG. 6C-2</figref> include the coordinates in order: (1, 1), (2, 1), (3, 1), (0, 1), (0, 2), (0, 3), (0, 0), (9, 0), (8, 0), and (1, 0). These coordinates are stored in the data fields in positions 1 through 0 respectively (see <figref idref="DRAWINGS">FIG. 6C-2</figref>) in the data set used as the authentication factor based on the path in <figref idref="DRAWINGS">FIG. 6C-1</figref>.</p>
<p id="p-0100" num="0107"><figref idref="DRAWINGS">FIG. 6D-1</figref> and its related Figure, <figref idref="DRAWINGS">FIG. 6D-2</figref>, illustrate a non-continuous path represented by crosses <b>6041</b>, <b>6042</b>, <b>6043</b>, <b>6044</b>, <b>6045</b>, <b>6046</b>, <b>6047</b>, <b>6048</b>, <b>6049</b>, <b>6059</b> on instance <b>6040</b> of the frame of reference. The graphical path of <figref idref="DRAWINGS">FIG. 6D-1</figref> and its position number representation in <figref idref="DRAWINGS">FIG. 6D-2</figref> include the coordinates in order: (1, 1), (3, 3), (5, 5), (7, 7), (9, 9), (1, 0), (3, 8), (5, 6), (7, 4), and (9, 2). These coordinates are stored in the data fields in positions 1 through 0 respectively (see <figref idref="DRAWINGS">FIG. 6D-2</figref>) in the data set used as the authentication factor based on the path in <figref idref="DRAWINGS">FIG. 6D-1</figref>.</p>
<p id="p-0101" num="0108"><figref idref="DRAWINGS">FIG. 6E-1</figref> and its related Figure, <figref idref="DRAWINGS">FIG. 6E-2</figref>, illustrate a non-continuous path represented by crosses <b>6051</b>, <b>6052</b>, <b>6053</b>, <b>6054</b> and arrow <b>6055</b> on instance <b>6050</b> of the frame of reference. The graphical path of <figref idref="DRAWINGS">FIG. 6E-1</figref> and its position number representation in <figref idref="DRAWINGS">FIG. 6E-2</figref> include the coordinates in order: (1, 1), (0, 1), (0, 0), (1, 0), (3, 8), (4, 7), (5, 6), (6, 5), (7, 4), and (8, 3). These coordinates are stored in the data fields in positions 1 through 0 respectively (see <figref idref="DRAWINGS">FIG. 6E-2</figref>) in the data set used as the authentication factor based on the path in <figref idref="DRAWINGS">FIG. 6E-1</figref>.</p>
<p id="p-0102" num="0109"><figref idref="DRAWINGS">FIG. 6F-1</figref> and its related Figure, <figref idref="DRAWINGS">FIG. 6F-2</figref>, illustrate a non-continuous path represented by arrows <b>6061</b>, <b>6062</b>, <b>6063</b> and cross <b>6064</b> on instance <b>6060</b> of the frame of reference. The graphical path of <figref idref="DRAWINGS">FIG. 6F-1</figref> and its position number representation in <figref idref="DRAWINGS">FIG. 6F-2</figref> include the coordinates in order: (8, 0), (9, 0), (0, 0), (0, 9), (0, 8), (0, 7), (9, 8), (8, 9), (7, 0), and (9, 9). These coordinates are stored in the data fields in positions 1 through 0 respectively (see <figref idref="DRAWINGS">FIG. 6F-2</figref>) in the data set used as the authentication factor based on the path in <figref idref="DRAWINGS">FIG. 6F-1</figref>.</p>
<p id="p-0103" num="0110">In-Band Server Authentication to the User and User/Server Mutual Authentication</p>
<p id="p-0104" num="0111"><figref idref="DRAWINGS">FIG. 7A</figref> illustrates a server authentication to the user based on two static shared secrets hidden in reference grid <b>7030</b>-Server Path <b>7050</b> and Server Response Path <b>7060</b>, which are both user <b>7080</b>/server shared secrets <b>7070</b> being directed patterns of fields (paths of fields) in reference grid <b>7020</b>. Server Path <b>7050</b> in one of the preferred embodiments of this invention is a ten fields long continues path of fields, whereas Server Response Path <b>7060</b> is a five fields long continues path of fields. First, as it is shown in <figref idref="DRAWINGS">FIG. 3B</figref>, the user starts a server authentication process to user <b>7080</b> by sending to a server User Name in field <b>3040</b> and Server Challenge in field <b>3140</b> when clicking on LOGIN button <b>3060</b>. &#x201c;Send To 2nd Channel:&#x201d; menu <b>3150</b> selection is &#x201c;GUI in-band (default)&#x201d; <b>3230</b> for any in-band case, and Operation Mode menu <b>3050</b> (see <figref idref="DRAWINGS">FIG. 3A</figref>) is set to &#x201c;login session&#x201d; in one of the preferred embodiments of this invention. Second, Server Challenge is displayed in <figref idref="DRAWINGS">FIG. 7A</figref> at field <b>3140</b> of graphical construct <b>3010</b> returned from a server to the user. The Server Challenge has the same value 5 2 6 1 8 that was sent to a server in <figref idref="DRAWINGS">FIG. 3B</figref>, and it is shown back in <figref idref="DRAWINGS">FIG. 7A</figref> for a user convenience. Reference grid <b>7020</b> is populated in every field with a session-only random digital content. Each digit from 0 to 9 is met ten times in session-only random field locations for every grid instantiation. For instance, digit &#x201c;8&#x201d; is met in the following grid (X, Y) locations in <figref idref="DRAWINGS">FIG. 7A</figref>: 1. (3, 1), 2. (6, 3), 3. (4, 5), 4. (8, 5), 5. (1, 6), 6. (7, 6), 7. (8, 7), 8. (2, 8), 9. (5, 8), 10. (5, 0). Once the grid is invoked for another session, this set of coordinates for &#x201c;8&#x201d; will be updated as well as for all other digits populating the grid fields. Nevertheless, each digit will still be met ten times on the grid.</p>
<p id="p-0105" num="0112">User <b>7080</b> in <figref idref="DRAWINGS">FIG. 7A</figref> looks at grid <b>7020</b> and Server Challenge in field <b>3140</b> on User Terminal <b>7040</b>, and having remembered Server Path <b>7050</b> information in reference grid <b>7030</b>, user <b>7080</b> deduces the value of a Server Response based on a cognitive recognition according to Random Partial Digitized Path Recognition (RPDPR) algorithm. The first digit in the Server Challenge 5 2 6 1 8 in field <b>3140</b> is &#x201c;5&#x201d; pointing to the fifth field position on Server Path <b>7050</b>. According to grid <b>7020</b>, the fifth field along the Server Path contains a digit which value is &#x201c;6&#x201d;. The second digit in the Server Challenge 5 2 6 1 8 in field <b>3140</b> is &#x201c;2&#x201d; pointing to the second field position on Server Path <b>7050</b>. According to grid <b>7020</b> the second field along the Server Path contains a digit which value is &#x201c;4&#x201d;. The third digit in the Server Challenge 5 2 6 1 8 in field <b>3140</b> is &#x201c;6&#x201d; pointing to the sixth field position on Server Path <b>7050</b>. According to grid <b>7020</b> the sixth field along the Server Path contains a digit which value is &#x201c;5&#x201d;. Continue in a similar fashion with remaining digits &#x201c;1&#x201d; and &#x201c;8&#x201d; of the Server Challenge 5 2 6 1 8 in field <b>3140</b>, user <b>7080</b> finds that the Server Response is to be 6 4 5 3 8. Eventually, user <b>7080</b> looks at User Terminal <b>7040</b>, at grid <b>7020</b> where Server Response Path <b>7060</b> is located and user <b>7080</b> compares the Server Response which user <b>7080</b> has already deduced with the sequence of digit values displayed inside Server Response Path in <b>7020</b>. It is apparent in this case that Server Response Path in grid <b>7020</b> that is located in grid fields with (X, Y) coordinates 1. (1, 0), 2. (2, 0), 3. (3, 0), 4. (4, 0), 5. (5, 0) according to Server Response Path <b>7060</b> set during the user account setup, has the same sequence of digits 6 4 5 3 8 as deduced earlier by user <b>7080</b>.</p>
<p id="p-0106" num="0113">Hence, the deduced Server Response and the Server Response displayed in the grid <b>7020</b> are the same. This entire match of the deduced and displayed Server Response values is possible only under condition that the server knows both credentials&#x2014;Server Path <b>7050</b> and Server Response Path <b>7060</b> in <figref idref="DRAWINGS">FIG. 7A</figref>. From now on, having an assurance that the server has been authenticated to the user, user <b>7080</b> can proceed to either entering user's credentials to authenticate user <b>7080</b> to the server, or enter into a server page field some required by the server Personally Identifiable Information (PII), or enter in a server page any personally or business security sensitive information. It is shown in <figref idref="DRAWINGS">FIG. 7A</figref> that in one preferred embodiment of this invention user <b>7080</b> enters user's password in field <b>7010</b>. Then, user clicks LOGIN button <b>3060</b> sending password information to the server. At this point, the stop light turns from red to yellow while the data are in transit on communication lines or processed by the server's CPU&#x2014;this time is limited by the bandwidth, computer CPU power, and data traffic. Eventually, the traffic light <b>3020</b> turns green once the user is positively authenticated by the server. That would also manifest the completion of user/server mutual authentication process/protocol. Otherwise, the server will flag a failed user authentication by returning back red color of the traffic light <b>3020</b> and may be showing a warning or error message.</p>
<p id="p-0107" num="0114"><figref idref="DRAWINGS">FIG. 7B</figref> is similar to <figref idref="DRAWINGS">FIG. 7A</figref> with the only exception that user <b>7080</b> is to remember Grid Watermark pattern <b>7090</b> in the reference grid <b>7030</b>. This pattern is to be presented exactly as pattern <b>7090</b> at each grid instantiation like <b>7020</b>. In one of the preferred embodiments of this invention, Grid Watermark <b>7090</b> is a set of certain, customized by user <b>7080</b> during the account setup, selected fields' background colors. In <figref idref="DRAWINGS">FIG. 7B</figref>, Grid Watermark is a blue background color in a field with (X, Y) coordinates (1, 3), a red background color in a field with (X, Y) coordinates (2, 2), and a blue background color in a field with (X, Y) coordinates (3, 1). Grid Watermark <b>7090</b> is a user personalized server credential. Used together with Server Path <b>7050</b> and Server Response Path <b>7060</b>, Grid Watermark <b>7090</b> can be considered as a first server's authentication factor to get authenticated to the user, whereas Server Path and Server Response can be considered as the second and third server's authentication factors. That is, we have three-factor server authentication to the user. While not being highly secure server authentication factor, Grid Watermark <b>7090</b> based on a pattern of grid fields with user personalized background colors provides an additional layer of practical security against phishing and pharming attacks by hackers or exploiting their skills criminal organizations.</p>
<p id="p-0108" num="0115">The session-only random Server Challenge placed in field <b>3140</b> in <figref idref="DRAWINGS">FIGS. 3A</figref>, <b>3</b>B, <b>7</b>A, and <b>7</b>B is being generated on a client side by user <b>7080</b>. It is an effective protection against targeted replay attacks, when an intruder records the correct graphical constructs that led to a positive server authentication event, and then trying to replay them again. Essentially, it is more than that, and it is presenting a paradigm shift in a server authentication to the user, because besides a protection against replay attacks, it brings interactivity in user/server communication providing, in combination with RPSSR algorithms used to authenticate a server to the user, a low entropy leakage (a loss of credential security per one authentication session), high resilience against guessing attacks, and scalable security with a very strong sense of the personal user engagement in a server authentication process security. A Server Challenge or a Server Response or a Grid Watermark values defined by the user at a client platform and sent to a server, which begins an interactive user/server authentication protocol, and the entire RPSSR-based protocol for a server authentication to the user are introduced here. A unique capability of the technology introduced here is a secure veiling of the server credentials as the user who looks at the <figref idref="DRAWINGS">FIG. 7A</figref> graphical construct performs cognitive recognition process of matching Server Responses without actually performing any visible physical instructions or operations. Therefore, there are no traces left during the session that would allow the intruder to easily uncover the server credentials like Server Path and Server Response. It is apparent, if compared with the SiteKey technology developed by Passmark Security and sold to Bank of America and The Vanguard Group (see http://en.wikipedia.org/wiki/SiteKey). The personalized image and the related to the image text are weakly protected by so called security questions that can be easily guessed or stolen, then, the SiteKey can be copied by an intruder in several authentication session leading to 100% entropy leakage in few authentication sessions, not speaking of huge usability issues by requiring all users to answer security questions even before the actual mutual authentication session begins. Credentials entropy leakage analysis shows that the technology introduced above has serious security advantages over the SiteKey based approach.</p>
<p id="p-0109" num="0116"><figref idref="DRAWINGS">FIG. 7C</figref> is similar to <figref idref="DRAWINGS">FIG. 7A</figref> with the only one exception that the server credentials Server Path <b>7050</b> and Server Response Path <b>7060</b> have one break point of path continuity each. Server Path <b>7050</b> has a discontinuity (or a break point) between fields having enumerated positions 5 and 6 along the Server Path, whereas Server Response Path <b>7060</b> has a discontinuity (or a break point) between fields having enumerated positions 2 and 3 along the Server Response Path. These break points drastically increase credentials' combinatorial capacity (guessing entropy) and hence, resilience against guessing attacks.</p>
<p id="p-0110" num="0117">Server Challenge in field <b>3140</b> is pointing to Server Path <b>7050</b> fields having enumerated positions 4 1 6 9 along Server Path <b>7050</b>. The digits populated by the server in these positions are 2 5 8 1. This sequence of digits is completely matching with the digits along Server Response Path <b>7060</b>. Looking at grid <b>7020</b>, one can see that indeed the digital content in fields with (X, Y) coordinates 1. (2, 2), 2. (3, 2), 3. (2, 4), 4. (3, 4) is exactly the same 2 5 8 1. Hence, the deduced Server Response and the Server Response displayed in the grid <b>7020</b> are the same. This entire match of a deduced and displayed Server Response values is possible only under condition that the server knows both credentials&#x2014;Server Path <b>7050</b> and Server Response Path <b>7060</b> in <figref idref="DRAWINGS">FIG. 7A</figref>. From now on, having an assurance that the server has been authenticated to the user, user <b>7080</b> can proceed to either entering user's credentials to authenticate user <b>7080</b> to the server, or enter into a server page field some required by the server Personally Identifiable Information (PII), or enter in a server page any personally or business security sensitive information. It is shown in <figref idref="DRAWINGS">FIG. 7C</figref>, that in one of the preferred embodiments of this invention user <b>7080</b> enters user's password in field <b>7010</b>. Then, user clicks LOGIN button <b>3060</b> sending password information to the server. At this point, the stop light turns from red to yellow, while the data are in transit on communication lines or processed by the server's CPU&#x2014;this time is limited by the bandwidth, computer CPU power, and data traffic. Eventually, the traffic light <b>3020</b> turns green, once the user is positively authenticated by the server. That would also manifest the completion of user/server mutual authentication process/protocol. Otherwise, the server will flag a failed user authentication by returning back red color of the traffic light <b>3020</b> and may be showing a warning or error message.</p>
<p id="p-0111" num="0118"><figref idref="DRAWINGS">FIG. 7D</figref> is similar to <figref idref="DRAWINGS">FIG. 7A</figref> with the only one difference that the user authenticates to the server using RPDPR authentication credential&#x2014;User Path <b>7100</b> in grid <b>7030</b>. First, similarly to what was described for <figref idref="DRAWINGS">FIG. 7A</figref>, a server to the user authentication process takes place. Second, Server Response Path data <b>6</b> <b>4</b> <b>5</b> <b>3</b> <b>8</b> that are placed in field <b>7060</b> are used as a User Challenge (or OTAC) to enter User Response (or OTAR) for user <b>7080</b> into field <b>7010</b> based on this User Challenge (which is the same as Server Response <b>7060</b> in <figref idref="DRAWINGS">FIG. 7D</figref>) and User Path <b>7100</b> in the grid <b>7030</b>. Hence, <figref idref="DRAWINGS">FIG. 7D</figref> illustrates user/server mutual authentication based on the same RPDPR authentication factor but different credentials used: Server Path <b>7050</b> and Server Response Path are used to authenticate a server to the user, whereas User Path <b>7100</b> and User Challenge (equal to Server Response Path <b>7060</b> in <figref idref="DRAWINGS">FIG. 7D</figref>) is used to authenticate a user to the server.</p>
<p id="p-0112" num="0119"><figref idref="DRAWINGS">FIG. 7E</figref> differs from <figref idref="DRAWINGS">FIG. 7D</figref> only in one respect&#x2014;instead of using Server Response Path <b>7060</b> as a User Challenge, field <b>7110</b> is assigned in graphical construct <b>3010</b> to display User Challenge generated by the server, once the server returns to the user grid <b>7020</b> along with Server Challenge <b>3140</b>. In the particular case presented in <figref idref="DRAWINGS">FIG. 7E</figref>, a User Challenge value in field <b>7110</b> is equal to 8 2 5 1 7 with each consecutive digit pointing to a respective field position along User Path <b>7100</b>. The digital content in such pointed fields on User Path <b>7100</b> having (X, Y) coordinates 8&#x2192;(8, 1), 2&#x2192;(2, 4), 5&#x2192;(5, 1), 1&#x2192;(1, 5), 7&#x2192;(4, 1) will be User Authentication Response 5 3 7 9 4 placed in field <b>7010</b>. When user <b>7080</b> begins entering the password in field <b>7010</b>, traffic light <b>3020</b> turns from green to red. Then, user clicks LOGIN button <b>3060</b> sending RPDPR OTAR (User Response <b>7010</b>) information to the server. At this point, stop light <b>3020</b> turns from red to yellow while the data are in transit on communication lines or processed by the server's CPU&#x2014;this time is limited by the bandwidth, computer CPU power, and data traffic. Eventually, traffic light <b>3020</b> turns green once the user is positively authenticated by the server. That would also manifest the completion of user/server mutual authentication process/protocol. Otherwise, the server will flag a failed user authentication by returning back red color of the traffic light <b>3020</b> and may be showing a warning or error message. <figref idref="DRAWINGS">FIG. 7E</figref> implementation of mutual user/server authentication presents more usable and secure technology as compared to the one presented in <figref idref="DRAWINGS">FIG. 7D</figref> because User Challenge is unrelated to the Server Response Path and explicitly generated at the server and presented to the user in field <b>7110</b>, so that the user and server credentials are completely unbound reducing credentials reengineering opportunities for a hacker.</p>
<p id="p-0113" num="0120"><figref idref="DRAWINGS">FIG. 7F</figref> is illustrating another concept of a Server Challenge. First, user <b>7080</b> sends to a server just a user name without any session-specific challenge to a server, as in <figref idref="DRAWINGS">FIG. 3D</figref>. Now, it is not something generated by the user, but it is a digital content in the first four fields (&#x201c;four&#x201d; is just a setting selected by the system administrator; instead, it can be any value within a reasonable range, say from three to six) of Server Path <b>7050</b>. That is the Server Challenge value will be the digital content in the first consecutive fields of the Server Path having (X, Y) coordinates 1. (1, 2), 2. (1, 4), 3. (0, 7), 4. (0, 9) and the corresponding value according to the current session grid instantiation <b>7020</b> in graphical construct <b>3010</b> of <figref idref="DRAWINGS">FIG. 7F</figref> is 5 7 9 4. Server Response Path <b>7060</b> presents exactly the same values in its fields with (X, Y) coordinates 1. (8, 8), 2. (8, 3), 3. (3, 3), 4. (3, 8). Thus, the server proves to user <b>7080</b> that that it knows Server Path <b>7050</b> credential and Server Response Path <b>7060</b> credential, so that server gets authenticated to the user. The danger with this technology lays in a possibility of a replay attack. A possible remedy preventing replay attacks is discussed later in the text.</p>
<p id="p-0114" num="0121"><figref idref="DRAWINGS">FIG. 7G</figref> illustrates that after the server got authenticated to the user <b>7080</b>, then user <b>7080</b> authentication to the server can be a two-factor authentication as well, unlike all the previous presented cases. The first authentication factor in <figref idref="DRAWINGS">FIG. 7G</figref> is based on user <b>7080</b> password <b>7010</b>, and the second factor is based on RPDPR with User Challenge <b>7110</b>, User Response <b>7140</b>, and User Path <b>7060</b> (the user's credential) in user <b>7080</b> account set up grid <b>7030</b>.</p>
<p id="p-0115" num="0122"><figref idref="DRAWINGS">FIG. 7H</figref> illustrates another preferred embodiment of a server authentication to user <b>7080</b> based on RPDPR authentication factor. First, user <b>7080</b> sends to a server just a user name without any session-specific challenge to a server, as in <figref idref="DRAWINGS">FIG. 3D</figref>. In the returned to user <b>7080</b> graphical construct <b>3010</b> Server Challenge Path <b>7040</b>, Server Path <b>7050</b>, and Server Response Path <b>7060</b> are all hidden in grid <b>3010</b>, all three being server credentials. Similarly to <figref idref="DRAWINGS">FIG. 7G</figref>, the danger with this technology lays in a possibility of a replay attack. A possible remedy preventing replay attacks is discussed later in the text.</p>
<p id="p-0116" num="0123"><figref idref="DRAWINGS">FIG. 7I</figref> illustrates another embodiment of this invention for the in-band server authentication to the user. First, user <b>7080</b> sends to a server just a user name without any session-specific challenge to a server, as in <figref idref="DRAWINGS">FIG. 3D</figref>. Second, graphical construct <b>3010</b> returned from a server to user <b>7080</b> contains Server Path <b>7050</b> and Server Challenge <b>7060</b> hidden in instantiated for the current session grid <b>7020</b>. Also, these credentials are depicted in virtual grid <b>7030</b>, which directed patterns user <b>7080</b> had chosen as server credentials and remembered them since setting up user's account. The new feature of this technology is the User Response which value 5 4 6 0 8 is placed in field <b>3160</b> outside of grid <b>7020</b>. Similarly to <figref idref="DRAWINGS">FIG. 7G</figref>, the danger with this technology lays in a possibility of a replay attack. A possible remedy preventing replay attacks is discussed later in the text.</p>
<p id="p-0117" num="0124">Out-of-Band Server Authentication to the User and User/Server Mutual Authentication</p>
<p id="p-0118" num="0125">In-band server authentication to the user described above provides elevated security against phishing and pharming attacks, because RPDPR in particular as well as other RPSSR authentication methods never require to use the entire credential at any given authentication session, but just a session-only random subset of a credential. Another security component is based on the fact that the user, except a cognitive recognition of the server's authentication response (Server Response or OTAR), need not perform any physical steps that could be recorded and somehow interpreted by a hacker. Nevertheless, a hacker can record a session grid and in some cases either a Server Challenge (or OTAC) or a Server Response (or OTAR). That creates a danger that analyzing such information over a number of the server to the user authentication sessions, a hacker may reengineer the Server Path credential. Therefore, in order to enhance practical security of user personalized server credentials, it is important to somehow split access to the mentioned above session authentication information available to a hacker.</p>
<p id="p-0119" num="0126"><figref idref="DRAWINGS">FIG. 8A</figref> illustrates an out-of-band server authentication to the user being one of the preferred embodiments of this invention. <figref idref="DRAWINGS">FIG. 8A</figref>, quite similarly to <figref idref="DRAWINGS">FIG. 7F</figref>, is illustrating another concept of a Server Challenge. First, user <b>7080</b> sends to a server just a user name without any session-specific challenge to a server, as in <figref idref="DRAWINGS">FIG. 3D</figref>. Now, it is not something generated by the user, but it is a digital content in the first four fields of Server Path <b>7050</b> (&#x201c;four&#x201d; is just a setting selected by the system administrator; instead, it can be any value within a reasonable range, say from three to six). That is the Server Challenge value will be the digital content in several consecutive fields (starting from the first field) of the Server Path having (X, Y) coordinates 1. (1, 2), 2. (1, 4), 3. (0, 7), 4. (0, 9) and the corresponding value according to the current session grid instantiation <b>7020</b> in graphical construct <b>3010</b> of <figref idref="DRAWINGS">FIG. 7F</figref> is 5 7 9 4. Server Response Path <b>7060</b> presents exactly the same values in its fields with (X, Y) coordinates 1. (8, 8), 2. (8, 3), 3. (3, 3), 4. (3, 8). Thus, the server proves to user <b>7080</b> that it knows Server Path <b>7050</b> credential and Server Response Path <b>7060</b> credential, so that the server gets authenticated to the user.</p>
<p id="p-0120" num="0127">Besides preset credentials Server Path <b>7050</b> and Server Response Path <b>7060</b> shown in the virtual grid <b>7030</b>, there is one more server credential preset during the user account setup&#x2014;Grid Watermark Path <b>7120</b>. A remedy preventing replay attacks is outlined here. Grid <b>7020</b> instantiated for this particular session displays the following digital content 4 3 0 8 in the sequence of Grid Watermark fields with (X, Y) coordinates 1. (7, 1), 2. (8, 2), 3. (9, 3), 4. (0, 4). According to <figref idref="DRAWINGS">FIG. 8A</figref>, the Grid Watermark value is also sent to a second channel that can be seen in field <b>3150</b> of the &#x201c;Send To 2<sup>nd </sup>Channel:&#x201d; menu&#x2014;this second channel that can be chosen in menu <b>3230</b> in <figref idref="DRAWINGS">FIG. 8A</figref> is either smartphone with software token <b>7130</b>, or hardware token <b>8010</b>. In either case, the token in hands of the user displays the same digital value 4 3 0 8 as in the Grid Watermark fields on the currently instantiated session-only grid <b>7020</b> in the graphical construct <b>3010</b> in <figref idref="DRAWINGS">FIG. 8A</figref> that is received from the server. This match of Grid Watermark digital values in both channels is a strong protection against replay attacks. A server is not authenticated to the user, unless there is a complete match of values, and the values mismatch event can be viewed as an intrusion detection. Once the server is positively authenticated to the user, the user can proceed farther and authenticate itself to the server by entering for instance user's password in field <b>7010</b> in <figref idref="DRAWINGS">FIG. 8A</figref>, which eventually completes user/server mutual authentication interactive process.</p>
<p id="p-0121" num="0128">Despite protecting against replay attacks with the Grid Watermark (see <b>7070</b>, <b>7120</b>, <b>3150</b>, <b>7130</b>, and <b>8010</b> in <figref idref="DRAWINGS">FIG. 8A</figref>) out-of-band control, this method of a server authentication to the user requires some improvement as information about Server Path <b>7050</b> and Server Response Path <b>7060</b> is still present in the same grid, that is in-band, and therefore, can be analyzed over a number of authentication sessions leading to both credentials reengineering.</p>
<p id="p-0122" num="0129"><figref idref="DRAWINGS">FIG. 8B</figref> illustrates the case very similar to <figref idref="DRAWINGS">FIG. 8A</figref> with the only difference that there is no a separate Grid Watermark on the virtual grid <b>7030</b>. The role of a Grid Watermark in this case is taken over by Server Path <b>7050</b> for the sake of usability improvement. Indeed, user <b>7080</b> has to remember only two pattern-based credentials presented in <b>7070</b> in <figref idref="DRAWINGS">FIG. 8B</figref>. One can see that the digital content in Server Path fields with coordinates (X, Y) along the Server Path 1. (1, 2), 2. (1, 4), 3. (0, 7), 4. (0, 9), which is according to currently instantiated grid <b>7020</b> in <figref idref="DRAWINGS">FIG. 8B</figref> is equal to 5 7 9 4. As it is shown in <figref idref="DRAWINGS">FIG. 8B</figref>, the Grid Watermark value is also sent to a second channel that can be seen in field <b>3150</b> of the &#x201c;Send To 2<sup>nd </sup>Channel:&#x201d; menu&#x2014;this second channel that can be chosen in menu <b>3230</b> in <figref idref="DRAWINGS">FIG. 8B</figref> is either smartphone with software token <b>7130</b>, or hardware token <b>8010</b>. In either case, the token in hands of the user displays the same digital value 5 7 9 4 as in the Grid Watermark fields on the currently instantiated session-only grid <b>7020</b> in the graphical construct <b>3010</b> in <figref idref="DRAWINGS">FIG. 8B</figref> that is received from the server. This match requirement of Grid Watermark digital values in both channels is a strong protection against replay attacks. A server is not authenticated to the user, unless there is a complete match of all digit values, and the values mismatch event can be viewed as an intrusion detection. Once the server is positively authenticated to the user, the user can proceed further and authenticate itself to the server by entering for instance user's password in field <b>7010</b> in <figref idref="DRAWINGS">FIG. 8B</figref>, which eventually completes user/server mutual authentication interactive process.</p>
<p id="p-0123" num="0130">It is relevant here to make a general note about Grid Watermarks. In all in-band cases watermark fields can have different background colors&#x2014;their overall pattern is a shared secret. Because it is a background color, each field has a character (a digit) inside as well. In in-band cases these digits may not have any special meaning, unless a watermark and a server path are coincided. In other words, it is the same path for both functions. However, in out-of-band cases a watermark path for examples described herein can be any of the following combinations of contents: (i) just background color of path fields, (ii) just digital content, and (iii) is a combination of (i) and (ii).</p>
<p id="p-0124" num="0131">Despite protecting against replay attacks with the Grid Watermark (see <b>7070</b>, <b>7120</b>, <b>3150</b>, <b>7130</b>, and <b>8010</b> in <figref idref="DRAWINGS">FIG. 8B</figref>) out-of-band control, this method of a server authentication to the user requires some improvement as information about Server Path <b>7050</b> and Server Response Path <b>7060</b> is still present in the same grid, that is in-band, and therefore can be analyzed over a number of authentication sessions leading to both credentials reengineering.</p>
<p id="p-0125" num="0132"><figref idref="DRAWINGS">FIG. 8C</figref> illustrates the most secure so far one of the preferred embodiments of this invention for out-of-band server authentication to the user <b>7080</b>, who has to remember two directed pattern-based credentials Server Path <b>7050</b> and Server Challenge Path <b>7060</b> in table <b>7070</b> on virtual grid <b>7030</b>. In the case presented in <figref idref="DRAWINGS">FIG. 8C</figref>, the numerical value of the Server Path is delivered to the second channel as it is depicted in field <b>3150</b> of &#x201c;Send To 2<sup>nd </sup>Channel:&#x201d; menu in graphical construct <b>3010</b>, and delivered to user <b>7080</b> with either smartphone with a software token <b>7130</b> or hardware token <b>8010</b>. First, user <b>7080</b> sends to a server just a user name without any session-specific challenge to a server, as in <figref idref="DRAWINGS">FIG. 3D</figref>. Now, it is not something generated by the user, but it is a digital content in the five consecutive fields of Server Challenge <b>7060</b> in table <b>7070</b> and on virtual grid <b>7030</b> (&#x201c;five&#x201d; is just a setting selected by the system administrator; instead, it can be any value within a reasonable range, say from three to six). That is the Server Challenge value will be the digital content in the five consecutive fields of the Server Challenge having (X, Y) coordinates 1. (1, 0), 2. (2, 0), 3. (3, 0), 4. (4, 0), 5. (5, 0) and the corresponding value according to the current session grid instantiation <b>7020</b> in graphical construct <b>3010</b> of <figref idref="DRAWINGS">FIG. 8C</figref> is 6 4 5 3 8. It is important to note that Server Challenge <b>7060</b> in grid <b>7020</b> is a session-only random value (of OTAC) generated by the server. That is why the role of the Server Challenge is not preventing replay attacks as in <figref idref="DRAWINGS">FIGS. 8A</figref>, <b>8</b>B but just to enable user <b>7080</b> to deduce a one-time authentication response value (the Server Response value or OTAR value deduced from grid <b>7020</b> and credentials <b>7050</b> and <b>7060</b>) which has to match the value of Server Response displayed by smartphone software token <b>7130</b> or hardware token <b>8010</b> in hands of user <b>7080</b>. Indeed, Server Challenge <b>7060</b> value in <figref idref="DRAWINGS">FIG. 8C</figref> as discussed above is 6 4 5 3 8. Each consecutive digit is pointing to particular enumerated field along Server Path with (X, Y) coordinates 1. 6<sup>th </sup>field&#x2014;(5, 6), 2. 4<sup>th </sup>field&#x2014;(0, 7), 3. 5<sup>th </sup>field&#x2014;(0, 6), 4. 3<sup>rd </sup>field&#x2014;(0, 8), 5. 8<sup>th </sup>field&#x2014;(7, 6). The digital content value in these fields is 5 4 6 0 8 which is an exact match of the Server Response values displayed by smartphone software token <b>7130</b> or hardware token <b>8010</b> in hands of user <b>7080</b>. This match of Grid Watermark digital values in both channels (browser and software token in a smartphone, or browser and hardware token) is a strong protection against replay attacks. A server is not authenticated to the user, unless there is a complete match of all digital values (of every position values), and the values mismatch event can be viewed as an intrusion detection. There is another thing here that is even more or equally important, than protection against the replay attacks. This is the fact of splitting between two channels a session-only grid with the Server Path and the Server Response (or OTAR), which extremely complicates a possibility of reengineering the Server Path by a hacker recording numerous authentication sessions of the same user. Indeed, having the Server Challenge <b>7060</b> and Server Path <b>7050</b> on the same session-only grid does not shed any light on what the Server Response values should be. Hence, the entropy leakage of Server Path is practically zero, and increasing the number of other sessions to be recorded does not help to reengineer the server credentials <b>7050</b> and <b>7060</b>, unless there is a way to preempt the Server Response value coming through the second channel. Certainly, it is much more complicated for an intruder, than having recorded information about both interrelated credentials like Server Path and Server Response in-band, so that <figref idref="DRAWINGS">FIG. 8C</figref> illustrates a practically very secure out-of-band server authentication to the user. Once the server is positively authenticated to the user, the user can proceed further and authenticate itself to the server by entering for instance user's password in field <b>7010</b> in <figref idref="DRAWINGS">FIG. 8A</figref>, which eventually completes user/server mutual authentication interactive process.</p>
<p id="p-0126" num="0133"><figref idref="DRAWINGS">FIG. 8D</figref> differs from <figref idref="DRAWINGS">FIG. 8C</figref> only in the fact that the Server Challenge and the Server Response swap the channels&#x2014;now, Software Response Path in table <b>7070</b> is displayed in virtual grid <b>7030</b> and it is hidden in the grid <b>7020</b> in <figref idref="DRAWINGS">FIG. 8D</figref>, whereas Server Challenge is displayed with either a smartphone having inside software token <b>7130</b>, or hardware token <b>8010</b>. Certainly, this approach is quite weaker than the technology introduced in <figref idref="DRAWINGS">FIG. 8C</figref> because, despite protecting against replay attacks with the Server Challenge in the second channel of out-of-band control (see <b>7130</b>, <b>8010</b>, <b>3150</b> in <figref idref="DRAWINGS">FIG. 8D</figref>), this method of a server authentication to the user is vulnerable, as information about Server Path <b>7050</b> and Server Response Path <b>7060</b> is still present in the same grid <b>7030</b> in <figref idref="DRAWINGS">FIG. 8D</figref>, and therefore, can be analyzed over a number of authentication sessions leading to both credentials reengineering.</p>
<p id="p-0127" num="0134"><figref idref="DRAWINGS">FIG. 8E</figref> displays the most secure so far preferred embodiment of this invention where user name in field <b>3040</b> is sent to a server as it is presented in <figref idref="DRAWINGS">FIG. 3C</figref> (note, that field <b>3150</b> of &#x201c;Send To the 2<sup>nd </sup>Channel:&#x201d; menu is set to &#x2018;smartphone &#x26; soft client&#x2019; in <figref idref="DRAWINGS">FIG. 3C</figref>). Then the server, having recognized the user name, initiates a session-only encrypted messages exchange according to the client/server (machine-to-machine) authentication protocol with the user's smartphone client <b>7130</b> in <figref idref="DRAWINGS">FIG. 8E</figref>. This communication results in user <b>7080</b> being able to view session-only grid <b>7020</b> containing hidden Server Path <b>7050</b>, while the Server Challenge value 6 4 5 3 8 is explicitly shown on the smartphone with software client <b>7130</b> display. Concurrently, the graphical construct <b>3010</b> in <figref idref="DRAWINGS">FIG. 8E</figref> is sent from the server to the user's <b>7080</b> browser or login screen. This construct has Server Response field <b>7140</b>, and for the current session in <figref idref="DRAWINGS">FIG. 8E</figref> the value of Server Response placed in field <b>7140</b> in GUI is 5 4 6 0 8.</p>
<p id="p-0128" num="0135">The Server Challenge value 6 4 5 3 8, displayed on smartphone with a software client <b>7130</b>, points to enumerated Server Path <b>7050</b> fields having (X, Y) coordinates 1. 6<sup>th </sup>field (9, 6), 2. 4<sup>th </sup>field (0, 7), 3. 5<sup>th </sup>field (0, 6), 4. 3<sup>rd </sup>field (0, 8), 5. 8<sup>th </sup>field (7, 6), and having the following digital content in the very same fields 5 4 6 0 8 which is matching completely with the value displayed in GUI <b>3010</b> field <b>7140</b>. This is an unequivocal proof of the server authentication to the user without any opportunity for a replay attack or Server Path credential reengineering by a hacker. A server is not authenticated to the user, unless there is a complete match of digital values in each considered position, and the values mismatch event can be viewed as an intrusion detection. There is another thing here that is even more or equally important than protection against the replay attacks. This is the fact of splitting between two channels a session-only grid with the Server Path and the Server Response (or OTAR), which extremely complicates a possibility of reengineering the Server Path by a hacker recording numerous authentication sessions of the same user. Indeed, having Server Response <b>7140</b> at any given authentication session does not shed any light on what the Server Response values should be next time or what is Server Path in table <b>7070</b> and virtual grid <b>7030</b>.</p>
<p id="p-0129" num="0136">Hence, the entropy leakage of Server Path is practically zero, and increasing the number of other sessions to be recorded does not help to reengineer server credentials, unless there is a way to preempt the Server Challenge and the grid value coming through the second channel. Certainly, it is much more complicated option for an intruder as compared to recording and then analyzing numerous sessions with both credentials in-band, so that <figref idref="DRAWINGS">FIG. 8E</figref> illustrates a practically very secure out-of-band server authentication to the user. Once the server is positively authenticated to the user, the user can proceed further and authenticate oneself to the server by entering for instance user's password in field <b>7010</b> in <figref idref="DRAWINGS">FIG. 8A</figref>, which eventually completes user/server mutual authentication interactive process.</p>
<p id="p-0130" num="0137">RPSSR Algorithms Applicability for In- and Out-of-Band Solutions</p>
<p id="p-0131" num="0138">So far, only a server to the user authentication preferred embodiments based on Random Partial Digitized Path Recognition (RPDPR; and RPDPR-SC, SC stands for a Secret Challenge) algorithm have been described. The reason why there are no embodiments in the text of Random Partial PIN/Password Recognition (RPPPR) algorithm or Random Partial Pattern Recognition (RPPR) is because they are not providing good enough opportunity for an in-band solution preserving a low entropy leakage. For instance, look at a password-based server credential like HalfMoonBay: PASSWORD: HalfMoonBay</p>
<p id="h-0007" num="0000">Password Character Enumerated Positions:</p>
<p id="p-0132" num="0139">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="11">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="14pt" align="center"/>
<colspec colname="3" colwidth="14pt" align="center"/>
<colspec colname="4" colwidth="21pt" align="center"/>
<colspec colname="5" colwidth="21pt" align="center"/>
<colspec colname="6" colwidth="21pt" align="center"/>
<colspec colname="7" colwidth="21pt" align="center"/>
<colspec colname="8" colwidth="21pt" align="center"/>
<colspec colname="9" colwidth="21pt" align="center"/>
<colspec colname="10" colwidth="21pt" align="center"/>
<colspec colname="11" colwidth="21pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="11" align="center" rowsep="1"/>
</row>
<row>
<entry>H</entry>
<entry>a</entry>
<entry>l</entry>
<entry>f</entry>
<entry>M</entry>
<entry>o</entry>
<entry>o</entry>
<entry>n</entry>
<entry>B</entry>
<entry>a</entry>
<entry>y</entry>
</row>
<row>
<entry namest="1" nameend="11" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
<entry>4</entry>
<entry>5</entry>
<entry>6</entry>
<entry>7</entry>
<entry>8</entry>
<entry>9</entry>
<entry>10</entry>
<entry>11</entry>
</row>
<row>
<entry namest="1" nameend="11" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Let's say the user sends a challenge to a server:
<br/>
OTAC: 6 2 8 5
<br/>
Then, the server would reply in-band:
<br/>
OTAC: 6 2 8 5
<br/>
OTAR: o a n M
</p>
<p id="p-0133" num="0140">Intruder recording the session would know right away four alphanumeric characters out of eleven character password and their particular positions in the password. The number of all possible combinations by various four characters in eleven character password is 330 (considering permutations in four character groups, it is 7,920) but the fear is that it might happen that all characters will be exposed with their positions in few login sessions, though the probability of such an event is quite low. For example: 1. OTAC: 1234, 2. OTAC: 5678, 3. OTAC: 12910, in which case the entropy leakage on an average is 33% per session (even if it is 5%-10%, it is desirable to do better than that by having a guard band against targeted intruding attacks of the same user over a number of server to the user authentication sessions).</p>
<p id="p-0134" num="0141">However, if the same example is extended to out-of-band server authentication to the user, it would work fine. Indeed, let's say the user sees OTAR: o a n M in the user's mobile device (email or SMS) along with the OTAC: 6 2 8 5 in the browser. The user will quickly authenticate the server but an intruder does not see the authentication response, so that the entropy leakage is very low and RPPPR is working just fine. Then, the question is as to why one would need RPPPR if a full password seems to be applicable as well. The answer is that a password is not good because in a case if the mobile device is stolen or preempted for a while, the intruder will have a good opportunity to reengineer the password by initiating a couple of authentication sessions.</p>
<p id="p-0135" num="0142">Similar analysis being applied for the Random Partial Pattern Recognition algorithm (RPPR) speaks in favor of this algorithm for out-of-band server to the user authentication as well. So that all Random Partial Shared Secret Recognition algorithms are applicable for out-of-band case, whereas only RPDPR and RPDPR-SC are also well applicable for the in-band solutions (the most attractive cases).</p>
<p id="p-0136" num="0143">Unique Aspects of a Server to the User Authentication Method</p>
<p id="p-0137" num="0144">Having described above the most preferred embodiments of the present invention, it is appropriate here to briefly outline the unique aspects of the server-to-user authentication method allowing the user controlled protection against phishing, pharming, and guessing attacks aimed at stealing user credentials:
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0000">
    <ul id="ul0004" list-style="none">
        <li id="ul0004-0001" num="0145">Random Partial Shared Secret Recognition (RPSSR) authentication algorithms and particularly the Random Partial Digitized Path Recognition (RPDPR) algorithm allow to partition server credentials on a number of credential components that can have either a digital value only, or having both&#x2014;a digital value and a hidden path (a directed pattern) presence on a virtual session-only grid.</li>
        <li id="ul0004-0002" num="0146">That allows performing several important things like sending different components in- and out-of-band, and/or presenting those components in-band, while they have either a hidden path (a directed pattern) presence in a grid or just a displayed in a GUI digital value of these components. Essentially it provides rich opportunities to design various authentication schemes having low entropy leakage for server credentials while preserving their high combinatorial capacity.</li>
        <li id="ul0004-0003" num="0147">A possibility to make any credential component like for instance, a Server Challenge, or a Server Response, or a Grid Watermark to be made in various authentication schemes either just digital values, without any graphical presence on a grid, or presenting them as graphical paths on a grid, similar to a Server Path, which effectively permits to increase a number of authentication credentials from one to two hidden in a grid credentials, or even to three and four credentials, all being as important and necessary to know by the user as a Server Path. This provides a design option to elevate a one-factor authentication to a multi-factor server-to-user authentication scheme.</li>
        <li id="ul0004-0004" num="0148">User controlled/generated credential components values like for instance, Server Challenge, Server Response, or Grid Watermark sent to the server as a first step provide ample opportunities to design server-to-user authentication schemes preventing replay attacks.</li>
        <li id="ul0004-0005" num="0149">The unique feature of this technology is the fact that despite the server credentials are hidden in the session-only grid, the user does not need to perform any physical instruction, for example, hit buttons on a keyboard, or click on any elements of a GUI to exercise cognitive recognition of a positive or negative server authentication to the user, which preserves low entropy leakage of server credentials.</li>
        <li id="ul0004-0006" num="0150">Session-only grid with hidden server credentials having a graphical path presentation on a grid and one of the server credentials like for instance a Server Response, or a Server Challenge having a digital value form only can be split between &#x201c;what user knows&#x201d; and &#x201c;what user has&#x201d; out-of-band channels, whereas intruder preemption of any of these channels or both of them at the same time do not lead to the key server credential (Server Path) loss. Meanwhile, out-of-band server authentication to the user provides the highest security against replay, phishing, pharming, and guessing attacks.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0138" num="0151">Network and Hardware Resources</p>
<p id="p-0139" num="0152"><figref idref="DRAWINGS">FIG. 9A</figref> illustrates a basic architecture of an embodiment of a client-server system according to the present invention, including support for Random Partial Shared Secret Recognition (RPSSR) algorithms like Random Partial Password/PIN Recognition (RPPPR), Random Partial Digitized Path Recognition (RPDPR), Random Partial Digitized Path Recognition with a Secret Challenge (RPDPR-SC), and Random Partial Pattern Recognition (RPPR) user/server mutual authentication protocols for a client-server system including authentication resources according to the RPPPR, RPDPR and RPPR based user/server mutual authentication factors of the present invention. The client subsystem <b>1010</b> includes data entry devices <b>1001</b> (keyboard, mouse, voice input, etc.), a display device <b>1002</b> (CRT, LCD panel, mobile communication device, etc.), and a physical platform <b>1003</b> (personal computer, hand held computer, internet appliance, etc.) including a processing unit, memory, and other data processing resources. Software running in the client includes a browser <b>1005</b> or a &#x201c;thin&#x201d; software client <b>1006</b> such as may be provided on personal digital assistants, mobile phones, smartphones, and other simple Internet appliances which may not support full browser functionality. The browser <b>1005</b> includes Java Virtual Machine or a NET environment which supports the client-server dialog. Likewise, the &#x201c;thin&#x201d; software client <b>1006</b> may support the client-server dialog. Finally, an interface <b>1004</b> to the network communication media <b>1030</b> is provided. The communication media <b>1030</b> may be a private or public, local area network or a wide area network using wired, wireless or optical media in representative systems.</p>
<p id="p-0140" num="0153">The server subsystem <b>1030</b> includes network server resources <b>1007</b> (for instance, network, hardware tokens, SMS protocol, and mail servers) an account management utility <b>1008</b> for the user accounts&#x2014;subject of the authentication process, and a platform <b>1009</b> including a processing unit, memory, disk space and other data processing resources. Core program <b>1010</b> supporting the user/server mutual authentication process is included in the server subsystem <b>1030</b>. The core program may be implemented using Java or NET object-oriented technology for examples. Also, a to server database (or a directory service, such as LDAP) and database connector <b>1012</b> is included. Finally, an interface <b>1011</b> to communication media for server LAN/WAN communication-lines <b>1020</b> is provided. In some embodiments, the server and server data are implemented with security features to protect user account information files from intruders.</p>
<p id="p-0141" num="0154"><figref idref="DRAWINGS">FIG. 9B</figref> illustrates a basic architecture of an embodiment of a client-server system according to the present invention, including support for Random Partial Shared Secret Recognition (RPSSR) algorithms like Random Partial Password/PIN Recognition (RPPPR), Random Partial Digitized Path Recognition (RPDPR), Random Partial Digitized Path Recognition with a Secret Challenge (RPDPR-SC), and Random Partial Pattern Recognition (RPPR) user/server mutual authentication protocols utilizing two communication channels (such as an Internet browser at terminal <b>4080</b> and a personalized mobile communication device <b>5010</b> or a personalized hardware token <b>8010</b>) to split and deliver, for example, a one-time authentication challenge OTAC <b>5020</b> and grid <b>5020</b> to user's <b>4090</b> mobile phone with a software client <b>5010</b> or just delivering OTAC to hardware token <b>8010</b>, and a one-time Server Response or a grid and Server Response to an Internet browser. The two channel processes involve more than one communication channel between server side resources and a user having access to two data processing machines, where the data processing machines may be logical or physical machines. Client sub-system <b>1010</b> and server sub-system <b>1030</b> along with communication-lines <b>2330</b> assure bi-directional message exchange between server <b>1030</b> and Internet browser or a screen of user's <b>4090</b> desktop or laptop's <b>2303</b> terminal <b>2301</b> and <b>4080</b>. Hardware/software token code is time or event synchronized with a token server which is integrated into authentication server sub-system <b>1030</b>, whereas mobile phone service provider <b>24010</b>, directed by authentication server sub-system <b>1030</b>, exchanges encrypted messages resulting in grid and Server Challenge <b>5020</b> displayed in user's <b>4090</b> mobile phone <b>5010</b> through Mobile Phone Service Provider Server <b>24020</b>. Thus, in the case of a browser on a computer connected via a wired Internet connection, and an application on a cellular telephone having access to a wireless telephone network, the first data processing machine can be said to comprise an application executed on a first processor having an interface to a physical communication medium, and the second data processing machine comprises an application executed on a second processor having an interface to a different physical communication medium. In other embodiments, the first and second data processing machines may share an interface to a physical communication medium, such that the first communication channel comprises a first application layer channel using the physical communication medium, and the second communication channel comprises a second application layer channel using the same physical communication medium. For example in this case, the first data processing machine may comprise a browser executed on a computer while the second data processing machine comprises an e-mail client, or another instantiation of a browser, executed on the same computer. In other embodiments, the first data processing machine comprises a first software application, while the second data processing machine comprises a second software application executed on the same computer, even though they may share the same physical communication medium, or utilize a separate physical communication media coupled to the computer. In general, the first and second data processing machines are characterized by having separately addressable interfaces for communication with the server side resources so that first and second communication channels can be established, so that any party attempting to intercept the authentication session would be required to intercept communications for both of the separately addressable interfaces.</p>
<p id="p-0142" num="0155">While the present invention is disclosed by reference to the preferred embodiments and examples detailed above, it is to be understood that these examples are intended in an illustrative rather than in a limiting sense. It is contemplated that modifications and combinations will readily occur to those skilled in the art, which modifications and combinations will be within the spirit of the invention and the scope of the following claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An interactive, computer implemented method for execution by server-side computer resources in a client-server system to authenticate a server to a user at a client platform, comprising:
<claim-text>storing data defining a graphical representation of a frame of reference adapted for rendering on a display, the frame of reference including a number of pre-defined locations in the frame of reference having coordinates on the frame of reference;</claim-text>
<claim-text>storing a data set associated with the user in a memory accessible using server-side computer resources, the data set including at least a first shared secret identifying a server path, the server path including a plurality of the pre-defined locations on the frame of reference;</claim-text>
<claim-text>receiving via data communication, a user identifier from the client platform and initiating a current session;</claim-text>
<claim-text>presenting via data communications to the client platform a current session instance of the graphical representation of the frame of reference for the current session, the current session instance having characters in the number of pre-defined locations according to a pattern different than used in other sessions with the client;</claim-text>
<claim-text>sharing between the client platform and the server a challenge for use in the current session identifying a random subset of the plurality of the pre-defined locations in the server path; and</claim-text>
<claim-text>sharing between the client platform and the server a response distinct from the challenge including characters that match the characters positioned in the random subset of the plurality of the pre-defined locations in the server path, wherein the response for use in the current session is produced by the server and delivered to the client platform;</claim-text>
<claim-text>whereby the user at the client platform is capable of verifying that the server has access to the first shared secret identifying the server path.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, including:
<claim-text>storing a second shared secret associated with the user in a memory accessible using server-side computer resources, the second shared secret identifying a response path including a plurality of the pre-defined locations on the frame of reference, in which characters in the response path in the current session instance comprise the response.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, including:
<claim-text>storing an additional shared secret associated with the user in a memory accessible using server-side computer resources, the additional shared secret identifying a watermark path including a plurality of the pre-defined locations on the frame of reference, and in which watermark contents including indicators, such as colors or characters, are positioned in the watermark path in the current session instance.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, including:
<claim-text>storing a second shared secret associated with the user in a memory accessible using server-side computer resources, the second shared secret identifying a response path including a plurality of the pre-defined locations on the frame of reference, in which characters in the response path in the current session instance comprise the response; and</claim-text>
<claim-text>storing a third shared secret associated with the user in a memory accessible using server-side computer resources, the third shared secret identifying a challenge path including a plurality of the pre-defined locations on the frame of reference, in which characters in the challenge path in the current session instance comprise the challenge.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein locations in the plurality of pre-defined locations in the challenge path are embedded in the server path.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, including:
<claim-text>storing a second shared secret associated with the user in a memory accessible using server-side computer resources, the second shared secret identifying a challenge path including a plurality of the pre-defined locations on the frame of reference, in which characters in the challenge path in the current session instance comprise the challenge.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the user has access to, and the client platform includes, a first data processing machine and a second data processing machine, and including:
<claim-text>receiving the data communication including the user identifier via data communication on a first channel from the first data processing machine, and wherein the sharing of at least one of the challenge and the response is carried out outside the first channel using the second data processing machine.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the user has access to, and the client platform includes, a first data processing machine and a second data processing machine, and including
<claim-text>storing an additional shared secret associated with the user in a memory accessible using server-side computer resources, the additional shared secret identifying a watermark path including a plurality of the pre-defined locations on the frame of reference, and in which watermark contents including indicators such as colors or pre-defined characters are positioned in the watermark path in the current session instance;</claim-text>
<claim-text>receiving the data communication including the user identifier via data communication on a first channel from the first data processing machine; and</claim-text>
<claim-text>sharing data matching the watermark contents with the user outside the first channel using the second data processing machine.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein locations in the plurality of pre-defined locations in the watermark path are embedded in the server path.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the user has access to, and the client platform includes, a first data processing machine and a second data processing machine, and including:
<claim-text>storing a second shared secret associated with the user in a memory accessible using server-side computer resources, the second shared secret identifying a challenge path including a plurality of the pre-defined locations on the frame of reference, in which characters in the challenge path in the current session instance comprise the challenge;</claim-text>
<claim-text>receiving the data communication including the user identifier via data communication on a first channel from the first data processing machine; and</claim-text>
<claim-text>sharing the response with the user outside the first channel using the second data processing machine.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the user has access to, and the client platform includes, a first data processing machine and a second data processing machine, and including:
<claim-text>storing a second shared secret associated with the user in a memory accessible using server-side computer resources, the second shared secret identifying a response path including a plurality of the pre-defined locations on the frame of reference, in which characters in the response path in the current session instance comprise the response;</claim-text>
<claim-text>receiving the data communication including the user identifier via data communication on a first channel from the first data processing machine; and</claim-text>
<claim-text>sharing the challenge with the user outside the first channel using the second data processing machine.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the user has access to, and the client platform includes, a first data processing machine and a second data processing machine, and including:
<claim-text>receiving the data communication including the user identifier via data communication on a first channel from the first data processing machine;</claim-text>
<claim-text>presenting the current session instance of the graphical representation of the frame of reference for the current session to the user outside the first channel using the second data processing machine; and</claim-text>
<claim-text>wherein the sharing of at least one of the challenge and the response is carried out by data communications on the first channel using the first data processing machine.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, including sharing the challenge with the user outside the first channel using the second data processing machine; and
<claim-text>wherein sharing the response between the client platform and the server is carried out by data communications on the first channel using the first data processing machine.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the user has access to, and the client platform includes, a first data processing machine and a second data processing machine, and including:
<claim-text>storing a second shared secret associated with the client in a memory accessible using server-side computer resources, the second shared secret identifying a response path including a plurality of the pre-defined locations on the frame of reference, in which characters in the response path in the current session instance comprise the response; and</claim-text>
<claim-text>storing a third shared secret associated with the client in a memory accessible using server-side computer resources, the third shared secret identifying a challenge path including a plurality of the pre-defined locations on the frame of reference, in which characters in the challenge path in the current session instance comprise the challenge;</claim-text>
<claim-text>storing an additional shared secret associated with the client in a memory accessible using server-side computer resources, the additional shared secret identifying a watermark path including a plurality of the pre-defined locations on the frame of reference, and in which watermark contents including indicators such as colors or pre-defined characters are positioned in the watermark path in the current session instance;</claim-text>
<claim-text>receiving the data communication including the client identifier via data communication on a first channel from the first data processing machine; and</claim-text>
<claim-text>sharing data matching the watermark contents with the client outside the first channel using the second data processing machine.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, including:
<claim-text>after sharing the response and the challenge with the user, initiating an authentication protocol for authentication of the user to the server; and</claim-text>
<claim-text>upon authentication of the user to the server, enabling access by the user to a protected resource.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said characters represent numbers.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said challenge includes characters produced at the client platform and delivered to the server.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said challenge includes characters manually generated at the client platform, or manually edited or approved by the user at the client platform, and delivered to the server.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said current session instance includes a set of characters in shared secret locations, said set of characters comprising the challenge.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. An authentication system, comprising:
<claim-text>data processing resources, including a processor, memory and a communication interface;</claim-text>
<claim-text>data stored in the memory defining a graphical representation of a frame of reference adapted for rendering on a display, the frame of reference including a number of pre-defined locations in the frame of reference having coordinates on the frame of reference;</claim-text>
<claim-text>a data set associated with a user stored in the memory, the data set including at least a first shared secret identifying a server path, the server path including a plurality of the pre-defined locations on the frame of reference;</claim-text>
<claim-text>an authentication server adapted for execution by the data processing resources, including
<claim-text>logic to initiate a current session upon receiving a user identifier from the user at a client platform via the communication interface;</claim-text>
<claim-text>logic to present via data communications to the user a current session instance of the graphical representation of the frame of reference for the current session, the current session instance having characters in the number of pre-defined locations according to a pattern different than used in other sessions with the user; and</claim-text>
<claim-text>logic by which a challenge for use in the current session identifying a random subset of the plurality of the pre-defined locations in the server path and a response distinct from the challenge including characters that match the characters positioned in the random subset of the plurality of the pre-defined locations in the server path are shared between the server and the user, wherein the response for use in the current session is produced by the server and delivered to the user, whereby the user is capable of verifying that the server has access to the first shared secret identifying the server path.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The authentication system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, including:
<claim-text>a second shared secret associated with the user stored in the memory, the second shared secret identifying a response path including a plurality of the pre-defined locations on the frame of reference, in which characters in the response path in the current session instance comprise the response.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The authentication system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, including:
<claim-text>an additional shared secret associated with the user stored in the memory accessible using server-side computer resources, the additional shared secret identifying a watermark path including a plurality of the pre-defined locations on the frame of reference, and in which watermark contents including indicators, such as colors or characters, are positioned in the watermark path in the current session instance.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The authentication system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, including:
<claim-text>a second shared secret associated with the user stored in the memory, the second shared secret identifying a response path including a plurality of the pre-defined locations on the frame of reference, in which characters in the response path in the current session instance comprise the response; and</claim-text>
<claim-text>a third shared secret associated with the user stored in the memory, the third shared secret identifying a challenge path including a plurality of the pre-defined locations on the frame of reference, in which characters in the challenge path in the current session instance comprise the challenge.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The authentication system of <claim-ref idref="CLM-00023">claim 23</claim-ref>, wherein locations in the plurality of pre-defined locations in the challenge path are embedded in the server path.</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The authentication system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, including:
<claim-text>a second shared secret associated with the user stored in the memory, the second shared secret identifying a challenge path including a plurality of the pre-defined locations on the frame of reference, in which characters in the challenge path in the current session instance comprise the challenge.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The authentication system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the user has access to, and the client platform includes, a first data processing machine and a second data processing machine, and including
<claim-text>logic to receive the data communication including the user identifier via data communication on a first channel from the first data processing machine, and wherein the logic to share of at least one of the challenge and the response operates outside the first channel using the second data processing machine.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The authentication system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the user has access to, and the client platform includes, a first data processing machine and a second data processing machine, and including:
<claim-text>an additional shared secret associated with the user stored in the memory, the additional shared secret identifying a watermark path including a plurality of the pre-defined locations on the frame of reference, and in which watermark contents including indicators such as colors or pre-defined characters are positioned in the watermark path in the current session instance;</claim-text>
<claim-text>logic to receive the data communication including the user identifier via data communication on a first channel from the first data processing machine; and</claim-text>
<claim-text>logic to share data matching the watermark contents with the user outside the first channel using the second data processing machine.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. The authentication system of <claim-ref idref="CLM-00027">claim 27</claim-ref>, wherein locations in the plurality of pre-defined locations in the watermark path are embedded in the server path.</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. The authentication system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the user has access to, and the client platform includes, a first data processing machine and a second data processing machine, and including:
<claim-text>a second shared secret associated with the user stored in the memory, the second shared secret identifying a challenge path including a plurality of the pre-defined locations on the frame of reference, in which characters in the challenge path in the current session instance comprise the challenge;</claim-text>
<claim-text>logic to receive the data communication including the user identifier via data communication on a first channel from the first data processing machine; and</claim-text>
<claim-text>the logic by which the response is shared between the user and the server operates outside the first channel using the second data processing machine.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00030" num="00030">
<claim-text>30. The authentication system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the user has access to, and the client platform includes, a first data processing machine and a second data processing machine, and including:
<claim-text>a second shared secret associated with the user stored in the memory, the second shared secret identifying a response path including a plurality of the pre-defined locations on the frame of reference, in which characters in the response path in the current session instance comprise the response;</claim-text>
<claim-text>logic to receive the data communication including the user identifier via data communication on a first channel from the first data processing machine; and</claim-text>
<claim-text>the logic by which the challenge is shared between the user and the server operates outside the first channel using the second data processing machine.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00031" num="00031">
<claim-text>31. The authentication system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the user has access to, and the client platform includes, a first data processing machine and a second data processing machine, and including:
<claim-text>logic to receive the data communication including the user identifier via data communication on a first channel from the first data processing machine; and</claim-text>
<claim-text>logic to present the current session instance of the graphical representation of the frame of reference for the current session to the user outside the first channel using the second data processing machine;</claim-text>
<claim-text>wherein the logic by which at least one of the challenge and the response is shared between the server and the user operates by data communications on the first channel using the first data processing machine.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00032" num="00032">
<claim-text>32. The authentication system of <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein the logic by which the challenge is shared between the user and the server operates outside the first channel using second data processing machine; and
<claim-text>the logic by which the response is shared between the user and the server operates by data communications on the first channel using the first data processing machine.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00033" num="00033">
<claim-text>33. The authentication system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the user has access to, and the client platform includes, a first data processing machine and a second data processing machine, and including:
<claim-text>a second shared secret associated with the user stored in the memory, the second shared secret identifying a response path including a plurality of the pre-defined locations on the frame of reference, in which characters in the response path in the current session instance comprise the response;</claim-text>
<claim-text>a third shared secret associated with the user stored in the memory, the third shared secret identifying a challenge path including a plurality of the pre-defined locations on the frame of reference, in which characters in the challenge path in the current session instance comprise the challenge;</claim-text>
<claim-text>an additional shared secret associated with the user stored in the memory, the additional shared secret identifying a watermark path including a plurality of the pre-defined locations on the frame of reference, and in which watermark contents including indicators such as colors or pre-defined characters are positioned in the watermark path in the current session instance;</claim-text>
<claim-text>logic to receive the data communication including the user identifier via data communication on a first channel from the first data processing machine; and</claim-text>
<claim-text>logic to share data matching the watermark contents between the server and the user outside the first channel using the second data processing machine.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00034" num="00034">
<claim-text>34. The authentication system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, including logic to execute an authentication protocol to authenticate the user to the server after executing the logic to present the current session instance to the user; and upon authentication of the user to the server, to enable access by the user to a protected resource.</claim-text>
</claim>
<claim id="CLM-00035" num="00035">
<claim-text>35. The authentication system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein said characters represent numbers.</claim-text>
</claim>
<claim id="CLM-00036" num="00036">
<claim-text>36. The authentication system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein said challenge includes characters produced at the client platform and delivered to the server.</claim-text>
</claim>
<claim id="CLM-00037" num="00037">
<claim-text>37. The authentication system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein said challenge includes characters manually generated at the client platform, or manually edited or approved by the user at the client platform, and delivered to the server.</claim-text>
</claim>
<claim id="CLM-00038" num="00038">
<claim-text>38. The authentication system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein said current session instance includes a set of characters in shared secret locations, said set of characters comprising the challenge.</claim-text>
</claim>
<claim id="CLM-00039" num="00039">
<claim-text>39. A computer program product comprising a non-transitory machine readable data storage medium storing a computer program executable to perform a protocol enabling authentication of a server by a user at a client platform, the protocol including:
<claim-text>storing data defining a graphical representation of a frame of reference adapted for rendering on a display, the frame of reference including a number of pre-defined locations in the frame of reference having coordinates on the frame of reference;</claim-text>
<claim-text>storing a data set associated with the user in a memory accessible using server-side computer resources, the data set including at least a first shared secret identifying a server path, the server path including a plurality of the pre-defined locations on the frame of reference;</claim-text>
<claim-text>receiving via data communication, a user identifier from the user and initiating a current session;</claim-text>
<claim-text>presenting via data communications to the user a current session instance of the graphical representation of the frame of reference for the current session, the current session instance having characters in the number of pre-defined locations according to a pattern different than used in other sessions with the user;</claim-text>
<claim-text>sharing between the user and the server a challenge for use in the current session identifying a random subset of the plurality of the pre-defined locations in the server path; and</claim-text>
<claim-text>sharing between the user and the server a response distinct from the challenge including characters that match the characters positioned in the random subset of the plurality of the pre-defined locations in the server path, wherein the response for use in the current session is produced by the server and delivered to the user;</claim-text>
<claim-text>whereby the user is capable of verifying that the server has access to the first shared secret identifying the server path.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00040" num="00040">
<claim-text>40. The computer program product of <claim-ref idref="CLM-00039">claim 39</claim-ref>, wherein said challenge includes characters produced at the client platform and delivered to the server.</claim-text>
</claim>
<claim id="CLM-00041" num="00041">
<claim-text>41. The computer program product of <claim-ref idref="CLM-00039">claim 39</claim-ref>, wherein said challenge includes characters manually generated at the client platform, or manually edited or approved by the user at the client platform, and delivered to the server.</claim-text>
</claim>
<claim id="CLM-00042" num="00042">
<claim-text>42. The computer program product of <claim-ref idref="CLM-00039">claim 39</claim-ref>, wherein said current session instance includes a set of characters in shared secret locations, said set of characters comprising the challenge.</claim-text>
</claim>
</claims>
</us-patent-grant>
