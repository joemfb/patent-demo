<!DOCTYPE us-patent-grant SYSTEM "us-patent-grant-v44-2013-05-16.dtd" [ ]>
<us-patent-grant lang="EN" dtd-version="v4.4 2013-05-16" file="US08625780-20140107.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20131224" date-publ="20140107">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>08625780</doc-number>
<kind>B2</kind>
<date>20140107</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>12449333</doc-number>
<date>20080208</date>
</document-id>
</application-reference>
<us-application-series-code>12</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>DE</country>
<doc-number>10 2007 007 699</doc-number>
<date>20070209</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>550</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>K</subclass>
<main-group>1</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>9</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>9</main-group>
<subgroup>28</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>9</main-group>
<subgroup>30</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>11</main-group>
<subgroup>30</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>12</main-group>
<subgroup>14</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20140107</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>380 28</main-classification>
<further-classification>380 29</further-classification>
<further-classification>380 30</further-classification>
<further-classification>713189</further-classification>
</classification-national>
<invention-title id="d2e71">Reduction of side-channel information by interacting crypto blocks</invention-title>
<us-references-cited>
<us-citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4316055</doc-number>
<kind>A</kind>
<name>Feistel</name>
<date>19820200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>380 37</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5253294</doc-number>
<kind>A</kind>
<name>Maurer</name>
<date>19931000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>380264</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5982895</doc-number>
<kind>A</kind>
<name>Dworkin et al.</name>
<date>19991100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>380271</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6088802</doc-number>
<kind>A</kind>
<name>Bialick et al.</name>
<date>20000700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>726  3</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6195752</doc-number>
<kind>B1</kind>
<name>Pfab</name>
<date>20010200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713168</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6230179</doc-number>
<kind>B1</kind>
<name>Dworkin et al.</name>
<date>20010500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>708492</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6724894</doc-number>
<kind>B1</kind>
<name>Singer</name>
<date>20040400</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>380 28</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>7483936</doc-number>
<kind>B2</kind>
<name>Janssen et al.</name>
<date>20090100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>708513</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>7496616</doc-number>
<kind>B2</kind>
<name>Chari et al.</name>
<date>20090200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>708250</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>7787620</doc-number>
<kind>B2</kind>
<name>Kocher et al.</name>
<date>20100800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>380 29</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>7797361</doc-number>
<kind>B2</kind>
<name>Lazich et al.</name>
<date>20100900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>708251</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2002/0169968</doc-number>
<kind>A1</kind>
<name>Gammel et al.</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>713189</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2004/0039928</doc-number>
<kind>A1</kind>
<name>Elbe et al.</name>
<date>20040200</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>713189</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2004/0105541</doc-number>
<kind>A1</kind>
<name>Elbe et al.</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by applicant</category>
<classification-national><country>US</country><main-classification>380 28</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2007/0244950</doc-number>
<kind>A1</kind>
<name>Golic</name>
<date>20071000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>708250</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2007/0273408</doc-number>
<kind>A1</kind>
<name>Golic</name>
<date>20071100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>326 93</main-classification></classification-national>
</us-citation>
<us-citation>
<patcit num="00017">
<document-id>
<country>DE</country>
<doc-number>100 61 997</doc-number>
<kind>A1</kind>
<date>20020700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00018">
<document-id>
<country>DE</country>
<doc-number>100 61 998</doc-number>
<kind>A1</kind>
<date>20020700</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<patcit num="00019">
<document-id>
<country>GB</country>
<doc-number>2 306 722</doc-number>
<kind>A</kind>
<date>19970500</date>
</document-id>
</patcit>
<category>cited by applicant</category>
</us-citation>
<us-citation>
<nplcit num="00020">
<othercit>Springer-Verlag Berlin Heidelberg, Julio Lopez and Ricardo Dahab, &#x201c;Fast Multiplication on Elliptic Curves over GF (2m) without Precomputation&#x201d;, pp. 316-327, 1999.</othercit>
</nplcit>
<category>cited by applicant</category>
</us-citation>
</us-references-cited>
<number-of-claims>19</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>380 28</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>4</number-of-drawing-sheets>
<number-of-figures>7</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20100095133</doc-number>
<kind>A1</kind>
<date>20100415</date>
</document-id>
</related-publication>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="001" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Peter</last-name>
<first-name>Steffen</first-name>
<address>
<city>Frankfurt</city>
<country>DE</country>
</address>
</addressbook>
<residence>
<country>DE</country>
</residence>
</us-applicant>
<us-applicant sequence="002" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Methfessel</last-name>
<first-name>Michael</first-name>
<address>
<city>Frankfurt</city>
<country>DE</country>
</address>
</addressbook>
<residence>
<country>DE</country>
</residence>
</us-applicant>
<us-applicant sequence="003" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Langendorfer</last-name>
<first-name>Peter</first-name>
<address>
<city>Frankfurt</city>
<country>DE</country>
</address>
</addressbook>
<residence>
<country>DE</country>
</residence>
</us-applicant>
<us-applicant sequence="004" app-type="applicant" designation="us-only">
<addressbook>
<last-name>Vater</last-name>
<first-name>Frank</first-name>
<address>
<city>Cottbus</city>
<country>DE</country>
</address>
</addressbook>
<residence>
<country>DE</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="001" designation="us-only">
<addressbook>
<last-name>Peter</last-name>
<first-name>Steffen</first-name>
<address>
<city>Frankfurt</city>
<country>DE</country>
</address>
</addressbook>
</inventor>
<inventor sequence="002" designation="us-only">
<addressbook>
<last-name>Methfessel</last-name>
<first-name>Michael</first-name>
<address>
<city>Frankfurt</city>
<country>DE</country>
</address>
</addressbook>
</inventor>
<inventor sequence="003" designation="us-only">
<addressbook>
<last-name>Langendorfer</last-name>
<first-name>Peter</first-name>
<address>
<city>Frankfurt</city>
<country>DE</country>
</address>
</addressbook>
</inventor>
<inventor sequence="004" designation="us-only">
<addressbook>
<last-name>Vater</last-name>
<first-name>Frank</first-name>
<address>
<city>Cottbus</city>
<country>DE</country>
</address>
</addressbook>
</inventor>
</inventors>
</us-parties>
<assignees>
<assignee>
<addressbook>
<orgname>IHP GmbH&#x2014;Innovations for High Performance, Microelectronics</orgname>
<role>03</role>
<address>
<city>Frankfurt (Oder)</city>
<country>DE</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Kosowski</last-name>
<first-name>Carolyn B</first-name>
<department>2431</department>
</primary-examiner>
</examiners>
<pct-or-regional-filing-data>
<document-id>
<country>WO</country>
<doc-number>PCT/EP2008/051560</doc-number>
<kind>00</kind>
<date>20080208</date>
</document-id>
<us-371c124-date>
<date>20090803</date>
</us-371c124-date>
</pct-or-regional-filing-data>
<pct-or-regional-publishing-data>
<document-id>
<country>WO</country>
<doc-number>WO2008/096004</doc-number>
<kind>A </kind>
<date>20080814</date>
</document-id>
</pct-or-regional-publishing-data>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A cryptography device which reduces side channel information including a first computing block adapted to either encrypt or decrypt received first input data and to output the encrypted or decrypted first input data as first output data at a first data output, a second computing block adapted to either encrypt or decrypt received second input data and to output the encrypted or decrypted second input data as second output data at a second data output, and a control unit connected to the first and second computing blocks and adapted in a first operating condition on the one hand to partially or completely assign the first output data to the first computing block as the first input data and on the other hand to completely or partially assign the first output data to the second computing block as part of the second input data.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="89.92mm" wi="113.03mm" file="US08625780-20140107-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="220.05mm" wi="137.41mm" file="US08625780-20140107-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="228.43mm" wi="145.29mm" file="US08625780-20140107-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="187.45mm" wi="144.86mm" file="US08625780-20140107-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="114.05mm" wi="138.77mm" file="US08625780-20140107-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is for entry into the U.S. national phase under &#xa7;371 for International Application No. PCT/EP2008/051560 having an international filing date of Feb. 8, 2008, and from which priority is claimed under all applicable sections of Title 35 of the United States Code including, but not limited to, Sections 120, 363 and 365(c), and which in turn claims priority under 35 USC &#xa7;119 to German Patent Application No. 10 2007 007 699.3 filed on Feb. 9, 2007.</p>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">1. Technical Field</p>
<p id="p-0004" num="0003">The invention concerns a cryptography device, an integrated circuit with a cryptography device, a cryptographic method and a computer program product for carrying out the cryptographic method.</p>
<p id="p-0005" num="0004">2. Discussion of Related Art</p>
<p id="p-0006" num="0005">In cryptography the term side channel attack is used to denote any attack based on information gained from the physical implementation of a cryptosystem, so-called side channel information, which is therefore not based on theoretical weaknesses in the algorithms. For example timing information, power consumption, electromagnetic leaks or even sound can respectively provide an additional source of information which can be exploited to break the system. Many side channel attacks require considerable technical knowledge of the internal operations of a cryptosystem in which the cryptography method is implemented.</p>
<p id="p-0007" num="0006">A distinction is drawn between different kinds of side channel attacks:</p>
<p id="p-0008" num="0007">Timing attacks are attacks which are based on measuring the time that various computations of the cryptosystem require for implementation.</p>
<p id="p-0009" num="0008">Architecture side effect attacks are attacks which utilize the side effects in the performance of a computation on a given machine architecture (for example erasing cache lines).</p>
<p id="p-0010" num="0009">Power consumption measurement attacks are attacks which utilize the changing power consumption of the hardware during computations.</p>
<p id="p-0011" num="0010">TEMPEST (van Eck or radiation monitoring) attacks are attacks which are based on the leakage of electromagnetic radiation and which provide direct plaintext or other information.</p>
<p id="p-0012" num="0011">Acoustic cryptoanalysis attacks are attacks which exploit sound as the source of information which is emitted during the computations (similarly to the power consumption measurement attacks).</p>
<p id="p-0013" num="0012">The underlying principle in all the above-specified cases is that physical effects which are produced while the cryptosystem is operating can provide useful extra information about secrets in the cryptosystem, for example a cryptographic key, in part status information, full or partial plaintext and so forth. The term cryptophthora (secret degradation) is sometimes used to express the degradation of the secret content of the secret key due to side channel leaks.</p>
<p id="p-0014" num="0013">In a timing attack data movement into and out of the CPU or the memory of the hardware on which the cryptosystem or the algorithm is running is monitored. By observing how long it takes to transfer the key information, it is possible to determine how long the key is at that moment.</p>
<p id="p-0015" num="0014">Internal computation steps in many cipher implementations provide information about the plaintext or the key. Some of that information can be inferred by the monitored timing. Alternatively, in a timing attack, it is also possible to monitor how long the cryptographic algorithm lasts. That alone can provide sufficient information to be useful in cryptoanalytical terms.</p>
<p id="p-0016" num="0015">A power consumption attack can provide similar information by monitoring the power lines for the hardware, specifically the CPU. Just as with a timing attack, considerable information can be acquired under some circumstances in relation to some algorithms.</p>
<p id="p-0017" num="0016">A fundamental and inevitable physical fact is that changes in the flow of current produce radio waves so that whatever is producing current flows&#x2014;at least in principle&#x2014;makes a van Eck (so-called TEMPEST) attack possible. If the current flows are structured to distinguishable degrees, which is usually the case, the radiation can be recorded in order to infer information about the operations on the corresponding hardware.</p>
<p id="p-0018" num="0017">A further inevitable physical fact in circuits is that flowing currents heat the material through which they are flowing. Therefore depending on the respective current flow heat is also continuously dissipated to the environment. By virtue of the law of thermodynamics continually changing thermally induced mechanical stresses are produced in that way. Those stresses are the main causes of low level sound emissions from computing CPUs. It is conceivable that information about the computations of cryptosystems and algorithms can also be acquired in that way.</p>
<p id="p-0019" num="0018">If the surface of the CPU chip or in some cases the casing of the CPU can be monitored, infrared images can also provide information about the operations which the CPU is performing. This is known as a thermal imaging attack.</p>
<p id="p-0020" num="0019">A further form of side channel attacks is power analysis in which the attacker analyzes the current consumption of cryptographic hardware such as a smart card, a manipulation-secure black box, a microchip etc. The power analysis can provide information as to what a device is just doing and can even supply material of the key.</p>
<p id="p-0021" num="0020">Differential power analysis is an expansion of power analysis, which can allow the attacker to compute intermediate values of data blocks and key blocks.</p>
<p id="p-0022" num="0021">Viewing graphs of time and current which a cryptosystem consumes can often exactly show what the cryptosystem is doing at a given time.</p>
<p id="p-0023" num="0022">The currents flowing through a cryptosystem are usually low. However electrical laboratories usually have devices for measuring them precisely enough, reliably and frequently. It is reasonable for a developer of a cryptosystem to assume that an adversary has access to such devices.</p>
<p id="p-0024" num="0023">Power analysis does not look for weaknesses in the algorithms or protocols than rather in their implementations. It affords a possible way of &#x201c;looking into&#x201d; hardware which is otherwise manipulation-secure. For example a DES key processing plan includes 28 bit key registers rotating. To save time most embodiments simply check the least significant bit to see whether it is a 1. If that is the case it divides the register by two and attaches the 1 at the left-hand end. Power analysis can make clear the difference between a register with a 1 and a register with a 0, if that happens. That can expose information about the key used. DES permutations which are frequently simply implemented in software terms even offer still more information by virtue of decision branches.</p>
<p id="p-0025" num="0024">Differential power analysis (DPA) is a method of attacking a cryptosystem in which the changing power consumption of microprocessors during the execution of cryptographic programs is utilized. It is also a side channel attack. By investigating a statistical analysis of the measured power consumption during many runs of a given cryptographic algorithm it may be possible to obtain information about the secret key stored on a smart card if the implementation of the algorithm is not DPA-manipulation-secure.</p>
<p id="p-0026" num="0025">Another known countermeasure includes changes to the algorithm so that the cryptographic operations are applied to data which, with the instantaneous value, are in a mathematical relationship which survives the cryptographic operations. That is referred to as camouflaging and uses an algorithm based on number theory like factorizing or discrete logarithms.</p>
<p id="p-0027" num="0026">U.S. Pat. No. 6,724,894 describes a method of protection from side channel attacks, specifically from differential power analysis, in which temporary keys are produced, by the secret key being modified with a random number. In a first step the message to be encrypted is encrypted with the temporary key. Thereafter a further function is applied to the message, which implements encryption, that encryption being identical to that which can be achieved directly with the unmodified key. That has the advantage that the information which is susceptible to side channel attacks varies continually with the random number and in that case the susceptibility of the cryptosystem to side channel attacks is reduced. It will be noted however that in this case it is necessary to produce a random number which as is known involves difficulties. Furthermore the complication and effort involved in encryption and decryption is greater if the random number becomes great. A further disadvantage is that the system is based on frequent changes in the temporary key because otherwise an attacker can calculate the secret key if the user does not change the key sufficiently frequently. Furthermore the same key is used at least during encryption of a message.</p>
<p id="p-0028" num="0027">DE 100 61 997 A1 describes a cryptography processor with a central processing unit and a co-processor, wherein the co-processor includes a plurality of subcomputing devices arranged in parallel and a single control unit coupled to each of the plurality of subcomputing devices. In that case the control unit provides that an exclusive useful data computation is distributed to the individual subcomputing devices, in the form of suboperations which are to be performed in parallel and/or serial mode.</p>
<p id="p-0029" num="0028">DE 100 61 998 A1 describes a cryptography processor having a plurality of co-processors, a central processing unit for control of the plurality of co-processors and a bus for connecting each co-processor to the central processing unit. In that case each co-processor has a control unit, a plurality of registers and an arithmetic unit. The cryptography processor is in the form of a multifunctional processor and can be used either for useful data computations or for dummy computations, but not at the same time for both kinds of computation.</p>
<p id="p-0030" num="0029">The object of the invention is to provide a cryptography device and a method of encrypting or decrypting data, which each reduce the susceptibility to side channel attacks in a simple fashion.</p>
<heading id="h-0003" level="1">DISCLOSURE OF INVENTION</heading>
<p id="p-0031" num="0030">In accordance with the invention there is proposed a cryptography device including
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0031">a first computing block adapted to either encrypt or decrypt received first input data and to output the encrypted or decrypted first input data as first output data at a first data output,</li>
        <li id="ul0002-0002" num="0032">a second computing block adapted to either encrypt or decrypt received second input data and to output the encrypted or decrypted second input data as second output data at a second data output, and</li>
        <li id="ul0002-0003" num="0033">a control unit connected to the first and second computing blocks and adapted in a first operating condition on the one hand to partially or completely assign the first output data to the first computing block as the first input data and on the other hand to completely or partially assign the first output data to the second computing block as part of the second input data.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0032" num="0034">To prevent or at least considerably hinder information leakage of the cryptography device in accordance with the invention an artificial noise is introduced into the operation flow of the encryption algorithm. The noise is made available by the first computing block as first output data to be additionally processed in the second computing block.</p>
<p id="p-0033" num="0035">The cryptography device is so designed that clever manipulation of the side channel information is effected. That results in a reduction in the side channel information. That has the advantage that an attacker who taps into side channel information would need so long to compute the secret key that the key can be classified as secure as long as it is used on a cryptography device according to the invention. In addition the data to be encrypted can also not be obtained by including side channel information.</p>
<p id="p-0034" num="0036">In particular smart cards as are used for the decryption of encrypted TV programs can be unlimitedly analyzed by any possessor to extract the integrated key. In particular power analysis operations and DPA (differential power analysis) can be carried a plurality of times. In that case, as described above, the dynamic pattern of power consumption is analyzed. When using the cryptography device according to the invention in a smart card however key extraction is no longer possible as the side channel information no longer has a regular pattern.</p>
<p id="p-0035" num="0037">Therefore in an embodiment there is proposed a smart card which includes a cryptography device according to the invention.</p>
<p id="p-0036" num="0038">The expression computing block is used in the present application as being synonymous with the expressions cryptoblock or encryption and decryption block.</p>
<p id="p-0037" num="0039">In an embodiment no data are passed to the first computing block from the exterior at the first data input in the first operating condition.</p>
<p id="p-0038" num="0040">Cryptosystems are divided into symmetrical and asymmetrical cryptosystems. A symmetrical cryptosystem is a cryptosystem which in contrast to an asymmetrical cryptosystem uses the same key for encryption and decryption. The expression encryption method is therefore used in the present application in connection with symmetrical cryptosystems also as an abbreviation for encryption and decryption methods, for the sake of simplicity.</p>
<p id="p-0039" num="0041">Therefore in a variant of the cryptography device the first or second computing block is adapted to compute the received first or second input data in accordance with a symmetrical encryption or decryption method.</p>
<p id="p-0040" num="0042">Symmetrical cryptosystems have the advantage that the cryptography device can carry out an encryption method with a short key length.</p>
<p id="p-0041" num="0043">Symmetrical encryption methods are divided into block ciphers and stream ciphers. A block cipher is an algorithm which encrypts a data block of typically 64 or 128 bits by means of a key value. In that case the encrypted block is of the same length.</p>
<p id="p-0042" num="0044">Symmetrical encryption algorithms can be block encryption methods such as for example DES, AES (Advanced Encryption Standard), Triple-DES, IDEA (International Data Encryption Algorithm), Blowfish, Twofish, Anubis, A5/3 (KASUMI), Camellia, FEAL, Lucifer, Magenta, MARS, MISTY, SEED, Serpent, SHACAL, Skipjack, TEA, CAST-128, CAST-256, RC2, RC5 and RC6.</p>
<p id="p-0043" num="0045">A stream cipher is symmetrical, continuous and delay-free encryption or decryption of a data stream. A stream cipher encrypts or decrypts messages bit-by-bit or character-by-character. Examples of stream ciphers are: A5/1, A5/2, Rabbit, RC4, SEAL or QUISCI.</p>
<p id="p-0044" num="0046">The symmetrical encryption method used can be one of the aforementioned.</p>
<p id="p-0045" num="0047">The common secret key must however be exchanged prior to the communication when a symmetrical encryption method is involved. That can entail serious difficulties. There are therefore the asymmetrical encryption algorithms.</p>
<p id="p-0046" num="0048">An asymmetrical cryptomethod is a cryptomethod in which each of the communicating parties possesses a pair of keys comprising a secret part (private key) and a non-secret part (public key). The private key enables its holder for example to decrypt data, generate digital signatures or authenticate himself. The public key makes it possible for anyone to encrypt data for the key holder, to check the digital signatures thereof or to authenticate him. Accordingly a cryptography device which operates in accordance with an asymmetrical method involves two keys, depending on whether it encrypts or decrypts. In contrast to a symmetrical cryptosystem the communicating parties therefore do not have to know a common private key. That has the advantage that no exchange of a private key is necessary. Therefore in a variant of the cryptography device the first or the second computing block is adapted to compute the received first or second input data in accordance with an asymmetrical encryption or decryption method. The suitable asymmetrical encryption algorithms include RSA, Rabin and Elgamal cryptosystems. In recent years encryption with elliptic curves (Elliptic Curve Cryptography, ECC) has become more and more popular as, with the same level of security, it manages with substantially smaller keys.</p>
<p id="p-0047" num="0049">Asymmetrical encryption methods are more computation-intensive than symmetrical encryption methods. Therefore the area of application of symmetrical and asymmetrical encryption methods is different. In this connection a combination of the two encryption methods can be useful. In an embodiment of the cryptography device therefore the first computing block is adapted to compute the received first input data in accordance with a symmetrical encryption or decryption method and the second computing block is adapted to compute the received second input data in accordance with an asymmetrical encryption or decryption method. Thus for example a private key of a symmetrical method can be encrypted and transmitted by means of an asymmetrical encryption method. Then larger amounts of data can be transmitted encrypted in accordance with the symmetrical method.</p>
<p id="p-0048" num="0050">In an embodiment of the cryptography device the first computing block is adapted to compute the received first input data in accordance with an AES encryption or decryption method and the second computing block is adapted to compute the received second input data in accordance with an ECC encryption or decryption method.</p>
<p id="p-0049" num="0051">In an embodiment the asymmetrically operating encryption and decryption block includes a key change unit. That is adapted to make a public key available in the encryption operation and to make a private key available in the decryption operation.</p>
<p id="p-0050" num="0052">The computing block can also include a key storage device. In that way the cryptography device can encrypt to different addressees. The keys can also be a fixed constituent part of the computing block so that they cannot be changed.</p>
<p id="p-0051" num="0053">In an embodiment of the cryptography device the control unit is adapted to assign to at least one computing block useful data and additionally pseudo-random data as first and second input data respectively, which are not required for actual encryption or decryption respectively. Those pseudo-random data are also referred to as dummy data.</p>
<p id="p-0052" num="0054">The term useful data is used to denote those data which the message actually to be encrypted or decrypted contains. In the example of decryption of a TV program useful data are the encrypted image data of the program. The useful data are obtained from a useful data source. In the example of the TV program the useful data source is a broadcast or cable receiver. The dummy data are more or less random additional data which make no contribution to actual encryption or decryption and which after passing through a computing block are sorted out and discarded. They only serve to interfere with the side channel information by virtue of additional computing operations or a modified operation flow. In this embodiment the control unit can pass the dummy data to the data input of the first or the second computing block. In an embodiment of the cryptography device the dummy data are formed by a part of the first output data or by the first output data overall. In this embodiment the first output data are preferably not passed to a device output of the cryptography device. In this embodiment therefore dummy data assigned to the second computing block in the first operating condition are preferably the first output data. Dummy data assigned to the first computing block in the first operating condition are in this embodiment preferably also the first output data.</p>
<p id="p-0053" num="0055">In an alternative embodiment which is not preferred here the dummy data can be produced by a separate dummy data source which is therefore different from the first and second computing blocks, or by the control unit.</p>
<p id="p-0054" num="0056">The first computing block can couple its output data back to its data input and in that case use an AES encryption algorithm and run for example in the CFB or CBC mode. A part of the output data of the first computing block can be passed by the control unit to the data input of the second computing block, which additionally processes those data. In that case the second computing block can use an ECC encryption algorithm. In that respect the encrypted output data of the first computing block are not outputted from the cryptography device but encrypted again in order then to be encrypted afresh, and so forth. If those encrypted data are tapped off after each round the result obtained is a pseudo-random data stream. That pseudo-random data stream or also random data stream is used to produce a randomness in the ECC execution in the second computing block. The randomness provides that no conclusions about the keys used or the processed data can be drawn from the time and power consumption of the ECC-computing block. In an embodiment of the cryptography device the control unit is adapted to stop and start operation of the first or second computing block independently of each other.</p>
<p id="p-0055" num="0057">The control unit can thus switch the computing blocks on and off independently of each other, for example when a computing block is not being used. On the other hand the control unit can interfere with the side channel information by irregularly stopping and starting one or both computing blocks.</p>
<p id="p-0056" num="0058">Multiplication operations are highly computation-intensive in digital systems. A large number of multiplication steps are performed in the case of encryption algorithms.</p>
<p id="p-0057" num="0059">In an embodiment of the cryptography device therefore the second computing block is adapted to perform polynomial multiplications required in encryption or decryption by means of a Karatsuba method. Multiplication in accordance with the Karatsuba algorithm has the advantage that it requires fewer computing operations than a conventional multiplication operation. The use thereof can also lead to an increase in speed because its transit time complexity is lower.</p>
<p id="p-0058" num="0060">In a further embodiment of the cryptography device at least one computing block has a plurality of parallel multiplication units. Multiplication units are modules which can perform a multiplication operation in one or more clock cycles of a digital system like the cryptography device. The use of parallel multiplication units produces an increase in speed in multiplication operations. In contrast to serial processing a large number of multiplication operations can be performed at the same time.</p>
<p id="p-0059" num="0061">A combination of a multiplication operation in accordance with Karatsuba and the use of a plurality of parallel multiplication units is also advantageous as, in multiplication in accordance with Karatsuba, the numbers to be multiplied are broken down into smaller parts. Those parts can then be simultaneously computed with parallel multiplication units.</p>
<p id="p-0060" num="0062">In an embodiment the control device is adapted to distribute an m-bit multiplication iteratively for example to 9 partial multiplications of the bit length m/4. For that purpose 9 clock cycles are then required. In that case a computing block is adapted to perform the multiplication operations of the length m/4 in a respective clock cycle, by 9 parallel multiplication units of the size m/16 (m/4/4) being instantiated in the computing block. The operations of the multiplication units are then performed in parallel relationship. If m/4/4 is greater than 8 bits the control unit can further break down the partial multiplication operations.</p>
<p id="p-0061" num="0063">In an embodiment the number m=256. This requires 9 clock cycles, in which a respective multiplication operation of the length of 64 bits is performed. The control unit is adapted to break down the 64 bit multiplication into 9 blocks of the size 16 bits and each of those 9 16-bit blocks again into 9 partial multiplication operations of the length of 4 bits. The parallel multiplication units can be combined to afford 64-bit blocks. Each 64-bit block has internally for example 81 4-bit multiplication units which can be addressed in parallel relationship.</p>
<p id="p-0062" num="0064">In an embodiment of the cryptography device the control unit is adapted to predetermine for the first or second computing block a number of computing operations which are to be carried out in parallel relationship per clock unit in each case either from one clock unit to another clock unit or at greater time intervals. The number of computing operations to be carried out in parallel relationship, per clock unit, can be predetermined by the control unit for example by a control signal. The first computing block or the second computing block or both computing blocks are in this embodiment preferably adapted to extract control information contained in a control signal received from the control unit and to adjust the number of computing operations to be carried out in parallel relationship in the respective computing block, per clock unit, in dependence on the extracted control information.</p>
<p id="p-0063" num="0065">The control signal can include the control information about the number of computing operations to be carried out in parallel relationship, per clock unit, in the form of pseudo-random data. For that purpose the control information can be obtained for example by extracting data out of the stream of the first output data. In an embodiment the extracted first output data are additionally subjected to a conversion computation operation to form the control information from the receiving computing block.</p>
<p id="p-0064" num="0066">In different embodiments, depending on the respective quantitative requirement in terms of control information, all first output data or only parts of the first output data can be used as control information.</p>
<p id="p-0065" num="0067">This property of the cryptography device permits very delicate manipulation of the side channel information because no multiplication operation can now be assumed to be interference-free as the number of manipulation operations carried in parallel relationship and thus also the power consumption and the time consumption for each multiplication operation continually changes. In the event of non-use of all parallel multiplication units the total computing time for encryption or decryption is admittedly prolonged, but power consumption is not increased because no additional multiplication operations have to be performed.</p>
<p id="p-0066" num="0068">Power analysis can most easily distinguish decision branchings when executing the cryptographic program because the cryptosystem performs various operations, in which case different amounts of power are consumed, depending on which decision branch is executed. For that reason it is desirable if from the point of view of power consumption, there are no differences in decision branchings in the case of cryptographic implementations. Rotations, permutations and logical operations (such as for example XOR) should as far as possible last for the same length of time and consume a similar amount of power.</p>
<p id="p-0067" num="0069">There are however some algorithms with inherently meaningful and informative branchings. In a variant therefore two useful data sources can also output two different useful data streams. In that case each computing block is adapted to process a respective useful data stream.</p>
<p id="p-0068" num="0070">In this variant of the cryptography device the first computing block is connected to a first device input for first useful data and a device output and the second computing block is connected to a second device input for second useful data and the same device output. In this case the control unit is adapted in a second operating condition to pass both the first output data to the device output and not to the second computing block and not to the first computing block and also return the second output data outputted by the second computing block back to the device output.</p>
<p id="p-0069" num="0071">The advantage of this variant is that the first computing block also processes useful data. In that way two different input data or input data streams can be encrypted or decrypted at the same time. For example, as already described hereinbefore, the first computing block can implement symmetrical encryption or decryption and the second computing block can implement asymmetrical encryption or decryption with different input data.</p>
<p id="p-0070" num="0072">A further advantage is that the dynamics of the overall power consumption of the cryptography device in that operating condition involve the superimpositioning of the dynamics of the power consumption of the two computing blocks operating in parallel relationship. Accordingly it is not possible for each computing block to be analyzed individually from the exterior. It is thus more difficult to infer the operations, in particular the decision branchings, in a computing block, on the basis of the side channel information. That means that the secret internal key is protected.</p>
<p id="p-0071" num="0073">The device output can also be divided so that each computing block has its own dedicated device output. In the case of only one device output the output data of the computing blocks can be multiplexed onto the device output.</p>
<p id="p-0072" num="0074">In a further embodiment of the cryptography device the control unit is adapted to change between the first and the second operating conditions.</p>
<p id="p-0073" num="0075">In this embodiment the control unit can determine the operating condition in which the cryptography device is to run. In the first operating condition the output data of the first computing block are coupled back onto its data input and proportionately fed to the second computing block as additional input data. In the second operating condition the computing blocks operate simultaneously on various input data, or only one computing block operates.</p>
<p id="p-0074" num="0076">In an embodiment of the cryptography device the control unit is adapted to predetermine for the first or second computing block one of various predeterminable successions of computing operations.</p>
<p id="p-0075" num="0077">The advantage of altering the sequence of computing operations is a further reduction in the side channel information delivered. Cryptoanalysis is based on the assumption of regularity in the analyzed algorithm. That regularity is lost by interchanging successions of computing operations. If an attacker does not know which operations are carried out in succession because the sequence of the computing operations continually changes, that can make it difficult to infer the internal system state and the position in the algorithm. Accordingly the secret key and the secret data are protected from cryptoanalysis.</p>
<p id="p-0076" num="0078">In a further embodiment of the cryptography device the control unit is adapted to predetermine the succession of the computing operations in the second computing block. The succession of computing operations can be predetermined by the control unit for example by a control signal. In this embodiment the second computing block is preferably adapted to extract the succession control information contained in a control signal received from the control unit and to adjust the succession of computing operations to be carried out in dependence on the extracted succession control information.</p>
<p id="p-0077" num="0079">The control signal can contain the succession control information relating to the succession of computing operations to be carried out in the form of pseudo-random data, that is to say dummy data. That has the advantage that the randomness of the succession of computing operations can be increased. For that purpose the succession control information can be obtained for example by extracting data from the stream of the first output data. In an embodiment the output data extracted are additionally subjected to a conversion computation operation for forming the succession control information by the receiving second computing block.</p>
<p id="p-0078" num="0080">In different embodiments depending on the respective quantitative requirement of control information, all first output data or only parts of the first output data can be used as succession control information. In an embodiment of the cryptography device the first or the second computing block includes a multiplicity of multiplication units. The control unit is adapted to pass useful data in parallel relationship to a first subset of the multiplication units and dummy data to a second subset of the multiplication units.</p>
<p id="p-0079" num="0081">That has the advantage that dummy data and useful data can be processed in each multiplication operation. That means that the side channel information is disturbed, for each multiplication operation. An attacker can thus ascertain less information about a secret key or processed data if exclusively useful data are processed in no multiplication operation. The control unit can also pass useful data to a first subset of the multiplication units, dummy data to a second subset and no data to a third subset.</p>
<p id="p-0080" num="0082">In an embodiment the cryptography device can be in the first operating condition and the first output data can be used as dummy data. In that case the control unit at least partially assigns the first output data to the second computing block. The first output data represent pseudo-random data and are highly suitable as dummy data. They are assigned to the second computing block in the first operating condition and not outputted at a device output. The dummy data can be used to carry out additional computing operations with the dummy data in the second computing block or to predetermine the number of computing operations to be carried out in parallel relationship. In an embodiment dummy data can be passed to a proportion of parallel multiplication units and useful data can be passed to another proportion. In an embodiment it is possible to control the succession of the computing operations with the dummy data. Accordingly the first output data are control data for the second computing block. In that case the second computing block can have an additional data input to which the dummy data are assigned to control the succession of the computing operations in the second computing block. In all cases the side channel information of the cryptosystem is disturbed and thereby reduced.</p>
<p id="p-0081" num="0083">In a further embodiment the control unit is adapted to feed a first data stream to the first computing block from the exterior and a second data stream to the second computing block from the exterior. The control unit is further adapted to pass the first output data at least partially to the second computing block and not to pass same to the device output. The first output data can be used as dummy data.</p>
<p id="p-0082" num="0084">In an embodiment the control unit can comprise a plurality of separate parts which can in part also be integrated into the computing blocks.</p>
<p id="p-0083" num="0085">In a variant of the cryptography device the first and second computing blocks and the control unit are respectively hardware-implemented. In a further variant an integrated circuit includes the cryptography device. Integrated circuits are a usual form of hardware implementation. They can be produced inexpensively in large numbers. In a further embodiment an ASIC includes the cryptography device.</p>
<p id="p-0084" num="0086">The use of hard-wired hardware for the cryptography device has the advantage that the power consumption fluctuates less in operation. That is the case in particular if the cryptography device includes a multiplicity of parallel multiplication units. That reduces the signal-noise ratio of the side channel information. That provides for a reduction in the side channel information.</p>
<p id="p-0085" num="0087">It is noted that a combination of the various embodiments of the cryptography device, that are described in this application, is also possible, insofar as the embodiments by way of example are not described expressly as alternatives to each other.</p>
<p id="p-0086" num="0088">The underlying technical object of the invention is attained in accordance with a further aspect of the invention by a control module for a cryptography device.</p>
<p id="p-0087" num="0089">Hereinafter in accordance with a second aspect of the invention there is proposed a method of encrypting or decrypting data.</p>
<p id="p-0088" num="0090">The method includes encrypting or decrypting first input data with a first computing block and outputting the encrypted or decrypted first input data as first output data at a first data output. In addition the method includes encrypting or decrypting second input data with a second computing block and outputting the encrypted or decrypted second input data as second output data at a second data output. The method further includes assigning the first output data on the one hand either partially or completely as input data to the first computing block and on the other hand assigning same either partially or completely as part of the second input data to the second computing block.</p>
<p id="p-0089" num="0091">In the method presented the first output data are therefore partially or completely fed back to the first data input.</p>
<p id="p-0090" num="0092">The advantages of the method according to the invention are apparent from the above-described advantages of the cryptography device in accordance with the first aspect of the invention. Embodiments by way of example of the method are described hereinafter.</p>
<p id="p-0091" num="0093">In an embodiment of the method assigning of the first output data to the second computing block includes a control in respect of the succession of the computing operations in the second computing block on the basis of the first output data.</p>
<p id="p-0092" num="0094">In a further embodiment of the method assigning of the first output data to the second computing block includes a control in respect of the number of computing operations to be carried out in parallel relationship in the second computing block on the basis of the first output data.</p>
<p id="p-0093" num="0095">The method can be carried out with the cryptography device in accordance with the first aspect of the invention. In that case the proportion of side channel information is reduced, whereby for example a secret key used or other secret data are protected from cryptoanalytical attacks.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0094" num="0096">Further embodiments by way of example are described hereinafter with reference to the Figures.</p>
<p id="p-0095" num="0097"><figref idref="DRAWINGS">FIG. 1</figref> shows a simplified block diagram of a first embodiment of a cryptography device in a first operating condition,</p>
<p id="p-0096" num="0098"><figref idref="DRAWINGS">FIG. 2</figref> shows the cryptography system of <figref idref="DRAWINGS">FIG. 1</figref> in a second operating condition in which a control unit separates a data path,</p>
<p id="p-0097" num="0099"><figref idref="DRAWINGS">FIG. 3</figref> shows a diagrammatic view of a second embodiment of the cryptography device,</p>
<p id="p-0098" num="0100"><figref idref="DRAWINGS">FIG. 4</figref> shows a diagrammatic view of a third embodiment of the cryptography device,</p>
<p id="p-0099" num="0101"><figref idref="DRAWINGS">FIG. 5</figref>, for describing in greater detail the mode of operation of the cryptography devices of <figref idref="DRAWINGS">FIGS. 1 through 4</figref>, diagrammatically shows parallel multiplication units as can be used in the second computing block in a first fashion,</p>
<p id="p-0100" num="0102"><figref idref="DRAWINGS">FIG. 6</figref>, for describing in greater detail the mode of operation of the cryptography devices of <figref idref="DRAWINGS">FIGS. 1 through 4</figref>, diagrammatically shows parallel multiplication units as can be used in the second computing block in a second fashion, and</p>
<p id="p-0101" num="0103"><figref idref="DRAWINGS">FIG. 7</figref> shows a flow chart for an iteration operation in encryption and decryption in accordance with an elliptic curve cryptography (ECC) algorithm.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0102" num="0104"><figref idref="DRAWINGS">FIG. 1</figref> is a simplified view of a cryptography device <b>100</b> in a first operating condition. The cryptography device <b>100</b> includes a first computing block <b>102</b> with a first data input <b>106</b> and a first data output <b>116</b> and a control unit <b>120</b> which assigns first output data <b>116</b> from the first data output <b>116</b> to the first data input <b>106</b> as first input data <b>112</b> so that the first data output <b>116</b> is coupled back to the first data input <b>106</b>. That is illustrated by an arrow at the control unit <b>120</b>. That data path is also referred to as the feedback data path. Data and the respective in/outputs are identified by the same references. The cryptography device <b>100</b> thus operates in the first operating condition already mentioned hereinbefore. The first computing block <b>102</b> and the second computing block <b>104</b> are also referred to hereinafter respectively as encryption and decryption blocks.</p>
<p id="p-0103" num="0105">In addition the control unit <b>120</b> partially or completely assigns first output data <b>116</b> to a second data input <b>108</b> of a second computing block <b>104</b> as second input data <b>110</b>. In that way partially first output data <b>110</b> and partially useful data <b>130</b> occur at the second data input <b>108</b>. The first output data <b>110</b> fed to the second data input <b>108</b> are also referred to as additional data hereinafter for the sake of brevity. &#x201c;Partially&#x201d; can here signify either proportionate in parallel relationship or proportionate in serial relationship. In one case therefore in regard to one part useful data <b>130</b> and in regard to the other part additional data <b>110</b> occur in parallel relationship, while in the other case useful data <b>130</b> occur for a given number of system clocks and additional data <b>110</b> occur for a given number of subsequent or preceding system clocks.</p>
<p id="p-0104" num="0106">The actual task of the cryptography device <b>100</b> is to process the useful data <b>130</b> and <b>132</b>, that is to say to encrypt or decrypt same and to output encrypted or decrypted useful data to the exterior. The first output data <b>116</b> are not outputted to the exterior.</p>
<p id="p-0105" num="0107">Useful data <b>130</b> and <b>132</b> can be data which have been transmitted from the outside to the cryptography device <b>100</b>. The computing blocks <b>102</b> and <b>104</b> are encryption and decryption blocks. That means that they can encrypt or decrypt input data <b>106</b> and <b>108</b> and can output them at their data outputs <b>116</b> and <b>114</b>.</p>
<p id="p-0106" num="0108">The succession of the computing operations in the second computing block <b>104</b> or a number of computing operations to be carried out in parallel relationship in the second computing block <b>104</b> can be controlled by the additional data in a preferred embodiment. Such an embodiment is described in greater detail hereinafter with reference to <figref idref="DRAWINGS">FIG. 4</figref>. In such a case the second computing block <b>104</b> can also encrypt or decrypt exclusively useful data. In this case therefore the useful data perform solely the function of control information.</p>
<p id="p-0107" num="0109">In the present embodiment the additional data <b>110</b> however can also have solely the function of reducing the side channel information which can be obtained from the cryptography device <b>100</b> by the additional encryption or decryption of the additional data in the second computing block <b>104</b>. In such a particularly simple embodiment therefore the computing blocks <b>102</b> and <b>104</b> can also be formed without functional blocks for evaluation and conversion of the corresponding control information.</p>
<p id="p-0108" num="0110"><figref idref="DRAWINGS">FIG. 2</figref> shows an embodiment of the cryptography device <b>100</b> of <figref idref="DRAWINGS">FIG. 1</figref> in a second operating condition. This however does not mean that the respective parts are necessarily identical to those of <figref idref="DRAWINGS">FIG. 1</figref> in terms of their function and structure.</p>
<p id="p-0109" num="0111">In the <figref idref="DRAWINGS">FIG. 2</figref> embodiment the control unit <b>120</b> interrupts the feedback data path <b>116</b> towards <b>112</b>. That means that the data path <b>116</b> is also interrupted towards <b>110</b> to the second data input <b>108</b>. The computing blocks <b>102</b> and <b>104</b> only process useful data <b>132</b> and <b>130</b> in parallel relationship as no additional data <b>112</b> and <b>110</b> are assigned to the data inputs <b>106</b> and <b>108</b>. The useful data are outputted to the exterior at the first data output <b>116</b> and the second data output <b>114</b>. That can take place by way of a device output (not shown).</p>
<p id="p-0110" num="0112"><figref idref="DRAWINGS">FIG. 3</figref> diagrammatically shows a further embodiment of a cryptography device <b>200</b> also referred to as a cryptography system <b>200</b>, according to the invention. Here the functional elements corresponding to the cryptography device <b>100</b> of <figref idref="DRAWINGS">FIG. 1</figref> are denoted by the same references as in <figref idref="DRAWINGS">FIG. 1</figref>, for the sake of simplicity. That however does not mean that the respective functional elements are necessarily identical to those of <figref idref="DRAWINGS">FIG. 1</figref> in respect of their function and structure. The cryptography device <b>200</b> includes a first computing block <b>102</b> with a first input <b>106</b> for first input data <b>106</b> and a first data output <b>116</b> for output data <b>116</b>. The cryptography system <b>200</b> is adapted to encrypt or decrypt first input data <b>106</b> and output same at the data output <b>116</b>. In addition the cryptography device <b>200</b> includes a second computing block <b>104</b> with a second data input <b>108</b> and a second data output <b>114</b>. The computing block <b>104</b> is adapted to encrypt or decrypt input data <b>108</b> and output same at the second data output <b>114</b>. The computing blocks <b>102</b> and <b>104</b> are also referred to hereinafter as encryption and decryption blocks. In an embodiment input data and output data can also be data streams. For the sake of simplicity the same reference is used for inputs and outputs and the corresponding input data and output data which can be respectively taken off there.</p>
<p id="p-0111" num="0113">The cryptography system <b>200</b> is adapted to operate like the cryptography device <b>100</b> in the first and second operating conditions as described hereinbefore.</p>
<p id="p-0112" num="0114">In the first operating condition the first encryption and decryption block <b>102</b> is connected to the second data input <b>108</b> of the second encryption and decryption block <b>104</b> by way of a data switch <b>118</b>.</p>
<p id="p-0113" num="0115">The cryptography system <b>200</b> further includes a control unit <b>120</b>. The control unit is connected to the first and second computing blocks <b>102</b> and <b>104</b> respectively, a switch <b>122</b> and the data switch <b>118</b>. The control unit <b>120</b> is adapted to control the first computing block <b>102</b> and the second computing block <b>104</b> and to make information such as for example status information available or to query information.</p>
<p id="p-0114" num="0116">In the first operating mode the control unit <b>120</b> opens the switch <b>122</b> so that no output data <b>116</b> are outputted at a first device output <b>134</b>.</p>
<p id="p-0115" num="0117">The first computing block <b>102</b> has a first data input <b>106</b> and a first data output <b>116</b> connected by way of the data switch <b>118</b> to the first data input <b>106</b>. In the first operating condition the control unit <b>120</b> regulates the data switch <b>118</b> so that at least a part of the data stream <b>112</b> at the data output <b>116</b> is fed back to the first data input <b>106</b>. In addition the control unit <b>120</b> controls the data switch <b>118</b> so that a part of the first output data <b>110</b> is transferred to the second data input <b>108</b> of the second computing block <b>104</b>. The first output data <b>110</b> transmitted to the second computing block <b>104</b> form additional data as described hereinbefore and in the present context also the dummy data also referred to above.</p>
<p id="p-0116" num="0118">In the first operating mode the second computing block <b>104</b> processes on the one hand the additional data <b>110</b> produced by the first computing block <b>102</b> and on the other hand useful data <b>130</b>, in each case in proportionate relationship. In this embodiment the data are at the second data input <b>108</b>. The second computing block <b>104</b> can also process only useful data <b>130</b> or only additional data <b>110</b>.</p>
<p id="p-0117" num="0119">In an embodiment the amount of additional input data <b>110</b> which the first computing block <b>102</b> transmits to the second computing block <b>104</b> is adjustable by way of the control unit <b>120</b> and the data switch <b>118</b>. The additional input data <b>110</b> which are computed are not useful data <b>130</b>. They serve only to camouflage the calculations of the second computing block <b>104</b>. Those additional calculations serve to reduce side channel information according to the invention. In the case of particularly security-relevant calculations the quantity of the additional data <b>110</b> can be for example 90% and only 10% of the data are useful data <b>130</b> with which the encryption or decryption operation respectively is to be carried out. The additional input data <b>110</b> produced by the first computing block <b>102</b> by feedback are pseudo-random data. That can occur in such a way that a data sequence is delivered to the first data input <b>106</b> of the first computing block <b>102</b>, which are encrypted there and are fed back again to the input <b>106</b>, in which case at least a part of the first output data <b>110</b> is passed to the second computing block <b>104</b>. At least a part of the fed-back data <b>112</b> passes a further time through the first computing block <b>102</b>, is encrypted once again and is fed back again and at least partially transmitted to the second computing block <b>104</b>.</p>
<p id="p-0118" num="0120">In an embodiment the succession of the computing operations in the second computing block <b>104</b> is controlled by the useful data <b>110</b>. The number of computing operations to be performed in parallel relationship can also be controlled by the additional data at the second data input <b>108</b>.</p>
<p id="p-0119" num="0121">In a further variant the first computing block <b>102</b> can include a second input (not shown) for fed-back data <b>112</b>. In that case the first computing block <b>102</b> receives an input data stream <b>106</b> and a fed-back data stream <b>112</b>, in which case it processes input data <b>106</b> and data <b>112</b> which are fed back, in a certain division ratio. At least parts of the data of the feedback line <b>112</b> are passed to the second computing block <b>104</b> as additional input data <b>110</b>. That provides for a high degree of randomness in respect of the data <b>110</b> transmitted to the second computing block <b>104</b>. Alternative that division ratio in respect of fed-back data <b>112</b> and input data <b>132</b> can be adjusted by a buffer <b>126</b>.</p>
<p id="p-0120" num="0122">In a further embodiment disposed upstream of the data inputs <b>106</b> and <b>108</b> are buffers <b>126</b> and <b>124</b> to provide for intermediate storage of data occurring at the input of the buffers <b>126</b> and <b>124</b> and to pass them to the computing blocks <b>102</b> and <b>104</b> in accordance with the capacity thereof. In this embodiment the buffer <b>124</b> has two inputs, one for the useful data <b>130</b> and one for the additional data <b>110</b>. The buffer <b>124</b> can mix the useful data <b>130</b> and the additional data <b>110</b> in serial or parallel relationship in respect of time as described. The buffers <b>126</b> and <b>124</b> can be connected to the control unit <b>120</b> and the input data streams <b>106</b> and <b>108</b> can be controlled by the control unit <b>120</b>. In an embodiment the buffers <b>126</b> and <b>124</b> can be queried by the computing blocks <b>102</b> and <b>104</b>. For that purpose, when computing capacity becomes free, a computing block <b>102</b>, <b>104</b> can call up data from the respective buffer <b>126</b>, <b>124</b>. That can be effected by predefined data packets being called up with a clock or an address line can be provided, connecting the buffer <b>126</b>, <b>124</b> and the respective computing block <b>102</b>, <b>104</b> in order directly to address data and call same up out of the buffer <b>126</b>, <b>124</b>. An address line or a clock line can also connect the control unit <b>120</b> and the buffers <b>126</b> and <b>124</b>. Control of the buffers <b>126</b> and <b>124</b> can also be predetermined by an external system clock. The buffers <b>126</b> and <b>124</b> can also control the proportions of additional data <b>110</b> or <b>112</b> and the proportions of the useful data <b>132</b> and <b>130</b>, in which case the control unit <b>120</b> can predetermine the respective proportions when it is connected to the buffers <b>126</b> and <b>124</b>.</p>
<p id="p-0121" num="0123">In an embodiment the cryptography device <b>200</b> includes a random source (not shown) which is not manipulatable, such as for example the noise of a resistor, which is converted into a digital signal. A number outputted as a digital signal can be used for initialization of the first computing block <b>102</b> in the first operating condition. An alternative is to generate a random number and to store same in the first use thereof in a non-volatile memory. The memory can be included in the buffer <b>126</b>. In the further course of operation the random number is then used as an initialization vector. After conclusion of the computations the result is stored in the same memory, that is to say the previous random vector is replaced by up-to-date output data. In this embodiment that memory is no longer manipulatable from the exterior after the first initialization.</p>
<p id="p-0122" num="0124">In the present embodiment the control unit <b>120</b> is connected to a user interference UI or to another control device. That makes it possible for the operating condition and other settings such as the proportions of useful data <b>130</b> and the proportions of the additional data <b>110</b> and so forth to be predetermined from the exterior.</p>
<p id="p-0123" num="0125">In the second operating condition the control unit <b>120</b> closes the switch <b>122</b>. At the same time it blocks the data switch <b>118</b> at both outputs <b>112</b> and <b>110</b>. In that way no more data are fed back from the data output <b>116</b> of the first computing block <b>102</b> to the first data input <b>106</b>. In this operating condition, no additional input data <b>110</b> are also transmitted to the second data input <b>108</b> of the second computing block <b>104</b> because the data switch <b>118</b> is in the blocked condition. Accordingly the two computing blocks <b>102</b> and <b>104</b> can encrypt or decrypt input data or data streams <b>130</b> and <b>132</b> independently of each other and in parallel relationship. The output data <b>116</b> and <b>114</b> of the first and second computing blocks <b>102</b> and <b>104</b> are outputted at a respective device output <b>134</b>, <b>136</b>.</p>
<p id="p-0124" num="0126">In a variant the first computing block <b>102</b> is an AES encryption and decryption block (Advanced Encryption Standard) and the second computing block <b>104</b> is an ECC computing block (Elliptic Curve Cryptosystem).</p>
<p id="p-0125" num="0127"><figref idref="DRAWINGS">FIG. 4</figref> shows a further variant of a cryptography device <b>300</b>. The cryptography device <b>300</b> is substantially identical to the variant of <figref idref="DRAWINGS">FIG. 3</figref> with the distinction that the second computing block <b>104</b> has an additional data input <b>138</b> and the data switch <b>118</b> is not connected directly to the buffer <b>124</b> but to a second data switch <b>140</b>. The second data switch <b>140</b> is connected to the control unit <b>120</b> and is controllable thereby (not shown).</p>
<p id="p-0126" num="0128">In the first operating condition the additional data <b>110</b> are assigned at least in respect of a proportion thereof to the second computing block <b>104</b> by the data switch <b>140</b>. In that respect the control unit <b>120</b> is adapted to control the data switch <b>140</b> so that at least a proportion of the additional data <b>110</b> can be fed to the buffer <b>124</b> to be combined with the useful data <b>130</b> and at least a proportion of the useful data <b>110</b> can be fed to the additional data input <b>138</b>. The additional data input <b>138</b> can also be referred to as sequence control input <b>138</b>. The additional data <b>110</b> can be referred at the sequence control input <b>138</b> as succession control information or as succession control information flow. In this embodiment the second computing block <b>104</b> is adapted to extract succession control information contained in a control signal received from the control unit <b>120</b> and to adjust the succession of computing operations to be performed in dependence on the extracted succession control information. For that purpose the second computing block <b>104</b> can include an operation control block (not shown). More specifically the succession of the computing operations in the second computing block <b>104</b> is controlled by way of the succession control information flow at the sequence control input <b>138</b>.</p>
<p id="p-0127" num="0129">The control unit <b>120</b>, by means of the additional data <b>110</b>, can also predetermine the number of computing operations to be carried out in parallel relationship, per clock unit, for example by a control signal. In this embodiment the first computing block <b>102</b> or the second computing block <b>104</b> or both computing blocks <b>102</b> and <b>104</b> are preferably adapted to extract control information from the incoming stream of additional data <b>110</b> and/or <b>112</b> and to adjust the number of computing operations to be carried out in parallel relationship in the respective computing block <b>102</b>, <b>104</b> per clock unit in dependence on the extracted control information. The additional data <b>110</b> and <b>112</b> form or include control signals in that respect.</p>
<p id="p-0128" num="0130">In an embodiment the control unit <b>120</b> can change between various operating settings. In a first operating setting the second computing block <b>104</b> processes the additional data <b>110</b> and the useful data <b>130</b>. In that case the additional data <b>110</b> and the useful data <b>130</b> are mixed in the buffer <b>124</b>. In other words, of a part of data processed in parallel relationship by the second computing block <b>104</b> a first proportion comprises useful data <b>130</b> and a second proportion comprises additional data <b>110</b>. The control unit <b>120</b> controls the second data switch <b>140</b> so that the additional data <b>110</b> are passed through to the buffer <b>124</b>.</p>
<p id="p-0129" num="0131">In a second operating setting the second computing block <b>104</b> sequentially processes useful data <b>130</b> and after some system clock cycles additional data <b>110</b>. In that respect the buffer <b>124</b> is adapted to sequentially and repeatedly pass useful data <b>130</b> and thereafter additional data <b>110</b> to the second data input <b>108</b>. In that case the data at the second data input <b>108</b> can be in the form of data blocks. Those data blocks can be for example 256 bits in length.</p>
<p id="p-0130" num="0132">In those operating settings the second data switch <b>140</b> does not pass any additional data <b>110</b> or any control flow to the sequence control input <b>138</b>.</p>
<p id="p-0131" num="0133">In a third operating setting the second computing block <b>104</b> processes exclusively useful data <b>130</b> or useful data <b>130</b> and additional data <b>110</b>. In that case the second computing block <b>104</b> controls the succession of the computing operations to be carried out upon encryption or decryption on the basis of the additional data <b>110</b> at the additional data input <b>138</b>.</p>
<p id="p-0132" num="0134">In a fourth operating setting the second computing block <b>104</b> processes exclusively useful data <b>130</b> or useful data <b>130</b> and additional data <b>110</b>. In that case the second computing block <b>104</b> controls the number of computing operations to be carried out in parallel relationship on the basis of the additional data <b>110</b> or the control flow. The proportions of the useful data <b>130</b> and the additional data <b>110</b> which are delivered to the second data input <b>108</b> can in that case be controlled by the buffer <b>124</b>. In those operating settings the control unit <b>120</b> controls the second data switch <b>140</b> so that additional data <b>110</b> are passed at least in respect of a proportion thereof both to the sequence control input <b>138</b> and also to the buffer <b>124</b> and thus to the second data input <b>108</b>. The control unit <b>120</b> can also predetermine for the second data switch <b>140</b> to pass additional data <b>110</b> exclusively to the sequence control input <b>138</b>.</p>
<p id="p-0133" num="0135">The operating settings can be adjusted during the second operating condition by the control unit <b>120</b>.</p>
<p id="p-0134" num="0136">For describing in greater detail the mode of operation of the cryptography devices <b>100</b>, <b>200</b>, <b>300</b> in <figref idref="DRAWINGS">FIGS. 1 through 4</figref> <figref idref="DRAWINGS">FIG. 5</figref> diagrammatically shows parallel multiplication units <b>502</b> through <b>514</b> as can be used in the second computing block in a first fashion.</p>
<p id="p-0135" num="0137">At least one of the two computing blocks <b>102</b>, <b>104</b> includes a plurality of multiplication units <b>502</b> through <b>514</b>, also referred to as multipliers, which can perform multiplication operations, diagrammatically illustrated by arrows <b>518</b> through <b>526</b>, in parallel relationship. In that case, during each multiple multiplication step which includes a plurality of parallel multiplication operations <b>518</b> through <b>526</b> at a plurality of data units <b>528</b> through <b>536</b> which are available in parallel relationship, a different number of multiplication operations can be performed in parallel relationship. That can be a random number of parallel multiplication operations as in the present case, the five multiplication operations <b>518</b> through <b>526</b>. The remaining multiplication units <b>512</b> through <b>514</b> do not perform any multiplication operation.</p>
<p id="p-0136" num="0138">The data units <b>528</b> through <b>536</b> can be bit blocks of any length such as for example 4-bit blocks. That different number of multiplication operations <b>518</b> through <b>526</b> which are performed in parallel provides that the proportion of side channel information is reduced because for example the duration and the power consumption for a multiplication operation is different. The number of parallel multiplication operations <b>518</b> through <b>526</b> used can be controlled on the basis of the additional data <b>110</b>, <b>112</b>.</p>
<p id="p-0137" num="0139">Reference is made hereinafter to <figref idref="DRAWINGS">FIG. 6</figref>. To describe in greater detail the mode of operation of the cryptography devices <b>100</b>, <b>200</b>, <b>300</b> in <figref idref="DRAWINGS">FIGS. 1 through 4</figref>, <figref idref="DRAWINGS">FIG. 6</figref> diagrammatically shows parallel multiplication units <b>602</b> through <b>614</b> as can be used in the second computing block <b>104</b> in a second fashion. As shown in <figref idref="DRAWINGS">FIG. 6</figref> a random number of multiplication units <b>602</b> through <b>606</b> can also compute random data <b>628</b> through <b>632</b> or dummy data <b>628</b> through <b>632</b> while the other multiplication units <b>612</b>, <b>614</b> process the input data of the computing blocks <b>634</b>, <b>636</b> and some multiplication units <b>608</b>, <b>610</b> do not perform any computing operations. In that way the side channel information can be additionally reduced because random noise can be generated by still smaller data blocks. In addition the power consumption can be more accurately adjusted because multiplication operations which are not performed in the multiplication units <b>608</b>, <b>610</b> consume less power. In that respect the control unit <b>120</b> can predetermine the operations which are carried out in parallel and proportions of useful data <b>634</b>, <b>636</b> and additional data <b>628</b> through <b>632</b>. For that purpose the control unit <b>120</b> is connected to the computing blocks <b>102</b>, <b>104</b>, the buffer <b>124</b> and the second data switch <b>140</b>.</p>
<p id="p-0138" num="0140">In an embodiment multiplication operations are carried out by means of a Karatsuba multiplication. Other multiplication operations can be carried out with other implementations of multiplication.</p>
<p id="p-0139" num="0141">In an embodiment the operation flow can be variable. In that way the sequence of operations within an encryption or decryption algorithm is interchanged in accordance with a control flow insofar as the algorithm permits. Preferably the sequence is influenced randomly. By virtue of a random sequence of the operations, less is known to an observer or attacker about the processes in the cryptosystem whereby side channel information can be more poorly assigned. In this embodiment no additional power or time is consumed for the algorithm because the total number of operations remains the same.</p>
<p id="p-0140" num="0142">In an embodiment the control unit <b>120</b> controls the selection of the sequence of computing operations or the number of multiplication operations implemented in parallel. Therefore it can be connected to the computing blocks <b>102</b> and <b>104</b> by way of control lines.</p>
<p id="p-0141" num="0143">The additional data <b>110</b> and possibly the random control flow can be delivered by the first computing block <b>102</b> in the form of dummy data. In a variant the control unit <b>120</b> can receive the fed-back output data <b>116</b> and use them for control of the variable operation flow for the computing operations in the second computing block <b>104</b>. That part of the control unit <b>120</b> can also be partially or completely integrated into the second computing block <b>104</b>.</p>
<p id="p-0142" num="0144">In an embodiment at least one of the computing blocks <b>102</b> or <b>104</b> includes precisely 81 4-bit multiplier units which can be addressed in parallel.</p>
<p id="p-0143" num="0145">In an embodiment the computing block which includes a plurality of parallel multiplication units is the second computing block <b>104</b>.</p>
<p id="p-0144" num="0146">The control unit <b>120</b> can also comprise a plurality of parts and can be entirely or partially integrated in the computing blocks <b>102</b> and <b>104</b>.</p>
<p id="p-0145" num="0147">Variants are also possible, in which both computing blocks <b>102</b> and <b>104</b> can respectively perform the part of the first computing block <b>102</b> or the second computing block <b>104</b>. In that respect the control unit <b>120</b> is adapted to control the computing blocks <b>102</b> and <b>104</b> in such a way that they operate either as a first feedback computing block <b>102</b> for generation of additional data <b>112</b>, <b>110</b> or as a second computing block <b>104</b> for at least partial processing of useful data <b>130</b>.</p>
<p id="p-0146" num="0148">The additional data <b>112</b> and <b>110</b> can hereinafter also be identified as additional (pseudo-random) control signals, pseudodata, random data or random stream.</p>
<p id="p-0147" num="0149"><figref idref="DRAWINGS">FIG. 7</figref> shows a flow chart for an iteration operation in encryption/decryption in accordance with an elliptic curve cryptography (ECC) algorithm. Numbers are denoted with x through x<b>2</b> and z through z<b>2</b> and multiplication operations with M<b>1</b> through M<b>6</b>. Exponent operations are denoted by S<b>1</b> through S<b>5</b> and addition operations by A<b>1</b> through A<b>3</b>.</p>
<p id="p-0148" num="0150">That procedure has to be implemented for each bit of the key. That flow chart applies for the situation where the current bit is 1. If it is 0 the flow chart looks different. It is the inner loop of the Montgomery or Lopez/Dahab algorithm. Further details are described in: Julio Lopez and Ricardo Dahab: &#x201c;Fast multiplication on elliptic curves over gf(2m) without precomputation&#x201d;, in CHES '99: Proceedings of the First International Workshop on Cryptographic Hardware and Embedded Systems, pages 316-327, London, UK, 1999. Springer-Verlag.</p>
<p id="p-0149" num="0151">The dependencies of the operations can be seen on the graph. For example A<b>1</b> is dependent on the multiplications M<b>1</b> and M<b>2</b>. Either M<b>1</b>, M<b>2</b>, <b>51</b> or S<b>2</b> can be performed as the first operation. There is obviously a quantity of possible specific procedures. In this embodiment the specific procedure is made dependent on the additional (pseudo-random) control signals. Management and execution occurs in that case in the ECC block forming the second computing block <b>104</b>. There is a control block which controls the flow, in the second computing block <b>104</b>. That control block can also be part of the control unit <b>120</b>. It processes the control signals from the control unit <b>120</b> and the additional data <b>110</b>. In that case the control unit <b>120</b> predetermines the operating condition and possibly the operating setting, and the first computing block <b>104</b> delivers the additional or random data <b>110</b>. In the third operating settings the control unit <b>120</b> controls the succession of the computing operations in the second computing block <b>104</b> on the basis of the random data stream <b>110</b>. If the random data stream <b>110</b> delivers for example a &#x201c;0&#x201d;, M<b>1</b> is performed as the first operation. If a &#x201c;1&#x201d; is delivered it is M<b>2</b>. If a &#x201c;2&#x201d; or &#x201c;3&#x201d; comes it is S<b>1</b> or S<b>2</b> respectively.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A cryptography device including
<claim-text>a first computing block adapted to either encrypt or decrypt received first input data containing useful data and to output the encrypted or decrypted first input data as first output data at a first data output,</claim-text>
<claim-text>a second computing block adapted to either encrypt or decrypt received second input data and to output the encrypted or decrypted second input data as second output data at a second data output, and</claim-text>
<claim-text>a control unit connected to the first and second computing blocks and adapted</claim-text>
<claim-text>in a first operating condition to partially or completely assign the first output data to the first computing block as part of the first input data and to completely or partially assign the first output data to the second computing block as part of the second input data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The cryptography device as set forth in <claim-ref idref="CLM-00001">claim 1</claim-ref> in which the first or the second computing block is adapted to compute the received first or second input data in accordance with a symmetrical encryption or decryption method.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The cryptography device as set forth in <claim-ref idref="CLM-00001">claim 1</claim-ref> in which the first or the second computing block is adapted to compute the received first or second input data in accordance with an asymmetrical encryption or decryption method.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The cryptography device as set forth in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein, in the first operating condition, the control unit is adapted to assign to at least one of the computing blocks useful data and dummy data as respective first input data and second input data.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The cryptography device as set forth in <claim-ref idref="CLM-00004">claim 4</claim-ref> wherein the dummy data are formed by a part of the first output data or by the first output data.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The cryptography device as set forth in <claim-ref idref="CLM-00001">claim 1</claim-ref> in which the control unit is adapted to switch off and on operation of the first or second computing block independently of each other.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The cryptography device as set forth in <claim-ref idref="CLM-00001">claim 1</claim-ref> in which the second computing block is adapted to perform multiplications of the input data using a Karatsuba method.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The cryptography device as set forth in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein at least one of the first or second computing block has a plurality of parallel multiplication units.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The cryptography device as set forth in <claim-ref idref="CLM-00001">claim 1</claim-ref> in which the control unit is adapted to predetermine for the first or second computing block a number of computing operations which are to be carried out in parallel relationship per clock unit in each case either from one clock unit to another clock unit or at greater time intervals.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The cryptography device as set forth in <claim-ref idref="CLM-00001">claim 1</claim-ref> in which the first computing block may is connected to a first device input for first useful data and a device output and the second computing block is connected to a second device input for second useful data and the device output, and in which the control unit is configured to change a state of operation of the cryptography device from the first operating condition to a second operating condition, and the control unit is adapted in the second operating condition to pass the first output data to the device output and not to the second computing block or to the first computing block and also pass the second output data outputted by the second computing block to the device output.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The cryptography device as set forth in <claim-ref idref="CLM-00010">claim 10</claim-ref> in which the control unit is adapted to change between the first and the second operating conditions.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The cryptography device as set forth in <claim-ref idref="CLM-00001">claim 1</claim-ref> in which the control unit is adapted to predetermine for the first or second computing block one of a multiplicity of predetermined successions of computing operations.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The cryptography device as set forth in <claim-ref idref="CLM-00001">claim 1</claim-ref> in which the control unit is adapted to predetermine a succession of the computing operations in the second computing block.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The cryptography device as set forth in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the first or the second computing block comprises a multiplicity of multiplication units and the control unit is adapted to pass in parallel useful data to a first subset of the multiplication units and at least a part of the first output data to a second subset of the multiplication units.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The cryptography device as set forth in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the first and second computing blocks and the control unit are respectively hardware-implemented.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The cryptography device as set forth in <claim-ref idref="CLM-00001">claim 1</claim-ref> which is in the form of a smart card.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. An integrated circuit which comprises a cryptography device as set forth in <claim-ref idref="CLM-00001">claim 1</claim-ref>.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. A method of encrypting or decrypting data, wherein the method comprises:
<claim-text>encrypting or decrypting first input data containing useful data with a first computing block and outputting the encrypted or decrypted first input data as first output data at a first data output,</claim-text>
<claim-text>encrypting or decrypting second input data with a second computing block and outputting the encrypted or decrypted second input data as second output data at a second data output, and</claim-text>
<claim-text>assigning the first output data either partially or completely as part of the first input data to the first computing block and assigning same either partially or completely as part of the second input data to the second computing block.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. A computer program product including executable program code on a non-transitory machine-readable media, wherein the program code is adapted to carry out the method as set forth in <claim-ref idref="CLM-00018">claim 18</claim-ref> upon execution on a computer. </claim-text>
</claim>
</claims>
</us-patent-grant>
